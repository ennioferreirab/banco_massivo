[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3022",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3022/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3022/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3022/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3022",
        "id": 1671411716,
        "node_id": "PR_kwDOIPDwls5OfWMt",
        "number": 3022,
        "title": "Add twitter tweet loader",
        "user": {
            "login": "liaokongVFX",
            "id": 13622183,
            "node_id": "MDQ6VXNlcjEzNjIyMTgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/13622183?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liaokongVFX",
            "html_url": "https://github.com/liaokongVFX",
            "followers_url": "https://api.github.com/users/liaokongVFX/followers",
            "following_url": "https://api.github.com/users/liaokongVFX/following{/other_user}",
            "gists_url": "https://api.github.com/users/liaokongVFX/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liaokongVFX/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liaokongVFX/subscriptions",
            "organizations_url": "https://api.github.com/users/liaokongVFX/orgs",
            "repos_url": "https://api.github.com/users/liaokongVFX/repos",
            "events_url": "https://api.github.com/users/liaokongVFX/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liaokongVFX/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-17T15:10:05Z",
        "updated_at": "2023-04-18T04:51:47Z",
        "closed_at": "2023-04-18T04:51:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3022",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3022",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3022.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3022.patch",
            "merged_at": null
        },
        "body": "I have added a Twitter tweet loader to collect tweets from specified users.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3022/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3022/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3021",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3021/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3021/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3021/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3021",
        "id": 1671375023,
        "node_id": "PR_kwDOIPDwls5OfOLj",
        "number": 3021,
        "title": "bump version to 142",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-17T14:54:24Z",
        "updated_at": "2023-04-17T15:00:03Z",
        "closed_at": "2023-04-17T15:00:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3021",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3021",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3021.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3021.patch",
            "merged_at": "2023-04-17T15:00:01Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3021/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3021/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3020",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3020/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3020/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3020/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3020",
        "id": 1671366990,
        "node_id": "PR_kwDOIPDwls5OfMZ3",
        "number": 3020,
        "title": "Include debugging instructions for getting setup in CONTRIBUTING.md",
        "user": {
            "login": "ngundotra",
            "id": 7481857,
            "node_id": "MDQ6VXNlcjc0ODE4NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7481857?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngundotra",
            "html_url": "https://github.com/ngundotra",
            "followers_url": "https://api.github.com/users/ngundotra/followers",
            "following_url": "https://api.github.com/users/ngundotra/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngundotra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngundotra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngundotra/subscriptions",
            "organizations_url": "https://api.github.com/users/ngundotra/orgs",
            "repos_url": "https://api.github.com/users/ngundotra/repos",
            "events_url": "https://api.github.com/users/ngundotra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngundotra/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-17T14:50:40Z",
        "updated_at": "2023-04-17T16:55:04Z",
        "closed_at": "2023-04-17T15:34:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3020",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3020",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3020.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3020.patch",
            "merged_at": "2023-04-17T15:34:07Z"
        },
        "body": "Running tests is good sanity check for new users to ensure their development environment is setup correctly.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3020/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3020/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3019",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3019/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3019/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3019/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3019",
        "id": 1671351672,
        "node_id": "PR_kwDOIPDwls5OfJG1",
        "number": 3019,
        "title": "Update Characters notebook",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-17T14:42:32Z",
        "updated_at": "2023-04-17T14:48:50Z",
        "closed_at": "2023-04-17T14:48:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3019",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3019",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3019.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3019.patch",
            "merged_at": "2023-04-17T14:48:49Z"
        },
        "body": "- Most important - fixes the relevance_fn name in the notebook to align with the docs\r\n\r\n- Updates comments for the summary:\r\n<img width=\"787\" alt=\"image\" src=\"https://user-images.githubusercontent.com/130414180/232520616-2a99e8c3-a821-40c2-a0d5-3f3ea196c9bb.png\">\r\n\r\n- The new conversation is a bit better, still unfortunate they try to schedule a followup.\r\n- Rm the max dialogue turns argument to the conversation function",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3019/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3019/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3018",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3018/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3018/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3018/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3018",
        "id": 1671299579,
        "node_id": "PR_kwDOIPDwls5Oe91N",
        "number": 3018,
        "title": "Clean Comments on Characters Notebook",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-17T14:19:45Z",
        "updated_at": "2023-04-17T14:37:53Z",
        "closed_at": "2023-04-17T14:37:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3018",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3018",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3018.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3018.patch",
            "merged_at": null
        },
        "body": "- Clean up the \"summary\" comment\r\n<img width=\"690\" alt=\"image\" src=\"https://user-images.githubusercontent.com/130414180/232514076-da1408d1-8c7f-423d-854e-c149b2520a97.png\">\r\n- Tweak the conversation lead-in question to make it go on a bit longer\r\n- clean up another comment\r\n- clean up retriever name\r\n- Reran",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3018/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3018/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3017",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3017/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3017/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3017/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3017",
        "id": 1671234135,
        "node_id": "I_kwDOIPDwls5jnQJX",
        "number": 3017,
        "title": "Import error and undefined symbol",
        "user": {
            "login": "Mahathi-Bhagavatula",
            "id": 7352856,
            "node_id": "MDQ6VXNlcjczNTI4NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7352856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mahathi-Bhagavatula",
            "html_url": "https://github.com/Mahathi-Bhagavatula",
            "followers_url": "https://api.github.com/users/Mahathi-Bhagavatula/followers",
            "following_url": "https://api.github.com/users/Mahathi-Bhagavatula/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mahathi-Bhagavatula/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mahathi-Bhagavatula/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mahathi-Bhagavatula/subscriptions",
            "organizations_url": "https://api.github.com/users/Mahathi-Bhagavatula/orgs",
            "repos_url": "https://api.github.com/users/Mahathi-Bhagavatula/repos",
            "events_url": "https://api.github.com/users/Mahathi-Bhagavatula/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mahathi-Bhagavatula/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-04-17T13:51:59Z",
        "updated_at": "2023-11-16T16:08:31Z",
        "closed_at": "2023-11-16T16:08:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\nwhen I am trying to index the documents using cromadb, I am getting the following error. When looked into it, understood it is the compatibility isssue. But couldn't exactly find what packages are the hnswlib compatible with.\r\n\r\nImportError: /anaconda3/envs/myenv/lib/python3.9/site-packages/hnswlib.cpython-39-x86_64-linux-gnu.so: undefined symbol: _ZNSt15__exception_ptr13exception_ptr10_M_releaseEv\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3017/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3017/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3016",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3016/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3016/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3016/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3016",
        "id": 1671070412,
        "node_id": "I_kwDOIPDwls5jmoLM",
        "number": 3016,
        "title": "Is there any quick way to save generated Documents and reload it?",
        "user": {
            "login": "weasteam",
            "id": 6238854,
            "node_id": "MDQ6VXNlcjYyMzg4NTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6238854?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/weasteam",
            "html_url": "https://github.com/weasteam",
            "followers_url": "https://api.github.com/users/weasteam/followers",
            "following_url": "https://api.github.com/users/weasteam/following{/other_user}",
            "gists_url": "https://api.github.com/users/weasteam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/weasteam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/weasteam/subscriptions",
            "organizations_url": "https://api.github.com/users/weasteam/orgs",
            "repos_url": "https://api.github.com/users/weasteam/repos",
            "events_url": "https://api.github.com/users/weasteam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/weasteam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-17T12:33:05Z",
        "updated_at": "2023-09-28T16:08:05Z",
        "closed_at": "2023-09-28T16:08:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Sometimes it is quick expensive to crawl all the URLs, is it possible to save the Documents and reload it later?\r\n\r\nFor example:\r\n\r\n```\r\nloader = GitbookLoader(\"https://docs.gitbook.com\")\r\npage_data = loader.load()\r\n```\r\n\r\nThen save the page_data to gitbook.json, could be in the format of \r\n```\r\n[\r\n    {\r\n        \"page_content\": \"...\",\r\n        \"metadata\": {\"source\": \"...\", \"title\": \"...\"}\r\n    }\r\n]\r\n```\r\n\r\nNext time when I want to resplit the document or rebuild embeddlings, I can do:\r\n```\r\ndocuments = JsonLoader(\"gitbook.json\")\r\n```\r\n\r\nIt would be great if both the `Save` function and `JsonLoader` can be developed.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3016/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3016/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3015",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3015/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3015/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3015/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3015",
        "id": 1670962150,
        "node_id": "PR_kwDOIPDwls5Od0gA",
        "number": 3015,
        "title": "Port format instructions fix from js",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-17T11:25:36Z",
        "updated_at": "2023-04-18T03:29:18Z",
        "closed_at": "2023-04-18T03:29:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3015",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3015",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3015.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3015.patch",
            "merged_at": "2023-04-18T03:29:17Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3015/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3015/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3014",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3014/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3014/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3014/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3014",
        "id": 1670958758,
        "node_id": "PR_kwDOIPDwls5Odzxn",
        "number": 3014,
        "title": "Nc/combining output parser",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-17T11:23:12Z",
        "updated_at": "2023-04-18T03:29:54Z",
        "closed_at": "2023-04-18T03:29:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3014",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3014",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3014.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3014.patch",
            "merged_at": "2023-04-18T03:29:53Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3014/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3014/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3013",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3013/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3013/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3013/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3013",
        "id": 1670925191,
        "node_id": "PR_kwDOIPDwls5Odsfs",
        "number": 3013,
        "title": "Support inference of `input_variables` from `jinja2` template",
        "user": {
            "login": "outday29",
            "id": 60956360,
            "node_id": "MDQ6VXNlcjYwOTU2MzYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/60956360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/outday29",
            "html_url": "https://github.com/outday29",
            "followers_url": "https://api.github.com/users/outday29/followers",
            "following_url": "https://api.github.com/users/outday29/following{/other_user}",
            "gists_url": "https://api.github.com/users/outday29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/outday29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/outday29/subscriptions",
            "organizations_url": "https://api.github.com/users/outday29/orgs",
            "repos_url": "https://api.github.com/users/outday29/repos",
            "events_url": "https://api.github.com/users/outday29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/outday29/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-17T11:02:54Z",
        "updated_at": "2023-04-18T18:18:41Z",
        "closed_at": "2023-04-18T03:31:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3013",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3013",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3013.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3013.patch",
            "merged_at": "2023-04-18T03:31:03Z"
        },
        "body": "`langchain.prompts.PromptTemplate` is unable to infer `input_variables` from jinja2 template. \r\n\r\n```python\r\n# Using langchain v0.0.141\r\ntemplate_string = \"\"\"\\\r\nHello world\r\nYour variable: {{ var }}\r\n{# This will not get rendered #}\r\n\r\n{% if verbose %}\r\nCongrats! You just turned on verbose mode and got extra messages!\r\n{% endif %}\r\n\"\"\"\r\n\r\ntemplate = PromptTemplate.from_template(template_string, template_format=\"jinja2\")\r\nprint(template.input_variables) # Output ['# This will not get rendered #', '% endif %', '% if verbose %']\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3013/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3013/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3012",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3012/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3012/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3012/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3012",
        "id": 1670911598,
        "node_id": "PR_kwDOIPDwls5Odpcw",
        "number": 3012,
        "title": "Add allowed and disallowed special arguments to BaseOpenAI",
        "user": {
            "login": "samcarmen",
            "id": 53148658,
            "node_id": "MDQ6VXNlcjUzMTQ4NjU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/53148658?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/samcarmen",
            "html_url": "https://github.com/samcarmen",
            "followers_url": "https://api.github.com/users/samcarmen/followers",
            "following_url": "https://api.github.com/users/samcarmen/following{/other_user}",
            "gists_url": "https://api.github.com/users/samcarmen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/samcarmen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/samcarmen/subscriptions",
            "organizations_url": "https://api.github.com/users/samcarmen/orgs",
            "repos_url": "https://api.github.com/users/samcarmen/repos",
            "events_url": "https://api.github.com/users/samcarmen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/samcarmen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-17T10:55:52Z",
        "updated_at": "2023-04-18T16:34:09Z",
        "closed_at": "2023-04-18T16:34:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3012",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3012",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3012.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3012.patch",
            "merged_at": "2023-04-18T16:34:09Z"
        },
        "body": "## Background\r\nThis PR fixes this error when there are special tokens when querying the chain:\r\n```\r\nEncountered text corresponding to disallowed special token '<|endofprompt|>'.\r\nIf you want this text to be encoded as a special token, pass it to `allowed_special`, e.g. `allowed_special={'<|endofprompt|>', ...}`.\r\nIf you want this text to be encoded as normal text, disable the check for this token by passing `disallowed_special=(enc.special_tokens_set - {'<|endofprompt|>'})`.\r\nTo disable this check for all special tokens, pass `disallowed_special=()`.\r\n```\r\n\r\nRefer to the code snippet below, it breaks in the chain line.\r\n```\r\n        chain = ConversationalRetrievalChain.from_llm(\r\n            ChatOpenAI(openai_api_key=OPENAI_API_KEY),\r\n            retriever=vectorstore.as_retriever(),\r\n            qa_prompt=prompt,\r\n            condense_question_prompt=condense_prompt,\r\n        )\r\n        answer = chain({\"question\": f\"{question}\"})\r\n```\r\nHowever `ChatOpenAI` class is not accepting `allowed_special` and `disallowed_special` at the moment so they cannot be passed to the `encode()` in `get_num_tokens` method to avoid the errors.\r\n\r\n\r\n## Change\r\n- Add `allowed_special` and `disallowed_special` attributes to `BaseOpenAI` class.\r\n- Pass in `allowed_special` and `disallowed_special` as arguments of `encode()` in tiktoken.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3012/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3012/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3011",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3011/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3011/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3011/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3011",
        "id": 1670863970,
        "node_id": "I_kwDOIPDwls5jl1xi",
        "number": 3011,
        "title": "\"NoIndexException: Index not found when initializing Chroma from a persisted directory\"",
        "user": {
            "login": "murasz",
            "id": 16989472,
            "node_id": "MDQ6VXNlcjE2OTg5NDcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16989472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/murasz",
            "html_url": "https://github.com/murasz",
            "followers_url": "https://api.github.com/users/murasz/followers",
            "following_url": "https://api.github.com/users/murasz/following{/other_user}",
            "gists_url": "https://api.github.com/users/murasz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/murasz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/murasz/subscriptions",
            "organizations_url": "https://api.github.com/users/murasz/orgs",
            "repos_url": "https://api.github.com/users/murasz/repos",
            "events_url": "https://api.github.com/users/murasz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/murasz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 38,
        "created_at": "2023-04-17T10:21:07Z",
        "updated_at": "2023-10-25T16:09:22Z",
        "closed_at": "2023-10-25T16:09:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am facing a problem when trying to use the Chroma vector store with a persisted index. I have already loaded a document, created embeddings for it, and saved those embeddings in Chroma. The script ran perfectly with LLM and also created the necessary files in the persistence directory (.chroma\\index). The files include:\r\n\r\nchroma-collections.parquet\r\nchroma-embeddings.parquet\r\nid_to_uuid_3508d87c-12d1-4bbe-ae7f-69a0ec3c6616.pkl\r\nindex_3508d87c-12d1-4bbe-ae7f-69a0ec3c6616.bin\r\nindex_metadata_3508d87c-12d1-4bbe-ae7f-69a0ec3c6616.pkl\r\nuuid_to_id_3508d87c-12d1-4bbe-ae7f-69a0ec3c6616.pkl\r\n\r\nHowever, when I try to initialize the Chroma instance using the persist_directory to utilize the previously saved embeddings, I encounter a NoIndexException error, stating \"Index not found, please create an instance before querying\".\r\n\r\nHere is a snippet of the code I am using in a Jupyter notebook:\r\n\r\n```\r\n# Section 1\r\nimport os\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.chains.question_answering import load_qa_chain\r\n\r\n# Load environment variables\r\n%reload_ext dotenv\r\n%dotenv info.env\r\nOPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")\r\n\r\n# Section 2 - Initialize Chroma without an embedding function\r\npersist_directory = '.chroma\\\\index'\r\ndb = Chroma(persist_directory=persist_directory)\r\n\r\n# Section 3\r\n# Load chat model and question answering chain\r\nllm = ChatOpenAI(model_name=\"gpt-3.5-turbo\", temperature=.5, openai_api_key=OPENAI_API_KEY)\r\nchain = load_qa_chain(llm, chain_type=\"stuff\")\r\n\r\n# Section 4\r\n# Run the chain on a sample query\r\nquery = \"The Question - Can you also cite the information you give after your answer?\"\r\ndocs = db.similarity_search(query)\r\nresponse = chain.run(input_documents=docs, question=query)\r\nprint(response)\r\n```\r\nPlease help me understand what might be causing this problem and suggest possible solutions. Additionally, I am curious if these pre-existing embeddings could be reused without incurring the same cost for generating Ada embeddings again, as the documents I am working with have lots of pages. Thanks in advance!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3011/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3011/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3010",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3010/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3010/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3010/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3010",
        "id": 1670843959,
        "node_id": "PR_kwDOIPDwls5OdaxB",
        "number": 3010,
        "title": "Fix incorrect value of outputKeys on AnalyzeDocumentsChain",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-17T10:09:49Z",
        "updated_at": "2023-04-18T03:32:48Z",
        "closed_at": "2023-04-18T03:32:47Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3010",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3010",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3010.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3010.patch",
            "merged_at": "2023-04-18T03:32:47Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3010/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3010/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3009",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3009/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3009/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3009/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3009",
        "id": 1670770219,
        "node_id": "PR_kwDOIPDwls5OdK4Y",
        "number": 3009,
        "title": "Add summarization as supported task for hugging face pipelines (to be used with memory conversation)",
        "user": {
            "login": "QuentinAmbard",
            "id": 96781,
            "node_id": "MDQ6VXNlcjk2Nzgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/96781?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/QuentinAmbard",
            "html_url": "https://github.com/QuentinAmbard",
            "followers_url": "https://api.github.com/users/QuentinAmbard/followers",
            "following_url": "https://api.github.com/users/QuentinAmbard/following{/other_user}",
            "gists_url": "https://api.github.com/users/QuentinAmbard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/QuentinAmbard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/QuentinAmbard/subscriptions",
            "organizations_url": "https://api.github.com/users/QuentinAmbard/orgs",
            "repos_url": "https://api.github.com/users/QuentinAmbard/repos",
            "events_url": "https://api.github.com/users/QuentinAmbard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/QuentinAmbard/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-17T09:26:26Z",
        "updated_at": "2023-09-13T08:27:31Z",
        "closed_at": "2023-09-13T08:27:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3009",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3009",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3009.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3009.patch",
            "merged_at": null
        },
        "body": "Currently only `text2text-generation` and `text-generation` are supported with `HuggingFacePipeline`\r\n\r\nThis PR adds a new task `summarization`\r\n\r\nThis allows adding a custom hugging face model with `ConversationSummaryMemory` memory in our chain:\r\n\r\n\r\n```\r\n  pipe_summary = pipeline(\"summarization\", model=\"sshleifer/distilbart-cnn-12-6\", tokenizer=\"sshleifer/distilbart-cnn-12-6\")\r\n\r\n  hf_summary = HuggingFacePipeline(pipeline=pipe_summary)\r\n  memory = ConversationSummaryMemory(llm=hf_summary, memory_key=\"chat_history\", input_key=\"human_input\")\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3009/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3009/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3008",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3008/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3008/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3008/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3008",
        "id": 1670767000,
        "node_id": "I_kwDOIPDwls5jleGY",
        "number": 3008,
        "title": "chatbot ui integration",
        "user": {
            "login": "Bitbitti",
            "id": 96861751,
            "node_id": "U_kgDOBcX-Nw",
            "avatar_url": "https://avatars.githubusercontent.com/u/96861751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Bitbitti",
            "html_url": "https://github.com/Bitbitti",
            "followers_url": "https://api.github.com/users/Bitbitti/followers",
            "following_url": "https://api.github.com/users/Bitbitti/following{/other_user}",
            "gists_url": "https://api.github.com/users/Bitbitti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Bitbitti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Bitbitti/subscriptions",
            "organizations_url": "https://api.github.com/users/Bitbitti/orgs",
            "repos_url": "https://api.github.com/users/Bitbitti/repos",
            "events_url": "https://api.github.com/users/Bitbitti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Bitbitti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-17T09:24:15Z",
        "updated_at": "2023-09-10T16:31:57Z",
        "closed_at": "2023-09-10T16:31:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "hello,\r\ni have an instance of chatbotui, configured with the chatgpt api.\r\nhow do i integrate longchain, so that it allows me to upload documents, which chatgpt will then have to read and use in the conversation?\r\nalso the memory functionality would be useful to integrate.\r\nthanks in advance to all",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3008/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3008/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3007",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3007/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3007/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3007/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3007",
        "id": 1670741139,
        "node_id": "I_kwDOIPDwls5jlXyT",
        "number": 3007,
        "title": "OpenAIEmbeddings can't be inherited",
        "user": {
            "login": "marv1nnnnn",
            "id": 19375557,
            "node_id": "MDQ6VXNlcjE5Mzc1NTU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19375557?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marv1nnnnn",
            "html_url": "https://github.com/marv1nnnnn",
            "followers_url": "https://api.github.com/users/marv1nnnnn/followers",
            "following_url": "https://api.github.com/users/marv1nnnnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/marv1nnnnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marv1nnnnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marv1nnnnn/subscriptions",
            "organizations_url": "https://api.github.com/users/marv1nnnnn/orgs",
            "repos_url": "https://api.github.com/users/marv1nnnnn/repos",
            "events_url": "https://api.github.com/users/marv1nnnnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marv1nnnnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-17T09:08:50Z",
        "updated_at": "2023-09-10T16:32:02Z",
        "closed_at": "2023-09-10T16:32:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I was trying to override the OpenAIEmbeddings class with some customized implementation and got this:\r\n```\r\nIn [1]: from langchain.embeddings.openai import OpenAIEmbeddings\r\n\r\nIn [2]: class O(OpenAIEmbeddings):\r\n   ...:     pass\r\n   ...: \r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-2-bc8ad24584c2> in <module>\r\n----> 1 class O(OpenAIEmbeddings):\r\n      2     pass\r\n      3 \r\n\r\n~/opt/miniconda3/lib/python3.9/site-packages/pydantic/main.cpython-39-darwin.so in pydantic.main.ModelMetaclass._new_()\r\n\r\n~/opt/miniconda3/lib/python3.9/site-packages/pydantic/utils.cpython-39-darwin.so in pydantic.utils.smart_deepcopy()\r\n\r\n~/opt/miniconda3/lib/python3.9/copy.py in deepcopy(x, memo, _nil)\r\n    144     copier = _deepcopy_dispatch.get(cls)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n    148         if issubclass(cls, type):\r\n\r\n~/opt/miniconda3/lib/python3.9/copy.py in _deepcopy_dict(x, memo, deepcopy)\r\n    228     memo[id(x)] = y\r\n    229     for key, value in x.items():\r\n--> 230         y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231     return y\r\n    232 d[dict] = _deepcopy_dict\r\n\r\n~/opt/miniconda3/lib/python3.9/copy.py in deepcopy(x, memo, _nil)\r\n    170                     y = x\r\n    171                 else:\r\n--> 172                     y = _reconstruct(x, memo, *rv)\r\n    173 \r\n    174     # If is its own copy, don't memoize.\r\n\r\n~/opt/miniconda3/lib/python3.9/copy.py in _reconstruct(x, memo, func, args, state, listiter, dictiter, deepcopy)\r\n    268     if state is not None:\r\n    269         if deep:\r\n--> 270             state = deepcopy(state, memo)\r\n    271         if hasattr(y, '_setstate_'):\r\n    272             y._setstate_(state)\r\n\r\n~/opt/miniconda3/lib/python3.9/copy.py in deepcopy(x, memo, _nil)\r\n    144     copier = _deepcopy_dispatch.get(cls)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n    148         if issubclass(cls, type):\r\n\r\n~/opt/miniconda3/lib/python3.9/copy.py in _deepcopy_tuple(x, memo, deepcopy)\r\n    208 \r\n    209 def _deepcopy_tuple(x, memo, deepcopy=deepcopy):\r\n--> 210     y = [deepcopy(a, memo) for a in x]\r\n    211     # We're not going to put the tuple in the memo, but it's still important we\r\n    212     # check for it, in case the tuple contains recursive mutable structures.\r\n\r\n~/opt/miniconda3/lib/python3.9/copy.py in <listcomp>(.0)\r\n    208 \r\n    209 def _deepcopy_tuple(x, memo, deepcopy=deepcopy):\r\n--> 210     y = [deepcopy(a, memo) for a in x]\r\n    211     # We're not going to put the tuple in the memo, but it's still important we\r\n    212     # check for it, in case the tuple contains recursive mutable structures.\r\n\r\n~/opt/miniconda3/lib/python3.9/copy.py in deepcopy(x, memo, _nil)\r\n    144     copier = _deepcopy_dispatch.get(cls)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n    148         if issubclass(cls, type):\r\n\r\n~/opt/miniconda3/lib/python3.9/copy.py in _deepcopy_dict(x, memo, deepcopy)\r\n    228     memo[id(x)] = y\r\n    229     for key, value in x.items():\r\n--> 230         y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231     return y\r\n    232 d[dict] = _deepcopy_dict\r\n\r\n~/opt/miniconda3/lib/python3.9/copy.py in deepcopy(x, memo, _nil)\r\n    170                     y = x\r\n    171                 else:\r\n--> 172                     y = _reconstruct(x, memo, *rv)\r\n    173 \r\n    174     # If is its own copy, don't memoize.\r\n\r\n~/opt/miniconda3/lib/python3.9/copy.py in _reconstruct(x, memo, func, args, state, listiter, dictiter, deepcopy)\r\n    262     if deep and args:\r\n    263         args = (deepcopy(arg, memo) for arg in args)\r\n--> 264     y = func(*args)\r\n    265     if deep:\r\n    266         memo[id(x)] = y\r\n\r\n~/opt/miniconda3/lib/python3.9/copy.py in <genexpr>(.0)\r\n    261     deep = memo is not None\r\n    262     if deep and args:\r\n--> 263         args = (deepcopy(arg, memo) for arg in args)\r\n    264     y = func(*args)\r\n    265     if deep:\r\n\r\n~/opt/miniconda3/lib/python3.9/copy.py in deepcopy(x, memo, _nil)\r\n    144     copier = _deepcopy_dispatch.get(cls)\r\n    145     if copier is not None:\r\n--> 146         y = copier(x, memo)\r\n    147     else:\r\n    148         if issubclass(cls, type):\r\n\r\n~/opt/miniconda3/lib/python3.9/copy.py in _deepcopy_tuple(x, memo, deepcopy)\r\n    208 \r\n    209 def _deepcopy_tuple(x, memo, deepcopy=deepcopy):\r\n--> 210     y = [deepcopy(a, memo) for a in x]\r\n    211     # We're not going to put the tuple in the memo, but it's still important we\r\n    212     # check for it, in case the tuple contains recursive mutable structures.\r\n\r\n~/opt/miniconda3/lib/python3.9/copy.py in <listcomp>(.0)\r\n    208 \r\n    209 def _deepcopy_tuple(x, memo, deepcopy=deepcopy):\r\n--> 210     y = [deepcopy(a, memo) for a in x]\r\n    211     # We're not going to put the tuple in the memo, but it's still important we\r\n    212     # check for it, in case the tuple contains recursive mutable structures.\r\n\r\n~/opt/miniconda3/lib/python3.9/copy.py in deepcopy(x, memo, _nil)\r\n    170                     y = x\r\n    171                 else:\r\n--> 172                     y = _reconstruct(x, memo, *rv)\r\n    173 \r\n    174     # If is its own copy, don't memoize.\r\n\r\n~/opt/miniconda3/lib/python3.9/copy.py in _reconstruct(x, memo, func, args, state, listiter, dictiter, deepcopy)\r\n    262     if deep and args:\r\n    263         args = (deepcopy(arg, memo) for arg in args)\r\n--> 264     y = func(*args)\r\n    265     if deep:\r\n    266         memo[id(x)] = y\r\n\r\n~/opt/miniconda3/lib/python3.9/typing.py in inner(*args, **kwds)\r\n    266             except TypeError:\r\n    267                 pass  # All real errors (not unhashable args) are raised below.\r\n--> 268             return func(*args, **kwds)\r\n    269         return inner\r\n    270 \r\n\r\n~/opt/miniconda3/lib/python3.9/typing.py in _getitem_(self, params)\r\n    901             return self.copy_with((p, _TypingEllipsis))\r\n    902         msg = \"Tuple[t0, t1, ...]: each t must be a type.\"\r\n--> 903         params = tuple(_type_check(p, msg) for p in params)\r\n    904         return self.copy_with(params)\r\n    905 \r\n\r\n~/opt/miniconda3/lib/python3.9/typing.py in <genexpr>(.0)\r\n    901             return self.copy_with((p, _TypingEllipsis))\r\n    902         msg = \"Tuple[t0, t1, ...]: each t must be a type.\"\r\n--> 903         params = tuple(_type_check(p, msg) for p in params)\r\n    904         return self.copy_with(params)\r\n    905 \r\n\r\n~/opt/miniconda3/lib/python3.9/typing.py in _type_check(arg, msg, is_argument)\r\n    155         return arg\r\n    156     if not callable(arg):\r\n--> 157         raise TypeError(f\"{msg} Got {arg!r:.100}.\")\r\n    158     return arg\r\n    159 \r\n\r\nTypeError: Tuple[t0, t1, ...]: each t must be a type. Got ().\r\n```\r\n\r\nChecked the code and seems not too much code is related to tuple. Any clues about how it happened?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3007/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3007/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3006",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3006/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3006/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3006/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3006",
        "id": 1670649685,
        "node_id": "I_kwDOIPDwls5jlBdV",
        "number": 3006,
        "title": "TimeWeightedVectorStoreRetriever not found",
        "user": {
            "login": "hama-jp",
            "id": 52596960,
            "node_id": "MDQ6VXNlcjUyNTk2OTYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/52596960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hama-jp",
            "html_url": "https://github.com/hama-jp",
            "followers_url": "https://api.github.com/users/hama-jp/followers",
            "following_url": "https://api.github.com/users/hama-jp/following{/other_user}",
            "gists_url": "https://api.github.com/users/hama-jp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hama-jp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hama-jp/subscriptions",
            "organizations_url": "https://api.github.com/users/hama-jp/orgs",
            "repos_url": "https://api.github.com/users/hama-jp/repos",
            "events_url": "https://api.github.com/users/hama-jp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hama-jp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-17T08:11:24Z",
        "updated_at": "2023-04-18T04:56:47Z",
        "closed_at": "2023-04-18T04:56:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello.\r\nI am trying the Time Weighted VectorStore Retriever example, \r\nbut I get an error at the following\r\n\r\nImportError: cannot import name 'TimeWeightedVectorStoreRetriever' from 'langchain.retrievers' (/usr/local/lib/python3.9/dist-packages/langchain/retrievers/__init__.py)\r\n\r\nThe version of langchain is 0.0.141, I think there is no library for TimeWeightedVectorStoreRetriever. Does anyone know how to solve this problem?\r\n\r\n/usr/local/lib/python3.9/dist-packages/langchain/retrievers/",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3006/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3006/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3005",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3005/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3005/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3005/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3005",
        "id": 1670584519,
        "node_id": "I_kwDOIPDwls5jkxjH",
        "number": 3005,
        "title": "Frequent request timed out error",
        "user": {
            "login": "KalakondaKrish",
            "id": 99705925,
            "node_id": "U_kgDOBfFkRQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/99705925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KalakondaKrish",
            "html_url": "https://github.com/KalakondaKrish",
            "followers_url": "https://api.github.com/users/KalakondaKrish/followers",
            "following_url": "https://api.github.com/users/KalakondaKrish/following{/other_user}",
            "gists_url": "https://api.github.com/users/KalakondaKrish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KalakondaKrish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KalakondaKrish/subscriptions",
            "organizations_url": "https://api.github.com/users/KalakondaKrish/orgs",
            "repos_url": "https://api.github.com/users/KalakondaKrish/repos",
            "events_url": "https://api.github.com/users/KalakondaKrish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KalakondaKrish/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 31,
        "created_at": "2023-04-17T07:28:20Z",
        "updated_at": "2023-11-03T09:27:27Z",
        "closed_at": "2023-04-19T02:57:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am getting this error whenever the time is greater than 60 seconds. I tried giving timeout=120 seconds in ChatOpenAI(). \r\n\r\n`Retrying langchain.chat_models.openai.ChatOpenAI.completion_with_retry.<locals>._completion_with_retry in 4.0 seconds as it raised Timeout: Request timed out: HTTPSConnectionPool(host='api.openai.com', port=443): Read timed out. (read timeout=60).`\r\n \r\nWhat is the reason for this issue and how can I rectify it?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3005/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3005/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3004",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3004/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3004/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3004/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3004",
        "id": 1670578212,
        "node_id": "PR_kwDOIPDwls5Och-d",
        "number": 3004,
        "title": "Check for source in metadata when reading documents for Q&A base prompt. Fixes #2944",
        "user": {
            "login": "cnhhoang850",
            "id": 65607230,
            "node_id": "MDQ6VXNlcjY1NjA3MjMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/65607230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cnhhoang850",
            "html_url": "https://github.com/cnhhoang850",
            "followers_url": "https://api.github.com/users/cnhhoang850/followers",
            "following_url": "https://api.github.com/users/cnhhoang850/following{/other_user}",
            "gists_url": "https://api.github.com/users/cnhhoang850/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cnhhoang850/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cnhhoang850/subscriptions",
            "organizations_url": "https://api.github.com/users/cnhhoang850/orgs",
            "repos_url": "https://api.github.com/users/cnhhoang850/repos",
            "events_url": "https://api.github.com/users/cnhhoang850/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cnhhoang850/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-17T07:24:26Z",
        "updated_at": "2023-04-23T02:47:16Z",
        "closed_at": "2023-04-18T03:33:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3004",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3004",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3004.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3004.patch",
            "merged_at": null
        },
        "body": "#2944\r\n\r\nQ&A base prompt classmethod from_llm use EXAMPLE_PROMPT as document_prompt, which requires source metadata for docs retrived from vectorstore. This add check for metadata to raise an error, asking the user to ingest data with source in metadata. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3004/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3004/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3003",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3003/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3003/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3003/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3003",
        "id": 1670569638,
        "node_id": "PR_kwDOIPDwls5OcgKU",
        "number": 3003,
        "title": "fixes #1214",
        "user": {
            "login": "cs0lar",
            "id": 62176855,
            "node_id": "MDQ6VXNlcjYyMTc2ODU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/62176855?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cs0lar",
            "html_url": "https://github.com/cs0lar",
            "followers_url": "https://api.github.com/users/cs0lar/followers",
            "following_url": "https://api.github.com/users/cs0lar/following{/other_user}",
            "gists_url": "https://api.github.com/users/cs0lar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cs0lar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cs0lar/subscriptions",
            "organizations_url": "https://api.github.com/users/cs0lar/orgs",
            "repos_url": "https://api.github.com/users/cs0lar/repos",
            "events_url": "https://api.github.com/users/cs0lar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cs0lar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-17T07:17:59Z",
        "updated_at": "2023-04-26T07:03:32Z",
        "closed_at": "2023-04-24T18:50:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3003",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3003",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3003.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3003.patch",
            "merged_at": "2023-04-24T18:50:55Z"
        },
        "body": "### Background\r\n\r\nContinuing to implement all the interface methods defined by the `VectorStore` class. This PR pertains to implementation of the `max_marginal_relevance_search_by_vector` method.\r\n\r\n### Changes\r\n\r\n- a `max_marginal_relevance_search_by_vector` method implementation has been added in `weaviate.py`\r\n- tests have been added to the the new method\r\n- vcr cassettes have been added for the weaviate tests\r\n\r\n### Test Plan\r\n\r\nAdded tests for the `max_marginal_relevance_search_by_vector` implementation\r\n\r\n### Change Safety\r\n\r\n- [x] I have added tests to cover my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3003/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3003/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3002",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3002/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3002/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3002/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3002",
        "id": 1670480210,
        "node_id": "I_kwDOIPDwls5jkYFS",
        "number": 3002,
        "title": "ValueError: Invalid file union\\Book1.csv. The FileType.UNK file type is not supported in partition.",
        "user": {
            "login": "ragvendra3898",
            "id": 62380006,
            "node_id": "MDQ6VXNlcjYyMzgwMDA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/62380006?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ragvendra3898",
            "html_url": "https://github.com/ragvendra3898",
            "followers_url": "https://api.github.com/users/ragvendra3898/followers",
            "following_url": "https://api.github.com/users/ragvendra3898/following{/other_user}",
            "gists_url": "https://api.github.com/users/ragvendra3898/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ragvendra3898/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ragvendra3898/subscriptions",
            "organizations_url": "https://api.github.com/users/ragvendra3898/orgs",
            "repos_url": "https://api.github.com/users/ragvendra3898/repos",
            "events_url": "https://api.github.com/users/ragvendra3898/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ragvendra3898/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-17T06:06:29Z",
        "updated_at": "2023-05-02T19:25:04Z",
        "closed_at": "2023-04-25T17:46:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\nI am using DirectoryLoader as document loader and for some of csv files getting below error\r\n\r\nValueError: Invalid file union\\Book1.csv. The FileType.UNK file type is not supported in partition.\r\n\r\ncan anyone suggest oplease, how to fix this, I will be thankful to you.\r\n\r\nThank You ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3002/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3002/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3001",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3001/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3001/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3001/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3001",
        "id": 1670473582,
        "node_id": "PR_kwDOIPDwls5OcLjW",
        "number": 3001,
        "title": "Added ImageCaptionLoader",
        "user": {
            "login": "seansaito",
            "id": 3626315,
            "node_id": "MDQ6VXNlcjM2MjYzMTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3626315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seansaito",
            "html_url": "https://github.com/seansaito",
            "followers_url": "https://api.github.com/users/seansaito/followers",
            "following_url": "https://api.github.com/users/seansaito/following{/other_user}",
            "gists_url": "https://api.github.com/users/seansaito/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seansaito/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seansaito/subscriptions",
            "organizations_url": "https://api.github.com/users/seansaito/orgs",
            "repos_url": "https://api.github.com/users/seansaito/repos",
            "events_url": "https://api.github.com/users/seansaito/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seansaito/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-17T06:01:53Z",
        "updated_at": "2023-04-18T03:35:39Z",
        "closed_at": "2023-04-18T03:35:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3001",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3001",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3001.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3001.patch",
            "merged_at": "2023-04-18T03:35:39Z"
        },
        "body": "First of all, thank you for creating this library! I'm super excited to use it for work & side projects :)\r\n\r\nThis PR adds the `ImageCaptionLoader`, another data loader class which loads the captions of images.\r\nUnder the hood, the `ImageCaptionLoader` uses the [BLIP](https://huggingface.co/Salesforce/blip-image-captioning-base) model to generate the captions.\r\n\r\n~I have a notebook with some examples of creating the loader and passing that into a vector store index for querying - happy to add that wherever necessary!~ -> Added",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3001/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3001/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3000",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3000/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3000/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3000/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3000",
        "id": 1670406409,
        "node_id": "I_kwDOIPDwls5jkGEJ",
        "number": 3000,
        "title": "CSV/Pandas Dataframe agent replying to questions irrelevant to data",
        "user": {
            "login": "AlvinNg89",
            "id": 45703815,
            "node_id": "MDQ6VXNlcjQ1NzAzODE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/45703815?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlvinNg89",
            "html_url": "https://github.com/AlvinNg89",
            "followers_url": "https://api.github.com/users/AlvinNg89/followers",
            "following_url": "https://api.github.com/users/AlvinNg89/following{/other_user}",
            "gists_url": "https://api.github.com/users/AlvinNg89/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AlvinNg89/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AlvinNg89/subscriptions",
            "organizations_url": "https://api.github.com/users/AlvinNg89/orgs",
            "repos_url": "https://api.github.com/users/AlvinNg89/repos",
            "events_url": "https://api.github.com/users/AlvinNg89/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AlvinNg89/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-17T04:57:28Z",
        "updated_at": "2023-09-18T16:19:52Z",
        "closed_at": "2023-09-18T16:19:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "CSV/Pandas Dataframe agent actually replies to question irrelevant to the data, this can be easily resolved by including an extra line in the prompt to not reply to questions irrelevant to the dataframe.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3000/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3000/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2999",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2999/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2999/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2999/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2999",
        "id": 1670350169,
        "node_id": "PR_kwDOIPDwls5Obw0T",
        "number": 2999,
        "title": "Add decorator",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-17T03:45:09Z",
        "updated_at": "2023-04-19T23:15:09Z",
        "closed_at": "2023-04-19T23:15:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2999",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2999",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2999.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2999.patch",
            "merged_at": null
        },
        "body": "Could do this to add the decorator support.\r\n\r\nDoesnt yet support positional args since\r\n\r\n```\r\ntry:\r\n            observation = self._run(**run_input)\r\n        except (Exception, KeyboardInterrupt) as e:\r\n            self.callback_manager.on_tool_error(e, verbose=verbose_)\r\n            raise e\r\n```\r\n\r\npasses everything in as kwargs",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2999/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2999/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2998",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2998/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2998/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2998/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2998",
        "id": 1670326089,
        "node_id": "PR_kwDOIPDwls5Obr47",
        "number": 2998,
        "title": "Stringify `AgentType` before saving to yaml",
        "user": {
            "login": "harupy",
            "id": 17039389,
            "node_id": "MDQ6VXNlcjE3MDM5Mzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/17039389?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harupy",
            "html_url": "https://github.com/harupy",
            "followers_url": "https://api.github.com/users/harupy/followers",
            "following_url": "https://api.github.com/users/harupy/following{/other_user}",
            "gists_url": "https://api.github.com/users/harupy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/harupy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/harupy/subscriptions",
            "organizations_url": "https://api.github.com/users/harupy/orgs",
            "repos_url": "https://api.github.com/users/harupy/repos",
            "events_url": "https://api.github.com/users/harupy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/harupy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-17T03:08:47Z",
        "updated_at": "2023-04-18T03:43:40Z",
        "closed_at": "2023-04-18T03:43:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2998",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2998",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2998.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2998.patch",
            "merged_at": "2023-04-18T03:43:39Z"
        },
        "body": "Code to reproduce the issue (with `langchain==0.0.141`):\r\n\r\n```python\r\nfrom langchain.agents import initialize_agent, load_tools\r\nfrom langchain.llms import OpenAI\r\n\r\nllm = OpenAI(temperature=0.9, verbose=True)\r\ntools = load_tools([\"llm-math\"], llm=llm)\r\nagent = initialize_agent(tools, llm, agent=\"zero-shot-react-description\", verbose=True)\r\nagent.save_agent(\"agent.yaml\")\r\nwith open(\"agent.yaml\") as f:\r\n    print(f.read())\r\n```\r\n\r\nOutput:\r\n\r\n```\r\n_type: !!python/object/apply:langchain.agents.agent_types.AgentType\r\n- zero-shot-react-description\r\nallowed_tools:\r\n- Calculator\r\n...\r\n```\r\n\r\nI expected `_type` to be `zero-shot-react-description` but it's actually not. This PR fixes it by stringifying `AgentType` (`Enum`).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2998/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2998/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2997",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2997/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2997/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2997/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2997",
        "id": 1670278618,
        "node_id": "I_kwDOIPDwls5jjm3a",
        "number": 2997,
        "title": " ConversationChain class variable missing when running example from the docs?",
        "user": {
            "login": "darth-kcaj",
            "id": 30683873,
            "node_id": "MDQ6VXNlcjMwNjgzODcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/30683873?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darth-kcaj",
            "html_url": "https://github.com/darth-kcaj",
            "followers_url": "https://api.github.com/users/darth-kcaj/followers",
            "following_url": "https://api.github.com/users/darth-kcaj/following{/other_user}",
            "gists_url": "https://api.github.com/users/darth-kcaj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/darth-kcaj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/darth-kcaj/subscriptions",
            "organizations_url": "https://api.github.com/users/darth-kcaj/orgs",
            "repos_url": "https://api.github.com/users/darth-kcaj/repos",
            "events_url": "https://api.github.com/users/darth-kcaj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/darth-kcaj/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-17T02:08:33Z",
        "updated_at": "2023-09-10T16:32:12Z",
        "closed_at": "2023-09-10T16:32:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "While trying to figure out how to save persistent memory, I've come across what I believe to be an error in the docs:\r\nRunning the example verbatim produces an error. \r\n[Source](https://python.langchain.com/en/latest/modules/memory/types/entity_summary_memory.html#using-in-a-chain)\r\n```\r\n\r\nfrom langchain.chains import ConversationChain\r\nfrom langchain.memory import ConversationEntityMemory\r\nfrom langchain.memory.prompt import ENTITY_MEMORY_CONVERSATION_TEMPLATE\r\nfrom pydantic import BaseModel\r\nfrom typing import List, Dict, Any\r\n\r\nconversation = ConversationChain(\r\n    llm=llm, \r\n    verbose=True,\r\n    prompt=ENTITY_MEMORY_CONVERSATION_TEMPLATE,\r\n    memory=ConversationEntityMemory(llm=llm)\r\n)\r\nconversation.predict(input=\"Deven & Sam are working on a hackathon project\")\r\nconversation.memory.store \r\n\r\n```\r\nconversation.memory.store does not exist. \r\nAre the doc's incorrect? Happy to contribute toward a fix, just looking for some direction on what the correct implementation should be in this usecase.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2997/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2997/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2996",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2996/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2996/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2996/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2996",
        "id": 1670271781,
        "node_id": "I_kwDOIPDwls5jjlMl",
        "number": 2996,
        "title": "Vector Store Creator from Figma loader throws an error",
        "user": {
            "login": "Bouhoum",
            "id": 8154179,
            "node_id": "MDQ6VXNlcjgxNTQxNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8154179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Bouhoum",
            "html_url": "https://github.com/Bouhoum",
            "followers_url": "https://api.github.com/users/Bouhoum/followers",
            "following_url": "https://api.github.com/users/Bouhoum/following{/other_user}",
            "gists_url": "https://api.github.com/users/Bouhoum/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Bouhoum/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Bouhoum/subscriptions",
            "organizations_url": "https://api.github.com/users/Bouhoum/orgs",
            "repos_url": "https://api.github.com/users/Bouhoum/repos",
            "events_url": "https://api.github.com/users/Bouhoum/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Bouhoum/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-17T02:02:23Z",
        "updated_at": "2023-06-22T05:40:00Z",
        "closed_at": "2023-04-17T03:56:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello everyone! I am new to using langchain and I am currently facing an issue with the figma loader. I have followed the steps outlined in the documentation, but I am receiving a TypeError with the following message:\r\n\r\n`TypeError: expected string or bytes-like object`\r\n\r\nThe error occurs when I try to create a vector store index using the code `index = VectorstoreIndexCreator().from_loaders([figma_loader])`. I have been stuck on this for a while and would really appreciate any help that I can get.\r\n\r\n`----> 2 index = VectorstoreIndexCreator().from_loaders([figma_loader])\r\n      3 figma_doc_retriever = index.vectorstore.as_retriever()\r\n\r\n11 frames\r\n[/usr/lib/python3.9/http/client.py](https://localhost:8080/#) in putheader(self, header, *values)\r\n   1260                 values[i] = str(one_value).encode('ascii')\r\n   1261 \r\n-> 1262             if _is_illegal_header_value(values[i]):\r\n   1263                 raise ValueError('Invalid header value %r' % (values[i],))\r\n   1264 \r\n\r\nTypeError: expected string or bytes-like object`\r\n\r\nI have already checked the repository's issue tracker but haven't found any solutions that address my specific problem. I have also provided relevant code snippets and steps I have taken so far.\r\n\r\nThank you in advance for your help! I am looking forward to hearing from you soon.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2996/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2996/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2995",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2995/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2995/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2995/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2995",
        "id": 1670171709,
        "node_id": "PR_kwDOIPDwls5ObLu4",
        "number": 2995,
        "title": "Add argument for recursive loading of Google Drive documents",
        "user": {
            "login": "BenSchZA",
            "id": 13078998,
            "node_id": "MDQ6VXNlcjEzMDc4OTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/13078998?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BenSchZA",
            "html_url": "https://github.com/BenSchZA",
            "followers_url": "https://api.github.com/users/BenSchZA/followers",
            "following_url": "https://api.github.com/users/BenSchZA/following{/other_user}",
            "gists_url": "https://api.github.com/users/BenSchZA/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BenSchZA/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BenSchZA/subscriptions",
            "organizations_url": "https://api.github.com/users/BenSchZA/orgs",
            "repos_url": "https://api.github.com/users/BenSchZA/repos",
            "events_url": "https://api.github.com/users/BenSchZA/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BenSchZA/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T22:32:57Z",
        "updated_at": "2023-04-18T16:10:56Z",
        "closed_at": "2023-04-18T03:49:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2995",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2995",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2995.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2995.patch",
            "merged_at": "2023-04-18T03:49:47Z"
        },
        "body": "This PR adds an argument to `GoogleDriveLoader` for recursive loading of Google Drive documents, set to False by default.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2995/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2995/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2994",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2994/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2994/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2994/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2994",
        "id": 1670161722,
        "node_id": "PR_kwDOIPDwls5ObJuz",
        "number": 2994,
        "title": "Harrison/confluent loader",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T22:01:14Z",
        "updated_at": "2023-04-18T03:23:47Z",
        "closed_at": "2023-04-18T03:23:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2994",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2994",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2994.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2994.patch",
            "merged_at": "2023-04-18T03:23:46Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2994/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2994/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2993",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2993/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2993/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2993/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2993",
        "id": 1670154910,
        "node_id": "PR_kwDOIPDwls5ObIYh",
        "number": 2993,
        "title": "Pass kwargs to get OpenSearch client from_texts",
        "user": {
            "login": "naveentatikonda",
            "id": 89161683,
            "node_id": "MDQ6VXNlcjg5MTYxNjgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/89161683?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naveentatikonda",
            "html_url": "https://github.com/naveentatikonda",
            "followers_url": "https://api.github.com/users/naveentatikonda/followers",
            "following_url": "https://api.github.com/users/naveentatikonda/following{/other_user}",
            "gists_url": "https://api.github.com/users/naveentatikonda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/naveentatikonda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/naveentatikonda/subscriptions",
            "organizations_url": "https://api.github.com/users/naveentatikonda/orgs",
            "repos_url": "https://api.github.com/users/naveentatikonda/repos",
            "events_url": "https://api.github.com/users/naveentatikonda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/naveentatikonda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T21:39:37Z",
        "updated_at": "2023-04-18T03:44:30Z",
        "closed_at": "2023-04-18T03:44:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2993",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2993",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2993.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2993.patch",
            "merged_at": "2023-04-18T03:44:30Z"
        },
        "body": "### Description\r\nPass kwargs to get OpenSearch client from `from_texts` function\r\n\r\n### Issues Resolved\r\nhttps://github.com/hwchase17/langchain/issues/2819",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2993/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2993/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2992",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2992/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2992/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2992/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2992",
        "id": 1670153786,
        "node_id": "PR_kwDOIPDwls5ObIKb",
        "number": 2992,
        "title": "Add GoogleSQL prompt",
        "user": {
            "login": "BenSchZA",
            "id": 13078998,
            "node_id": "MDQ6VXNlcjEzMDc4OTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/13078998?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BenSchZA",
            "html_url": "https://github.com/BenSchZA",
            "followers_url": "https://api.github.com/users/BenSchZA/followers",
            "following_url": "https://api.github.com/users/BenSchZA/following{/other_user}",
            "gists_url": "https://api.github.com/users/BenSchZA/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BenSchZA/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BenSchZA/subscriptions",
            "organizations_url": "https://api.github.com/users/BenSchZA/orgs",
            "repos_url": "https://api.github.com/users/BenSchZA/repos",
            "events_url": "https://api.github.com/users/BenSchZA/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BenSchZA/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T21:35:09Z",
        "updated_at": "2023-04-18T16:11:55Z",
        "closed_at": "2023-04-18T03:44:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2992",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2992",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2992.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2992.patch",
            "merged_at": "2023-04-18T03:44:54Z"
        },
        "body": "This PR extends upon @jzluo 's PR #2748 which addressed dialect-specific issues with SQL prompts, and adds a prompt that uses backticks for column names when querying BigQuery. See [GoogleSQL quoted identifiers](https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical#quoted_identifiers).\r\n\r\nAdditionally, the SQL agent currently uses a generic prompt. Not sure how best to adopt the same optional dialect-specific prompts as above, but will consider making an issue and PR for that too. See [langchain/agents/agent_toolkits/sql/prompt.py](langchain/agents/agent_toolkits/sql/prompt.py).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2992/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2992/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2991",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2991/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2991/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2991/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2991",
        "id": 1670143578,
        "node_id": "I_kwDOIPDwls5jjF5a",
        "number": 2991,
        "title": "Unable to find installation candidates for torch (1.13.1)",
        "user": {
            "login": "joybro",
            "id": 619328,
            "node_id": "MDQ6VXNlcjYxOTMyOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/619328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joybro",
            "html_url": "https://github.com/joybro",
            "followers_url": "https://api.github.com/users/joybro/followers",
            "following_url": "https://api.github.com/users/joybro/following{/other_user}",
            "gists_url": "https://api.github.com/users/joybro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joybro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joybro/subscriptions",
            "organizations_url": "https://api.github.com/users/joybro/orgs",
            "repos_url": "https://api.github.com/users/joybro/repos",
            "events_url": "https://api.github.com/users/joybro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joybro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-16T21:17:07Z",
        "updated_at": "2023-06-05T19:28:37Z",
        "closed_at": "2023-04-19T19:52:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Hello all,\r\n\r\nI've been encountering an issue while trying to install the dependencies using ```poetry install -E all``` command. I am currently working on the latest commit (a9310a3e) in my development environment. Here is the error message I receive:\r\n\r\n```\r\n  RuntimeError\r\n\r\n  Unable to find installation candidates for torch (1.13.1)\r\n\r\n  at /opt/homebrew/Cellar/poetry/1.4.2/libexec/lib/python3.11/site-packages/poetry/installation/chooser.py:109 in choose_for\r\n      105\u2502\r\n      106\u2502             links.append(link)\r\n      107\u2502\r\n      108\u2502         if not links:\r\n    \u2192 109\u2502             raise RuntimeError(f\"Unable to find installation candidates for {package}\")\r\n      110\u2502\r\n      111\u2502         # Get the best link\r\n      112\u2502         chosen = max(links, key=lambda link: self._sort_key(package, link))\r\n      113\u2502\r\n```\r\n\r\nHas anyone else experienced this issue, and if so, have you found any solutions or workarounds? Any help or suggestions would be greatly appreciated.\r\n\r\nThank you!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2991/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2991/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2990",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2990/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2990/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2990/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2990",
        "id": 1670111690,
        "node_id": "I_kwDOIPDwls5ji-HK",
        "number": 2990,
        "title": "How to access data of a website using API token",
        "user": {
            "login": "Kashif-Raza6",
            "id": 96944736,
            "node_id": "U_kgDOBcdCYA",
            "avatar_url": "https://avatars.githubusercontent.com/u/96944736?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kashif-Raza6",
            "html_url": "https://github.com/Kashif-Raza6",
            "followers_url": "https://api.github.com/users/Kashif-Raza6/followers",
            "following_url": "https://api.github.com/users/Kashif-Raza6/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kashif-Raza6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kashif-Raza6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kashif-Raza6/subscriptions",
            "organizations_url": "https://api.github.com/users/Kashif-Raza6/orgs",
            "repos_url": "https://api.github.com/users/Kashif-Raza6/repos",
            "events_url": "https://api.github.com/users/Kashif-Raza6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kashif-Raza6/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-16T19:50:22Z",
        "updated_at": "2023-09-10T16:32:17Z",
        "closed_at": "2023-09-10T16:32:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "How can I access the data of a website using 'API TOKEN' and use that data in langchain for custom purpose?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2990/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2990/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2989",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2989/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2989/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2989/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2989",
        "id": 1670103479,
        "node_id": "PR_kwDOIPDwls5Oa94n",
        "number": 2989,
        "title": "consistently use getLogger(__name__), no root logger",
        "user": {
            "login": "anentropic",
            "id": 147840,
            "node_id": "MDQ6VXNlcjE0Nzg0MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/147840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anentropic",
            "html_url": "https://github.com/anentropic",
            "followers_url": "https://api.github.com/users/anentropic/followers",
            "following_url": "https://api.github.com/users/anentropic/following{/other_user}",
            "gists_url": "https://api.github.com/users/anentropic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anentropic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anentropic/subscriptions",
            "organizations_url": "https://api.github.com/users/anentropic/orgs",
            "repos_url": "https://api.github.com/users/anentropic/repos",
            "events_url": "https://api.github.com/users/anentropic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anentropic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T19:23:44Z",
        "updated_at": "2023-04-16T19:49:36Z",
        "closed_at": "2023-04-16T19:49:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2989",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2989",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2989.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2989.patch",
            "merged_at": "2023-04-16T19:49:35Z"
        },
        "body": "re https://github.com/hwchase17/langchain/issues/439#issuecomment-1510442791\r\n\r\nI think it's not polite for a library to use the root logger\r\n\r\nboth of these forms are also used:\r\n```\r\nlogger = logging.getLogger(__name__)\r\nlogger = logging.getLogger(__file__)\r\n```\r\nI am not sure if there is any reason behind one vs the other? (...I am guessing maybe just contributed by different people)\r\n\r\nit seems to me it'd be better to consistently use `logging.getLogger(__name__)`\r\n\r\nthis makes it easier for consumers of the library to set up log handlers, e.g. for everything with `langchain.` prefix",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2989/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2989/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2988",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2988/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2988/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2988/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2988",
        "id": 1670056700,
        "node_id": "I_kwDOIPDwls5jiwr8",
        "number": 2988,
        "title": "Got prompt token length error when using agent",
        "user": {
            "login": "ljdavns",
            "id": 87931249,
            "node_id": "MDQ6VXNlcjg3OTMxMjQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/87931249?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ljdavns",
            "html_url": "https://github.com/ljdavns",
            "followers_url": "https://api.github.com/users/ljdavns/followers",
            "following_url": "https://api.github.com/users/ljdavns/following{/other_user}",
            "gists_url": "https://api.github.com/users/ljdavns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ljdavns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ljdavns/subscriptions",
            "organizations_url": "https://api.github.com/users/ljdavns/orgs",
            "repos_url": "https://api.github.com/users/ljdavns/repos",
            "events_url": "https://api.github.com/users/ljdavns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ljdavns/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-16T17:27:10Z",
        "updated_at": "2023-09-10T16:32:24Z",
        "closed_at": "2023-09-10T16:32:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "the code is simple\r\n\r\n```\r\ndef load_vector_memory_from_dir(dir_path):\r\n    from langchain.document_loaders import DirectoryLoader\r\n    loader = DirectoryLoader(dir_path)\r\n    documents = loader.load()\r\n    text_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\n    texts = text_splitter.split_documents(documents)\r\n    return FAISS.from_documents(texts, OpenAIEmbeddings())\r\n\r\ndef get_answer_from_vector_memory(vector_memory, query):\r\n    from langchain.agents.agent_toolkits import (\r\n        create_vectorstore_agent,\r\n        VectorStoreToolkit,\r\n        VectorStoreInfo,\r\n    )\r\n    vectorstore_info = VectorStoreInfo(\r\n        name=\"software_requirement_specification\",\r\n        description=\"software requirement specification and other things you want to know\",\r\n        vectorstore=vector_memory\r\n    )\r\n    toolkit = VectorStoreToolkit(vectorstore_info=vectorstore_info)\r\n    agent_executor = create_vectorstore_agent(\r\n        llm=ChatOpenAI(temperature=0),\r\n        toolkit=toolkit,\r\n        verbose=True\r\n    )\r\n    answer = agent_executor.run(query)\r\n    return answer\r\n\r\ndef get_answer_from_vector_memory_and_web(text):\r\n    pass\r\n\r\nif __name__ == \"__main__\":\r\n    vector_store = load_vector_memory_from_dir(\"../../docs\")\r\n    get_answer_from_vector_memory(vector_store, \"What will be changed in the next version?\")\r\n```\r\ngot error\r\n```openai.error.InvalidRequestError: This model's maximum context length is 4097 tokens, however you requested 6542 tokens (6286 in your prompt; 256 for the completion). Please reduce your prompt; or completion length.```\r\n\r\nI searched for this issue but all of them are saying you should add an argument to retrievalQAChain etc to reduce the prompt length,but I'm using agents(to combine tools with docQA), there's no argument for me to change",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2988/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2988/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2987",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2987/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2987/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2987/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2987",
        "id": 1670050729,
        "node_id": "PR_kwDOIPDwls5OazMQ",
        "number": 2987,
        "title": "use output parsers in agents",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-16T17:11:41Z",
        "updated_at": "2023-05-19T17:16:33Z",
        "closed_at": "2023-04-16T20:15:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2987",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2987",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2987.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2987.patch",
            "merged_at": "2023-04-16T20:15:22Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2987/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2987/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2986",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2986/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2986/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2986/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2986",
        "id": 1670049688,
        "node_id": "PR_kwDOIPDwls5Oay_s",
        "number": 2986,
        "title": "Fix docs for parse_with_prompt",
        "user": {
            "login": "mausch",
            "id": 95194,
            "node_id": "MDQ6VXNlcjk1MTk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/95194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mausch",
            "html_url": "https://github.com/mausch",
            "followers_url": "https://api.github.com/users/mausch/followers",
            "following_url": "https://api.github.com/users/mausch/following{/other_user}",
            "gists_url": "https://api.github.com/users/mausch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mausch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mausch/subscriptions",
            "organizations_url": "https://api.github.com/users/mausch/orgs",
            "repos_url": "https://api.github.com/users/mausch/repos",
            "events_url": "https://api.github.com/users/mausch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mausch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T17:08:16Z",
        "updated_at": "2023-04-16T19:57:05Z",
        "closed_at": "2023-04-16T19:57:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2986",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2986",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2986.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2986.patch",
            "merged_at": "2023-04-16T19:57:05Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2986/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2986/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2985",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2985/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2985/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2985/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2985",
        "id": 1670041682,
        "node_id": "I_kwDOIPDwls5jitBS",
        "number": 2985,
        "title": "Bug : could not parse LLM output: `{llm_output}`\") when I run the same question several times",
        "user": {
            "login": "taweijm",
            "id": 105797032,
            "node_id": "U_kgDOBk5VqA",
            "avatar_url": "https://avatars.githubusercontent.com/u/105797032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/taweijm",
            "html_url": "https://github.com/taweijm",
            "followers_url": "https://api.github.com/users/taweijm/followers",
            "following_url": "https://api.github.com/users/taweijm/following{/other_user}",
            "gists_url": "https://api.github.com/users/taweijm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/taweijm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/taweijm/subscriptions",
            "organizations_url": "https://api.github.com/users/taweijm/orgs",
            "repos_url": "https://api.github.com/users/taweijm/repos",
            "events_url": "https://api.github.com/users/taweijm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/taweijm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-16T16:45:42Z",
        "updated_at": "2023-09-10T16:32:28Z",
        "closed_at": "2023-09-10T16:32:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm using these code :\r\n\r\nllm=ChatOpenAI(temperature=0)\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\nagent_chain = initialize_agent(tools, llm, agent=AgentType.CONVERSATIONAL_REACT_DESCRIPTION, verbose=True, memory=memory)\r\n\r\nI run this line several times \r\n\r\nagent_chain.run(input=\"Hi, how are you today ?\")\r\n\r\nthen these errors are show up\r\n\r\n[agents/conversational/base.py](https://localhost:8080/#) in _extract_tool_and_input(self, llm_output)\r\n     83         match = re.search(regex, llm_output)\r\n     84         if not match:\r\n---> 85             raise ValueError(f\"Could not parse LLM output: `{llm_output}`\")",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2985/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2985/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2984",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2984/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2984/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2984/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2984",
        "id": 1670023885,
        "node_id": "PR_kwDOIPDwls5OauDM",
        "number": 2984,
        "title": "Harrison/diffbot",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T15:48:50Z",
        "updated_at": "2023-04-16T16:11:25Z",
        "closed_at": "2023-04-16T16:11:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2984",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2984",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2984.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2984.patch",
            "merged_at": "2023-04-16T16:11:24Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2984/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2984/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2983",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2983/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2983/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2983/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2983",
        "id": 1670023811,
        "node_id": "PR_kwDOIPDwls5OauCL",
        "number": 2983,
        "title": "Use case: Semantic search over chat",
        "user": {
            "login": "bdcorps",
            "id": 6132555,
            "node_id": "MDQ6VXNlcjYxMzI1NTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6132555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bdcorps",
            "html_url": "https://github.com/bdcorps",
            "followers_url": "https://api.github.com/users/bdcorps/followers",
            "following_url": "https://api.github.com/users/bdcorps/following{/other_user}",
            "gists_url": "https://api.github.com/users/bdcorps/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bdcorps/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bdcorps/subscriptions",
            "organizations_url": "https://api.github.com/users/bdcorps/orgs",
            "repos_url": "https://api.github.com/users/bdcorps/repos",
            "events_url": "https://api.github.com/users/bdcorps/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bdcorps/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T15:48:33Z",
        "updated_at": "2023-04-18T03:46:09Z",
        "closed_at": "2023-04-18T03:46:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2983",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2983",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2983.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2983.patch",
            "merged_at": "2023-04-18T03:46:09Z"
        },
        "body": "This PR adds new use case for semantic search with Langchain - Search over a Group Chat\r\n\r\nWorking demo: https://twitter.com/thisissukh_/status/1647223328363679745\r\n\r\n- Uses Activeloop as the vector store\r\n- Includes a sample text chat conversation",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2983/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2983/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2982",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2982/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2982/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2982/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2982",
        "id": 1670023228,
        "node_id": "I_kwDOIPDwls5jiog8",
        "number": 2982,
        "title": "embedding function not passed properly to Chroma",
        "user": {
            "login": "meal",
            "id": 101297,
            "node_id": "MDQ6VXNlcjEwMTI5Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/101297?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/meal",
            "html_url": "https://github.com/meal",
            "followers_url": "https://api.github.com/users/meal/followers",
            "following_url": "https://api.github.com/users/meal/following{/other_user}",
            "gists_url": "https://api.github.com/users/meal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/meal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/meal/subscriptions",
            "organizations_url": "https://api.github.com/users/meal/orgs",
            "repos_url": "https://api.github.com/users/meal/repos",
            "events_url": "https://api.github.com/users/meal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/meal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2023-04-16T15:46:43Z",
        "updated_at": "2023-11-17T19:38:52Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Hi,\r\nI'm running official docker image from Chroma and using it via rest API (I need it in server mode for persistent storage in production deployment)\r\n\r\nWhen inserting documents (I'm loading pdfs) I'm getting \r\n\r\n`chromadb.api.models.Collection No embedding_function provided, using default embedding function: SentenceTransformerEmbeddingFunction`  \r\neven though I'm passing OpenAIEmbeddings() as embedding parameter\r\n\r\n```\r\nembeddings = OpenAIEmbeddings()\r\n    chroma_settings = Settings(\r\n        chroma_api_impl=\"rest\",\r\n        chroma_server_host=\"localhost\",\r\n        chroma_server_http_port=8000,\r\n        anonymized_telemetry=False,\r\n    )\r\n\r\n    \r\n    loader = PyPDFLoader(pdf_url)\r\n    pages = loader.load_and_split()\r\n    Chroma.from_documents(\r\n        documents=pages, embedding=embeddings, client_settings=chroma_settings\r\n    )\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2982/reactions",
            "total_count": 8,
            "+1": 8,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2982/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2981",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2981/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2981/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2981/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2981",
        "id": 1670022568,
        "node_id": "PR_kwDOIPDwls5OatzF",
        "number": 2981,
        "title": "Fix bug in svm.LinearSVC, add support for a relevancy_threshold (#2959)",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T15:44:31Z",
        "updated_at": "2023-04-16T19:57:19Z",
        "closed_at": "2023-04-16T19:57:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2981",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2981",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2981.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2981.patch",
            "merged_at": "2023-04-16T19:57:18Z"
        },
        "body": "- Modify SVMRetriever class to add an optional relevancy_threshold\r\n- Modify SVMRetriever.get_relevant_documents method to filter out documents with similarity scores below the relevancy threshold\r\n- Normalized the similarities to be between 0 and 1 so the relevancy_threshold makes more sense\r\n- The number of results are limited to the top k documents or the maximum number of relevant documents above the threshold, whichever is smaller\r\n\r\nThis code will now return the top self.k results (or less, if there are not enough results that meet the self.relevancy_threshold criteria).\r\n\r\nThe svm.LinearSVC implementation in scikit-learn is non-deterministic, which means\r\nSVMRetriever.from_texts([\"bar\", \"world\", \"foo\", \"hello\", \"foo bar\"]) could return [3 0 5 4 2 1] instead of [0 3 5 4 2 1] with a query of \"foo\".\r\nIf you pass in multiple \"foo\" texts, the order could be different each time. Here, we only care if the 0 is the first element, otherwise it will offset the text and similarities.\r\n\r\n\r\nExample:\r\n```python\r\nretriever = SVMRetriever.from_texts(\r\n  [\"foo\", \"bar\", \"world\", \"hello\", \"foo bar\"],\r\n  OpenAIEmbeddings(),\r\n  k=4,\r\n  relevancy_threshold=.25\r\n)\r\n\r\nresult = retriever.get_relevant_documents(\"foo\")\r\n```\r\nyields\r\n```python\r\n[Document(page_content='foo', metadata={}), Document(page_content='foo bar', metadata={})]\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2981/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2981/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2980",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2980/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2980/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2980/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2980",
        "id": 1669962934,
        "node_id": "I_kwDOIPDwls5jiZy2",
        "number": 2980,
        "title": "agent with LLAMA or GPT4All",
        "user": {
            "login": "captainst",
            "id": 23187023,
            "node_id": "MDQ6VXNlcjIzMTg3MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/23187023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/captainst",
            "html_url": "https://github.com/captainst",
            "followers_url": "https://api.github.com/users/captainst/followers",
            "following_url": "https://api.github.com/users/captainst/following{/other_user}",
            "gists_url": "https://api.github.com/users/captainst/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/captainst/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/captainst/subscriptions",
            "organizations_url": "https://api.github.com/users/captainst/orgs",
            "repos_url": "https://api.github.com/users/captainst/repos",
            "events_url": "https://api.github.com/users/captainst/events{/privacy}",
            "received_events_url": "https://api.github.com/users/captainst/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-04-16T13:03:52Z",
        "updated_at": "2023-11-28T16:12:05Z",
        "closed_at": "2023-11-28T16:12:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "This is actually half an issue, half an open disscussion topic.\r\nFollowing  #2898 , I tried the offline [LLAMA model](https://python.langchain.com/en/latest/modules/models/llms/integrations/llamacpp.html) with the same agent. And the result is somehow interesting:\r\nGiven the same prompt: \r\n```\r\nAnswer the following questions as best you can. You have access to the following tools:\r\n\r\nGoogle Search: A wrapper around Google Search. Useful for when you need to answer questions about current events. Input should be a search query.\r\nCalculator: Useful for when you need to answer questions about math.\r\n\r\nUse the following format:\r\n\r\nQuestion: the input question you must answer\r\nThought: you should always think about what to do\r\nAction: the action to take, should be one of [Google Search, Calculator]\r\nAction Input: the input to the action\r\nObservation: the result of the action\r\n... (this Thought/Action/Action Input/Observation can repeat N times)\r\nThought: I now know the final answer\r\nFinal Answer: the final answer to the original input question\r\n\r\nBegin!\r\n\r\nQuestion: Who is Leo DiCaprio's current girlfriend? What is her current age raised to the 0.43 power?\r\nThought: \r\n```\r\nThe reply from LlamaCpp, using prompttemplate is: \r\n```\r\nAction: Use Google Search\r\nAction Input: type in \"Leo DiCaprio\\'s girlfriend\"\r\nObservation: xxx\r\n...\r\n```\r\nYou see, the model is able to perform some \"reasoning\" from the prompt, and the response it generates, although not strictly consistant with what chatGPT or GPT4 does, is also correct in some sense. However, in his response, \"Action\" is **Use Google Search** rather than **Google Search**. It is not a deal as natural language. However,  it does pose problems when the agent uses regex (or, in a general way, a rule-based method) to select among different tools.\r\nI am thinking that for smaller, off-line models (not restricted to llamacpp or GPT4All), where they might not able to provide GPT4 consistant, but still human acceptable responses, how to make langchain better support them. I came up with 2 options:\r\n1. working on the regex and make them generalize as much as possible to the input diversity, as long as the meaning is correct. Altough It might end up again with a \"human engineered\" dilema.\r\n2. use some more generalize methods like those of \"sentiment classification\". I.e, to use the LLMs to classify on which tool to use for the next step, rather than using a regex mather.\r\n\r\nAny ideas ?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2980/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2980/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2979",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2979/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2979/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2979/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2979",
        "id": 1669957240,
        "node_id": "I_kwDOIPDwls5jiYZ4",
        "number": 2979,
        "title": "Cohere's multilingual model does not creating embeddings of CSV",
        "user": {
            "login": "taqihaider7",
            "id": 96980772,
            "node_id": "U_kgDOBcfPJA",
            "avatar_url": "https://avatars.githubusercontent.com/u/96980772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/taqihaider7",
            "html_url": "https://github.com/taqihaider7",
            "followers_url": "https://api.github.com/users/taqihaider7/followers",
            "following_url": "https://api.github.com/users/taqihaider7/following{/other_user}",
            "gists_url": "https://api.github.com/users/taqihaider7/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/taqihaider7/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/taqihaider7/subscriptions",
            "organizations_url": "https://api.github.com/users/taqihaider7/orgs",
            "repos_url": "https://api.github.com/users/taqihaider7/repos",
            "events_url": "https://api.github.com/users/taqihaider7/events{/privacy}",
            "received_events_url": "https://api.github.com/users/taqihaider7/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-16T12:54:00Z",
        "updated_at": "2023-09-10T16:32:33Z",
        "closed_at": "2023-09-10T16:32:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I trying to create embeddings of CSV file of size around 137 MB which has both numerical and text column (total of 6). using the following code\r\n`from langchain.document_loaders.csv_loader import CSVLoader\r\nloader = CSVLoader(file_path=path, encoding=\"utf-8\")\r\ndata = loader.load()\r\nembeddings = CohereEmbeddings(model=\"multilingual-22-12\", cohere_api_key= cohere_api_key)\r\ndoc_result = embeddings.embed_documents([data])`\r\n\r\n**above gives the following error**\r\n\r\n`TypeError                                 Traceback (most recent call last)\r\n[<ipython-input-13-6789a7d649fe>](https://localhost:8080/#) in <cell line: 1>()\r\n----> 1 doc_result = embeddings.embed_documents([data])\r\n\r\n15 frames\r\n[/usr/lib/python3.9/json/encoder.py](https://localhost:8080/#) in default(self, o)\r\n    177 \r\n    178         \"\"\"\r\n--> 179         raise TypeError(f'Object of type {o.__class__.__name__} '\r\n    180                         f'is not JSON serializable')\r\n    181 \r\n\r\n**TypeError: Object of type Document is not JSON serializable**`\r\n\r\n\r\n\r\nI trying to figuring out the solution but seems like it hard. Please help me in this regard, I will be very thankful",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2979/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2979/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2978",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2978/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2978/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2978/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2978",
        "id": 1669945651,
        "node_id": "I_kwDOIPDwls5jiVkz",
        "number": 2978,
        "title": "Parsing issue when using Python client",
        "user": {
            "login": "vinay-k12",
            "id": 19322429,
            "node_id": "MDQ6VXNlcjE5MzIyNDI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19322429?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vinay-k12",
            "html_url": "https://github.com/vinay-k12",
            "followers_url": "https://api.github.com/users/vinay-k12/followers",
            "following_url": "https://api.github.com/users/vinay-k12/following{/other_user}",
            "gists_url": "https://api.github.com/users/vinay-k12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vinay-k12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vinay-k12/subscriptions",
            "organizations_url": "https://api.github.com/users/vinay-k12/orgs",
            "repos_url": "https://api.github.com/users/vinay-k12/repos",
            "events_url": "https://api.github.com/users/vinay-k12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vinay-k12/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-16T12:44:04Z",
        "updated_at": "2023-09-10T16:32:38Z",
        "closed_at": "2023-09-10T16:32:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm using this output parser. But when the agent is passing this to the action state, I'm getting parsing error. \r\n\r\n<img width=\"1441\" alt=\"image\" src=\"https://user-images.githubusercontent.com/19322429/232312291-41effe19-0c95-4bb3-8528-ffe9f6571f89.png\">\r\n\r\nHere is the parser: \r\n\r\nclass CustomOutputParser(AgentOutputParser):\r\n    \r\n    def parse(self, llm_output: str) -> Union[AgentAction, AgentFinish]:\r\n        print(f\"Input to parse function: {llm_output}\")  # Print the input\r\n        # Check if agent should finish\r\n        if \"Final Answer:\" in llm_output:\r\n            return AgentFinish(\r\n                # Return values is generally always a dictionary with a single `output` key\r\n                # It is not recommended to try anything else at the moment :)\r\n                return_values={\"output\": llm_output.split(\"Final Answer:\")[-1].strip()},\r\n                log=llm_output,\r\n            )\r\n        # Parse out the action and action input\r\n        regex = r\"Action: (.*?)[\\n]*Action Input:([\\s\\S]*?)(?=\\n\\n|$)\"\r\n        match = re.search(regex, llm_output, re.DOTALL)\r\n        if not match:\r\n            raise ValueError(f\"Could not parse LLM output: `{llm_output}`\")\r\n        action = match.group(1).strip()\r\n        action_input = match.group(2).strip()\r\n        # Return the action and action input\r\n        return AgentAction(tool=action, tool_input=action_input.strip(\" \").strip('\"'), log=llm_output)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2978/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2978/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2977",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2977/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2977/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2977/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2977",
        "id": 1669939515,
        "node_id": "PR_kwDOIPDwls5Oac7i",
        "number": 2977,
        "title": "Fix typos",
        "user": {
            "login": "mnahinkhan",
            "id": 23176423,
            "node_id": "MDQ6VXNlcjIzMTc2NDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/23176423?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mnahinkhan",
            "html_url": "https://github.com/mnahinkhan",
            "followers_url": "https://api.github.com/users/mnahinkhan/followers",
            "following_url": "https://api.github.com/users/mnahinkhan/following{/other_user}",
            "gists_url": "https://api.github.com/users/mnahinkhan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mnahinkhan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mnahinkhan/subscriptions",
            "organizations_url": "https://api.github.com/users/mnahinkhan/orgs",
            "repos_url": "https://api.github.com/users/mnahinkhan/repos",
            "events_url": "https://api.github.com/users/mnahinkhan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mnahinkhan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T12:32:10Z",
        "updated_at": "2023-04-16T15:28:36Z",
        "closed_at": "2023-04-16T15:28:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2977",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2977",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2977.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2977.patch",
            "merged_at": "2023-04-16T15:28:36Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2977/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2977/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2976",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2976/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2976/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2976/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2976",
        "id": 1669937971,
        "node_id": "I_kwDOIPDwls5jiTsz",
        "number": 2976,
        "title": "Caching for chat based models.",
        "user": {
            "login": "gd1m3y",
            "id": 27780878,
            "node_id": "MDQ6VXNlcjI3NzgwODc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/27780878?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gd1m3y",
            "html_url": "https://github.com/gd1m3y",
            "followers_url": "https://api.github.com/users/gd1m3y/followers",
            "following_url": "https://api.github.com/users/gd1m3y/following{/other_user}",
            "gists_url": "https://api.github.com/users/gd1m3y/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gd1m3y/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gd1m3y/subscriptions",
            "organizations_url": "https://api.github.com/users/gd1m3y/orgs",
            "repos_url": "https://api.github.com/users/gd1m3y/repos",
            "events_url": "https://api.github.com/users/gd1m3y/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gd1m3y/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-04-16T12:27:30Z",
        "updated_at": "2023-12-14T16:02:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Is there any docs or related issues for caching the  Azure chat open ai  responses i cannot find one.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2976/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2976/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2975",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2975/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2975/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2975/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2975",
        "id": 1669936294,
        "node_id": "I_kwDOIPDwls5jiTSm",
        "number": 2975,
        "title": "Question: RetrievalQA.from_chain_type - logging the full prompt",
        "user": {
            "login": "DrorSegev",
            "id": 12187079,
            "node_id": "MDQ6VXNlcjEyMTg3MDc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/12187079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DrorSegev",
            "html_url": "https://github.com/DrorSegev",
            "followers_url": "https://api.github.com/users/DrorSegev/followers",
            "following_url": "https://api.github.com/users/DrorSegev/following{/other_user}",
            "gists_url": "https://api.github.com/users/DrorSegev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DrorSegev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DrorSegev/subscriptions",
            "organizations_url": "https://api.github.com/users/DrorSegev/orgs",
            "repos_url": "https://api.github.com/users/DrorSegev/repos",
            "events_url": "https://api.github.com/users/DrorSegev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DrorSegev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-16T12:21:39Z",
        "updated_at": "2023-09-29T16:08:36Z",
        "closed_at": "2023-09-29T16:08:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\nI'm using RetrievalQA.from_chain_type to query local index.\r\nI'm using Custom Prompt as input (query and context)\r\nIs there a way to log or inspect the actual prompt that is sent to OpenAI API including the query, and the context?\r\nAlso \r\nHow to control the number of documents the retriever returns? \r\nIs there an option to see the accuracy score of each doc in the source_documents returned by the query?\r\n\r\nThanks\r\nDror ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2975/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2975/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2974",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2974/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2974/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2974/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2974",
        "id": 1669873862,
        "node_id": "PR_kwDOIPDwls5OaP5y",
        "number": 2974,
        "title": "Wli/jira tool",
        "user": {
            "login": "zywilliamli",
            "id": 32046231,
            "node_id": "MDQ6VXNlcjMyMDQ2MjMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/32046231?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zywilliamli",
            "html_url": "https://github.com/zywilliamli",
            "followers_url": "https://api.github.com/users/zywilliamli/followers",
            "following_url": "https://api.github.com/users/zywilliamli/following{/other_user}",
            "gists_url": "https://api.github.com/users/zywilliamli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zywilliamli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zywilliamli/subscriptions",
            "organizations_url": "https://api.github.com/users/zywilliamli/orgs",
            "repos_url": "https://api.github.com/users/zywilliamli/repos",
            "events_url": "https://api.github.com/users/zywilliamli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zywilliamli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-04-16T11:18:45Z",
        "updated_at": "2023-04-21T00:58:47Z",
        "closed_at": "2023-04-18T03:58:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2974",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2974",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2974.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2974.patch",
            "merged_at": "2023-04-18T03:58:04Z"
        },
        "body": "This pr adds a basic Jira toolkit for langchain\r\n\r\nDue to the number of different api calls jira has, this version of the toolkit only provides 3 dedicated tools (with description and examples) for the 3 most common apis, it also provides a 4th catch all tool to try guess which api call to use given just information about which underlying library the tools use. \r\n\r\nI'll keep working on making this toolkit more robust, keen for any feedback or ideas :) ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2974/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2974/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2973",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2973/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2973/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2973/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2973",
        "id": 1669870714,
        "node_id": "I_kwDOIPDwls5jiDR6",
        "number": 2973,
        "title": "pypdf has compatible problems with pdf files which contain complex encodings",
        "user": {
            "login": "leonzy",
            "id": 1266997,
            "node_id": "MDQ6VXNlcjEyNjY5OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1266997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leonzy",
            "html_url": "https://github.com/leonzy",
            "followers_url": "https://api.github.com/users/leonzy/followers",
            "following_url": "https://api.github.com/users/leonzy/following{/other_user}",
            "gists_url": "https://api.github.com/users/leonzy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leonzy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leonzy/subscriptions",
            "organizations_url": "https://api.github.com/users/leonzy/orgs",
            "repos_url": "https://api.github.com/users/leonzy/repos",
            "events_url": "https://api.github.com/users/leonzy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leonzy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-16T11:10:01Z",
        "updated_at": "2023-09-10T16:32:43Z",
        "closed_at": "2023-09-10T16:32:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "consider rewrite with pypdf2",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2973/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2973/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2972",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2972/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2972/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2972/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2972",
        "id": 1669864627,
        "node_id": "PR_kwDOIPDwls5OaN_I",
        "number": 2972,
        "title": "Try to make the last iteration count",
        "user": {
            "login": "alexiri",
            "id": 5055697,
            "node_id": "MDQ6VXNlcjUwNTU2OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5055697?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexiri",
            "html_url": "https://github.com/alexiri",
            "followers_url": "https://api.github.com/users/alexiri/followers",
            "following_url": "https://api.github.com/users/alexiri/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexiri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexiri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexiri/subscriptions",
            "organizations_url": "https://api.github.com/users/alexiri/orgs",
            "repos_url": "https://api.github.com/users/alexiri/repos",
            "events_url": "https://api.github.com/users/alexiri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexiri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-16T11:00:28Z",
        "updated_at": "2023-08-29T16:46:28Z",
        "closed_at": "2023-04-24T23:33:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2972",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2972",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2972.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2972.patch",
            "merged_at": null
        },
        "body": "This may or may not fix #2970, and there might be a better way of doing this. Ideally, you'd want a different prompt, as there's no point in confusing the LLM with the tools, etc., but that sounds like it would be a much bigger change and I'd like to get some input first.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2972/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2972/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2971",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2971/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2971/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2971/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2971",
        "id": 1669850988,
        "node_id": "I_kwDOIPDwls5jh-ds",
        "number": 2971,
        "title": "Support for Vertex AI Matching Engine as a Vector Store",
        "user": {
            "login": "olaf-hoops",
            "id": 35558544,
            "node_id": "MDQ6VXNlcjM1NTU4NTQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35558544?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olaf-hoops",
            "html_url": "https://github.com/olaf-hoops",
            "followers_url": "https://api.github.com/users/olaf-hoops/followers",
            "following_url": "https://api.github.com/users/olaf-hoops/following{/other_user}",
            "gists_url": "https://api.github.com/users/olaf-hoops/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olaf-hoops/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olaf-hoops/subscriptions",
            "organizations_url": "https://api.github.com/users/olaf-hoops/orgs",
            "repos_url": "https://api.github.com/users/olaf-hoops/repos",
            "events_url": "https://api.github.com/users/olaf-hoops/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olaf-hoops/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-16T10:34:51Z",
        "updated_at": "2023-09-25T16:08:43Z",
        "closed_at": "2023-09-25T16:08:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Would be really nice to have support for Googles Vertex AI Matching Engine as a Vector Store:\r\n[Google Cloud Vector Store](https://cloud.google.com/vertex-ai/docs/matching-engine/overview?hl=en)\r\n\r\nI'm currently building an AI application with langchain agents using Google Cloud as my backend.\r\nSo im trying not to use to many third party services to keep everything as tidy as possible. \r\nUsing a Google solution for the vector store would be a huge plus.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2971/reactions",
            "total_count": 5,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2971/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2970",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2970/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2970/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2970/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2970",
        "id": 1669841936,
        "node_id": "I_kwDOIPDwls5jh8QQ",
        "number": 2970,
        "title": "Tool agents should not try to use a tool on their last iteration",
        "user": {
            "login": "alexiri",
            "id": 5055697,
            "node_id": "MDQ6VXNlcjUwNTU2OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5055697?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexiri",
            "html_url": "https://github.com/alexiri",
            "followers_url": "https://api.github.com/users/alexiri/followers",
            "following_url": "https://api.github.com/users/alexiri/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexiri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexiri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexiri/subscriptions",
            "organizations_url": "https://api.github.com/users/alexiri/orgs",
            "repos_url": "https://api.github.com/users/alexiri/repos",
            "events_url": "https://api.github.com/users/alexiri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexiri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-04-16T10:25:52Z",
        "updated_at": "2023-12-06T17:46:55Z",
        "closed_at": "2023-12-06T17:46:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "When you set a max_iterations on a tool agent and it is down to its last iteration, it doesn't make sense for it to try to use a tool. Using a tool would require another iteration, which will be blocked.\r\n\r\nThere should be some way for the agent to realize it's out of iterations and just return a `Final answer` with whatever information its managed to get.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2970/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2970/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2969",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2969/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2969/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2969/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2969",
        "id": 1669829842,
        "node_id": "PR_kwDOIPDwls5OaGfl",
        "number": 2969,
        "title": "Enforce maximum Wikipedia query length",
        "user": {
            "login": "alexiri",
            "id": 5055697,
            "node_id": "MDQ6VXNlcjUwNTU2OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5055697?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexiri",
            "html_url": "https://github.com/alexiri",
            "followers_url": "https://api.github.com/users/alexiri/followers",
            "following_url": "https://api.github.com/users/alexiri/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexiri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexiri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexiri/subscriptions",
            "organizations_url": "https://api.github.com/users/alexiri/orgs",
            "repos_url": "https://api.github.com/users/alexiri/repos",
            "events_url": "https://api.github.com/users/alexiri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexiri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T10:03:39Z",
        "updated_at": "2023-04-16T15:30:57Z",
        "closed_at": "2023-04-16T15:30:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2969",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2969",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2969.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2969.patch",
            "merged_at": "2023-04-16T15:30:57Z"
        },
        "body": "I got the following stacktrace when the agent was trying to search Wikipedia with a huge query:\r\n\r\n```\r\nThought:{\r\n    \"action\": \"Wikipedia\",\r\n    \"action_input\": \"Outstanding is a song originally performed by the Gap Band and written by member Raymond Calhoun. The song originally appeared on the group's platinum-selling 1982 album Gap Band IV. It is one of their signature songs and biggest hits, reaching the number one spot on the U.S. R&B Singles Chart in February 1983.  \\\"Outstanding\\\" peaked at number 51 on the Billboard Hot 100.\"\r\n}\r\nTraceback (most recent call last):\r\n  File \"/usr/src/app/tests/chat.py\", line 121, in <module>\r\n    answer = agent_chain.run(input=question)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/chains/base.py\", line 216, in run\r\n    return self(kwargs)[self.output_keys[0]]\r\n           ^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/chains/base.py\", line 116, in __call__\r\n    raise e\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/chains/base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n              ^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/agents/agent.py\", line 828, in _call\r\n    next_step_output = self._take_next_step(\r\n                       ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/agents/agent.py\", line 725, in _take_next_step\r\n    observation = tool.run(\r\n                  ^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/tools/base.py\", line 73, in run\r\n    raise e\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/tools/base.py\", line 70, in run\r\n    observation = self._run(tool_input)\r\n                  ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/agents/tools.py\", line 17, in _run\r\n    return self.func(tool_input)\r\n           ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/utilities/wikipedia.py\", line 40, in run\r\n    search_results = self.wiki_client.search(query)\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/wikipedia/util.py\", line 28, in __call__\r\n    ret = self._cache[key] = self.fn(*args, **kwargs)\r\n                             ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/wikipedia/wikipedia.py\", line 109, in search\r\n    raise WikipediaException(raw_results['error']['info'])\r\nwikipedia.exceptions.WikipediaException: An unknown error occured: \"Search request is longer than the maximum allowed length. (Actual: 373; allowed: 300)\". Please report it on GitHub!\r\n```\r\n\r\nThis commit limits the maximum size of the query passed to Wikipedia to avoid this issue.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2969/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2969/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2968",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2968/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2968/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2968/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2968",
        "id": 1669796108,
        "node_id": "I_kwDOIPDwls5jhxEM",
        "number": 2968,
        "title": "CHAT_CONVERSATIONAL_REACT_DESCRIPTION vs CONVERSATIONAL_REACT_DESCRIPTION ",
        "user": {
            "login": "leewsimpson",
            "id": 2132765,
            "node_id": "MDQ6VXNlcjIxMzI3NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2132765?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leewsimpson",
            "html_url": "https://github.com/leewsimpson",
            "followers_url": "https://api.github.com/users/leewsimpson/followers",
            "following_url": "https://api.github.com/users/leewsimpson/following{/other_user}",
            "gists_url": "https://api.github.com/users/leewsimpson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leewsimpson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leewsimpson/subscriptions",
            "organizations_url": "https://api.github.com/users/leewsimpson/orgs",
            "repos_url": "https://api.github.com/users/leewsimpson/repos",
            "events_url": "https://api.github.com/users/leewsimpson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leewsimpson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2023-04-16T09:03:51Z",
        "updated_at": "2023-10-19T05:46:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "using CHAT_CONVERSATIONAL_REACT_DESCRIPTION the agent does not chain together tools - only the first iteration, then stops. The other AgenTypes work as expected.\r\n\r\n```\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\n\r\nllm = AzureChatOpenAI(\r\n    temperature=0, \r\n    deployment_name=\"gpt4\", \r\n    model_name=\"gpt-4\")\r\n    \r\ntools = load_tools([\"google-search\", \"requests_all\", \"llm-math\", \"wolfram-alpha\", \"wikipedia\", \"pal-math\"], llm=llm)\r\n\r\nagent_zero_shot = initialize_agent(\r\n    tools, \r\n    llm,\r\n    agent=AgentType.CHAT_ZERO_SHOT_REACT_DESCRIPTION,\r\n    memory=memory,\r\n    verbose=True)\r\n\r\nresponse = agent_zero_shot.run(input=\"Who is Leo DiCaprio's girlfriend? What is her current age raised to the 0.43 power?\")\r\nprint(response)\r\n# returns: Eden Polani's age raised to the 0.43 power is approximately 3.55.\r\n\r\n# agent_conversational = initialize_agent(\r\n#     tools, \r\n#     llm,\r\n#     agent=AgentType.CHAT_CONVERSATIONAL_REACT_DESCRIPTION,\r\n#     memory=memory,  # I think it ignores this\r\n#     verbose=True)\r\n\r\n# response = agent_conversational.run(input=\"Who is Leo DiCaprio's girlfriend? What is her current age raised to the 0.43 power?\")\r\n# print(response) \r\n# returns: Finished chain. Leonardo DiCaprio's most recent girlfriend is rumored to be Eden Polani, who is 19 years old. To calculate her age raised to the 0.43 power, I'll need to use a calculator.\r\n```\r\n\r\nCONVERSATIONAL_REACT_DESCRIPTION works as expected. However given I'm using Azure and GPT4 I only have the chat interface. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2968/reactions",
            "total_count": 13,
            "+1": 12,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2968/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2967",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2967/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2967/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2967/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2967",
        "id": 1669768015,
        "node_id": "I_kwDOIPDwls5jhqNP",
        "number": 2967,
        "title": "ChatOpenai (gpt3-turbo) isn't compatible with create_pandas_dataframe_agent, create_csv_agent etc",
        "user": {
            "login": "Architectshwet",
            "id": 21039313,
            "node_id": "MDQ6VXNlcjIxMDM5MzEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/21039313?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Architectshwet",
            "html_url": "https://github.com/Architectshwet",
            "followers_url": "https://api.github.com/users/Architectshwet/followers",
            "following_url": "https://api.github.com/users/Architectshwet/following{/other_user}",
            "gists_url": "https://api.github.com/users/Architectshwet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Architectshwet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Architectshwet/subscriptions",
            "organizations_url": "https://api.github.com/users/Architectshwet/orgs",
            "repos_url": "https://api.github.com/users/Architectshwet/repos",
            "events_url": "https://api.github.com/users/Architectshwet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Architectshwet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-16T08:21:47Z",
        "updated_at": "2023-09-18T16:19:58Z",
        "closed_at": "2023-09-18T16:19:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I tried creating a pandas dataframe agent (using create_dataframe_agent) with ChatOpenai (gpt3-turbo) as the LLM! But langchain isn't able to parse the LLM's output code. Ofcoure when I use davince model it works \r\n\r\n### This is the code:\r\n\r\nfrom langchain.llms import OpenAIChat\r\nopenaichat = OpenAIChat(model_name=\"gpt-3.5-turbo\")\r\nagent = create_csv_agent(openaichat, 'fishfry-locations.csv', verbose=True)\r\nx = agent.run(\"How many rows for church?\")\r\n\r\n### This is the output and error\r\n\r\n> Entering new AgentExecutor chain...\r\nThought: We need to filter the dataframe to only include rows where the venue_type is \"Church\" and then count the number of rows.\r\nAction: python_repl_ast\r\nAction Input:\r\n```\r\nlen(df[df['venue_type'] == 'Church'])\r\n```\r\nObservation: invalid syntax (<unknown>, line 1)\r\nThought:I need to fix the syntax error by adding a closing parenthesis at the end of the input.\r\nAction: python_repl_ast\r\nAction Input:\r\n```\r\nlen(df[df['venue_type'] == 'Church']) \r\n\r\n```\r\nObservation: invalid syntax (<unknown>, line 1)\r\nThought:\r\n\r\n> Finished chain.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2967/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2967/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2966",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2966/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2966/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2966/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2966",
        "id": 1669698229,
        "node_id": "PR_kwDOIPDwls5OZqpF",
        "number": 2966,
        "title": "tiktoken: Relax Python version check",
        "user": {
            "login": "dnouri",
            "id": 56370,
            "node_id": "MDQ6VXNlcjU2Mzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/56370?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dnouri",
            "html_url": "https://github.com/dnouri",
            "followers_url": "https://api.github.com/users/dnouri/followers",
            "following_url": "https://api.github.com/users/dnouri/following{/other_user}",
            "gists_url": "https://api.github.com/users/dnouri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dnouri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dnouri/subscriptions",
            "organizations_url": "https://api.github.com/users/dnouri/orgs",
            "repos_url": "https://api.github.com/users/dnouri/repos",
            "events_url": "https://api.github.com/users/dnouri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dnouri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T05:48:57Z",
        "updated_at": "2023-04-16T15:44:22Z",
        "closed_at": "2023-04-16T15:44:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2966",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2966",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2966.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2966.patch",
            "merged_at": "2023-04-16T15:44:21Z"
        },
        "body": "tiktoken supports Python >= 3.8, see here:\r\nhttps://github.com/openai/tiktoken/blob/e1c661edf3604706bb2db59cfc7bf92f73c09761/pyproject.toml#L10\r\n\r\nAlso works fine when trying locally!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2966/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2966/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2965",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2965/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2965/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2965/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2965",
        "id": 1669692490,
        "node_id": "PR_kwDOIPDwls5OZpZZ",
        "number": 2965,
        "title": "#2473 Confluence document loader",
        "user": {
            "login": "Jflick58",
            "id": 22459070,
            "node_id": "MDQ6VXNlcjIyNDU5MDcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/22459070?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jflick58",
            "html_url": "https://github.com/Jflick58",
            "followers_url": "https://api.github.com/users/Jflick58/followers",
            "following_url": "https://api.github.com/users/Jflick58/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jflick58/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jflick58/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jflick58/subscriptions",
            "organizations_url": "https://api.github.com/users/Jflick58/orgs",
            "repos_url": "https://api.github.com/users/Jflick58/repos",
            "events_url": "https://api.github.com/users/Jflick58/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jflick58/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-16T05:35:57Z",
        "updated_at": "2023-04-19T15:14:09Z",
        "closed_at": "2023-04-16T21:54:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2965",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2965",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2965.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2965.patch",
            "merged_at": "2023-04-16T21:54:54Z"
        },
        "body": "I ported the Confluence document loader from here (https://llamahub.ai/l/confluence) in response to #2473 \r\n\r\nAlthough the Llamahub code supports converting the documents back to the LangChain format, I think there's value in not needing to install the Llamahub code to run the Confluence loader from there first. \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2965/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2965/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2964",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2964/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2964/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2964/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2964",
        "id": 1669665453,
        "node_id": "PR_kwDOIPDwls5OZj4Q",
        "number": 2964,
        "title": "Added Discord document loader",
        "user": {
            "login": "rajtilakjee",
            "id": 117737297,
            "node_id": "U_kgDOBwSHUQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/117737297?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rajtilakjee",
            "html_url": "https://github.com/rajtilakjee",
            "followers_url": "https://api.github.com/users/rajtilakjee/followers",
            "following_url": "https://api.github.com/users/rajtilakjee/following{/other_user}",
            "gists_url": "https://api.github.com/users/rajtilakjee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rajtilakjee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rajtilakjee/subscriptions",
            "organizations_url": "https://api.github.com/users/rajtilakjee/orgs",
            "repos_url": "https://api.github.com/users/rajtilakjee/repos",
            "events_url": "https://api.github.com/users/rajtilakjee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rajtilakjee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-16T04:23:22Z",
        "updated_at": "2023-04-17T06:35:40Z",
        "closed_at": "2023-04-17T06:35:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2964",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2964",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2964.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2964.patch",
            "merged_at": null
        },
        "body": "- added discord.py in \\langchain\\document_loaders\\\r\n- modified langchain/document_loaders/__init__.py to accomodate discord.py",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2964/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2964/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2963",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2963/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2963/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2963/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2963",
        "id": 1669652313,
        "node_id": "PR_kwDOIPDwls5OZhP3",
        "number": 2963,
        "title": "allow tokentextsplitters to use model name to select encoder",
        "user": {
            "login": "timothyasp",
            "id": 707699,
            "node_id": "MDQ6VXNlcjcwNzY5OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/707699?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timothyasp",
            "html_url": "https://github.com/timothyasp",
            "followers_url": "https://api.github.com/users/timothyasp/followers",
            "following_url": "https://api.github.com/users/timothyasp/following{/other_user}",
            "gists_url": "https://api.github.com/users/timothyasp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timothyasp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timothyasp/subscriptions",
            "organizations_url": "https://api.github.com/users/timothyasp/orgs",
            "repos_url": "https://api.github.com/users/timothyasp/repos",
            "events_url": "https://api.github.com/users/timothyasp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timothyasp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T03:29:03Z",
        "updated_at": "2023-04-16T15:33:48Z",
        "closed_at": "2023-04-16T15:33:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2963",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2963",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2963.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2963.patch",
            "merged_at": "2023-04-16T15:33:48Z"
        },
        "body": "Fixes a bug I was seeing when the `TokenTextSplitter` was correctly splitting text under the gpt3.5-turbo token limit, but when firing the prompt off too openai, it'd come back with an error that we were over the context limit.\r\n\r\ngpt3.5-turbo and gpt-4 use `cl100k_base` tokenizer, and so the counts are just always off with the default `gpt-2` encoder.\r\n\r\nIt's possible to pass along the encoding to the `TokenTextSplitter`, but it's much simpler to pass the model name of the LLM. No more concern about keeping the tokenizer and llm model in sync :)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2963/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2963/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2961",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2961/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2961/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2961/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2961",
        "id": 1669627976,
        "node_id": "PR_kwDOIPDwls5OZcmt",
        "number": 2961,
        "title": "tools refactor",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-16T01:12:34Z",
        "updated_at": "2023-04-18T04:41:45Z",
        "closed_at": "2023-04-18T04:35:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2961",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2961",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2961.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2961.patch",
            "merged_at": "2023-04-18T04:35:29Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2961/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2961/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2960",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2960/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2960/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2960/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2960",
        "id": 1669619704,
        "node_id": "PR_kwDOIPDwls5OZa-5",
        "number": 2960,
        "title": "Add an example tutorial for using PDFMinerPDFasHTMLLoader",
        "user": {
            "login": "rc19",
            "id": 7935430,
            "node_id": "MDQ6VXNlcjc5MzU0MzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7935430?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rc19",
            "html_url": "https://github.com/rc19",
            "followers_url": "https://api.github.com/users/rc19/followers",
            "following_url": "https://api.github.com/users/rc19/following{/other_user}",
            "gists_url": "https://api.github.com/users/rc19/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rc19/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rc19/subscriptions",
            "organizations_url": "https://api.github.com/users/rc19/orgs",
            "repos_url": "https://api.github.com/users/rc19/repos",
            "events_url": "https://api.github.com/users/rc19/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rc19/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T00:28:21Z",
        "updated_at": "2023-04-16T15:34:39Z",
        "closed_at": "2023-04-16T15:34:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2960",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2960",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2960.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2960.patch",
            "merged_at": "2023-04-16T15:34:39Z"
        },
        "body": "Last week I added the `PDFMinerPDFasHTMLLoader`. I am adding some example code in the notebook to serve as a tutorial for how that loader can be used to create snippets of a pdf that are structured within sections. All the other loaders only provide the `Document` objects segmented by pages but that's pretty loose given the amount of other metadata that can be extracted. \r\n\r\nWith the new loader, one can leverage font-size of the text to decide when a new sections starts and can segment the text more semantically as shown in the tutorial notebook. The cell shows that we are able to find the content of entire section under **Related Work** for the example pdf which is spread across 2 pages and hence is stored as two separate documents by other loaders",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2960/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2960/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2959",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2959/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2959/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2959/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2959",
        "id": 1669602298,
        "node_id": "PR_kwDOIPDwls5OZXgH",
        "number": 2959,
        "title": "Fix bug in svm.LinearSVC, add support for a relevancy_threshold",
        "user": {
            "login": "account00001",
            "id": 52767641,
            "node_id": "MDQ6VXNlcjUyNzY3NjQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/52767641?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/account00001",
            "html_url": "https://github.com/account00001",
            "followers_url": "https://api.github.com/users/account00001/followers",
            "following_url": "https://api.github.com/users/account00001/following{/other_user}",
            "gists_url": "https://api.github.com/users/account00001/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/account00001/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/account00001/subscriptions",
            "organizations_url": "https://api.github.com/users/account00001/orgs",
            "repos_url": "https://api.github.com/users/account00001/repos",
            "events_url": "https://api.github.com/users/account00001/events{/privacy}",
            "received_events_url": "https://api.github.com/users/account00001/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T23:18:11Z",
        "updated_at": "2023-04-16T18:16:53Z",
        "closed_at": "2023-04-16T15:35:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2959",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2959",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2959.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2959.patch",
            "merged_at": "2023-04-16T15:35:44Z"
        },
        "body": "- Modify SVMRetriever class to add an optional relevancy_threshold\r\n- Modify SVMRetriever.get_relevant_documents method to filter out documents with similarity scores below the relevancy threshold\r\n- Normalized the similarities to be between 0 and 1 so the relevancy_threshold makes more sense\r\n- The number of results are limited to the top k documents or the maximum number of relevant documents above the threshold, whichever is smaller\r\n\r\nThis code will now return the top self.k results (or less, if there are not enough results that meet the self.relevancy_threshold criteria).\r\n\r\nThe svm.LinearSVC implementation in scikit-learn is non-deterministic, which means\r\nSVMRetriever.from_texts([\"bar\", \"world\", \"foo\", \"hello\", \"foo bar\"])\r\ncould return [3 0 5 4 2 1] instead of [0 3 5 4 2 1] with a query of \"foo\".\r\nIf you pass in multiple \"foo\" texts, the order could be different each time. Here, we only care if the 0 is the first element, otherwise it will offset the text and similarities.\r\n\r\n\r\nExample:\r\n```python\r\nretriever = SVMRetriever.from_texts(\r\n  [\"foo\", \"bar\", \"world\", \"hello\", \"foo bar\"],\r\n  OpenAIEmbeddings(),\r\n  k=4,\r\n  relevancy_threshold=.25\r\n)\r\n\r\nresult = retriever.get_relevant_documents(\"foo\")\r\n```\r\nyields\r\n```python\r\n[Document(page_content='foo', metadata={}), Document(page_content='foo bar', metadata={})]\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2959/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2959/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2958",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2958/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2958/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2958/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2958",
        "id": 1669601064,
        "node_id": "PR_kwDOIPDwls5OZXRQ",
        "number": 2958,
        "title": "FIX [FAILOVER - SEMANTIC PARSE] - Could not parse LLM output [AGENTS]",
        "user": {
            "login": "jimilp7",
            "id": 46612911,
            "node_id": "MDQ6VXNlcjQ2NjEyOTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/46612911?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jimilp7",
            "html_url": "https://github.com/jimilp7",
            "followers_url": "https://api.github.com/users/jimilp7/followers",
            "following_url": "https://api.github.com/users/jimilp7/following{/other_user}",
            "gists_url": "https://api.github.com/users/jimilp7/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jimilp7/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jimilp7/subscriptions",
            "organizations_url": "https://api.github.com/users/jimilp7/orgs",
            "repos_url": "https://api.github.com/users/jimilp7/repos",
            "events_url": "https://api.github.com/users/jimilp7/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jimilp7/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-15T23:11:40Z",
        "updated_at": "2023-04-16T21:12:15Z",
        "closed_at": "2023-04-16T21:12:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2958",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2958",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2958.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2958.patch",
            "merged_at": null
        },
        "body": "My approach to fix LLM Output Parsing here is to have a Fail-Over approach of Semantic Searching according to Parsing Format Instructions from the Prompt and building JSON from that.\r\n\r\nThis has proved to be much better so far from my local testing, but really happy to hear everyone's input and how this works for you. @hwchase17 @agola11 \r\n\r\nI tried to break it by injecting wrong format instructions, but it still was able to parse it, for example:\r\n```\r\nQuestion: is xray covered\r\n\r\n> Entering new AgentExecutor chain...\r\nUsing embedded DuckDB without persistence: data will be transient\r\n{\r\nHere is your response:\r\n    \"action\": \"User's Summary of Benefits and Coverage Document Search Tool\",\r\n    \"action_input\": \"x-ray\"\r\nPlease let me know if that works for you, i am here to help\r\n}\r\n\r\nObservation: For a diagnostic test (x-ray), you will pay 0% coinsurance for in-network providers and 30% coinsurance for non-network providers.\r\nThought:\r\n{\r\nHere is your response:\r\n    \"action\": \"Final Answer\",\r\n    \"action_input\": \"For a diagnostic test (x-ray), you will pay 0% coinsurance for in-network providers and 30% coinsurance for non-network providers.\"\r\nPlease let me know if that works for you, i am here to help\r\n}\r\n\r\n> Finished chain.\r\nFor a diagnostic test (x-ray), you will pay 0% coinsurance for in-network providers and 30% coinsurance for non-network providers.\r\n\r\n```\r\n\r\nTo-Do: Needs cleanup. Looking for feedback.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2958/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2958/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2957",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2957/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2957/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2957/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2957",
        "id": 1669594030,
        "node_id": "PR_kwDOIPDwls5OZV61",
        "number": 2957,
        "title": "TextSplitter: add support for re-adding separators",
        "user": {
            "login": "kroggen",
            "id": 7624275,
            "node_id": "MDQ6VXNlcjc2MjQyNzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7624275?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kroggen",
            "html_url": "https://github.com/kroggen",
            "followers_url": "https://api.github.com/users/kroggen/followers",
            "following_url": "https://api.github.com/users/kroggen/following{/other_user}",
            "gists_url": "https://api.github.com/users/kroggen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kroggen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kroggen/subscriptions",
            "organizations_url": "https://api.github.com/users/kroggen/orgs",
            "repos_url": "https://api.github.com/users/kroggen/repos",
            "events_url": "https://api.github.com/users/kroggen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kroggen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-15T22:34:10Z",
        "updated_at": "2023-05-19T01:05:02Z",
        "closed_at": "2023-05-19T01:05:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2957",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2957",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2957.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2957.patch",
            "merged_at": null
        },
        "body": "Fixes https://github.com/hwchase17/langchain/issues/2836",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2957/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2957/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2956",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2956/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2956/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2956/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2956",
        "id": 1669593536,
        "node_id": "PR_kwDOIPDwls5OZV1A",
        "number": 2956,
        "title": "Updated missing refactor in docs \"return_map_steps\"",
        "user": {
            "login": "ehmadzubair",
            "id": 10597112,
            "node_id": "MDQ6VXNlcjEwNTk3MTEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10597112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ehmadzubair",
            "html_url": "https://github.com/ehmadzubair",
            "followers_url": "https://api.github.com/users/ehmadzubair/followers",
            "following_url": "https://api.github.com/users/ehmadzubair/following{/other_user}",
            "gists_url": "https://api.github.com/users/ehmadzubair/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ehmadzubair/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ehmadzubair/subscriptions",
            "organizations_url": "https://api.github.com/users/ehmadzubair/orgs",
            "repos_url": "https://api.github.com/users/ehmadzubair/repos",
            "events_url": "https://api.github.com/users/ehmadzubair/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ehmadzubair/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T22:31:34Z",
        "updated_at": "2023-04-24T23:31:21Z",
        "closed_at": "2023-04-24T23:31:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2956",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2956",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2956.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2956.patch",
            "merged_at": "2023-04-24T23:31:21Z"
        },
        "body": "Minor rename in the documentation that was overlooked when refactoring.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2956/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2956/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2955",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2955/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2955/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2955/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2955",
        "id": 1669592592,
        "node_id": "PR_kwDOIPDwls5OZVpe",
        "number": 2955,
        "title": "Add title, lang, description to Web loader document metadata",
        "user": {
            "login": "timothyasp",
            "id": 707699,
            "node_id": "MDQ6VXNlcjcwNzY5OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/707699?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timothyasp",
            "html_url": "https://github.com/timothyasp",
            "followers_url": "https://api.github.com/users/timothyasp/followers",
            "following_url": "https://api.github.com/users/timothyasp/following{/other_user}",
            "gists_url": "https://api.github.com/users/timothyasp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timothyasp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timothyasp/subscriptions",
            "organizations_url": "https://api.github.com/users/timothyasp/orgs",
            "repos_url": "https://api.github.com/users/timothyasp/repos",
            "events_url": "https://api.github.com/users/timothyasp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timothyasp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T22:26:47Z",
        "updated_at": "2023-04-15T23:07:08Z",
        "closed_at": "2023-04-15T23:07:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2955",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2955",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2955.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2955.patch",
            "merged_at": "2023-04-15T23:07:08Z"
        },
        "body": "Title, lang and description are on almost every web page, and are incredibly useful pieces of information that currently isn't captured with the current web base loader\r\n\r\nI thought about adding the title and description to the content of the document, as\r\nthat content could be useful in search, but I left it out for right now.  If you think\r\nit'd be worth adding, happy to add it.\r\n\r\n\r\nI've found it's nice to have the title/description in the metadata to have some structured data\r\nwhen retrieving rows from vectordbs for use with summary and source citation, so if we do want to add it to the `page_content`, i'd advocate for it to also be included in metadata.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2955/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2955/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2954",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2954/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2954/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2954/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2954",
        "id": 1669566917,
        "node_id": "PR_kwDOIPDwls5OZQnW",
        "number": 2954,
        "title": "Add support for zilliz",
        "user": {
            "login": "EchoAGI",
            "id": 1500351,
            "node_id": "MDQ6VXNlcjE1MDAzNTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1500351?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EchoAGI",
            "html_url": "https://github.com/EchoAGI",
            "followers_url": "https://api.github.com/users/EchoAGI/followers",
            "following_url": "https://api.github.com/users/EchoAGI/following{/other_user}",
            "gists_url": "https://api.github.com/users/EchoAGI/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EchoAGI/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EchoAGI/subscriptions",
            "organizations_url": "https://api.github.com/users/EchoAGI/orgs",
            "repos_url": "https://api.github.com/users/EchoAGI/repos",
            "events_url": "https://api.github.com/users/EchoAGI/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EchoAGI/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-15T20:46:40Z",
        "updated_at": "2023-04-24T23:30:24Z",
        "closed_at": "2023-04-24T23:30:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2954",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2954",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2954.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2954.patch",
            "merged_at": null
        },
        "body": "I've added support for the vector database Zilliz, which is the cloud version of Milvus. There are some differences in details between Zilliz and the open-source version of Milvus. To accommodate production environments, we have put explicit naming on the collection field instead of the random field naming used by Milvus.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2954/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2954/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2953",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2953/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2953/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2953/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2953",
        "id": 1669564473,
        "node_id": "PR_kwDOIPDwls5OZQJ8",
        "number": 2953,
        "title": "optional sqlalchemy",
        "user": {
            "login": "timchunght",
            "id": 4615403,
            "node_id": "MDQ6VXNlcjQ2MTU0MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4615403?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timchunght",
            "html_url": "https://github.com/timchunght",
            "followers_url": "https://api.github.com/users/timchunght/followers",
            "following_url": "https://api.github.com/users/timchunght/following{/other_user}",
            "gists_url": "https://api.github.com/users/timchunght/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timchunght/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timchunght/subscriptions",
            "organizations_url": "https://api.github.com/users/timchunght/orgs",
            "repos_url": "https://api.github.com/users/timchunght/repos",
            "events_url": "https://api.github.com/users/timchunght/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timchunght/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T20:38:20Z",
        "updated_at": "2023-04-15T20:38:25Z",
        "closed_at": "2023-04-15T20:38:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2953",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2953",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2953.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2953.patch",
            "merged_at": null
        },
        "body": "* temporary measure until langchain supports sqlalchemy 2",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2953/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2953/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2952",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2952/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2952/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2952/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2952",
        "id": 1669556861,
        "node_id": "PR_kwDOIPDwls5OZOqa",
        "number": 2952,
        "title": "Fix wrong token counts from `get_num_tokens` from openai llms",
        "user": {
            "login": "timothyasp",
            "id": 707699,
            "node_id": "MDQ6VXNlcjcwNzY5OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/707699?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timothyasp",
            "html_url": "https://github.com/timothyasp",
            "followers_url": "https://api.github.com/users/timothyasp/followers",
            "following_url": "https://api.github.com/users/timothyasp/following{/other_user}",
            "gists_url": "https://api.github.com/users/timothyasp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timothyasp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timothyasp/subscriptions",
            "organizations_url": "https://api.github.com/users/timothyasp/orgs",
            "repos_url": "https://api.github.com/users/timothyasp/repos",
            "events_url": "https://api.github.com/users/timothyasp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timothyasp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T20:13:04Z",
        "updated_at": "2023-04-15T23:09:17Z",
        "closed_at": "2023-04-15T23:09:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2952",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2952",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2952.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2952.patch",
            "merged_at": "2023-04-15T23:09:17Z"
        },
        "body": "The encoding fetch was out of date.  Luckily OpenAI has a nice[ `encoding_for_model`](https://github.com/openai/tiktoken/blob/46287bfa493f8ccca4d927386d7ea9cc20487525/tiktoken/model.py) function in `tiktoken` we can use now.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2952/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2952/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2951",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2951/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2951/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2951/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2951",
        "id": 1669555201,
        "node_id": "I_kwDOIPDwls5jg2QB",
        "number": 2951,
        "title": " SQLDatabase : Remove set search_path (or rewrite it)",
        "user": {
            "login": "huineng",
            "id": 3482445,
            "node_id": "MDQ6VXNlcjM0ODI0NDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3482445?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huineng",
            "html_url": "https://github.com/huineng",
            "followers_url": "https://api.github.com/users/huineng/followers",
            "following_url": "https://api.github.com/users/huineng/following{/other_user}",
            "gists_url": "https://api.github.com/users/huineng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huineng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huineng/subscriptions",
            "organizations_url": "https://api.github.com/users/huineng/orgs",
            "repos_url": "https://api.github.com/users/huineng/repos",
            "events_url": "https://api.github.com/users/huineng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huineng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-04-15T20:09:12Z",
        "updated_at": "2023-12-06T18:20:32Z",
        "closed_at": "2023-12-06T17:56:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "as you have now created a specific dialect pr https://github.com/hwchase17/langchain/pull/2748\r\n\r\nyou better remove these lines or make them only applicable if the dialect is sqlite,\r\nmost of the dialects don't support this \r\n\r\nhttps://github.com/hwchase17/langchain/blob/b634489b2e8951b880c2ec467cdcf00f11830705/langchain/sql_database.py#L218-L219\r\n\r\nps i have to set this value to None once it instantiate sqldatabase otherwise i run in trouble. (i'm using ibm_db_sa. dialect and it works as a charm with eg chatgpt \r\n\r\n\r\ni also think there are some related tickets around this \r\n\r\nps i set my schema in the connection string\r\nbut i still have to set it in the model (otherwise it cannot find my included tables\r\nbut this might be another problem\r\n\r\nthanks\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2951/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2951/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2950",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2950/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2950/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2950/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2950",
        "id": 1669550805,
        "node_id": "PR_kwDOIPDwls5OZNdg",
        "number": 2950,
        "title": "bump version to 141",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T19:52:31Z",
        "updated_at": "2023-04-15T19:56:40Z",
        "closed_at": "2023-04-15T19:56:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2950",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2950",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2950.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2950.patch",
            "merged_at": "2023-04-15T19:56:39Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2950/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2950/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2949",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2949/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2949/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2949/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2949",
        "id": 1669547370,
        "node_id": "PR_kwDOIPDwls5OZMzn",
        "number": 2949,
        "title": "SVM retriever (#2947)",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T19:40:05Z",
        "updated_at": "2023-04-15T19:50:00Z",
        "closed_at": "2023-04-15T19:49:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2949",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2949",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2949.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2949.patch",
            "merged_at": "2023-04-15T19:49:59Z"
        },
        "body": "Add SVM retriever class, based on\r\nhttps://github.com/karpathy/randomfun/blob/master/knn_vs_svm.ipynb.\r\n\r\nTesting still WIP, but the logic is correct (I have a local implementation outside of Langchain working).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2949/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2949/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2948",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2948/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2948/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2948/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2948",
        "id": 1669542731,
        "node_id": "I_kwDOIPDwls5jgzNL",
        "number": 2948,
        "title": "LlamaCpp model needs streaming support",
        "user": {
            "login": "peter-ch",
            "id": 2143723,
            "node_id": "MDQ6VXNlcjIxNDM3MjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2143723?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peter-ch",
            "html_url": "https://github.com/peter-ch",
            "followers_url": "https://api.github.com/users/peter-ch/followers",
            "following_url": "https://api.github.com/users/peter-ch/following{/other_user}",
            "gists_url": "https://api.github.com/users/peter-ch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peter-ch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peter-ch/subscriptions",
            "organizations_url": "https://api.github.com/users/peter-ch/orgs",
            "repos_url": "https://api.github.com/users/peter-ch/repos",
            "events_url": "https://api.github.com/users/peter-ch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peter-ch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-15T19:22:53Z",
        "updated_at": "2023-09-10T16:32:53Z",
        "closed_at": "2023-09-10T16:32:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Streaming is supported by llama-cpp-python and works in Jupyter notebooks outside langchain code, but I can't get it to work with langchain. I didn't see any code for streaming in llms/llamacpp.py. I tried to do calls to self.callback_manager..on_llm_new_token() but nothing worked.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2948/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2948/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2947",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2947/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2947/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2947/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2947",
        "id": 1669533521,
        "node_id": "PR_kwDOIPDwls5OZKCG",
        "number": 2947,
        "title": "SVM retriever",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T18:55:40Z",
        "updated_at": "2023-04-15T19:36:53Z",
        "closed_at": "2023-04-15T19:36:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2947",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2947",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2947.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2947.patch",
            "merged_at": "2023-04-15T19:36:53Z"
        },
        "body": "Add SVM retriever class, based on https://github.com/karpathy/randomfun/blob/master/knn_vs_svm.ipynb.\r\n\r\nTesting still WIP, but the logic is correct (I have a local implementation outside of Langchain working).\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2947/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2947/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2946",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2946/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2946/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2946/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2946",
        "id": 1669481576,
        "node_id": "PR_kwDOIPDwls5OY_WA",
        "number": 2946,
        "title": "parametrize redis",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T16:51:05Z",
        "updated_at": "2023-04-15T19:47:38Z",
        "closed_at": "2023-04-15T19:47:37Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2946",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2946",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2946.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2946.patch",
            "merged_at": "2023-04-15T19:47:37Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2946/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2946/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2945",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2945/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2945/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2945/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2945",
        "id": 1669459081,
        "node_id": "PR_kwDOIPDwls5OY7GU",
        "number": 2945,
        "title": "delete antropic chat notebook",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T15:40:44Z",
        "updated_at": "2023-04-15T15:48:52Z",
        "closed_at": "2023-04-15T15:48:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2945",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2945",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2945.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2945.patch",
            "merged_at": "2023-04-15T15:48:51Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2945/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2945/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2944",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2944/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2944/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2944/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2944",
        "id": 1669458405,
        "node_id": "I_kwDOIPDwls5jgenl",
        "number": 2944,
        "title": "Question Answering over Docs giving cryptic error upon query",
        "user": {
            "login": "ahmadsb86",
            "id": 33711947,
            "node_id": "MDQ6VXNlcjMzNzExOTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/33711947?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ahmadsb86",
            "html_url": "https://github.com/ahmadsb86",
            "followers_url": "https://api.github.com/users/ahmadsb86/followers",
            "following_url": "https://api.github.com/users/ahmadsb86/following{/other_user}",
            "gists_url": "https://api.github.com/users/ahmadsb86/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ahmadsb86/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ahmadsb86/subscriptions",
            "organizations_url": "https://api.github.com/users/ahmadsb86/orgs",
            "repos_url": "https://api.github.com/users/ahmadsb86/repos",
            "events_url": "https://api.github.com/users/ahmadsb86/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ahmadsb86/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-15T15:38:36Z",
        "updated_at": "2023-09-10T16:32:58Z",
        "closed_at": "2023-09-10T16:32:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "After ingesting some markdown files using a slightly modified version of the question-answering over docs example, I ran the qa.py script as it was in the example\r\n\r\n```\r\n# qa.py\r\nimport faiss\r\nfrom langchain import OpenAI, HuggingFaceHub, LLMChain\r\nfrom langchain.chains import VectorDBQAWithSourcesChain\r\nimport pickle\r\nimport argparse\r\n\r\nparser = argparse.ArgumentParser(description='Ask a question to the notion DB.')\r\nparser.add_argument('question', type=str, help='The question to ask the notion DB')\r\nargs = parser.parse_args()\r\n\r\n# Load the LangChain.\r\nindex = faiss.read_index(\"docs.index\")\r\n\r\nwith open(\"faiss_store.pkl\", \"rb\") as f:\r\n    store = pickle.load(f)\r\n\r\nstore.index = index\r\n\r\nchain = VectorDBQAWithSourcesChain.from_llm(llm=OpenAI(temperature=0), vectorstore=store)\r\nresult = chain({\"question\": args.question})\r\nprint(f\"Answer: {result['answer']}\")\r\n\r\n```\r\nOnly to get this cryptic  error\r\n\r\n``` \r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\ahmad\\OneDrive\\Desktop\\Coding\\LANGCHAINSSSSSS\\notion-qa\\qa.py\", line 22, in <module>\r\n    result = chain({\"question\": args.question})\r\n  File \"C:\\Users\\ahmad\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\chains\\base.py\", line 146, in __call__\r\n    raise e\r\n  File \"C:\\Users\\ahmad\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\chains\\base.py\", line 142, in __call__\r\n    outputs = self._call(inputs)\r\n  File \"C:\\Users\\ahmad\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\chains\\qa_with_sources\\base.py\", line 97, in _call\r\n    answer, _ = self.combine_document_chain.combine_docs(docs, **inputs)\r\n  File \"C:\\Users\\ahmad\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\chains\\combine_documents\\map_reduce.py\", line 150, in combine_docs\r\n    num_tokens = length_func(result_docs, **kwargs)\r\n  File \"C:\\Users\\ahmad\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\chains\\combine_documents\\stuff.py\", line 77, in prompt_length\r\n    inputs = self._get_inputs(docs, **kwargs)\r\n  File \"C:\\Users\\ahmad\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\chains\\combine_documents\\stuff.py\", line 64, in _get_inputs\r\n    document_info = {\r\n  File \"C:\\Users\\ahmad\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\chains\\combine_documents\\stuff.py\", line 65, in <dictcomp>\r\n    k: base_info[k] for k in self.document_prompt.input_variables\r\nKeyError: 'source'\r\n``` \r\n\r\nHere is the code I used for ingesting\r\n|\r\n```\r\n\"\"\"This is the logic for ingesting Notion data into LangChain.\"\"\"\r\nfrom pathlib import Path\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nimport faiss\r\nfrom langchain.vectorstores import FAISS\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nimport pickle\r\nimport time\r\nfrom tqdm import tqdm\r\n\r\n\r\n# Here we load in the data in the format that Notion exports it in.\r\nfolder = list(Path(\"Notion_DB/\").glob(\"**/*.md\"))\r\n\r\nfiles = []\r\nsources = []\r\nfor myFile in folder:\r\n    with open(myFile, 'r',  encoding='utf-8') as f:\r\n        print(myFile.name)\r\n        files.append(f.read())\r\n    sources.append(myFile)\r\n\r\n# Here we split the documents, as needed, into smaller chunks.\r\n# We do this due to the context limits of the LLMs.\r\ntext_splitter = CharacterTextSplitter(chunk_size=800, separator=\"\\n\")\r\ndocs = []\r\nmetadatas = []\r\nfor i, f in enumerate(files):\r\n    splits = text_splitter.split_text(f)\r\n    docs.extend(splits)\r\n    metadatas.extend([{\"source\": sources[i]}] * len(splits))\r\n\r\n\r\n# Add each element in docs into FAISS store, keeping a delay between inserting elements so we don't exceed rate limit\r\nstore = None\r\nfor (index, chunk) in tqdm(enumerate(docs)):\r\n    if index == 0:\r\n        store = FAISS.from_texts([chunk], OpenAIEmbeddings())\r\n    else:\r\n        time.sleep(1) # wait for a second to not exceed any rate limits\r\n        store.add_texts([chunk])\r\n    # print('finished with index '+index.__str__())\r\n\r\nprint('Done yayy!')\r\n\r\n# # Here we create a vector store from the documents and save it to disk.\r\nfaiss.write_index(store.index, \"docs.index\")\r\nstore.index = None\r\nwith open(\"faiss_store.pkl\", \"wb\") as f:\r\n    pickle.dump(store, f)\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2944/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2944/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2943",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2943/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2943/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2943/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2943",
        "id": 1669448447,
        "node_id": "PR_kwDOIPDwls5OY5JL",
        "number": 2943,
        "title": "Remove pythonrepl from LLM-MathChain",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T15:07:30Z",
        "updated_at": "2023-04-16T15:50:33Z",
        "closed_at": "2023-04-16T15:50:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2943",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2943",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2943.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2943.patch",
            "merged_at": "2023-04-16T15:50:32Z"
        },
        "body": "Use numexpr evaluate instead of the python REPL to avoid malicious code injection.\r\n\r\nTested against the (limited) math dataset and got the same score as before.\r\n\r\nFor more permissive tools (like the REPL tool itself), other approaches ought to be provided (some combination of Sanitizer + Restricted python + unprivileged-docker + ...), but for a calculator tool, only mathematical expressions should be permitted.\r\n\r\nSee https://github.com/hwchase17/langchain/issues/814",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2943/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2943/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2942",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2942/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2942/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2942/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2942",
        "id": 1669427543,
        "node_id": "PR_kwDOIPDwls5OY0-z",
        "number": 2942,
        "title": "Fix typo",
        "user": {
            "login": "mnahinkhan",
            "id": 23176423,
            "node_id": "MDQ6VXNlcjIzMTc2NDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/23176423?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mnahinkhan",
            "html_url": "https://github.com/mnahinkhan",
            "followers_url": "https://api.github.com/users/mnahinkhan/followers",
            "following_url": "https://api.github.com/users/mnahinkhan/following{/other_user}",
            "gists_url": "https://api.github.com/users/mnahinkhan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mnahinkhan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mnahinkhan/subscriptions",
            "organizations_url": "https://api.github.com/users/mnahinkhan/orgs",
            "repos_url": "https://api.github.com/users/mnahinkhan/repos",
            "events_url": "https://api.github.com/users/mnahinkhan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mnahinkhan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T14:27:05Z",
        "updated_at": "2023-04-15T15:53:26Z",
        "closed_at": "2023-04-15T15:53:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2942",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2942",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2942.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2942.patch",
            "merged_at": "2023-04-15T15:53:26Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2942/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2942/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2941",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2941/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2941/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2941/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2941",
        "id": 1669421607,
        "node_id": "I_kwDOIPDwls5jgVon",
        "number": 2941,
        "title": "Is there a way we can pass in a custom source into vector store?",
        "user": {
            "login": "rounakdatta",
            "id": 20105014,
            "node_id": "MDQ6VXNlcjIwMTA1MDE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/20105014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rounakdatta",
            "html_url": "https://github.com/rounakdatta",
            "followers_url": "https://api.github.com/users/rounakdatta/followers",
            "following_url": "https://api.github.com/users/rounakdatta/following{/other_user}",
            "gists_url": "https://api.github.com/users/rounakdatta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rounakdatta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rounakdatta/subscriptions",
            "organizations_url": "https://api.github.com/users/rounakdatta/orgs",
            "repos_url": "https://api.github.com/users/rounakdatta/repos",
            "events_url": "https://api.github.com/users/rounakdatta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rounakdatta/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-15T14:12:30Z",
        "updated_at": "2023-09-10T16:33:03Z",
        "closed_at": "2023-09-10T16:33:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "For example, lets say I have a big txt file (WhatsApp chat export). Now when I'm storing it as embeddings in the vector store, I think the source_document is set as the `<name_of_file>.txt` which is fine. But what I want is to attribute a finer source. Like say, the person(s) who said this particular keyword, datetime and so on.\r\n\r\nIs this currently supported in Langchain?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2941/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2940",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2940/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2940/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2940/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2940",
        "id": 1669415578,
        "node_id": "PR_kwDOIPDwls5OYyfe",
        "number": 2940,
        "title": "Allow placeholders in OpenAPI endpoints #2938",
        "user": {
            "login": "jsoma",
            "id": 95126,
            "node_id": "MDQ6VXNlcjk1MTI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/95126?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsoma",
            "html_url": "https://github.com/jsoma",
            "followers_url": "https://api.github.com/users/jsoma/followers",
            "following_url": "https://api.github.com/users/jsoma/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsoma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsoma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsoma/subscriptions",
            "organizations_url": "https://api.github.com/users/jsoma/orgs",
            "repos_url": "https://api.github.com/users/jsoma/repos",
            "events_url": "https://api.github.com/users/jsoma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsoma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-15T14:01:44Z",
        "updated_at": "2023-10-12T23:20:48Z",
        "closed_at": "2023-10-12T23:20:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2940",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2940",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2940.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2940.patch",
            "merged_at": "2023-10-12T23:20:33Z"
        },
        "body": "Use regex matches when checking endpoints instead of exact matches. `{varname}` becomes `.*`\r\n\r\nFixes #2938 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2940/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2940/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2939",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2939/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2939/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2939/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2939",
        "id": 1669408779,
        "node_id": "PR_kwDOIPDwls5OYw6e",
        "number": 2939,
        "title": "Add Annoy as VectorStore",
        "user": {
            "login": "bakebrain",
            "id": 1918816,
            "node_id": "MDQ6VXNlcjE5MTg4MTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1918816?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bakebrain",
            "html_url": "https://github.com/bakebrain",
            "followers_url": "https://api.github.com/users/bakebrain/followers",
            "following_url": "https://api.github.com/users/bakebrain/following{/other_user}",
            "gists_url": "https://api.github.com/users/bakebrain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bakebrain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bakebrain/subscriptions",
            "organizations_url": "https://api.github.com/users/bakebrain/orgs",
            "repos_url": "https://api.github.com/users/bakebrain/repos",
            "events_url": "https://api.github.com/users/bakebrain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bakebrain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-15T13:57:01Z",
        "updated_at": "2023-04-16T20:44:05Z",
        "closed_at": "2023-04-16T20:44:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2939",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2939",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2939.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2939.patch",
            "merged_at": "2023-04-16T20:44:05Z"
        },
        "body": "Adds Annoy (https://github.com/spotify/annoy) as vector Store. \r\n\r\nRESOLVES hwchase17/langchain#2842\r\n\r\ndiscord ref:  https://discord.com/channels/1038097195422978059/1051632794427723827/1096089994168377354",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2939/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2939/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2938",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2938/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2938/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2938/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2938",
        "id": 1669406711,
        "node_id": "I_kwDOIPDwls5jgR_3",
        "number": 2938,
        "title": "Allow OpenAPI planner to respect URLs with placeholders",
        "user": {
            "login": "jsoma",
            "id": 95126,
            "node_id": "MDQ6VXNlcjk1MTI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/95126?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsoma",
            "html_url": "https://github.com/jsoma",
            "followers_url": "https://api.github.com/users/jsoma/followers",
            "following_url": "https://api.github.com/users/jsoma/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsoma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsoma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsoma/subscriptions",
            "organizations_url": "https://api.github.com/users/jsoma/orgs",
            "repos_url": "https://api.github.com/users/jsoma/repos",
            "events_url": "https://api.github.com/users/jsoma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsoma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-15T13:54:15Z",
        "updated_at": "2023-10-12T23:20:34Z",
        "closed_at": "2023-09-10T16:33:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "In OpenAPI documentation, an endpoint might include a placeholder for a parameter:\r\n\r\n```\r\nGET /states/{abbr}\r\n```\r\n\r\nCurrently, exact matches are needed with OpenAPI Planner to retrieve documentation. In the example above, `GET /states/FL` would receive a `ValueError(f\"{endpoint_name} endpoint does not exist.\")`.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2938/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2938/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2937",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2937/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2937/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2937/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2937",
        "id": 1669405652,
        "node_id": "PR_kwDOIPDwls5OYwQM",
        "number": 2937,
        "title": "typo fix",
        "user": {
            "login": "mauhai",
            "id": 2217433,
            "node_id": "MDQ6VXNlcjIyMTc0MzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2217433?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mauhai",
            "html_url": "https://github.com/mauhai",
            "followers_url": "https://api.github.com/users/mauhai/followers",
            "following_url": "https://api.github.com/users/mauhai/following{/other_user}",
            "gists_url": "https://api.github.com/users/mauhai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mauhai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mauhai/subscriptions",
            "organizations_url": "https://api.github.com/users/mauhai/orgs",
            "repos_url": "https://api.github.com/users/mauhai/repos",
            "events_url": "https://api.github.com/users/mauhai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mauhai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T13:50:19Z",
        "updated_at": "2023-04-15T15:31:44Z",
        "closed_at": "2023-04-15T15:31:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2937",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2937",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2937.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2937.patch",
            "merged_at": "2023-04-15T15:31:43Z"
        },
        "body": "missing w in link",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2937/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2937/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2936",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2936/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2936/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2936/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2936",
        "id": 1669327179,
        "node_id": "I_kwDOIPDwls5jf-lL",
        "number": 2936,
        "title": "agent._extract_tool_and_input removes double quote at the end of action input.",
        "user": {
            "login": "zywilliamli",
            "id": 32046231,
            "node_id": "MDQ6VXNlcjMyMDQ2MjMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/32046231?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zywilliamli",
            "html_url": "https://github.com/zywilliamli",
            "followers_url": "https://api.github.com/users/zywilliamli/followers",
            "following_url": "https://api.github.com/users/zywilliamli/following{/other_user}",
            "gists_url": "https://api.github.com/users/zywilliamli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zywilliamli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zywilliamli/subscriptions",
            "organizations_url": "https://api.github.com/users/zywilliamli/orgs",
            "repos_url": "https://api.github.com/users/zywilliamli/repos",
            "events_url": "https://api.github.com/users/zywilliamli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zywilliamli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-15T11:52:24Z",
        "updated_at": "2023-09-10T16:33:14Z",
        "closed_at": "2023-09-10T16:33:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "hey, i'm adding a tool for jira jql, i ran into something weird and not sure what's wrong or how to debug, could anyone help? \r\n\r\nthe Action Input for the action taken is `summary ~ \"add support\"`\r\nbut the actual instruction passed into _run of my tool is `summary ~ \"add support`, missing the closing double quotes. \r\n\r\n<img width=\"1740\" alt=\"Screenshot 2023-04-15 at 9 52 11 pm\" src=\"https://user-images.githubusercontent.com/32046231/232217825-e1f4c62f-998c-4b2d-8890-97a726bfc84d.png\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2936/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2936/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2935",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2935/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2935/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2935/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2935",
        "id": 1669296610,
        "node_id": "I_kwDOIPDwls5jf3Hi",
        "number": 2935,
        "title": "ModuleNotFoundError: No module named 'langchain.agents'",
        "user": {
            "login": "ndelah",
            "id": 18349236,
            "node_id": "MDQ6VXNlcjE4MzQ5MjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/18349236?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ndelah",
            "html_url": "https://github.com/ndelah",
            "followers_url": "https://api.github.com/users/ndelah/followers",
            "following_url": "https://api.github.com/users/ndelah/following{/other_user}",
            "gists_url": "https://api.github.com/users/ndelah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ndelah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ndelah/subscriptions",
            "organizations_url": "https://api.github.com/users/ndelah/orgs",
            "repos_url": "https://api.github.com/users/ndelah/repos",
            "events_url": "https://api.github.com/users/ndelah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ndelah/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-15T10:14:16Z",
        "updated_at": "2023-04-15T10:34:48Z",
        "closed_at": "2023-04-15T10:34:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Just installed Lanchain and followed the tutorials without a problem till I reached the agents part.\r\n\r\nThe following modules are not recognized.\r\n\r\n```\r\nfrom langchain.agents import initialize_agent\r\nfrom langchain.agents import AgentType\r\n```\r\n\r\n\r\nI tried running lanchain in python 3.7, 3.8.11, 3.9 and 3.10 because other people suggested changing versions.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2935/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2935/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2934",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2934/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2934/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2934/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2934",
        "id": 1669283287,
        "node_id": "PR_kwDOIPDwls5OYYJZ",
        "number": 2934,
        "title": "Fix redundancy check about config_type in AGENT_TO_CLASS",
        "user": {
            "login": "AMK9978",
            "id": 35371206,
            "node_id": "MDQ6VXNlcjM1MzcxMjA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/35371206?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AMK9978",
            "html_url": "https://github.com/AMK9978",
            "followers_url": "https://api.github.com/users/AMK9978/followers",
            "following_url": "https://api.github.com/users/AMK9978/following{/other_user}",
            "gists_url": "https://api.github.com/users/AMK9978/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AMK9978/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AMK9978/subscriptions",
            "organizations_url": "https://api.github.com/users/AMK9978/orgs",
            "repos_url": "https://api.github.com/users/AMK9978/repos",
            "events_url": "https://api.github.com/users/AMK9978/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AMK9978/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T09:36:04Z",
        "updated_at": "2023-04-18T04:05:49Z",
        "closed_at": "2023-04-18T04:05:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2934",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2934",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2934.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2934.patch",
            "merged_at": "2023-04-18T04:05:49Z"
        },
        "body": "Fix of issue #2874 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2934/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2934/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2933",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2933/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2933/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2933/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2933",
        "id": 1669252273,
        "node_id": "PR_kwDOIPDwls5OYRLU",
        "number": 2933,
        "title": "Fixed Regular expression",
        "user": {
            "login": "azamiftikhar1000",
            "id": 55012400,
            "node_id": "MDQ6VXNlcjU1MDEyNDAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/55012400?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/azamiftikhar1000",
            "html_url": "https://github.com/azamiftikhar1000",
            "followers_url": "https://api.github.com/users/azamiftikhar1000/followers",
            "following_url": "https://api.github.com/users/azamiftikhar1000/following{/other_user}",
            "gists_url": "https://api.github.com/users/azamiftikhar1000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/azamiftikhar1000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/azamiftikhar1000/subscriptions",
            "organizations_url": "https://api.github.com/users/azamiftikhar1000/orgs",
            "repos_url": "https://api.github.com/users/azamiftikhar1000/repos",
            "events_url": "https://api.github.com/users/azamiftikhar1000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/azamiftikhar1000/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T08:57:46Z",
        "updated_at": "2023-04-20T21:52:19Z",
        "closed_at": "2023-04-16T16:16:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2933",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2933",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2933.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2933.patch",
            "merged_at": "2023-04-16T16:16:50Z"
        },
        "body": " ###  https://github.com/hwchase17/langchain/issues/2898\r\n Instead of `\"Action\" and \"Action Input\"` keywords, we are getting `\"Action 1\" and \"Action 1 Input\" or \"Action  Input 1\" ` from **gpt-3.5-turbo**\r\n\r\n Updated the Regular expression to handle all these cases\r\n \r\n Attaching the screenshot of the result from  the  updated Regular expression.\r\n \r\n<img width=\"1036\" alt=\"Screenshot 2023-04-16 at 1 39 00 AM\" src=\"https://user-images.githubusercontent.com/55012400/232251184-23ca6cc2-7229-411a-b6e1-53b2f5ec18a5.png\">\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2933/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2933/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2932",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2932/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2932/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2932/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2932",
        "id": 1669225756,
        "node_id": "PR_kwDOIPDwls5OYLvB",
        "number": 2932,
        "title": "Fix/issue 1213",
        "user": {
            "login": "cs0lar",
            "id": 62176855,
            "node_id": "MDQ6VXNlcjYyMTc2ODU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/62176855?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cs0lar",
            "html_url": "https://github.com/cs0lar",
            "followers_url": "https://api.github.com/users/cs0lar/followers",
            "following_url": "https://api.github.com/users/cs0lar/following{/other_user}",
            "gists_url": "https://api.github.com/users/cs0lar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cs0lar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cs0lar/subscriptions",
            "organizations_url": "https://api.github.com/users/cs0lar/orgs",
            "repos_url": "https://api.github.com/users/cs0lar/repos",
            "events_url": "https://api.github.com/users/cs0lar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cs0lar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T08:01:23Z",
        "updated_at": "2023-04-17T06:51:41Z",
        "closed_at": "2023-04-16T20:11:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2932",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2932",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2932.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2932.patch",
            "merged_at": "2023-04-16T20:11:30Z"
        },
        "body": "### Background\r\n\r\nContinuing to implement all the interface methods defined by the `VectorStore` class. This PR pertains to implementation of the `max_marginal_relevance_search` method.\r\n\r\n### Changes\r\n\r\n- a `max_marginal_relevance_search` method implementation has been added in `weaviate.py`\r\n- tests have been added to the the new method\r\n- vcr cassettes have been added for the weaviate tests\r\n\r\n### Test Plan\r\n\r\nAdded tests for the `max_marginal_relevance_search` implementation\r\n\r\n### Change Safety\r\n\r\n- [x] I have added tests to cover my changes\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2932/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2932/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2931",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2931/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2931/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2931/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2931",
        "id": 1669216123,
        "node_id": "I_kwDOIPDwls5jfjd7",
        "number": 2931,
        "title": "json_agent_executor unable to perform some basic stuff",
        "user": {
            "login": "rajivraghu",
            "id": 5885193,
            "node_id": "MDQ6VXNlcjU4ODUxOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5885193?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rajivraghu",
            "html_url": "https://github.com/rajivraghu",
            "followers_url": "https://api.github.com/users/rajivraghu/followers",
            "following_url": "https://api.github.com/users/rajivraghu/following{/other_user}",
            "gists_url": "https://api.github.com/users/rajivraghu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rajivraghu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rajivraghu/subscriptions",
            "organizations_url": "https://api.github.com/users/rajivraghu/orgs",
            "repos_url": "https://api.github.com/users/rajivraghu/repos",
            "events_url": "https://api.github.com/users/rajivraghu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rajivraghu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-04-15T07:35:01Z",
        "updated_at": "2023-09-22T04:20:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello Dev,\r\nI dont see json_agent_executor  executing right..  For my simple requirement, its not able to give desired output. \r\nI have 5 users .. users.json. \r\n\r\n`[\r\n  {\r\n    \"username\": \"john_doe\",\r\n    \"email\": \"john.doe@example.com\"\r\n  },\r\n  {\r\n    \"username\": \"jane_doe\",\r\n    \"email\": \"jane.doe@example.com\"\r\n  },\r\n  {\r\n    \"username\": \"mark_smith\",\r\n    \"email\": \"mark.smith@example.com\"\r\n  },\r\n  {\r\n    \"username\": \"sarah_jones\",\r\n    \"email\": \"sarah.jones@example.com\"\r\n  },\r\n  {\r\n    \"username\": \"david_wilson\",\r\n    \"email\": \"david.wilson@example.com\"\r\n  }\r\n]\r\n`\r\nI am using the below code.. \r\n*************************************************************\r\n`import os\r\nimport json\r\n\r\nfrom langchain.agents import (\r\n    create_json_agent,\r\n    AgentExecutor\r\n)\r\nfrom langchain.agents.agent_toolkits import JsonToolkit\r\nfrom langchain.chains import LLMChain\r\nfrom langchain.llms.openai import OpenAI\r\nfrom langchain.requests import TextRequestsWrapper\r\nfrom langchain.tools.json.tool import JsonSpec\r\n\r\n\r\nwith open(\"/content/sample_data/users.json\") as f:\r\n    data = json.load(f)\r\njson_spec = JsonSpec(dict_=data, max_value_length=4000)\r\njson_toolkit = JsonToolkit(spec=json_spec)\r\n\r\njson_agent_executor = create_json_agent(\r\n    llm=OpenAI(temperature=0),\r\n    toolkit=json_toolkit,\r\n    verbose=True\r\n)\r\njson_agent_executor.run(\"What is email id of sarah_jones\")`\r\n*********************************************************************\r\nThe Agent is unable to find some basic stuff... This the the output..\r\n\r\n***************************************************************************\r\n Entering new AgentExecutor chain...\r\nAction: json_spec_list_keys\r\nAction Input: data\r\nObservation: ['username']\r\nThought: I should look at the value of the username key\r\nAction: json_spec_get_value\r\nAction Input: data[\"username\"]\r\nObservation: email\r\nThought: I should look at the value of the email key\r\nAction: json_spec_get_value\r\nAction Input: data[\"username\"][\"email\"]\r\nObservation: TypeError('string indices must be integers')\r\nThought: I should look at the keys of the username key\r\nAction: json_spec_list_keys\r\nAction Input: data[\"username\"]\r\nObservation: ValueError('Value at path `data[\"username\"]` is not a dict, get the value directly.')\r\nThought: I should look at the value of the username key\r\nAction: json_spec_get_value\r\nAction Input: data[\"username\"]\r\nObservation: email\r\nThought: I should look at the value of the email key\r\nAction: json_spec_get_value\r\nAction Input: data[\"username\"][\"email\"]\r\nObservation: TypeError('string indices must be integers')\r\nThought: I should look at the keys of the username key\r\nAction: json_spec_list_keys\r\nAction Input: data[\"username\"]\r\nObservation: ValueError('Value at path `data[\"username\"]` is not a dict, get the value directly.')\r\nThought: I should look at the value of the username key\r\nAction: json_spec_get_value\r\nAction Input: data[\"username\"]\r\nObservation: email\r\nThought: I should look at the value of the email key\r\nAction: json_spec_get_value\r\nAction Input: data[\"username\"][\"email\"]\r\nObservation: TypeError('string indices must be integers')\r\nThought: I should look at the keys of the username key\r\nAction: json_spec_list_keys\r\nAction Input: data[\"username\"]\r\nObservation: ValueError('Value at path `data[\"username\"]` is not a dict, get the value directly.')\r\nThought: I should look at the value of the username key\r\nAction: json_spec_get_value\r\nAction Input: data[\"username\"]\r\nObservation: email\r\nThought: I should look at the value of the email key\r\nAction: json_spec_get_value\r\nAction Input: data[\"username\"][\"email\"]\r\nObservation: TypeError('string indices must be integers')\r\nThought: I should look at the keys of the username key\r\nAction: json_spec_list_keys\r\nAction Input: data[\"username\"]\r\nObservation: ValueError('Value at path `data[\"username\"]` is not a dict, get the value directly.')\r\nThought: I should look at the value of the username key\r\nAction: json_spec_get_value\r\nAction Input: data[\"username\"]\r\nObservation: email\r\nThought: I should look at the value of the email key\r\nAction: json_spec_get_value\r\nAction Input: data[\"username\"][\"email\"]\r\nObservation: TypeError('string indices must be integers')\r\nThought:\r\n\r\n> Finished chain.\r\nAgent stopped due to iteration limit or time limit.`\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2931/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2931/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2930",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2930/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2930/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2930/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2930",
        "id": 1669191327,
        "node_id": "I_kwDOIPDwls5jfdaf",
        "number": 2930,
        "title": "AnalyzeDocumentChain cannot work with \"text-ada-001\" model or any 2k tokens model",
        "user": {
            "login": "skittoo",
            "id": 64428610,
            "node_id": "MDQ6VXNlcjY0NDI4NjEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/64428610?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skittoo",
            "html_url": "https://github.com/skittoo",
            "followers_url": "https://api.github.com/users/skittoo/followers",
            "following_url": "https://api.github.com/users/skittoo/following{/other_user}",
            "gists_url": "https://api.github.com/users/skittoo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skittoo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skittoo/subscriptions",
            "organizations_url": "https://api.github.com/users/skittoo/orgs",
            "repos_url": "https://api.github.com/users/skittoo/repos",
            "events_url": "https://api.github.com/users/skittoo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skittoo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-15T06:34:23Z",
        "updated_at": "2023-09-10T16:33:20Z",
        "closed_at": "2023-09-10T16:33:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "In \"combine_docs\" in \"MapReduceDocumentsChain\" class in \"langchain/chains/combine_documents/map_reduce.py\"\r\n\r\nnum_tokens is defaulted to 3000 not flexible to the model type.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2930/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2930/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2929",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2929/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2929/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2929/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2929",
        "id": 1669165015,
        "node_id": "I_kwDOIPDwls5jfW_X",
        "number": 2929,
        "title": "Error when generating text with the Anthropic LLM",
        "user": {
            "login": "adarshxs",
            "id": 114558126,
            "node_id": "U_kgDOBtQErg",
            "avatar_url": "https://avatars.githubusercontent.com/u/114558126?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adarshxs",
            "html_url": "https://github.com/adarshxs",
            "followers_url": "https://api.github.com/users/adarshxs/followers",
            "following_url": "https://api.github.com/users/adarshxs/following{/other_user}",
            "gists_url": "https://api.github.com/users/adarshxs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adarshxs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adarshxs/subscriptions",
            "organizations_url": "https://api.github.com/users/adarshxs/orgs",
            "repos_url": "https://api.github.com/users/adarshxs/repos",
            "events_url": "https://api.github.com/users/adarshxs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adarshxs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-15T05:33:09Z",
        "updated_at": "2023-08-06T18:52:23Z",
        "closed_at": "2023-08-06T18:52:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "`UnicodeEncodeError                        Traceback (most recent call last)\r\nCell In[13], line 11\r\n      2 tools = [\r\n      3     Tool(\r\n      4         name=\"Intermediate Answer\",\r\n   (...)\r\n      7     )\r\n      8 ]\r\n     10 self_ask_with_search = initialize_agent(tools, llm, agent=AgentType.SELF_ASK_WITH_SEARCH, verbose=True)\r\n---> 11 self_ask_with_search.run(\"How do I get into an Ivy league college?\")\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\langchain\\chains\\base.py:213, in Chain.run(self, *args, **kwargs)\r\n    211     if len(args) != 1:\r\n    212         raise ValueError(\"`run` supports only one positional argument.\")\r\n--> 213     return self(args[0])[self.output_keys[0]]\r\n    215 if kwargs and not args:\r\n    216     return self(kwargs)[self.output_keys[0]]\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\langchain\\chains\\base.py:116, in Chain.__call__(self, inputs, return_only_outputs)\r\n    114 except (KeyboardInterrupt, Exception) as e:\r\n    115     self.callback_manager.on_chain_error(e, verbose=self.verbose)\r\n--> 116     raise e\r\n    117 self.callback_manager.on_chain_end(outputs, verbose=self.verbose)\r\n    118 return self.prep_outputs(inputs, outputs, return_only_outputs)\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\langchain\\chains\\base.py:113, in Chain.__call__(self, inputs, return_only_outputs)\r\n    107 self.callback_manager.on_chain_start(\r\n    108     {\"name\": self.__class__.__name__},\r\n    109     inputs,\r\n    110     verbose=self.verbose,\r\n    111 )\r\n    112 try:\r\n--> 113     outputs = self._call(inputs)\r\n    114 except (KeyboardInterrupt, Exception) as e:\r\n    115     self.callback_manager.on_chain_error(e, verbose=self.verbose)\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\langchain\\agents\\agent.py:499, in _call(self, inputs)\r\n    494     \"\"\"Validate that appropriate tools are passed in.\"\"\"\r\n    495     pass\r\n    497 @classmethod\r\n    498 def from_llm_and_tools(\r\n--> 499     cls,\r\n    500     llm: BaseLanguageModel,\r\n    501     tools: Sequence[BaseTool],\r\n    502     callback_manager: Optional[BaseCallbackManager] = None,\r\n    503     **kwargs: Any,\r\n    504 ) -> Agent:\r\n    505     \"\"\"Construct an agent from an LLM and tools.\"\"\"\r\n    506     cls._validate_tools(tools)\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\langchain\\agents\\agent.py:409, in _take_next_step(self, name_to_tool_map, color_mapping, inputs, intermediate_steps)\r\n    399 def plan(\r\n    400     self, intermediate_steps: List[Tuple[AgentAction, str]], **kwargs: Any\r\n    401 ) -> Union[AgentAction, AgentFinish]:\r\n    402     \"\"\"Given input, decided what to do.\r\n    403 \r\n    404     Args:\r\n    405         intermediate_steps: Steps the LLM has taken to date,\r\n    406             along with observations\r\n    407         **kwargs: User inputs.\r\n    408 \r\n--> 409     Returns:\r\n    410         Action specifying what tool to use.\r\n    411     \"\"\"\r\n    412     full_inputs = self.get_full_inputs(intermediate_steps, **kwargs)\r\n    413     action = self._get_next_action(full_inputs)\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\langchain\\agents\\agent.py:105, in plan(self, intermediate_steps, **kwargs)\r\n     97     else:\r\n     98         raise ValueError(\r\n     99             f\"Got unsupported early_stopping_method `{early_stopping_method}`\"\r\n    100         )\r\n    102 @classmethod\r\n    103 def from_llm_and_tools(\r\n    104     cls,\r\n--> 105     llm: BaseLanguageModel,\r\n    106     tools: Sequence[BaseTool],\r\n    107     callback_manager: Optional[BaseCallbackManager] = None,\r\n    108     **kwargs: Any,\r\n    109 ) -> BaseSingleActionAgent:\r\n    110     raise NotImplementedError\r\n    112 @property\r\n    113 def _agent_type(self) -> str:\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\langchain\\agents\\agent.py:71, in _get_next_action(self, full_inputs)\r\n     62 @abstractmethod\r\n     63 async def aplan(\r\n     64     self, intermediate_steps: List[Tuple[AgentAction, str]], **kwargs: Any\r\n     65 ) -> Union[AgentAction, AgentFinish]:\r\n     66     \"\"\"Given input, decided what to do.\r\n     67 \r\n     68     Args:\r\n     69         intermediate_steps: Steps the LLM has taken to date,\r\n     70             along with observations\r\n---> 71         **kwargs: User inputs.\r\n     72 \r\n     73     Returns:\r\n     74         Action specifying what tool to use.\r\n     75     \"\"\"\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\langchain\\chains\\llm.py:151, in LLMChain.predict(self, **kwargs)\r\n    137 def predict(self, **kwargs: Any) -> str:\r\n    138     \"\"\"Format prompt with kwargs and pass to LLM.\r\n    139 \r\n    140     Args:\r\n   (...)\r\n    149             completion = llm.predict(adjective=\"funny\")\r\n    150     \"\"\"\r\n--> 151     return self(kwargs)[self.output_key]\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\langchain\\chains\\base.py:116, in Chain.__call__(self, inputs, return_only_outputs)\r\n    114 except (KeyboardInterrupt, Exception) as e:\r\n    115     self.callback_manager.on_chain_error(e, verbose=self.verbose)\r\n--> 116     raise e\r\n    117 self.callback_manager.on_chain_end(outputs, verbose=self.verbose)\r\n    118 return self.prep_outputs(inputs, outputs, return_only_outputs)\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\langchain\\chains\\base.py:113, in Chain.__call__(self, inputs, return_only_outputs)\r\n    107 self.callback_manager.on_chain_start(\r\n    108     {\"name\": self.__class__.__name__},\r\n    109     inputs,\r\n    110     verbose=self.verbose,\r\n    111 )\r\n    112 try:\r\n--> 113     outputs = self._call(inputs)\r\n    114 except (KeyboardInterrupt, Exception) as e:\r\n    115     self.callback_manager.on_chain_error(e, verbose=self.verbose)\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\langchain\\chains\\llm.py:57, in LLMChain._call(self, inputs)\r\n     56 def _call(self, inputs: Dict[str, Any]) -> Dict[str, str]:\r\n---> 57     return self.apply([inputs])[0]\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\langchain\\chains\\llm.py:118, in LLMChain.apply(self, input_list)\r\n    116 def apply(self, input_list: List[Dict[str, Any]]) -> List[Dict[str, str]]:\r\n    117     \"\"\"Utilize the LLM generate method for speed gains.\"\"\"\r\n--> 118     response = self.generate(input_list)\r\n    119     return self.create_outputs(response)\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\langchain\\chains\\llm.py:62, in LLMChain.generate(self, input_list)\r\n     60 \"\"\"Generate LLM result from inputs.\"\"\"\r\n     61 prompts, stop = self.prep_prompts(input_list)\r\n---> 62 return self.llm.generate_prompt(prompts, stop)\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\langchain\\llms\\base.py:107, in BaseLLM.generate_prompt(self, prompts, stop)\r\n    103 def generate_prompt(\r\n    104     self, prompts: List[PromptValue], stop: Optional[List[str]] = None\r\n    105 ) -> LLMResult:\r\n    106     prompt_strings = [p.to_string() for p in prompts]\r\n--> 107     return self.generate(prompt_strings, stop=stop)\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\langchain\\llms\\base.py:140, in BaseLLM.generate(self, prompts, stop)\r\n    138 except (KeyboardInterrupt, Exception) as e:\r\n    139     self.callback_manager.on_llm_error(e, verbose=self.verbose)\r\n--> 140     raise e\r\n    141 self.callback_manager.on_llm_end(output, verbose=self.verbose)\r\n    142 return output\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\langchain\\llms\\base.py:137, in BaseLLM.generate(self, prompts, stop)\r\n    133 self.callback_manager.on_llm_start(\r\n    134     {\"name\": self.__class__.__name__}, prompts, verbose=self.verbose\r\n    135 )\r\n    136 try:\r\n--> 137     output = self._generate(prompts, stop=stop)\r\n    138 except (KeyboardInterrupt, Exception) as e:\r\n    139     self.callback_manager.on_llm_error(e, verbose=self.verbose)\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\langchain\\llms\\base.py:324, in LLM._generate(self, prompts, stop)\r\n    322 generations = []\r\n    323 for prompt in prompts:\r\n--> 324     text = self._call(prompt, stop=stop)\r\n    325     generations.append([Generation(text=text)])\r\n    326 return LLMResult(generations=generations)\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\langchain\\llms\\anthropic.py:146, in _call(self, prompt, stop)\r\n    130 def _call(self, prompt: str, stop: Optional[List[str]] = None) -> str:\r\n    131     r\"\"\"Call out to Anthropic's completion endpoint.\r\n    132 \r\n    133     Args:\r\n    134         prompt: The prompt to pass into the model.\r\n    135         stop: Optional list of stop words to use when generating.\r\n    136 \r\n    137     Returns:\r\n    138         The string generated by the model.\r\n    139 \r\n    140     Example:\r\n    141         .. code-block:: python\r\n    142 \r\n    143             prompt = \"What are the biggest risks facing humanity?\"\r\n    144             prompt = f\"\\n\\nHuman: {prompt}\\n\\nAssistant:\"\r\n    145             response = model(prompt)\r\n--> 146 \r\n    147     \"\"\"\r\n    148     stop = self._get_anthropic_stop(stop)\r\n    149     if self.streaming:\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\anthropic\\api.py:239, in Client.completion(self, **kwargs)\r\n    238 def completion(self, **kwargs) -> dict:\r\n--> 239     return self._request_as_json(\r\n    240         \"post\",\r\n    241         \"/v1/complete\",\r\n    242         params=kwargs,\r\n    243     )\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\anthropic\\api.py:198, in Client._request_as_json(self, *args, **kwargs)\r\n    197 def _request_as_json(self, *args, **kwargs) -> dict:\r\n--> 198     result = self._request_raw(*args, **kwargs)\r\n    199     content = result.content.decode(\"utf-8\")\r\n    200     json_body = json.loads(content)\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\anthropic\\api.py:117, in Client._request_raw(self, method, path, params, headers, request_timeout)\r\n    109 def _request_raw(\r\n    110     self,\r\n    111     method: str,\r\n   (...)\r\n    115     request_timeout: Optional[Union[float, Tuple[float, float]]] = None,\r\n    116 ) -> requests.Response:\r\n--> 117     request = self._request_params(headers, method, params, path, request_timeout)\r\n    118     result = self._session.request(\r\n    119         request.method,\r\n    120         request.url,\r\n   (...)\r\n    124         timeout=request.timeout,\r\n    125     )\r\n    127     if result.status_code != 200:\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\anthropic\\api.py:85, in Client._request_params(self, headers, method, params, path, request_timeout)\r\n     79     del params[\"disable_checks\"]\r\n     80 else:\r\n     81     # NOTE: disabling_checks can lead to very poor sampling quality from our API.\r\n     82     # _Please_ read the docs on \"Claude instructions when using the API\" before disabling this.\r\n     83     # Also note, future versions of the API will enforce these as hard constraints automatically,\r\n     84     # so please consider these SDK-side checks as things you'll need to handle regardless.\r\n---> 85     _validate_request(params)\r\n     86 data = None\r\n     87 if params:\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\anthropic\\api.py:273, in _validate_request(params)\r\n    271 if prompt.endswith(\" \"):\r\n    272     raise ApiException(f\"Prompt must not end with a space character\")\r\n--> 273 _validate_prompt_length(params)\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\anthropic\\api.py:279, in _validate_prompt_length(params)\r\n    277 prompt: str = params[\"prompt\"]\r\n    278 try:\r\n--> 279     prompt_tokens = tokenizer.count_tokens(prompt)\r\n    280     max_tokens_to_sample: int = params[\"max_tokens_to_sample\"]\r\n    281     token_limit = 9 * 1024\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\anthropic\\tokenizer.py:52, in count_tokens(text)\r\n     51 def count_tokens(text: str) -> int:\r\n---> 52     tokenizer = get_tokenizer()\r\n     53     encoded_text = tokenizer.encode(text)\r\n     54     return len(encoded_text.ids)\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\anthropic\\tokenizer.py:36, in get_tokenizer()\r\n     34 if not claude_tokenizer:\r\n     35     try:\r\n---> 36         tokenizer_data = _get_cached_tokenizer_file_as_str()\r\n     37     except httpx.HTTPError as e:\r\n     38         raise TokenizerException(f'Failed to download tokenizer: {e}')\r\n\r\nFile C:\\Python311\\Lib\\site-packages\\anthropic\\tokenizer.py:26, in _get_cached_tokenizer_file_as_str()\r\n     24     response.raise_for_status()\r\n     25     with open(tokenizer_file, 'w') as f:\r\n---> 26         f.write(response.text)\r\n     28 with open(tokenizer_file, 'r') as f:\r\n     29     return f.read()\r\n\r\nFile C:\\Python311\\Lib\\encodings\\cp1252.py:19, in IncrementalEncoder.encode(self, input, final)\r\n     18 def encode(self, input, final=False):\r\n---> 19     return codecs.charmap_encode(input,self.errors,encoding_table)[0]\r\n\r\nUnicodeEncodeError: 'charmap' codec can't encode character '\\u0100' in position 2452: character maps to <undefined>`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2929/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2929/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2928",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2928/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2928/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2928/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2928",
        "id": 1669159656,
        "node_id": "I_kwDOIPDwls5jfVro",
        "number": 2928,
        "title": "Will it support Dolly-V2?",
        "user": {
            "login": "stevexuzeta",
            "id": 28527945,
            "node_id": "MDQ6VXNlcjI4NTI3OTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/28527945?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stevexuzeta",
            "html_url": "https://github.com/stevexuzeta",
            "followers_url": "https://api.github.com/users/stevexuzeta/followers",
            "following_url": "https://api.github.com/users/stevexuzeta/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevexuzeta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stevexuzeta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevexuzeta/subscriptions",
            "organizations_url": "https://api.github.com/users/stevexuzeta/orgs",
            "repos_url": "https://api.github.com/users/stevexuzeta/repos",
            "events_url": "https://api.github.com/users/stevexuzeta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stevexuzeta/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-15T05:21:27Z",
        "updated_at": "2023-05-02T17:46:43Z",
        "closed_at": "2023-04-16T08:39:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I hope that langchain can support dolly-v2 which is generated by Databricks employees and released under a permissive license (CC-BY-SA).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2928/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2928/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2927",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2927/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2927/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2927/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2927",
        "id": 1669132762,
        "node_id": "PR_kwDOIPDwls5OX474",
        "number": 2927,
        "title": "[minor] Deep Lake auth improvements in docs, kwargs pass, faster tests",
        "user": {
            "login": "davidbuniat",
            "id": 7069390,
            "node_id": "MDQ6VXNlcjcwNjkzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7069390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidbuniat",
            "html_url": "https://github.com/davidbuniat",
            "followers_url": "https://api.github.com/users/davidbuniat/followers",
            "following_url": "https://api.github.com/users/davidbuniat/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidbuniat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidbuniat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidbuniat/subscriptions",
            "organizations_url": "https://api.github.com/users/davidbuniat/orgs",
            "repos_url": "https://api.github.com/users/davidbuniat/repos",
            "events_url": "https://api.github.com/users/davidbuniat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidbuniat/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T03:57:57Z",
        "updated_at": "2023-04-15T17:49:16Z",
        "closed_at": "2023-04-15T17:49:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2927",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2927",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2927.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2927.patch",
            "merged_at": "2023-04-15T17:49:16Z"
        },
        "body": "\r\nMinor cosmetic changes \r\n- Activeloop environment cred authentication in notebooks with `getpass.getpass` (instead of CLI which not always works)\r\n- much faster tests with Deep Lake pytest mode on \r\n- Deep Lake kwargs pass\r\n\r\nNotes\r\n- I put pytest environment creds inside `vectorstores/conftest.py`, but feel free to suggest a better location. For context, if I put in `test_deeplake.py`, `ruff` doesn't let me to set them before import deeplake ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2927/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2927/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2925",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2925/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2925/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2925/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2925",
        "id": 1669123006,
        "node_id": "I_kwDOIPDwls5jfMu-",
        "number": 2925,
        "title": "Mypy: Missing named argument \"client\" for \"ChatOpenAI\"",
        "user": {
            "login": "ryanpeach",
            "id": 14838729,
            "node_id": "MDQ6VXNlcjE0ODM4NzI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14838729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanpeach",
            "html_url": "https://github.com/ryanpeach",
            "followers_url": "https://api.github.com/users/ryanpeach/followers",
            "following_url": "https://api.github.com/users/ryanpeach/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryanpeach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryanpeach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryanpeach/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanpeach/orgs",
            "repos_url": "https://api.github.com/users/ryanpeach/repos",
            "events_url": "https://api.github.com/users/ryanpeach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryanpeach/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-04-15T03:14:17Z",
        "updated_at": "2023-10-17T16:08:10Z",
        "closed_at": "2023-10-17T16:08:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "This is the mypy response for the following code:\r\n\r\n```\r\nChatOpenAI(\r\n    model_name=args.model_name,\r\n    temperature=args.temperature,\r\n)\r\n```\r\n\r\nI see in the code that ChatOpenAI has a variable client that in the comments is marked private.\r\n\r\nAny remediation? ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2925/reactions",
            "total_count": 29,
            "+1": 25,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 4
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2925/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2924",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2924/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2924/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2924/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2924",
        "id": 1669111473,
        "node_id": "I_kwDOIPDwls5jfJ6x",
        "number": 2924,
        "title": "OpenSearch: allow boolean filter search for ANN",
        "user": {
            "login": "duffn",
            "id": 3457341,
            "node_id": "MDQ6VXNlcjM0NTczNDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3457341?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duffn",
            "html_url": "https://github.com/duffn",
            "followers_url": "https://api.github.com/users/duffn/followers",
            "following_url": "https://api.github.com/users/duffn/following{/other_user}",
            "gists_url": "https://api.github.com/users/duffn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duffn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duffn/subscriptions",
            "organizations_url": "https://api.github.com/users/duffn/orgs",
            "repos_url": "https://api.github.com/users/duffn/repos",
            "events_url": "https://api.github.com/users/duffn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duffn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-15T02:26:24Z",
        "updated_at": "2023-04-18T03:26:28Z",
        "closed_at": "2023-04-18T03:26:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The OpenSearch documentation notes that you may use a boolean filter for ANN search: https://opensearch.org/docs/latest/search-plugins/knn/filter-search-knn/#boolean-filter-with-ann-search\r\n\r\nIt would be nice to allow passing in a boolean filter to the OpenSearch vector store `similarity_search` function. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2924/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2924/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2923",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2923/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2923/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2923/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2923",
        "id": 1669084016,
        "node_id": "PR_kwDOIPDwls5OXvf6",
        "number": 2923,
        "title": "Update LLM-Math Chain",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T00:53:39Z",
        "updated_at": "2023-04-15T15:01:03Z",
        "closed_at": "2023-04-15T14:59:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2923",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2923",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2923.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2923.patch",
            "merged_at": null
        },
        "body": "Add `numexpr` to remove the unsafe dep on the python repl.\r\n\r\nOnly limited evaluation has been performed thus far on a small dataset, which revealed equivalent performance.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2923/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2923/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2922",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2922/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2922/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2922/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2922",
        "id": 1669064432,
        "node_id": "I_kwDOIPDwls5je-bw",
        "number": 2922,
        "title": "Can't instantiate langchain.chains.LLMChain to create_llama_chat_agent (Setting custom prompt)",
        "user": {
            "login": "tezcahernandez",
            "id": 10608350,
            "node_id": "MDQ6VXNlcjEwNjA4MzUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/10608350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tezcahernandez",
            "html_url": "https://github.com/tezcahernandez",
            "followers_url": "https://api.github.com/users/tezcahernandez/followers",
            "following_url": "https://api.github.com/users/tezcahernandez/following{/other_user}",
            "gists_url": "https://api.github.com/users/tezcahernandez/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tezcahernandez/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tezcahernandez/subscriptions",
            "organizations_url": "https://api.github.com/users/tezcahernandez/orgs",
            "repos_url": "https://api.github.com/users/tezcahernandez/repos",
            "events_url": "https://api.github.com/users/tezcahernandez/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tezcahernandez/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-04-15T00:05:05Z",
        "updated_at": "2023-09-20T10:33:25Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello everyone,\r\n\r\nWorking in an implementation Index-GPT+LangChain.\r\nI'm trying to set a custom prompt where I can set additional context. [Based on the documentation ](https://python.langchain.com/en/latest/reference/modules/chains.html?highlight=langchain.chains.llm.LLMChain#langchain.chains.LLMChain) I'm trying to run this code.\r\n\r\nlangchain 0.0.139\r\nllama-index 0.5.15\r\n\r\n\r\n```\r\n\r\ntemplate = \"\"\"Pretend you are Steve Jobs. Answer with motivational content. Steve: How I can help you today?. Person: I want some motivation. Steve: You are amazing you can create any type of business you want.\r\nPerson: {question}?\r\nSteve:\"\"\"\r\n\r\nprompt = PromptTemplate(template=template, input_variables=[\"question\"])\r\n\r\nllm=OpenAI(temperature=0)\r\nprint(type(llm))\r\nllm = LLMChain(prompt=prompt, llm=llm)\r\nprint(type(llm))\r\n\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\")\r\n\r\nagent_chain = create_llama_chat_agent(\r\n    toolkit,\r\n    llm,\r\n    memory=memory,\r\n    verbose=True\r\n)\r\n```\r\n\r\n\r\nBut I'm getting the below error:\r\n\r\n\r\n```\r\nValidationError: 1 validation error for LLMChain\r\nllm\r\n  Can't instantiate abstract class BaseLanguageModel with abstract methods agenerate_prompt, generate_prompt (type=type_error)\r\n```\r\n\r\nThanks for your help.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2922/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2922/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2921",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2921/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2921/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2921/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2921",
        "id": 1669054344,
        "node_id": "PR_kwDOIPDwls5OXpfx",
        "number": 2921,
        "title": "Add kwargs to VectorStore.maximum_marginal_relevance",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-14T23:42:25Z",
        "updated_at": "2023-04-15T17:49:50Z",
        "closed_at": "2023-04-15T17:49:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2921",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2921",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2921.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2921.patch",
            "merged_at": "2023-04-15T17:49:49Z"
        },
        "body": "Same as similarity_search, allows child classes to add vector store-specific args (this was technically already happening in couple places but now typing is correct).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2921/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2921/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]