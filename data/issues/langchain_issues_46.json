[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9766",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9766/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9766/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9766/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9766",
        "id": 1867146818,
        "node_id": "PR_kwDOIPDwls5YzOva",
        "number": 9766,
        "title": "Utility to run commands in docker containers as isolated execution environment.",
        "user": {
            "login": "piotr-grodek-dsai",
            "id": 128714159,
            "node_id": "U_kgDOB6wFrw",
            "avatar_url": "https://avatars.githubusercontent.com/u/128714159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/piotr-grodek-dsai",
            "html_url": "https://github.com/piotr-grodek-dsai",
            "followers_url": "https://api.github.com/users/piotr-grodek-dsai/followers",
            "following_url": "https://api.github.com/users/piotr-grodek-dsai/following{/other_user}",
            "gists_url": "https://api.github.com/users/piotr-grodek-dsai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/piotr-grodek-dsai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/piotr-grodek-dsai/subscriptions",
            "organizations_url": "https://api.github.com/users/piotr-grodek-dsai/orgs",
            "repos_url": "https://api.github.com/users/piotr-grodek-dsai/repos",
            "events_url": "https://api.github.com/users/piotr-grodek-dsai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/piotr-grodek-dsai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nfcampos",
                "id": 56902,
                "node_id": "MDQ6VXNlcjU2OTAy",
                "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nfcampos",
                "html_url": "https://github.com/nfcampos",
                "followers_url": "https://api.github.com/users/nfcampos/followers",
                "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
                "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
                "organizations_url": "https://api.github.com/users/nfcampos/orgs",
                "repos_url": "https://api.github.com/users/nfcampos/repos",
                "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nfcampos/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "obi1kenobi",
                "id": 2348618,
                "node_id": "MDQ6VXNlcjIzNDg2MTg=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2348618?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/obi1kenobi",
                "html_url": "https://github.com/obi1kenobi",
                "followers_url": "https://api.github.com/users/obi1kenobi/followers",
                "following_url": "https://api.github.com/users/obi1kenobi/following{/other_user}",
                "gists_url": "https://api.github.com/users/obi1kenobi/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/obi1kenobi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/obi1kenobi/subscriptions",
                "organizations_url": "https://api.github.com/users/obi1kenobi/orgs",
                "repos_url": "https://api.github.com/users/obi1kenobi/repos",
                "events_url": "https://api.github.com/users/obi1kenobi/events{/privacy}",
                "received_events_url": "https://api.github.com/users/obi1kenobi/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-25T14:20:44Z",
        "updated_at": "2023-10-10T08:01:12Z",
        "closed_at": "2023-10-10T08:01:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9766",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9766",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9766.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9766.patch",
            "merged_at": null
        },
        "body": "**DRAFT**\r\n\r\nDescription: It is a wrapper around docker python library, allowing to pull/build docker images with ability to run and execute command in a container. It is a low-level building block which allows to isolate execution and constrain resources - should allow to improve security a bit after integration with things like PythonREPL.\r\n\r\nDependencies: docker\r\n\r\nTwitter handle: @deepsense_ai\r\n\r\n**WIP**:  For now I think integration tests are required. I run tests outside langchain so I need yet to see if they pass & can run on CI.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9766/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9766/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9765",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9765/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9765/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9765/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9765",
        "id": 1867141839,
        "node_id": "I_kwDOIPDwls5vSlLP",
        "number": 9765,
        "title": "AzureSearch.py is using constant field names instead of ours",
        "user": {
            "login": "levalencia",
            "id": 6962857,
            "node_id": "MDQ6VXNlcjY5NjI4NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6962857?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/levalencia",
            "html_url": "https://github.com/levalencia",
            "followers_url": "https://api.github.com/users/levalencia/followers",
            "following_url": "https://api.github.com/users/levalencia/following{/other_user}",
            "gists_url": "https://api.github.com/users/levalencia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/levalencia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/levalencia/subscriptions",
            "organizations_url": "https://api.github.com/users/levalencia/orgs",
            "repos_url": "https://api.github.com/users/levalencia/repos",
            "events_url": "https://api.github.com/users/levalencia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/levalencia/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2023-08-25T14:18:44Z",
        "updated_at": "2023-12-08T16:01:43Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain 0.0.273\n\n### Who can help?\n\n@hwchase17 \r\n\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI am trying to use Azure Cognitive Search retriever, however it fails because our fields are different:\r\n\r\nOur index looks like this:\r\n![image](https://github.com/langchain-ai/langchain/assets/6962857/df6fe367-ccf1-4644-9759-77a4ddc06ff8)\r\n\r\n\r\nOur code:\r\n\r\n```\r\n        llm = AzureChatOpenAI(\r\n            openai_api_base=config['AZURE_OPENAI_ENDPOINT'],\r\n            openai_api_version=config['AZURE_OPENAI_API_VERSION'],\r\n            deployment_name=config['OPENAI_DEPLOYMENT_NAME'],\r\n            openai_api_key=config['AZURE_OPENAI_API_KEY'],\r\n            openai_api_type=config['OPENAI_API_TYPE'],\r\n            model_name=config['OPENAI_MODEL_NAME'],\r\n            temperature=0)\r\n\r\n        embeddings = OpenAIEmbeddings(\r\n                            openai_api_base=config['AZURE_OPENAI_ENDPOINT'],\r\n                            openai_api_type=\"azure\",\r\n                            deployment=config['AZURE_OPENAI_EMBEDDING_DEPLOYED_MODEL_NAME'],\r\n                            openai_api_key=config['AZURE_OPENAI_API_KEY'],\r\n                            model=config['AZURE_OPENAI_EMBEDDING_DEPLOYED_MODEL_NAME'],\r\n                            chunk_size=1)\r\n\r\n        fields = [\r\n            SimpleField(\r\n                name=\"id\",\r\n                type=SearchFieldDataType.String,\r\n                key=True,\r\n                filterable=True,\r\n            ),\r\n            SearchableField(\r\n                name=\"text\",\r\n                type=SearchFieldDataType.String,\r\n                searchable=True,\r\n            ),\r\n            SearchField(\r\n                name=\"embedding\",\r\n                type=SearchFieldDataType.Collection(SearchFieldDataType.Single),\r\n                searchable=True,\r\n                vector_search_dimensions=1536,\r\n                vector_search_configuration=\"default\",\r\n            )\r\n        ]\r\n        \r\n        vector_store: AzureSearch = AzureSearch(\r\n            azure_search_endpoint=config['AZURE_SEARCH_SERVICE_ENDPOINT'],\r\n            azure_search_key=config['AZURE_SEARCH_ADMIN_KEY'],\r\n            index_name=config['AZURE_SEARCH_VECTOR_INDEX_NAME'],\r\n            embedding_function=embeddings.embed_query,\r\n            fields=fields,\r\n        )\r\n\r\n        retriever = vector_store.as_retriever(search_type=\"similarity\", kwargs={\"k\": 3})\r\n\r\n\r\n        # Creating instance of RetrievalQA\r\n        chain = RetrievalQA.from_chain_type(llm=llm,\r\n                                            chain_type=\"stuff\",\r\n                                            retriever=retriever,\r\n                                            return_source_documents=True)\r\n\r\n        # Generating response to user's query\r\n        response = chain({\"query\": config['question']})\r\n```\r\n\r\nI traced it all down to the function:  vector_search_with_score in azuresearch.py\r\n\r\n```\r\n        results = self.client.search(\r\n            search_text=\"\",\r\n            vectors=[\r\n                Vector(\r\n                    value=np.array(\r\n                        self.embedding_function(query), dtype=np.float32\r\n                    ).tolist(),\r\n                    k=k,\r\n                    fields=FIELDS_CONTENT_VECTOR,\r\n                )\r\n            ],\r\n            select=[FIELDS_ID, FIELDS_CONTENT, FIELDS_METADATA],\r\n            filter=filters,\r\n        )\r\n```\r\n\r\nThe code is trying to use FIELDS_CONTENT_VECTOR which is a constant and its not our field name.\r\n\r\nI guess some other issues may arise with other parts of the code where constants are used.\r\n\r\n\r\nWhy  do we have different field names? \r\nWe are using Microsoft examples to setup all azure indexing, indexers, skillsets and datasources:\r\nhttps://github.com/Azure/cognitive-search-vector-pr/blob/main/demo-python/code/azure-search-vector-ingestion-python-sample.ipynb\r\nand their open ai embedding generator deployed as an azure function:\r\nhttps://github.com/Azure-Samples/azure-search-power-skills/blob/main/Vector/EmbeddingGenerator/README.md\r\n\r\nI wrote a blog post series about this\r\nhttps://medium.com/python-in-plain-english/elevate-chat-ai-applications-mastering-azure-cognitive-search-with-vector-storage-for-llm-a2082f24f798\r\n\n\n### Expected behavior\n\nI should be able to define the fields we want to use, but the code uses constants",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9765/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9765/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9764",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9764/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9764/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9764/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9764",
        "id": 1867102659,
        "node_id": "PR_kwDOIPDwls5YzFIc",
        "number": 9764,
        "title": "Add EdenAI Tools",
        "user": {
            "login": "KyrianC",
            "id": 67210837,
            "node_id": "MDQ6VXNlcjY3MjEwODM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/67210837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KyrianC",
            "html_url": "https://github.com/KyrianC",
            "followers_url": "https://api.github.com/users/KyrianC/followers",
            "following_url": "https://api.github.com/users/KyrianC/following{/other_user}",
            "gists_url": "https://api.github.com/users/KyrianC/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KyrianC/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KyrianC/subscriptions",
            "organizations_url": "https://api.github.com/users/KyrianC/orgs",
            "repos_url": "https://api.github.com/users/KyrianC/repos",
            "events_url": "https://api.github.com/users/KyrianC/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KyrianC/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-25T13:54:35Z",
        "updated_at": "2023-09-01T15:26:57Z",
        "closed_at": "2023-09-01T15:26:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9764",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9764",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9764.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9764.patch",
            "merged_at": "2023-09-01T15:26:56Z"
        },
        "body": "This PR follows the Eden AI (LLM + embeddings) integration. #8633\r\n\r\nWe added different Tools to empower agents with new capabilities :\r\n\r\n- text: explicit content detection\r\n\r\n- image: explicit content detection\r\n\r\n- image: object detection\r\n\r\n- OCR: invoice parsing\r\n\r\n- OCR: ID parsing\r\n\r\n- audio: speech to text\r\n\r\n- audio: text to speech\r\n\r\n \r\nWe plan to add more in the future (like translation, language detection, + others).\r\n\r\n\r\nUsage:\r\n\r\n```python\r\nllm=EdenAI(feature=\"text\",provider=\"openai\", params={\"temperature\" : 0.2,\"max_tokens\" : 250})\r\n\r\ntools = [\r\n    EdenAiTextModerationTool(providers=[\"openai\"],language=\"en\"),\r\n    EdenAiObjectDetectionTool(providers=[\"google\",\"api4ai\"]),\r\n    EdenAiTextToSpeechTool(providers=[\"amazon\"],language=\"en\",voice=\"MALE\"),\r\n    EdenAiExplicitImageTool(providers=[\"amazon\",\"google\"]),\r\n    EdenAiSpeechToTextTool(providers=[\"amazon\"]),\r\n    EdenAiParsingIDTool(providers=[\"amazon\",\"klippa\"],language=\"en\"),\r\n    EdenAiParsingInvoiceTool(providers=[\"amazon\",\"google\"],language=\"en\"),\r\n]\r\n\r\nagent_chain = initialize_agent(\r\n    tools,\r\n    llm,\r\n    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,\r\n    verbose=True,\r\n    return_intermediate_steps=True,\r\n)\r\n\r\nresult = agent_chain(\"\"\" i have this text : 'i want to slap you' \r\n                   first : i want to know if this text contains explicit content or not .\r\n                   second : if it does contain explicit content i want to know what is the explicit content in this text, \r\n                   third : i want to make the text into speech .\r\n                   if there is URL in the observations , you will always put it in the output (final answer) .\r\n                   \"\"\")\r\n```\r\n\r\noutput: \r\n>  Entering new AgentExecutor chain...\r\n>  I need to extract the information from the ID and then convert it to text and then to speech\r\n> Action: edenai_identity_parsing\r\n> Action Input: \"https://www.citizencard.com/images/citizencard-uk-id-card-2023.jpg\"\r\n> Observation: last_name : \r\n>   value : ANGELA\r\n> given_names : \r\n>   value : GREENE\r\n> birth_place : \r\n> birth_date : \r\n>   value : 2000-11-09\r\n> issuance_date : \r\n> expire_date : \r\n> document_id : \r\n> issuing_state : \r\n> address : \r\n> age : \r\n> country : \r\n> document_type : \r\n>   value : DRIVER LICENSE FRONT\r\n> gender : \r\n> image_id : \r\n> image_signature : \r\n> mrz : \r\n> nationality : \r\n> Thought: I now need to convert the information to text and then to speech\r\n> Action: edenai_text_to_speech\r\n> Action Input: \"Welcome Angela Greene!\"\r\n> Observation: https://d14uq1pz7dzsdq.cloudfront.net/0c494819-0bbc-4433-bfa4-6e99bd9747ea_.mp3?Expires=1693316851&Signature=YcMoVQgPuIMEOuSpFuvhkFM8JoBMSoGMcZb7MVWdqw7JEf5~67q9dEI90o5todE5mYXB5zSYoib6rGrmfBl4Rn5~yqDwZ~Tmc24K75zpQZIEyt5~ZSnHuXy4IFWGmlIVuGYVGMGKxTGNeCRNUXDhT6TXGZlr4mwa79Ei1YT7KcNyc1dsTrYB96LphnsqOERx4X9J9XriSwxn70X8oUPFfQmLcitr-syDhiwd9Wdpg6J5yHAJjf657u7Z1lFTBMoXGBuw1VYmyno-3TAiPeUcVlQXPueJ-ymZXmwaITmGOfH7HipZngZBziofRAFdhMYbIjYhegu5jS7TxHwRuox32A__&Key-Pair-Id=K1F55BTI9AHGIK\r\n> Thought: I now know the final answer\r\n> Final Answer: https://d14uq1pz7dzsdq.cloudfront.net/0c494819-0bbc-4433-bfa4-6e99bd9747ea_.mp3?Expires=1693316851&Signature=YcMoVQgPuIMEOuSpFuvhkFM8JoBMSoGMcZb7MVWdqw7JEf5~67q9dEI90o5todE5mYXB5zSYoib6rGrmfBl4Rn5~yqDwZ~Tmc24K75zpQZIEyt5~ZSnHuXy4IFWGmlIVuGYVGMGKxTGNeCRNUXDhT6TXGZlr4mwa79Ei1YT7KcNyc1dsTrYB96LphnsqOERx4X9J9XriSwxn70X8oUPFfQmLcitr-syDhiwd9Wdpg6J5y\r\n> \r\n>  Finished chain.\r\n\r\nOther examples are available in the jupyter notebook.\r\n\r\n\r\nThis PR is made in parallel with  EdenAI LLM update #8963 \r\nI apologize for the messy PR. While working in implementing Tools we realized there was a few problems we needed to fix on LLM as well.\r\n\r\nPing: @hwchase17, @baskaryan",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9764/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9764/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9763",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9763/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9763/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9763/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9763",
        "id": 1867072956,
        "node_id": "PR_kwDOIPDwls5Yy-lM",
        "number": 9763,
        "title": "fix call _get_keys for custom_evaluator",
        "user": {
            "login": "Buckler89",
            "id": 8536008,
            "node_id": "MDQ6VXNlcjg1MzYwMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8536008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Buckler89",
            "html_url": "https://github.com/Buckler89",
            "followers_url": "https://api.github.com/users/Buckler89/followers",
            "following_url": "https://api.github.com/users/Buckler89/following{/other_user}",
            "gists_url": "https://api.github.com/users/Buckler89/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Buckler89/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Buckler89/subscriptions",
            "organizations_url": "https://api.github.com/users/Buckler89/orgs",
            "repos_url": "https://api.github.com/users/Buckler89/repos",
            "events_url": "https://api.github.com/users/Buckler89/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Buckler89/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-25T13:36:21Z",
        "updated_at": "2023-08-30T13:35:30Z",
        "closed_at": "2023-08-30T13:35:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9763",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9763",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9763.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9763.patch",
            "merged_at": "2023-08-30T13:35:23Z"
        },
        "body": "In the function _load_run_evaluators the function _get_keys was not called if only custom_evaluators parameter is used\r\n\r\n\r\n  - Description: In the function _load_run_evaluators the function _get_keys was not called if only custom_evaluators parameter is used, \r\n  - Issue: no issue created for this yet,\r\n  - Dependencies: None,\r\n  - Tag maintainer: @vowelparrot,\r\n  - Twitter handle: Buckler89",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9763/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9763/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9762",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9762/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9762/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9762/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9762",
        "id": 1867071726,
        "node_id": "I_kwDOIPDwls5vSUDu",
        "number": 9762,
        "title": "Streaming doesn't work correctly with caching",
        "user": {
            "login": "xsyann",
            "id": 1092138,
            "node_id": "MDQ6VXNlcjEwOTIxMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1092138?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xsyann",
            "html_url": "https://github.com/xsyann",
            "followers_url": "https://api.github.com/users/xsyann/followers",
            "following_url": "https://api.github.com/users/xsyann/following{/other_user}",
            "gists_url": "https://api.github.com/users/xsyann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xsyann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xsyann/subscriptions",
            "organizations_url": "https://api.github.com/users/xsyann/orgs",
            "repos_url": "https://api.github.com/users/xsyann/repos",
            "events_url": "https://api.github.com/users/xsyann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xsyann/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-25T13:35:30Z",
        "updated_at": "2023-12-01T16:06:53Z",
        "closed_at": "2023-12-01T16:06:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version : 0.0.273\r\nPython version : 3.10.8\r\nPlatform : macOS 13.5.1\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [X] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nimport langchain\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\nfrom langchain.cache import InMemoryCache\r\n\r\n\r\nlangchain.llm_cache = InMemoryCache()\r\n\r\nllm = ChatOpenAI(model_name=\"gpt-3.5-turbo\", streaming=True, callbacks=[StreamingStdOutCallbackHandler()])\r\nresp = llm.predict(\"Tell me a joke\")\r\nresp1 = llm.predict(\"Tell me a joke\")\r\n```\r\n\r\noutput:\r\n\r\n```\r\nSure, here's a classic one for you:\r\n\r\nWhy don't scientists trust atoms?\r\n\r\nBecause they make up everything!\r\n```\n\n### Expected behavior\n\nI'd expect both responses to be streamed to stdout but as the second one is coming from the memory cache, the callback handler `on_llm_new_token` is never called and thus the second response never printed.\r\n\r\nI guess `on_llm_new_token` should be called once with the full response loaded from cache to ensure a consistent behavior between new and cached responses.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9762/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9762/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9761",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9761/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9761/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9761/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9761",
        "id": 1867063910,
        "node_id": "I_kwDOIPDwls5vSSJm",
        "number": 9761,
        "title": "SelfQueryRetriever creates attributes that do not exist",
        "user": {
            "login": "WaleedAlfaris",
            "id": 92319577,
            "node_id": "U_kgDOBYCvWQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/92319577?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/WaleedAlfaris",
            "html_url": "https://github.com/WaleedAlfaris",
            "followers_url": "https://api.github.com/users/WaleedAlfaris/followers",
            "following_url": "https://api.github.com/users/WaleedAlfaris/following{/other_user}",
            "gists_url": "https://api.github.com/users/WaleedAlfaris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/WaleedAlfaris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/WaleedAlfaris/subscriptions",
            "organizations_url": "https://api.github.com/users/WaleedAlfaris/orgs",
            "repos_url": "https://api.github.com/users/WaleedAlfaris/repos",
            "events_url": "https://api.github.com/users/WaleedAlfaris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/WaleedAlfaris/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-25T13:31:11Z",
        "updated_at": "2023-12-01T16:06:58Z",
        "closed_at": "2023-12-01T16:06:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain==0.0.191\r\nllama-cpp-python==0.1.78\r\nchromadb==0.3.22\r\npython3.10\r\nwizard-vicuna-13B.ggmlv3.q4_0.bin\r\n\r\n### Who can help?\r\n\r\n@hwchase17 @agol\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nI have a slightly modified version of privateGPT running. I am facing a weird issue where the SelfQueryRetriever is creating attributes that do not exist in my ChromaDB. This is crashing the app when running the RetrievalQA with error `chromadb.errors.NoDatapointsException: No datapoints found for the supplied filter`. I have provided a list of the attributes that exists in my DB, but still the SelfQueryRetreiever is creating filters on metadata that does not exist.\r\n\r\nTo reproduce the problem, use the wizard-vicuna-13B.ggmlv3.q4_0.bin model provided by TheBloke/wizard-vicuna-13B-GGML on HuggingFace and run the below code. I don't think the choice of model has an impact here. The issue I am facing is the creation of metadata filters that do not exist. \r\n\r\nIs there a way to limit the attributes allowed by the SelfQueryRetriever?\r\n\r\n```python\r\nimport logging\r\n\r\nimport click\r\nimport torch\r\nfrom auto_gptq import AutoGPTQForCausalLM\r\nfrom huggingface_hub import hf_hub_download\r\nfrom langchain.chains import RetrievalQA\r\nfrom langchain.embeddings import HuggingFaceInstructEmbeddings\r\nfrom langchain.llms import HuggingFacePipeline, LlamaCpp\r\nfrom langchain.memory import ConversationBufferMemory\r\nfrom langchain.prompts import PromptTemplate\r\nfrom langchain.retrievers.self_query.base import SelfQueryRetriever\r\nfrom langchain.chains.query_constructor.base import AttributeInfo\r\nimport time\r\n\r\n# from langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\nfrom langchain.vectorstores import Chroma\r\nfrom transformers import (\r\n    AutoModelForCausalLM,\r\n    AutoTokenizer,\r\n    GenerationConfig,\r\n    LlamaForCausalLM,\r\n    LlamaTokenizer,\r\n    pipeline,\r\n)\r\n\r\nfrom constants import CHROMA_SETTINGS, EMBEDDING_MODEL_NAME, PERSIST_DIRECTORY, MODEL_ID, MODEL_BASENAME\r\nSEED = 42\r\n\r\n\r\ndef load_model(device_type, model_id, model_basename=None, local_model: bool = False, local_model_path: str = None):\r\n    \"\"\"\r\n    Select a model for text generation using the HuggingFace library.\r\n    If you are running this for the first time, it will download a model for you.\r\n    subsequent runs will use the model from the disk.\r\n\r\n    Args:\r\n        device_type (str): Type of device to use, e.g., \"cuda\" for GPU or \"cpu\" for CPU.\r\n        model_id (str): Identifier of the model to load from HuggingFace's model hub.\r\n        model_basename (str, optional): Basename of the model if using quantized models.\r\n            Defaults to None.\r\n\r\n    Returns:\r\n        HuggingFacePipeline: A pipeline object for text generation using the loaded model.\r\n\r\n    Raises:\r\n        ValueError: If an unsupported model or device type is provided.\r\n    \"\"\"\r\n    if local_model:\r\n        logging.info(f'Loading local model at {local_model_path}')\r\n    else:\r\n        logging.info(f\"Loading Model: {model_id}, on: {device_type}\")\r\n    logging.info(\"This action can take a few minutes!\")\r\n\r\n    if model_basename is not None:\r\n        # if \"ggml\" in model_basename:\r\n        if \".ggml\" in model_basename:\r\n            logging.info(\"Using Llamacpp for GGML quantized models\")\r\n            if local_model:\r\n                model_path = local_model_path\r\n            else:\r\n                model_path = hf_hub_download(repo_id=model_id, filename=model_basename)\r\n            max_ctx_size = 2048\r\n            kwargs = {\r\n                \"model_path\": model_path,\r\n                \"n_ctx\": max_ctx_size,\r\n                \"max_tokens\": max_ctx_size,\r\n            }\r\n            if device_type.lower() == \"mps\":\r\n                kwargs[\"n_gpu_layers\"] = 1000\r\n            if device_type.lower() == \"cuda\":\r\n                kwargs['seed'] = SEED\r\n                kwargs[\"n_gpu_layers\"] = 40\r\n\r\n            return LlamaCpp(**kwargs)\r\n\r\n        else:\r\n            # The code supports all huggingface models that ends with GPTQ and have some variation\r\n            # of .no-act.order or .safetensors in their HF repo.\r\n            logging.info(\"Using AutoGPTQForCausalLM for quantized models\")\r\n\r\n            if \".safetensors\" in model_basename:\r\n                # Remove the \".safetensors\" ending if present\r\n                model_basename = model_basename.replace(\".safetensors\", \"\")\r\n\r\n            tokenizer = AutoTokenizer.from_pretrained(model_id, use_fast=True)\r\n            logging.info(\"Tokenizer loaded\")\r\n\r\n            model = AutoGPTQForCausalLM.from_quantized(\r\n                model_id,\r\n                model_basename=model_basename,\r\n                use_safetensors=True,\r\n                trust_remote_code=True,\r\n                device=\"cuda:0\",\r\n                use_triton=False,\r\n                quantize_config=None,\r\n            )\r\n    elif (\r\n        device_type.lower() == \"cuda\"\r\n    ):  # The code supports all huggingface models that ends with -HF or which have a .bin\r\n        # file in their HF repo.\r\n        logging.info(\"Using AutoModelForCausalLM for full models\")\r\n        tokenizer = AutoTokenizer.from_pretrained(model_id)\r\n        logging.info(\"Tokenizer loaded\")\r\n\r\n        model = AutoModelForCausalLM.from_pretrained(\r\n            model_id,\r\n            device_map=\"auto\",\r\n            torch_dtype=torch.float16,\r\n            low_cpu_mem_usage=True,\r\n            trust_remote_code=True,\r\n            # max_memory={0: \"15GB\"} # Uncomment this line with you encounter CUDA out of memory errors\r\n        )\r\n        model.tie_weights()\r\n    else:\r\n        logging.info(\"Using LlamaTokenizer\")\r\n        tokenizer = LlamaTokenizer.from_pretrained(model_id)\r\n        model = LlamaForCausalLM.from_pretrained(model_id)\r\n\r\n    # Load configuration from the model to avoid warnings\r\n    generation_config = GenerationConfig.from_pretrained(model_id)\r\n    # see here for details:\r\n    # https://huggingface.co/docs/transformers/\r\n    # main_classes/text_generation#transformers.GenerationConfig.from_pretrained.returns\r\n\r\n    # Create a pipeline for text generation\r\n    pipe = pipeline(\r\n        \"text-generation\",\r\n        model=model,\r\n        tokenizer=tokenizer,\r\n        max_length=2048,\r\n        temperature=0,\r\n        top_p=0.95,\r\n        repetition_penalty=1.15,\r\n        generation_config=generation_config,\r\n    )\r\n\r\n    local_llm = HuggingFacePipeline(pipeline=pipe)\r\n    logging.info(\"Local LLM Loaded\")\r\n\r\n    return local_llm\r\n\r\n\r\n# chose device typ to run on as well as to show source documents.\r\n@click.command()\r\n@click.option(\r\n    \"--device_type\",\r\n    default=\"cuda\" if torch.cuda.is_available() else \"cpu\",\r\n    type=click.Choice(\r\n        [\r\n            \"cpu\",\r\n            \"cuda\",\r\n            \"ipu\",\r\n            \"xpu\",\r\n            \"mkldnn\",\r\n            \"opengl\",\r\n            \"opencl\",\r\n            \"ideep\",\r\n            \"hip\",\r\n            \"ve\",\r\n            \"fpga\",\r\n            \"ort\",\r\n            \"xla\",\r\n            \"lazy\",\r\n            \"vulkan\",\r\n            \"mps\",\r\n            \"meta\",\r\n            \"hpu\",\r\n            \"mtia\",\r\n        ],\r\n    ),\r\n    help=\"Device to run on. (Default is cuda)\",\r\n)\r\n@click.option(\r\n    \"--show_sources\",\r\n    \"-s\",\r\n    is_flag=True,\r\n    help=\"Show sources along with answers (Default is False)\",\r\n)\r\n@click.option(\r\n    \"--local_model\",\r\n    \"-lm\",\r\n    is_flag=True,\r\n    help=\"Use local model (Default is False)\",\r\n)\r\n@click.option(\r\n    \"--local_model_path\",\r\n    \"-lmp\",\r\n    default=None,\r\n    help=\"Path to local model. (Default is None)\",\r\n)\r\ndef main(device_type, show_sources, local_model: bool = False, local_model_path: str = None):\r\n    \"\"\"\r\n    This function implements the information retrieval task.\r\n\r\n\r\n    1. Loads an embedding model, can be HuggingFaceInstructEmbeddings or HuggingFaceEmbeddings\r\n    2. Loads the existing vectorestore that was created by inget.py\r\n    3. Loads the local LLM using load_model function - You can now set different LLMs.\r\n    4. Setup the Question Answer retreival chain.\r\n    5. Question answers.\r\n    \"\"\"\r\n\r\n    logging.info(f\"Running on: {device_type}\")\r\n    logging.info(f\"Display Source Documents set to: {show_sources}\")\r\n\r\n    embeddings = HuggingFaceInstructEmbeddings(model_name=EMBEDDING_MODEL_NAME, model_kwargs={\"device\": device_type})\r\n\r\n    # uncomment the following line if you used HuggingFaceEmbeddings in the ingest.py\r\n    # embeddings = HuggingFaceEmbeddings(model_name=EMBEDDING_MODEL_NAME)\r\n\r\n    # load the vectorstore\r\n    db = Chroma(\r\n        persist_directory=PERSIST_DIRECTORY,\r\n        embedding_function=embeddings,\r\n        client_settings=CHROMA_SETTINGS,\r\n    )\r\n\r\n    template = \"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer,\\\r\n    just say that you don't know, don't try to make up an answer.\r\n\r\n    {context}\r\n\r\n    {history}\r\n    Question: {question}\r\n    Helpful Answer:\"\"\"\r\n\r\n    prompt = PromptTemplate(input_variables=[\"history\", \"context\", \"question\"], template=template)\r\n    memory = ConversationBufferMemory(input_key=\"question\", memory_key=\"history\")\r\n\r\n    llm = load_model(\r\n        device_type, model_id=MODEL_ID, model_basename=MODEL_BASENAME, local_model=local_model,\r\n        local_model_path=local_model_path)\r\n\r\n    metadata_field_info = [\r\n        AttributeInfo(\r\n            name='country',\r\n            description='The country name.',\r\n            type='string'\r\n        ),\r\n        AttributeInfo(\r\n            name='source',\r\n            description='Filename and location of the source file.',\r\n            type='string'\r\n        )\r\n    ]\r\n\r\n    retriever = SelfQueryRetriever.from_llm(\r\n        llm=llm,\r\n        vectorstore=db,\r\n        document_contents='News, policies, and laws for various countries.',\r\n        metadata_field_info=metadata_field_info,\r\n        verbose=True,\r\n    )\r\n\r\n    qa = RetrievalQA.from_chain_type(\r\n        llm=llm,\r\n        chain_type=\"stuff\",\r\n        retriever=retriever,\r\n        return_source_documents=True,\r\n        chain_type_kwargs={\"prompt\": prompt, \"memory\": memory},\r\n    )\r\n    # Interactive questions and answers\r\n    while True:\r\n        query = input(\"\\nEnter a query: \")\r\n        if query == \"exit\":\r\n            break\r\n        # Get the answer from the chain\r\n        start = time.time()\r\n        res = qa(query)\r\n        answer, docs = res[\"result\"], res[\"source_documents\"]\r\n\r\n        # Print the result\r\n        print(f'Time: {time.time() - start}')\r\n        print(\"\\n\\n> Question:\")\r\n        print(query)\r\n        print(\"\\n> Answer:\")\r\n        print(answer)\r\n\r\n        if show_sources:  # this is a flag that you can set to disable showing answers.\r\n            # # Print the relevant sources used for the answer\r\n            print(\"----------------------------------SOURCE DOCUMENTS---------------------------\")\r\n            for document in docs:\r\n                print(\"\\n> \" + document.metadata[\"source\"] + \":\")\r\n                print(document.page_content)\r\n            print(\"----------------------------------SOURCE DOCUMENTS---------------------------\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    logging.basicConfig(\r\n        format=\"%(asctime)s - %(levelname)s - %(filename)s:%(lineno)s - %(message)s\", level=logging.INFO\r\n    )\r\n    main()\r\n```\r\n\r\n```bash\r\n2023-08-25 12:53:40,256 - INFO - run_localGPT.py:209 - Running on: cuda\r\n2023-08-25 12:53:40,256 - INFO - run_localGPT.py:210 - Display Source Documents set to: True\r\n2023-08-25 12:53:40,397 - INFO - SentenceTransformer.py:66 - Load pretrained SentenceTransformer: hkunlp/instructor-large\r\nload INSTRUCTOR_Transformer\r\nmax_seq_length  512\r\n2023-08-25 12:53:42,924 - INFO - __init__.py:88 - Running Chroma using direct local API.\r\n2023-08-25 12:53:42,929 - WARNING - __init__.py:43 - Using embedded DuckDB with persistence: data will be stored in: /home/waleedalfaris/localGPT/DB\r\n2023-08-25 12:53:42,934 - INFO - ctypes.py:22 - Successfully imported ClickHouse Connect C data optimizations\r\n2023-08-25 12:53:42,937 - INFO - json_impl.py:45 - Using python library for writing JSON byte strings\r\n2023-08-25 12:53:47,543 - INFO - duckdb.py:460 - loaded in 129337 embeddings\r\n2023-08-25 12:53:47,545 - INFO - duckdb.py:472 - loaded in 1 collections\r\n2023-08-25 12:53:47,546 - INFO - duckdb.py:89 - collection with name langchain already exists, returning existing collection\r\n2023-08-25 12:53:47,546 - INFO - run_localGPT.py:50 - Loading local model at /home/waleedalfaris/localGPT/models/wizard-vicuna-13B.ggmlv3.q4_0.bin\r\n2023-08-25 12:53:47,546 - INFO - run_localGPT.py:53 - This action can take a few minutes!\r\n2023-08-25 12:53:47,546 - INFO - run_localGPT.py:58 - Using Llamacpp for GGML quantized models\r\nggml_init_cublas: found 1 CUDA devices:\r\n  Device 0: Tesla T4, compute capability 7.5\r\nllama.cpp: loading model from /home/waleedalfaris/localGPT/models/wizard-vicuna-13B.ggmlv3.q4_0.bin\r\nllama_model_load_internal: format     = ggjt v3 (latest)\r\nllama_model_load_internal: n_vocab    = 32000\r\nllama_model_load_internal: n_ctx      = 2048\r\nllama_model_load_internal: n_embd     = 5120\r\nllama_model_load_internal: n_mult     = 256\r\nllama_model_load_internal: n_head     = 40\r\nllama_model_load_internal: n_head_kv  = 40\r\nllama_model_load_internal: n_layer    = 40\r\nllama_model_load_internal: n_rot      = 128\r\nllama_model_load_internal: n_gqa      = 1\r\nllama_model_load_internal: rnorm_eps  = 5.0e-06\r\nllama_model_load_internal: n_ff       = 13824\r\nllama_model_load_internal: freq_base  = 10000.0\r\nllama_model_load_internal: freq_scale = 1\r\nllama_model_load_internal: ftype      = 2 (mostly Q4_0)\r\nllama_model_load_internal: model size = 13B\r\nllama_model_load_internal: ggml ctx size =    0.11 MB\r\nllama_model_load_internal: using CUDA for GPU acceleration\r\nllama_model_load_internal: mem required  =  669.91 MB (+ 1600.00 MB per state)\r\nllama_model_load_internal: allocating batch_size x (640 kB + n_ctx x 160 B) = 480 MB VRAM for the scratch buffer\r\nllama_model_load_internal: offloading 40 repeating layers to GPU\r\nllama_model_load_internal: offloaded 40/43 layers to GPU\r\nllama_model_load_internal: total VRAM used: 7288 MB\r\nllama_new_context_with_model: kv self size  = 1600.00 MB\r\nAVX = 1 | AVX2 = 1 | AVX512 = 0 | AVX512_VBMI = 0 | AVX512_VNNI = 0 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 1 | SSE3 = 1 | VSX = 0 | \r\n\r\nEnter a query: what is the penalty for cybercrime in the United Arab Emirates?\r\n\r\nllama_print_timings:        load time =   786.98 ms\r\nllama_print_timings:      sample time =   158.14 ms /   196 runs   (    0.81 ms per token,  1239.39 tokens per second)\r\nllama_print_timings: prompt eval time = 83050.84 ms /   920 tokens (   90.27 ms per token,    11.08 tokens per second)\r\nllama_print_timings:        eval time = 22099.62 ms /   195 runs   (  113.33 ms per token,     8.82 tokens per second)\r\nllama_print_timings:       total time = 105962.51 ms\r\nquery=' ' filter=Operation(operator=<Operator.AND: 'and'>, arguments=[Comparison(comparator=<Comparator.EQ: 'eq'>, attribute='country', value='United Arab Emirates'), Comparison(comparator=<Comparator.EQ: 'eq'>, attribute='penalty', value='cybercrime')]) limit=None\r\nTraceback (most recent call last):\r\n  File \"/home/waleedalfaris/localGPT/run_localGPT.py\", line 302, in <module>\r\n    \r\n  File \"/home/waleedalfaris/localGPT/venv/lib/python3.10/site-packages/click/core.py\", line 1157, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/home/waleedalfaris/localGPT/venv/lib/python3.10/site-packages/click/core.py\", line 1078, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/home/waleedalfaris/localGPT/venv/lib/python3.10/site-packages/click/core.py\", line 1434, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/home/waleedalfaris/localGPT/venv/lib/python3.10/site-packages/click/core.py\", line 783, in invoke\r\n    return __callback(*args, **kwargs)\r\n  File \"/home/waleedalfaris/localGPT/run_localGPT.py\", line 279, in main\r\n    query = input(\"\\nEnter a query: \")\r\n  File \"/home/waleedalfaris/localGPT/venv/lib/python3.10/site-packages/langchain/chains/base.py\", line 140, in __call__\r\n    raise e\r\n  File \"/home/waleedalfaris/localGPT/venv/lib/python3.10/site-packages/langchain/chains/base.py\", line 134, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"/home/waleedalfaris/localGPT/venv/lib/python3.10/site-packages/langchain/chains/retrieval_qa/base.py\", line 119, in _call\r\n    docs = self._get_docs(question)\r\n  File \"/home/waleedalfaris/localGPT/venv/lib/python3.10/site-packages/langchain/chains/retrieval_qa/base.py\", line 181, in _get_docs\r\n    return self.retriever.get_relevant_documents(question)\r\n  File \"/home/waleedalfaris/localGPT/venv/lib/python3.10/site-packages/langchain/retrievers/self_query/base.py\", line 90, in get_relevant_documents\r\n    docs = self.vectorstore.search(new_query, self.search_type, **search_kwargs)\r\n  File \"/home/waleedalfaris/localGPT/venv/lib/python3.10/site-packages/langchain/vectorstores/base.py\", line 81, in search\r\n    return self.similarity_search(query, **kwargs)\r\n  File \"/home/waleedalfaris/localGPT/venv/lib/python3.10/site-packages/langchain/vectorstores/chroma.py\", line 182, in similarity_search\r\n    docs_and_scores = self.similarity_search_with_score(query, k, filter=filter)\r\n  File \"/home/waleedalfaris/localGPT/venv/lib/python3.10/site-packages/langchain/vectorstores/chroma.py\", line 230, in similarity_search_with_score\r\n    results = self.__query_collection(\r\n  File \"/home/waleedalfaris/localGPT/venv/lib/python3.10/site-packages/langchain/utils.py\", line 53, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/home/waleedalfaris/localGPT/venv/lib/python3.10/site-packages/langchain/vectorstores/chroma.py\", line 121, in __query_collection\r\n    return self._collection.query(\r\n  File \"/home/waleedalfaris/localGPT/venv/lib/python3.10/site-packages/chromadb/api/models/Collection.py\", line 219, in query\r\n    return self._client._query(\r\n  File \"/home/waleedalfaris/localGPT/venv/lib/python3.10/site-packages/chromadb/api/local.py\", line 408, in _query\r\n    uuids, distances = self._db.get_nearest_neighbors(\r\n  File \"/home/waleedalfaris/localGPT/venv/lib/python3.10/site-packages/chromadb/db/clickhouse.py\", line 576, in get_nearest_neighbors\r\n    raise NoDatapointsException(\r\nchromadb.errors.NoDatapointsException: No datapoints found for the supplied filter {\"$and\": [{\"country\": {\"$eq\": \"United Arab Emirates\"}}, {\"penalty\": {\"$eq\": \"cybercrime\"}}]}\r\n2023-08-25 13:05:24,584 - INFO - duckdb.py:414 - Persisting DB to disk, putting it in the save folder: /home/waleedalfaris/localGPT/DB\r\n```\r\n\r\n### Expected behavior\r\n\r\nResult of SelfQueryRetriever should only contain filters country with a value of United Arab Emirates and query should not be blank. Should have an ouptut similar to `query='cybercrime penalty' filter=Comparison(comparator=<Comparator.EQ: 'eq'>, attribute='country', value='United Arab Emirates') limit=None`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9761/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9761/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9760",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9760/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9760/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9760/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9760",
        "id": 1867029264,
        "node_id": "I_kwDOIPDwls5vSJsQ",
        "number": 9760,
        "title": "JavaScript LangChain Qdrant semantic search results: pageContent in each Document is undefined",
        "user": {
            "login": "amrohendawi",
            "id": 37808490,
            "node_id": "MDQ6VXNlcjM3ODA4NDkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/37808490?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amrohendawi",
            "html_url": "https://github.com/amrohendawi",
            "followers_url": "https://api.github.com/users/amrohendawi/followers",
            "following_url": "https://api.github.com/users/amrohendawi/following{/other_user}",
            "gists_url": "https://api.github.com/users/amrohendawi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amrohendawi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amrohendawi/subscriptions",
            "organizations_url": "https://api.github.com/users/amrohendawi/orgs",
            "repos_url": "https://api.github.com/users/amrohendawi/repos",
            "events_url": "https://api.github.com/users/amrohendawi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amrohendawi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-25T13:08:16Z",
        "updated_at": "2023-08-25T13:27:22Z",
        "closed_at": "2023-08-25T13:27:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n- LangChain version: 0.0.105\r\n- Platform: Macbook Pro M1 - Mac OS Ventura\r\n- Node.js version: v18.17.1\r\n- qdrant/js-client-rest: 1.4.0\n\n### Who can help?\n\n@hwchase17 \r\n@agola11 \r\n\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n**Related Components:**\r\n- Vector Stores / Retrievers\r\n- JavaScript LangChain Qdrant Wrapper\r\n\r\n**Information:**\r\nThe issue arises when attempting to perform a semantic search using the Qdrant wrapper in LangChain through JavaScript. The provided code snippet is as follows:\r\n\r\n```javascript\r\nconst embeddings = new OpenAIEmbeddings({ openAIApiKey: process.env.OPENAI_API_KEY })\r\n\r\nconst vectorStore = await QdrantVectorStore.fromExistingCollection(\r\n  embeddings,\r\n  {\r\n    url: process.env.QDRANT_URL,\r\n    collectionName: process.env.QDRANT_COLLECTION_NAME\r\n  })\r\n\r\nconst results = await vectorStore.similaritySearch(\"some query\", 4)\r\n```\r\n\r\nThe problem is that the `results` list of Documents contains undefined `pageContent`, while the metadata is fetched correctly. Strangely, when performing the same operation using the Python LangChain Qdrant wrapper, the `page_content` and `metadata` are both retrieved from the same Qdrant vectorstore correctly.\r\n\r\n**Reproduction:**\r\nTo reproduce the issue, follow these steps:\r\n\r\n1. Use the provided code snippet to perform a semantically search using the JavaScript LangChain Qdrant wrapper.\r\n2. Examine the `results` list of Documents and observe that the `pageContent` property is undefined.\r\n3. Compare the results with the results from the python equivalent code snippet:\r\n```python\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Qdrant\r\nfrom qdrant_client import QdrantClient\r\n\r\n    qdrant_client = QdrantClient(\r\n        api_key=os.getenv(\"QDRANT_API_KEY\"),\r\n        url=os.getenv(\"QDRANT_URL\")\r\n    )\r\n    # get existing Qdrant vectorstore\r\n    vectorstore = Qdrant(\r\n        embeddings=openai_embeddings,\r\n        client=qdrant_client,\r\n        collection_name=os.getenv(\"QDRANT_COLLECTION_NAME\"),\r\n    )\r\nvectorstore.similarity_search(query='some query', k=4)\r\n```\r\n\r\n\r\n\r\n\r\nPlease assist in resolving this discrepancy in the behavior between the two wrappers.\n\n### Expected behavior\n\nThe expected behavior is that when performing a semantically search using the JavaScript LangChain Qdrant wrapper, the `results` list of Documents should contain valid `pageContent` along with correct metadata, similar to the behavior in the Python LangChain Qdrant wrapper.\r\n\r\n\r\nExpected result (works with the python Qdrant wrapper):\r\n\r\n```bash\r\n[Document(page_content='\\n Some content of a document ', metadata={'source': 'https://some.source.com', 'title': 'some title'})\r\n...\r\n]\r\n\r\n```\r\n\r\n\r\nActual result:\r\n\r\n```bash\r\n[Document(page_content=undefined, metadata={'source': 'https://some.source.com', 'title': 'some title'})\r\n...\r\n]\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9760/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9760/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9759",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9759/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9759/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9759/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9759",
        "id": 1867001703,
        "node_id": "PR_kwDOIPDwls5Yyu-c",
        "number": 9759,
        "title": "Synthetic data generation",
        "user": {
            "login": "mateusz-wosinski-ds",
            "id": 142883372,
            "node_id": "U_kgDOCIQ6LA",
            "avatar_url": "https://avatars.githubusercontent.com/u/142883372?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mateusz-wosinski-ds",
            "html_url": "https://github.com/mateusz-wosinski-ds",
            "followers_url": "https://api.github.com/users/mateusz-wosinski-ds/followers",
            "following_url": "https://api.github.com/users/mateusz-wosinski-ds/following{/other_user}",
            "gists_url": "https://api.github.com/users/mateusz-wosinski-ds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mateusz-wosinski-ds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mateusz-wosinski-ds/subscriptions",
            "organizations_url": "https://api.github.com/users/mateusz-wosinski-ds/orgs",
            "repos_url": "https://api.github.com/users/mateusz-wosinski-ds/repos",
            "events_url": "https://api.github.com/users/mateusz-wosinski-ds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mateusz-wosinski-ds/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-08-25T12:50:21Z",
        "updated_at": "2023-09-19T23:40:50Z",
        "closed_at": "2023-09-19T23:29:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9759",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9759",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9759.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9759.patch",
            "merged_at": "2023-09-19T23:29:52Z"
        },
        "body": "### Description\r\n\r\nImplements synthetic data generation with the fields and preferences given by the user. Adds showcase notebook.\r\nCorresponding prompt was proposed for langchain-hub.\r\n\r\n### Example\r\n\r\n```\r\noutput = chain({\"fields\": {\"colors\": [\"blue\", \"yellow\"]}, \"preferences\": {\"style\": \"Make it in a style of a weather forecast.\"}})\r\nprint(output)\r\n\r\n# {'fields': {'colors': ['blue', 'yellow']},\r\n 'preferences': {'style': 'Make it in a style of a weather forecast.'},\r\n 'text': \"Good morning! Today's weather forecast brings a beautiful combination of colors to the sky, with hues of blue and yellow gently blending together like a mesmerizing painting.\"}\r\n```\r\n\r\n### Twitter handle \r\n\r\n@deepsense_ai @matt_wosinski",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9759/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9759/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9758",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9758/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9758/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9758/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9758",
        "id": 1866995735,
        "node_id": "I_kwDOIPDwls5vSBgX",
        "number": 9758,
        "title": "Issue:  To be able to store Weaviate (for that matter any vector store) Vector Store in REDIS",
        "user": {
            "login": "sai-guidizy",
            "id": 139336853,
            "node_id": "U_kgDOCE4clQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/139336853?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sai-guidizy",
            "html_url": "https://github.com/sai-guidizy",
            "followers_url": "https://api.github.com/users/sai-guidizy/followers",
            "following_url": "https://api.github.com/users/sai-guidizy/following{/other_user}",
            "gists_url": "https://api.github.com/users/sai-guidizy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sai-guidizy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sai-guidizy/subscriptions",
            "organizations_url": "https://api.github.com/users/sai-guidizy/orgs",
            "repos_url": "https://api.github.com/users/sai-guidizy/repos",
            "events_url": "https://api.github.com/users/sai-guidizy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sai-guidizy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-08-25T12:46:04Z",
        "updated_at": "2023-12-03T16:04:41Z",
        "closed_at": "2023-12-03T16:04:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHello,\r\n\r\nhave two separate docker images as follows.\r\n1. for the purpose of Loading documents and then tokenizing and creating embeddings and storing in Vector store DB like this `vector_store_db:Weaviate = weaviateInstance.from_documents(documents, self.embeddings, by_text=False) `\r\n2. Another docker image running FASTAPI which receives the actual Query. Now we want to be ablet to store the `vector_store_db` (created by the first docker image) in Redis Store so that the second docker image can get the `vector_store_db` from REDIS and execute the Query against it by invoking function like `similar_doc=vector_store_db.similarity_search(\"Question ?\",k=1)`\r\n\r\nwe tried number of options to be able to store the `vector_store_db` ( which is of type Weaviate as per the documentation here [https://api.python.langchain.com/en/latest/vectorstores/langchain.vectorstores.weaviate.Weaviate.html#langchain.vectorstores.weaviate.Weaviate.from_texts](url) ) REDIS , but we are getting SERIALIZATION issues.  We tried ` pickle, dill and json` and NO luck yet.\r\nAnd then we came across the issue link [https://github.com/langchain-ai/langchain/issues/9288](url) and we tried the `dumps()` option and our relevant code snippet looks like this \r\n\r\n```vs_redis_obj = dumps(vector_store_db)\r\n redis_client = redis.Redis(host='localhost', port=6379, encoding=\"utf-8\", decode_responses=True)\r\n redis_client.set(\"ourkey\", vs_serialized)\r\n vs_obj:Weaviate = redis_client.get(\"ourkey\")   \r\n #Start: sample code for Querying the Vector store DB\r\n similar_doc=vector_store_db.similarity_search(\"Who is trying to invade earth?\",k=1)\r\n```\r\nbut we are getting the error `Error :'str' object has no attribute 'similarity_search'` \r\n\r\nBasically we kind of get why the error is coming because of the following....\r\n1. when we store the object `vector_store_db` in REDIS its getting serialized to its `str` equivalent.\r\n2. So when we do redis.get() we get the vector_store_db to be its `str` equivalent.  And this is the reason why our call to `similarity_search()` fails .\r\n\r\nAny ideas how can we fix this please.\r\nBasically we need to be able to make the vector_store_db (created by one docker image) to another docker image through REDIS, \r\nAny help / suggestion is much appreciated and thanks in advance.\r\n\r\n\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9758/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9758/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9757",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9757/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9757/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9757/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9757",
        "id": 1866987071,
        "node_id": "I_kwDOIPDwls5vR_Y_",
        "number": 9757,
        "title": "Custom Map-Reduce chain",
        "user": {
            "login": "bhavishpahwa",
            "id": 108733252,
            "node_id": "U_kgDOBnsjRA",
            "avatar_url": "https://avatars.githubusercontent.com/u/108733252?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bhavishpahwa",
            "html_url": "https://github.com/bhavishpahwa",
            "followers_url": "https://api.github.com/users/bhavishpahwa/followers",
            "following_url": "https://api.github.com/users/bhavishpahwa/following{/other_user}",
            "gists_url": "https://api.github.com/users/bhavishpahwa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bhavishpahwa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bhavishpahwa/subscriptions",
            "organizations_url": "https://api.github.com/users/bhavishpahwa/orgs",
            "repos_url": "https://api.github.com/users/bhavishpahwa/repos",
            "events_url": "https://api.github.com/users/bhavishpahwa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bhavishpahwa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-25T12:39:58Z",
        "updated_at": "2023-12-01T16:07:08Z",
        "closed_at": "2023-12-01T16:07:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nHey wanted to request a feature within the map-reduce chain where a person can send his own list of chunks data of a corpus instead of creating chunks of data based on sending a textsplitter and a corpus.\n\n### Motivation\n\nSometime one might see map-reduce cases where one wants to use their own chunks of data and don't want to split a data corpus based on sending a textsplitter or character splitter.\n\n### Your contribution\n\nI can work on it by raising a PR.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9757/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9757/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9756",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9756/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9756/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9756/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9756",
        "id": 1866978050,
        "node_id": "PR_kwDOIPDwls5Yyp2K",
        "number": 9756,
        "title": "docs: Fix `CustomLLM` and `QA over Documents` docs",
        "user": {
            "login": "toddkim95",
            "id": 42592581,
            "node_id": "MDQ6VXNlcjQyNTkyNTgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/42592581?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/toddkim95",
            "html_url": "https://github.com/toddkim95",
            "followers_url": "https://api.github.com/users/toddkim95/followers",
            "following_url": "https://api.github.com/users/toddkim95/following{/other_user}",
            "gists_url": "https://api.github.com/users/toddkim95/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/toddkim95/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/toddkim95/subscriptions",
            "organizations_url": "https://api.github.com/users/toddkim95/orgs",
            "repos_url": "https://api.github.com/users/toddkim95/repos",
            "events_url": "https://api.github.com/users/toddkim95/events{/privacy}",
            "received_events_url": "https://api.github.com/users/toddkim95/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-25T12:33:34Z",
        "updated_at": "2023-08-26T01:36:47Z",
        "closed_at": "2023-08-26T01:36:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9756",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9756",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9756.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9756.patch",
            "merged_at": null
        },
        "body": " ### Description\r\n- Update  `CustomLLM._call`: Corrected the _call method in CustomLLM to include **kwargs, ensuring consistency with parent class.\r\n- Update `QA over Documents`: To fix `Page not found` error\r\n   - https://python.langchain.com/docs/use_cases/tabular -> https://python.langchain.com/docs/use_cases/sql\r\n   - https://python.langchain.com/docs/use_cases/code -> https://python.langchain.com/docs/use_cases/code_understanding\r\n ### Issue\r\nN/A\r\n ### Dependencies\r\nN/A\r\n ### Tag maintainer\r\nN/A\r\n ### Twitter handle\r\nN/A\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9756/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9756/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9755",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9755/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9755/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9755/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9755",
        "id": 1866844655,
        "node_id": "PR_kwDOIPDwls5YyMU4",
        "number": 9755,
        "title": "typo in locall llms fixed",
        "user": {
            "login": "NinoRisteski",
            "id": 95188570,
            "node_id": "U_kgDOBax2Wg",
            "avatar_url": "https://avatars.githubusercontent.com/u/95188570?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NinoRisteski",
            "html_url": "https://github.com/NinoRisteski",
            "followers_url": "https://api.github.com/users/NinoRisteski/followers",
            "following_url": "https://api.github.com/users/NinoRisteski/following{/other_user}",
            "gists_url": "https://api.github.com/users/NinoRisteski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NinoRisteski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NinoRisteski/subscriptions",
            "organizations_url": "https://api.github.com/users/NinoRisteski/orgs",
            "repos_url": "https://api.github.com/users/NinoRisteski/repos",
            "events_url": "https://api.github.com/users/NinoRisteski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NinoRisteski/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-25T11:07:50Z",
        "updated_at": "2023-09-04T03:29:42Z",
        "closed_at": "2023-09-04T03:29:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9755",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9755",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9755.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9755.patch",
            "merged_at": "2023-09-04T03:29:41Z"
        },
        "body": "Hi, \r\n\r\nI noticed a typo in the local_llms.ipynb file and fixed it. The word challenge is without 'a' in the original file. \r\n@baskaryan , @eyurtsev\r\n\r\nThanks.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9755/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9755/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9754",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9754/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9754/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9754/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9754",
        "id": 1866809321,
        "node_id": "PR_kwDOIPDwls5YyEoG",
        "number": 9754,
        "title": "Add 'download_dir' argument to VLLM",
        "user": {
            "login": "louisoutin",
            "id": 25135521,
            "node_id": "MDQ6VXNlcjI1MTM1NTIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25135521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/louisoutin",
            "html_url": "https://github.com/louisoutin",
            "followers_url": "https://api.github.com/users/louisoutin/followers",
            "following_url": "https://api.github.com/users/louisoutin/following{/other_user}",
            "gists_url": "https://api.github.com/users/louisoutin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/louisoutin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/louisoutin/subscriptions",
            "organizations_url": "https://api.github.com/users/louisoutin/orgs",
            "repos_url": "https://api.github.com/users/louisoutin/repos",
            "events_url": "https://api.github.com/users/louisoutin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/louisoutin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-25T10:41:43Z",
        "updated_at": "2023-09-04T17:53:49Z",
        "closed_at": "2023-09-04T17:53:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9754",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9754",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9754.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9754.patch",
            "merged_at": "2023-09-04T17:53:49Z"
        },
        "body": "- Description:\r\nAdd a 'download_dir' argument to VLLM model (to change the cache download directotu when retrieving a model from HF hub)\r\n- Issue:\r\nOn some remote machine, I want the cache dir to be in a volume where I have space (models are heavy nowadays). Sometimes the default HF cache dir might not be what we want.\r\n- Dependencies:\r\nNone",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9754/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9754/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9753",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9753/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9753/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9753/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9753",
        "id": 1866755124,
        "node_id": "PR_kwDOIPDwls5Yx4q6",
        "number": 9753,
        "title": "Nc/runnables seqmap tags",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-25T10:04:21Z",
        "updated_at": "2023-09-01T17:53:11Z",
        "closed_at": "2023-09-01T17:53:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9753",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9753",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9753.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9753.patch",
            "merged_at": "2023-09-01T17:53:10Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9753/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9753/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9752",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9752/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9752/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9752/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9752",
        "id": 1866736311,
        "node_id": "I_kwDOIPDwls5vRCK3",
        "number": 9752,
        "title": "Issue: can i load my local model by chain = LLMChain(llm=chat, prompt=chat_prompt)",
        "user": {
            "login": "191220042",
            "id": 80091648,
            "node_id": "MDQ6VXNlcjgwMDkxNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/80091648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/191220042",
            "html_url": "https://github.com/191220042",
            "followers_url": "https://api.github.com/users/191220042/followers",
            "following_url": "https://api.github.com/users/191220042/following{/other_user}",
            "gists_url": "https://api.github.com/users/191220042/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/191220042/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/191220042/subscriptions",
            "organizations_url": "https://api.github.com/users/191220042/orgs",
            "repos_url": "https://api.github.com/users/191220042/repos",
            "events_url": "https://api.github.com/users/191220042/events{/privacy}",
            "received_events_url": "https://api.github.com/users/191220042/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-25T09:51:51Z",
        "updated_at": "2023-12-01T16:07:13Z",
        "closed_at": "2023-12-01T16:07:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\ncan i load my local model by chain = LLMChain(llm=chat, prompt=chat_prompt) \n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9752/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9752/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9751",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9751/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9751/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9751/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9751",
        "id": 1866702165,
        "node_id": "PR_kwDOIPDwls5Yxs5n",
        "number": 9751,
        "title": "bump 273",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-25T09:35:02Z",
        "updated_at": "2023-08-25T10:05:05Z",
        "closed_at": "2023-08-25T10:05:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9751",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9751",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9751.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9751.patch",
            "merged_at": "2023-08-25T10:05:04Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9751/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9751/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9750",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9750/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9750/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9750/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9750",
        "id": 1866661448,
        "node_id": "I_kwDOIPDwls5vQv5I",
        "number": 9750,
        "title": "Prolonged execution times when using ConversationChain and ChatOpenAI",
        "user": {
            "login": "fernando080",
            "id": 82539263,
            "node_id": "MDQ6VXNlcjgyNTM5MjYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/82539263?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fernando080",
            "html_url": "https://github.com/fernando080",
            "followers_url": "https://api.github.com/users/fernando080/followers",
            "following_url": "https://api.github.com/users/fernando080/following{/other_user}",
            "gists_url": "https://api.github.com/users/fernando080/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fernando080/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fernando080/subscriptions",
            "organizations_url": "https://api.github.com/users/fernando080/orgs",
            "repos_url": "https://api.github.com/users/fernando080/repos",
            "events_url": "https://api.github.com/users/fernando080/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fernando080/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-25T09:08:55Z",
        "updated_at": "2023-09-20T07:19:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n## Description:\r\n\r\n### Context:\r\nI'm using LangChain to develop an application that interacts with the gpt-3.5-turbo-16k model to handle long chains of up to 16384 tokens.\r\n\r\n### Problem:\r\nWhile the first message processes quickly **(specially if i have not previues context in the inputs)**, from the second message onward, I experience excessively long execution times, exceeding 5 minutes. On occasions, I receive timeout errors exceeding 10 minutes like the following:\r\n\r\n`Retrying langchain.chat_models.openai.ChatOpenAI.completion_with_retry.<locals>._completion_with_retry in 1.0 seconds as it raised Timeout: Request timed out: HTTPSConnectionPool(host='api.openai.com', port=443): Read timed out. (read timeout=600).`\r\n\r\n#### **It's worth noting that when using the OpenAI API directly with the same context and length, the response is almost immediate.**\r\n\r\n### Relevant Code:\r\n```\r\nfrom langchain.chains.conversation.prompt import ENTITY_MEMORY_CONVERSATION_TEMPLATE\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.memory.entity import ConversationEntityMemory\r\n\r\ndef create_conversation_chain(inputs, num_msgs=3):\r\n    \"\"\"\r\n    Creates the base instance for the conversation with the llm and the memory\r\n    :param num_msgs: Number of messages to include in the memory buffer\r\n    :return: The conversation chain instance\r\n    \"\"\"\r\n    load_dotenv()\r\n\r\n    llm = ChatOpenAI(\r\n        temperature=0,\r\n        model_name=MODEL,\r\n        verbose=False,\r\n    )\r\n    memory = ConversationEntityMemory(\r\n        llm=llm,\r\n        k=num_msgs,\r\n    )\r\n\r\n    if inputs:\r\n        for inp in inputs:\r\n            memory.save_context(inp[0], inp[1])\r\n\r\n    conversation = ConversationChain(\r\n        llm=llm,\r\n        memory=memory,\r\n        prompt=ENTITY_MEMORY_CONVERSATION_TEMPLATE,\r\n        verbose=True,\r\n    )\r\n    return conversation\r\n\r\nconversation = create_conversation_chain(inputs=self.input_msgs_entries, num_msgs=num_msgs_to_include)\r\nans = self.conversation.predict(input=msg)\r\n```\r\nFeel free to send me questions about my code if you need to know something else, but essentialy that is what I have\r\n\r\n### Additional Details:\r\n\r\n1. Operating System: Windows 10\r\n2. Python Version: 3.10\r\n3. LangChain Version: 0.0.271\r\n4. I've tried with the streaming=True parameter cause I saw that in other issue, but the results remain the same.\r\n\r\n### Request:\r\nCould you help me identify and address the cause of these prolonged execution times when using LangChain, especially compared to direct use of the OpenAI API?\r\n\r\n\r\nThank you very much for your help!! ^^\n\n### Who can help?\n\n@hwchase17 @agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [X] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n## Steps to Reproduce the Behavior:\r\n\r\n1. Setup Environment:\r\n\r\n> - Install LangChain version 0.0.271 on a Windows 10 (but i tryed it in ubuntu and same problems) machine with Python 3.10.\r\n> - gpt-3.5-turbo-16k model.\r\n\r\n2. Implement the Conversation Chain:\r\n\r\n> - Utilize the create_conversation_chain function provided in the initial description.\r\n\r\n3. Provide Context:\r\n> - Use a context (inputs) that is long enough to approach the 6000 to 9000 (context + msg) tokens but i am also getting this time consuming responses with  lower bounds, I let you bellow one file with text (it is spanish text) that I use as an input to call gpt-3.5-turbo-16k.\r\n\r\n4. Initialize and Predict:\r\n> - Call the function:\r\n> `conversation = create_conversation_chain(inputs=input_msgs_entries, num_msgs=num_msgs_to_include_in_buffer)`\r\n> - Then, predict using:\r\n>  `ans = conversation.predict(input=msg)`\r\n\r\n5. Observe Delay:\r\n> - Note that while the first message processes quickly **(specially if i have not previues context in the inputs)**, subsequent messages experience prolonged execution times, sometimes exceeding 10 minutes.\r\n> - Occasionally, timeout errors might occur, indicating a failure in the request due to excessive waiting time.\r\n\r\n6. Compare with Direct OpenAI API:\r\n> - Directly send the same context and message to the OpenAI API, without using LangChain.\r\n> - Observe that the response is almost immediate, highlighting the difference in performance. \r\n\r\n7. Test with Streaming:\r\n> - Set the streaming=True parameter and observe that the prolonged execution times persist.\r\n\r\n\r\n[test_random_conv_text.txt](https://github.com/langchain-ai/langchain/files/12437477/test_random_conv_text.txt)\n\n### Expected behavior\n\n## Expected Behavior:\r\nWhen utilizing the create_conversation_chain function with the gpt-3.5-turbo-16k model to handle chains close to 16384 tokens:\r\n\r\n1. **Consistent Performance:** The execution times for each message, regardless of it being the first or subsequent ones, should be relatively consistent and not show drastic differences.\r\n\r\n2. **Reasonable Response Times:** Even for longer contexts approaching the model's token limit, the response time should be within a reasonable range, certainly not exceeding 10 minutes for a single prediction.\r\n \r\n3. **No Timeout Errors:** The system should handle the requests efficiently, avoiding timeout errors, especially if the direct OpenAI API call with the same context responds almost immediately.\r\n\r\n4. **Memory Efficiency:** The memory management system, especially when handling the context and inputs, should efficiently store and retrieve data without causing significant delays.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9750/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9750/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9749",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9749/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9749/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9749/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9749",
        "id": 1866651760,
        "node_id": "I_kwDOIPDwls5vQthw",
        "number": 9749,
        "title": "DirectoryLoader for different file types",
        "user": {
            "login": "nima-cp",
            "id": 139747625,
            "node_id": "U_kgDOCFRhKQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/139747625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nima-cp",
            "html_url": "https://github.com/nima-cp",
            "followers_url": "https://api.github.com/users/nima-cp/followers",
            "following_url": "https://api.github.com/users/nima-cp/following{/other_user}",
            "gists_url": "https://api.github.com/users/nima-cp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nima-cp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nima-cp/subscriptions",
            "organizations_url": "https://api.github.com/users/nima-cp/orgs",
            "repos_url": "https://api.github.com/users/nima-cp/repos",
            "events_url": "https://api.github.com/users/nima-cp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nima-cp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-25T09:03:10Z",
        "updated_at": "2023-12-14T16:06:33Z",
        "closed_at": "2023-12-14T16:06:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Discussed in https://github.com/langchain-ai/langchain/discussions/9605\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **nima-cp** August 22, 2023</sup>\r\nHello everyone, I wanna have a Q&A over some documents including pdf, xml and csv. I'm having some difficulty to write a DirectoryLoader for different types of files in a folder. I'm using Chroma and couldn't find a way to solve this. However, I found this in TS documentation:\r\n\r\n```typescript\r\n   const directoryLoader = new DirectoryLoader(filePath, {\r\n      '.pdf': (path) => new PDFLoader(path, { splitPages: true }),\r\n      '.docx': (path) => new DocxLoader(path),\r\n      '.json': (path) => new JSONLoader(path, '/texts'),\r\n      '.jsonl': (path) => new JSONLinesLoader(path, '/html'),\r\n      '.txt': (path) => new TextLoader(path),\r\n      '.csv': (path) => new CSVLoader(path, 'text'),\r\n      '.htm': (path) => new UnstructuredLoader(path),\r\n      '.html': (path) => new UnstructuredLoader(path),\r\n      '.ppt': (path) => new UnstructuredLoader(path),\r\n      '.pptx': (path) => new UnstructuredLoader(path),\r\n    });\r\n```\r\nHow can I write the same in Python?\r\n\r\n```python\r\nloader = DirectoryLoader(\r\n    filePath,\r\n    glob=\"./*.pdf\",\r\n    loader_cls=PyMuPDFLoader,\r\n    show_progress=True,\r\n)\r\n```</div>",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9749/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9749/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9748",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9748/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9748/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9748/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9748",
        "id": 1866641171,
        "node_id": "I_kwDOIPDwls5vQq8T",
        "number": 9748,
        "title": "BambooHR Tool",
        "user": {
            "login": "stevermeister",
            "id": 1526680,
            "node_id": "MDQ6VXNlcjE1MjY2ODA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1526680?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stevermeister",
            "html_url": "https://github.com/stevermeister",
            "followers_url": "https://api.github.com/users/stevermeister/followers",
            "following_url": "https://api.github.com/users/stevermeister/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevermeister/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stevermeister/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevermeister/subscriptions",
            "organizations_url": "https://api.github.com/users/stevermeister/orgs",
            "repos_url": "https://api.github.com/users/stevermeister/repos",
            "events_url": "https://api.github.com/users/stevermeister/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stevermeister/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 16,
        "created_at": "2023-08-25T08:56:25Z",
        "updated_at": "2023-12-01T16:07:18Z",
        "closed_at": "2023-12-01T16:07:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI would like to have BambooHR Tool here(https://python.langchain.com/docs/integrations/tools/).\r\nTo make it possible to request information about employees within the company, their vacations, and so on.  \n\n### Motivation\n\nBambooHR is quite a popular service, so I believe this tool will be used a lot. \n\n### Your contribution\n\nI am willing to contribute by coding a portion, but I am hesitant to code everything as it may be too much. It would be great if other enthusiasts could also join in.\r\n\r\nI've already found the BambooHR OpenAPI file\r\n[bamboo_openapi.json.zip](https://github.com/langchain-ai/langchain/files/12437406/bamboo_openapi.json.zip)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9748/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9748/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9747",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9747/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9747/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9747/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9747",
        "id": 1866620005,
        "node_id": "I_kwDOIPDwls5vQlxl",
        "number": 9747,
        "title": "Issue: LLM Multiple access problem ",
        "user": {
            "login": "wennycooper",
            "id": 7479445,
            "node_id": "MDQ6VXNlcjc0Nzk0NDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7479445?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wennycooper",
            "html_url": "https://github.com/wennycooper",
            "followers_url": "https://api.github.com/users/wennycooper/followers",
            "following_url": "https://api.github.com/users/wennycooper/following{/other_user}",
            "gists_url": "https://api.github.com/users/wennycooper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wennycooper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wennycooper/subscriptions",
            "organizations_url": "https://api.github.com/users/wennycooper/orgs",
            "repos_url": "https://api.github.com/users/wennycooper/repos",
            "events_url": "https://api.github.com/users/wennycooper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wennycooper/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-25T08:42:02Z",
        "updated_at": "2023-12-01T16:07:23Z",
        "closed_at": "2023-12-01T16:07:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, I would like to build a chat bot to support multple users to access the chat bot.\r\n\r\nSince the llm model size is very big, my VRAM can only load only one copy of LLM.\r\nI would like to know if there is any way to load the model once and multiple access concurrently.\r\n\r\nHere is what I just tried.\r\nI tried to create two threads, and each thread run the llm model with different prompt.\r\nUnfortunately, the responses are very strange. The r1 and r2 are gibberish code.\r\nIf I remove one of the thread, the response is good.\r\n\r\n`\r\nfrom langchain.llms import CTransformers\r\nfrom langchain.llms import LlamaCpp\r\nfrom langchain import PromptTemplate, LLMChain\r\nfrom langchain.callbacks.manager import CallbackManager\r\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\n\r\nimport yaml\r\nimport os\r\nimport threading\r\nimport datetime\r\nimport time\r\n\r\n\r\ndef job1():\r\n    print(\"job1: \", datetime.datetime.now())\r\n    question1 = \"Please introduce the history of China\"\r\n    r1 =  llm(question1)\r\n    print(\"r1:\", r1)\r\n\r\n\r\ndef job2():\r\n    print(\"job2: \", datetime.datetime.now())\r\n    question2 = \"Please introduce the history of The United States\"\r\n    r2 = llm(question2)\r\n    print(\"r2:\", r2)\r\n\r\n// load the model once\r\nllm = LlamaCpp(\r\n    model_path=\"/workspace/test/llama-2-7b-combined/ggml-model-q6_K.bin\",\r\n    n_gpu_layers=20,\r\n    n_batch=128,\r\n    n_ctx=2048,\r\n    temperature=0.1,\r\n    max_tokens=512,\r\n)\r\n\r\nt1 = threading.Thread(target=job1)\r\nt2 = threading.Thread(target=job2)\r\nt1.start()\r\nt2.start()\r\n\r\nt1.join()\r\nt2.join()\r\n\r\nprint(\"Done.\")\r\n\r\n`\r\n\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9747/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9747/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9746",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9746/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9746/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9746/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9746",
        "id": 1866525826,
        "node_id": "I_kwDOIPDwls5vQOyC",
        "number": 9746,
        "title": "Add `optional_variables` for templates and make `format_document` customizable",
        "user": {
            "login": "amicus-veritatis",
            "id": 81076998,
            "node_id": "MDQ6VXNlcjgxMDc2OTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/81076998?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amicus-veritatis",
            "html_url": "https://github.com/amicus-veritatis",
            "followers_url": "https://api.github.com/users/amicus-veritatis/followers",
            "following_url": "https://api.github.com/users/amicus-veritatis/following{/other_user}",
            "gists_url": "https://api.github.com/users/amicus-veritatis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amicus-veritatis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amicus-veritatis/subscriptions",
            "organizations_url": "https://api.github.com/users/amicus-veritatis/orgs",
            "repos_url": "https://api.github.com/users/amicus-veritatis/repos",
            "events_url": "https://api.github.com/users/amicus-veritatis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amicus-veritatis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-25T07:46:15Z",
        "updated_at": "2023-08-28T08:18:56Z",
        "closed_at": "2023-08-28T08:18:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\n 1. Ideally, current `input_variables` should be separated into `required_variables` and `allowed_variables`\r\n 2. `allowed_variables` should consist of `required_variables` + `optional_variables`\r\n 3. Current implementation of `format_document` requires some overhaul, as suggested by #7239. Since `format_document` is part of the schema, it should either be a class or, at least, its formatting and validation parts should be separated.\r\n\r\n```python\r\n# from:\r\ndef format_document(doc: Document, prompt: BasePromptTemplate) -> str:\r\n    base_info = {\"page_content\": doc.page_content, **doc.metadata}\r\n    missing_metadata = set(prompt.input_variables).difference(base_info)\r\n    if len(missing_metadata) > 0:\r\n        required_metadata = [\r\n            iv for iv in prompt.input_variables if iv != \"page_content\"\r\n        ]\r\n        raise ValueError(\r\n            f\"Document prompt requires documents to have metadata variables: \"\r\n            f\"{required_metadata}. Received document with missing metadata: \"\r\n            f\"{list(missing_metadata)}.\"\r\n        )\r\n    document_info = {k: base_info[k] for k in prompt.input_variables}\r\n    return prompt.format(**document_info)\r\n\r\n# into (assumes required_variables is input_variables - optional_variables, backward compatible, not ideal or elegant so far):\r\ndef _validate_document(doc: Document, prompt: BasePromptTemplate) -> None:\r\n   base_info = {\"page_content\": doc.page_content, **doc.metadata}\r\n   missing_metadata = set(prompt.required_variables).difference(base_info)\r\n    if missing_metadata:\r\n        raise ValueError(\r\n            f\"Document prompt requires documents to have metadata variables: \"\r\n            f\"{prompt.required_variables}. Received document with missing metadata: \"\r\n            f\"{list(missing_metadata)}.\"\r\n        )\r\n\r\ndef _format_document(doc: Document, prompt: BasePromptTemplate) -> None:\r\n    base_info = {\"page_content\": doc.page_content, **doc.metadata}\r\n    document_info = {k: base_info[k] for k in prompt.input_variables} # or allowed_variables\r\n    return prompt.format(**document_info)\r\n\r\ndef format_document(doc: Document, prompt: BasePromptTemplate, validation_function: Callable = _validate_document, formatting_function: Callable = _format_document, **kwargs) -> str:\r\n    _validate_document(doc, prompt)\r\n    return _format_document(doc, prompt, **kwargs) # format_kwargs?\r\n```\r\n\r\n### Motivation\r\n\r\nGiven that both `f-string` and `jinja2` support some control logic, it seems quite logical to allow optional variables, or to make `format_document` function more customizable.\r\n\r\n### Your contribution\r\n\r\nI'd like to work on it, but I believe there's a need for further discussion.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9746/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9746/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9745",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9745/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9745/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9745/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9745",
        "id": 1866480477,
        "node_id": "PR_kwDOIPDwls5Yw8ik",
        "number": 9745,
        "title": "Fix: when only config custom evaluators, the keys(input_key,prediction_key,reference_key) config will be lost ",
        "user": {
            "login": "liuhu",
            "id": 1286384,
            "node_id": "MDQ6VXNlcjEyODYzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1286384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liuhu",
            "html_url": "https://github.com/liuhu",
            "followers_url": "https://api.github.com/users/liuhu/followers",
            "following_url": "https://api.github.com/users/liuhu/following{/other_user}",
            "gists_url": "https://api.github.com/users/liuhu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liuhu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liuhu/subscriptions",
            "organizations_url": "https://api.github.com/users/liuhu/orgs",
            "repos_url": "https://api.github.com/users/liuhu/repos",
            "events_url": "https://api.github.com/users/liuhu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liuhu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-25T07:17:30Z",
        "updated_at": "2023-08-31T04:43:28Z",
        "closed_at": "2023-08-31T04:43:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9745",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9745",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9745.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9745.patch",
            "merged_at": null
        },
        "body": "* Description:  When only use  custom evaluators, Will meet ` Could not map run {which} with multiple keys {source} \\n Please manually specify a {which}_key`  ERROR from `ChainStringRunMapper`.   Because  the configuration of the keys(input_key,prediction_key,reference_key) are initialized only when `config.evaluators` are configured. So `ChainStringRunMapper` can't get the keys configuration.\r\n* Issue: None\r\n* Dependencies: None\r\n* Maintainer:  @hinthornw @baskaryan \r\n* Twitter handle: @_LiuHu\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9745/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9745/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9744",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9744/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9744/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9744/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9744",
        "id": 1866443166,
        "node_id": "I_kwDOIPDwls5vP6me",
        "number": 9744,
        "title": "unexpected behavior: retriever.get_relevant_documents ",
        "user": {
            "login": "Rexousia",
            "id": 45112812,
            "node_id": "MDQ6VXNlcjQ1MTEyODEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/45112812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Rexousia",
            "html_url": "https://github.com/Rexousia",
            "followers_url": "https://api.github.com/users/Rexousia/followers",
            "following_url": "https://api.github.com/users/Rexousia/following{/other_user}",
            "gists_url": "https://api.github.com/users/Rexousia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Rexousia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Rexousia/subscriptions",
            "organizations_url": "https://api.github.com/users/Rexousia/orgs",
            "repos_url": "https://api.github.com/users/Rexousia/repos",
            "events_url": "https://api.github.com/users/Rexousia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Rexousia/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-25T06:54:26Z",
        "updated_at": "2023-12-01T16:07:28Z",
        "closed_at": "2023-12-01T16:07:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nAs stated in the title, the query is returning, but not the relevant documents. The code snippet below illustrates the issue:\r\n```python\r\nquery = 'building bridges'\r\nfilter = Comparison(comparator=<Comparator.EQ: 'eq'>, attribute='construction_material', value='steel')\r\nlimit = None\r\n[]\r\n\r\n```\r\n\r\nI know that the documents and data are stored correctly because the query I am using works fine with similarity_search, and it returns the appropriate text. After splitting the PDF, I had to recreate the metadata and added it along with the documents. The meta_data field prints off without any problems when I access it in the similarity_search as well.\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n@agola11\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [X] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n**### Steps to Reproduce the Behavior:**\r\n\r\n1. **Load PDF:** Begin by loading the PDF file that you will be working with.\r\n2. **Append page_content:** Next, append the content from the PDF pages into an empty string called text.\r\n3. **Split text Recursively:** Split the text string recursively to segment the content.\r\n4. **Create Metadata for Split Text:** Use the following function to create metadata for the split text.\r\n\r\n```python\r\ndef create_metadata(title: str, section: int, material: str) -> dict:\r\n    metadata = {\r\n        \"title\": title,\r\n        \"section\": section,\r\n        \"material\": material,\r\n    }\r\n    return metadata\r\n\r\n```\r\n\r\n5. **Loop Over Split Text:** Iterate through the split text, appending custom metadata to a list.\r\n6. **Add Docs, Embeddings, Metadata:** Utilize the Chroma.from_texts method with the following parameters:\r\n```python\r\nvectordb = Chroma.from_texts(\r\n    texts=docs,\r\n    embedding=embedding,\r\n    persist_directory=persist_directory,\r\n    metadatas=metadatas_list,\r\n)\r\n```\r\n**Proceed with SelfQueryRetriever:** Finally, proceed to use the SelfQueryRetriever.from_llm method as described in the documentation.\r\n\r\n---------------------------------------------------------------------------------------------------------------------\r\n### Note:\r\nEverything works as intended with the similarity_search. The SelfQueryRetriever is returning as expected minus the relevant documents.\r\n\r\nMy suspicion is that the issue may be related to the Documents() class, but I recreated the object/class without any success regarding output. It should still function properly if the data is inserting fine into the database and all the other queries are working fine. What has lead me to this place early on is an issue arises with PDFs when they are split; thus, the workarounds are either:\r\n\r\n**Appending into an Empty String:** This is necessary because metadata becomes distorted, and page break behavior takes precedence over separators and chunk size.\r\n\r\n**Converting PDF to Image and Then to Text:** The process is PDF -> IMG -> Tesseract -> Text, which still requires metadata to be recreated.\r\n\r\n### Expected behavior\r\n\r\nExpected behavior:\r\nOutput the query and the data related to it, not just the query.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9744/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9744/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9742",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9742/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9742/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9742/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9742",
        "id": 1866402800,
        "node_id": "PR_kwDOIPDwls5YwrWX",
        "number": 9742,
        "title": "feature: add verbosity to create_qa_with_sources_chain",
        "user": {
            "login": "sajal2692",
            "id": 12205993,
            "node_id": "MDQ6VXNlcjEyMjA1OTkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/12205993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sajal2692",
            "html_url": "https://github.com/sajal2692",
            "followers_url": "https://api.github.com/users/sajal2692/followers",
            "following_url": "https://api.github.com/users/sajal2692/following{/other_user}",
            "gists_url": "https://api.github.com/users/sajal2692/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sajal2692/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sajal2692/subscriptions",
            "organizations_url": "https://api.github.com/users/sajal2692/orgs",
            "repos_url": "https://api.github.com/users/sajal2692/repos",
            "events_url": "https://api.github.com/users/sajal2692/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sajal2692/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-25T06:27:31Z",
        "updated_at": "2023-09-04T03:42:20Z",
        "closed_at": "2023-09-04T03:42:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9742",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9742",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9742.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9742.patch",
            "merged_at": "2023-09-04T03:42:20Z"
        },
        "body": "Adds a verbose parameter to the create_qa_with_sources_chain and create_qa_with_structure_chain functions\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9742/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9742/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9741",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9741/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9741/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9741/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9741",
        "id": 1866381027,
        "node_id": "PR_kwDOIPDwls5Ywmjm",
        "number": 9741,
        "title": "Fixed some Error Caused links and Grammatical error in multiple files",
        "user": {
            "login": "ShorthillsAI",
            "id": 141953346,
            "node_id": "U_kgDOCHYJQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/141953346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShorthillsAI",
            "html_url": "https://github.com/ShorthillsAI",
            "followers_url": "https://api.github.com/users/ShorthillsAI/followers",
            "following_url": "https://api.github.com/users/ShorthillsAI/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShorthillsAI/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShorthillsAI/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShorthillsAI/subscriptions",
            "organizations_url": "https://api.github.com/users/ShorthillsAI/orgs",
            "repos_url": "https://api.github.com/users/ShorthillsAI/repos",
            "events_url": "https://api.github.com/users/ShorthillsAI/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShorthillsAI/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-25T06:11:52Z",
        "updated_at": "2023-08-26T00:52:27Z",
        "closed_at": "2023-08-26T00:52:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9741",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9741",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9741.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9741.patch",
            "merged_at": null
        },
        "body": "Fixed some Error Caused links and Grammatical errors in multiple documentation files.\r\n\r\n@baskaryan , @eyurtsev \r\n\r\nThanks\r\nAashish Saini",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9741/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9741/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9740",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9740/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9740/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9740/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9740",
        "id": 1866283667,
        "node_id": "PR_kwDOIPDwls5YwQ8M",
        "number": 9740,
        "title": "multivector notebook",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-25T04:55:16Z",
        "updated_at": "2023-08-25T14:07:28Z",
        "closed_at": "2023-08-25T14:07:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9740",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9740",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9740.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9740.patch",
            "merged_at": "2023-08-25T14:07:27Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9740/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9740/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9739",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9739/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9739/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9739/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9739",
        "id": 1866267969,
        "node_id": "PR_kwDOIPDwls5YwNdX",
        "number": 9739,
        "title": "token chunks",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-25T04:38:16Z",
        "updated_at": "2023-08-25T19:52:09Z",
        "closed_at": "2023-08-25T19:52:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9739",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9739",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9739.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9739.patch",
            "merged_at": "2023-08-25T19:52:08Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9739/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9739/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9738",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9738/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9738/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9738/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9738",
        "id": 1866265317,
        "node_id": "PR_kwDOIPDwls5YwM2y",
        "number": 9738,
        "title": "Fix QuestionListOutputParser",
        "user": {
            "login": "skozlovf",
            "id": 730013,
            "node_id": "MDQ6VXNlcjczMDAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/730013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skozlovf",
            "html_url": "https://github.com/skozlovf",
            "followers_url": "https://api.github.com/users/skozlovf/followers",
            "following_url": "https://api.github.com/users/skozlovf/following{/other_user}",
            "gists_url": "https://api.github.com/users/skozlovf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skozlovf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skozlovf/subscriptions",
            "organizations_url": "https://api.github.com/users/skozlovf/orgs",
            "repos_url": "https://api.github.com/users/skozlovf/repos",
            "events_url": "https://api.github.com/users/skozlovf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skozlovf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-25T04:36:12Z",
        "updated_at": "2023-08-25T08:47:17Z",
        "closed_at": "2023-08-25T08:47:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9738",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9738",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9738.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9738.patch",
            "merged_at": "2023-08-25T08:47:17Z"
        },
        "body": "This PR fixes `QuestionListOutputParser` text splitting.\r\n\r\n`QuestionListOutputParser` incorrectly splits numbered list text into lines. If text doesn't end with `\\n` , the regex doesn't capture the last item. So it always returns `n - 1` items, and `WebResearchRetriever.llm_chain` generates less queries than requested in the search prompt.\r\n\r\nHow to reproduce:\r\n\r\n```python\r\nfrom langchain.retrievers.web_research import QuestionListOutputParser\r\n\r\nparser = QuestionListOutputParser()\r\n\r\ngood = parser.parse(\r\n    \"\"\"1. This is line one.\r\n    2. This is line two.\r\n    \"\"\"  # <-- !\r\n)\r\n\r\nbad = parser.parse(\r\n    \"\"\"1. This is line one.\r\n    2. This is line two.\"\"\"    # <-- No new line.\r\n)\r\n\r\nassert good.lines == ['1. This is line one.\\n', '2. This is line two.\\n'], good.lines\r\nassert bad.lines == ['1. This is line one.\\n', '2. This is line two.'], bad.lines\r\n```\r\n\r\nNOTE: Last item will not contain a line break but this seems ok because the items are stripped in the `WebResearchRetriever.clean_search_query()`.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9738/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9738/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9737",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9737/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9737/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9737/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9737",
        "id": 1866264892,
        "node_id": "PR_kwDOIPDwls5YwMw7",
        "number": 9737,
        "title": "add twitter chat loader doc",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-25T04:35:39Z",
        "updated_at": "2023-08-25T04:55:23Z",
        "closed_at": "2023-08-25T04:55:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9737",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9737",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9737.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9737.patch",
            "merged_at": "2023-08-25T04:55:22Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9737/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9737/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9735",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9735/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9735/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9735/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9735",
        "id": 1866229858,
        "node_id": "I_kwDOIPDwls5vPGhi",
        "number": 9735,
        "title": "Issue: Error in Similarity Search with MongoDB Vector Store in Langchain",
        "user": {
            "login": "kajasherif",
            "id": 101790522,
            "node_id": "U_kgDOBhEzOg",
            "avatar_url": "https://avatars.githubusercontent.com/u/101790522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kajasherif",
            "html_url": "https://github.com/kajasherif",
            "followers_url": "https://api.github.com/users/kajasherif/followers",
            "following_url": "https://api.github.com/users/kajasherif/following{/other_user}",
            "gists_url": "https://api.github.com/users/kajasherif/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kajasherif/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kajasherif/subscriptions",
            "organizations_url": "https://api.github.com/users/kajasherif/orgs",
            "repos_url": "https://api.github.com/users/kajasherif/repos",
            "events_url": "https://api.github.com/users/kajasherif/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kajasherif/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-25T03:52:38Z",
        "updated_at": "2023-10-27T00:59:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI've been using Langchain to connect with the MongoDB vector store. While the file upload functionality works seamlessly, I encounter an error when trying to use the similarity search feature. Here's the error message I receive:\r\n![image](https://github.com/langchain-ai/langchain/assets/101790522/f73cb88d-ae8c-49d8-995d-2b8749397508)\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9735/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9735/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9734",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9734/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9734/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9734/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9734",
        "id": 1866199668,
        "node_id": "PR_kwDOIPDwls5Yv-zH",
        "number": 9734,
        "title": "docs: misc modelIO fixes",
        "user": {
            "login": "seamusp",
            "id": 22579106,
            "node_id": "MDQ6VXNlcjIyNTc5MTA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/22579106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seamusp",
            "html_url": "https://github.com/seamusp",
            "followers_url": "https://api.github.com/users/seamusp/followers",
            "following_url": "https://api.github.com/users/seamusp/following{/other_user}",
            "gists_url": "https://api.github.com/users/seamusp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seamusp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seamusp/subscriptions",
            "organizations_url": "https://api.github.com/users/seamusp/orgs",
            "repos_url": "https://api.github.com/users/seamusp/repos",
            "events_url": "https://api.github.com/users/seamusp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seamusp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-25T03:14:06Z",
        "updated_at": "2023-09-04T06:16:22Z",
        "closed_at": "2023-09-04T03:33:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9734",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9734",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9734.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9734.patch",
            "merged_at": "2023-09-04T03:33:20Z"
        },
        "body": "Various improvements to the Model I/O section of the documentation\r\n\r\n- Changed \"Chat Model\" to \"chat model\" in a few spots for internal consistency\r\n- Minor spelling & grammar fixes to improve readability & comprehension",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9734/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9734/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9733",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9733/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9733/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9733/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9733",
        "id": 1866186574,
        "node_id": "I_kwDOIPDwls5vO79O",
        "number": 9733,
        "title": "AWS Sagemaker",
        "user": {
            "login": "maggarwal25",
            "id": 135863452,
            "node_id": "U_kgDOCBkcnA",
            "avatar_url": "https://avatars.githubusercontent.com/u/135863452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maggarwal25",
            "html_url": "https://github.com/maggarwal25",
            "followers_url": "https://api.github.com/users/maggarwal25/followers",
            "following_url": "https://api.github.com/users/maggarwal25/following{/other_user}",
            "gists_url": "https://api.github.com/users/maggarwal25/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maggarwal25/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maggarwal25/subscriptions",
            "organizations_url": "https://api.github.com/users/maggarwal25/orgs",
            "repos_url": "https://api.github.com/users/maggarwal25/repos",
            "events_url": "https://api.github.com/users/maggarwal25/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maggarwal25/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-08-25T02:57:42Z",
        "updated_at": "2023-12-01T16:07:32Z",
        "closed_at": "2023-12-01T16:07:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHi, I'm getting the following error with Langchain integration with AWS Sagemaker: \r\n`ValueError: Error raised by inference endpoint: An error occurred (ModelError) when calling the InvokeEndpoint operation: Received client error (424) from primary with message \"{\r\n  \"code\":424,\r\n  \"message\":\"prediction failure\",\r\n  \"error\":\"Input payload must contain a 'inputs' key and optionally a 'parameters' key containing a dictionary of parameters.\"\r\n}\".`\r\n\r\nI've tried adding a custom attribute to accept any relevant terms in order to run my model, but I'm still having issues. See below for my initialization of the model:\r\nchain = load_qa_chain(\r\n    llm=SagemakerEndpoint(\r\n        endpoint_name=\"endpointname\"\r\n        credentials_profile_name=\"profilename\",\r\n        region_name=\"region\",\r\n        model_kwargs={\"temperature\": 1e-10},\r\n        endpoint_kwargs={\"CustomAttributes\": \"accept_eula=true\"},\r\n        content_handler=content_handler,\r\n    ),\r\n    prompt=PROMPT,\r\n)\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nchain = load_qa_chain(\r\n    llm=SagemakerEndpoint(\r\n        endpoint_name=\"endpointname\"\r\n        credentials_profile_name=\"profilename\",\r\n        region_name=\"region\",\r\n        model_kwargs={\"temperature\": 1e-10},\r\n        endpoint_kwargs={\"CustomAttributes\": \"accept_eula=true\"},\r\n        content_handler=content_handler,\r\n    ),\r\n    prompt=PROMPT,\r\n)\r\n\n\n### Expected behavior\n\nerror described above",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9733/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9733/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9732",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9732/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9732/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9732/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9732",
        "id": 1866073423,
        "node_id": "I_kwDOIPDwls5vOgVP",
        "number": 9732,
        "title": "`Chatbots` use case example is not working",
        "user": {
            "login": "jaysonnph",
            "id": 140134804,
            "node_id": "U_kgDOCFpJlA",
            "avatar_url": "https://avatars.githubusercontent.com/u/140134804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jaysonnph",
            "html_url": "https://github.com/jaysonnph",
            "followers_url": "https://api.github.com/users/jaysonnph/followers",
            "following_url": "https://api.github.com/users/jaysonnph/following{/other_user}",
            "gists_url": "https://api.github.com/users/jaysonnph/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jaysonnph/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jaysonnph/subscriptions",
            "organizations_url": "https://api.github.com/users/jaysonnph/orgs",
            "repos_url": "https://api.github.com/users/jaysonnph/repos",
            "events_url": "https://api.github.com/users/jaysonnph/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jaysonnph/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-25T00:48:21Z",
        "updated_at": "2023-12-02T16:05:42Z",
        "closed_at": "2023-12-02T16:05:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain version: 0.0.271\r\nPlatform: Ubuntu 20.04\r\nDevice: Nvidia-T4\r\nPython version: 3.9.17\r\n\r\n\r\n### Who can help?\r\n\r\n@hwchase17 @agola11 \r\n\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [X] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```\r\nfrom typing import Any, Dict, List, Optional\r\nfrom langchain.pydantic_v1 import Field, root_validator\r\nfrom langchain.llms import VLLM\r\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\nfrom langchain.prompts import (\r\n    ChatPromptTemplate,\r\n    MessagesPlaceholder,\r\n    SystemMessagePromptTemplate,\r\n    HumanMessagePromptTemplate,\r\n)\r\nfrom langchain.chains import LLMChain\r\nfrom langchain.memory import ConversationBufferMemory\r\n\r\nclass MyVLLM(VLLM):\r\n    dtype: str = 'auto'\r\n    vllm_kwargs: Dict[str, Any] = Field(default_factory=dict)\r\n    @root_validator()\r\n    def validate_environment(cls, values: Dict) -> Dict:\r\n        \"\"\"Validate that python package exists in environment.\"\"\"\r\n\r\n        try:\r\n            from vllm import LLM as VLLModel\r\n        except ImportError:\r\n            raise ImportError(\r\n                \"Could not import vllm python package. \"\r\n                \"Please install it with `pip install vllm`.\"\r\n            )\r\n\r\n        values[\"client\"] = VLLModel(\r\n            model=values[\"model\"],\r\n            tensor_parallel_size=values[\"tensor_parallel_size\"],\r\n            trust_remote_code=values[\"trust_remote_code\"],\r\n            dtype=values[\"dtype\"],\r\n            **values['vllm_kwargs']\r\n        )\r\n\r\n        return values\r\n\r\nllm = MyVLLM(model=\"tiiuae/falcon-7b\",\r\n        trust_remote_code=True,  # mandatory for hf models\r\n        max_new_tokens=128,\r\n        top_k=10,\r\n        top_p=0.95,\r\n        temperature=0.8,\r\n        dtype='float16',\r\n        vllm_kwargs = {'gpu_memory_utilization': 0.98},\r\n        callbacks=[StreamingStdOutCallbackHandler()]\r\n)\r\n\r\n# Prompt \r\nprompt = ChatPromptTemplate(\r\n    messages=[\r\n        SystemMessagePromptTemplate.from_template(\r\n            \"You are a nice chatbot having a conversation with a human.\"\r\n        ),\r\n        # The `variable_name` here is what must align with memory\r\n        MessagesPlaceholder(variable_name=\"chat_history\"),\r\n        HumanMessagePromptTemplate.from_template(\"{question}\")\r\n    ]\r\n)\r\n\r\n# Notice that we `return_messages=True` to fit into the MessagesPlaceholder\r\n# Notice that `\"chat_history\"` aligns with the MessagesPlaceholder name\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\",return_messages=True)\r\nconversation = LLMChain(\r\n    llm=llm,\r\n    prompt=prompt,\r\n    verbose=True,\r\n    memory=memory\r\n)\r\n```\r\n\r\n### Expected behavior\r\n\r\nI am following the `Chatbots` example [here](https://python.langchain.com/docs/use_cases/chatbots).\r\nIt's not working as expected. The responses returned are weird that not just a single LLM response is there but also some human responses. What is happening there?\r\n\r\n![signal-2023-08-24-154224_002](https://github.com/langchain-ai/langchain/assets/140134804/02295cc8-11dc-42bb-8006-ff936befaa05)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9732/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9732/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9731",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9731/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9731/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9731/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9731",
        "id": 1866022327,
        "node_id": "PR_kwDOIPDwls5YvYlp",
        "number": 9731,
        "title": "Hub Push Ergonomics",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T23:32:56Z",
        "updated_at": "2023-08-25T01:06:29Z",
        "closed_at": "2023-08-25T00:41:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9731",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9731",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9731.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9731.patch",
            "merged_at": "2023-08-25T00:41:55Z"
        },
        "body": "\ud83d\udc4b me again\r\n\r\nImproves the hub pushing experience, returning a url instead of just a commit hash.\r\n\r\nGoes with hub sdk 0.1.8",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9731/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9731/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9730",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9730/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9730/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9730/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9730",
        "id": 1866016935,
        "node_id": "PR_kwDOIPDwls5YvXbb",
        "number": 9730,
        "title": "rfc: runnable mem",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T23:24:33Z",
        "updated_at": "2023-09-07T21:36:00Z",
        "closed_at": "2023-09-07T21:36:00Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9730",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9730",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9730.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9730.patch",
            "merged_at": null
        },
        "body": "![Screenshot 2023-08-24 at 4 24 12 PM](https://github.com/langchain-ai/langchain/assets/22008038/6a21b935-76e4-4533-a706-4a2be24e052e)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9730/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9730/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9728",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9728/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9728/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9728/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9728",
        "id": 1866002041,
        "node_id": "I_kwDOIPDwls5vOO55",
        "number": 9728,
        "title": "Langchain agent doesn't complete reasoning sequence stops halfway and can't use structured tools",
        "user": {
            "login": "t-ega",
            "id": 41376025,
            "node_id": "MDQ6VXNlcjQxMzc2MDI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/41376025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t-ega",
            "html_url": "https://github.com/t-ega",
            "followers_url": "https://api.github.com/users/t-ega/followers",
            "following_url": "https://api.github.com/users/t-ega/following{/other_user}",
            "gists_url": "https://api.github.com/users/t-ega/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t-ega/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t-ega/subscriptions",
            "organizations_url": "https://api.github.com/users/t-ega/orgs",
            "repos_url": "https://api.github.com/users/t-ega/repos",
            "events_url": "https://api.github.com/users/t-ega/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t-ega/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T23:02:33Z",
        "updated_at": "2023-11-30T16:05:51Z",
        "closed_at": "2023-11-30T16:05:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.271\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain import PromptTemplate\r\nfrom langchain.agents import AgentType\r\nfrom dotenv import load_dotenv\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.agents import initialize_agent\r\nfrom api.utils.agent.tools import view_capabilities_tool\r\nload_dotenv()\r\nsystem_message = \"You are required to use only the tools provided to answer a query.If no given tool can help,\"\\\r\n                  \" truthfully tell the user that you are unable to help them.Always end reply with see ya!.\"\\\r\n                  \"Query: {query}\"\r\n\r\n\r\nprompt_template = PromptTemplate(\r\n        template=system_message,\r\n        input_variables=[\"query\"],\r\n    )\r\n\r\ncapabilities = view_capabilities_tool.CapabilitiesTool()\r\n\r\nllm = ChatOpenAI(temperature=0)\r\nagent_chain = initialize_agent(\r\n    [capabilities],\r\n    llm,\r\n    agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,\r\n    verbose=True,\r\n    agent_kwargs={\r\n      \"system_message\": system_message\r\n    }\r\n)\r\n\r\nresponse = agent_chain.run(input=\"What can you do\")\r\nprint(response)\r\n\r\n\r\n\r\ncapabilities_tool:\r\nfrom typing import Type\r\nfrom langchain.tools import BaseTool\r\nfrom pydantic import BaseModel, BaseSettings\r\n\r\n\r\nclass CapabilitiesToolSchema(BaseModel):\r\n    pass\r\n\r\n\r\nclass CapabilitiesTool(BaseTool, BaseSettings):\r\n    name = \"capabilities_tool\"\r\n    description = \"\"\"Tool that shows what you are capable of doing.\"\"\"\r\n    args_schema: Type[CapabilitiesToolSchema] = CapabilitiesToolSchema\r\n\r\n    def _run(\r\n        self,\r\n    ) -> str:\r\n        body = (\"I can help you out with\"\r\n                \"\\nAdding a site\\nRemoving a  site\\nAdding an interest\\nRemoving an interest\\nViewing your details\\n \"\r\n                \"Opt out\")\r\n\r\n        return body\r\n\r\n\n\n### Expected behavior\n\nThe model is meant to go through the whole reasoning process, select a tool and wait for the response for that tool called.\r\nInstead the agent just stops at \"\"\"Action_Input: ...\"\"\" every time. The model doesnt use any tool given, sometimes it would give this steps:\r\n\r\n> Entering new AgentExecutor chain...\r\nI can use the capabilities_tool to see what I am capable of doing. Let me check.\r\n\r\n> Finished chain.\r\nI can use the capabilities_tool to see what I am capable of doing. Let me check.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9728/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9728/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9727",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9727/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9727/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9727/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9727",
        "id": 1866001085,
        "node_id": "PR_kwDOIPDwls5YvUD8",
        "number": 9727,
        "title": "Enable grammars for JSON, list w/ LLaMA",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T23:01:16Z",
        "updated_at": "2023-08-29T15:23:49Z",
        "closed_at": "2023-08-29T15:23:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9727",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9727",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9727.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9727.patch",
            "merged_at": null
        },
        "body": "Takes feedback from [here](https://github.com/abetlen/llama-cpp-python/issues/637#issuecomment-1692459836).\r\n\r\nAnd builds on [here](https://github.com/langchain-ai/langchain/pull/9712).\r\n\r\nI needed to modify `json.gbnf` to get it to work properly (else, it does not stop, and repeats newlines).\r\n\r\nI check it in temporarily, but it's not obvious it should actually live in this location.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9727/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9727/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9726",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9726/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9726/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9726/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9726",
        "id": 1865993227,
        "node_id": "I_kwDOIPDwls5vOMwL",
        "number": 9726,
        "title": "Pgvector support to filter by List",
        "user": {
            "login": "MichaelPeterJoyce",
            "id": 8957082,
            "node_id": "MDQ6VXNlcjg5NTcwODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8957082?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MichaelPeterJoyce",
            "html_url": "https://github.com/MichaelPeterJoyce",
            "followers_url": "https://api.github.com/users/MichaelPeterJoyce/followers",
            "following_url": "https://api.github.com/users/MichaelPeterJoyce/following{/other_user}",
            "gists_url": "https://api.github.com/users/MichaelPeterJoyce/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MichaelPeterJoyce/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MichaelPeterJoyce/subscriptions",
            "organizations_url": "https://api.github.com/users/MichaelPeterJoyce/orgs",
            "repos_url": "https://api.github.com/users/MichaelPeterJoyce/repos",
            "events_url": "https://api.github.com/users/MichaelPeterJoyce/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MichaelPeterJoyce/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-24T22:50:34Z",
        "updated_at": "2023-12-11T16:05:58Z",
        "closed_at": "2023-12-11T16:05:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nHi there, \r\n\r\nCurrently using PGVector you can pass a filter object. But this filter object only allows key value pairs. \r\n\r\n`Dict[str, str]. \r\n`\r\nI am requesting the ability to also send a list of strings for easy filter across many pieces of data.\r\n\r\n`Dict[str, list[str]]\r\n`\r\n### Motivation\r\n\r\nI have a lot of Data with Metadata that contains content type. \r\n\r\nI would like to provide a list of content types to PGvector and allow it to filter and return content from multiple types.\r\n\r\n### Your contribution\r\n\r\nN/A ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9726/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9726/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9725",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9725/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9725/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9725/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9725",
        "id": 1865972423,
        "node_id": "PR_kwDOIPDwls5YvN_R",
        "number": 9725,
        "title": "mv chat history",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T22:25:33Z",
        "updated_at": "2023-08-30T04:41:33Z",
        "closed_at": "2023-08-30T04:41:32Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9725",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9725",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9725.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9725.patch",
            "merged_at": "2023-08-30T04:41:32Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9725/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9725/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9724",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9724/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9724/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9724/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9724",
        "id": 1865945832,
        "node_id": "PR_kwDOIPDwls5YvIMw",
        "number": 9724,
        "title": "feat(llms): add missing params to huggingface text-generation",
        "user": {
            "login": "mspronesti",
            "id": 44113430,
            "node_id": "MDQ6VXNlcjQ0MTEzNDMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/44113430?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mspronesti",
            "html_url": "https://github.com/mspronesti",
            "followers_url": "https://api.github.com/users/mspronesti/followers",
            "following_url": "https://api.github.com/users/mspronesti/following{/other_user}",
            "gists_url": "https://api.github.com/users/mspronesti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mspronesti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mspronesti/subscriptions",
            "organizations_url": "https://api.github.com/users/mspronesti/orgs",
            "repos_url": "https://api.github.com/users/mspronesti/repos",
            "events_url": "https://api.github.com/users/mspronesti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mspronesti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-24T21:57:30Z",
        "updated_at": "2023-09-01T20:19:07Z",
        "closed_at": "2023-09-01T20:16:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9724",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9724",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9724.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9724.patch",
            "merged_at": "2023-09-01T20:16:28Z"
        },
        "body": "This small PR aims at supporting the following missing parameters in the `HuggingfaceTextGen` LLM:\r\n- `return_full_text` - sometimes useful for completion tasks\r\n- `do_sample` - quite handy to control the randomness of the model.\r\n- `watermark`\r\n\r\n@hwchase17 @baskaryan",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9724/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9724/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9723",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9723/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9723/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9723/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9723",
        "id": 1865922089,
        "node_id": "PR_kwDOIPDwls5YvC8c",
        "number": 9723,
        "title": "remove Value error \"pyspark is not installed. Please install it with `pip i\u2026",
        "user": {
            "login": "Jurik-001",
            "id": 123458520,
            "node_id": "U_kgDOB1vT2A",
            "avatar_url": "https://avatars.githubusercontent.com/u/123458520?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jurik-001",
            "html_url": "https://github.com/Jurik-001",
            "followers_url": "https://api.github.com/users/Jurik-001/followers",
            "following_url": "https://api.github.com/users/Jurik-001/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jurik-001/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jurik-001/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jurik-001/subscriptions",
            "organizations_url": "https://api.github.com/users/Jurik-001/orgs",
            "repos_url": "https://api.github.com/users/Jurik-001/repos",
            "events_url": "https://api.github.com/users/Jurik-001/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jurik-001/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-24T21:37:09Z",
        "updated_at": "2023-08-27T16:30:23Z",
        "closed_at": "2023-08-25T05:18:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9723",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9723",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9723.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9723.patch",
            "merged_at": "2023-08-25T05:18:56Z"
        },
        "body": "Description: You cannot execute spark_sql with versions prior to 3.4 due to the introduction of pyspark.errors in version 3.4.\r\nAnd if you are below you get 3.4 \"pyspark is not installed. Please install it with pip nstall pyspark\" which is not helpful. Also if you not have pyspark installed you get already the error in init. I would return all errors. But if you have a different idea feel free to comment.\r\n\r\nIssue: None\r\nDependencies: None\r\nMaintainer:",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9723/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9723/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9722",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9722/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9722/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9722/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9722",
        "id": 1865918506,
        "node_id": "PR_kwDOIPDwls5YvCJC",
        "number": 9722,
        "title": "fix integration deps",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T21:34:15Z",
        "updated_at": "2023-08-24T22:06:54Z",
        "closed_at": "2023-08-24T22:06:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9722",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9722",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9722.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9722.patch",
            "merged_at": "2023-08-24T22:06:53Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9722/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9722/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9721",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9721/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9721/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9721/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9721",
        "id": 1865862821,
        "node_id": "PR_kwDOIPDwls5Yu2Cm",
        "number": 9721,
        "title": "rm google api core",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T20:49:12Z",
        "updated_at": "2023-08-24T21:20:59Z",
        "closed_at": "2023-08-24T21:20:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9721",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9721",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9721.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9721.patch",
            "merged_at": "2023-08-24T21:20:58Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9721/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9721/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9719",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9719/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9719/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9719/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9719",
        "id": 1865802598,
        "node_id": "PR_kwDOIPDwls5Yuoz3",
        "number": 9719,
        "title": "Xata as  a chat message memory store",
        "user": {
            "login": "tsg",
            "id": 101817,
            "node_id": "MDQ6VXNlcjEwMTgxNw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/101817?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tsg",
            "html_url": "https://github.com/tsg",
            "followers_url": "https://api.github.com/users/tsg/followers",
            "following_url": "https://api.github.com/users/tsg/following{/other_user}",
            "gists_url": "https://api.github.com/users/tsg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tsg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tsg/subscriptions",
            "organizations_url": "https://api.github.com/users/tsg/orgs",
            "repos_url": "https://api.github.com/users/tsg/repos",
            "events_url": "https://api.github.com/users/tsg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tsg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T20:02:13Z",
        "updated_at": "2023-08-25T00:37:47Z",
        "closed_at": "2023-08-25T00:37:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9719",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9719",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9719.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9719.patch",
            "merged_at": "2023-08-25T00:37:47Z"
        },
        "body": "This adds Xata as a memory store also to the python version of LangChain, similar to the [one for LangChain.js](https://github.com/hwchase17/langchainjs/pull/2217).\r\n\r\nI have added a Jupyter Notebook with a simple and a more complex example using an agent.\r\n\r\nTo run the integration test, you need to execute something like:\r\n\r\n```\r\nXATA_API_KEY='xau_...' XATA_DB_URL=\"https://demo-uni3q8.eu-west-1.xata.sh/db/langchain\"  poetry run pytest tests/integration_tests/memory/test_xata.py\r\n```\r\n\r\nWhere `langchain` is the database you create in Xata.\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9719/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9719/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9718",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9718/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9718/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9718/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9718",
        "id": 1865798696,
        "node_id": "PR_kwDOIPDwls5Yun9y",
        "number": 9718,
        "title": "rfc/wip Bagatur/new msg",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T19:59:06Z",
        "updated_at": "2023-09-04T17:53:28Z",
        "closed_at": "2023-09-04T17:53:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9718",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9718",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9718.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9718.patch",
            "merged_at": null
        },
        "body": "![Screenshot 2023-08-24 at 12 58 48 PM](https://github.com/langchain-ai/langchain/assets/22008038/3b40de97-9920-4b42-9a72-dd3107f9c0a7)\r\n![Screenshot 2023-08-24 at 12 58 51 PM](https://github.com/langchain-ai/langchain/assets/22008038/23444ed7-c858-432c-a000-56d97e34c648)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9718/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9718/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9717",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9717/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9717/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9717/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9717",
        "id": 1865791331,
        "node_id": "I_kwDOIPDwls5vNbdj",
        "number": 9717,
        "title": "Langchain QA over large documents results in Rate limit errors",
        "user": {
            "login": "gourao",
            "id": 10397092,
            "node_id": "MDQ6VXNlcjEwMzk3MDky",
            "avatar_url": "https://avatars.githubusercontent.com/u/10397092?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gourao",
            "html_url": "https://github.com/gourao",
            "followers_url": "https://api.github.com/users/gourao/followers",
            "following_url": "https://api.github.com/users/gourao/following{/other_user}",
            "gists_url": "https://api.github.com/users/gourao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gourao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gourao/subscriptions",
            "organizations_url": "https://api.github.com/users/gourao/orgs",
            "repos_url": "https://api.github.com/users/gourao/repos",
            "events_url": "https://api.github.com/users/gourao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gourao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-24T19:54:13Z",
        "updated_at": "2023-12-12T16:33:44Z",
        "closed_at": "2023-08-29T01:03:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain Version: 0.0.258\r\nPython Version 3.8.10\r\nUbuntu 20.04.5 LTS\r\n\r\nWe are following the instructions from the blog posted at https://python.langchain.com/docs/use_cases/question_answering/\r\n\r\nWe find that this works on small documents/directories.  However when we run it on larger data sets, we get rate limit errors as below:\r\n\r\n```\r\nRetrying langchain.embeddings.openai.embed_with_retry.<locals>._embed_with_retry in 4.0 seconds as it raised RateLimitError: Rate limit reached for default-text-embedding-ada-002 in organization org-RVhTeiJGcKtuLfYUSO6rLABk on tokens per min. Limit: 1000000 / min. Current: 899517 / min. Contact us through our help center at help.openai.com if you continue to have issues..\r\nRetrying langchain.embeddings.openai.embed_with_retry.<locals>._embed_with_retry in 4.0 seconds as it raised RateLimitError: Rate limit reached for default-text-embedding-ada-002 in organization org-RVhTeiJGcKtuLfYUSO6rLABk on tokens per min. Limit: 1000000 / min. Current: 887493 / min. Contact us through our help center at help.openai.com if you continue to have issues..\r\n```\r\n\r\nSince we have a paid account with OpenAI we doubt we are running into any actual issues with OpenAI.  Looking at their dashboird, we see we are well under any limits.\r\n\r\nOur full code that demonstrates this issue is posted below:\r\n\r\n```\r\nimport os\r\nimport sys\r\nimport environ\r\n\r\nfrom langchain.document_loaders import DirectoryLoader\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\n\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Chroma\r\n\r\nfrom langchain.chains import RetrievalQA\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.prompts import PromptTemplate\r\n\r\nenv = environ.Env()\r\nenviron.Env.read_env()\r\n\r\n# Load API key and document location\r\nOPENAI_API_KEY = env('OPENAI_API_KEY')\r\n\r\nif OPENAI_API_KEY == \"\":\r\n        print(\"Missing OpenAPI key\")\r\n        exit()\r\n\r\nprint(\"Using OpenAPI with key [\"+OPENAI_API_KEY+\"]\")\r\n\r\npath = sys.argv[1]\r\nif path == \"\":\r\n        print(\"Missing document path\")\r\n        exit()\r\n\r\n# Document loading\r\nloader = DirectoryLoader(path, glob=\"*\")\r\ndata = loader.load()\r\n\r\n# Text splitting\r\ntext_splitter = RecursiveCharacterTextSplitter(chunk_size = 500, chunk_overlap = 0)\r\nall_splits = text_splitter.split_documents(data)\r\n\r\n# Create retriever\r\nvectorstore = Chroma.from_documents(documents=all_splits, embedding=OpenAIEmbeddings())\r\n\r\n# Connect to LLM for generation\r\n\r\ntemplate = \"\"\"Use the following pieces of context to answer the question at the end.\r\nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\r\nUse three sentences maximum and keep the answer as concise as possible.\r\nAlways say \"thanks for asking!\" at the end of the answer.\r\n{context}\r\nQuestion: {question}\r\nHelpful Answer:\"\"\"\r\nQA_CHAIN_PROMPT = PromptTemplate.from_template(template)\r\n\r\nllm = ChatOpenAI(model_name=\"gpt-3.5-turbo\", temperature=0)\r\nqa_chain = RetrievalQA.from_chain_type(\r\n    llm,\r\n    retriever=vectorstore.as_retriever(),\r\n    chain_type_kwargs={\"prompt\": QA_CHAIN_PROMPT}\r\n)\r\n\r\n# prompt loop\r\ndef get_prompt():\r\n        print(\"Type 'exit' to quit\")\r\n\r\n        while True:\r\n                prompt = input(\"Enter a prompt: \")\r\n\r\n                if prompt.lower() == 'exit':\r\n                        print('Exiting...')\r\n                        break\r\n                else:\r\n                        try:\r\n                                result = qa_chain({\"query\": prompt})\r\n                                print(result[\"result\"])\r\n                        except Exception as e:\r\n                                print(e)\r\n\r\nget_prompt()\r\n```\r\n\r\n\r\n\r\n### Who can help?\r\n\r\n@eyurtsev @hwchase17 @agola11\r\n\r\n### Information\r\n\r\n- [x] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nYou can run the code posted above against any document/directory that is large... try with something over 50MB\r\n\r\n### Expected behavior\r\n\r\nA correct chat reply",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9717/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9717/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9716",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9716/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9716/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9716/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9716",
        "id": 1865784286,
        "node_id": "PR_kwDOIPDwls5Yukxn",
        "number": 9716,
        "title": "change error \"pyspark is not installed. Please install it with `pip i\u2026",
        "user": {
            "login": "Jurik-001",
            "id": 123458520,
            "node_id": "U_kgDOB1vT2A",
            "avatar_url": "https://avatars.githubusercontent.com/u/123458520?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jurik-001",
            "html_url": "https://github.com/Jurik-001",
            "followers_url": "https://api.github.com/users/Jurik-001/followers",
            "following_url": "https://api.github.com/users/Jurik-001/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jurik-001/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jurik-001/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jurik-001/subscriptions",
            "organizations_url": "https://api.github.com/users/Jurik-001/orgs",
            "repos_url": "https://api.github.com/users/Jurik-001/repos",
            "events_url": "https://api.github.com/users/Jurik-001/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jurik-001/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T19:48:47Z",
        "updated_at": "2023-08-24T21:28:08Z",
        "closed_at": "2023-08-24T21:27:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9716",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9716",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9716.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9716.patch",
            "merged_at": null
        },
        "body": "Description: The issue is you can not run spark_sql with a version below 3.4, because pyspark.errors is added in 3.4.\r\nAnd if you are below you get 3.4  \"pyspark is not installed. Please install it with `pip nstall pyspark`\" which is not helpful. Also if you not have pyspark installed you get already the error in __init__. I would return all errors. But if you have a different idea feel free to comment.\r\n\r\nIssue: None\r\nDependencies: None\r\nMaintainer: ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9716/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9716/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9715",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9715/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9715/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9715/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9715",
        "id": 1865729449,
        "node_id": "I_kwDOIPDwls5vNMWp",
        "number": 9715,
        "title": "Issue: pandas agent tries to create new variables but returns along the lines of \"the top 10 are {top_10_df}\"",
        "user": {
            "login": "batmanscode",
            "id": 29989939,
            "node_id": "MDQ6VXNlcjI5OTg5OTM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/29989939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/batmanscode",
            "html_url": "https://github.com/batmanscode",
            "followers_url": "https://api.github.com/users/batmanscode/followers",
            "following_url": "https://api.github.com/users/batmanscode/following{/other_user}",
            "gists_url": "https://api.github.com/users/batmanscode/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/batmanscode/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/batmanscode/subscriptions",
            "organizations_url": "https://api.github.com/users/batmanscode/orgs",
            "repos_url": "https://api.github.com/users/batmanscode/repos",
            "events_url": "https://api.github.com/users/batmanscode/events{/privacy}",
            "received_events_url": "https://api.github.com/users/batmanscode/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-24T19:07:43Z",
        "updated_at": "2023-10-30T10:31:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nIt looks like it's creating new dataframes to answer complex questions, but in the answer it provides it keeps referencing the variable name rather than the printed variable.\r\n\r\nDoes the current agent not have the ability to create and use new variables?\r\n\r\nNote: I'm using the CSV agent as a tool within another agent\n\n### Suggestion:\n\nWill the CSV agent having the create file tool alleviate this?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9715/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9715/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9713",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9713/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9713/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9713/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9713",
        "id": 1865612735,
        "node_id": "PR_kwDOIPDwls5Yt_Pp",
        "number": 9713,
        "title": "Add Code LLaMA to code QA use case",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T17:42:32Z",
        "updated_at": "2023-08-24T18:03:36Z",
        "closed_at": "2023-08-24T18:03:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9713",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9713",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9713.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9713.patch",
            "merged_at": "2023-08-24T18:03:35Z"
        },
        "body": "Use [Ollama integration](https://ollama.ai/blog/run-code-llama-locally).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9713/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9713/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9712",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9712/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9712/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9712/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9712",
        "id": 1865515267,
        "node_id": "PR_kwDOIPDwls5YtqBL",
        "number": 9712,
        "title": "feat: grammar-based sampling in llama-cpp",
        "user": {
            "login": "eryk-dsai",
            "id": 142571618,
            "node_id": "U_kgDOCH94Yg",
            "avatar_url": "https://avatars.githubusercontent.com/u/142571618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eryk-dsai",
            "html_url": "https://github.com/eryk-dsai",
            "followers_url": "https://api.github.com/users/eryk-dsai/followers",
            "following_url": "https://api.github.com/users/eryk-dsai/following{/other_user}",
            "gists_url": "https://api.github.com/users/eryk-dsai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eryk-dsai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eryk-dsai/subscriptions",
            "organizations_url": "https://api.github.com/users/eryk-dsai/orgs",
            "repos_url": "https://api.github.com/users/eryk-dsai/repos",
            "events_url": "https://api.github.com/users/eryk-dsai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eryk-dsai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-08-24T16:32:59Z",
        "updated_at": "2023-08-28T16:52:56Z",
        "closed_at": "2023-08-28T16:52:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9712",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9712",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9712.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9712.patch",
            "merged_at": "2023-08-28T16:52:56Z"
        },
        "body": "## Description \r\n\r\nThe following PR enables the [grammar-based sampling](https://github.com/ggerganov/llama.cpp/tree/master/grammars) in llama-cpp LLM.\r\n\r\nIn short, loading file with formal grammar definition will constrain model outputs. For instance, one can force the model to generate valid JSON or generate only python lists.\r\n\r\nIn the follow-up PR we will add:\r\n* docs with some description why it is cool and how it works\r\n* maybe some code sample for some task such as in llama repo",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9712/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9712/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9711",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9711/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9711/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9711/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9711",
        "id": 1865503353,
        "node_id": "PR_kwDOIPDwls5Ytndd",
        "number": 9711,
        "title": "Nc/runnables retry",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-24T16:24:45Z",
        "updated_at": "2023-09-01T14:52:22Z",
        "closed_at": "2023-09-01T14:52:20Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9711",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9711",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9711.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9711.patch",
            "merged_at": "2023-09-01T14:52:20Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9711/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9711/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9710",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9710/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9710/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9710/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9710",
        "id": 1865473019,
        "node_id": "PR_kwDOIPDwls5Ytg9Y",
        "number": 9710,
        "title": "sort api classes",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-24T16:05:44Z",
        "updated_at": "2023-08-24T20:53:51Z",
        "closed_at": "2023-08-24T20:53:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9710",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9710",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9710.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9710.patch",
            "merged_at": "2023-08-24T20:53:50Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9710/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9710/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9708",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9708/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9708/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9708/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9708",
        "id": 1865407010,
        "node_id": "PR_kwDOIPDwls5YtSbQ",
        "number": 9708,
        "title": "Chat Loaders",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T15:29:06Z",
        "updated_at": "2023-08-25T00:23:28Z",
        "closed_at": "2023-08-25T00:23:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9708",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9708",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9708.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9708.patch",
            "merged_at": "2023-08-25T00:23:27Z"
        },
        "body": "Still working out interface/notebooks + need discord data dump to test out things other than copy+paste\r\n\r\nUpdate:\r\n- Going to remove the 'user_id' arg in the loaders themselves and just standardize on putting the \"sender\" arg in the extra kwargs. Then can provide a utility function to map these to ai and human messages\r\n- Going to move the discord one into just a notebook since I don't have a good dump to test on and copy+paste maybe isn't the greatest thing to support in v0\r\n- Need to do more testing on slack since it seems the dump only includes channels and NOT 1 on 1 convos\r\n- ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9708/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9708/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9707",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9707/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9707/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9707/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9707",
        "id": 1865405504,
        "node_id": "I_kwDOIPDwls5vL9RA",
        "number": 9707,
        "title": "ParentDocumentRetriever doesn't implement BaseRetriever._aget_relevant_documents",
        "user": {
            "login": "auxon",
            "id": 40005875,
            "node_id": "MDQ6VXNlcjQwMDA1ODc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/40005875?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/auxon",
            "html_url": "https://github.com/auxon",
            "followers_url": "https://api.github.com/users/auxon/followers",
            "following_url": "https://api.github.com/users/auxon/following{/other_user}",
            "gists_url": "https://api.github.com/users/auxon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/auxon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/auxon/subscriptions",
            "organizations_url": "https://api.github.com/users/auxon/orgs",
            "repos_url": "https://api.github.com/users/auxon/repos",
            "events_url": "https://api.github.com/users/auxon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/auxon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-24T15:28:16Z",
        "updated_at": "2023-12-01T16:07:43Z",
        "closed_at": "2023-12-01T16:07:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain Version: 0.0.271, Python 3.11\r\n\r\nLike the title says, _aget_relevant_documents isn't implemented in ParentDocumentRetriever so async calls are not working.  It throws an NotImplementedError in BaseRetriever:\r\n```\r\n    async def _aget_relevant_documents(\r\n        self, query: str, *, run_manager: AsyncCallbackManagerForRetrieverRun\r\n    ) -> List[Document]:\r\n        \"\"\"Asynchronously get documents relevant to a query.\r\n        Args:\r\n            query: String to find relevant documents for\r\n            run_manager: The callbacks handler to use\r\n        Returns:\r\n            List of relevant documents\r\n        \"\"\"\r\n        raise NotImplementedError()\r\n```\r\n        \n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nJust do a chain.acall from a chain using documents, (like a ConverstionalRetrievalChain), and it should trigger this error.\n\n### Expected behavior\n\nShould be able to call the chain async when using ParentDocumentRetriever.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9707/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9707/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9706",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9706/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9706/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9706/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9706",
        "id": 1865397426,
        "node_id": "PR_kwDOIPDwls5YtQVM",
        "number": 9706,
        "title": "Qdrant Client: Expose instance for creating client",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-24T15:23:58Z",
        "updated_at": "2023-08-28T13:31:00Z",
        "closed_at": "2023-08-28T13:30:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9706",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9706",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9706.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9706.patch",
            "merged_at": "2023-08-28T13:30:59Z"
        },
        "body": "Expose classmethods to convenient initialize the vectostore.\r\n\r\nThe purpose of this PR is to make it easy for users to initialize an empty vectorstore that's properly pre-configured without having to index documents into it via `from_documents`.\r\n\r\nThis will make it easier for users to rely on the following indexing code: https://github.com/langchain-ai/langchain/pull/9614\r\nto help manage data in the qdrant vectorstore.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9706/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9706/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9705",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9705/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9705/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9705/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9705",
        "id": 1865362660,
        "node_id": "PR_kwDOIPDwls5YtIzA",
        "number": 9705,
        "title": "Bagatur/redis refactor",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T15:04:51Z",
        "updated_at": "2023-08-25T08:30:34Z",
        "closed_at": "2023-08-25T08:30:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9705",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9705",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9705.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9705.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9705/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9705/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9704",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9704/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9704/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9704/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9704",
        "id": 1865308594,
        "node_id": "PR_kwDOIPDwls5Ys878",
        "number": 9704,
        "title": "bump 272",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T14:37:25Z",
        "updated_at": "2023-08-24T14:46:16Z",
        "closed_at": "2023-08-24T14:46:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9704",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9704",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9704.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9704.patch",
            "merged_at": "2023-08-24T14:46:15Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9704/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9704/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9703",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9703/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9703/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9703/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9703",
        "id": 1865276828,
        "node_id": "PR_kwDOIPDwls5Ys1-R",
        "number": 9703,
        "title": "Added a link to the dependencies document",
        "user": {
            "login": "liaokongVFX",
            "id": 13622183,
            "node_id": "MDQ6VXNlcjEzNjIyMTgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/13622183?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liaokongVFX",
            "html_url": "https://github.com/liaokongVFX",
            "followers_url": "https://api.github.com/users/liaokongVFX/followers",
            "following_url": "https://api.github.com/users/liaokongVFX/following{/other_user}",
            "gists_url": "https://api.github.com/users/liaokongVFX/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liaokongVFX/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liaokongVFX/subscriptions",
            "organizations_url": "https://api.github.com/users/liaokongVFX/orgs",
            "repos_url": "https://api.github.com/users/liaokongVFX/repos",
            "events_url": "https://api.github.com/users/liaokongVFX/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liaokongVFX/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T14:21:46Z",
        "updated_at": "2023-08-24T14:32:57Z",
        "closed_at": "2023-08-24T14:23:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9703",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9703",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9703.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9703.patch",
            "merged_at": "2023-08-24T14:23:48Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9703/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9703/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9702",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9702/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9702/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9702/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9702",
        "id": 1865260343,
        "node_id": "I_kwDOIPDwls5vLZ03",
        "number": 9702,
        "title": "DOC: Custom Templates issue with Pydantic v2",
        "user": {
            "login": "maasikai",
            "id": 8900200,
            "node_id": "MDQ6VXNlcjg5MDAyMDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8900200?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maasikai",
            "html_url": "https://github.com/maasikai",
            "followers_url": "https://api.github.com/users/maasikai/followers",
            "following_url": "https://api.github.com/users/maasikai/following{/other_user}",
            "gists_url": "https://api.github.com/users/maasikai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maasikai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maasikai/subscriptions",
            "organizations_url": "https://api.github.com/users/maasikai/orgs",
            "repos_url": "https://api.github.com/users/maasikai/repos",
            "events_url": "https://api.github.com/users/maasikai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maasikai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 19,
        "created_at": "2023-08-24T14:13:41Z",
        "updated_at": "2023-10-31T16:09:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nThe \"Creating a Custom Prompt Template\" documentation is outdated with Pydantic v2.\r\n\r\n```\r\nclass FunctionExplainerPromptTemplate(StringPromptTemplate, BaseModel):\r\n    \"\"\"A custom prompt template that takes in the function name as input, and formats the prompt template to provide the source code of the function.\"\"\"\r\n\r\n    @validator(\"input_variables\")\r\n    def validate_input_variables(cls, v):\r\n        \"\"\"Validate that the input variables are correct.\"\"\"\r\n        if len(v) != 1 or \"function_name\" not in v:\r\n            raise ValueError(\"function_name must be the only input_variable.\")\r\n        return v\r\n```\r\n        \r\nThe above code raises following TypeError:\r\n\r\n```\r\n>   class FunctionExplainerPromptTemplate(StringPromptTemplate, BaseModel):\r\nE   TypeError: metaclass conflict: the metaclass of a derived class must be a (non-strict) subclass of the metaclasses of all its bases\r\n\r\n```\r\nFrankly, I have no idea how to get the prompt templates to work with new Pydantic, even after changing @validator to @field_validator.\n\n### Idea or request for content:\n\nUpdate the documentation to include new version of Pydantic in examples.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9702/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9702/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9701",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9701/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9701/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9701/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9701",
        "id": 1865242753,
        "node_id": "PR_kwDOIPDwls5Ysuek",
        "number": 9701,
        "title": "Do not share executors between parent and child tasks",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T14:05:25Z",
        "updated_at": "2023-08-24T14:17:08Z",
        "closed_at": "2023-08-24T14:17:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9701",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9701",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9701.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9701.patch",
            "merged_at": "2023-08-24T14:17:07Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9701/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9701/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9700",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9700/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9700/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9700/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9700",
        "id": 1865142802,
        "node_id": "PR_kwDOIPDwls5YsYbM",
        "number": 9700,
        "title": "Harrison/multi vector",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T13:18:48Z",
        "updated_at": "2023-08-24T16:42:12Z",
        "closed_at": "2023-08-24T13:42:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9700",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9700",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9700.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9700.patch",
            "merged_at": "2023-08-24T13:42:42Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9700/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9700/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9699",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9699/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9699/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9699/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9699",
        "id": 1865135740,
        "node_id": "PR_kwDOIPDwls5YsW3g",
        "number": 9699,
        "title": "adapt ChatGLM in llm model and chat model",
        "user": {
            "login": "etveritas",
            "id": 27916175,
            "node_id": "MDQ6VXNlcjI3OTE2MTc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/27916175?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/etveritas",
            "html_url": "https://github.com/etveritas",
            "followers_url": "https://api.github.com/users/etveritas/followers",
            "following_url": "https://api.github.com/users/etveritas/following{/other_user}",
            "gists_url": "https://api.github.com/users/etveritas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/etveritas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/etveritas/subscriptions",
            "organizations_url": "https://api.github.com/users/etveritas/orgs",
            "repos_url": "https://api.github.com/users/etveritas/repos",
            "events_url": "https://api.github.com/users/etveritas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/etveritas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T13:15:12Z",
        "updated_at": "2023-08-26T10:09:06Z",
        "closed_at": "2023-08-26T10:09:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9699",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9699",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9699.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9699.patch",
            "merged_at": null
        },
        "body": "using sample:\r\n```\r\nendpoint_url = API URL\r\nChatGLM_llm = ChatGLM(\r\n    endpoint_url=endpoint_url,\r\n    api_key=Your API Key by ChatGLM\r\n)\r\nprint(ChatGLM_llm(\"hello\"))\r\n```\r\n\r\n```\r\nmodel = ChatChatGLM(\r\n    chatglm_api_key=\"api_key\",\r\n    chatglm_api_base=\"api_base_url\",\r\n    model_name=\"model_name\"\r\n)\r\nchain = LLMChain(llm=model)\r\n```\r\nDescription: The call of ChatGLM has been adapted.\r\nIssue: The call of ChatGLM has been adapted.\r\nDependencies: Need python package `zhipuai` and `aiostream`\r\nTag maintainer: @baskaryan, @hwchase17\r\nTwitter handle: None",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9699/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9699/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9697",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9697/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9697/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9697/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9697",
        "id": 1865041669,
        "node_id": "I_kwDOIPDwls5vKkcF",
        "number": 9697,
        "title": "Calude models not able to output more than 8191 tokens.",
        "user": {
            "login": "Krobo224",
            "id": 72267398,
            "node_id": "MDQ6VXNlcjcyMjY3Mzk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/72267398?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Krobo224",
            "html_url": "https://github.com/Krobo224",
            "followers_url": "https://api.github.com/users/Krobo224/followers",
            "following_url": "https://api.github.com/users/Krobo224/following{/other_user}",
            "gists_url": "https://api.github.com/users/Krobo224/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Krobo224/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Krobo224/subscriptions",
            "organizations_url": "https://api.github.com/users/Krobo224/orgs",
            "repos_url": "https://api.github.com/users/Krobo224/repos",
            "events_url": "https://api.github.com/users/Krobo224/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Krobo224/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-24T12:21:25Z",
        "updated_at": "2023-10-22T02:02:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nPlatform - AWS\r\nPython version: 3.11.4\r\nOS - Mac\r\n\r\n\r\n### Who can help?\r\n\r\n@3coins , @hwchase17 @agola11 \r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nThe code sample which produces the bug:\r\n\r\n```\r\nbody = json.dumps({\"prompt\": prompt, \"max_tokens_to_sample\": 8192})\r\n    accept = \"application/json\"\r\n    contentType = \"application/json\"\r\n\r\n    response_claudeV2 = boto3_bedrock.invoke_model(\r\n        body=body, modelId=\"anthropic.claude-v2\", accept=accept, contentType=contentType\r\n    )\r\n    response_body_claudeV2 = json.loads(response_claudeV2.get(\"body\").read())\r\n\r\n    print(response_body_claudeV2.get(\"completion\"))\r\n```\r\n\r\nWhen the above code snippet is executed with boto3_client we get the error:\r\n` botocore.errorfactory.ValidationException: An error occurred (ValidationException) when calling the InvokeModel operation: Malformed input request: 8192 is not less or equal to 8191, please reformat your input and try again.`\r\n\r\nAs per the doc of anthropic claude the claude-instant can output 9k tokens, claude-v1 can output 12k tokens and claude-v2 can output 12k tokens but when 'max_token_sample' parameter exceeds 8191 values they give the above error.\r\n\r\n### Expected behavior\r\n\r\nExpected behaviour is that the model should give the output as it can produce max 12K tokens.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9697/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9697/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9696",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9696/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9696/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9696/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9696",
        "id": 1865001390,
        "node_id": "I_kwDOIPDwls5vKamu",
        "number": 9696,
        "title": "No way to Close an open connection in PGVector.py",
        "user": {
            "login": "devsaqibijaz",
            "id": 105721682,
            "node_id": "U_kgDOBk0vUg",
            "avatar_url": "https://avatars.githubusercontent.com/u/105721682?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/devsaqibijaz",
            "html_url": "https://github.com/devsaqibijaz",
            "followers_url": "https://api.github.com/users/devsaqibijaz/followers",
            "following_url": "https://api.github.com/users/devsaqibijaz/following{/other_user}",
            "gists_url": "https://api.github.com/users/devsaqibijaz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/devsaqibijaz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/devsaqibijaz/subscriptions",
            "organizations_url": "https://api.github.com/users/devsaqibijaz/orgs",
            "repos_url": "https://api.github.com/users/devsaqibijaz/repos",
            "events_url": "https://api.github.com/users/devsaqibijaz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/devsaqibijaz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-24T11:57:09Z",
        "updated_at": "2023-11-15T20:34:38Z",
        "closed_at": "2023-11-15T20:34:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nInitialization with Database Connection: When an instance of the PGVector class is created, it automatically establish a connection with the PostgreSQL Vector database.\r\n\r\nMethod for Closing Connection: we need to implement a method within the PGVector class that allows you to close the established connection with the PostgreSQL database.\r\n\r\n`def __del__(self):\r\n        # Close the session (and thus the connection) when the instance is destroyed.\r\n        self.session.close()`\n\n### Motivation\n\nThe problem is, I am unable to close a connection and the pool get overload with multiple connections and hence the service starts throwing error\n\n### Your contribution\n\nI guess, may be.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9696/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9696/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9695",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9695/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9695/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9695/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9695",
        "id": 1864822137,
        "node_id": "I_kwDOIPDwls5vJu15",
        "number": 9695,
        "title": "Agent by AgentType.OPENAI_FUNCTIONS cannot output message content.",
        "user": {
            "login": "lovecambi",
            "id": 7774179,
            "node_id": "MDQ6VXNlcjc3NzQxNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7774179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lovecambi",
            "html_url": "https://github.com/lovecambi",
            "followers_url": "https://api.github.com/users/lovecambi/followers",
            "following_url": "https://api.github.com/users/lovecambi/following{/other_user}",
            "gists_url": "https://api.github.com/users/lovecambi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lovecambi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lovecambi/subscriptions",
            "organizations_url": "https://api.github.com/users/lovecambi/orgs",
            "repos_url": "https://api.github.com/users/lovecambi/repos",
            "events_url": "https://api.github.com/users/lovecambi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lovecambi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T10:03:15Z",
        "updated_at": "2023-11-30T16:06:01Z",
        "closed_at": "2023-11-30T16:06:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nIt will always output \r\n```\r\nresponded: {content}\r\n```\r\n\r\nI suppose this [line](https://github.com/langchain-ai/langchain/blob/v0.0.271/libs/langchain/langchain/agents/openai_functions_agent/base.py#L130) is not correct. \r\n\r\n\r\n\n\n### Suggestion:\n\nIs the following code the way you need? \r\n```\r\ncontent_msg = f\"responded: {message.content}\\n\" if message.content else \"\\n\"\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9695/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9695/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9694",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9694/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9694/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9694/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9694",
        "id": 1864811327,
        "node_id": "PR_kwDOIPDwls5YrQDk",
        "number": 9694,
        "title": "Add .with_config() method to Runnables, Add run_id, run_name to RunnableConfig",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-24T09:56:48Z",
        "updated_at": "2023-09-01T14:48:48Z",
        "closed_at": "2023-09-01T14:48:47Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9694",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9694",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9694.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9694.patch",
            "merged_at": "2023-09-01T14:48:47Z"
        },
        "body": "- with_config() allows binding any config values to a Runnable, like .bind() does for kwargs\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9694/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9694/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9692",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9692/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9692/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9692/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9692",
        "id": 1864641239,
        "node_id": "PR_kwDOIPDwls5YqrXI",
        "number": 9692,
        "title": "Add AliCloudPaiEAS type in langchain.llms to access alicloud pai-eas service.",
        "user": {
            "login": "hiigao",
            "id": 26385522,
            "node_id": "MDQ6VXNlcjI2Mzg1NTIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/26385522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hiigao",
            "html_url": "https://github.com/hiigao",
            "followers_url": "https://api.github.com/users/hiigao/followers",
            "following_url": "https://api.github.com/users/hiigao/following{/other_user}",
            "gists_url": "https://api.github.com/users/hiigao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hiigao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hiigao/subscriptions",
            "organizations_url": "https://api.github.com/users/hiigao/orgs",
            "repos_url": "https://api.github.com/users/hiigao/repos",
            "events_url": "https://api.github.com/users/hiigao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hiigao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T08:12:13Z",
        "updated_at": "2023-08-31T06:52:10Z",
        "closed_at": "2023-08-24T08:38:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9692",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9692",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9692.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9692.patch",
            "merged_at": null
        },
        "body": "### Description\r\n  This PR aims at adding new llm type  AliCloudPaiEAS to support service accessing for alicloud product named pai-eas service. PAI-EAS can help users to deploy llm models on alicloud.  \r\n\r\n### Usage\r\nThe user needs to start an eas service on alicloud and then set the service's access url and token as a params for AliCloudPaiEAS. Then AliCloudPaiEAS  object as a llm object is passed to the Chain to run an output. \r\nThe usage is like:\r\n`llm = AliCloudPaiEAS(eas_service_url=\"your_access_url\",eas_service_token=\"your_access_token\"`\r\n`llm_chain = LLMChain(prompt=prompt, llm=llm)\r\n`\r\n`llm_chain.run(\"Hello there.\")`\r\n\r\n### Test and example\r\nThe integration test case is located at libs/langchain/tests/integration_tests/llms/test_alicloud_eas.py\r\nThe example notebook is located at docs/extras/integrations/lls/alicloud_api_eas.ipynb",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9692/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9692/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9691",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9691/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9691/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9691/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9691",
        "id": 1864640196,
        "node_id": "PR_kwDOIPDwls5YqrIp",
        "number": 9691,
        "title": "fix setting --only-extended or --only-core flags to False if not prov\u2026",
        "user": {
            "login": "eryk-dsai",
            "id": 142571618,
            "node_id": "U_kgDOCH94Yg",
            "avatar_url": "https://avatars.githubusercontent.com/u/142571618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eryk-dsai",
            "html_url": "https://github.com/eryk-dsai",
            "followers_url": "https://api.github.com/users/eryk-dsai/followers",
            "following_url": "https://api.github.com/users/eryk-dsai/following{/other_user}",
            "gists_url": "https://api.github.com/users/eryk-dsai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eryk-dsai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eryk-dsai/subscriptions",
            "organizations_url": "https://api.github.com/users/eryk-dsai/orgs",
            "repos_url": "https://api.github.com/users/eryk-dsai/repos",
            "events_url": "https://api.github.com/users/eryk-dsai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eryk-dsai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-24T08:11:32Z",
        "updated_at": "2023-08-29T08:00:21Z",
        "closed_at": "2023-08-29T08:00:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9691",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9691",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9691.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9691.patch",
            "merged_at": null
        },
        "body": "Description:\r\n`--only-extended` and `--only-core` flags are not set correctly to `False`, if not provided\r\n\r\nIssue:\r\nWhen trying to run `make coverage` I got the following issue:\r\n```\r\nINTERNALERROR> ValueError: no option named 'only_extended'\r\n```\r\nIt turned out that `config.getoption(\"--only-extended\")` in `pytest_collection_modifyitems` function was unable to get the `--only-extended` value ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9691/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9691/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9690",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9690/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9690/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9690/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9690",
        "id": 1864609720,
        "node_id": "PR_kwDOIPDwls5Yqkjg",
        "number": 9690,
        "title": "Update cube_semantic.py to add new type",
        "user": {
            "login": "ruanwz",
            "id": 4874,
            "node_id": "MDQ6VXNlcjQ4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ruanwz",
            "html_url": "https://github.com/ruanwz",
            "followers_url": "https://api.github.com/users/ruanwz/followers",
            "following_url": "https://api.github.com/users/ruanwz/following{/other_user}",
            "gists_url": "https://api.github.com/users/ruanwz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ruanwz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ruanwz/subscriptions",
            "organizations_url": "https://api.github.com/users/ruanwz/orgs",
            "repos_url": "https://api.github.com/users/ruanwz/repos",
            "events_url": "https://api.github.com/users/ruanwz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ruanwz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-24T07:51:55Z",
        "updated_at": "2023-09-19T23:32:09Z",
        "closed_at": "2023-09-19T23:32:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9690",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9690",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9690.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9690.patch",
            "merged_at": null
        },
        "body": "the cube_semantic example jupyter notebook didn't work, if I use curl, it has following json with type=cube, so I add this type in the code to make it work:\r\n(langchain) \u279c  langchain git:(master) \u2717 curl \\       \r\n  -H \"Authorization:.xxx\" \\\r\n  -G \\\r\n  --data-urlencode 'query={\"measures\":[\"LineItems.count\"]}' \\\r\n  https://xxx.cubecloudapp.dev/cubejs-api/v1/meta\r\n{\"cubes\":[{\"public\":true,\"name\":\"LineItems\",\"type\":\"cube\",\"title\":\"Line Items\",\"measures\":[{\"name\":\"LineItems.count\",\"title\":\"Line Items Count\",\"shortTitle\":\"Count\",\"cumulativeTotal\":false,\"cumulative\":false,\"type\":\"number\",\"aggType\":\"count\",\"drillMembers\":[],\"drillMembersGrouped\":{\"measures\":[],\"dimensions\":[]},\"isVisible\":true},{\"name\":\"LineItems.price\",\"title\":\"Line Items Price\",\"shortTitle\":\"Price\",\"cumulativeTotal\":fals\r\n\r\n\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: Update cube_semantic.py to add new type \"cube\", \r\n  - Issue: the cube_semantic example jupyter notebook didn't work,\r\n  - Dependencies: NA,\r\n  - Tag maintainer: NA\r\n  - Twitter handle: NA\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9690/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9690/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9689",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9689/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9689/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9689/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9689",
        "id": 1864579023,
        "node_id": "PR_kwDOIPDwls5Yqd7w",
        "number": 9689,
        "title": "Add the option to use separate LLMs for GraphCypherQA chain",
        "user": {
            "login": "tomasonjo",
            "id": 19948365,
            "node_id": "MDQ6VXNlcjE5OTQ4MzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/19948365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomasonjo",
            "html_url": "https://github.com/tomasonjo",
            "followers_url": "https://api.github.com/users/tomasonjo/followers",
            "following_url": "https://api.github.com/users/tomasonjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomasonjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomasonjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomasonjo/subscriptions",
            "organizations_url": "https://api.github.com/users/tomasonjo/orgs",
            "repos_url": "https://api.github.com/users/tomasonjo/repos",
            "events_url": "https://api.github.com/users/tomasonjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomasonjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-24T07:32:03Z",
        "updated_at": "2023-08-24T18:50:38Z",
        "closed_at": "2023-08-24T18:50:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9689",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9689",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9689.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9689.patch",
            "merged_at": "2023-08-24T18:50:38Z"
        },
        "body": "The Graph Chains are different in the way that it uses two LLMChains instead of one like the retrievalQA chains. Therefore, sometimes you want to use different LLM to generate the database query and to generate the final answer.\r\n\r\nThis feature would make it more convenient to use different LLMs in the same chain.\r\n\r\nI have also renamed the Graph DB QA Chain to Neo4j DB QA Chain in the documentation only as it is used only for Neo4j. The naming was ambigious as it was the first graphQA chain added and wasn't sure how do you want to spin it.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9689/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9689/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9688",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9688/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9688/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9688/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9688",
        "id": 1864533468,
        "node_id": "I_kwDOIPDwls5vIoXc",
        "number": 9688,
        "title": "Issue: APIConnectionError: Error communicating with OpenAI",
        "user": {
            "login": "haohao0103",
            "id": 30570711,
            "node_id": "MDQ6VXNlcjMwNTcwNzEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/30570711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/haohao0103",
            "html_url": "https://github.com/haohao0103",
            "followers_url": "https://api.github.com/users/haohao0103/followers",
            "following_url": "https://api.github.com/users/haohao0103/following{/other_user}",
            "gists_url": "https://api.github.com/users/haohao0103/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/haohao0103/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/haohao0103/subscriptions",
            "organizations_url": "https://api.github.com/users/haohao0103/orgs",
            "repos_url": "https://api.github.com/users/haohao0103/repos",
            "events_url": "https://api.github.com/users/haohao0103/events{/privacy}",
            "received_events_url": "https://api.github.com/users/haohao0103/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T06:59:49Z",
        "updated_at": "2023-11-30T02:15:30Z",
        "closed_at": "2023-11-30T02:15:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\neroory msg:\r\nRetrying langchain.chat_models.openai.ChatOpenAI.completion_with_retry.<locals>._completion_with_retry in 4.0 seconds as it raised APIConnectionError: Error communicating with OpenAI: HTTPSConnectionPool(host='api.openai.com', port=443): Max retries exceeded with url: /v1/chat/completions (Caused by ProxyError('Cannot connect to proxy.', RemoteDisconnected('Remote end closed connection without response'))).\r\n\r\ncode:\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chat_models import ChatOpenAI\r\n\r\nllm = OpenAI()\r\nchat_model = ChatOpenAI()\r\n\r\nchat_model.predict(\"hi!\")\r\n\r\n\r\nexport OPENAI_API_KEY=\"sk-xxxxxxujOoH\";\r\n\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9688/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9688/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9687",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9687/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9687/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9687/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9687",
        "id": 1864512687,
        "node_id": "PR_kwDOIPDwls5YqPsW",
        "number": 9687,
        "title": "Fix docs for AssemblyAIAudioTranscriptLoader (shorter import path)",
        "user": {
            "login": "patrickloeber",
            "id": 50772274,
            "node_id": "MDQ6VXNlcjUwNzcyMjc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/50772274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/patrickloeber",
            "html_url": "https://github.com/patrickloeber",
            "followers_url": "https://api.github.com/users/patrickloeber/followers",
            "following_url": "https://api.github.com/users/patrickloeber/following{/other_user}",
            "gists_url": "https://api.github.com/users/patrickloeber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/patrickloeber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/patrickloeber/subscriptions",
            "organizations_url": "https://api.github.com/users/patrickloeber/orgs",
            "repos_url": "https://api.github.com/users/patrickloeber/repos",
            "events_url": "https://api.github.com/users/patrickloeber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/patrickloeber/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T06:45:28Z",
        "updated_at": "2023-08-24T14:24:53Z",
        "closed_at": "2023-08-24T14:24:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9687",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9687",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9687.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9687.patch",
            "merged_at": "2023-08-24T14:24:53Z"
        },
        "body": "Uses the shorter import path\r\n\r\n`from langchain.document_loaders import` instead of the full path\r\n`from langchain.document_loaders.assemblyai`\r\n\r\nApplies those changes to the docs and the unit test.\r\n\r\nSee #9667 that adds this new loader.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9687/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9687/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9686",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9686/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9686/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9686/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9686",
        "id": 1864499596,
        "node_id": "I_kwDOIPDwls5vIgGM",
        "number": 9686,
        "title": "DQL DB Langchain : When running an db_run query based on the prompt it should execute sql query only when needed. ",
        "user": {
            "login": "Mraghuvaran",
            "id": 53115668,
            "node_id": "MDQ6VXNlcjUzMTE1NjY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/53115668?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mraghuvaran",
            "html_url": "https://github.com/Mraghuvaran",
            "followers_url": "https://api.github.com/users/Mraghuvaran/followers",
            "following_url": "https://api.github.com/users/Mraghuvaran/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mraghuvaran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mraghuvaran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mraghuvaran/subscriptions",
            "organizations_url": "https://api.github.com/users/Mraghuvaran/orgs",
            "repos_url": "https://api.github.com/users/Mraghuvaran/repos",
            "events_url": "https://api.github.com/users/Mraghuvaran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mraghuvaran/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-24T06:35:24Z",
        "updated_at": "2023-11-30T16:06:06Z",
        "closed_at": "2023-11-30T16:06:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "![image](https://github.com/langchain-ai/langchain/assets/53115668/70a42838-7758-4c0a-be99-ba41ad861aaf)\r\n The Prompt was to explain tables in the data. in this case it should query into the SQL database. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9686/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9686/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9685",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9685/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9685/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9685/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9685",
        "id": 1864451518,
        "node_id": "I_kwDOIPDwls5vIUW-",
        "number": 9685,
        "title": "An error occurred: 'DDGS' object does not support the context manager protocol",
        "user": {
            "login": "ZhuJD-China",
            "id": 50070803,
            "node_id": "MDQ6VXNlcjUwMDcwODAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/50070803?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZhuJD-China",
            "html_url": "https://github.com/ZhuJD-China",
            "followers_url": "https://api.github.com/users/ZhuJD-China/followers",
            "following_url": "https://api.github.com/users/ZhuJD-China/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZhuJD-China/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZhuJD-China/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZhuJD-China/subscriptions",
            "organizations_url": "https://api.github.com/users/ZhuJD-China/orgs",
            "repos_url": "https://api.github.com/users/ZhuJD-China/repos",
            "events_url": "https://api.github.com/users/ZhuJD-China/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZhuJD-China/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T05:50:09Z",
        "updated_at": "2023-11-30T16:06:11Z",
        "closed_at": "2023-11-30T16:06:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n> Entering new AgentExecutor chain...\r\n\r\nInvoking: `duckduckgo_search` with `2023\u5e748\u6708\u7684\u65b0\u95fb`\r\n\r\n\r\nAn error occurred: 'DDGS' object does not support the context manager protocol\n\n### Who can help?\n\n@hwchase17\r\n@agola11\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n# \u521d\u59cb\u5316OpenAI Functions\u4ee3\u7406\r\nagent = initialize_agent(\r\n    # tools,\r\n\r\n    tools=load_tools([\"ddg-search\"]),\r\n\r\n    llm=llm,\r\n\r\n    agent=AgentType.OPENAI_FUNCTIONS,\r\n\r\n    verbose=True,\r\n    agent_kwargs=agent_kwargs,\r\n    memory=memory,\r\n    max_iterations=10,\r\n    early_stopping_method=\"generate\",\r\n    handle_parsing_errors=True,  # \u521d\u59cb\u5316\u4ee3\u7406\u5e76\u5904\u7406\u89e3\u6790\u9519\u8bef\r\n    callbacks=[handler],\r\n)\r\n> Entering new AgentExecutor chain...\r\n\r\nInvoking: `duckduckgo_search` with `2023\u5e748\u6708\u7684\u65b0\u95fb`\r\n\r\n\r\nAn error occurred: 'DDGS' object does not support the context manager protocol\n\n### Expected behavior\n\n\u8be5\u7c7b\u63d0\u4f9b\u4e86\u901a\u8fc7 [DuckDuckGo](https://duckduckgo.com/) \u641c\u7d22\u5f15\u64ce\u641c\u7d22\u7684\u529f\u80fd\u3002\r\n\r\nfrom langchain.tools import DuckDuckGoSearchRun\r\nsearch = DuckDuckGoSearchRun()\r\nsearch.run(\"Who is winner of FIFA worldcup 2018?\")\r\n\u4f60\u5e94\u8be5\u671f\u671b\u5982\u4e0b\u8f93\u51fa\uff1a\r\n\r\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, ... Mario Zagallo (Brazil) and Franz Beckenbauer (Germany) have also achieved the feat.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9685/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9685/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9684",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9684/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9684/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9684/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9684",
        "id": 1864448547,
        "node_id": "PR_kwDOIPDwls5YqCE0",
        "number": 9684,
        "title": "Add dashvector self query retriever",
        "user": {
            "login": "xiaoyuxee",
            "id": 2851934,
            "node_id": "MDQ6VXNlcjI4NTE5MzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2851934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xiaoyuxee",
            "html_url": "https://github.com/xiaoyuxee",
            "followers_url": "https://api.github.com/users/xiaoyuxee/followers",
            "following_url": "https://api.github.com/users/xiaoyuxee/following{/other_user}",
            "gists_url": "https://api.github.com/users/xiaoyuxee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xiaoyuxee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xiaoyuxee/subscriptions",
            "organizations_url": "https://api.github.com/users/xiaoyuxee/orgs",
            "repos_url": "https://api.github.com/users/xiaoyuxee/repos",
            "events_url": "https://api.github.com/users/xiaoyuxee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xiaoyuxee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T05:47:04Z",
        "updated_at": "2023-09-07T01:30:36Z",
        "closed_at": "2023-09-04T03:51:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9684",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9684",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9684.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9684.patch",
            "merged_at": "2023-09-04T03:51:04Z"
        },
        "body": "## Description\r\nAdd `Dashvector` retriever and self-query retriever\r\n\r\n## How to use\r\n```python\r\nfrom langchain.vectorstores.dashvector import DashVector\r\n\r\nvectorstore = DashVector.from_documents(docs, embeddings)\r\nretriever = SelfQueryRetriever.from_llm(\r\n    llm, vectorstore, document_content_description, metadata_field_info, verbose=True\r\n)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9684/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9684/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9683",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9683/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9683/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9683/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9683",
        "id": 1864444595,
        "node_id": "PR_kwDOIPDwls5YqBO9",
        "number": 9683,
        "title": "Allow specifying arbitrary keyword arguments in `langchain.llms.VLLM`",
        "user": {
            "login": "jaysonph",
            "id": 40629085,
            "node_id": "MDQ6VXNlcjQwNjI5MDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/40629085?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jaysonph",
            "html_url": "https://github.com/jaysonph",
            "followers_url": "https://api.github.com/users/jaysonph/followers",
            "following_url": "https://api.github.com/users/jaysonph/following{/other_user}",
            "gists_url": "https://api.github.com/users/jaysonph/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jaysonph/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jaysonph/subscriptions",
            "organizations_url": "https://api.github.com/users/jaysonph/orgs",
            "repos_url": "https://api.github.com/users/jaysonph/repos",
            "events_url": "https://api.github.com/users/jaysonph/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jaysonph/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-24T05:42:57Z",
        "updated_at": "2023-09-04T03:40:06Z",
        "closed_at": "2023-09-04T03:40:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9683",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9683",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9683.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9683.patch",
            "merged_at": "2023-09-04T03:40:06Z"
        },
        "body": "Description: add arbitrary keyword arguments for VLLM\r\nIssue: https://github.com/langchain-ai/langchain/issues/9682\r\nDependencies: none\r\nTag maintainer: @hwchase17, @baskaryan",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9683/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9683/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9682",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9682/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9682/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9682/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9682",
        "id": 1864443617,
        "node_id": "I_kwDOIPDwls5vISbh",
        "number": 9682,
        "title": "Allow specifying arbitrary keyword arguments in `langchain.llms.VLLM`",
        "user": {
            "login": "jaysonnph",
            "id": 140134804,
            "node_id": "U_kgDOCFpJlA",
            "avatar_url": "https://avatars.githubusercontent.com/u/140134804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jaysonnph",
            "html_url": "https://github.com/jaysonnph",
            "followers_url": "https://api.github.com/users/jaysonnph/followers",
            "following_url": "https://api.github.com/users/jaysonnph/following{/other_user}",
            "gists_url": "https://api.github.com/users/jaysonnph/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jaysonnph/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jaysonnph/subscriptions",
            "organizations_url": "https://api.github.com/users/jaysonnph/orgs",
            "repos_url": "https://api.github.com/users/jaysonnph/repos",
            "events_url": "https://api.github.com/users/jaysonnph/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jaysonnph/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T05:41:55Z",
        "updated_at": "2023-11-30T16:06:16Z",
        "closed_at": "2023-11-30T16:06:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nEnable the option to specify arbitrary keyword arguments (e.g. gpu_memory_utilization=0.98) in langchain.llms.VLLM() constructor\n\n### Motivation\n\nCurrently, vllm library provides many useful keyword arguments which enables a lot of usages on a wide variety of devices, but langchain doesn't.\r\n\r\ne.g. Some models do not work with GPUs with smaller memory as the default gpu_memory_utilization = 0.9, increasing this limit could enable the use of those models on the smaller GPUs.\r\n\r\n![image](https://github.com/langchain-ai/langchain/assets/140134804/1eb50665-d371-4695-b815-0bcfe0092906)\r\n\n\n### Your contribution\n\nI can contribute by submitting a PR for that.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9682/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9682/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9681",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9681/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9681/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9681/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9681",
        "id": 1864433344,
        "node_id": "I_kwDOIPDwls5vIP7A",
        "number": 9681,
        "title": "initialize_agent not saving and returning messages in memory",
        "user": {
            "login": "t-ega",
            "id": 41376025,
            "node_id": "MDQ6VXNlcjQxMzc2MDI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/41376025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t-ega",
            "html_url": "https://github.com/t-ega",
            "followers_url": "https://api.github.com/users/t-ega/followers",
            "following_url": "https://api.github.com/users/t-ega/following{/other_user}",
            "gists_url": "https://api.github.com/users/t-ega/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t-ega/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t-ega/subscriptions",
            "organizations_url": "https://api.github.com/users/t-ega/orgs",
            "repos_url": "https://api.github.com/users/t-ega/repos",
            "events_url": "https://api.github.com/users/t-ega/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t-ega/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T05:30:13Z",
        "updated_at": "2023-08-24T05:40:45Z",
        "closed_at": "2023-08-24T05:40:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain version == 0.0.271\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [X] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nchat_history = MessagesPlaceholder(variable_name=\"chat_history\")\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\n\r\nllm = ChatOpenAI(temperature=0, model_name='gpt-3.5-turbo')\r\nagent_chain = initialize_agent(\r\ntools=tools,\r\nllm=llm,\r\nagent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,\r\nverbose=True,\r\nmemory=memory,\r\nmax_iterations=1,\r\nearly_stopping_method='generate',\r\nhandle_parsing_errors=True,\r\nsystem_prompt=\"You are an assistant named Mikey\",\r\nagent_kwargs={\r\n\"memory_prompts\": [chat_history],\r\n\"input_variables\": [\"input\", \"agent_scratchpad\", \"chat_history\"],\r\n}\r\n)\r\nagent_chain.run(input=\"My name is Dev\")\r\n\r\nagent_chain.run(input=\"What is my name\")\r\n\r\n\r\n\n\n### Expected behavior\n\nExpected behavior\r\nfinal answer: Your name is Dev\r\n\r\n\r\nOutput behavior:\r\nFinal answer: I don't have access to personal information like your name. Is there anything else I can help you with?\r\n\r\n\r\nNote: What happens is that the memory is not being passed along, so the model doesn't know my name",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9681/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9681/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9680",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9680/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9680/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9680/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9680",
        "id": 1864422532,
        "node_id": "I_kwDOIPDwls5vINSE",
        "number": 9680,
        "title": "DOC: <Please write a comprehensive title after the 'DOC: ' prefix>",
        "user": {
            "login": "Travis-Barton",
            "id": 39603097,
            "node_id": "MDQ6VXNlcjM5NjAzMDk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/39603097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Travis-Barton",
            "html_url": "https://github.com/Travis-Barton",
            "followers_url": "https://api.github.com/users/Travis-Barton/followers",
            "following_url": "https://api.github.com/users/Travis-Barton/following{/other_user}",
            "gists_url": "https://api.github.com/users/Travis-Barton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Travis-Barton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Travis-Barton/subscriptions",
            "organizations_url": "https://api.github.com/users/Travis-Barton/orgs",
            "repos_url": "https://api.github.com/users/Travis-Barton/repos",
            "events_url": "https://api.github.com/users/Travis-Barton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Travis-Barton/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T05:17:48Z",
        "updated_at": "2023-11-30T16:06:21Z",
        "closed_at": "2023-11-30T16:06:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nThe basic documents for the output parser are out of date for pydantic. Tried with python 3.9 and 3.11.\r\n\r\n```\r\npip install langchain\r\npip install python-dotenv\r\n```\r\n\r\nThe copied code:\r\n\r\n```\r\nfrom langchain.prompts import PromptTemplate, ChatPromptTemplate, HumanMessagePromptTemplate\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom dotenv import load_dotenv\r\nfrom langchain.output_parsers import PydanticOutputParser\r\nfrom pydantic import BaseModel, Field, validator\r\nfrom typing import List\r\nload_dotenv()\r\n\r\nmodel_name = 'text-davinci-003'\r\ntemperature = 0.0\r\nmodel = OpenAI(model_name=model_name, temperature=temperature)\r\n\r\n# Define your desired data structure.\r\nclass Joke(BaseModel):\r\n    setup: str = Field(description=\"question to set up a joke\")\r\n    punchline: str = Field(description=\"answer to resolve the joke\")\r\n    \r\n    # You can add custom validation logic easily with Pydantic.\r\n    @validator('setup')\r\n    def question_ends_with_question_mark(cls, field):\r\n        if field[-1] != '?':\r\n            raise ValueError(\"Badly formed question!\")\r\n        return field\r\n\r\n# Set up a parser + inject instructions into the prompt template.\r\nparser = PydanticOutputParser(pydantic_object=Joke)\r\n\r\nprompt = PromptTemplate(\r\n    template=\"Answer the user query.\\n{format_instructions}\\n{query}\\n\",\r\n    input_variables=[\"query\"],\r\n    partial_variables={\"format_instructions\": parser.get_format_instructions()}\r\n)\r\n\r\n# And a query intended to prompt a language model to populate the data structure.\r\njoke_query = \"Tell me a joke.\"\r\n_input = prompt.format_prompt(query=joke_query)\r\n\r\noutput = model(_input.to_string())\r\n\r\nparser.parse(output)\r\n```\r\n\r\nresults in:\r\n```\r\n<input>:21: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.3/migration/\r\nTraceback (most recent call last):\r\n  File \"/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/pydevconsole.py\", line 364, in runcode\r\n    coro = func()\r\n  File \"<input>\", line 16, in <module>\r\n  File \"/Users/travisbarton/opt/anaconda3/envs/scratch39/lib/python3.9/site-packages/pydantic/_internal/_model_construction.py\", line 130, in __new__\r\n    cls.__pydantic_decorators__ = DecoratorInfos.build(cls)\r\n  File \"/Users/travisbarton/opt/anaconda3/envs/scratch39/lib/python3.9/site-packages/pydantic/_internal/_decorators.py\", line 441, in build\r\n    res.validators[var_name] = Decorator.build(\r\n  File \"/Users/travisbarton/opt/anaconda3/envs/scratch39/lib/python3.9/site-packages/pydantic/_internal/_decorators.py\", line 249, in build\r\n    func = shim(func)\r\n  File \"/Users/travisbarton/opt/anaconda3/envs/scratch39/lib/python3.9/site-packages/pydantic/_internal/_decorators_v1.py\", line 77, in make_generic_v1_field_validator\r\n    raise PydanticUserError(\r\npydantic.errors.PydanticUserError: The `field` and `config` parameters are not available in Pydantic V2, please use the `info` parameter instead.\r\nFor further information visit https://errors.pydantic.dev/2.3/u/validator-field-config-info\r\n```\n\n### Idea or request for content:\n\nMaybe fix the validator to match pydantic? Perhaps I'm mistaken?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9680/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9680/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9679",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9679/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9679/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9679/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9679",
        "id": 1864411414,
        "node_id": "I_kwDOIPDwls5vIKkW",
        "number": 9679,
        "title": "Initialize_agent not storing messages when memory is present",
        "user": {
            "login": "t-ega",
            "id": 41376025,
            "node_id": "MDQ6VXNlcjQxMzc2MDI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/41376025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t-ega",
            "html_url": "https://github.com/t-ega",
            "followers_url": "https://api.github.com/users/t-ega/followers",
            "following_url": "https://api.github.com/users/t-ega/following{/other_user}",
            "gists_url": "https://api.github.com/users/t-ega/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t-ega/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t-ega/subscriptions",
            "organizations_url": "https://api.github.com/users/t-ega/orgs",
            "repos_url": "https://api.github.com/users/t-ega/repos",
            "events_url": "https://api.github.com/users/t-ega/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t-ega/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T05:04:25Z",
        "updated_at": "2023-08-24T05:25:36Z",
        "closed_at": "2023-08-24T05:25:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain version == 0.0.271\n\n### Who can help?\n\n@hw\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [X] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n\r\nchat_history = MessagesPlaceholder(variable_name=\"chat_history\")\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\n\r\nllm = ChatOpenAI(temperature=0, model_name='gpt-3.5-turbo')\r\nagent_chain = initialize_agent(\r\n    tools=tools,\r\n    llm=llm,\r\n    agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,\r\n    verbose=True,\r\n    memory=memory,\r\n    max_iterations=1,\r\n    early_stopping_method='generate',\r\n    handle_parsing_errors=True,\r\n    system_prompt=\"You are an assistant named Mikey\",\r\n    agent_kwargs={\r\n    \"memory_prompts\": [chat_history],\r\n    \"input_variables\": [\"input\", \"agent_scratchpad\", \"chat_history\"],\r\n}\r\n)\r\n\r\nagent_chain.run(input=\"What is my name\")\n\n### Expected behavior\n\nfinal answer: Your name is .... \r\nWhat happens is that the memory is not being returned(the name was given to the model in a previous run) so the model doesn't know my name",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9679/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9679/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9678",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9678/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9678/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9678/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9678",
        "id": 1864353926,
        "node_id": "I_kwDOIPDwls5vH8iG",
        "number": 9678,
        "title": "Issue:  ERNIE Bot is not able to call tool",
        "user": {
            "login": "flyspirit99",
            "id": 45393699,
            "node_id": "MDQ6VXNlcjQ1MzkzNjk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/45393699?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flyspirit99",
            "html_url": "https://github.com/flyspirit99",
            "followers_url": "https://api.github.com/users/flyspirit99/followers",
            "following_url": "https://api.github.com/users/flyspirit99/following{/other_user}",
            "gists_url": "https://api.github.com/users/flyspirit99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/flyspirit99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/flyspirit99/subscriptions",
            "organizations_url": "https://api.github.com/users/flyspirit99/orgs",
            "repos_url": "https://api.github.com/users/flyspirit99/repos",
            "events_url": "https://api.github.com/users/flyspirit99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/flyspirit99/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-24T03:51:14Z",
        "updated_at": "2023-11-30T16:06:26Z",
        "closed_at": "2023-11-30T16:06:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI tried to use Erine Bot as an agent like below\r\n\r\n```python\r\ntools = [faq_tool, query_order_tool]\r\nFORMAT_INSTRUCTIONS = \"\"\"\u8981\u4f7f\u7528\u5de5\u5177\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u683c\u5f0f\u8fd4\u56de\uff1a\r\n\r\nThought: \u6211\u662f\u5426\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u5de5\u5177? \u662f\r\nAction: \u91c7\u53d6\u7684action\u5e94\u8be5\u662f\u4ee5\u4e0b\u4e4b\u4e00\uff1a[{tool_names}]\r\nAction Input: action\u7684\u8f93\u5165\u53c2\u6570\r\nObservation: action\u7684\u8fd4\u56de\u7ed3\u679c\r\n\r\n\u5982\u679c\u4f60\u4e0d\u9700\u8981\u4f7f\u7528\u5de5\u5177\uff0c \u8bf7\u6309\u4ee5\u4e0b\u683c\u5f0f\u8fd4\u56de\uff1a\r\n\r\nThought: \u6211\u662f\u5426\u9700\u8981\u4f7f\u7528\u5de5\u5177? \u5426\r\n{ai_prefix}: [\u628a\u4f60\u7684\u56de\u590d\u653e\u5728\u8fd9\u91cc]\r\n\"\"\"\r\n\r\nPREFIX = \"\"\"\u7528\u4e2d\u6587\u56de\u7b54\u4ee5\u4e0b\u95ee\u9898. \u5982\u679c\u627e\u4e0d\u5230\u7b54\u6848\u56de\u7b54 '\u6211\u4e0d\u77e5\u9053'. \u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5de5\u5177:\"\"\"\r\n\r\nprompt_ = ConversationalAgent.create_prompt(\r\n     tools,\r\n     prefix = PREFIX,\r\n     format_instructions = FORMAT_INSTRUCTIONS,\r\n     input_variables=[\"input\", \"chat_history\",\"agent_scratchpad\"]\r\n)\r\nmemory = ConversationBufferWindowMemory(memory_key=\"chat_history\", return_messages=True, k=3)\r\nchatllmChain = LLMChain(llm=ErnieBotChat(),  callbacks=[self.logHandler], verbose = True)\r\nagent = ConversationalAgent(llm_chain=chatllmChain)\r\ncallback_manager = CallbackManager([self.logHandler])\r\nself.conversation_agent = AgentExecutor.from_agent_and_tools(agent=agent, tools=tools,memory=memory, callback_manager = callback_manager, verbose=True, max_iterations=3)\r\n\r\n``` \r\n\r\nThen I asked a question \"\u4f60\u597d\uff0c\u6211\u5e94\u8be5\u600e\u4e48\u7533\u8bf7\u8d54\u507f\"\r\nThe answer returned by the agent is:\r\n\r\nCould not parse LLM output: `\u6211\u4e0d\u77e5\u9053\uff0c\u4f46\u6211\u4f1a\u5c06\u4f60\u7684\u95ee\u9898\u4f20\u9012\u7ed9\u5bf9\u5e94\u7684\u5de5\u5177\u6765\u83b7\u53d6\u7b54\u6848\u3002\u6211\u53d1\u9001\u4e86\u4e00\u4e2a\u6d88\u606f\u5230[FAQ](%E8%BF%94%E5%9B%9E)\u548c[search_order](%E8%BF%94%E5%9B%9E)\u3002\u8bf7\u7b49\u5f85\u4ed6\u4eec\u7684\u56de\u590d\u3002`\r\n\r\nWhich is not correct. The correct behavior  is call the faq tool and get relevant information to form a reply. Which was proven to be work  when using Open API chat model.\r\n\r\n@axiangcoding  Any idea of how to make Ernie Bot to be able to handle this situation? Thanks in advance!!!\r\n\r\n\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9678/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9678/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9677",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9677/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9677/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9677/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9677",
        "id": 1864308955,
        "node_id": "I_kwDOIPDwls5vHxjb",
        "number": 9677,
        "title": "Please share a complete document PDF OR markdown etc about langchain",
        "user": {
            "login": "ZhuJD-China",
            "id": 50070803,
            "node_id": "MDQ6VXNlcjUwMDcwODAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/50070803?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZhuJD-China",
            "html_url": "https://github.com/ZhuJD-China",
            "followers_url": "https://api.github.com/users/ZhuJD-China/followers",
            "following_url": "https://api.github.com/users/ZhuJD-China/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZhuJD-China/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZhuJD-China/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZhuJD-China/subscriptions",
            "organizations_url": "https://api.github.com/users/ZhuJD-China/orgs",
            "repos_url": "https://api.github.com/users/ZhuJD-China/repos",
            "events_url": "https://api.github.com/users/ZhuJD-China/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZhuJD-China/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T03:07:12Z",
        "updated_at": "2023-11-30T16:06:31Z",
        "closed_at": "2023-11-30T16:06:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\n_No response_\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9677/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9677/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9676",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9676/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9676/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9676/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9676",
        "id": 1864307161,
        "node_id": "I_kwDOIPDwls5vHxHZ",
        "number": 9676,
        "title": "Support load ChatPromptTemplate from config dict",
        "user": {
            "login": "skspark",
            "id": 118829871,
            "node_id": "U_kgDOBxUzLw",
            "avatar_url": "https://avatars.githubusercontent.com/u/118829871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skspark",
            "html_url": "https://github.com/skspark",
            "followers_url": "https://api.github.com/users/skspark/followers",
            "following_url": "https://api.github.com/users/skspark/following{/other_user}",
            "gists_url": "https://api.github.com/users/skspark/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skspark/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skspark/subscriptions",
            "organizations_url": "https://api.github.com/users/skspark/orgs",
            "repos_url": "https://api.github.com/users/skspark/repos",
            "events_url": "https://api.github.com/users/skspark/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skspark/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T03:04:38Z",
        "updated_at": "2023-11-30T16:06:36Z",
        "closed_at": "2023-11-30T16:06:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWe are currently using OpenAI's ChatCompletion API with custom ChatPromptTemplate, as converting langchain's ChatPromptTemplate to dict (or vice versa) seems not working well.\r\n\r\nSo I'd like to suggest new feature, to enable loading [ChatPromptTemplate](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/prompts/chat.py) from config dict, \r\nby adding loading function (or classmethod in ChatPromptTemplate) to [prompts/loading.py](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/prompts/loading.py#L151-L155).\r\n\r\nOr if there is standardize way to easily convert dict to ChatPromptTemplate, please let me know.\n\n### Motivation\n\nWe are currently using OpenAI's ChatCompletion API with custom ChatPromptTemplate, as converting langchain's ChatPromptTemplate to dict (or vice versa) seems not working well.\r\nAs Utilizing OpenAI's ChatCompletion API (other than Completion API) becoming mainstream, I thought it might be good to support standard loading method for ChatPromptTemplate.\n\n### Your contribution\n\nIf you allow me, I'd like to make a contribution related to this feature.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9676/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9676/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9675",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9675/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9675/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9675/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9675",
        "id": 1864298159,
        "node_id": "PR_kwDOIPDwls5Ypiii",
        "number": 9675,
        "title": "Resolve circular imports in runnables",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T02:52:24Z",
        "updated_at": "2023-08-24T05:05:52Z",
        "closed_at": "2023-08-24T05:05:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9675",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9675",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9675.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9675.patch",
            "merged_at": "2023-08-24T05:05:51Z"
        },
        "body": "These are about to cause circular imports.\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9675/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9675/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9674",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9674/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9674/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9674/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9674",
        "id": 1864279700,
        "node_id": "PR_kwDOIPDwls5Ypepr",
        "number": 9674,
        "title": "Make document serializable, create utility to create a docstore",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-24T02:30:46Z",
        "updated_at": "2023-08-30T13:45:06Z",
        "closed_at": "2023-08-30T13:45:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9674",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9674",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9674.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9674.patch",
            "merged_at": "2023-08-30T13:45:05Z"
        },
        "body": "This PR makes the following changes:\r\n\r\n1. Documents become serializable using langhchain serialization\r\n2. Make a utility to create a docstore kw store\r\n\r\nWill help to address issue here: https://github.com/langchain-ai/langchain/issues/9345\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9674/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9674/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9673",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9673/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9673/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9673/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9673",
        "id": 1864258573,
        "node_id": "PR_kwDOIPDwls5YpaN2",
        "number": 9673,
        "title": "Wfh/whatsapp loader",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T02:04:33Z",
        "updated_at": "2023-08-24T15:28:33Z",
        "closed_at": "2023-08-24T15:28:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9673",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9673",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9673.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9673.patch",
            "merged_at": "2023-08-24T15:28:31Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9673/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9673/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9672",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9672/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9672/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9672/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9672",
        "id": 1864227535,
        "node_id": "PR_kwDOIPDwls5YpTeG",
        "number": 9672,
        "title": "Update ChatOpenAI._stream to respect finish_reason",
        "user": {
            "login": "caffeinism",
            "id": 39237502,
            "node_id": "MDQ6VXNlcjM5MjM3NTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/39237502?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/caffeinism",
            "html_url": "https://github.com/caffeinism",
            "followers_url": "https://api.github.com/users/caffeinism/followers",
            "following_url": "https://api.github.com/users/caffeinism/following{/other_user}",
            "gists_url": "https://api.github.com/users/caffeinism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/caffeinism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/caffeinism/subscriptions",
            "organizations_url": "https://api.github.com/users/caffeinism/orgs",
            "repos_url": "https://api.github.com/users/caffeinism/repos",
            "events_url": "https://api.github.com/users/caffeinism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/caffeinism/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T01:31:40Z",
        "updated_at": "2023-08-24T23:35:02Z",
        "closed_at": "2023-08-24T05:58:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9672",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9672",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9672.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9672.patch",
            "merged_at": "2023-08-24T05:58:14Z"
        },
        "body": "Currently, ChatOpenAI._stream does not reflect finish_reason to generation_info. Change it to reflect that.\r\n\r\nSame patch as https://github.com/langchain-ai/langchain/pull/9431 , but also applies to _stream.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9672/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9672/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9671",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9671/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9671/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9671/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9671",
        "id": 1864219390,
        "node_id": "PR_kwDOIPDwls5YpRzS",
        "number": 9671,
        "title": "docs:misc fixes",
        "user": {
            "login": "seamusp",
            "id": 22579106,
            "node_id": "MDQ6VXNlcjIyNTc5MTA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/22579106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seamusp",
            "html_url": "https://github.com/seamusp",
            "followers_url": "https://api.github.com/users/seamusp/followers",
            "following_url": "https://api.github.com/users/seamusp/following{/other_user}",
            "gists_url": "https://api.github.com/users/seamusp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seamusp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seamusp/subscriptions",
            "organizations_url": "https://api.github.com/users/seamusp/orgs",
            "repos_url": "https://api.github.com/users/seamusp/repos",
            "events_url": "https://api.github.com/users/seamusp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seamusp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T01:20:52Z",
        "updated_at": "2023-08-24T05:46:54Z",
        "closed_at": "2023-08-24T05:36:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9671",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9671",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9671.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9671.patch",
            "merged_at": "2023-08-24T05:36:54Z"
        },
        "body": "Improve internal consistency in LangChain documentation\r\n- Change occurrences of eg and eg. to e.g.\r\n- Fix headers containing unnecessary capital letters.\r\n- Change instances of \"few shot\" to \"few-shot\".\r\n- Add periods to end of sentences where missing.\r\n- Minor spelling and grammar fixes.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9671/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9671/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9670",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9670/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9670/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9670/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9670",
        "id": 1864172789,
        "node_id": "PR_kwDOIPDwls5YpIJ3",
        "number": 9670,
        "title": "Wfh/whatsapp loader",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-24T00:11:27Z",
        "updated_at": "2023-08-24T00:21:52Z",
        "closed_at": "2023-08-24T00:13:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9670",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9670",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9670.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9670.patch",
            "merged_at": "2023-08-24T00:13:07Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9670/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9670/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9669",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9669/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9669/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9669/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9669",
        "id": 1864154517,
        "node_id": "PR_kwDOIPDwls5YpETa",
        "number": 9669,
        "title": "fix integration test imports",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-23T23:43:52Z",
        "updated_at": "2023-08-23T23:47:02Z",
        "closed_at": "2023-08-23T23:47:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9669",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9669",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9669.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9669.patch",
            "merged_at": "2023-08-23T23:47:01Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9669/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9669/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9668",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9668/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9668/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9668/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9668",
        "id": 1864147213,
        "node_id": "I_kwDOIPDwls5vHKEN",
        "number": 9668,
        "title": "Issue: vectorstore hence indexes and embeddings are persisting when they should not be.",
        "user": {
            "login": "shahid-ab",
            "id": 78834269,
            "node_id": "MDQ6VXNlcjc4ODM0MjY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/78834269?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shahid-ab",
            "html_url": "https://github.com/shahid-ab",
            "followers_url": "https://api.github.com/users/shahid-ab/followers",
            "following_url": "https://api.github.com/users/shahid-ab/following{/other_user}",
            "gists_url": "https://api.github.com/users/shahid-ab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shahid-ab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shahid-ab/subscriptions",
            "organizations_url": "https://api.github.com/users/shahid-ab/orgs",
            "repos_url": "https://api.github.com/users/shahid-ab/repos",
            "events_url": "https://api.github.com/users/shahid-ab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shahid-ab/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-23T23:32:29Z",
        "updated_at": "2023-11-30T16:06:41Z",
        "closed_at": "2023-11-30T16:06:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nlangchain==0.0.250\r\nplatform = macOS\r\nPython version 3.11\r\n\r\nI am not sure if this is by design, I think it is not and hence reporting this as an issue.\r\n\r\nWhen looping through a list of pdf files to get a summary for each I am creating an index using - VectorstoreIndexCreator().from_documents(pages). \r\n\r\nThe issue is for each subsequent file, data(documents) from previous file are also being retrieved to be passed on to GPT and end up in the summary.\r\n\r\nCode:\r\n    from langchain.indexes import VectorstoreIndexCreator\r\n    from langchain.chains import RetrievalQA\r\n    from langchain.chat_models import ChatOpenAI\r\n    for file in files:\r\n            loader = PyPDFLoader(file['path'])\r\n            pages = loader.load_and_split()\r\n\r\n            index = VectorstoreIndexCreator().from_documents(pages)\r\n\r\n            retriever = index.vectorstore.as_retriever(search_type='mmr')\r\n            retriever.search_kwargs['k'] = 10\r\n\r\n            llm = ChatOpenAI()\r\n            aca_qa = RetrievalQA.from_chain_type(\r\n                   llm=llm,\r\n                   retriever=retriever,\r\n                   chain_type='stuff',\r\n                   # return_source_documents=True,\r\n            )\r\n            result = aca_qa({'query': summary_query})\r\n\n\n### Suggestion:\n\nTemp fix:\r\n\r\nThe resolution is to include - index = '' at the beginning of each loop cycle",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9668/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9668/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9667",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9667/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9667/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9667/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9667",
        "id": 1863981935,
        "node_id": "PR_kwDOIPDwls5Yoe17",
        "number": 9667,
        "title": "Add new document_loader: AssemblyAIAudioTranscriptLoader",
        "user": {
            "login": "patrickloeber",
            "id": 50772274,
            "node_id": "MDQ6VXNlcjUwNzcyMjc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/50772274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/patrickloeber",
            "html_url": "https://github.com/patrickloeber",
            "followers_url": "https://api.github.com/users/patrickloeber/followers",
            "following_url": "https://api.github.com/users/patrickloeber/following{/other_user}",
            "gists_url": "https://api.github.com/users/patrickloeber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/patrickloeber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/patrickloeber/subscriptions",
            "organizations_url": "https://api.github.com/users/patrickloeber/orgs",
            "repos_url": "https://api.github.com/users/patrickloeber/repos",
            "events_url": "https://api.github.com/users/patrickloeber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/patrickloeber/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-23T20:41:43Z",
        "updated_at": "2023-08-24T05:51:19Z",
        "closed_at": "2023-08-24T05:51:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9667",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9667",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9667.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9667.patch",
            "merged_at": "2023-08-24T05:51:19Z"
        },
        "body": "This PR adds a new document loader `AssemblyAIAudioTranscriptLoader` that allows to transcribe audio files with the [AssemblyAI API](https://www.assemblyai.com) and loads the transcribed text into documents.\r\n\r\n- Add new document_loader with class `AssemblyAIAudioTranscriptLoader`\r\n- Add optional dependency `assemblyai`\r\n- Add unit tests (using a Mock client)\r\n- Add docs notebook\r\n\r\nThis is the equivalent to the JS integration already available in LangChain.js. See the [LangChain JS docs AssemblyAI page](https://js.langchain.com/docs/modules/data_connection/document_loaders/integrations/web_loaders/assemblyai_audio_transcription).\r\n\r\nAt its simplest, you can use the loader to get a transcript back from an audio file like this:\r\n\r\n```python\r\nfrom langchain.document_loaders.assemblyai import AssemblyAIAudioTranscriptLoader\r\n\r\nloader =  AssemblyAIAudioTranscriptLoader(file_path=\"./testfile.mp3\")\r\ndocs = loader.load()\r\n```\r\n\r\nTo use it, it needs the `assemblyai` python package installed, and the\r\nenvironment variable `ASSEMBLYAI_API_KEY` set with your API key. Alternatively, the API key can also be passed as an argument.\r\n\r\nTwitter handles to shout out if so kindly \ud83d\ude47\r\n[@AssemblyAI](https://twitter.com/AssemblyAI) and [@patloeber](https://twitter.com/patloeber)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9667/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9667/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9666",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9666/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9666/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9666/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9666",
        "id": 1863923158,
        "node_id": "PR_kwDOIPDwls5YoSKR",
        "number": 9666,
        "title": "Whatsapp + slack loaders",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-23T19:51:38Z",
        "updated_at": "2023-08-23T19:59:53Z",
        "closed_at": "2023-08-23T19:59:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9666",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9666",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9666.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9666.patch",
            "merged_at": "2023-08-23T19:59:52Z"
        },
        "body": "Add whatsapp and slack loaders",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9666/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9666/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9665",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9665/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9665/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9665/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9665",
        "id": 1863848254,
        "node_id": "PR_kwDOIPDwls5YoB4R",
        "number": 9665,
        "title": "Initial commit for comprehend moderator",
        "user": {
            "login": "nikhilkjha",
            "id": 48101485,
            "node_id": "MDQ6VXNlcjQ4MTAxNDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/48101485?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikhilkjha",
            "html_url": "https://github.com/nikhilkjha",
            "followers_url": "https://api.github.com/users/nikhilkjha/followers",
            "following_url": "https://api.github.com/users/nikhilkjha/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikhilkjha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikhilkjha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikhilkjha/subscriptions",
            "organizations_url": "https://api.github.com/users/nikhilkjha/orgs",
            "repos_url": "https://api.github.com/users/nikhilkjha/repos",
            "events_url": "https://api.github.com/users/nikhilkjha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikhilkjha/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2023-08-23T18:51:39Z",
        "updated_at": "2023-08-28T23:01:06Z",
        "closed_at": "2023-08-25T22:11:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9665",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9665",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9665.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9665.patch",
            "merged_at": "2023-08-25T22:11:27Z"
        },
        "body": "This PR implements a custom chain that wraps Amazon Comprehend API calls. The custom chain is aimed to be used with LLM chains to provide moderation capability that let\u2019s you detect and redact PII, Toxic and Intent content in the LLM prompt, or the LLM response. The implementation accepts a configuration object to control what checks will be performed on a LLM prompt and can be used in a variety of setups using the LangChain expression language to not only detect the configured info in chains, but also other constructs such as a retriever. \r\nThe included sample notebook goes over the different configuration options and how to use it with other chains.\r\n\r\n###  Usage sample\r\n```python\r\nfrom langchain_experimental.comprehend_moderation import BaseModerationActions, BaseModerationFilters\r\n\r\nmoderation_config = { \r\n        \"filters\":[ \r\n                BaseModerationFilters.PII, \r\n                BaseModerationFilters.TOXICITY,\r\n                BaseModerationFilters.INTENT\r\n        ],\r\n        \"pii\":{ \r\n                \"action\": BaseModerationActions.ALLOW, \r\n                \"threshold\":0.5, \r\n                \"labels\":[\"SSN\"],\r\n                \"mask_character\": \"X\"\r\n        },\r\n        \"toxicity\":{ \r\n                \"action\": BaseModerationActions.STOP, \r\n                \"threshold\":0.5\r\n        },\r\n        \"intent\":{ \r\n                \"action\": BaseModerationActions.STOP, \r\n                \"threshold\":0.5\r\n        }\r\n}\r\n\r\ncomp_moderation_with_config = AmazonComprehendModerationChain(\r\n    moderation_config=moderation_config, #specify the configuration\r\n    client=comprehend_client,            #optionally pass the Boto3 Client\r\n    verbose=True\r\n)\r\n\r\ntemplate = \"\"\"Question: {question}\r\n\r\nAnswer:\"\"\"\r\n\r\nprompt = PromptTemplate(template=template, input_variables=[\"question\"])\r\n\r\nresponses = [\r\n    \"Final Answer: A credit card number looks like 1289-2321-1123-2387. A fake SSN number looks like 323-22-9980. John Doe's phone number is (999)253-9876.\", \r\n    \"Final Answer: This is a really shitty way of constructing a birdhouse. This is fucking insane to think that any birds would actually create their motherfucking nests here.\"\r\n]\r\nllm = FakeListLLM(responses=responses)\r\n\r\nllm_chain = LLMChain(prompt=prompt, llm=llm)\r\n\r\nchain = ( \r\n    prompt \r\n    | comp_moderation_with_config \r\n    | {llm_chain.input_keys[0]: lambda x: x['output'] }  \r\n    | llm_chain \r\n    | { \"input\": lambda x: x['text'] } \r\n    | comp_moderation_with_config \r\n)\r\n\r\nresponse = chain.invoke({\"question\": \"A sample SSN number looks like this 123-456-7890. Can you give me some more samples?\"})\r\n\r\nprint(response['output'])\r\n\r\n\r\n```\r\n### Output\r\n```\r\n> Entering new AmazonComprehendModerationChain chain...\r\nRunning AmazonComprehendModerationChain...\r\nRunning pii validation...\r\nFound PII content..stopping..\r\nThe prompt contains PII entities and cannot be processed\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9665/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9665/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9664",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9664/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9664/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9664/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9664",
        "id": 1863822061,
        "node_id": "PR_kwDOIPDwls5Yn8LP",
        "number": 9664,
        "title": "mv embedding cache docs",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-23T18:31:03Z",
        "updated_at": "2023-08-23T18:46:05Z",
        "closed_at": "2023-08-23T18:46:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9664",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9664",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9664.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9664.patch",
            "merged_at": "2023-08-23T18:46:04Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9664/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9664/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9663",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9663/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9663/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9663/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9663",
        "id": 1863814847,
        "node_id": "PR_kwDOIPDwls5Yn6nb",
        "number": 9663,
        "title": "docs: `DeepLake` example",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-23T18:25:22Z",
        "updated_at": "2023-09-04T17:08:22Z",
        "closed_at": "2023-09-04T03:42:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9663",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9663",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9663.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9663.patch",
            "merged_at": "2023-09-04T03:42:52Z"
        },
        "body": "Updated the `Deep Lake` example. Added a link to an example provided by Activeloop.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9663/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9663/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9662",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9662/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9662/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9662/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9662",
        "id": 1863738015,
        "node_id": "PR_kwDOIPDwls5YnqDm",
        "number": 9662,
        "title": "Runnable locals",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-23T17:27:19Z",
        "updated_at": "2023-08-23T17:30:04Z",
        "closed_at": "2023-08-23T17:30:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9662",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9662",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9662.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9662.patch",
            "merged_at": "2023-08-23T17:30:03Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9662/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9662/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9661",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9661/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9661/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9661/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9661",
        "id": 1863734615,
        "node_id": "PR_kwDOIPDwls5YnpUc",
        "number": 9661,
        "title": "Revert \"Locals in config\"",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-23T17:24:40Z",
        "updated_at": "2023-08-23T17:25:01Z",
        "closed_at": "2023-08-23T17:25:00Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9661",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9661",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9661.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9661.patch",
            "merged_at": "2023-08-23T17:25:00Z"
        },
        "body": "Reverts langchain-ai/langchain#9007",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9661/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9661/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9660",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9660/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9660/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9660/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9660",
        "id": 1863715320,
        "node_id": "PR_kwDOIPDwls5YnlH6",
        "number": 9660,
        "title": "Wfh/whatsapp loader",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-23T17:10:16Z",
        "updated_at": "2023-08-23T17:10:49Z",
        "closed_at": "2023-08-23T17:10:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9660",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9660",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9660.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9660.patch",
            "merged_at": "2023-08-23T17:10:48Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9660/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9660/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9659",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9659/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9659/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9659/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9659",
        "id": 1863698236,
        "node_id": "PR_kwDOIPDwls5Ynhdc",
        "number": 9659,
        "title": "docs: fix PromptGuard docs",
        "user": {
            "login": "zizhong",
            "id": 3625100,
            "node_id": "MDQ6VXNlcjM2MjUxMDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3625100?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zizhong",
            "html_url": "https://github.com/zizhong",
            "followers_url": "https://api.github.com/users/zizhong/followers",
            "following_url": "https://api.github.com/users/zizhong/following{/other_user}",
            "gists_url": "https://api.github.com/users/zizhong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zizhong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zizhong/subscriptions",
            "organizations_url": "https://api.github.com/users/zizhong/orgs",
            "repos_url": "https://api.github.com/users/zizhong/repos",
            "events_url": "https://api.github.com/users/zizhong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zizhong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-23T16:57:29Z",
        "updated_at": "2023-08-23T17:07:45Z",
        "closed_at": "2023-08-23T17:04:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9659",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9659",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9659.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9659.patch",
            "merged_at": "2023-08-23T17:04:54Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n\r\nFix PromptGuard docs. Noticed several trivial issues on the docs when integrating the new class.\r\ncc @baskaryan \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9659/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9659/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]