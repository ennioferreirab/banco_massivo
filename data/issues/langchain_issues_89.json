[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5076",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5076/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5076/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5076/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5076",
        "id": 1718736987,
        "node_id": "I_kwDOIPDwls5mcdhb",
        "number": 5076,
        "title": "Issue: Create way to do filters using VectorStore ",
        "user": {
            "login": "rogerioesteves",
            "id": 19326521,
            "node_id": "MDQ6VXNlcjE5MzI2NTIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/19326521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rogerioesteves",
            "html_url": "https://github.com/rogerioesteves",
            "followers_url": "https://api.github.com/users/rogerioesteves/followers",
            "following_url": "https://api.github.com/users/rogerioesteves/following{/other_user}",
            "gists_url": "https://api.github.com/users/rogerioesteves/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rogerioesteves/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rogerioesteves/subscriptions",
            "organizations_url": "https://api.github.com/users/rogerioesteves/orgs",
            "repos_url": "https://api.github.com/users/rogerioesteves/repos",
            "events_url": "https://api.github.com/users/rogerioesteves/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rogerioesteves/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-22T01:42:22Z",
        "updated_at": "2023-09-10T16:14:16Z",
        "closed_at": "2023-09-10T16:14:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI'm seeing the official documentation  vectorstore Chromadb and I found way to do query using filters where or where_documents.\r\nI tried to use filter using the langchain chromadb wrapper by examples and I don't see how to do query using filters.\r\nExists any way to do filters if no, We could implement new features to do this!\r\n\r\nhttps://docs.trychroma.com/usage-guide#querying-a-collection\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5076/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5076/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5075",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5075/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5075/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5075/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5075",
        "id": 1718728962,
        "node_id": "I_kwDOIPDwls5mcbkC",
        "number": 5075,
        "title": "Issue: Agent always translate my question to English then use a tool, when I use ChatOpenAI with default model gpt-3.5-turbo.",
        "user": {
            "login": "holynull",
            "id": 15973173,
            "node_id": "MDQ6VXNlcjE1OTczMTcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/15973173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holynull",
            "html_url": "https://github.com/holynull",
            "followers_url": "https://api.github.com/users/holynull/followers",
            "following_url": "https://api.github.com/users/holynull/following{/other_user}",
            "gists_url": "https://api.github.com/users/holynull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holynull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holynull/subscriptions",
            "organizations_url": "https://api.github.com/users/holynull/orgs",
            "repos_url": "https://api.github.com/users/holynull/repos",
            "events_url": "https://api.github.com/users/holynull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holynull/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-22T01:32:56Z",
        "updated_at": "2023-09-19T16:09:41Z",
        "closed_at": "2023-09-19T16:09:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nAgent always translate my question to English then use a tool, when I use ChatOpenAI with default model gpt-3.5-turbo.\r\nBut not translate to English with gpt-4 model.\r\n\r\n```\r\n\"\"\"Create a ChatVectorDBChain for question/answering.\"\"\"\r\nfrom langchain.callbacks.manager import AsyncCallbackManager\r\nfrom langchain.memory import ConversationBufferMemory \r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.vectorstores.base import VectorStore\r\nfrom langchain.utilities import GoogleSerperAPIWrapper\r\nimport os\r\nfrom langchain.agents import Tool\r\nfrom langchain.agents import initialize_agent,AgentType,AgentExecutor\r\nfrom langchain.chains import RetrievalQA\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.chains.llm import LLMChain\r\nfrom langchain.chains.chat_vector_db.prompts import CONDENSE_QUESTION_PROMPT\r\nfrom langchain.chains.question_answering import load_qa_chain\r\nfrom langchain.agents.agent_toolkits import ZapierToolkit\r\nfrom langchain.utilities.zapier import ZapierNLAWrapper\r\n\r\ndef get_agent(\r\n    chain_type: str, vcs_swft: VectorStore,vcs_path: VectorStore, agent_cb_handler) -> AgentExecutor:\r\n    agent_cb_manager = AsyncCallbackManager([agent_cb_handler])\r\n    llm = ChatOpenAI(\r\n        # model_name=\"gpt-4\",\r\n        temperature=0,\r\n        verbose=True,\r\n        # request_timeout=120,\r\n    )\r\n    llm_qa = ChatOpenAI(\r\n        temperature=0,\r\n        verbose=True,\r\n        # request_timeout=120,\r\n    ) \r\n    search = GoogleSerperAPIWrapper()\r\n    doc_search_swft = RetrievalQA.from_chain_type(llm=llm_qa, chain_type=chain_type, retriever=vcs_swft.as_retriever())\r\n    doc_search_path = RetrievalQA.from_chain_type(llm=llm_qa, chain_type=chain_type, retriever=vcs_path.as_retriever())\r\n    # doc_search = get_qa_chain(chain_type=chain_type,vectorstore=vectorstore) \r\n    # zapier = ZapierNLAWrapper()\r\n    # toolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)\r\n    tools = [\r\n        Tool(\r\n            name = \"QA SWFT System\",\r\n            func=doc_search_swft.run,\r\n            description=\"useful for when you need to answer questions about swft. Input should be a fully formed question.\",\r\n            coroutine=doc_search_swft.arun\r\n        ),\r\n         Tool(\r\n            name = \"QA Metapath System\",\r\n            func=doc_search_path.run,\r\n            description=\"useful for when you need to answer questions about metapath. Input should be a fully formed question.\",\r\n            coroutine=doc_search_path.arun\r\n        ),\r\n        Tool(\r\n            name = \"Current Search\",\r\n            func=search.run,\r\n            description=\"\"\"\r\n            useful for when you need to answer questions about current events or the current state of the world or you need to ask with search. \r\n            the input to this should be a single search term.\r\n            \"\"\",\r\n            coroutine=search.arun\r\n        ),\r\n    ]\r\n    memory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\n    \r\n    agent = initialize_agent(tools=tools, llm=llm, agent=AgentType.CHAT_CONVERSATIONAL_REACT_DESCRIPTION, verbose=True, memory=memory,callback_manager=agent_cb_manager)\r\n    return agent\r\n```\r\n\r\nconsole print:\r\n\r\n```\r\nINFO:     Will watch for changes in these directories: ['/home/ec2-user/chatbot-agent']\r\nINFO:     Uvicorn running on http://:9002 (Press CTRL+C to quit)\r\nINFO:     Started reloader process [1254384] using WatchFiles\r\nINFO:     Started server process [1254386]\r\nINFO:     Waiting for application startup.\r\nINFO:     Application startup complete.\r\nINFO:     103.116.245.58:0 - \"GET / HTTP/1.0\" 200 OK\r\nINFO:     ('172.71.218.188', 0) - \"WebSocket /chat\" [accepted]\r\nINFO:     connection open\r\nON_CHAIN_START: Inputs: {'input': 'btc\u73b0\u5728\u7684\u4ef7\u683c\u662f\u591a\u5c11\u7f8e\u5143\uff1f', 'chat_history': []}\r\n\r\n\r\n> Entering new AgentExecutor chain...\r\nON_CHAIN_START: Inputs: {'input': 'btc\u73b0\u5728\u7684\u4ef7\u683c\u662f\u591a\u5c11\u7f8e\u5143\uff1f', 'chat_history': [], 'agent_scratchpad': [], 'stop': ['\\nObservation:', '\\n\\tObservation:']}\r\nON_CHAIN_END: Outputs: {'text': '{\\n    \"action\": \"Current Search\",\\n    \"action_input\": \"btc price usd\"\\n}'}\r\nON_AGENT_ACTION: tool: Current Search\r\n{\r\n    \"action\": \"Current Search\",\r\n    \"action_input\": \"btc price usd\"\r\n}\r\nObservation: 26,667.50 United States Dollar\r\nThought:ON_CHAIN_START: Inputs: {'input': 'btc\u73b0\u5728\u7684\u4ef7\u683c\u662f\u591a\u5c11\u7f8e\u5143\uff1f', 'chat_history': [], 'agent_scratchpad': [AIMessage(content='{\\n    \"action\": \"Current Search\",\\n    \"action_input\": \"btc price usd\"\\n}', additional_kwargs={}, example=False), HumanMessage(content=\"TOOL RESPONSE: \\n---------------------\\n26,667.50 United States Dollar\\n\\nUSER'S INPUT\\n--------------------\\n\\nOkay, so what is the response to my last comment? If using information obtained from the tools you must mention it explicitly without mentioning the tool names - I have forgotten all TOOL RESPONSES! Remember to respond with a markdown code snippet of a json blob with a single action, and NOTHING else.\", additional_kwargs={}, example=False)], 'stop': ['\\nObservation:', '\\n\\tObservation:']}\r\nON_CHAIN_END: Outputs: {'text': '{\\n    \"action\": \"Final Answer\",\\n    \"action_input\": \"The current price of BTC in USD is 26,667.50.\"\\n}'}\r\nON_AGENT_FINISH: {'output': 'The current price of BTC in USD is 26,667.50.'}\r\n{\r\n    \"action\": \"Final Answer\",\r\n    \"action_input\": \"The current price of BTC in USD is 26,667.50.\"\r\n}\r\nON_CHAIN_END: Outputs: {'output': 'The current price of BTC in USD is 26,667.50.'}\r\n\r\n> Finished chain.\r\nResult: The current price of BTC in USD is 26,667.50.\r\nINFO:     connection closed\r\n```\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5075/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5075/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5074",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5074/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5074/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5074/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5074",
        "id": 1718726643,
        "node_id": "I_kwDOIPDwls5mca_z",
        "number": 5074,
        "title": "[AsyncCallbackHandler] on_llm_new_token not being called",
        "user": {
            "login": "virattt",
            "id": 901795,
            "node_id": "MDQ6VXNlcjkwMTc5NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/901795?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/virattt",
            "html_url": "https://github.com/virattt",
            "followers_url": "https://api.github.com/users/virattt/followers",
            "following_url": "https://api.github.com/users/virattt/following{/other_user}",
            "gists_url": "https://api.github.com/users/virattt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/virattt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/virattt/subscriptions",
            "organizations_url": "https://api.github.com/users/virattt/orgs",
            "repos_url": "https://api.github.com/users/virattt/repos",
            "events_url": "https://api.github.com/users/virattt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/virattt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-22T01:29:51Z",
        "updated_at": "2023-08-14T04:55:22Z",
        "closed_at": "2023-05-22T12:13:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nDjango backend that is using an `AsyncWebsocketConsumer`.  \r\n\r\nGoal: Stream LLM messages to a frontend React client via an `AsyncWebsocketConsumer`, using a custom `AsyncCallbackHandler`.\r\n\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [X] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nI'm using the async handler to stream the LLM's output from a Django backend that is using an `AsyncWebsocketConsumer`.\r\n\r\nI'm trying to stream the `ChatOpenAI` LLM's output via a custom subclass of the `AsyncCallbackHandler` (`streaming` is set to `True`).\r\n\r\nHowever, the async `on_llm_new_token` function is never being called.\r\n\r\nUnsure what the issue may be, as extending the `BaseCallbackHandler` works well for writing to stdout.  \r\n\r\nHere's the code that's not being called in the async on_llm_new_token: https://github.com/virattt/chat_app/pull/5/files#diff-176a7b37329b8a2846ff511f4dc15edd7d17d1478e7b4742f97700d97319b578R101-R103\r\n\r\nAny thoughts or suggestions would be helpful.\r\n\r\n### Expected behavior\r\n\r\nThe async `on_llm_new_token` function should get called when a new token is received from the LLM.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5074/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5074/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5073",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5073/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5073/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5073/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5073",
        "id": 1718718602,
        "node_id": "I_kwDOIPDwls5mcZCK",
        "number": 5073,
        "title": "[Question] How to use Qdrant MatchAny filter?",
        "user": {
            "login": "YLFxGen",
            "id": 101553099,
            "node_id": "U_kgDOBg2Tyw",
            "avatar_url": "https://avatars.githubusercontent.com/u/101553099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YLFxGen",
            "html_url": "https://github.com/YLFxGen",
            "followers_url": "https://api.github.com/users/YLFxGen/followers",
            "following_url": "https://api.github.com/users/YLFxGen/following{/other_user}",
            "gists_url": "https://api.github.com/users/YLFxGen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/YLFxGen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YLFxGen/subscriptions",
            "organizations_url": "https://api.github.com/users/YLFxGen/orgs",
            "repos_url": "https://api.github.com/users/YLFxGen/repos",
            "events_url": "https://api.github.com/users/YLFxGen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/YLFxGen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-22T01:16:59Z",
        "updated_at": "2023-08-17T05:02:54Z",
        "closed_at": "2023-08-17T05:02:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nQdrant allows you to set the conditions to be used when searching or retrieving points. The filter is passed as **_MetadataFilter_** right now. Can we pass rest.Filter directly so that we can utilize all the filters provided by Qdrant.\r\n```\r\n def _qdrant_filter_from_dict(self, filter: Optional[MetadataFilter]) -> Any:\r\n        if not filter:\r\n            return None\r\n\r\n        from qdrant_client.http import models as rest\r\n\r\n        return rest.Filter(\r\n            must=[\r\n                condition\r\n                for key, value in filter.items()\r\n                for condition in self._build_condition(key, value)\r\n            ]\r\n        )\r\n```\n\n### Motivation\n\nI'm frustrated with how to only talk to a few document ingested in Qdrant. From my understanding, the current implementation only allows you to perform 'and' operation among the filtering metadatas. Is it able to perform 'or' operation?\r\n\r\nWhat I have:\r\n```\r\nretriever=qdrant_store.as_retriever(\r\n    search_kwargs={\r\n        \"filter\": {\"source_file\":\"file_1.md\"}\r\n    }\r\n),\r\n```\r\n\r\nWhat I want:\r\n```\r\nretriever=qdrant_store.as_retriever(\r\n    search_kwargs={\r\n        rest.Filter(\r\n            must=[\r\n                rest.FieldCondition(\r\n                    key=\"source_file\",\r\n                    match=rest.MatchAny(any=[\"file_1.md\", \"file_2.md\"]),\r\n                )\r\n            ]\r\n        )\r\n    }\r\n),\r\n```\n\n### Your contribution\n\nN/A",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5073/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5073/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5072",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5072/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5072/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5072/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5072",
        "id": 1718663745,
        "node_id": "I_kwDOIPDwls5mcLpB",
        "number": 5072,
        "title": "Add option to use _additional fields while executing a Weaviate query",
        "user": {
            "login": "jettro",
            "id": 149687,
            "node_id": "MDQ6VXNlcjE0OTY4Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/149687?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jettro",
            "html_url": "https://github.com/jettro",
            "followers_url": "https://api.github.com/users/jettro/followers",
            "following_url": "https://api.github.com/users/jettro/following{/other_user}",
            "gists_url": "https://api.github.com/users/jettro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jettro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jettro/subscriptions",
            "organizations_url": "https://api.github.com/users/jettro/orgs",
            "repos_url": "https://api.github.com/users/jettro/repos",
            "events_url": "https://api.github.com/users/jettro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jettro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-21T22:37:40Z",
        "updated_at": "2023-05-23T01:57:11Z",
        "closed_at": "2023-05-23T01:57:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWeaviate has the option to pass _additional field while executing a query\r\nhttps://weaviate.io/developers/weaviate/api/graphql/additional-properties\r\n\r\nIt would be good to be able to use this feature and add the response to the results. It is a small change, without breaking the API. We can use the kwargs argument, similar to where_filter in the python class weaviate.py.\n\n### Motivation\n\nWhen comparing and understanding query results, using certainty is a good way.\n\n### Your contribution\n\nI like to contribute to the PR. As it would be my first contribution, I need to understand the integration tests and build the project, and I already tested the change in my local code sample.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5072/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5072/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5071",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5071/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5071/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5071/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5071",
        "id": 1718651178,
        "node_id": "I_kwDOIPDwls5mcIkq",
        "number": 5071,
        "title": "Issue: LLamacpp wrapper slows down the model",
        "user": {
            "login": "mmagnesium",
            "id": 48142538,
            "node_id": "MDQ6VXNlcjQ4MTQyNTM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/48142538?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mmagnesium",
            "html_url": "https://github.com/mmagnesium",
            "followers_url": "https://api.github.com/users/mmagnesium/followers",
            "following_url": "https://api.github.com/users/mmagnesium/following{/other_user}",
            "gists_url": "https://api.github.com/users/mmagnesium/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mmagnesium/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mmagnesium/subscriptions",
            "organizations_url": "https://api.github.com/users/mmagnesium/orgs",
            "repos_url": "https://api.github.com/users/mmagnesium/repos",
            "events_url": "https://api.github.com/users/mmagnesium/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mmagnesium/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-21T21:49:24Z",
        "updated_at": "2023-05-27T15:40:58Z",
        "closed_at": "2023-05-27T15:40:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nLooks like the inference time of the LLamacpp model is a lot slower when using LlamaCpp wrapper (compared to the llama-cpp original wrapper).\r\n\r\nHere are the results for the same prompt on the RTX 4090 GPU.\r\n\r\nWhen using llamacpp-python Llama wrapper directly:\r\n\r\n![llamacpp_runtime](https://github.com/hwchase17/langchain/assets/48142538/3cc4dd4b-3fab-4d9b-8887-d18451d56a4b)\r\n\r\nWhen using langchain LlamaCpp wrapper:\r\n\r\n![runtime_langchain](https://github.com/hwchase17/langchain/assets/48142538/51551596-430c-44ed-8d79-8ed770647522)\r\n\r\nAs you can see, it takes nearly 12x more time for the prompt_eval stage (2.67 ms per token vs 35 ms per token)\r\n\r\nAm i missing something? In both cases, the model is fully loaded to the GPU. In the case of the Langchain wrapper, no chain was used, just direct querying of the model using the wrapper's interface. Same parameters.\r\n\r\nLink to the example notebook (values are a lil different, but the problem is the same): https://github.com/mmagnesium/personal-assistant/blob/main/notebooks/langchain_vs_llamacpp.ipynb\r\n\r\nAppreciate any help.\r\n\r\n\r\n### Suggestion:\r\n\r\nUnfortunately, no suggestion, since i don't understand whats the problem.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5071/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5071/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5070",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5070/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5070/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5070/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5070",
        "id": 1718639674,
        "node_id": "PR_kwDOIPDwls5Q9mSW",
        "number": 5070,
        "title": "Relative paths in prompt loading",
        "user": {
            "login": "mwinterde",
            "id": 60154509,
            "node_id": "MDQ6VXNlcjYwMTU0NTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/60154509?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mwinterde",
            "html_url": "https://github.com/mwinterde",
            "followers_url": "https://api.github.com/users/mwinterde/followers",
            "following_url": "https://api.github.com/users/mwinterde/following{/other_user}",
            "gists_url": "https://api.github.com/users/mwinterde/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mwinterde/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mwinterde/subscriptions",
            "organizations_url": "https://api.github.com/users/mwinterde/orgs",
            "repos_url": "https://api.github.com/users/mwinterde/repos",
            "events_url": "https://api.github.com/users/mwinterde/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mwinterde/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-21T21:01:06Z",
        "updated_at": "2023-10-29T20:09:37Z",
        "closed_at": "2023-10-29T20:09:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5070",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5070",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5070.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5070.patch",
            "merged_at": null
        },
        "body": "# Resolve relative paths in prompt loading\r\n\r\n## Problem Statement\r\n\r\nCurrently, `langchain.prompts.load_prompt` requires that the `path` variables of configuration files are relative to the current working directory. This requirement has disadvantages when we want to use the same configuration files in different places of a project. Therefore, it seems to be more practical to define the `path` variables relative to the configuration file than to the current working directory.\r\n\r\nFor illustration, let's take the `few_shot_prompt_example_prompt.json` example from the docs:\r\n```\r\n{\r\n    \"_type\": \"few_shot\",\r\n    \"input_variables\": [\"adjective\"],\r\n    \"prefix\": \"Write antonyms for the following words.\",\r\n    \"example_prompt_path\": \"example_prompt.json\",\r\n    \"examples\": \"examples.json\",\r\n    \"suffix\": \"Input: {adjective}\\nOutput:\"\r\n}   \r\n```\r\nWith the current implementation, `load_prompt(\"few_shot_prompt_example_prompt.json\")` will only work if the files `example_prompt.json` and `examples.json` lie in our current working directory:\r\n```\r\nCWD\r\nfew_shot_prompt_example_prompt.json\r\nexample_prompt.json\r\nexamples.json\r\n```\r\nThat is, in the following scenario `load_prompt(\"examples/few_shot_prompt_example_prompt.json\")` wouldn't work:\r\n\r\n```\r\nCWD\r\n|-- examples\r\n|   |-- few_shot_prompt_example_prompt.json\r\n|   |-- example_prompt.json\r\n|   |-- examples.json\r\n```\r\n\r\n## Changes\r\n\r\n- Temporarily adding the parameter `prompt_dir` (the parent directory of the configuration file) to the `config` dict\r\n- Using this parameter to resolve relative paths when loading templates, example prompts and examples\r\n- Removing the parameter from the `config` dict before the initialization of the final prompt template\r\n- Changing the working directory of respective unit tests to test the capability of `load_prompt` to deal with relative path definitions\r\n\r\n## Remarks\r\n\r\n- There may be more elegant ways of dealing with this issue, but I haven't seen an option that wouldn't involve a major restructuring of the module. Any ideas?\r\n- While I think this a valuable change, it may break existing applications of some users ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5070/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5070/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5069",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5069/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5069/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5069/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5069",
        "id": 1718623515,
        "node_id": "PR_kwDOIPDwls5Q9jJR",
        "number": 5069,
        "title": "Vectara",
        "user": {
            "login": "ofermend",
            "id": 1823547,
            "node_id": "MDQ6VXNlcjE4MjM1NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1823547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ofermend",
            "html_url": "https://github.com/ofermend",
            "followers_url": "https://api.github.com/users/ofermend/followers",
            "following_url": "https://api.github.com/users/ofermend/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofermend/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ofermend/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofermend/subscriptions",
            "organizations_url": "https://api.github.com/users/ofermend/orgs",
            "repos_url": "https://api.github.com/users/ofermend/repos",
            "events_url": "https://api.github.com/users/ofermend/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ofermend/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-21T20:03:15Z",
        "updated_at": "2023-05-24T08:24:59Z",
        "closed_at": "2023-05-24T08:24:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5069",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5069",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5069.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5069.patch",
            "merged_at": "2023-05-24T08:24:58Z"
        },
        "body": "# Vectara Integration\r\n\r\nThis PR provides integration with Vectara. Implemented here are:\r\n* langchain/vectorstore/vectara.py\r\n* tests/integration_tests/vectorstores/test_vectara.py\r\n* langchain/retrievers/vectara_retriever.py\r\nAnd two IPYNB notebooks to do more testing:\r\n* docs/modules/chains/index_examples/vectara_text_generation.ipynb\r\n* docs/modules/indexes/vectorstores/examples/vectara.ipynb",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5069/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5069/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5068",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5068/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5068/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5068/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5068",
        "id": 1718618387,
        "node_id": "I_kwDOIPDwls5mcAkT",
        "number": 5068,
        "title": "DOC: SQL Database Agent",
        "user": {
            "login": "er77",
            "id": 12100294,
            "node_id": "MDQ6VXNlcjEyMTAwMjk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/12100294?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/er77",
            "html_url": "https://github.com/er77",
            "followers_url": "https://api.github.com/users/er77/followers",
            "following_url": "https://api.github.com/users/er77/following{/other_user}",
            "gists_url": "https://api.github.com/users/er77/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/er77/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/er77/subscriptions",
            "organizations_url": "https://api.github.com/users/er77/orgs",
            "repos_url": "https://api.github.com/users/er77/repos",
            "events_url": "https://api.github.com/users/er77/events{/privacy}",
            "received_events_url": "https://api.github.com/users/er77/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-05-21T19:43:41Z",
        "updated_at": "2023-11-06T16:08:09Z",
        "closed_at": "2023-11-06T16:08:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nHello \r\n I was trying to reproduce an example from that documentation \r\n\r\nhttps://python.langchain.com/en/latest/modules/agents/toolkits/examples/sql_database.html?highlight=SQLDatabaseToolkit# \r\n\r\nand got error \r\n\r\ntoolkit = SQLDatabaseToolkit(db=db )\r\n--\r\nValidationError: 1 validation error for SQLDatabaseToolkit\r\nllm\r\n  field required (type=value_error.missing)\r\n--\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5068/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5068/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5067",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5067/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5067/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5067/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5067",
        "id": 1718600362,
        "node_id": "I_kwDOIPDwls5mb8Kq",
        "number": 5067,
        "title": "ConversationalRetrievalChain doesn't return score with sources",
        "user": {
            "login": "zigax1",
            "id": 80093733,
            "node_id": "MDQ6VXNlcjgwMDkzNzMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/80093733?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zigax1",
            "html_url": "https://github.com/zigax1",
            "followers_url": "https://api.github.com/users/zigax1/followers",
            "following_url": "https://api.github.com/users/zigax1/following{/other_user}",
            "gists_url": "https://api.github.com/users/zigax1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zigax1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zigax1/subscriptions",
            "organizations_url": "https://api.github.com/users/zigax1/orgs",
            "repos_url": "https://api.github.com/users/zigax1/repos",
            "events_url": "https://api.github.com/users/zigax1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zigax1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 21,
        "created_at": "2023-05-21T18:40:34Z",
        "updated_at": "2023-11-06T20:42:14Z",
        "closed_at": "2023-06-03T23:57:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain v0.0.171\r\nChromaDB v0.3.22\r\nPython v3.10.11\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nThis is my code:\r\n\r\n```\r\n def askQuestion(self, collection_id, question):\r\n        collection_name = \"collection-\" + str(collection_id)\r\n        self.llm = ChatOpenAI(model_name=self.model_name, temperature=self.temperature, openai_api_key=os.environ.get('OPENAI_API_KEY'), streaming=True, callback_manager=CallbackManager([StreamingStdOutCallbackHandler()]))\r\n        self.memory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True,  output_key='answer')\r\n        \r\n        chroma_Vectorstore = Chroma(collection_name=collection_name, embedding_function=self.embeddingsOpenAi, client=self.chroma_client)\r\n\r\n        self.chain = ConversationalRetrievalChain.from_llm(self.llm, chroma_Vectorstore.as_retriever(),\r\n                                                             return_source_documents=True,verbose=VERBOSE, \r\n                                                             memory=self.memory)\r\n\r\n    \r\n        result = self.chain({\"question\": question})\r\n        print(result)\r\n\r\n        res_dict = {\r\n            \"answer\": result[\"answer\"],\r\n        }\r\n\r\n        res_dict[\"source_documents\"] = []\r\n\r\n        for source in result[\"source_documents\"]:\r\n            res_dict[\"source_documents\"].append({\r\n                \"page_content\": source.page_content,\r\n                \"metadata\":  source.metadata\r\n            })\r\n\r\n        return res_dict\r\n```\r\n\r\n### Expected behavior\r\n\r\nWhen I print the result directly after `result = self.chain({\"question\": question})`, I get displayed sources, metadata, kwargs, question, chat_history.\r\n\r\nI see here: https://github.com/hwchase17/langchain/blob/0c3de0a0b32fadb8caf3e6d803287229409f9da9/langchain/vectorstores/chroma.py#L165 and in line 182 in the official source code, that the similarity_search_with_score() is being called by default.\r\n\r\nHow can I also display the score than?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5067/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5067/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5066",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5066/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5066/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5066/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5066",
        "id": 1718587944,
        "node_id": "PR_kwDOIPDwls5Q9cUC",
        "number": 5066,
        "title": "add single execution option for ConversationalRetrievalChain",
        "user": {
            "login": "jpzhangvincent",
            "id": 7220686,
            "node_id": "MDQ6VXNlcjcyMjA2ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7220686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpzhangvincent",
            "html_url": "https://github.com/jpzhangvincent",
            "followers_url": "https://api.github.com/users/jpzhangvincent/followers",
            "following_url": "https://api.github.com/users/jpzhangvincent/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpzhangvincent/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpzhangvincent/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpzhangvincent/subscriptions",
            "organizations_url": "https://api.github.com/users/jpzhangvincent/orgs",
            "repos_url": "https://api.github.com/users/jpzhangvincent/repos",
            "events_url": "https://api.github.com/users/jpzhangvincent/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpzhangvincent/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 21,
        "created_at": "2023-05-21T18:00:45Z",
        "updated_at": "2023-11-07T10:58:11Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5066",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5066",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5066.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5066.patch",
            "merged_at": null
        },
        "body": "# add single execution option for ConversationalRetrievalChain\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n- The current default workflow for ConversationalRetrievalChain is to rephrase the question based on the chat history and then use the rephrased question to perform retrieval and question answering. \r\n- This current two-step process has pros and cons. It helps address the context size limit but it could increase unnecessary latency and incur potential information loss. \r\n- We can make the `question_generator` (chain) argument optional to allow it to bypass the rephrasing step and use a custom prompt to combine  the `chat_history`, `context` and `question` together for single execution. This could give users more flexibility based on their use cases and requirements.\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes #5123 \r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\nI updated the notebook to include the `## ConversationalRetrievalChain with only custom combine_docs_chain` section\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n@hwchase17 @dev2049\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5066/reactions",
            "total_count": 18,
            "+1": 12,
            "-1": 0,
            "laugh": 0,
            "hooray": 6,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5066/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5065",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5065/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5065/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5065/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5065",
        "id": 1718564503,
        "node_id": "I_kwDOIPDwls5mbzaX",
        "number": 5065,
        "title": "FAISS should allow you to specify id when using add_text",
        "user": {
            "login": "atisharma",
            "id": 1932398,
            "node_id": "MDQ6VXNlcjE5MzIzOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1932398?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atisharma",
            "html_url": "https://github.com/atisharma",
            "followers_url": "https://api.github.com/users/atisharma/followers",
            "following_url": "https://api.github.com/users/atisharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/atisharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atisharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atisharma/subscriptions",
            "organizations_url": "https://api.github.com/users/atisharma/orgs",
            "repos_url": "https://api.github.com/users/atisharma/repos",
            "events_url": "https://api.github.com/users/atisharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atisharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-21T16:39:28Z",
        "updated_at": "2023-05-25T05:26:48Z",
        "closed_at": "2023-05-25T05:26:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain 0.0.173\r\nfaiss-cpu 1.7.4\r\n\r\npython 3.10.11\r\nVoid linux\r\n\r\n\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nIt's a logic error in langchain.vectorstores.faiss.__add()\r\n\r\nhttps://github.com/hwchase17/langchain/blob/0c3de0a0b32fadb8caf3e6d803287229409f9da9/langchain/vectorstores/faiss.py#L94-L100\r\nhttps://github.com/hwchase17/langchain/blob/0c3de0a0b32fadb8caf3e6d803287229409f9da9/langchain/vectorstores/faiss.py#L118-L126\r\n\r\nThe id is not possible to specify as a function argument. This makes it impossible to detect duplicate additions, for instance.\r\n\r\n### Expected behavior\r\n\r\nIt should be possible to specify id of inserted documents / texts using the add_documents / add_texts methods, as it is in the Chroma object's methods.\r\n\r\nAs a side-effect this ability would also fix the inability to remove duplicates (see https://github.com/hwchase17/langchain/issues/2699 and https://github.com/hwchase17/langchain/issues/3896 ) by the approach of using ids unique to the content (I use a hash, for example).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5065/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5065/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5064",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5064/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5064/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5064/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5064",
        "id": 1718557112,
        "node_id": "PR_kwDOIPDwls5Q9WYq",
        "number": 5064,
        "title": "bump to 176",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-21T16:14:28Z",
        "updated_at": "2023-05-21T16:19:26Z",
        "closed_at": "2023-05-21T16:19:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5064",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5064",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5064.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5064.patch",
            "merged_at": "2023-05-21T16:19:26Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5064/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5064/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5063",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5063/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5063/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5063/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5063",
        "id": 1718551234,
        "node_id": "PR_kwDOIPDwls5Q9VO7",
        "number": 5063,
        "title": "Harrison/psychic",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-21T15:56:28Z",
        "updated_at": "2023-05-21T16:13:22Z",
        "closed_at": "2023-05-21T16:13:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5063",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5063",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5063.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5063.patch",
            "merged_at": "2023-05-21T16:13:21Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5063/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5063/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5062",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5062/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5062/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5062/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5062",
        "id": 1718551190,
        "node_id": "PR_kwDOIPDwls5Q9VOW",
        "number": 5062,
        "title": "change to type checking",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-21T15:56:18Z",
        "updated_at": "2023-05-21T16:09:50Z",
        "closed_at": "2023-05-21T16:09:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5062",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5062",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5062.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5062.patch",
            "merged_at": "2023-05-21T16:09:49Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5062/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5062/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5061",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5061/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5061/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5061/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5061",
        "id": 1718549470,
        "node_id": "I_kwDOIPDwls5mbvve",
        "number": 5061,
        "title": "[Bug] MMR ordering is not preserved for the Chroma Vectorstore",
        "user": {
            "login": "MrinalJain17",
            "id": 19644085,
            "node_id": "MDQ6VXNlcjE5NjQ0MDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/19644085?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MrinalJain17",
            "html_url": "https://github.com/MrinalJain17",
            "followers_url": "https://api.github.com/users/MrinalJain17/followers",
            "following_url": "https://api.github.com/users/MrinalJain17/following{/other_user}",
            "gists_url": "https://api.github.com/users/MrinalJain17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MrinalJain17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MrinalJain17/subscriptions",
            "organizations_url": "https://api.github.com/users/MrinalJain17/orgs",
            "repos_url": "https://api.github.com/users/MrinalJain17/repos",
            "events_url": "https://api.github.com/users/MrinalJain17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MrinalJain17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-21T15:50:19Z",
        "updated_at": "2023-09-17T17:16:54Z",
        "closed_at": "2023-09-17T17:16:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/hwchase17/langchain/blob/424a573266c848fe2e53bc2d50c2dc7fc72f2c15/langchain/vectorstores/chroma.py#L275\r\n\r\nThe line above would only select the candidates based on MMR, and not reorder them based on MMR's ranking.\r\n\r\nThis is not the case for any other vectorstores that support MMR.\r\n\r\ncc @hwchase17 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5061/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5061/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5059",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5059/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5059/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5059/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5059",
        "id": 1718526601,
        "node_id": "PR_kwDOIPDwls5Q9Qbl",
        "number": 5059,
        "title": "add get_top_k_cosine_similarity method to get max top k score and index",
        "user": {
            "login": "hwaking",
            "id": 25998151,
            "node_id": "MDQ6VXNlcjI1OTk4MTUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25998151?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwaking",
            "html_url": "https://github.com/hwaking",
            "followers_url": "https://api.github.com/users/hwaking/followers",
            "following_url": "https://api.github.com/users/hwaking/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwaking/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwaking/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwaking/subscriptions",
            "organizations_url": "https://api.github.com/users/hwaking/orgs",
            "repos_url": "https://api.github.com/users/hwaking/repos",
            "events_url": "https://api.github.com/users/hwaking/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwaking/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-21T14:35:26Z",
        "updated_at": "2023-05-22T18:55:49Z",
        "closed_at": "2023-05-22T18:55:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5059",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5059",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5059.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5059.patch",
            "merged_at": "2023-05-22T18:55:48Z"
        },
        "body": "# Row-wise cosine similarity between two equal-width matrices and return the max top_k score and index, the score all greater than threshold_score.         @vowelparrot  @dev2049  @hwchase17\r\n\r\nit's useful when we want to get the top k score and index after similarity compute. just like the following example:\r\n## input example\r\nx = [[1, 2, 3, 4], [1, 2, 2, 2]]\r\ny = [[1, 2, 3, 5], [1, 2, 9, 5], [2, 2, 3, 5]]\r\nindex_score_list = get_top_k_cosine_similarity(x, y, top_k=2, threshold_score=0.94)\r\nprint('index_score_list\uff1a', index_score_list)\r\n## output result\r\nindex_score_list\uff1a [[(0, 0.9939990885479664), (2, 0.9860132971832692)], [(2, 0.9415130835240085)]]\r\n\r\n\r\n\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5059/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5059/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5058",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5058/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5058/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5058/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5058",
        "id": 1718490630,
        "node_id": "PR_kwDOIPDwls5Q9JWH",
        "number": 5058,
        "title": "Add the usage of SSL certificates for Elasticsearch and user password authentication",
        "user": {
            "login": "CodeDevNinja",
            "id": 14970585,
            "node_id": "MDQ6VXNlcjE0OTcwNTg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/14970585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CodeDevNinja",
            "html_url": "https://github.com/CodeDevNinja",
            "followers_url": "https://api.github.com/users/CodeDevNinja/followers",
            "following_url": "https://api.github.com/users/CodeDevNinja/following{/other_user}",
            "gists_url": "https://api.github.com/users/CodeDevNinja/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CodeDevNinja/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CodeDevNinja/subscriptions",
            "organizations_url": "https://api.github.com/users/CodeDevNinja/orgs",
            "repos_url": "https://api.github.com/users/CodeDevNinja/repos",
            "events_url": "https://api.github.com/users/CodeDevNinja/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CodeDevNinja/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-21T12:43:59Z",
        "updated_at": "2023-05-24T01:54:52Z",
        "closed_at": "2023-05-22T18:51:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5058",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5058",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5058.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5058.patch",
            "merged_at": "2023-05-22T18:51:32Z"
        },
        "body": "Enhance the code to support SSL authentication for Elasticsearch when using the VectorStore module, as previous versions did not provide this capability.\r\n@dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5058/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5058/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5057",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5057/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5057/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5057/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5057",
        "id": 1718490382,
        "node_id": "I_kwDOIPDwls5mbhUO",
        "number": 5057,
        "title": "Issue: How do I fix the prompt length error in any agent that uses LLMCHAIN ? ",
        "user": {
            "login": "tejeshbhalla",
            "id": 62867013,
            "node_id": "MDQ6VXNlcjYyODY3MDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/62867013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tejeshbhalla",
            "html_url": "https://github.com/tejeshbhalla",
            "followers_url": "https://api.github.com/users/tejeshbhalla/followers",
            "following_url": "https://api.github.com/users/tejeshbhalla/following{/other_user}",
            "gists_url": "https://api.github.com/users/tejeshbhalla/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tejeshbhalla/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tejeshbhalla/subscriptions",
            "organizations_url": "https://api.github.com/users/tejeshbhalla/orgs",
            "repos_url": "https://api.github.com/users/tejeshbhalla/repos",
            "events_url": "https://api.github.com/users/tejeshbhalla/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tejeshbhalla/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-21T12:42:59Z",
        "updated_at": "2023-09-10T16:14:20Z",
        "closed_at": "2023-09-10T16:14:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am using the babyagi with the zeroshotagent the prompt length error is persistent , how can we fix it possibly summarise the agent_scratchpad and if someone could explain how does it work by default ? does It keep appending the bot and human response in it or just the previous ones?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5057/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5057/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5056",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5056/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5056/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5056/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5056",
        "id": 1718488269,
        "node_id": "PR_kwDOIPDwls5Q9I5Y",
        "number": 5056,
        "title": "Adding Weather Loader",
        "user": {
            "login": "iamadhee",
            "id": 69910091,
            "node_id": "MDQ6VXNlcjY5OTEwMDkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/69910091?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iamadhee",
            "html_url": "https://github.com/iamadhee",
            "followers_url": "https://api.github.com/users/iamadhee/followers",
            "following_url": "https://api.github.com/users/iamadhee/following{/other_user}",
            "gists_url": "https://api.github.com/users/iamadhee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iamadhee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iamadhee/subscriptions",
            "organizations_url": "https://api.github.com/users/iamadhee/orgs",
            "repos_url": "https://api.github.com/users/iamadhee/repos",
            "events_url": "https://api.github.com/users/iamadhee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iamadhee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-21T12:35:45Z",
        "updated_at": "2023-05-24T03:43:52Z",
        "closed_at": "2023-05-23T22:57:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5056",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5056",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5056.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5056.patch",
            "merged_at": "2023-05-23T22:57:34Z"
        },
        "body": "# Adding Weather Loader\r\n\r\n## Before submitting\r\n\r\nBelow is the recording of the module testing:\r\nhttps://github.com/hwchase17/langchain/assets/69910091/2b179eec-1421-4509-9ac8-89f57f739ba6\r\n\r\n## Who can review?\r\n@eyurtsev \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5056/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5056/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5055",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5055/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5055/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5055/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5055",
        "id": 1718487307,
        "node_id": "PR_kwDOIPDwls5Q9Itf",
        "number": 5055,
        "title": "Add cosine_simirarity_v1 which is more faster than the original cosine_similarity method.",
        "user": {
            "login": "hwaking",
            "id": 25998151,
            "node_id": "MDQ6VXNlcjI1OTk4MTUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25998151?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwaking",
            "html_url": "https://github.com/hwaking",
            "followers_url": "https://api.github.com/users/hwaking/followers",
            "following_url": "https://api.github.com/users/hwaking/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwaking/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwaking/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwaking/subscriptions",
            "organizations_url": "https://api.github.com/users/hwaking/orgs",
            "repos_url": "https://api.github.com/users/hwaking/repos",
            "events_url": "https://api.github.com/users/hwaking/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwaking/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-21T12:32:30Z",
        "updated_at": "2023-11-07T04:25:00Z",
        "closed_at": "2023-11-07T04:25:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5055",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5055",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5055.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5055.patch",
            "merged_at": null
        },
        "body": "add cosine_simirarity_v1 method which is 5 times faster than the orginal cosine_similarity method.\r\n\r\n# add cosine_simirarity_v1 method which is 5 times faster than the orgianl cosine_similarity method.\r\n@vowelparrot\r\nupdate math_utils.py file add cosine_simirarity_v1 which is more faster than the original cosine_similarity method.\r\nthe time cost test like this:\r\n'''\r\nx = [[1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4]] * 2000\r\ny = [[1, 2, 3, 5, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], [1, 2, 2, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4]] * 30000\r\nresp = cosine_similarity(x, y)\r\nresp1 = cosine_simirarity_v1(x, y)\r\nprint('resp\uff1a ', resp)\r\nprint('score_list\uff1a ', resp1, type(resp1))\r\n\r\noutput:\r\nFunction cosine_similarity Took 1.8206 seconds\r\nFunction cosine_simirarity_v1 Took 0.3706 seconds\r\n\r\nresp\uff1a  [[0.99663517 0.99597014 0.99663517 ... 0.99597014 0.99663517 0.99597014]\r\n [0.99663517 0.99597014 0.99663517 ... 0.99597014 0.99663517 0.99597014]\r\n [0.99663517 0.99597014 0.99663517 ... 0.99597014 0.99663517 0.99597014] ...\r\n'''\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5055/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5055/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5053",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5053/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5053/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5053/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5053",
        "id": 1718455217,
        "node_id": "I_kwDOIPDwls5mbYux",
        "number": 5053,
        "title": "The problem that ConversationTokenBufferMemory cannot be trimmed normally due to the use of persistent messages",
        "user": {
            "login": "alex14dark",
            "id": 19234074,
            "node_id": "MDQ6VXNlcjE5MjM0MDc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/19234074?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alex14dark",
            "html_url": "https://github.com/alex14dark",
            "followers_url": "https://api.github.com/users/alex14dark/followers",
            "following_url": "https://api.github.com/users/alex14dark/following{/other_user}",
            "gists_url": "https://api.github.com/users/alex14dark/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alex14dark/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alex14dark/subscriptions",
            "organizations_url": "https://api.github.com/users/alex14dark/orgs",
            "repos_url": "https://api.github.com/users/alex14dark/repos",
            "events_url": "https://api.github.com/users/alex14dark/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alex14dark/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-21T10:41:45Z",
        "updated_at": "2023-11-29T16:10:19Z",
        "closed_at": "2023-11-29T16:10:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nBy way of example from the official docs,\r\nmemory = ConversationTokenBufferMemory(llm=llm, max_token_limit=10)\r\nmemory. save_context({\"input\": \"hi\"}, {\"ouput\": \"what's up\"})\r\nmemory. save_context({\"input\": \"not much you\"}, {\"ouput\": \"not much\"})\r\nmemory. load_memory_variables({})\r\nIf it is the memory method, when the number of memories exceeds the given token limit, it will trim the memory normally, but if persistent messages are added, the memory will not be trimmed, for example\r\nhistory = RedisChatMessageHistory(\r\n         url=redis_url, ttl=600, session_id='id') memory = ConversationTokenBufferMemory(llm=llm, max_token_limit=10, chat_memory=history)\r\nmemory. save_context({\"input\": \"hi\"}, {\"ouput\": \"what's up\"})\r\nmemory. save_context({\"input\": \"not much you\"}, {\"ouput\": \"not much\"})\r\nmemory. load_memory_variables({})\r\nYou will find that the limit of the token exceeded in time, or it will print out all the historical memory\r\nThis will cause your code to fail to work properly for a certain period of time until the ttl that triggers redis expires\r\n\r\nAt present, my approach is to redefine a TokenMemory class. The following code is for reference only. If you have a better way to implement it, you are welcome to discuss it\r\n\r\n`class CustomTokenMemory(BaseChatMemory):\r\n\r\n     new_buffer: List = []\r\n\r\n     human_prefix: str = \"Human\"\r\n     ai_prefix: str = \"AI\"\r\n     llm:BaseLanguageModel\r\n     memory_key: str = \"history\"\r\n     max_token_limit: int = 2000\r\n\r\n     @property\r\n     def buffer(self) -> List[BaseMessage]:\r\n         \"\"\"String buffer of memory.\"\"\"\r\n         if not self. new_buffer:\r\n             self. prune_memory()\r\n         return self. new_buffer\r\n    \r\n     @property\r\n     def memory_variables(self) -> List[str]:\r\n         \"\"\"Will always return list of memory variables.\r\n\r\n         :meta private:\r\n         \"\"\"\r\n         return [self. memory_key]\r\n\r\n     def load_memory_variables(self, inputs: Dict[str, Any]) -> Dict[str, Any]:\r\n         \"\"\"Return history buffer.\"\"\"\r\n         buffer: Any = self.buffer\r\n         if self. return_messages:\r\n             final_buffer: Any = buffer\r\n         else:\r\n             final_buffer = get_buffer_string(\r\n                 buffer,\r\n                 human_prefix=self.human_prefix,\r\n                 ai_prefix=self.ai_prefix,\r\n             )\r\n         return {self. memory_key: final_buffer}\r\n    \r\n     def save_context(self, inputs: Dict[str, Any], outputs: Dict[str, str]) -> None:\r\n         \"\"\"Save context from this conversation to buffer. Pruned.\"\"\"\r\n         super(). save_context(inputs, outputs)\r\n         self. prune_memory()\r\n        \r\n     def prune_memory(self):\r\n         # Prune buffer if it exceeds max token limit\r\n         buffer = self.chat_memory.messages\r\n         curr_buffer_length = self.llm.get_num_tokens_from_messages(buffer)\r\n         if curr_buffer_length > self.max_token_limit:\r\n             while curr_buffer_length > self.max_token_limit:\r\n                 buffer. pop(0)\r\n                 curr_buffer_length = self.llm.get_num_tokens_from_messages(buffer)\r\n             self.new_buffer = buffer`\r\n\r\nHere I newly define a new_buffer array to point to the pruned memory, because in ConversationTokenBufferMemory, his self.buffer always gets all the messages in redis, so even if the memory is pruned in save_context, but All the historical messages obtained through load_memory_variables. My change here is that when the new_buffer is empty, the historical messages are first obtained from redis. Here, it needs to be trimmed once to ensure that the obtained messages must be within the Token limit, so The main purpose is to deal with rare scenarios, such as when your service is down or restarted, and the messages in the memory disappear. Although this is not necessary in most cases, then after new messages enter, the buffer will be deleted. new_buffer instead, then the pruned memory is obtained through load_memory_variables\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5053/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5053/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5052",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5052/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5052/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5052/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5052",
        "id": 1718447024,
        "node_id": "I_kwDOIPDwls5mbWuw",
        "number": 5052,
        "title": "Regarding explaination of answer which is returned by OpenAI embeddings",
        "user": {
            "login": "nithinreddyyyyyy",
            "id": 129744879,
            "node_id": "U_kgDOB7u_7w",
            "avatar_url": "https://avatars.githubusercontent.com/u/129744879?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nithinreddyyyyyy",
            "html_url": "https://github.com/nithinreddyyyyyy",
            "followers_url": "https://api.github.com/users/nithinreddyyyyyy/followers",
            "following_url": "https://api.github.com/users/nithinreddyyyyyy/following{/other_user}",
            "gists_url": "https://api.github.com/users/nithinreddyyyyyy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nithinreddyyyyyy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nithinreddyyyyyy/subscriptions",
            "organizations_url": "https://api.github.com/users/nithinreddyyyyyy/orgs",
            "repos_url": "https://api.github.com/users/nithinreddyyyyyy/repos",
            "events_url": "https://api.github.com/users/nithinreddyyyyyy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nithinreddyyyyyy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-21T10:11:49Z",
        "updated_at": "2023-09-10T16:14:25Z",
        "closed_at": "2023-09-10T16:14:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI'm working on Q&A using OpenAI for pdf and another documents. Below is the code\r\n\r\n```\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain import OpenAI, VectorDBQA\r\nimport pickle\r\nimport textwrap\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chains import RetrievalQA\r\nfrom langchain.document_loaders import PyPDFLoader, DirectoryLoader\r\nimport os\r\nimport warnings\r\nwarnings.filterwarnings(\"ignore\")\r\n\r\n# Set up the environment variable for the OpenAI API key\r\nos.environ[\"OPENAI_API_KEY\"] = \"\"\r\n\r\ndef get_documents(folder_path, file_extension):\r\n    documents = []\r\n    if file_extension == 'pdf':\r\n        pdf_loader = DirectoryLoader(folder_path, glob=\"./*.pdf\", loader_cls=PyPDFLoader)  # Select PDF files\r\n        documents += pdf_loader.load()\r\n    elif file_extension == 'txt':\r\n        txt_loader = DirectoryLoader(folder_path, glob=\"./*.txt\")  # Select TXT files\r\n        documents += txt_loader.load()\r\n    elif file_extension == 'combined':\r\n        pdf_loader = DirectoryLoader(folder_path, glob=\"./*.pdf\", loader_cls=PyPDFLoader)  # Select PDF files\r\n        documents += pdf_loader.load()\r\n        txt_loader = DirectoryLoader(folder_path, glob=\"./*.txt\")  # Select TXT files\r\n        documents += txt_loader.load()\r\n    else:\r\n        return None\r\n\r\n    return documents\r\n\r\ndef get_query_result(query, documents):\r\n    # Split documents\r\n    text_splitter = RecursiveCharacterTextSplitter(chunk_size=2000, chunk_overlap=200)\r\n    texts = text_splitter.split_documents(documents)\r\n\r\n    # Query documents\r\n    embeddings = OpenAIEmbeddings(openai_api_key=os.environ['OPENAI_API_KEY'])\r\n    docsearch = Chroma.from_documents(texts, embeddings)\r\n    qa = VectorDBQA.from_chain_type(llm=OpenAI(), chain_type=\"stuff\", vectorstore=docsearch, return_source_documents=True)\r\n    result = qa({\"query\": query})\r\n\r\n    result_text = result['result'].strip()\r\n    source = result.get('source_documents', [{}])[0].metadata.get('source', '')\r\n    page = result.get('source_documents', [{}])[0].metadata.get('page', '')\r\n\r\n    return result_text, source, page\r\n\r\ndef chat_loop(file_extension, folder_path):\r\n    documents = get_documents(folder_path, file_extension)\r\n    if documents is None:\r\n        print(\"Invalid folder path or no supported files found.\")\r\n        return\r\n\r\n    while True:\r\n        query = input(\"Enter your query (type 'exit' to end): \")\r\n        if query.lower() == 'exit':\r\n            break\r\n\r\n        result = get_query_result(query, documents)\r\n\r\n        if result is not None:\r\n            result_text, source, page = result\r\n            print(\"Result:\", result_text)\r\n            if source:\r\n                print(\"Source:\", source)\r\n                print(\"Page:\", page)\r\n        else:\r\n            print(\"No answer found for the query.\")\r\n\r\n        print()  # Print an empty line for separation\r\n\r\n# Get the selected file extension and folder path from the webpage\r\nselected_file_extension = 'combined' \r\nfolder_path = 'Documents'\r\n\r\n# Start the chat loop\r\nchat_loop(selected_file_extension, folder_path)\r\n```\r\n\r\nThe code above will just take the input pdf or any other document text and provide a single line answer. In ChatGPT, if we provide it a long text or paragraph and ask it a question, it will give us the answer and explain where it got the answer and why it is correct. Is it possible to perform the same in the above code?\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nLooking for a better explanation of answer instead of returning a single line answer or just answer.\n\n### Expected behavior\n\nExpecting to return the answers with better explanation or articulation.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5052/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5052/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5051",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5051/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5051/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5051/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5051",
        "id": 1718432064,
        "node_id": "I_kwDOIPDwls5mbTFA",
        "number": 5051,
        "title": "Issue: Escaping { and } chars in a langchain.prompts.PromptTemplate",
        "user": {
            "login": "Th0rgal",
            "id": 41830259,
            "node_id": "MDQ6VXNlcjQxODMwMjU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/41830259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Th0rgal",
            "html_url": "https://github.com/Th0rgal",
            "followers_url": "https://api.github.com/users/Th0rgal/followers",
            "following_url": "https://api.github.com/users/Th0rgal/following{/other_user}",
            "gists_url": "https://api.github.com/users/Th0rgal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Th0rgal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Th0rgal/subscriptions",
            "organizations_url": "https://api.github.com/users/Th0rgal/orgs",
            "repos_url": "https://api.github.com/users/Th0rgal/repos",
            "events_url": "https://api.github.com/users/Th0rgal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Th0rgal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-21T09:25:49Z",
        "updated_at": "2023-09-22T16:08:39Z",
        "closed_at": "2023-09-22T16:08:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHey,\r\n\r\nI am willing to use { and } chars as an example in my prompt template (I want to prompt my chain to generate css code), but this generates this error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/thomas/workspace/j4rvis/j4rvis/tools/document_tools.py\", line 43, in <module>\r\n    prompt=PromptTemplate(\r\n           ^^^^^^^^^^^^^^^\r\n  File \"pydantic/main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for PromptTemplate\r\n__root__\r\n  Invalid prompt schema; check for mismatched or missing input parameters. ' ' (type=value_error)\r\n  ```\r\n  \r\n How could I escape those chars so they don't get interpreted as input_variables?\r\n \r\n \n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5051/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5051/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5050",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5050/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5050/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5050/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5050",
        "id": 1718415310,
        "node_id": "PR_kwDOIPDwls5Q86f8",
        "number": 5050,
        "title": "Add ToolException that a tool can throw.",
        "user": {
            "login": "xming521",
            "id": 32786500,
            "node_id": "MDQ6VXNlcjMyNzg2NTAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/32786500?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xming521",
            "html_url": "https://github.com/xming521",
            "followers_url": "https://api.github.com/users/xming521/followers",
            "following_url": "https://api.github.com/users/xming521/following{/other_user}",
            "gists_url": "https://api.github.com/users/xming521/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xming521/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xming521/subscriptions",
            "organizations_url": "https://api.github.com/users/xming521/orgs",
            "repos_url": "https://api.github.com/users/xming521/repos",
            "events_url": "https://api.github.com/users/xming521/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xming521/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-21T08:23:38Z",
        "updated_at": "2023-06-02T12:53:26Z",
        "closed_at": "2023-05-29T20:05:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5050",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5050",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5050.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5050.patch",
            "merged_at": "2023-05-29T20:05:58Z"
        },
        "body": "# Add ToolException that a tool can throw\r\nThis is an optional exception that tool throws when execution error occurs.\r\nWhen this exception is thrown, the agent will not stop working,but will handle the exception according to the handle_tool_error variable of the tool,and the processing result will be returned to the agent as observation,and printed in pink on the console.It can be used like this:\r\n```python \r\nfrom langchain.schema import ToolException\r\nfrom langchain import LLMMathChain, SerpAPIWrapper, OpenAI\r\nfrom langchain.agents import AgentType, initialize_agent\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.tools import BaseTool, StructuredTool, Tool, tool\r\nfrom langchain.chat_models import ChatOpenAI\r\n\r\nllm = ChatOpenAI(temperature=0)\r\nllm_math_chain = LLMMathChain(llm=llm, verbose=True)\r\n\r\nclass Error_tool:\r\n    def run(self, s: str):\r\n        raise ToolException('The current search tool is not available.')\r\n    \r\ndef handle_tool_error(error) -> str:\r\n    return \"The following errors occurred during tool execution:\"+str(error)\r\n\r\nsearch_tool1 = Error_tool()\r\nsearch_tool2 = SerpAPIWrapper()\r\ntools = [\r\n    Tool.from_function(\r\n        func=search_tool1.run,\r\n        name=\"Search_tool1\",\r\n        description=\"useful for when you need to answer questions about current events.You should give priority to using it.\",\r\n        handle_tool_error=handle_tool_error,\r\n    ),\r\n    Tool.from_function(\r\n        func=search_tool2.run,\r\n        name=\"Search_tool2\",\r\n        description=\"useful for when you need to answer questions about current events\",\r\n        return_direct=True,\r\n    )\r\n]\r\nagent = initialize_agent(tools, llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True,\r\n                         handle_tool_errors=handle_tool_error)\r\nagent.run(\"Who is Leo DiCaprio's girlfriend? What is her current age raised to the 0.43 power?\")\r\n```\r\n![image](https://github.com/hwchase17/langchain/assets/32786500/51930410-b26e-4f85-a1e1-e6a6fb450ada)\r\n\r\n## Who can review?\r\n- @vowelparrot \r\n\r\n\r\n        \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5050/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5050/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5049",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5049/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5049/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5049/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5049",
        "id": 1718377291,
        "node_id": "PR_kwDOIPDwls5Q8zT7",
        "number": 5049,
        "title": "Harrison/vertex",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2023-05-21T05:30:37Z",
        "updated_at": "2023-06-01T06:52:53Z",
        "closed_at": "2023-05-24T22:51:12Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5049",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5049",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5049.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5049.patch",
            "merged_at": "2023-05-24T22:51:12Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5049/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5049/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5048",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5048/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5048/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5048/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5048",
        "id": 1718375450,
        "node_id": "I_kwDOIPDwls5mbFQa",
        "number": 5048,
        "title": "poetry install -E all` fails because `torch` undetected",
        "user": {
            "login": "startakovsky",
            "id": 689723,
            "node_id": "MDQ6VXNlcjY4OTcyMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/689723?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/startakovsky",
            "html_url": "https://github.com/startakovsky",
            "followers_url": "https://api.github.com/users/startakovsky/followers",
            "following_url": "https://api.github.com/users/startakovsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/startakovsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/startakovsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/startakovsky/subscriptions",
            "organizations_url": "https://api.github.com/users/startakovsky/orgs",
            "repos_url": "https://api.github.com/users/startakovsky/repos",
            "events_url": "https://api.github.com/users/startakovsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/startakovsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-05-21T05:19:15Z",
        "updated_at": "2023-10-28T18:34:23Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nMacOS Ventura, zshell\r\n`pyenv virtualenv 3.11 langchain`, clean environment\r\n`pyenv local langchain`, automatically activate environment\r\n`curl -sSL https://install.python-poetry.org | python -`, install poetry\r\n`export PATH=\"/Users/steven/.local/bin:$PATH`, added this to allow for poetry to be accessible\r\n`pip install --upgrade pip`\r\n`pip install torch`\r\n`poetry install -E all` \r\n\r\nyields the following output. Strange.\r\n\r\n```bash\r\n \u2022 Installing torch (1.13.1): Failed\r\n\r\n  RuntimeError\r\n\r\n  Unable to find installation candidates for torch (1.13.1)\r\n\r\n  at ~/Library/Application Support/pypoetry/venv/lib/python3.11/site-packages/poetry/installation/chooser.py:76 in choose_for\r\n       72\u2502\r\n       73\u2502             links.append(link)\r\n       74\u2502\r\n       75\u2502         if not links:\r\n    \u2192  76\u2502             raise RuntimeError(f\"Unable to find installation candidates for {package}\")\r\n       77\u2502\r\n       78\u2502         # Get the best link\r\n       79\u2502         chosen = max(links, key=lambda link: self._sort_key(package, link))\r\n       80\u2502\r\n\r\n```\n\n### Who can help?\n\n@hwchase17 This is install related and while I have langchain running fine from pip in another virtual environment running the same python version (3.11.3), things with poetry are not working well.\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nMacOS Ventura, zshell\r\n`pyenv virtualenv 3.11 langchain`, clean environment\r\n`pyenv local langchain`, automatically activate environment\r\n`curl -sSL https://install.python-poetry.org | python -`, install poetry\r\n`export PATH=\"/Users/steven/.local/bin:$PATH`, added this to allow for poetry to be accessible\r\n`pip install --upgrade pip`\r\n`pip install torch`\r\n`poetry install -E all` \n\n### Expected behavior\n\n```bash\r\n \u2022 Installing torch (1.13.1): Failed\r\n\r\n  RuntimeError\r\n\r\n  Unable to find installation candidates for torch (1.13.1)\r\n\r\n  at ~/Library/Application Support/pypoetry/venv/lib/python3.11/site-packages/poetry/installation/chooser.py:76 in choose_for\r\n       72\u2502\r\n       73\u2502             links.append(link)\r\n       74\u2502\r\n       75\u2502         if not links:\r\n    \u2192  76\u2502             raise RuntimeError(f\"Unable to find installation candidates for {package}\")\r\n       77\u2502\r\n       78\u2502         # Get the best link\r\n       79\u2502         chosen = max(links, key=lambda link: self._sort_key(package, link))\r\n       80\u2502\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5048/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5048/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5047",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5047/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5047/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5047/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5047",
        "id": 1718343729,
        "node_id": "PR_kwDOIPDwls5Q8tAe",
        "number": 5047,
        "title": "feat: :sparkles: `from_documents` in TFiDF retireiver",
        "user": {
            "login": "vempaliakhil96",
            "id": 24319338,
            "node_id": "MDQ6VXNlcjI0MzE5MzM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/24319338?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vempaliakhil96",
            "html_url": "https://github.com/vempaliakhil96",
            "followers_url": "https://api.github.com/users/vempaliakhil96/followers",
            "following_url": "https://api.github.com/users/vempaliakhil96/following{/other_user}",
            "gists_url": "https://api.github.com/users/vempaliakhil96/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vempaliakhil96/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vempaliakhil96/subscriptions",
            "organizations_url": "https://api.github.com/users/vempaliakhil96/orgs",
            "repos_url": "https://api.github.com/users/vempaliakhil96/repos",
            "events_url": "https://api.github.com/users/vempaliakhil96/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vempaliakhil96/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-21T01:55:15Z",
        "updated_at": "2023-05-24T17:02:57Z",
        "closed_at": "2023-05-24T17:02:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5047",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5047",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5047.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5047.patch",
            "merged_at": null
        },
        "body": "# `from_documents` in TFiDF retriever\r\n\r\nHello Langchainers, just added this method in the TFiDF retriever as it was useful and it does not break any code, it can be useful in complex chains to have a simple text-based retriever as one of the tools in your toolkits for text matching docs.\r\n\r\n## Before submitting\r\n\r\nadded `test_from_documents` in `tests/integration_tests/retrievers/test_tfidf.py`\r\n\r\n## Who can review?\r\n@dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5047/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5047/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5046",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5046/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5046/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5046/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5046",
        "id": 1718283195,
        "node_id": "I_kwDOIPDwls5mauu7",
        "number": 5046,
        "title": "Issue:  Chroma DB ",
        "user": {
            "login": "FL0S0T",
            "id": 128901738,
            "node_id": "U_kgDOB67iag",
            "avatar_url": "https://avatars.githubusercontent.com/u/128901738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FL0S0T",
            "html_url": "https://github.com/FL0S0T",
            "followers_url": "https://api.github.com/users/FL0S0T/followers",
            "following_url": "https://api.github.com/users/FL0S0T/following{/other_user}",
            "gists_url": "https://api.github.com/users/FL0S0T/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FL0S0T/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FL0S0T/subscriptions",
            "organizations_url": "https://api.github.com/users/FL0S0T/orgs",
            "repos_url": "https://api.github.com/users/FL0S0T/repos",
            "events_url": "https://api.github.com/users/FL0S0T/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FL0S0T/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-05-20T20:35:07Z",
        "updated_at": "2023-09-04T07:46:17Z",
        "closed_at": "2023-05-24T06:24:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nHi,\r\n\r\nfor the following code there is a dimension error -> InvalidDimensionException: Dimensionality of (1536) does not match index dimensionality (384)\r\n\r\n```embeddingsFunction = OpenAIEmbeddings(model=\"text-embedding-ada-002\", chunk_size=1)\r\npersist_directory = \"chromaDB_csv\"\r\nvectordb = None\r\n\r\nvectordb = Chroma.from_documents(\r\n    documents=docs, embeddings=embeddingsFunction, persist_directory=persist_directory\r\n)\r\nvectordb.persist()\r\n\r\n\r\nAzureOpenAI.api_type = \"azure\"\r\nllm = AzureChatOpenAI(\r\n        deployment_name=\"gpt-35-turbo\",\r\n        engine=\"gpt-35-turbo\", \r\n        openai_api_base=os.getenv('OPENAI_API_BASE'),\r\n        openai_api_key=os.getenv(\"OPENAI_API_KEY\"),\r\n        openai_api_type = \"azure\",\r\n        openai_api_version = \"2023-03-15-preview\"\r\n    )\r\n\r\nprint(os.getenv('OPENAI_API_BASE'))\r\nprint(os.getenv('OPENAI_API_KEY'))\r\n\r\nvectordb = Chroma(persist_directory=persist_directory, embedding_function=embeddingsFunction )\r\nsearch_kwargs = {\r\n    \"maximal_marginal_relevance\": True,\r\n    \"distance_metric\": \"cos\",\r\n    \"fetch_k\": 100,\r\n    \"k\": 10,\r\n}\r\n\r\nretriever = vectordb.as_retriever(search_type=\"mmr\", search_kwargs=search_kwargs)\r\n\r\nchain = ConversationalRetrievalChain.from_llm(\r\n    llm,\r\n    retriever=retriever,\r\n    chain_type=\"stuff\",\r\n    verbose=True,\r\n    max_tokens_limit=4096,\r\n)\r\n\r\nchain({\"question\": \"ABC ABC ABC ABC\", \"chat_history\":[]})```\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5046/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5046/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5045",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5045/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5045/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5045/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5045",
        "id": 1718277017,
        "node_id": "PR_kwDOIPDwls5Q8gde",
        "number": 5045,
        "title": "fix: assign current_time to datetime.now() if current_time is None",
        "user": {
            "login": "mbchang",
            "id": 6439365,
            "node_id": "MDQ6VXNlcjY0MzkzNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6439365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbchang",
            "html_url": "https://github.com/mbchang",
            "followers_url": "https://api.github.com/users/mbchang/followers",
            "following_url": "https://api.github.com/users/mbchang/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbchang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbchang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbchang/subscriptions",
            "organizations_url": "https://api.github.com/users/mbchang/orgs",
            "repos_url": "https://api.github.com/users/mbchang/repos",
            "events_url": "https://api.github.com/users/mbchang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbchang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-20T20:14:51Z",
        "updated_at": "2023-05-22T22:47:04Z",
        "closed_at": "2023-05-22T22:47:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5045",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5045",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5045.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5045.patch",
            "merged_at": "2023-05-22T22:47:04Z"
        },
        "body": "# Assign `current_time` to `datetime.now()` if it `current_time is None` in `time_weighted_retriever`\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes #4825 \r\n\r\nAs implemented, `add_documents` in `TimeWeightedVectorStoreRetriever` assigns `doc.metadata[\"last_accessed_at\"]` and `doc.metadata[\"created_at\"]` to `datetime.datetime.now()` if `current_time` is not in `kwargs`.\r\n```python\r\n    def add_documents(self, documents: List[Document], **kwargs: Any) -> List[str]:\r\n        \"\"\"Add documents to vectorstore.\"\"\"\r\n        current_time = kwargs.get(\"current_time\", datetime.datetime.now())\r\n        # Avoid mutating input documents\r\n        dup_docs = [deepcopy(d) for d in documents]\r\n        for i, doc in enumerate(dup_docs):\r\n            if \"last_accessed_at\" not in doc.metadata:\r\n                doc.metadata[\"last_accessed_at\"] = current_time\r\n            if \"created_at\" not in doc.metadata:\r\n                doc.metadata[\"created_at\"] = current_time\r\n            doc.metadata[\"buffer_idx\"] = len(self.memory_stream) + i\r\n        self.memory_stream.extend(dup_docs)\r\n        return self.vectorstore.add_documents(dup_docs, **kwargs)\r\n``` \r\nHowever, from the way `add_documents` is being called from `GenerativeAgentMemory`, `current_time` is set as a `kwarg`, but it is given a value of `None`:\r\n```python\r\n    def add_memory(\r\n        self, memory_content: str, now: Optional[datetime] = None\r\n    ) -> List[str]:\r\n        \"\"\"Add an observation or memory to the agent's memory.\"\"\"\r\n        importance_score = self._score_memory_importance(memory_content)\r\n        self.aggregate_importance += importance_score\r\n        document = Document(\r\n            page_content=memory_content, metadata={\"importance\": importance_score}\r\n        )\r\n        result = self.memory_retriever.add_documents([document], current_time=now)\r\n```\r\nThe default of `now` was set in #4658 to be None. The proposed fix is the following:\r\n```python\r\n    def add_documents(self, documents: List[Document], **kwargs: Any) -> List[str]:\r\n        \"\"\"Add documents to vectorstore.\"\"\"\r\n        current_time = kwargs.get(\"current_time\", datetime.datetime.now())\r\n        # `current_time` may exist in kwargs, but may still have the value of None.\r\n        if current_time is None:\r\n            current_time = datetime.datetime.now()\r\n```\r\nAlternatively, we could just set the default of `now` to be `datetime.datetime.now()` everywhere instead. Thoughts @hwchase17? If we still want to keep the default to be `None`, then this PR should fix the above issue. If we want to set the default to be `datetime.datetime.now()` instead, I can update this PR with that alternative fix. EDIT: seems like from #5018 it looks like we would prefer to keep the default to be `None`, in which case this PR should fix the error.\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@hwchase17 \r\n@dev2049\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5045/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5045/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5044",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5044/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5044/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5044/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5044",
        "id": 1718266994,
        "node_id": "I_kwDOIPDwls5maqxy",
        "number": 5044,
        "title": "Agent answer questions that is not related to my custom data",
        "user": {
            "login": "lironezra",
            "id": 28096499,
            "node_id": "MDQ6VXNlcjI4MDk2NDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/28096499?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lironezra",
            "html_url": "https://github.com/lironezra",
            "followers_url": "https://api.github.com/users/lironezra/followers",
            "following_url": "https://api.github.com/users/lironezra/following{/other_user}",
            "gists_url": "https://api.github.com/users/lironezra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lironezra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lironezra/subscriptions",
            "organizations_url": "https://api.github.com/users/lironezra/orgs",
            "repos_url": "https://api.github.com/users/lironezra/repos",
            "events_url": "https://api.github.com/users/lironezra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lironezra/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-20T19:42:03Z",
        "updated_at": "2023-09-11T08:17:08Z",
        "closed_at": "2023-09-11T08:17:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi All,\r\n\r\nI'm developing a chatbot that run over PDF documents that stored on Pinecone.\r\nI have an agent that use one tool (in my case it's `ConversationalRetrievalChain`) the chain works perfect when I'm asking any question.\r\nBut when I move forward and pass this chain as a tool I'm getting unexpected results. \r\nFor example when I asked \"Who is Leo Messi?\" (of course I don't have any info on him in my PDF file), I got real answer to the question \"Leo Messi is Argentinian soccer player......\"\r\n\r\nI noticed that the agent search by himself answer to that question and don't run the tool I provided for him.\r\nI have tried to edit the prompt of the agent that will not search data by himself, but without success.\r\n\r\nAnyone face it too?\r\n\r\nThanks for help!    \n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5044/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5044/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5043",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5043/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5043/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5043/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5043",
        "id": 1718260661,
        "node_id": "I_kwDOIPDwls5mapO1",
        "number": 5043,
        "title": "not able to use memory.saveContent and metadata filtering together.",
        "user": {
            "login": "fishmeister09",
            "id": 63541672,
            "node_id": "MDQ6VXNlcjYzNTQxNjcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/63541672?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fishmeister09",
            "html_url": "https://github.com/fishmeister09",
            "followers_url": "https://api.github.com/users/fishmeister09/followers",
            "following_url": "https://api.github.com/users/fishmeister09/following{/other_user}",
            "gists_url": "https://api.github.com/users/fishmeister09/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fishmeister09/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fishmeister09/subscriptions",
            "organizations_url": "https://api.github.com/users/fishmeister09/orgs",
            "repos_url": "https://api.github.com/users/fishmeister09/repos",
            "events_url": "https://api.github.com/users/fishmeister09/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fishmeister09/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-20T19:14:01Z",
        "updated_at": "2023-05-30T18:17:46Z",
        "closed_at": "2023-05-30T18:17:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n  \"langchain\": \"^0.0.75\"\r\n  \"@supabase/supabase-js\": \"^2.21.0\"\r\n  \r\n\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [x] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [X] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n  ```\r\nexport const query = async (query) => {\r\n  const model = new ChatOpenAI({\r\n    modelName: 'gpt-3.5-turbo',\r\n  });\r\n  const vectorStore = await SupabaseVectorStore.fromExistingIndex(\r\n    new OpenAIEmbeddings(),\r\n    {\r\n      client: SUPABASE_CLIENT,\r\n      tableName: 'documents',\r\n      queryName: 'match_documents_with_filters',\r\n      filter: { email: 'abc@gmail.com' }, //able to filter name with this as store in db.\r\n    }\r\n  );\r\n\r\n  const memory = new VectorStoreRetrieverMemory({\r\n    vectorStoreRetriever: vectorStore.asRetriever(5),\r\n    memoryKey: 'history',\r\n  });\r\n\r\n  await memory.saveContext(\r\n    { input: 'My favorite sport is soccer' },\r\n    { output: '...' }\r\n  );// this is not working when using metadata filtering.\r\n\r\n  const prompt =\r\n    PromptTemplate.fromTemplate(`The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\r\n\r\nRelevant pieces of conversation:\r\n{history}\r\n\r\n(You do not need to use these pieces of information if not relevant to your question)\r\n\r\nCurrent conversation:\r\nHuman: {input}\r\nAI:`);\r\n\r\n  const chain = new LLMChain({ llm: model, prompt: prompt, memory: memory });\r\n  const res2 = await chain.call({ input: query });\r\n  console.log({ res2 });\r\n\r\n  return res2;\r\n};\r\n\r\nquery('what is my name? and what is my favorite sport?');\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe name in the db is stored as abc.\r\nI am able to get it by using the filter, but the favorite sport is missing in the answer.\r\noutput:  \"Your name is abc. As for your favorite sport, I don't have that information. Would you like me to look it up for you?\"\r\nexpected output: \"Your name is abc and your favorite sport is soccer.\"\r\nable to get favorite sport as soccer if I don't use filtering but then the name is missing.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5043/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5043/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5042",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5042/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5042/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5042/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5042",
        "id": 1718245431,
        "node_id": "I_kwDOIPDwls5malg3",
        "number": 5042,
        "title": "AzureOpenAI example error (embeddding)",
        "user": {
            "login": "simonarabian",
            "id": 6247279,
            "node_id": "MDQ6VXNlcjYyNDcyNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6247279?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/simonarabian",
            "html_url": "https://github.com/simonarabian",
            "followers_url": "https://api.github.com/users/simonarabian/followers",
            "following_url": "https://api.github.com/users/simonarabian/following{/other_user}",
            "gists_url": "https://api.github.com/users/simonarabian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/simonarabian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/simonarabian/subscriptions",
            "organizations_url": "https://api.github.com/users/simonarabian/orgs",
            "repos_url": "https://api.github.com/users/simonarabian/repos",
            "events_url": "https://api.github.com/users/simonarabian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/simonarabian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-20T18:11:22Z",
        "updated_at": "2023-05-20T20:27:10Z",
        "closed_at": "2023-05-20T20:27:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI have tried to run the AzureOpenAI example here for embedding: https://python.langchain.com/en/latest/modules/models/text_embedding/examples/azureopenai.html\r\n\r\nDoing so, I get the following error:\r\n`InvalidRequestError: Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.embedding.Embedding'>`\r\n\r\nI am using the current versions:\r\n```\r\nopenai==0.27.7\r\nlangchain==0.0.174\r\n```\r\n\r\nI have even followed the issue described in #1560 to no avail\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nhttps://python.langchain.com/en/latest/modules/models/text_embedding/examples/azureopenai.html\n\n### Expected behavior\n\nNo errors",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5042/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5042/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5041",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5041/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5041/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5041/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5041",
        "id": 1718218496,
        "node_id": "PR_kwDOIPDwls5Q8VcK",
        "number": 5041,
        "title": "bump v175",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-20T16:21:51Z",
        "updated_at": "2023-05-20T16:24:18Z",
        "closed_at": "2023-05-20T16:24:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5041",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5041",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5041.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5041.patch",
            "merged_at": "2023-05-20T16:24:18Z"
        },
        "body": "# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5041/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5041/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5040",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5040/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5040/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5040/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5040",
        "id": 1718214309,
        "node_id": "I_kwDOIPDwls5mad6l",
        "number": 5040,
        "title": "Issue: Accessing Dolly-v2-3b via HuggingFaceHub and langchain",
        "user": {
            "login": "aero-girl",
            "id": 5180795,
            "node_id": "MDQ6VXNlcjUxODA3OTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5180795?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aero-girl",
            "html_url": "https://github.com/aero-girl",
            "followers_url": "https://api.github.com/users/aero-girl/followers",
            "following_url": "https://api.github.com/users/aero-girl/following{/other_user}",
            "gists_url": "https://api.github.com/users/aero-girl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aero-girl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aero-girl/subscriptions",
            "organizations_url": "https://api.github.com/users/aero-girl/orgs",
            "repos_url": "https://api.github.com/users/aero-girl/repos",
            "events_url": "https://api.github.com/users/aero-girl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aero-girl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-20T16:05:33Z",
        "updated_at": "2023-09-15T16:12:11Z",
        "closed_at": "2023-09-15T16:12:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am trying to access dolly-v2-3b using Langchain and HuggingFaceHub using the tutorial provided on the [website](https://python.langchain.com/en/latest/modules/models/llms/integrations/huggingface_hub.html).\r\n\r\nHowever I am facing a few issues.\r\n1. The instruction to `!pip install huggingface_hub > /dev/null` does not work. The error output is: The system cannot find the path specified.\r\n2. Second, when using the example code to access dolly-v2-3b from Hugging Face Hub, the following code only provides a single word as output.\r\n\r\nThe code is shown below:\r\nfrom langchain import HuggingFaceHub\r\nrepo_id = \"databricks/dolly-v2-3b\"\r\nllm = HuggingFaceHub(repo_id=repo_id, model_kwargs={\"temperature\":0, \"max_length\":64})\r\n\r\nI have also tried changing the max_length and temperature, but this makes no difference.\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5040/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5040/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5039",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5039/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5039/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5039/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5039",
        "id": 1718210139,
        "node_id": "I_kwDOIPDwls5mac5b",
        "number": 5039,
        "title": "DOC: Misspelling in agents.rst",
        "user": {
            "login": "jeffzheng13",
            "id": 67931050,
            "node_id": "MDQ6VXNlcjY3OTMxMDUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/67931050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffzheng13",
            "html_url": "https://github.com/jeffzheng13",
            "followers_url": "https://api.github.com/users/jeffzheng13/followers",
            "following_url": "https://api.github.com/users/jeffzheng13/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffzheng13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffzheng13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffzheng13/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffzheng13/orgs",
            "repos_url": "https://api.github.com/users/jeffzheng13/repos",
            "events_url": "https://api.github.com/users/jeffzheng13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffzheng13/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-20T15:50:20Z",
        "updated_at": "2023-06-01T01:06:04Z",
        "closed_at": "2023-06-01T01:06:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nWithin the documentation, in the last sentence change should be **charge**. \r\n\r\nReference link: https://python.langchain.com/en/latest/modules/agents.html\r\n\r\n<img width=\"511\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/67931050/52f6eacd-7930-451f-abd7-05eca9479390\">\r\n\n\n### Idea or request for content:\n\nI propose correcting the misspelling as in change does not make sense and that the Action Agent is supposed to be in charge of the execution. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5039/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5039/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5038",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5038/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5038/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5038/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5038",
        "id": 1718208967,
        "node_id": "PR_kwDOIPDwls5Q8Tqx",
        "number": 5038,
        "title": "DOC: Misspelling in agents.rst documentation",
        "user": {
            "login": "jeffzheng13",
            "id": 67931050,
            "node_id": "MDQ6VXNlcjY3OTMxMDUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/67931050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffzheng13",
            "html_url": "https://github.com/jeffzheng13",
            "followers_url": "https://api.github.com/users/jeffzheng13/followers",
            "following_url": "https://api.github.com/users/jeffzheng13/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffzheng13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffzheng13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffzheng13/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffzheng13/orgs",
            "repos_url": "https://api.github.com/users/jeffzheng13/repos",
            "events_url": "https://api.github.com/users/jeffzheng13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffzheng13/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-20T15:46:07Z",
        "updated_at": "2023-05-21T14:00:38Z",
        "closed_at": "2023-05-21T05:24:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5038",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5038",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5038.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5038.patch",
            "merged_at": "2023-05-21T05:24:09Z"
        },
        "body": "\r\n# Corrected Misspelling in agents.rst Documentation\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get \r\n-->\r\n\r\nIn the [documentation](https://python.langchain.com/en/latest/modules/agents.html) it says \"in fact, it is often best to have an Action Agent be in **change** of the execution for the Plan and Execute agent.\"\r\n\r\n**Suggested Change:** I propose correcting change to charge.\r\n\r\nFix for issue: #5039 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5038/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5038/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5037",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5037/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5037/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5037/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5037",
        "id": 1718203327,
        "node_id": "PR_kwDOIPDwls5Q8Sny",
        "number": 5037,
        "title": "fixed json parsing for multiple generated JSON code segments, plus co\u2026",
        "user": {
            "login": "rickbraddy-pharma",
            "id": 101125650,
            "node_id": "U_kgDOBgcOEg",
            "avatar_url": "https://avatars.githubusercontent.com/u/101125650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickbraddy-pharma",
            "html_url": "https://github.com/rickbraddy-pharma",
            "followers_url": "https://api.github.com/users/rickbraddy-pharma/followers",
            "following_url": "https://api.github.com/users/rickbraddy-pharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickbraddy-pharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickbraddy-pharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickbraddy-pharma/subscriptions",
            "organizations_url": "https://api.github.com/users/rickbraddy-pharma/orgs",
            "repos_url": "https://api.github.com/users/rickbraddy-pharma/repos",
            "events_url": "https://api.github.com/users/rickbraddy-pharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickbraddy-pharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 21,
        "created_at": "2023-05-20T15:23:27Z",
        "updated_at": "2023-05-30T15:52:43Z",
        "closed_at": "2023-05-30T15:52:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5037",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5037",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5037.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5037.patch",
            "merged_at": null
        },
        "body": "# Fixes showstopper issue with parsing LLM-generated code that returns one or multiple code segments in JSON format\r\n\r\n<!--\r\nFixed commonly-reported problem with the Conversational Chat Agent incorrectly parsing JSON code within ChatGPT-generated code. This change accommodates multiple code segments, and includes detailed comments. This change was created by ChatGPT itself, then tested by me personally in my application/use-case (it has been tested and works).\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5037/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5037/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5036",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5036/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5036/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5036/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5036",
        "id": 1718191872,
        "node_id": "PR_kwDOIPDwls5Q8Qfh",
        "number": 5036,
        "title": "Add Mastodon toots loader",
        "user": {
            "login": "imrehg",
            "id": 38863,
            "node_id": "MDQ6VXNlcjM4ODYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/38863?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/imrehg",
            "html_url": "https://github.com/imrehg",
            "followers_url": "https://api.github.com/users/imrehg/followers",
            "following_url": "https://api.github.com/users/imrehg/following{/other_user}",
            "gists_url": "https://api.github.com/users/imrehg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/imrehg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/imrehg/subscriptions",
            "organizations_url": "https://api.github.com/users/imrehg/orgs",
            "repos_url": "https://api.github.com/users/imrehg/repos",
            "events_url": "https://api.github.com/users/imrehg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/imrehg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-20T14:41:21Z",
        "updated_at": "2023-05-23T04:00:13Z",
        "closed_at": "2023-05-22T23:43:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5036",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5036",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5036.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5036.patch",
            "merged_at": "2023-05-22T23:43:07Z"
        },
        "body": "# Add Mastodon toots loader.\r\n\r\nLoader works either with public toots, or Mastodon app credentials. Toot text and user info is loaded.\r\n\r\nI've also added integration test for this new loader as it works with public data, and a notebook with example output run now.\r\n\r\ncc: @eyurtsev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5036/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5036/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5035",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5035/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5035/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5035/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5035",
        "id": 1718183052,
        "node_id": "I_kwDOIPDwls5maWSM",
        "number": 5035,
        "title": "Reproducible NameError with recursive function in PythonREPL()",
        "user": {
            "login": "vanillechai",
            "id": 9335724,
            "node_id": "MDQ6VXNlcjkzMzU3MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9335724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vanillechai",
            "html_url": "https://github.com/vanillechai",
            "followers_url": "https://api.github.com/users/vanillechai/followers",
            "following_url": "https://api.github.com/users/vanillechai/following{/other_user}",
            "gists_url": "https://api.github.com/users/vanillechai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vanillechai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vanillechai/subscriptions",
            "organizations_url": "https://api.github.com/users/vanillechai/orgs",
            "repos_url": "https://api.github.com/users/vanillechai/repos",
            "events_url": "https://api.github.com/users/vanillechai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vanillechai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-20T14:08:20Z",
        "updated_at": "2023-09-10T16:14:36Z",
        "closed_at": "2023-09-10T16:14:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nMacOS, Python 3.11.2, langchain 0.0.174\r\n\r\n### Who can help?\r\n\r\n@vowelparrot \r\n\r\n### Information\r\n\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] Tools / Toolkits\r\n\r\n### Reproduction\r\n\r\nI hit a strange error when using PythonREPL in an agent. It happens with this **recursive** Python function. It was written by gpt-3.5-turbo and is valid Python:\r\n```python\r\ndef fibonacci(n):\r\n    if n <= 1:\r\n        return n\r\n    else:\r\n        return fibonacci(n-1) + fibonacci(n-2)  # <-- this line will trigger the NameError\r\nprint(fibonacci(10))\r\n```\r\n\r\nNote that everything works as expected for non-recursive functions.\r\n\r\nUsing this function as string input, I reduced the issue to this minimal example:\r\n\r\n```python\r\nfrom langchain.utilities import PythonREPL\r\n\r\npython_repl = PythonREPL()\r\ncmd = \"def fibonacci(n):\\n    if n <= 1:\\n        return n\\n    else:\\n        return fibonacci(n-1) + fibonacci(n-2)\\nprint(fibonacci(10))\"\r\npython_repl.run(cmd)\r\n```\r\n> $ python t.py\r\n> NameError(\"name 'fibonacci' is not defined\")\r\n\r\nWhen executed with `exec(cmd)`, it runs as expected. I found that `PythonREPL` runs the command with `exec(command, self.globals, self.locals)`.\r\n\r\nSetting globals & locals in this `python_repl` instance makes the fragment work as expected:\r\n```python\r\n# [... as before ...]\r\npython_repl.globals = globals()\r\npython_repl.locals = locals()\r\npython_repl.run(cmd)\r\n```\r\nThis hack solves it only in the context of this simple example, but not if `python_repl` added as a tool to an `AgentExecutor`.\r\n\r\nAt the core, the issue seems to be caused by Python scopes, but my knowledge of this is not profound enough to fully understand what's happening.\r\n\r\n### Expected behavior\r\n\r\nI would have expected `PythonREPL` to accept recursive functions.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5035/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5035/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5034",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5034/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5034/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5034/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5034",
        "id": 1718166764,
        "node_id": "PR_kwDOIPDwls5Q8L0D",
        "number": 5034,
        "title": "Use jsonref to expand StructuredTool.args",
        "user": {
            "login": "jarib",
            "id": 572,
            "node_id": "MDQ6VXNlcjU3Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/572?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarib",
            "html_url": "https://github.com/jarib",
            "followers_url": "https://api.github.com/users/jarib/followers",
            "following_url": "https://api.github.com/users/jarib/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarib/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarib/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarib/subscriptions",
            "organizations_url": "https://api.github.com/users/jarib/orgs",
            "repos_url": "https://api.github.com/users/jarib/repos",
            "events_url": "https://api.github.com/users/jarib/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarib/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-05-20T13:05:46Z",
        "updated_at": "2023-11-07T04:25:14Z",
        "closed_at": "2023-11-07T04:25:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5034",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5034",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5034.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5034.patch",
            "merged_at": null
        },
        "body": "With a nested `args_schema`, `StructuredTool.args` will currently only return the properties of the top level object without either including or resolving JSON Schema references, e.g.:\r\n\r\n```\r\n> structured_tool.args\r\n{\r\n  \"table_id\": {\r\n    \"title\": \"Table Id\",\r\n    \"type\": \"string\"\r\n  },\r\n  \"body\": {\r\n    \"title\": \"Body\",\r\n    \"description\": \"an API query in the required format\",\r\n    \"allOf\": [\r\n      {\r\n        \"$ref\": \"#/definitions/ApiQuery\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nThis PR implements the second of three possible solutions I see:\r\n\r\n### 1. Include the full schema with references (i.e. not just top level `properties`):\r\n\r\n```\r\n{\r\n  \"title\": \"TableQuery\",\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"table_id\": {\r\n      \"title\": \"Table Id\",\r\n      \"type\": \"string\"\r\n    },\r\n    \"body\": {\r\n      \"title\": \"Body\",\r\n      \"description\": \"an API query in the required format\",\r\n      \"allOf\": [\r\n        {\r\n          \"$ref\": \"#/definitions/ApiQuery\"\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"required\": [\r\n    \"table_id\",\r\n    \"body\"\r\n  ],\r\n  \"definitions\": {\r\n    \"ApiQuery\": {\r\n      \"title\": \"ApiQuery\",\r\n      \"type\": \"object\",\r\n      \"properties\": { ... }\r\n     }, \r\n  }\r\n}\r\n```\r\n\r\n* **Pros**: Full schema is included with less token increase\r\n* **Cons**: LLM may have a hard time understanding the references\r\n\r\n### 2. Resolve (expand) the references using the `jsonref` package:\r\n\r\n```\r\n{\r\n  \"table_id\": {\r\n    \"title\": \"Table Id\",\r\n    \"type\": \"string\"\r\n  },\r\n  \"body\": {\r\n    \"title\": \"Body\",\r\n    \"description\": \"an API query in the required format\",\r\n    \"allOf\": [\r\n      {\r\n        \"title\": \"ApiQuery\",\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            ...\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n* **Pros**: Includes the full schema in a way that the LLM might understand\r\n* **Cons**: Token count bloat + adds new package dependency\r\n\r\n### 3. Warn or raise\r\n\r\nA third option would be to raise an exception that the schema is too complicated and ask the user to override `StructuredTool.args`. This would have helped me a lot in debugging my agent. Also has the benefit of not breaking existing agents relying on the old behaviour.\r\n\r\n## Who can review?\r\n\r\n@hwchase17\r\n@vowelparrot\r\n        \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5034/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5034/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5033",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5033/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5033/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5033/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5033",
        "id": 1718162981,
        "node_id": "I_kwDOIPDwls5maRYl",
        "number": 5033,
        "title": "Spawning and managing agents",
        "user": {
            "login": "MikeMcGarry",
            "id": 30035387,
            "node_id": "MDQ6VXNlcjMwMDM1Mzg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/30035387?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MikeMcGarry",
            "html_url": "https://github.com/MikeMcGarry",
            "followers_url": "https://api.github.com/users/MikeMcGarry/followers",
            "following_url": "https://api.github.com/users/MikeMcGarry/following{/other_user}",
            "gists_url": "https://api.github.com/users/MikeMcGarry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MikeMcGarry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MikeMcGarry/subscriptions",
            "organizations_url": "https://api.github.com/users/MikeMcGarry/orgs",
            "repos_url": "https://api.github.com/users/MikeMcGarry/repos",
            "events_url": "https://api.github.com/users/MikeMcGarry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MikeMcGarry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-20T12:50:55Z",
        "updated_at": "2023-09-10T16:14:41Z",
        "closed_at": "2023-09-10T16:14:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nHave we considered the ability for an agent to spawn and manage other agents? It would be nice to be able to continue chatting with the main agent while other agents execute queries in the background. \r\n\r\nIs this possible today? If so, what class should be used? If not, have we thought about how we might do it?\n\n### Motivation\n\nThe ability for an agent to spawn and manage other agents. \n\n### Your contribution\n\nI've got some ideas on how we might manage this using asyncio and an event loop but don't want to jump the gun if we've already discussed it.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5033/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5033/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5032",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5032/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5032/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5032/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5032",
        "id": 1718155380,
        "node_id": "I_kwDOIPDwls5maPh0",
        "number": 5032,
        "title": "OAuth 2.0 Support",
        "user": {
            "login": "alexanderjwhite",
            "id": 25487558,
            "node_id": "MDQ6VXNlcjI1NDg3NTU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/25487558?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexanderjwhite",
            "html_url": "https://github.com/alexanderjwhite",
            "followers_url": "https://api.github.com/users/alexanderjwhite/followers",
            "following_url": "https://api.github.com/users/alexanderjwhite/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexanderjwhite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexanderjwhite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexanderjwhite/subscriptions",
            "organizations_url": "https://api.github.com/users/alexanderjwhite/orgs",
            "repos_url": "https://api.github.com/users/alexanderjwhite/repos",
            "events_url": "https://api.github.com/users/alexanderjwhite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexanderjwhite/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-20T12:19:52Z",
        "updated_at": "2023-09-19T16:09:50Z",
        "closed_at": "2023-09-19T16:09:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWe want to request the addition of OAuth 2.0 support to the langchain package. OAuth 2.0 is a widely adopted industry-standard protocol for authorization. It would be immensely beneficial if langchain could incorporate this feature into its framework.\n\n### Motivation\n\nOur organization and many others are looking to use langchain for various internal projects. OAuth 2.0 support would significantly streamline integrating these projects with other systems in our ecosystem, which already use OAuth 2.0 for secure authorization.\r\n\r\nFurthermore, langchain, a leading framework for large language model development, would significantly increase its appeal and utility by supporting OAuth 2.0. It would allow for more secure and efficient development, paramount in today's data-centric world.\r\n\r\nThis feature would not only benefit our organization but would also be advantageous for the wider langchain community. Furthermore, the addition of OAuth 2.0 support could potentially expand the usage and applicability of the langchain package across various domains and organizations.\n\n### Your contribution\n\nI can provide feedback on industry needs. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5032/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5032/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5031",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5031/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5031/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5031/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5031",
        "id": 1718150791,
        "node_id": "I_kwDOIPDwls5maOaH",
        "number": 5031,
        "title": "AttributeError: 'Collection' object has no attribute 'update_document'",
        "user": {
            "login": "martinholecekmax",
            "id": 10392540,
            "node_id": "MDQ6VXNlcjEwMzkyNTQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/10392540?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martinholecekmax",
            "html_url": "https://github.com/martinholecekmax",
            "followers_url": "https://api.github.com/users/martinholecekmax/followers",
            "following_url": "https://api.github.com/users/martinholecekmax/following{/other_user}",
            "gists_url": "https://api.github.com/users/martinholecekmax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martinholecekmax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martinholecekmax/subscriptions",
            "organizations_url": "https://api.github.com/users/martinholecekmax/orgs",
            "repos_url": "https://api.github.com/users/martinholecekmax/repos",
            "events_url": "https://api.github.com/users/martinholecekmax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martinholecekmax/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-20T12:01:57Z",
        "updated_at": "2023-09-15T22:13:00Z",
        "closed_at": "2023-09-12T17:09:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\naiohttp==3.8.4\r\naiosignal==1.3.1\r\naniso8601==9.0.1\r\nanyio==3.6.2\r\nasync-timeout==4.0.2     \r\nattrs==23.1.0\r\nbackoff==2.2.1\r\nblinker==1.6.2\r\ncertifi==2023.5.7        \r\ncharset-normalizer==3.1.0\r\nchromadb==0.3.23\r\nclick==8.1.3\r\nclickhouse-connect==0.5.24\r\ncolorama==0.4.6\r\ndataclasses-json==0.5.7\r\nduckdb==0.8.0\r\nenvirons==9.5.0\r\nfastapi==0.95.2\r\nfilelock==3.12.0\r\nFlask==2.3.2\r\nFlask-RESTful==0.3.9\r\nfrozenlist==1.3.3\r\nfsspec==2023.5.0\r\ngreenlet==2.0.2\r\ngrpcio==1.53.0\r\nh11==0.14.0\r\nhnswlib==0.7.0\r\nhttptools==0.5.0\r\nhuggingface-hub==0.14.1\r\nidna==3.4\r\nitsdangerous==2.1.2\r\nJinja2==3.1.2\r\njoblib==1.2.0\r\nlangchain==0.0.174\r\nlz4==4.3.2\r\nMarkupSafe==2.1.2\r\nmarshmallow==3.19.0\r\nmarshmallow-enum==1.5.1\r\nmonotonic==1.6\r\nmpmath==1.3.0\r\nmultidict==6.0.4\r\nmypy-extensions==1.0.0\r\nnetworkx==3.1\r\nnltk==3.8.1\r\nnumexpr==2.8.4\r\nnumpy==1.24.3\r\nopenai==0.27.6\r\nopenapi-schema-pydantic==1.2.4\r\npackaging==23.1\r\npandas==2.0.1\r\nPillow==9.5.0\r\nposthog==3.0.1\r\nprotobuf==4.23.1\r\npydantic==1.10.7\r\npymilvus==2.2.8\r\npython-dateutil==2.8.2\r\npython-dotenv==1.0.0\r\npytz==2023.3\r\nPyYAML==6.0\r\nregex==2023.5.5\r\nrequests==2.30.0\r\nscikit-learn==1.2.2\r\nscipy==1.10.1\r\nsentence-transformers==2.2.2\r\nsentencepiece==0.1.99\r\nsix==1.16.0\r\nsniffio==1.3.0\r\nSQLAlchemy==2.0.13\r\nstarlette==0.27.0\r\nsympy==1.12\r\ntenacity==8.2.2\r\nthreadpoolctl==3.1.0\r\ntiktoken==0.4.0\r\ntokenizers==0.13.3\r\ntorch==2.0.1\r\ntorchvision==0.15.2\r\ntqdm==4.65.0\r\ntransformers==4.29.2\r\ntyping-inspect==0.8.0\r\ntyping_extensions==4.5.0\r\ntzdata==2023.3\r\nujson==5.7.0\r\nurllib3==2.0.2\r\nuvicorn==0.22.0\r\nwatchfiles==0.19.0\r\nwebsockets==11.0.3\r\nWerkzeug==2.3.4\r\nyarl==1.9.2\r\nzstandard==0.21.0\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nReproduction Steps:\r\n\r\n1. Create an instance of the Collection class.\r\n2. Initialize the LangChain object and make sure it is properly configured.\r\n3. Create a Document object and set its page_content and metadata attributes appropriately.\r\n4. Call the update_document method on the LangChain object, passing the document_id and document as arguments.\r\n\r\nExpected Result:\r\nThe update_document method should update the specified document in the collection with the provided text and metadata.\r\n\r\nActual Result:\r\nAn AttributeError is raised with the following traceback:\r\n\r\n```plain\r\nFile \"E:\\AI Projects\\flask-backend\\venv\\lib\\site-packages\\langchain\\vectorstores\\chroma.py\", line 351, in update_document\r\n    self._collection.update_document(document_id, text, metadata)\r\nAttributeError: 'Collection' object has no attribute 'update_document'\r\n```\r\n\r\nNote that the error occurs in the chroma.py file, specifically in the update_document method of the Collection class.\n\n### Expected behavior\n\nThe update_document method should update the specified document in the collection with the provided text and metadata.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5031/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5031/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5030",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5030/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5030/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5030/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5030",
        "id": 1718148214,
        "node_id": "PR_kwDOIPDwls5Q8ISf",
        "number": 5030,
        "title": "Fix #5027: Make ChatOpenAI models work with prompts created via ChatPromptTemplate.from_role_strings",
        "user": {
            "login": "UmerHA",
            "id": 40663591,
            "node_id": "MDQ6VXNlcjQwNjYzNTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/40663591?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UmerHA",
            "html_url": "https://github.com/UmerHA",
            "followers_url": "https://api.github.com/users/UmerHA/followers",
            "following_url": "https://api.github.com/users/UmerHA/following{/other_user}",
            "gists_url": "https://api.github.com/users/UmerHA/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UmerHA/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UmerHA/subscriptions",
            "organizations_url": "https://api.github.com/users/UmerHA/orgs",
            "repos_url": "https://api.github.com/users/UmerHA/repos",
            "events_url": "https://api.github.com/users/UmerHA/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UmerHA/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-20T11:51:12Z",
        "updated_at": "2023-05-30T20:56:01Z",
        "closed_at": "2023-05-30T20:56:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5030",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5030",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5030.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5030.patch",
            "merged_at": null
        },
        "body": "# Make `ChatOpenAI` models work with prompts created via `ChatPromptTemplate.from_role_strings`\r\n\r\nAs described in #5027, currently, `ChatOpenAI` models don't work with prompts created via `ChatPromptTemplate.from_role_strings`. The reason is that `ChatPromptTemplate.from_role_strings` creates generic `ChatMessage`s which `ChatOpenAI._convert_message_to_dict` can't correctly parse. E.g. a `ChatMessage` with `type=\"human\"` should be mapped to a dict with `role=\"user\"` but is mapped to `role=\"human\"`.\r\n\r\nThis PR fixes that.\r\n\r\nFixes #5027\r\n\r\n## Who can review?\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\nModels\r\n- @hwchase17\r\n- @agola11\r\n\r\nTwitter: [@UmerHAdil](https://twitter.com/@UmerHAdil) | Discord: RicChilligerDude#7589",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5030/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5030/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5029",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5029/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5029/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5029/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5029",
        "id": 1718136663,
        "node_id": "PR_kwDOIPDwls5Q8GGZ",
        "number": 5029,
        "title": "Fix annoying typo in docs",
        "user": {
            "login": "tornikeo",
            "id": 56438982,
            "node_id": "MDQ6VXNlcjU2NDM4OTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56438982?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tornikeo",
            "html_url": "https://github.com/tornikeo",
            "followers_url": "https://api.github.com/users/tornikeo/followers",
            "following_url": "https://api.github.com/users/tornikeo/following{/other_user}",
            "gists_url": "https://api.github.com/users/tornikeo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tornikeo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tornikeo/subscriptions",
            "organizations_url": "https://api.github.com/users/tornikeo/orgs",
            "repos_url": "https://api.github.com/users/tornikeo/repos",
            "events_url": "https://api.github.com/users/tornikeo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tornikeo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-20T11:01:32Z",
        "updated_at": "2023-05-21T16:41:11Z",
        "closed_at": "2023-05-21T05:02:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5029",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5029",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5029.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5029.patch",
            "merged_at": "2023-05-21T05:02:22Z"
        },
        "body": "# Fixes an annoying typo in docs\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes Annoying typo in docs - \"Therefor\" -> \"Therefore\". It's so annoying to read that I just had to make this PR.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5029/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 1,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5029/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5028",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5028/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5028/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5028/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5028",
        "id": 1718135190,
        "node_id": "I_kwDOIPDwls5maKmW",
        "number": 5028,
        "title": "Help me please, even i installed langchain library it says \"No module named 'langchain'\" why?",
        "user": {
            "login": "abdibrokhim",
            "id": 92748035,
            "node_id": "U_kgDOBYc5Aw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92748035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abdibrokhim",
            "html_url": "https://github.com/abdibrokhim",
            "followers_url": "https://api.github.com/users/abdibrokhim/followers",
            "following_url": "https://api.github.com/users/abdibrokhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/abdibrokhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abdibrokhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abdibrokhim/subscriptions",
            "organizations_url": "https://api.github.com/users/abdibrokhim/orgs",
            "repos_url": "https://api.github.com/users/abdibrokhim/repos",
            "events_url": "https://api.github.com/users/abdibrokhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abdibrokhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-20T10:55:13Z",
        "updated_at": "2023-05-20T19:24:56Z",
        "closed_at": "2023-05-20T19:24:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nINFO:     Will watch for changes in these directories: ['/Users/abdibrokhim/VisualStudioCode/draft/antrophicCloudeLangchainTutorialApp']\r\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\r\nINFO:     Started reloader process [58140] using WatchFiles\r\nProcess SpawnProcess-1:\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/process.py\", line 315, in _bootstrap\r\n    self.run()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/multiprocessing/process.py\", line 108, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/uvicorn/_subprocess.py\", line 76, in subprocess_started\r\n    target(sockets=sockets)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/uvicorn/server.py\", line 60, in run\r\n    return asyncio.run(self.serve(sockets=sockets))\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/asyncio/runners.py\", line 44, in run\r\n    return loop.run_until_complete(main)\r\n  File \"uvloop/loop.pyx\", line 1517, in uvloop.loop.Loop.run_until_complete\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/uvicorn/server.py\", line 67, in serve\r\n    config.load()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/uvicorn/config.py\", line 477, in load\r\n    self.loaded_app = import_from_string(self.app)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/uvicorn/importer.py\", line 24, in import_from_string\r\n    raise exc from None\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/uvicorn/importer.py\", line 21, in import_from_string\r\n    module = importlib.import_module(module_str)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1050, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 1027, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 688, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 883, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\r\n  File \"/Users/abdibrokhim/VisualStudioCode/draft/antrophicCloudeLangchainTutorialApp/./main.py\", line 6, in <module>\r\n    from langchain import PromptTemplate, LLMChain\r\nModuleNotFoundError: No module named 'langchain'\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5028/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5028/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5027",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5027/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5027/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5027/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5027",
        "id": 1718131410,
        "node_id": "I_kwDOIPDwls5maJrS",
        "number": 5027,
        "title": "ChatOpenAI models don't work with prompts created via ChatPromptTemplate.from_role_strings",
        "user": {
            "login": "UmerHA",
            "id": 40663591,
            "node_id": "MDQ6VXNlcjQwNjYzNTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/40663591?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UmerHA",
            "html_url": "https://github.com/UmerHA",
            "followers_url": "https://api.github.com/users/UmerHA/followers",
            "following_url": "https://api.github.com/users/UmerHA/following{/other_user}",
            "gists_url": "https://api.github.com/users/UmerHA/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UmerHA/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UmerHA/subscriptions",
            "organizations_url": "https://api.github.com/users/UmerHA/orgs",
            "repos_url": "https://api.github.com/users/UmerHA/repos",
            "events_url": "https://api.github.com/users/UmerHA/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UmerHA/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-20T10:39:18Z",
        "updated_at": "2023-05-30T20:56:20Z",
        "closed_at": "2023-05-30T20:56:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version = 0.0.167\r\nPython version = 3.11.0\r\nSystem = Windows 11 (using Jupyter)\n\n### Who can help?\n\n- @hwchase17\r\n- @agola11\r\n- @UmerHA (I have a fix ready, will submit a PR)\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\nimport os\r\nos.environ[\"OPENAI_API_KEY\"] = \"...\"\r\n\r\nfrom langchain.chains import LLMChain\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.prompts import PromptTemplate\r\nfrom langchain.prompts.chat import ChatPromptTemplate\r\nfrom langchain.schema import messages_from_dict\r\n\r\nrole_strings = [\r\n    (\"system\", \"you are a bird expert\"), \r\n    (\"human\", \"which bird has a point beak?\")\r\n]\r\nprompt = ChatPromptTemplate.from_role_strings(role_strings)\r\nchain = LLMChain(llm=ChatOpenAI(), prompt=prompt)\r\nchain.run({})\r\n```\n\n### Expected behavior\n\nChain should run",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5027/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5027/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5026",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5026/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5026/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5026/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5026",
        "id": 1718130806,
        "node_id": "I_kwDOIPDwls5maJh2",
        "number": 5026,
        "title": "Document Cleanup Tools",
        "user": {
            "login": "iamadhee",
            "id": 69910091,
            "node_id": "MDQ6VXNlcjY5OTEwMDkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/69910091?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iamadhee",
            "html_url": "https://github.com/iamadhee",
            "followers_url": "https://api.github.com/users/iamadhee/followers",
            "following_url": "https://api.github.com/users/iamadhee/following{/other_user}",
            "gists_url": "https://api.github.com/users/iamadhee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iamadhee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iamadhee/subscriptions",
            "organizations_url": "https://api.github.com/users/iamadhee/orgs",
            "repos_url": "https://api.github.com/users/iamadhee/repos",
            "events_url": "https://api.github.com/users/iamadhee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iamadhee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-20T10:36:52Z",
        "updated_at": "2023-09-19T16:09:56Z",
        "closed_at": "2023-09-19T16:09:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nA utility to cleanup documents or texts after loading into langchain document formats. The LLMs sometime even consider redundant whitespaces in the context as tokens leading to wastage of tokens. What I'm proposing is an utility that binds with the existing adapters in langchain and/or llama-index that cleans up documents (getting read of whitespaces, getting rid of special characters, restructuring it in a readable, yet cost efficient format etc.) all while keeping the LLMs readability of the document in mind. The user should be able to choose what kind of a cleanup they want.\n\n### Motivation\n\nI was having a trouble with whitespaces in the project that I'm building with langchain where it lead to high consumption of tokens. I tried to find some utility either in langchain or in llama-index that I could use right out of the box for this and was not able to find one.\n\n### Your contribution\n\nI could help build this feature, If I have some instructions (Dos and donts)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5026/reactions",
            "total_count": 8,
            "+1": 8,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5026/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5025",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5025/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5025/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5025/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5025",
        "id": 1718119181,
        "node_id": "I_kwDOIPDwls5maGsN",
        "number": 5025,
        "title": "Cannot load python files for Directory Loader",
        "user": {
            "login": "startakovsky",
            "id": 689723,
            "node_id": "MDQ6VXNlcjY4OTcyMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/689723?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/startakovsky",
            "html_url": "https://github.com/startakovsky",
            "followers_url": "https://api.github.com/users/startakovsky/followers",
            "following_url": "https://api.github.com/users/startakovsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/startakovsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/startakovsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/startakovsky/subscriptions",
            "organizations_url": "https://api.github.com/users/startakovsky/orgs",
            "repos_url": "https://api.github.com/users/startakovsky/repos",
            "events_url": "https://api.github.com/users/startakovsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/startakovsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-20T09:48:56Z",
        "updated_at": "2023-09-10T16:14:45Z",
        "closed_at": "2023-09-10T16:14:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nI am using version `0.0.171`  of Langchain.\r\nRunning a mac, M1, 2021, OS Ventura. Can do most all of Langchain operations without errors.\r\nExcept for this issue. Installed through pyenv, python 3.11. \r\n\r\n\r\n\r\n```requirements.txt\r\naiohttp==3.8.4\r\naiosignal==1.3.1\r\nanyio==3.6.2\r\nappnope==0.1.3\r\nargilla==1.7.0\r\nargon2-cffi==21.3.0\r\nargon2-cffi-bindings==21.2.0\r\narrow==1.2.3\r\nasttokens==2.2.1\r\nasync-timeout==4.0.2\r\nattrs==23.1.0\r\nbackcall==0.2.0\r\nbackoff==2.2.1\r\nbeautifulsoup4==4.12.2\r\n-e git+ssh://git@github.com/mad-start/big-macs-llm.git@2998ca685b68d74ef20a12fe74c0f4cab6e48dcb#egg=big_macs_llm\r\nbleach==6.0.0\r\ncertifi==2023.5.7\r\ncffi==1.15.1\r\ncharset-normalizer==3.1.0\r\nclick==8.1.3\r\ncomm==0.1.3\r\ncommonmark==0.9.1\r\ncontourpy==1.0.7\r\ncryptography==40.0.2\r\ncycler==0.11.0\r\ndataclasses-json==0.5.7\r\ndatasets==2.12.0\r\ndebugpy==1.6.7\r\ndecorator==5.1.1\r\ndefusedxml==0.7.1\r\nDeprecated==1.2.13\r\ndill==0.3.6\r\neinops==0.6.1\r\net-xmlfile==1.1.0\r\nexecuting==1.2.0\r\nfastjsonschema==2.16.3\r\nfilelock==3.12.0\r\nfonttools==4.39.4\r\nfqdn==1.5.1\r\nfrozenlist==1.3.3\r\nfsspec==2023.5.0\r\nh11==0.14.0\r\nhttpcore==0.16.3\r\nhttpx==0.23.3\r\nhuggingface-hub==0.14.1\r\nidna==3.4\r\niniconfig==2.0.0\r\nipykernel==6.23.1\r\nipython==8.13.2\r\nipython-genutils==0.2.0\r\nipywidgets==8.0.6\r\nisoduration==20.11.0\r\njedi==0.18.2\r\nJinja2==3.1.2\r\njoblib==1.2.0\r\njsonpointer==2.3\r\njsonschema==4.17.3\r\njupyter==1.0.0\r\njupyter-console==6.6.3\r\njupyter-events==0.6.3\r\njupyter_client==8.2.0\r\njupyter_core==5.3.0\r\njupyter_server==2.5.0\r\njupyter_server_terminals==0.4.4\r\njupyterlab-pygments==0.2.2\r\njupyterlab-widgets==3.0.7\r\nkiwisolver==1.4.4\r\nlangchain==0.0.171\r\nlxml==4.9.2\r\nMarkdown==3.4.3\r\nMarkupSafe==2.1.2\r\nmarshmallow==3.19.0\r\nmarshmallow-enum==1.5.1\r\nmatplotlib==3.7.1\r\nmatplotlib-inline==0.1.6\r\nmistune==2.0.5\r\nmonotonic==1.6\r\nmpmath==1.3.0\r\nmsg-parser==1.2.0\r\nmultidict==6.0.4\r\nmultiprocess==0.70.14\r\nmypy-extensions==1.0.0\r\nnbclassic==1.0.0\r\nnbclient==0.7.4\r\nnbconvert==7.4.0\r\nnbformat==5.8.0\r\nnest-asyncio==1.5.6\r\nnetworkx==3.1\r\nnltk==3.8.1\r\nnotebook==6.5.4\r\nnotebook_shim==0.2.3\r\nnumexpr==2.8.4\r\nnumpy==1.23.5\r\nolefile==0.46\r\nopenai==0.27.6\r\nopenapi-schema-pydantic==1.2.4\r\nopenpyxl==3.1.2\r\npackaging==23.1\r\npandas==1.5.3\r\npandocfilters==1.5.0\r\nparso==0.8.3\r\npdf2image==1.16.3\r\npdfminer.six==20221105\r\npexpect==4.8.0\r\npickleshare==0.7.5\r\nPillow==9.5.0\r\nplatformdirs==3.5.1\r\npluggy==1.0.0\r\nprometheus-client==0.16.0\r\nprompt-toolkit==3.0.38\r\npsutil==5.9.5\r\nptyprocess==0.7.0\r\npure-eval==0.2.2\r\npyarrow==12.0.0\r\npycparser==2.21\r\npydantic==1.10.7\r\nPygments==2.15.1\r\npypandoc==1.11\r\npyparsing==3.0.9\r\npyrsistent==0.19.3\r\npytest==7.3.1\r\npython-dateutil==2.8.2\r\npython-docx==0.8.11\r\npython-dotenv==1.0.0\r\npython-json-logger==2.0.7\r\npython-magic==0.4.27\r\npython-pptx==0.6.21\r\npytz==2023.3\r\nPyYAML==6.0\r\npyzmq==25.0.2\r\nqtconsole==5.4.3\r\nQtPy==2.3.1\r\nregex==2023.5.5\r\nrequests==2.30.0\r\nresponses==0.18.0\r\nrfc3339-validator==0.1.4\r\nrfc3986==1.5.0\r\nrfc3986-validator==0.1.1\r\nrich==13.0.1\r\nscikit-learn==1.2.2\r\nscipy==1.10.1\r\nSend2Trash==1.8.2\r\nsentence-transformers==2.2.2\r\nsentencepiece==0.1.99\r\nsix==1.16.0\r\nsniffio==1.3.0\r\nsoupsieve==2.4.1\r\nSQLAlchemy==2.0.13\r\nstack-data==0.6.2\r\nsympy==1.12\r\ntabulate==0.9.0\r\ntenacity==8.2.2\r\nterminado==0.17.1\r\ntext-generation==0.5.2\r\nthreadpoolctl==3.1.0\r\ntiktoken==0.4.0\r\ntinycss2==1.2.1\r\ntokenizers==0.13.3\r\ntorch==2.0.1\r\ntorchvision==0.15.2\r\ntornado==6.3.2\r\ntqdm==4.65.0\r\ntraitlets==5.9.0\r\ntransformers==4.29.2\r\ntyper==0.9.0\r\ntyping-inspect==0.8.0\r\ntyping_extensions==4.5.0\r\ntzdata==2023.3\r\nunstructured==0.6.8\r\nuri-template==1.2.0\r\nurllib3==2.0.2\r\nwcwidth==0.2.6\r\nwebcolors==1.13\r\nwebencodings==0.5.1\r\nwebsocket-client==1.5.1\r\nwidgetsnbextension==4.0.7\r\nwrapt==1.14.1\r\nXlsxWriter==3.1.0\r\nxxhash==3.2.0\r\nyarl==1.9.2\r\n```\n\n### Who can help?\n\n@eyurtsev  Thank you: \r\n\r\nI got this code from [Langchain instructions here](https://python.langchain.com/en/latest/modules/indexes/document_loaders/examples/file_directory.html#change-loader-class). While I am able to load and split a python file one at a time, I cannot do so for DirectoryLoaders that have `*.py` in the glob pattern. I tested this out without langchain and it worked just fine.\r\n\r\n```python\r\nfrom langchain.document_loaders.text import TextLoader\r\nfrom langchain.document_loaders.directory import DirectoryLoader\r\n\r\nloader = DirectoryLoader('../../../src', glob=\"**/*.py\", loader_cls=TextLoader)\r\ndirectory_loader.load()\r\n```\r\n\r\nand \r\n\r\n```python\r\nfrom langchain.document_loaders.directory import DirectoryLoader\r\nfrom langchain.document_loaders import PythonLoader\r\n\r\n\r\nloader = DirectoryLoader('../../../../../', glob=\"**/*.py\", loader_cls=PythonLoader)\r\ndirectory_loader.load()\r\n```\r\n\r\n\r\nyields an error: \r\n\r\n`ValueError: Invalid file ../../../src/my_library/__init__.py. The FileType.UNK file type is not supported in partition.`\r\n\r\nI looked up this error on the unstructured issues page and then I ran the following code with unstructured and it didn't error out and displayed the contents of the python module.\r\n\r\n```python\r\nfrom unstructured.partition.text import partition_text\r\nelements = partition_text(filename='setup.py')\r\nprint(\"\\n\\n\".join([str(el) for el in elements]))\r\n```\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI have written more detail above, but this can be reproduced like this.\r\n\r\n```python\r\nfrom langchain.document_loaders.directory import DirectoryLoader\r\nfrom langchain.document_loaders import PythonLoader\r\nloader = DirectoryLoader('../../../../../', glob=\"**/*.py\", loader_cls=PythonLoader)\r\ndirectory_loader.load()\r\n```\n\n### Expected behavior\n\n```zsh\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nCell In[73], line 6\r\n      2 from langchain.document_loaders import PythonLoader\r\n      5 loader = DirectoryLoader('../../../../../', glob=\"**/*.py\", loader_cls=PythonLoader)\r\n----> 6 directory_loader.load()\r\n\r\nFile ~/.pyenv/versions/3.11.3/envs/big-macs-llm/lib/python3.11/site-packages/langchain/document_loaders/directory.py:103, in DirectoryLoader.load(self)\r\n    101 else:\r\n    102     for i in items:\r\n--> 103         self.load_file(i, p, docs, pbar)\r\n    105 if pbar:\r\n    106     pbar.close()\r\n\r\nFile ~/.pyenv/versions/3.11.3/envs/big-macs-llm/lib/python3.11/site-packages/langchain/document_loaders/directory.py:69, in DirectoryLoader.load_file(self, item, path, docs, pbar)\r\n     67         logger.warning(e)\r\n     68     else:\r\n---> 69         raise e\r\n     70 finally:\r\n     71     if pbar:\r\n\r\nFile ~/.pyenv/versions/3.11.3/envs/big-macs-llm/lib/python3.11/site-packages/langchain/document_loaders/directory.py:63, in DirectoryLoader.load_file(self, item, path, docs, pbar)\r\n     61 if _is_visible(item.relative_to(path)) or self.load_hidden:\r\n     62     try:\r\n---> 63         sub_docs = self.loader_cls(str(item), **self.loader_kwargs).load()\r\n     64         docs.extend(sub_docs)\r\n     65     except Exception as e:\r\n\r\nFile ~/.pyenv/versions/3.11.3/envs/big-macs-llm/lib/python3.11/site-packages/langchain/document_loaders/unstructured.py:70, in UnstructuredBaseLoader.load(self)\r\n     68 def load(self) -> List[Document]:\r\n     69     \"\"\"Load file.\"\"\"\r\n---> 70     elements = self._get_elements()\r\n     71     if self.mode == \"elements\":\r\n     72         docs: List[Document] = list()\r\n\r\nFile ~/.pyenv/versions/3.11.3/envs/big-macs-llm/lib/python3.11/site-packages/langchain/document_loaders/unstructured.py:104, in UnstructuredFileLoader._get_elements(self)\r\n    101 def _get_elements(self) -> List:\r\n    102     from unstructured.partition.auto import partition\r\n--> 104     return partition(filename=self.file_path, **self.unstructured_kwargs)\r\n\r\nFile ~/.pyenv/versions/3.11.3/envs/big-macs-llm/lib/python3.11/site-packages/unstructured/partition/auto.py:206, in partition(filename, content_type, file, file_filename, url, include_page_breaks, strategy, encoding, paragraph_grouper, headers, ssl_verify, ocr_languages, pdf_infer_table_structure, xml_keep_tags)\r\n    204 else:\r\n    205     msg = \"Invalid file\" if not filename else f\"Invalid file {filename}\"\r\n--> 206     raise ValueError(f\"{msg}. The {filetype} file type is not supported in partition.\")\r\n    208 for element in elements:\r\n    209     element.metadata.url = url\r\n\r\nValueError: Invalid file ../../../src/__init__.py. The FileType.UNK file type is not supported in partition.\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5025/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5025/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5024",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5024/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5024/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5024/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5024",
        "id": 1718103064,
        "node_id": "I_kwDOIPDwls5maCwY",
        "number": 5024,
        "title": "Precision of HuggingFaceEmbeddings.embed_query changes",
        "user": {
            "login": "alfred-liu96",
            "id": 12597434,
            "node_id": "MDQ6VXNlcjEyNTk3NDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/12597434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alfred-liu96",
            "html_url": "https://github.com/alfred-liu96",
            "followers_url": "https://api.github.com/users/alfred-liu96/followers",
            "following_url": "https://api.github.com/users/alfred-liu96/following{/other_user}",
            "gists_url": "https://api.github.com/users/alfred-liu96/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alfred-liu96/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alfred-liu96/subscriptions",
            "organizations_url": "https://api.github.com/users/alfred-liu96/orgs",
            "repos_url": "https://api.github.com/users/alfred-liu96/repos",
            "events_url": "https://api.github.com/users/alfred-liu96/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alfred-liu96/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-20T08:44:51Z",
        "updated_at": "2023-09-10T16:14:51Z",
        "closed_at": "2023-09-10T16:14:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain version: 0.0.173\r\nnumpy version: 1.24.3\r\n\r\n### Related Components\r\n\r\n- [X] Embedding Models\r\n\r\n### Reproduction\r\n\r\n```python\r\nfrom sentence_transformers import SentenceTransformer\r\nimport numpy as np\r\nfrom langchain.embeddings import HuggingFaceEmbeddings\r\n\r\nt = 'langchain embedding'\r\n\r\nm = HuggingFaceEmbeddings(encode_kwargs={\"normalize_embeddings\": True})\r\n# SentenceTransformer embeddings with unit norm\r\nx = SentenceTransformer(m.model_name).encode(t, normalize_embeddings=True)\r\n# Langchain.Huggingface embeddings with unit norm\r\ny = m.embed_query(t)\r\n\r\nprint(f'L2 norm of SentenceTransformer: {np.linalg.norm(x)}. \\nL2 norm of Langchain.Huggingface: {np.linalg.norm(y)}')\r\n```\r\n\r\n### Expected behavior\r\n\r\nBoth of these two L2 norm results shoud be 1. But I got as blow:\r\n\r\n```\r\nL2 norm of SentenceTransformer: 1.0. \r\nL2 norm of Langchain.Huggingface: 1.0000000445724682\r\n```\r\n\r\nI think the problem came from this [code](https://github.com/hwchase17/langchain/blob/27e63b977aa07cb4ccb25b006c9af17310a9f530/langchain/embeddings/huggingface.py#LL87C34-L87C34). When converting array to list, the numbers got bigger",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5024/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5024/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5023",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5023/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5023/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5023/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5023",
        "id": 1718098699,
        "node_id": "I_kwDOIPDwls5maBsL",
        "number": 5023,
        "title": "SQL database with metadata exceeding 4000 token limit of Open AI.",
        "user": {
            "login": "hussnainahmed",
            "id": 3829325,
            "node_id": "MDQ6VXNlcjM4MjkzMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3829325?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hussnainahmed",
            "html_url": "https://github.com/hussnainahmed",
            "followers_url": "https://api.github.com/users/hussnainahmed/followers",
            "following_url": "https://api.github.com/users/hussnainahmed/following{/other_user}",
            "gists_url": "https://api.github.com/users/hussnainahmed/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hussnainahmed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hussnainahmed/subscriptions",
            "organizations_url": "https://api.github.com/users/hussnainahmed/orgs",
            "repos_url": "https://api.github.com/users/hussnainahmed/repos",
            "events_url": "https://api.github.com/users/hussnainahmed/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hussnainahmed/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-20T08:26:04Z",
        "updated_at": "2023-05-20T08:30:26Z",
        "closed_at": "2023-05-20T08:29:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am trying to query databases with multiple tables. Because of DB metadata, the prompt length exceeds the max token limit of 4000 of OpenAI . Do you have any ideas on how to solve this problem for databases with medium to large metadata? I have tried it for Postgrsql and Presto.  \r\n\r\n`InvalidRequestError: This model's maximum context length is 4097 tokens, however you requested 4995 tokens (4739 in your prompt; 256 for the completion). Please reduce your prompt; or completion length.`\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5023/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5023/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5022",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5022/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5022/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5022/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5022",
        "id": 1718095658,
        "node_id": "I_kwDOIPDwls5maA8q",
        "number": 5022,
        "title": "How to add lora for RWKV in using langchian ",
        "user": {
            "login": "xx-zhang",
            "id": 47806549,
            "node_id": "MDQ6VXNlcjQ3ODA2NTQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/47806549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xx-zhang",
            "html_url": "https://github.com/xx-zhang",
            "followers_url": "https://api.github.com/users/xx-zhang/followers",
            "following_url": "https://api.github.com/users/xx-zhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/xx-zhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xx-zhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xx-zhang/subscriptions",
            "organizations_url": "https://api.github.com/users/xx-zhang/orgs",
            "repos_url": "https://api.github.com/users/xx-zhang/repos",
            "events_url": "https://api.github.com/users/xx-zhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xx-zhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-20T08:12:51Z",
        "updated_at": "2023-09-10T16:14:57Z",
        "closed_at": "2023-09-10T16:14:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\ni have using RWKV llm with langchian and everything is ok, \r\nbut i don't know how to rewrite `_call` for add lora for my own RWKV Model, can you give some tips \n\n### Motivation\n\n-\n\n### Your contribution\n\n-",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5022/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5022/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5020",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5020/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5020/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5020/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5020",
        "id": 1718084155,
        "node_id": "I_kwDOIPDwls5mZ-I7",
        "number": 5020,
        "title": "Issue: Prompt template does not work with Code related queries",
        "user": {
            "login": "AvikantSrivastava",
            "id": 41926176,
            "node_id": "MDQ6VXNlcjQxOTI2MTc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/41926176?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AvikantSrivastava",
            "html_url": "https://github.com/AvikantSrivastava",
            "followers_url": "https://api.github.com/users/AvikantSrivastava/followers",
            "following_url": "https://api.github.com/users/AvikantSrivastava/following{/other_user}",
            "gists_url": "https://api.github.com/users/AvikantSrivastava/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AvikantSrivastava/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AvikantSrivastava/subscriptions",
            "organizations_url": "https://api.github.com/users/AvikantSrivastava/orgs",
            "repos_url": "https://api.github.com/users/AvikantSrivastava/repos",
            "events_url": "https://api.github.com/users/AvikantSrivastava/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AvikantSrivastava/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-20T07:22:06Z",
        "updated_at": "2023-09-15T22:12:59Z",
        "closed_at": "2023-09-01T12:11:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\r\nI was trying to use `gpt-3.5` family for models as a proxy for codex to generate code.\r\nI tried using `PromptTemplate` and `PydanticOutputParser` parser to get code output. But turns out the LLM mixes up the Prompt template example in the response\r\n\r\n**Parser**\r\n```python\r\nclass CodeCompletion(BaseModel):\r\n    code: str = Field(description=\"completed code\")\r\n\r\n\r\nparser = PydanticOutputParser(pydantic_object=CodeCompletion)\r\n\r\n```\r\n\r\n**Prompt Template**\r\n```python\r\ntemplate = \"\"\"\r\nI want you to act as an Code Assistant bot. please complete the following code written in {programming_language} programming language\r\n{code}\r\nFormat the response in {format_instructions}\r\n\"\"\"\r\ncode_completion_prompt = PromptTemplate(\r\n    input_variables=[\"programming_language\", \"code\"],\r\n    partial_variables={\"format_instructions\": parser.get_format_instructions()},\r\n    template=template,\r\n)\r\n```\r\n\r\n**Prompt (generated by prompt template)**\r\n```\r\n\r\nI want you to act as an Code Assistant bot. please complete the following code written in python programming language\r\n# Write a function to read json data from s3\r\n\r\ndef read_from_s3():\r\n    pass\r\nFormat the response in The output should be formatted as a JSON instance that conforms to the JSON schema below.\r\n\r\nAs an example, for the schema {\"properties\": {\"foo\": {\"title\": \"Foo\", \"description\": \"a list of strings\", \"type\": \"array\", \"items\": {\"type\": \"string\"}}}, \"required\": [\"foo\"]}}\r\nthe object {\"foo\": [\"bar\", \"baz\"]} is a well-formatted instance of the schema. The object {\"properties\": {\"foo\": [\"bar\", \"baz\"]}} is not well-formatted.\r\n\r\nHere is the output schema:\r\n\\```\r\n{\"properties\": {\"code\": {\"title\": \"Code\", \"description\": \"completed code\", \"type\": \"string\"}}, \"required\": [\"code\"]}\r\n\\```\r\n\r\n```\r\n\r\n**Output from LLM**\r\n```  File \"/Users/avikant/Projects/HackerGPT-backend/venv/lib/python3.11/site-packages/langchain/output_parsers/pydantic.py\", line 31, in parse\r\n    raise OutputParserException(msg)\r\nlangchain.schema.OutputParserException: Failed to parse CodeCompletion from completion # Write a function to read json data from s3\r\nimport json\r\n\r\ndef read_from_s3(file_path):\r\n    with open(file_path, 'r') as f:\r\n        data = json.load(f)\r\n    return {\"code\": data}\r\n\r\nresponse = read_from_s3(\"s3://path/to/file.json\")\r\nprint(json.dumps(response)) # outputs {\"code\": {<data from file.json>}} in JSON format.. Got: Expecting value: line 1 column 10 (char 9)\r\n```\r\n\r\n\r\n\r\n### Suggestion:\r\n\r\nA way to parse the code generation output",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5020/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5020/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5019",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5019/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5019/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5019/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5019",
        "id": 1718062726,
        "node_id": "I_kwDOIPDwls5mZ46G",
        "number": 5019,
        "title": "Text Generation on an 8 bit model. ",
        "user": {
            "login": "psych0v0yager",
            "id": 105936906,
            "node_id": "U_kgDOBlB4Cg",
            "avatar_url": "https://avatars.githubusercontent.com/u/105936906?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/psych0v0yager",
            "html_url": "https://github.com/psych0v0yager",
            "followers_url": "https://api.github.com/users/psych0v0yager/followers",
            "following_url": "https://api.github.com/users/psych0v0yager/following{/other_user}",
            "gists_url": "https://api.github.com/users/psych0v0yager/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/psych0v0yager/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/psych0v0yager/subscriptions",
            "organizations_url": "https://api.github.com/users/psych0v0yager/orgs",
            "repos_url": "https://api.github.com/users/psych0v0yager/repos",
            "events_url": "https://api.github.com/users/psych0v0yager/events{/privacy}",
            "received_events_url": "https://api.github.com/users/psych0v0yager/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-20T05:49:32Z",
        "updated_at": "2023-05-21T20:58:06Z",
        "closed_at": "2023-05-21T20:58:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nPython Version = 3.10\r\nLangchain Version = 0.0.174\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [X] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nGood evening,\r\n\r\nI have been working on my own custom wrapper for a Huggingface model. I am using a custom wrapper as a plan to add additional features such as LoRA finetuning. I have loaded the model in 8 bit and received the error \"topk_cpu\" not implemented for 'Half'. This led me to conclude 8 bit models are currently not supported for inference inside Langchain, though I am unsure if this is due to the library or faulty code on my end. \r\n\r\nThe code for the model is as follows:\r\n\r\n\r\n#Langchain Imports\r\nfrom typing import Any, List, Mapping, Optional\r\nfrom langchain.callbacks.manager import CallbackManagerForLLMRun\r\nfrom langchain.llms.base import LLM\r\n#Huggingface Inputs\r\nimport os\r\nos.environ[\"CUDA_VISIBLE_DEVICES\"]=\"0\"\r\nimport torch\r\nimport torch.nn as nn\r\nimport bitsandbytes as bnb\r\nfrom transformers import AutoTokenizer, AutoConfig, AutoModelForCausalLM\r\n#Pydantic imports\r\nfrom pydantic import BaseModel, Field\r\n\r\nclass HuggingFaceLLM(LLM):\r\n    model_name: str = Field(default=\"facebook/opt-6.7b\")\r\n    tokenizer: AutoTokenizer = Field(default=None)\r\n    model: AutoModelForCausalLM = Field(default=None)\r\n    device: torch.device = Field(default=None)\r\n    \r\n    def __init__(self, model_name=\"facebook/opt-6.7b\"):\r\n        super().__init__()\r\n        self.tokenizer = AutoTokenizer.from_pretrained(model_name)\r\n        self.model = AutoModelForCausalLM.from_pretrained(model_name, load_in_8bit=True, device_map='auto')\r\n        #self.device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\r\n        #self.model.to(self.device)\r\n        \r\n    @property\r\n    def _llm_type(self) -> str:\r\n        return \"huggingface\"\r\n    \r\n    def _call(\r\n        self,\r\n        prompt: str,\r\n        temperature: float = 1.0,\r\n        max_tokens: int = 512,\r\n        stop: Optional[List[str]] = None,\r\n        run_manager: Optional[CallbackManagerForLLMRun] = None,\r\n        ) -> str:\r\n        if stop is not None:\r\n            raise ValueError(\"stop kwargs are not permitted.\")\r\n        \r\n        # prepare input data\r\n        input_ids = self.tokenizer.encode(prompt, return_tensors='pt')\r\n\r\n        # generate text\r\n        gen_tokens = self.model.generate(\r\n            input_ids, \r\n            do_sample=True, \r\n            temperature=temperature, \r\n            max_length=max_tokens,\r\n        )\r\n        \r\n        # decode generated text\r\n        gen_text = self.tokenizer.decode(gen_tokens[:, input_ids.shape[-1]:][0], skip_special_tokens=True)\r\n        \r\n        return gen_text\r\n    \r\n    @property\r\n    def _identifying_params(self) -> Mapping[str, Any]:\r\n        \"\"\"Get the identifying parameters.\"\"\"\r\n        return {\"model_name\": self.model.config._name_or_path}\r\n\r\n\r\n#Build model \r\nllm = HuggingFaceLLM(\"facebook/opt-6.7b\")\r\n\r\n#Inference \r\nllm(\"What is the fastest car\")\r\n\r\n---------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nThe traceback is here as follows:\r\n\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 in <module>:1                                                                                    \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 \u2771 1 llm(\"What is the fastest car\")                                                               \u2502\r\n\u2502   2                                                                                              \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/username/anaconda3/envs/langchainenv/lib/python3.10/site-packages/langchain/llms/base \u2502\r\n\u2502 .py:291 in __call__                                                                              \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   288 \u2502   ) -> str:                                                                              \u2502\r\n\u2502   289 \u2502   \u2502   \"\"\"Check Cache and run the LLM on the given prompt and input.\"\"\"                   \u2502\r\n\u2502   290 \u2502   \u2502   return (                                                                           \u2502\r\n\u2502 \u2771 291 \u2502   \u2502   \u2502   self.generate([prompt], stop=stop, callbacks=callbacks)                        \u2502\r\n\u2502   292 \u2502   \u2502   \u2502   .generations[0][0]                                                             \u2502\r\n\u2502   293 \u2502   \u2502   \u2502   .text                                                                          \u2502\r\n\u2502   294 \u2502   \u2502   )                                                                                  \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/username/anaconda3/envs/langchainenv/lib/python3.10/site-packages/langchain/llms/base \u2502\r\n\u2502 .py:191 in generate                                                                              \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   188 \u2502   \u2502   \u2502   \u2502   )                                                                          \u2502\r\n\u2502   189 \u2502   \u2502   \u2502   except (KeyboardInterrupt, Exception) as e:                                    \u2502\r\n\u2502   190 \u2502   \u2502   \u2502   \u2502   run_manager.on_llm_error(e)                                                \u2502\r\n\u2502 \u2771 191 \u2502   \u2502   \u2502   \u2502   raise e                                                                    \u2502\r\n\u2502   192 \u2502   \u2502   \u2502   run_manager.on_llm_end(output)                                                 \u2502\r\n\u2502   193 \u2502   \u2502   \u2502   return output                                                                  \u2502\r\n\u2502   194 \u2502   \u2502   if len(missing_prompts) > 0:                                                       \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/username/anaconda3/envs/langchainenv/lib/python3.10/site-packages/langchain/llms/base \u2502\r\n\u2502 .py:185 in generate                                                                              \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   182 \u2502   \u2502   \u2502   )                                                                              \u2502\r\n\u2502   183 \u2502   \u2502   \u2502   try:                                                                           \u2502\r\n\u2502   184 \u2502   \u2502   \u2502   \u2502   output = (                                                                 \u2502\r\n\u2502 \u2771 185 \u2502   \u2502   \u2502   \u2502   \u2502   self._generate(prompts, stop=stop, run_manager=run_manager)            \u2502\r\n\u2502   186 \u2502   \u2502   \u2502   \u2502   \u2502   if new_arg_supported                                                   \u2502\r\n\u2502   187 \u2502   \u2502   \u2502   \u2502   \u2502   else self._generate(prompts, stop=stop)                                \u2502\r\n\u2502   188 \u2502   \u2502   \u2502   \u2502   )                                                                          \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/username/anaconda3/envs/langchainenv/lib/python3.10/site-packages/langchain/llms/base \u2502\r\n\u2502 .py:405 in _generate                                                                             \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   402 \u2502   \u2502   new_arg_supported = inspect.signature(self._call).parameters.get(\"run_manager\")    \u2502\r\n\u2502   403 \u2502   \u2502   for prompt in prompts:                                                             \u2502\r\n\u2502   404 \u2502   \u2502   \u2502   text = (                                                                       \u2502\r\n\u2502 \u2771 405 \u2502   \u2502   \u2502   \u2502   self._call(prompt, stop=stop, run_manager=run_manager)                     \u2502\r\n\u2502   406 \u2502   \u2502   \u2502   \u2502   if new_arg_supported                                                       \u2502\r\n\u2502   407 \u2502   \u2502   \u2502   \u2502   else self._call(prompt, stop=stop)                                         \u2502\r\n\u2502   408 \u2502   \u2502   \u2502   )                                                                              \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 in _call:33                                                                                      \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   30 \u2502   \u2502   input_ids = self.tokenizer.encode(prompt, return_tensors='pt')                      \u2502\r\n\u2502   31 \u2502   \u2502                                                                                       \u2502\r\n\u2502   32 \u2502   \u2502   # generate text                                                                     \u2502\r\n\u2502 \u2771 33 \u2502   \u2502   gen_tokens = self.model.generate(                                                   \u2502\r\n\u2502   34 \u2502   \u2502   \u2502   input_ids,                                                                      \u2502\r\n\u2502   35 \u2502   \u2502   \u2502   do_sample=True,                                                                 \u2502\r\n\u2502   36 \u2502   \u2502   \u2502   temperature=temperature,                                                        \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/username/anaconda3/envs/langchainenv/lib/python3.10/site-packages/torch/utils/_contex \u2502\r\n\u2502 tlib.py:115 in decorate_context                                                                  \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   112 \u2502   @functools.wraps(func)                                                                 \u2502\r\n\u2502   113 \u2502   def decorate_context(*args, **kwargs):                                                 \u2502\r\n\u2502   114 \u2502   \u2502   with ctx_factory():                                                                \u2502\r\n\u2502 \u2771 115 \u2502   \u2502   \u2502   return func(*args, **kwargs)                                                   \u2502\r\n\u2502   116 \u2502                                                                                          \u2502\r\n\u2502   117 \u2502   return decorate_context                                                                \u2502\r\n\u2502   118                                                                                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/username/anaconda3/envs/langchainenv/lib/python3.10/site-packages/transformers/genera \u2502\r\n\u2502 tion/utils.py:1565 in generate                                                                   \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1562 \u2502   \u2502   \u2502   )                                                                             \u2502\r\n\u2502   1563 \u2502   \u2502   \u2502                                                                                 \u2502\r\n\u2502   1564 \u2502   \u2502   \u2502   # 13. run sample                                                              \u2502\r\n\u2502 \u2771 1565 \u2502   \u2502   \u2502   return self.sample(                                                           \u2502\r\n\u2502   1566 \u2502   \u2502   \u2502   \u2502   input_ids,                                                                \u2502\r\n\u2502   1567 \u2502   \u2502   \u2502   \u2502   logits_processor=logits_processor,                                        \u2502\r\n\u2502   1568 \u2502   \u2502   \u2502   \u2502   logits_warper=logits_warper,                                              \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/username/anaconda3/envs/langchainenv/lib/python3.10/site-packages/transformers/genera \u2502\r\n\u2502 tion/utils.py:2626 in sample                                                                     \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   2623 \u2502   \u2502   \u2502                                                                                 \u2502\r\n\u2502   2624 \u2502   \u2502   \u2502   # pre-process distribution                                                    \u2502\r\n\u2502   2625 \u2502   \u2502   \u2502   next_token_scores = logits_processor(input_ids, next_token_logits)            \u2502\r\n\u2502 \u2771 2626 \u2502   \u2502   \u2502   next_token_scores = logits_warper(input_ids, next_token_scores)               \u2502\r\n\u2502   2627 \u2502   \u2502   \u2502                                                                                 \u2502\r\n\u2502   2628 \u2502   \u2502   \u2502   # Store scores, attentions and hidden_states when required                    \u2502\r\n\u2502   2629 \u2502   \u2502   \u2502   if return_dict_in_generate:                                                   \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/username/anaconda3/envs/langchainenv/lib/python3.10/site-packages/transformers/genera \u2502\r\n\u2502 tion/logits_process.py:92 in __call__                                                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    89 \u2502   \u2502   \u2502   \u2502   \u2502   )                                                                      \u2502\r\n\u2502    90 \u2502   \u2502   \u2502   \u2502   scores = processor(input_ids, scores, **kwargs)                            \u2502\r\n\u2502    91 \u2502   \u2502   \u2502   else:                                                                          \u2502\r\n\u2502 \u2771  92 \u2502   \u2502   \u2502   \u2502   scores = processor(input_ids, scores)                                      \u2502\r\n\u2502    93 \u2502   \u2502   return scores                                                                      \u2502\r\n\u2502    94                                                                                            \u2502\r\n\u2502    95                                                                                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/username/anaconda3/envs/langchainenv/lib/python3.10/site-packages/transformers/genera \u2502\r\n\u2502 tion/logits_process.py:302 in __call__                                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   299 \u2502   def __call__(self, input_ids: torch.LongTensor, scores: torch.FloatTensor) -> torch.   \u2502\r\n\u2502   300 \u2502   \u2502   top_k = min(self.top_k, scores.size(-1))  # Safety check                           \u2502\r\n\u2502   301 \u2502   \u2502   # Remove all tokens with a probability less than the last token of the top-k       \u2502\r\n\u2502 \u2771 302 \u2502   \u2502   indices_to_remove = scores < torch.topk(scores, top_k)[0][..., -1, None]           \u2502\r\n\u2502   303 \u2502   \u2502   scores = scores.masked_fill(indices_to_remove, self.filter_value)                  \u2502\r\n\u2502   304 \u2502   \u2502   return scores                                                                      \u2502\r\n\u2502   305                                                                                            \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nRuntimeError: \"topk_cpu\" not implemented for 'Half'\r\n\n\n### Expected behavior\n\nAs mentioned earlier, I am not sure if 8 bit precision is supported for inference inside Langchain.\r\n\r\nI would expect the inference to run as expected. When the model was loaded in full 16 bit precision the inference worked successfully. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5019/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5019/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5018",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5018/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5018/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5018/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5018",
        "id": 1718057196,
        "node_id": "PR_kwDOIPDwls5Q73C_",
        "number": 5018,
        "title": "Fix: Update memory.py",
        "user": {
            "login": "abhimalamkar",
            "id": 15821517,
            "node_id": "MDQ6VXNlcjE1ODIxNTE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/15821517?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abhimalamkar",
            "html_url": "https://github.com/abhimalamkar",
            "followers_url": "https://api.github.com/users/abhimalamkar/followers",
            "following_url": "https://api.github.com/users/abhimalamkar/following{/other_user}",
            "gists_url": "https://api.github.com/users/abhimalamkar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abhimalamkar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abhimalamkar/subscriptions",
            "organizations_url": "https://api.github.com/users/abhimalamkar/orgs",
            "repos_url": "https://api.github.com/users/abhimalamkar/repos",
            "events_url": "https://api.github.com/users/abhimalamkar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abhimalamkar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-20T05:23:22Z",
        "updated_at": "2023-05-22T18:07:35Z",
        "closed_at": "2023-05-22T18:07:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5018",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5018",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5018.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5018.patch",
            "merged_at": null
        },
        "body": "Passing None fails in TimeWeightedVectorStoreRetriever class since  in add_documents function current_time = kwargs.get(\"current_time\", datetime.datetime.now()) is still None\r\n\r\n# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n@dev2049",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5018/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5018/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5017",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5017/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5017/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5017/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5017",
        "id": 1718056969,
        "node_id": "PR_kwDOIPDwls5Q73AE",
        "number": 5017,
        "title": "fix: missing parameter ",
        "user": {
            "login": "CodeDevNinja",
            "id": 14970585,
            "node_id": "MDQ6VXNlcjE0OTcwNTg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/14970585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CodeDevNinja",
            "html_url": "https://github.com/CodeDevNinja",
            "followers_url": "https://api.github.com/users/CodeDevNinja/followers",
            "following_url": "https://api.github.com/users/CodeDevNinja/following{/other_user}",
            "gists_url": "https://api.github.com/users/CodeDevNinja/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CodeDevNinja/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CodeDevNinja/subscriptions",
            "organizations_url": "https://api.github.com/users/CodeDevNinja/orgs",
            "repos_url": "https://api.github.com/users/CodeDevNinja/repos",
            "events_url": "https://api.github.com/users/CodeDevNinja/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CodeDevNinja/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-20T05:22:13Z",
        "updated_at": "2023-05-21T00:32:47Z",
        "closed_at": "2023-05-21T00:32:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5017",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5017",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5017.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5017.patch",
            "merged_at": null
        },
        "body": "When using Elasticsearch Vectorstore, I encountered the following error due to a missing parameter. The issue has been resolved. \r\nInvalidRequestError: Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.embedding.Embedding'>\r\n\r\n\r\n```\r\nfrom langchain.document_loaders import PyPDFLoader\r\nfrom langchain import ElasticVectorSearch\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nembeddings = OpenAIEmbeddings(\r\n    deployment='',\r\n    model='',\r\n    openai_api_base='',\r\n    openai_api_type=\"azure\",\r\n    openai_api_version='2023-03-15-preview',\r\n    chunk_size=1,\r\n    )\r\nloader = PyPDFLoader(\"*.pdf\")\r\npages = loader.load_and_split()\r\ndb = ElasticVectorSearch.from_documents(pages, embeddings, elasticsearch_url='http://localhost:9200')\r\n```\r\n\r\n@dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5017/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5017/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5016",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5016/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5016/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5016/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5016",
        "id": 1718038199,
        "node_id": "I_kwDOIPDwls5mZy63",
        "number": 5016,
        "title": "Issue: Very long runtimes for RetrievalQA chain with GPT4All",
        "user": {
            "login": "sidharthrajaram",
            "id": 14987538,
            "node_id": "MDQ6VXNlcjE0OTg3NTM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/14987538?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sidharthrajaram",
            "html_url": "https://github.com/sidharthrajaram",
            "followers_url": "https://api.github.com/users/sidharthrajaram/followers",
            "following_url": "https://api.github.com/users/sidharthrajaram/following{/other_user}",
            "gists_url": "https://api.github.com/users/sidharthrajaram/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sidharthrajaram/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sidharthrajaram/subscriptions",
            "organizations_url": "https://api.github.com/users/sidharthrajaram/orgs",
            "repos_url": "https://api.github.com/users/sidharthrajaram/repos",
            "events_url": "https://api.github.com/users/sidharthrajaram/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sidharthrajaram/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-05-20T03:57:58Z",
        "updated_at": "2023-11-16T15:08:08Z",
        "closed_at": "2023-09-22T16:08:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### RetrievalQA chain with GPT4All takes an extremely long time to run (doesn't end) \r\n\r\nI encounter massive runtimes when [running a RetrievalQA chain](https://python.langchain.com/en/latest/modules/chains/index_examples/vector_db_qa.html) with a locally downloaded GPT4All LLM. Unsure what's causing this.\r\n\r\nI pass a GPT4All model (loading [ggml-gpt4all-j-v1.3-groovy.bin](https://gpt4all.io/models/ggml-gpt4all-j-v1.3-groovy.bin) model that I downloaded locally) to the RetrievalQA Chain. I have one source text document and use sentence-transformers from HuggingFace for embeddings (I'm using a fairly small model: [all-MiniLM-L6-v2](https://www.sbert.net/docs/pretrained_models.html)).\r\n\r\n```python\r\nllm = GPT4All(model=model_path, n_ctx=model_n_ctx, backend='gptj', callbacks=callbacks, verbose=True)\r\nqa = RetrievalQA.from_chain_type(llm=llm, chain_type=\"stuff\", retriever=docsearch.as_retriever())\r\nquery = \"How did the pandemic affect businesses\"\r\nans = qa.run(query)\r\n```\r\n\r\nFor some reason, the running the chain on a query takes an extremely long time to run (>25 minutes). \r\n\r\nIs this due to hardware limitations or something else? I'm able to run queries directly against the GPT4All model I downloaded locally fairly quickly (like the example shown [here](https://docs.gpt4all.io/gpt4all_python.html)), which is why I'm unclear on what's causing this massive runtime.\r\n\r\nHardware: M1 Mac, macOS 12.1, 8 GB RAM, Python 3.10.11\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5016/reactions",
            "total_count": 16,
            "+1": 16,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5016/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5015",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5015/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5015/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5015/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5015",
        "id": 1718038177,
        "node_id": "PR_kwDOIPDwls5Q7zUz",
        "number": 5015,
        "title": "fix: revert docarray explicit transitive dependencies and use extras instead",
        "user": {
            "login": "malandis",
            "id": 3690240,
            "node_id": "MDQ6VXNlcjM2OTAyNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3690240?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malandis",
            "html_url": "https://github.com/malandis",
            "followers_url": "https://api.github.com/users/malandis/followers",
            "following_url": "https://api.github.com/users/malandis/following{/other_user}",
            "gists_url": "https://api.github.com/users/malandis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malandis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malandis/subscriptions",
            "organizations_url": "https://api.github.com/users/malandis/orgs",
            "repos_url": "https://api.github.com/users/malandis/repos",
            "events_url": "https://api.github.com/users/malandis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malandis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-20T03:57:52Z",
        "updated_at": "2023-05-22T16:48:46Z",
        "closed_at": "2023-05-22T16:48:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5015",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5015",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5015.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5015.patch",
            "merged_at": "2023-05-22T16:48:09Z"
        },
        "body": "tldr: The docarray [integration\r\nPR](https://github.com/hwchase17/langchain/pull/4483) introduced a pinned dependency to protobuf. This is a docarray dependency, not a langchain dependency. Since this is handled by the docarray dependencies, it is unnecessary here.\r\n\r\nFurther, as a pinned dependency, this quickly leads to incompatibilities with application code that consumes the library. Much less with a heavily used library like protobuf.\r\n\r\nDetail: as we see in the [docarray\r\nintegration](https://github.com/hwchase17/langchain/pull/4483/files#diff-50c86b7ed8ac2cf95bd48334961bf0530cdc77b5a56f852c5c61b89d735fd711R81-R83), the transitive dependencies of docarray were also listed as langchain dependencies. This is unnecessary as the docarray project has an appropriate [extras](https://github.com/docarray/docarray/blob/a01a05542d17264b8a164bec783633658deeedb8/pyproject.toml#L70). The docarray project also does not require this _pinned_ version of protobuf, rather [a minimum version](https://github.com/docarray/docarray/blob/a01a05542d17264b8a164bec783633658deeedb8/pyproject.toml#L41). So this pinned version was likely in error.\r\n\r\nTo fix this, this PR reverts the explicit hnswlib and protobuf dependencies and adds the hnswlib extras install for docarray (which installs hnswlib and protobuf, as originally intended). Because version `0.32.0`\r\nof the docarray hnswlib extras added protobuf, we bump the docarray dependency from `^0.31.0` to `^0.32.0`.\r\n\r\n# revert docarray explicit transitive dependencies and use extras instead\r\n\r\n## Who can review?\r\n\r\n@dev2049 -- reviewed the original PR\r\n@eyurtsev -- bumped the pinned protobuf dependency a few days ago\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5015/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5015/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5014",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5014/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5014/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5014/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5014",
        "id": 1718020978,
        "node_id": "PR_kwDOIPDwls5Q7vkd",
        "number": 5014,
        "title": "Improving Resilience of MRKL Agent",
        "user": {
            "login": "svdeepak99",
            "id": 42609308,
            "node_id": "MDQ6VXNlcjQyNjA5MzA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/42609308?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/svdeepak99",
            "html_url": "https://github.com/svdeepak99",
            "followers_url": "https://api.github.com/users/svdeepak99/followers",
            "following_url": "https://api.github.com/users/svdeepak99/following{/other_user}",
            "gists_url": "https://api.github.com/users/svdeepak99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/svdeepak99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/svdeepak99/subscriptions",
            "organizations_url": "https://api.github.com/users/svdeepak99/orgs",
            "repos_url": "https://api.github.com/users/svdeepak99/repos",
            "events_url": "https://api.github.com/users/svdeepak99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/svdeepak99/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-20T03:15:12Z",
        "updated_at": "2023-05-22T18:08:08Z",
        "closed_at": "2023-05-22T18:08:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5014",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5014",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5014.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5014.patch",
            "merged_at": "2023-05-22T18:08:08Z"
        },
        "body": "This is a highly optimized update to the pull request https://github.com/hwchase17/langchain/pull/3269\r\n\r\nSummary:\r\n1) Added ability to MRKL agent to self solve the ValueError(f\"Could not parse LLM output: `{llm_output}`\") error, whenever llm (especially gpt-3.5-turbo) does not follow the format of MRKL Agent, while returning \"Action:\" & \"Action Input:\".\r\n2) The way I am solving this error is by responding back to the llm with the messages \"Invalid Format: Missing 'Action:' after 'Thought:'\" & \"Invalid Format: Missing 'Action Input:' after 'Action:'\" whenever Action: and Action Input: are not present in the llm output respectively.\r\n\r\nFor a detailed explanation, look at the previous pull request.\r\n\r\nNew Updates:\r\n1) Since @hwchase17 , requested in the previous PR to communicate the self correction (error) message, using the OutputParserException, I have added new ability to the OutputParserException class to store the observation & previous llm_output in order to communicate it to the next Agent's prompt. This is done, without breaking/modifying any of the functionality OutputParserException previously performs (i.e. OutputParserException can be used in the same way as before, without passing any observation & previous llm_output too).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5014/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5014/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5013",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5013/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5013/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5013/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5013",
        "id": 1718009863,
        "node_id": "PR_kwDOIPDwls5Q7s97",
        "number": 5013,
        "title": "Add documentation for Databricks integration",
        "user": {
            "login": "gengliangwang",
            "id": 1097932,
            "node_id": "MDQ6VXNlcjEwOTc5MzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1097932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gengliangwang",
            "html_url": "https://github.com/gengliangwang",
            "followers_url": "https://api.github.com/users/gengliangwang/followers",
            "following_url": "https://api.github.com/users/gengliangwang/following{/other_user}",
            "gists_url": "https://api.github.com/users/gengliangwang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gengliangwang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gengliangwang/subscriptions",
            "organizations_url": "https://api.github.com/users/gengliangwang/orgs",
            "repos_url": "https://api.github.com/users/gengliangwang/repos",
            "events_url": "https://api.github.com/users/gengliangwang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gengliangwang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-20T03:03:46Z",
        "updated_at": "2023-05-21T05:06:25Z",
        "closed_at": "2023-05-21T05:06:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5013",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5013",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5013.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5013.patch",
            "merged_at": "2023-05-21T05:06:25Z"
        },
        "body": "# Add documentation for Databricks integration\r\n\r\nThis is a follow-up of https://github.com/hwchase17/langchain/pull/4702\r\nIt documents the details of how to integrate Databricks using langchain. It also provides examples in a notebook.\r\n\r\n\r\n## Who can review?\r\n@dev2049 @hwchase17 since you are aware of the context. We will promote the integration after this doc is ready.  Thanks in advance!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5013/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5013/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5012",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5012/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5012/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5012/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5012",
        "id": 1717993987,
        "node_id": "PR_kwDOIPDwls5Q7paF",
        "number": 5012,
        "title": "Add AzureCognitiveServicesToolkit to call Azure Cognitive Services API",
        "user": {
            "login": "whiskyboy",
            "id": 12080578,
            "node_id": "MDQ6VXNlcjEyMDgwNTc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12080578?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/whiskyboy",
            "html_url": "https://github.com/whiskyboy",
            "followers_url": "https://api.github.com/users/whiskyboy/followers",
            "following_url": "https://api.github.com/users/whiskyboy/following{/other_user}",
            "gists_url": "https://api.github.com/users/whiskyboy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/whiskyboy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/whiskyboy/subscriptions",
            "organizations_url": "https://api.github.com/users/whiskyboy/orgs",
            "repos_url": "https://api.github.com/users/whiskyboy/repos",
            "events_url": "https://api.github.com/users/whiskyboy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/whiskyboy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-20T02:37:15Z",
        "updated_at": "2023-05-23T13:45:49Z",
        "closed_at": "2023-05-23T13:45:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5012",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5012",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5012.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5012.patch",
            "merged_at": "2023-05-23T13:45:48Z"
        },
        "body": "# Add AzureCognitiveServicesToolkit to call Azure Cognitive Services API: achieve some multimodal capabilities\r\n\r\nThis PR adds a toolkit named AzureCognitiveServicesToolkit which bundles the following tools:\r\n- AzureCogsImageAnalysisTool: calls Azure Cognitive Services image analysis API to extract caption, objects, tags, and text from images.\r\n- AzureCogsFormRecognizerTool: calls Azure Cognitive Services form recognizer API to extract text, tables, and key-value pairs from documents.\r\n- AzureCogsSpeech2TextTool: calls Azure Cognitive Services speech to text API to transcribe speech to text.\r\n- AzureCogsText2SpeechTool: calls Azure Cognitive Services text to speech API  to synthesize text to speech.\r\n\r\nThis toolkit can be used to process image, document, and audio inputs.\r\n\r\n@hwchase17 and @vowelparrot Would be glad to hear your thoughts!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5012/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5012/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5011",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5011/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5011/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5011/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5011",
        "id": 1717978496,
        "node_id": "I_kwDOIPDwls5mZkWA",
        "number": 5011,
        "title": "Async Support | Search Tools",
        "user": {
            "login": "jordanparker6",
            "id": 29700471,
            "node_id": "MDQ6VXNlcjI5NzAwNDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29700471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordanparker6",
            "html_url": "https://github.com/jordanparker6",
            "followers_url": "https://api.github.com/users/jordanparker6/followers",
            "following_url": "https://api.github.com/users/jordanparker6/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordanparker6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordanparker6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordanparker6/subscriptions",
            "organizations_url": "https://api.github.com/users/jordanparker6/orgs",
            "repos_url": "https://api.github.com/users/jordanparker6/repos",
            "events_url": "https://api.github.com/users/jordanparker6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordanparker6/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-05-20T01:37:04Z",
        "updated_at": "2023-12-03T16:16:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nNone of the search tools have async support.\n\n### Motivation\n\nAsync calls are being used langchain setup with FastAPI. Not having async support for these tools blocks there use.\n\n### Your contribution\n\nHappy to help out where needed.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5011/reactions",
            "total_count": 7,
            "+1": 7,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5011/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5010",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5010/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5010/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5010/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5010",
        "id": 1717977580,
        "node_id": "I_kwDOIPDwls5mZkHs",
        "number": 5010,
        "title": "Async Support | Plan & Execute",
        "user": {
            "login": "jordanparker6",
            "id": 29700471,
            "node_id": "MDQ6VXNlcjI5NzAwNDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29700471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordanparker6",
            "html_url": "https://github.com/jordanparker6",
            "followers_url": "https://api.github.com/users/jordanparker6/followers",
            "following_url": "https://api.github.com/users/jordanparker6/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordanparker6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordanparker6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordanparker6/subscriptions",
            "organizations_url": "https://api.github.com/users/jordanparker6/orgs",
            "repos_url": "https://api.github.com/users/jordanparker6/repos",
            "events_url": "https://api.github.com/users/jordanparker6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordanparker6/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-20T01:34:11Z",
        "updated_at": "2023-09-12T16:14:29Z",
        "closed_at": "2023-09-12T16:14:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI have been playing around with the Plan & Execute Agent. \r\n\r\nWould love to see async support implemented.\n\n### Motivation\n\nWould like to use it as a drop in agent replacement for my existing async setup.\n\n### Your contribution\n\nHappy to help out where needed. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5010/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5010/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5009",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5009/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5009/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5009/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5009",
        "id": 1717975810,
        "node_id": "PR_kwDOIPDwls5Q7lpP",
        "number": 5009,
        "title": "Add Multi-CSV/DF support in CSV and DataFrame Toolkits",
        "user": {
            "login": "NickL77",
            "id": 8673939,
            "node_id": "MDQ6VXNlcjg2NzM5Mzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8673939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NickL77",
            "html_url": "https://github.com/NickL77",
            "followers_url": "https://api.github.com/users/NickL77/followers",
            "following_url": "https://api.github.com/users/NickL77/following{/other_user}",
            "gists_url": "https://api.github.com/users/NickL77/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NickL77/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NickL77/subscriptions",
            "organizations_url": "https://api.github.com/users/NickL77/orgs",
            "repos_url": "https://api.github.com/users/NickL77/repos",
            "events_url": "https://api.github.com/users/NickL77/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NickL77/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-20T01:27:56Z",
        "updated_at": "2023-08-29T15:33:45Z",
        "closed_at": "2023-05-25T21:23:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5009",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5009",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5009.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5009.patch",
            "merged_at": "2023-05-25T21:23:11Z"
        },
        "body": "Add Multi-CSV/DF support in CSV and DataFrame Toolkits\r\n* CSV and DataFrame toolkits now accept list of CSVs/DFs\r\n* Add default prompts for many dataframes in `pandas_dataframe` toolkit\r\n\r\nFixes #1958\r\nPotentially fixes #4423\r\n\r\n## Testing\r\n* Add single and multi-dataframe integration tests for `pandas_dataframe` toolkit with permutations of `include_df_in_prompt`\r\n* Add single and multi-CSV integration tests for csv toolkit\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested: \r\n@hwchase17 (worked on these toolkits)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5009/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5009/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5008",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5008/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5008/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5008/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5008",
        "id": 1717936570,
        "node_id": "PR_kwDOIPDwls5Q7d0u",
        "number": 5008,
        "title": "Revert \"API update: Engines -> Models (#4915)\"",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-19T23:30:43Z",
        "updated_at": "2023-05-19T23:38:10Z",
        "closed_at": "2023-05-19T23:38:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5008",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5008",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5008.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5008.patch",
            "merged_at": "2023-05-19T23:38:09Z"
        },
        "body": "This reverts commit 8c28ad6daca3420d4428a464cd35f00df8b84f01.\r\n\r\nSeems to be causing #5001",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5008/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5008/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5007",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5007/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5007/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5007/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5007",
        "id": 1717925159,
        "node_id": "PR_kwDOIPDwls5Q7baT",
        "number": 5007,
        "title": "Add logs command",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-19T23:06:19Z",
        "updated_at": "2023-05-20T00:06:18Z",
        "closed_at": "2023-05-20T00:06:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5007",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5007",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5007.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5007.patch",
            "merged_at": "2023-05-20T00:06:17Z"
        },
        "body": "to the plus server",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5007/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5007/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5006",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5006/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5006/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5006/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5006",
        "id": 1717895989,
        "node_id": "PR_kwDOIPDwls5Q7VKV",
        "number": 5006,
        "title": "changed ValueError to ImportError",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-19T22:16:49Z",
        "updated_at": "2023-05-19T22:28:09Z",
        "closed_at": "2023-05-19T22:28:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5006",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5006",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5006.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5006.patch",
            "merged_at": "2023-05-19T22:28:09Z"
        },
        "body": "# changed ValueError to ImportError in except\r\n\r\nSeveral places with this bug. ValueError does not catch ImportError.\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@hwchase17 - project lead\r\n@eyurtsev\r\n@dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5006/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5006/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5005",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5005/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5005/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5005/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5005",
        "id": 1717883897,
        "node_id": "PR_kwDOIPDwls5Q7ShP",
        "number": 5005,
        "title": "update langchainplus client and docker file to reflect port changes",
        "user": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-19T22:01:55Z",
        "updated_at": "2023-05-22T19:53:06Z",
        "closed_at": "2023-05-22T19:53:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5005",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5005",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5005.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5005.patch",
            "merged_at": "2023-05-22T19:53:05Z"
        },
        "body": "# Currently, only the dev images are updated\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5005/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5005/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5004",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5004/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5004/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5004/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5004",
        "id": 1717877344,
        "node_id": "PR_kwDOIPDwls5Q7REf",
        "number": 5004,
        "title": "added instruction about pip install google-generativeai",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-19T21:54:41Z",
        "updated_at": "2023-05-27T03:31:54Z",
        "closed_at": "2023-05-19T22:32:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5004",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5004",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5004.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5004.patch",
            "merged_at": "2023-05-19T22:32:24Z"
        },
        "body": "# added instruction about pip install google-generativeai\r\n\r\nadded instruction about pip install google-generativeai\r\n\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n       @hwchase17 \r\n      @vowelparrot\r\n \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5004/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5004/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5003",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5003/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5003/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5003/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5003",
        "id": 1717852268,
        "node_id": "PR_kwDOIPDwls5Q7LmR",
        "number": 5003,
        "title": "Chroma cleanup",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5483526101,
                "node_id": "LA_kwDOIPDwls8AAAABRtf31Q",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/breaking",
                "name": "breaking",
                "color": "B60205",
                "default": false,
                "description": "Breaking change"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-19T21:27:16Z",
        "updated_at": "2023-06-22T08:20:28Z",
        "closed_at": "2023-06-22T08:20:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5003",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5003",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5003.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5003.patch",
            "merged_at": null
        },
        "body": "Breaking changes that prevent Chroma from overriding parent signature",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5003/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5003/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5002",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5002/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5002/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5002/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5002",
        "id": 1717788066,
        "node_id": "PR_kwDOIPDwls5Q691J",
        "number": 5002,
        "title": "Ensure deployment_id is set to provided deployment, required for Azure OpenAI.",
        "user": {
            "login": "tot0",
            "id": 1692218,
            "node_id": "MDQ6VXNlcjE2OTIyMTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1692218?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tot0",
            "html_url": "https://github.com/tot0",
            "followers_url": "https://api.github.com/users/tot0/followers",
            "following_url": "https://api.github.com/users/tot0/following{/other_user}",
            "gists_url": "https://api.github.com/users/tot0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tot0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tot0/subscriptions",
            "organizations_url": "https://api.github.com/users/tot0/orgs",
            "repos_url": "https://api.github.com/users/tot0/repos",
            "events_url": "https://api.github.com/users/tot0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tot0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-19T20:31:48Z",
        "updated_at": "2023-08-11T22:43:02Z",
        "closed_at": "2023-08-11T22:43:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5002",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5002",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5002.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5002.patch",
            "merged_at": "2023-08-11T22:43:01Z"
        },
        "body": "# Ensure deployment_id is set to provided deployment, required for Azure OpenAI.\r\n\r\nFixes #5001 \r\n\r\n## Before submitting\r\n\r\nVerified in my own code and by running this example notebook, works after the fix (as in it doesn't fail before trying to talk to the endpoint): https://github.com/hwchase17/langchain/blob/22d844dc0795e7e53a4cc499bf4974cb83df490d/docs/modules/models/text_embedding/examples/azureopenai.ipynb\r\n\r\n## Who can review?\r\n\r\n@agola11 @hwchase17  \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5002/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5002/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5001",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5001/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5001/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5001/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5001",
        "id": 1717774987,
        "node_id": "I_kwDOIPDwls5mYyqL",
        "number": 5001,
        "title": "Azure OpenAI Embeddings failed due to no deployment_id set.",
        "user": {
            "login": "tot0",
            "id": 1692218,
            "node_id": "MDQ6VXNlcjE2OTIyMTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1692218?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tot0",
            "html_url": "https://github.com/tot0",
            "followers_url": "https://api.github.com/users/tot0/followers",
            "following_url": "https://api.github.com/users/tot0/following{/other_user}",
            "gists_url": "https://api.github.com/users/tot0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tot0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tot0/subscriptions",
            "organizations_url": "https://api.github.com/users/tot0/orgs",
            "repos_url": "https://api.github.com/users/tot0/repos",
            "events_url": "https://api.github.com/users/tot0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tot0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-19T20:18:47Z",
        "updated_at": "2023-05-22T06:43:51Z",
        "closed_at": "2023-05-20T16:25:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nBroken by #4915 \r\n\r\nError: `Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.embedding.Embedding'>`\r\n\r\nI'm putting a PR out to fix this now.\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nRun example notebook: https://github.com/hwchase17/langchain/blob/22d844dc0795e7e53a4cc499bf4974cb83df490d/docs/modules/models/text_embedding/examples/azureopenai.ipynb\n\n### Expected behavior\n\nEmbedding using Azure OpenAI should work.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5001/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5001/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5000",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5000/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5000/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5000/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5000",
        "id": 1717773530,
        "node_id": "I_kwDOIPDwls5mYyTa",
        "number": 5000,
        "title": "ChatOpenAI:  Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.chat_completion.ChatCompletion'>",
        "user": {
            "login": "sahand68",
            "id": 40005218,
            "node_id": "MDQ6VXNlcjQwMDA1MjE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/40005218?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sahand68",
            "html_url": "https://github.com/sahand68",
            "followers_url": "https://api.github.com/users/sahand68/followers",
            "following_url": "https://api.github.com/users/sahand68/following{/other_user}",
            "gists_url": "https://api.github.com/users/sahand68/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sahand68/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sahand68/subscriptions",
            "organizations_url": "https://api.github.com/users/sahand68/orgs",
            "repos_url": "https://api.github.com/users/sahand68/repos",
            "events_url": "https://api.github.com/users/sahand68/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sahand68/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 16,
        "created_at": "2023-05-19T20:17:41Z",
        "updated_at": "2023-10-27T08:02:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.169\r\nopenai==0.27.6\r\n\n\n### Who can help?\n\n@hwchase17\r\n@agola11\r\n@vowelparrot\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom dotenv import load_dotenv\r\nload_dotenv('.env')\r\n\r\n\r\nChatOpenAI(temperature=0, max_tokens=500, model_name='gpt-3.5-turbo', openai_api_base = os.environ['OPENAI_API_BASE'] ).call_as_llm('Hi')\r\n\r\n\n\n### Expected behavior\n\n[nltk_data] Downloading package stopwords to /home/sahand/nltk_data...\r\n[nltk_data]   Package stopwords is already up-to-date!\r\n[nltk_data] Downloading package punkt to /home/sahand/nltk_data...\r\n[nltk_data]   Package punkt is already up-to-date!\r\nMust provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.chat_completion.ChatCompletion'>\r\nInvalid API key.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5000/reactions",
            "total_count": 4,
            "+1": 3,
            "-1": 1,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5000/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4999",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4999/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4999/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4999/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4999",
        "id": 1717773452,
        "node_id": "I_kwDOIPDwls5mYySM",
        "number": 4999,
        "title": "code-davinci-002 does not work with LangChain",
        "user": {
            "login": "AvikantSrivastava",
            "id": 41926176,
            "node_id": "MDQ6VXNlcjQxOTI2MTc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/41926176?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AvikantSrivastava",
            "html_url": "https://github.com/AvikantSrivastava",
            "followers_url": "https://api.github.com/users/AvikantSrivastava/followers",
            "following_url": "https://api.github.com/users/AvikantSrivastava/following{/other_user}",
            "gists_url": "https://api.github.com/users/AvikantSrivastava/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AvikantSrivastava/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AvikantSrivastava/subscriptions",
            "organizations_url": "https://api.github.com/users/AvikantSrivastava/orgs",
            "repos_url": "https://api.github.com/users/AvikantSrivastava/repos",
            "events_url": "https://api.github.com/users/AvikantSrivastava/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AvikantSrivastava/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-19T20:17:35Z",
        "updated_at": "2023-05-21T22:32:30Z",
        "closed_at": "2023-05-21T22:32:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI tried using `code-davinci-002` model with LangChain, looks like it is not supported in the LLM wrapper'\r\n```openai.error.InvalidRequestError: The model: `code-davinci-001` does not exist```\r\n<img width=\"619\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/41926176/4b8bb7a7-ad4c-4618-a5f9-a8bc2a25705e\">\r\n\n\n### Who can help?\n\n@hwchase17 \r\n@agola11 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nfrom langchain.llms import OpenAI\r\n\r\nllm = OpenAI(model_name='code-davinci-002')\r\nllm('write python code to create json object in s3')\r\n```\n\n### Expected behavior\n\nThe expected behaviour is that the model should load as an LLM object",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4999/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4999/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4998",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4998/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4998/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4998/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4998",
        "id": 1717770033,
        "node_id": "PR_kwDOIPDwls5Q658x",
        "number": 4998,
        "title": "Make test gha workflow manually runnable",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-19T20:13:54Z",
        "updated_at": "2023-05-19T20:46:34Z",
        "closed_at": "2023-05-19T20:46:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4998",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4998",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4998.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4998.patch",
            "merged_at": "2023-05-19T20:46:33Z"
        },
        "body": "if https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch is to be believed this should make it possible to manually kick of test workflow, but i don't know much about these things",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4998/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4998/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4997",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4997/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4997/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4997/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4997",
        "id": 1717718713,
        "node_id": "PR_kwDOIPDwls5Q6u2k",
        "number": 4997,
        "title": "Improved query, print & exception handling in REPL Tool",
        "user": {
            "login": "svdeepak99",
            "id": 42609308,
            "node_id": "MDQ6VXNlcjQyNjA5MzA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/42609308?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/svdeepak99",
            "html_url": "https://github.com/svdeepak99",
            "followers_url": "https://api.github.com/users/svdeepak99/followers",
            "following_url": "https://api.github.com/users/svdeepak99/following{/other_user}",
            "gists_url": "https://api.github.com/users/svdeepak99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/svdeepak99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/svdeepak99/subscriptions",
            "organizations_url": "https://api.github.com/users/svdeepak99/orgs",
            "repos_url": "https://api.github.com/users/svdeepak99/repos",
            "events_url": "https://api.github.com/users/svdeepak99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/svdeepak99/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-05-19T19:23:33Z",
        "updated_at": "2023-05-22T13:43:44Z",
        "closed_at": "2023-05-22T13:43:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4997",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4997",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4997.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4997.patch",
            "merged_at": "2023-05-22T13:43:44Z"
        },
        "body": "Update to pull request https://github.com/hwchase17/langchain/pull/3215\r\n\r\nSummary:\r\n1) Improved the sanitization of query (using regex), by removing python command (since gpt-3.5-turbo sometimes assumes python console as a terminal, and runs python command first which causes error). Also sometimes 1 line python codes contain single backticks.\r\n2) Added 7 new test cases.\r\n\r\nFor more details, view the previous pull request.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4997/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4997/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4996",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4996/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4996/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4996/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4996",
        "id": 1717701073,
        "node_id": "PR_kwDOIPDwls5Q6q7n",
        "number": 4996,
        "title": "Beam",
        "user": {
            "login": "NolanTrem",
            "id": 34580718,
            "node_id": "MDQ6VXNlcjM0NTgwNzE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/34580718?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NolanTrem",
            "html_url": "https://github.com/NolanTrem",
            "followers_url": "https://api.github.com/users/NolanTrem/followers",
            "following_url": "https://api.github.com/users/NolanTrem/following{/other_user}",
            "gists_url": "https://api.github.com/users/NolanTrem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NolanTrem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NolanTrem/subscriptions",
            "organizations_url": "https://api.github.com/users/NolanTrem/orgs",
            "repos_url": "https://api.github.com/users/NolanTrem/repos",
            "events_url": "https://api.github.com/users/NolanTrem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NolanTrem/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-19T19:09:42Z",
        "updated_at": "2023-05-24T08:25:18Z",
        "closed_at": "2023-05-24T08:25:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4996",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4996",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4996.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4996.patch",
            "merged_at": "2023-05-24T08:25:18Z"
        },
        "body": "# Beam\r\n\r\nCalls the Beam API wrapper to deploy and make subsequent calls to an instance of the gpt2 LLM in a cloud deployment. Requires installation of the Beam library and registration of Beam Client ID and Client Secret. Additional calls can then be made through the instance of the large language model in your code or by calling the Beam API.\r\n\r\nExample notebook: https://colab.research.google.com/drive/13nigL8hQ6gCw9qzP1QEhkaWuSZ5cKOS0?usp=sharing\r\nTwitter: @beam_cloud (edited) ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4996/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4996/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4995",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4995/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4995/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4995/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4995",
        "id": 1717682308,
        "node_id": "I_kwDOIPDwls5mYcCE",
        "number": 4995,
        "title": "PromptLayerOpenAI doesn't work with planner",
        "user": {
            "login": "ivanmkc",
            "id": 1586049,
            "node_id": "MDQ6VXNlcjE1ODYwNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1586049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ivanmkc",
            "html_url": "https://github.com/ivanmkc",
            "followers_url": "https://api.github.com/users/ivanmkc/followers",
            "following_url": "https://api.github.com/users/ivanmkc/following{/other_user}",
            "gists_url": "https://api.github.com/users/ivanmkc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ivanmkc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ivanmkc/subscriptions",
            "organizations_url": "https://api.github.com/users/ivanmkc/orgs",
            "repos_url": "https://api.github.com/users/ivanmkc/repos",
            "events_url": "https://api.github.com/users/ivanmkc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ivanmkc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-19T18:56:35Z",
        "updated_at": "2023-09-10T16:15:07Z",
        "closed_at": "2023-09-10T16:15:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n```\r\nfrom langchain.agents.agent_toolkits.openapi import planner\r\nfrom langchain.llms import PromptLayerOpenAI\r\n\r\nllm = PromptLayerOpenAI(model_name=\"gpt-4\", temperature=0.25)\r\n\r\ncontent_agent = planner.create_openapi_agent(api_spec=content_api_spec, requests_wrapper=Requests(headers = {\"Authorization\": f\"Bearer {token}\"}), llm=llm)\r\n```\r\n\r\nExpected that API requests are logged. \r\nHowever, nothing is actually logged.\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSee code\n\n### Expected behavior\n\nExpected that API requests are logged on promptlayer.com. \r\nHowever, nothing is actually logged.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4995/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4995/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4994",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4994/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4994/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4994/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4994",
        "id": 1717572017,
        "node_id": "PR_kwDOIPDwls5Q6Obp",
        "number": 4994,
        "title": "Remove autoreload in examples",
        "user": {
            "login": "gengliangwang",
            "id": 1097932,
            "node_id": "MDQ6VXNlcjEwOTc5MzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1097932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gengliangwang",
            "html_url": "https://github.com/gengliangwang",
            "followers_url": "https://api.github.com/users/gengliangwang/followers",
            "following_url": "https://api.github.com/users/gengliangwang/following{/other_user}",
            "gists_url": "https://api.github.com/users/gengliangwang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gengliangwang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gengliangwang/subscriptions",
            "organizations_url": "https://api.github.com/users/gengliangwang/orgs",
            "repos_url": "https://api.github.com/users/gengliangwang/repos",
            "events_url": "https://api.github.com/users/gengliangwang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gengliangwang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-19T17:19:22Z",
        "updated_at": "2023-05-19T17:35:58Z",
        "closed_at": "2023-05-19T17:35:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4994",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4994",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4994.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4994.patch",
            "merged_at": "2023-05-19T17:35:58Z"
        },
        "body": "# Remove autoreload in examples\r\nRemove the `autoreload` in examples since it is not necessary for most users:\r\n```\r\n%load_ext autoreload,\r\n%autoreload 2\r\n```\r\n\r\n\r\n\r\n\r\n## Before submitting\r\nIn https://python.langchain.com/en/latest/modules/chains/examples/sqlite.html:\r\n<img width=\"872\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/1097932/9d123ed0-1af4-4247-8709-e059bda3714e\">\r\n\r\nIn https://python.langchain.com/en/latest/modules/agents/tools/examples/zapier.html:\r\n<img width=\"827\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/1097932/2e80422a-964f-4976-a916-498a2258af07\">\r\n\r\n## Who can review?\r\n@vowelparrot @hwchase17\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4994/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4994/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4993",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4993/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4993/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4993/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4993",
        "id": 1717565400,
        "node_id": "PR_kwDOIPDwls5Q6NB_",
        "number": 4993,
        "title": "Add OpenLM LLM multi-provider",
        "user": {
            "login": "r2d4",
            "id": 896032,
            "node_id": "MDQ6VXNlcjg5NjAzMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/896032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/r2d4",
            "html_url": "https://github.com/r2d4",
            "followers_url": "https://api.github.com/users/r2d4/followers",
            "following_url": "https://api.github.com/users/r2d4/following{/other_user}",
            "gists_url": "https://api.github.com/users/r2d4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/r2d4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/r2d4/subscriptions",
            "organizations_url": "https://api.github.com/users/r2d4/orgs",
            "repos_url": "https://api.github.com/users/r2d4/repos",
            "events_url": "https://api.github.com/users/r2d4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/r2d4/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            },
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-19T17:12:38Z",
        "updated_at": "2023-05-23T01:09:53Z",
        "closed_at": "2023-05-23T01:09:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4993",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4993",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4993.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4993.patch",
            "merged_at": "2023-05-23T01:09:53Z"
        },
        "body": "OpenLM is a zero-dependency OpenAI-compatible LLM provider that can call different inference endpoints directly via HTTP. It implements the OpenAI Completion class so that it can be used as a drop-in replacement for the OpenAI API. This changeset utilizes BaseOpenAI for minimal added code.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4993/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4993/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4992",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4992/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4992/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4992/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4992",
        "id": 1717540898,
        "node_id": "PR_kwDOIPDwls5Q6Hwf",
        "number": 4992,
        "title": "Obsidian front_matter fix",
        "user": {
            "login": "effi",
            "id": 5256454,
            "node_id": "MDQ6VXNlcjUyNTY0NTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5256454?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/effi",
            "html_url": "https://github.com/effi",
            "followers_url": "https://api.github.com/users/effi/followers",
            "following_url": "https://api.github.com/users/effi/following{/other_user}",
            "gists_url": "https://api.github.com/users/effi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/effi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/effi/subscriptions",
            "organizations_url": "https://api.github.com/users/effi/orgs",
            "repos_url": "https://api.github.com/users/effi/repos",
            "events_url": "https://api.github.com/users/effi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/effi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5463330795,
                "node_id": "LA_kwDOIPDwls8AAAABRaPP6w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20test",
                "name": "needs test",
                "color": "E99695",
                "default": false,
                "description": "PR needs to be updated with tests"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-19T16:52:04Z",
        "updated_at": "2023-08-11T22:00:41Z",
        "closed_at": "2023-08-11T22:00:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4992",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4992",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4992.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4992.patch",
            "merged_at": null
        },
        "body": "# ObsidianLoader front_matter fixed to proper YAML parsing\r\n\r\nObsidian Notes can have front_matter at the beginning of their markdown files.\r\nThis front_matter is formatted as YAML. The previous implementation simply went through line-by-line checking for a key-value pair.\r\nThis PR uses the python yaml package to parse the front_matter, allowing for all kind of YAML compatible front_matter in line with the Obsidian rules.\r\n\r\nAt the same time, variable names in the ObsidianLoader class were replaced from single letter or abbreviations to named variables.\r\n\r\n\r\nFixes #4991 \r\n\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n@eyurtsev  \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4992/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4992/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4991",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4991/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4991/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4991/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4991",
        "id": 1717534417,
        "node_id": "I_kwDOIPDwls5mX37R",
        "number": 4991,
        "title": "ObsidianLoader doesn't Parse Frontmatter of Obsidian Files according to YAML, but line-by-line and only for key-value pairs",
        "user": {
            "login": "effi",
            "id": 5256454,
            "node_id": "MDQ6VXNlcjUyNTY0NTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5256454?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/effi",
            "html_url": "https://github.com/effi",
            "followers_url": "https://api.github.com/users/effi/followers",
            "following_url": "https://api.github.com/users/effi/following{/other_user}",
            "gists_url": "https://api.github.com/users/effi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/effi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/effi/subscriptions",
            "organizations_url": "https://api.github.com/users/effi/orgs",
            "repos_url": "https://api.github.com/users/effi/repos",
            "events_url": "https://api.github.com/users/effi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/effi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-19T16:45:59Z",
        "updated_at": "2023-09-10T16:15:11Z",
        "closed_at": "2023-09-10T16:15:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nPython 3, Google Colab/Mac-OS Conda Env, Langchain v0.0.173, Dev2049/obsidian patch #4204\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSee Colab: https://colab.research.google.com/drive/1YSfKTQ92RZEJ-z-hlwHL7f5rQ-evTgx4?usp=sharing\r\n\r\n\r\n1. Have Obsidian Files with Front_Matter other then simple key_values\r\n2. Import ObsidianLoader and create loader with the Obsidian Vault\r\n3. load documents\r\n\r\n\r\nYAML frontmatter is parsed to:\r\nmetadata={'source': 'Demo-Note.md', 'path': 'Obsidian_Vault/Demo-Note.md', 'created': 1684513990.4561925, 'last_modified': 1684513964.4224126, 'last_accessed': 1684514007.4610083, 'normal': 'frontmatter is just key-value based', 'list_frontmatter': '', 'dictionary_frontmatter': '', 'can': 'contain', 'different': 'key-value-paris', 'and': '[even, nest, these, types]'}\n\n### Expected behavior\n\nYAML Frontmatter should be parsed according to YAML rules\r\n---\r\nnormal: frontmatter is just key-value based\r\nlist_frontmatter:\r\n - can\r\n - be\r\n - an array\r\ndictionary_frontmatter:\r\n can: contain\r\n different: key-value-paris\r\n and: [even, nest, these, types]\r\n---\r\n-->\r\n```\r\n{ \r\n    'norma'l: 'frontmatter is just key-value based,\r\n    'list_frontmatter': ['can', 'be', 'an array'],\r\n    'dictionary_frontmatter' : {\r\n        'can' : 'contain',\r\n        'different': 'key-value-pairs',\r\n        'and' : ['even', 'nest', 'theses', 'types]\r\n    }\r\n}\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4991/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4991/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4990",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4990/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4990/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4990/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4990",
        "id": 1717501016,
        "node_id": "PR_kwDOIPDwls5Q5_Kh",
        "number": 4990,
        "title": "support multi openai api keys",
        "user": {
            "login": "FlowerWrong",
            "id": 5362640,
            "node_id": "MDQ6VXNlcjUzNjI2NDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5362640?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FlowerWrong",
            "html_url": "https://github.com/FlowerWrong",
            "followers_url": "https://api.github.com/users/FlowerWrong/followers",
            "following_url": "https://api.github.com/users/FlowerWrong/following{/other_user}",
            "gists_url": "https://api.github.com/users/FlowerWrong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FlowerWrong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FlowerWrong/subscriptions",
            "organizations_url": "https://api.github.com/users/FlowerWrong/orgs",
            "repos_url": "https://api.github.com/users/FlowerWrong/repos",
            "events_url": "https://api.github.com/users/FlowerWrong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FlowerWrong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-19T16:15:40Z",
        "updated_at": "2023-06-07T06:43:03Z",
        "closed_at": "2023-06-07T06:43:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4990",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4990",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4990.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4990.patch",
            "merged_at": null
        },
        "body": "# Support multi openai api keys\r\n\r\nThis commit improves the use of openai, does not set the global api key, etc., if we have multiple different api keys, it can work normally without reporting some strange errors.\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # ([issue](https://github.com/hwchase17/langchain/issues/2091))\r\nFixes # ([issue](https://github.com/hwchase17/langchain/issues/3446))\r\n\r\n## Before submitting\r\n\r\nThere is no breaking change.\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n@hwchase17 \r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4990/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4990/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4988",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4988/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4988/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4988/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4988",
        "id": 1717459235,
        "node_id": "PR_kwDOIPDwls5Q511S",
        "number": 4988,
        "title": "bump v0.0.174",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-19T15:47:45Z",
        "updated_at": "2023-05-19T16:34:29Z",
        "closed_at": "2023-05-19T16:34:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4988",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4988",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4988.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4988.patch",
            "merged_at": "2023-05-19T16:34:28Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4988/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4988/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4987",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4987/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4987/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4987/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4987",
        "id": 1717457276,
        "node_id": "PR_kwDOIPDwls5Q51ZA",
        "number": 4987,
        "title": "fix prompt saving",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-19T15:46:21Z",
        "updated_at": "2023-05-20T15:21:54Z",
        "closed_at": "2023-05-20T15:21:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4987",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4987",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4987.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4987.patch",
            "merged_at": "2023-05-20T15:21:53Z"
        },
        "body": "will add unit tests",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4987/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4987/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4985",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4985/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4985/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4985/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4985",
        "id": 1717430847,
        "node_id": "PR_kwDOIPDwls5Q5vph",
        "number": 4985,
        "title": "Update the GPTCache example",
        "user": {
            "login": "SimFG",
            "id": 21985684,
            "node_id": "MDQ6VXNlcjIxOTg1Njg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/21985684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SimFG",
            "html_url": "https://github.com/SimFG",
            "followers_url": "https://api.github.com/users/SimFG/followers",
            "following_url": "https://api.github.com/users/SimFG/following{/other_user}",
            "gists_url": "https://api.github.com/users/SimFG/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SimFG/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SimFG/subscriptions",
            "organizations_url": "https://api.github.com/users/SimFG/orgs",
            "repos_url": "https://api.github.com/users/SimFG/repos",
            "events_url": "https://api.github.com/users/SimFG/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SimFG/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-19T15:24:38Z",
        "updated_at": "2023-05-19T23:35:37Z",
        "closed_at": "2023-05-19T23:35:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4985",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4985",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4985.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4985.patch",
            "merged_at": "2023-05-19T23:35:37Z"
        },
        "body": "# Update the GPTCache example\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes #4757\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\nThe llm parameter does not seem to represent the llm model name, but rather the request parameter list. Too many parameters lead to a GPTCache file name that is too long. I updated the demo and used a hash method for the llm parameter. Perhaps the llm value can be optimized.\r\n\r\n## Who can review?\r\n\r\nPlease help me checkout it\r\n@hwchase17\r\n@dev2049\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4985/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4985/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4984",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4984/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4984/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4984/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4984",
        "id": 1717418355,
        "node_id": "PR_kwDOIPDwls5Q5s5z",
        "number": 4984,
        "title": "Fix graphql tool",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-19T15:15:39Z",
        "updated_at": "2023-05-19T22:27:52Z",
        "closed_at": "2023-05-19T22:27:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4984",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4984",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4984.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4984.patch",
            "merged_at": "2023-05-19T22:27:51Z"
        },
        "body": "Fix construction and add unit test.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4984/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4984/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4983",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4983/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4983/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4983/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4983",
        "id": 1717412103,
        "node_id": "PR_kwDOIPDwls5Q5rgi",
        "number": 4983,
        "title": "power bi api wrapper integration tests & bug fix",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-19T15:11:33Z",
        "updated_at": "2023-05-19T15:25:53Z",
        "closed_at": "2023-05-19T15:25:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4983",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4983",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4983.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4983.patch",
            "merged_at": "2023-05-19T15:25:52Z"
        },
        "body": "# Powerbi API wrapper bug fix + integration tests\n\n<!--\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\n\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\n\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\n-->\n\n- Bug fix by removing `TYPE_CHECKING` in in utilities/powerbi.py\n- Added integration test for power bi api in utilities/test_powerbi_api.py\n- Added integration test for power bi agent in agent/test_powerbi_agent.py\n- Edited .env.examples to help set up power bi related environment variables\n- Updated demo notebook with working code in docs../examples/powerbi.ipynb - AzureOpenAI -> ChatOpenAI\n\nNotes: \n\nChat models (gpt3.5, gpt4) are much more capable than davinci at writing DAX queries, so that is important to getting the agent to work properly. Interestingly, gpt3.5-turbo needed the examples=DEFAULT_FEWSHOT_EXAMPLES to write consistent DAX queries, so gpt4 seems necessary as the smart llm.\n\nFixes #4325\n\n## Before submitting\n\nAzure-core and Azure-identity are necessary dependencies\n\ncheck integration tests with the following:\n`pytest tests/integration_tests/utilities/test_powerbi_api.py`\n`pytest tests/integration_tests/agent/test_powerbi_agent.py`\n\nYou will need a power bi account with a dataset id + table name in order to test. See .env.examples for details.\n\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\n\n## Who can review?\n@hwchase17\n@vowelparrot\n\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4983/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4983/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4982",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4982/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4982/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4982/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4982",
        "id": 1717365128,
        "node_id": "PR_kwDOIPDwls5Q5hKq",
        "number": 4982,
        "title": "Adds 'IN' metadata filter for pgvector for checking set presence",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-19T14:39:18Z",
        "updated_at": "2023-05-19T20:53:24Z",
        "closed_at": "2023-05-19T20:53:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4982",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4982",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4982.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4982.patch",
            "merged_at": "2023-05-19T20:53:23Z"
        },
        "body": "# Adds \"IN\" metadata filter for pgvector to all checking for set presence\n\nPGVector currently supports metadata filters of the form:\n```\n{\"filter\": {\"key\": \"value\"}}\n```\nwhich will return documents where the \"key\" metadata field is equal to \"value\".\n\nThis PR adds support for metadata filters of the form:\n```\n{\"filter\": {\"key\": { \"IN\" : [\"list\", \"of\", \"values\"]}}}\n```\n\nOther vector stores support this via an \"$in\" syntax. I chose to use \"IN\" to match postgres' syntax, though happy to switch.\nTested locally with PGVector and ChatVectorDBChain.\n\n\n@dev2049\n\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4982/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4982/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4980",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4980/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4980/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4980/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4980",
        "id": 1717149421,
        "node_id": "I_kwDOIPDwls5mWZ7t",
        "number": 4980,
        "title": "How to create a vectorstoreinfo using a custom tool.",
        "user": {
            "login": "Hizafa-Nadeem",
            "id": 73908345,
            "node_id": "MDQ6VXNlcjczOTA4MzQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/73908345?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Hizafa-Nadeem",
            "html_url": "https://github.com/Hizafa-Nadeem",
            "followers_url": "https://api.github.com/users/Hizafa-Nadeem/followers",
            "following_url": "https://api.github.com/users/Hizafa-Nadeem/following{/other_user}",
            "gists_url": "https://api.github.com/users/Hizafa-Nadeem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Hizafa-Nadeem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Hizafa-Nadeem/subscriptions",
            "organizations_url": "https://api.github.com/users/Hizafa-Nadeem/orgs",
            "repos_url": "https://api.github.com/users/Hizafa-Nadeem/repos",
            "events_url": "https://api.github.com/users/Hizafa-Nadeem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Hizafa-Nadeem/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-19T12:11:25Z",
        "updated_at": "2023-09-15T16:12:26Z",
        "closed_at": "2023-09-15T16:12:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\naiohttp==3.8.4\r\naiosignal==1.3.1\r\naltair==4.2.2\r\nanyio @ file:///C:/ci_311/anyio_1676425491996/work/dist\r\nargilla==1.6.0\r\nargon2-cffi @ file:///opt/conda/conda-bld/argon2-cffi_1645000214183/work\r\nargon2-cffi-bindings @ file:///C:/ci_311/argon2-cffi-bindings_1676424443321/work\r\nasttokens @ file:///opt/conda/conda-bld/asttokens_1646925590279/work\r\nasync-timeout==4.0.2\r\nattrs @ file:///C:/ci_311/attrs_1676422272484/work\r\nBabel @ file:///C:/ci_311/babel_1676427169844/work\r\nbackcall @ file:///home/ktietz/src/ci/backcall_1611930011877/work\r\nbackoff==2.2.1\r\nbeautifulsoup4 @ file:///C:/b/abs_0agyz1wsr4/croot/beautifulsoup4-split_1681493048687/work\r\nbleach @ file:///opt/conda/conda-bld/bleach_1641577558959/work\r\nblinker==1.6.2\r\nbrotlipy==0.7.0\r\ncachetools==5.3.0\r\ncertifi @ file:///C:/b/abs_4a0polqwty/croot/certifi_1683875377622/work/certifi\r\ncffi @ file:///C:/ci_311/cffi_1676423759166/work\r\nchardet==5.1.0\r\ncharset-normalizer @ file:///tmp/build/80754af9/charset-normalizer_1630003229654/work\r\nchromadb==0.3.21\r\nclick==8.1.3\r\nclickhouse-connect==0.5.22\r\ncolorama @ file:///C:/ci_311/colorama_1676422310965/work\r\ncomm @ file:///C:/ci_311/comm_1678376562840/work\r\ncommonmark==0.9.1\r\ncryptography @ file:///C:/ci_311/cryptography_1679419210767/work\r\nCython==0.29.34\r\ndataclasses-json==0.5.7\r\ndebugpy @ file:///C:/ci_311/debugpy_1676426137692/work\r\ndecorator @ file:///opt/conda/conda-bld/decorator_1643638310831/work\r\ndefusedxml @ file:///tmp/build/80754af9/defusedxml_1615228127516/work\r\nDeprecated==1.2.13\r\nduckdb==0.7.1\r\nentrypoints @ file:///C:/ci_311/entrypoints_1676423328987/work\r\net-xmlfile==1.1.0\r\nexecuting @ file:///opt/conda/conda-bld/executing_1646925071911/work\r\nfastapi==0.95.1\r\nfastjsonschema @ file:///C:/ci_311/python-fastjsonschema_1679500568724/work\r\nfilelock==3.12.0\r\nfrozenlist==1.3.3\r\nfsspec==2023.4.0\r\nftfy==6.1.1\r\ngitdb==4.0.10\r\nGitPython==3.1.31\r\ngoogle-api-core==2.11.0\r\ngoogle-api-python-client==2.86.0\r\ngoogle-auth==2.18.0\r\ngoogle-auth-httplib2==0.1.0\r\ngoogleapis-common-protos==1.59.0\r\ngreenlet==2.0.2\r\nh11==0.14.0\r\nhnswlib @ file:///D:/bld/hnswlib_1675802891722/work\r\nhttpcore==0.16.3\r\nhttplib2==0.22.0\r\nhttptools==0.5.0\r\nhttpx==0.23.3\r\nhuggingface-hub==0.14.1\r\nidna @ file:///C:/ci_311/idna_1676424932545/work\r\nimportlib-metadata==6.6.0\r\nipykernel @ file:///C:/ci_311/ipykernel_1678734799670/work\r\nipython @ file:///C:/b/abs_d1yx5tjhli/croot/ipython_1680701887259/work\r\nipython-genutils @ file:///tmp/build/80754af9/ipython_genutils_1606773439826/work\r\nipywidgets @ file:///C:/b/abs_5awapknmz_/croot/ipywidgets_1679394824767/work\r\njedi @ file:///C:/ci_311/jedi_1679427407646/work\r\nJinja2 @ file:///C:/ci_311/jinja2_1676424968965/work\r\njoblib==1.2.0\r\njson5 @ file:///tmp/build/80754af9/json5_1624432770122/work\r\njsonschema @ file:///C:/b/abs_d40z05b6r1/croot/jsonschema_1678983446576/work\r\njupyter @ file:///C:/ci_311/jupyter_1678249952587/work\r\njupyter-console @ file:///C:/b/abs_82xaa6i2y4/croot/jupyter_console_1680000189372/work\r\njupyter-server @ file:///C:/ci_311/jupyter_server_1678228762759/work\r\njupyter_client @ file:///C:/b/abs_059idvdagk/croot/jupyter_client_1680171872444/work\r\njupyter_core @ file:///C:/b/abs_9d0ttho3bs/croot/jupyter_core_1679906581955/work\r\njupyterlab @ file:///C:/ci_311/jupyterlab_1677719392688/work\r\njupyterlab-pygments @ file:///tmp/build/80754af9/jupyterlab_pygments_1601490720602/work\r\njupyterlab-widgets @ file:///C:/b/abs_38ad427jkz/croot/jupyterlab_widgets_1679055289211/work\r\njupyterlab_server @ file:///C:/b/abs_e0qqsihjvl/croot/jupyterlab_server_1680792526136/work\r\nlangchain==0.0.157\r\nlxml @ file:///C:/b/abs_c2bg6ck92l/croot/lxml_1679646459966/work\r\nlz4==4.3.2\r\nMarkdown==3.4.3\r\nMarkupSafe @ file:///C:/ci_311/markupsafe_1676424152318/work\r\nmarshmallow==3.19.0\r\nmarshmallow-enum==1.5.1\r\nmatplotlib-inline @ file:///C:/ci_311/matplotlib-inline_1676425798036/work\r\nmistune @ file:///C:/ci_311/mistune_1676425149302/work\r\nmonotonic==1.6\r\nmpmath==1.3.0\r\nmsg-parser==1.2.0\r\nmultidict==6.0.4\r\nmypy-extensions==1.0.0\r\nnbclassic @ file:///C:/b/abs_c8_rs7b3zw/croot/nbclassic_1681756186106/work\r\nnbclient @ file:///C:/ci_311/nbclient_1676425195918/work\r\nnbconvert @ file:///C:/ci_311/nbconvert_1676425836196/work\r\nnbformat @ file:///C:/ci_311/nbformat_1676424215945/work\r\nnest-asyncio @ file:///C:/ci_311/nest-asyncio_1676423519896/work\r\nnetworkx==3.1\r\nnltk==3.8.1\r\nnotebook @ file:///C:/b/abs_49d8mc_lpe/croot/notebook_1681756182078/work\r\nnotebook_shim @ file:///C:/ci_311/notebook-shim_1678144850856/work\r\nnumexpr==2.8.4\r\nnumpy==1.23.5\r\nolefile==0.46\r\nopenai==0.27.6\r\nopenapi-schema-pydantic==1.2.4\r\nopenpyxl==3.1.2\r\npackaging @ file:///C:/b/abs_ed_kb9w6g4/croot/packaging_1678965418855/work\r\npandas==1.5.3\r\npandocfilters @ file:///opt/conda/conda-bld/pandocfilters_1643405455980/work\r\nparso @ file:///opt/conda/conda-bld/parso_1641458642106/work\r\npdfminer.six==20221105\r\npickleshare @ file:///tmp/build/80754af9/pickleshare_1606932040724/work\r\nPillow==9.5.0\r\nplatformdirs @ file:///C:/ci_311/platformdirs_1676422658103/work\r\nply==3.11\r\nposthog==3.0.1\r\nprometheus-client @ file:///C:/ci_311/prometheus_client_1679591942558/work\r\nprompt-toolkit @ file:///C:/ci_311/prompt-toolkit_1676425940920/work\r\nprotobuf==3.20.3\r\npsutil @ file:///C:/ci_311_rebuilds/psutil_1679005906571/work\r\npure-eval @ file:///opt/conda/conda-bld/pure_eval_1646925070566/work\r\npyarrow==11.0.0\r\npyasn1==0.5.0\r\npyasn1-modules==0.3.0\r\npycparser @ file:///tmp/build/80754af9/pycparser_1636541352034/work\r\npydantic==1.10.7\r\npydeck==0.8.1b0\r\nPygments @ file:///opt/conda/conda-bld/pygments_1644249106324/work\r\nPympler==1.0.1\r\npyOpenSSL @ file:///C:/b/abs_de215ipd18/croot/pyopenssl_1678965319166/work\r\npypandoc==1.11\r\npyparsing==3.0.9\r\nPyQt5==5.15.7\r\nPyQt5-sip @ file:///C:/ci_311/pyqt-split_1676428895938/work/pyqt_sip\r\npyrsistent @ file:///C:/ci_311/pyrsistent_1676422695500/work\r\nPySocks @ file:///C:/ci_311/pysocks_1676425991111/work\r\npython-dateutil @ file:///tmp/build/80754af9/python-dateutil_1626374649649/work\r\npython-docx==0.8.11\r\npython-dotenv==1.0.0\r\npython-magic==0.4.27\r\npython-pptx==0.6.21\r\npytz @ file:///C:/ci_311/pytz_1676427070848/work\r\npytz-deprecation-shim==0.1.0.post0\r\npywin32==305.1\r\npywinpty @ file:///C:/ci_311/pywinpty_1677707791185/work/target/wheels/pywinpty-2.0.10-cp311-none-win_amd64.whl\r\nPyYAML==6.0\r\npyzmq @ file:///C:/b/abs_8b16zbmf46/croot/pyzmq_1682697651374/work\r\nqtconsole @ file:///C:/b/abs_eb4u9jg07y/croot/qtconsole_1681402843494/work\r\nQtPy @ file:///C:/ci_311/qtpy_1676432558504/work\r\nregex==2023.3.23\r\nrequests @ file:///C:/b/abs_41owkd5ymz/croot/requests_1682607524657/work\r\nrfc3986==1.5.0\r\nrich==13.0.1\r\nrsa==4.9\r\nscikit-learn==1.2.2\r\nscipy==1.10.1\r\nSend2Trash @ file:///tmp/build/80754af9/send2trash_1632406701022/work\r\nsentence-transformers==2.2.2\r\nsentencepiece==0.1.99\r\nsip @ file:///C:/ci_311/sip_1676427825172/work\r\nsix @ file:///tmp/build/80754af9/six_1644875935023/work\r\nsmmap==5.0.0\r\nsniffio @ file:///C:/ci_311/sniffio_1676425339093/work\r\nsoupsieve @ file:///C:/b/abs_a989exj3q6/croot/soupsieve_1680518492466/work\r\nSQLAlchemy==2.0.12\r\nstack-data @ file:///opt/conda/conda-bld/stack_data_1646927590127/work\r\nstarlette==0.26.1\r\nstreamlit==1.22.0\r\nsympy==1.11.1\r\ntenacity==8.2.2\r\nterminado @ file:///C:/ci_311/terminado_1678228513830/work\r\nthreadpoolctl==3.1.0\r\ntiktoken==0.3.3\r\ntinycss2 @ file:///C:/ci_311/tinycss2_1676425376744/work\r\ntokenizers==0.13.3\r\ntoml @ file:///tmp/build/80754af9/toml_1616166611790/work\r\ntomli @ file:///C:/ci_311/tomli_1676422027483/work\r\ntoolz==0.12.0\r\ntorch==2.0.0\r\ntorchvision==0.15.1\r\ntornado @ file:///C:/ci_311/tornado_1676423689414/work\r\ntqdm==4.65.0\r\ntraitlets @ file:///C:/ci_311/traitlets_1676423290727/work\r\ntransformers==4.28.1\r\ntyping-inspect==0.8.0\r\ntyping_extensions @ file:///C:/b/abs_a1bb332wcs/croot/typing_extensions_1681939523095/work\r\ntzdata==2023.3\r\ntzlocal==4.3\r\nunstructured==0.6.2\r\nuritemplate==4.1.1\r\nurllib3 @ file:///C:/b/abs_3ce53vrdcr/croot/urllib3_1680254693505/work\r\nuvicorn==0.22.0\r\nvalidators==0.20.0\r\nwatchdog==3.0.0\r\nwatchfiles==0.19.0\r\nwcwidth @ file:///Users/ktietz/demo/mc3/conda-bld/wcwidth_1629357192024/work\r\nwebencodings==0.5.1\r\nwebsocket-client @ file:///C:/ci_311/websocket-client_1676426063281/work\r\nwebsockets==11.0.2\r\nwidgetsnbextension @ file:///C:/b/abs_882k4_4kdf/croot/widgetsnbextension_1679313880295/work\r\nwikipedia==1.4.0\r\nwin-inet-pton @ file:///C:/ci_311/win_inet_pton_1676425458225/work\r\nwrapt==1.14.1\r\nXlsxWriter==3.1.0\r\nyarl==1.9.2\r\nzipp==3.15.0\r\nzstandard==0.21.0\r\n\n\n### Who can help?\n\n@vowelparrot \r\n\r\nI have created a toolkit from chroma documents. I have also created a custom tool. \r\n\r\nI want to create a vectorstoreinfo from my custom tool so I can use this tool in vectorstoreagent.\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\nfrom langchain.agents.agent_toolkits import (\r\n    create_vectorstore_agent,\r\n    VectorStoreToolkit,\r\n    VectorStoreInfo,\r\n)\r\nvectorstore_info = VectorStoreInfo(\r\n    name=\" tax queries\",\r\n    description=\"tax related documents\",\r\n    vectorstore=db_store\r\n)\r\ntoolkit = VectorStoreToolkit(vectorstore_info=vectorstore_info)\r\nagent_executor = create_vectorstore_agent(\r\n    llm=llm,\r\n    toolkit=toolkit,\r\n    verbose=True\r\n)\r\n```\r\n\r\n\n\n### Expected behavior\n\nI have created a custom tool \r\n```\r\ndef evaluate expression:\r\n       ans = \"expression\"\r\n      return ans\r\n\r\ntool = Tool(\r\n        name = \"Expression Evaluator\",\r\n        func=evaluate_expression,\r\n        description= \"useful for when you need output expression. \r\n    )\r\n```\r\n\r\nPlease, inform How can I create a vectorstoreinfo using this tool and add in a toolkit so I can use this tool in vectorstoreagent.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4980/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4980/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4979",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4979/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4979/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4979/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4979",
        "id": 1717123160,
        "node_id": "PR_kwDOIPDwls5Q4sI2",
        "number": 4979,
        "title": "Fixed multi input prompt for MapReduceChain",
        "user": {
            "login": "imeckr",
            "id": 7942293,
            "node_id": "MDQ6VXNlcjc5NDIyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7942293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/imeckr",
            "html_url": "https://github.com/imeckr",
            "followers_url": "https://api.github.com/users/imeckr/followers",
            "following_url": "https://api.github.com/users/imeckr/following{/other_user}",
            "gists_url": "https://api.github.com/users/imeckr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/imeckr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/imeckr/subscriptions",
            "organizations_url": "https://api.github.com/users/imeckr/orgs",
            "repos_url": "https://api.github.com/users/imeckr/repos",
            "events_url": "https://api.github.com/users/imeckr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/imeckr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-19T11:51:25Z",
        "updated_at": "2023-06-03T21:41:04Z",
        "closed_at": "2023-06-03T21:41:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4979",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4979",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4979.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4979.patch",
            "merged_at": "2023-06-03T21:41:04Z"
        },
        "body": "# Fixed multi input prompt for MapReduceChain\r\n\r\nAdded `kwargs` support for inner chains of `MapReduceChain` via `from_params` method\r\nCurrently the `from_method` method of intialising `MapReduceChain` chain doesn't work if prompt has multiple inputs. It happens because it uses `StuffDocumentsChain` and `MapReduceDocumentsChain` underneath, both of them require specifying `document_variable_name` if `prompt` of their `llm_chain` has more than one `input`.\r\n\r\nWith this PR, I have added support for passing their respective `kwargs` via the `from_params` method.\r\n\r\n## Fixes https://github.com/hwchase17/langchain/issues/4752\r\n\r\n## Who can review? \r\n@dev2049 @hwchase17 @agola11",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4979/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4979/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4978",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4978/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4978/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4978/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4978",
        "id": 1717115621,
        "node_id": "PR_kwDOIPDwls5Q4qfg",
        "number": 4978,
        "title": "Added `kwargs` support for intermediate chains of `MapReduceChain` via `from_params` method",
        "user": {
            "login": "imeckr",
            "id": 7942293,
            "node_id": "MDQ6VXNlcjc5NDIyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7942293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/imeckr",
            "html_url": "https://github.com/imeckr",
            "followers_url": "https://api.github.com/users/imeckr/followers",
            "following_url": "https://api.github.com/users/imeckr/following{/other_user}",
            "gists_url": "https://api.github.com/users/imeckr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/imeckr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/imeckr/subscriptions",
            "organizations_url": "https://api.github.com/users/imeckr/orgs",
            "repos_url": "https://api.github.com/users/imeckr/repos",
            "events_url": "https://api.github.com/users/imeckr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/imeckr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-19T11:45:17Z",
        "updated_at": "2023-05-19T11:49:02Z",
        "closed_at": "2023-05-19T11:49:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4978",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4978",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4978.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4978.patch",
            "merged_at": null
        },
        "body": "# Added `kwargs` support for inner chains of `MapReduceChain` via `from_params` method\r\n\r\nCurrently the `from_method` method of intialising `MapReduceChain` chain doesn't work if prompt has multiple inputs. It happens because it uses `StuffDocumentsChain` and `MapReduceDocumentsChain` underneath, both of them require specifying `document_variable_name` if `prompt` of their `llm_chain` has more than one `input`.\r\n\r\nWith this PR, I have added support for passing their respective `kwargs` via the `from_params` method.\r\n\r\n## Who can review? \r\n@dev2049 @hwchase17 @agola11",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4978/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4978/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4977",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4977/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4977/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4977/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4977",
        "id": 1717108430,
        "node_id": "I_kwDOIPDwls5mWP7O",
        "number": 4977,
        "title": "QAGenerateChain cannot be loaded",
        "user": {
            "login": "liangz1",
            "id": 7851093,
            "node_id": "MDQ6VXNlcjc4NTEwOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7851093?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liangz1",
            "html_url": "https://github.com/liangz1",
            "followers_url": "https://api.github.com/users/liangz1/followers",
            "following_url": "https://api.github.com/users/liangz1/following{/other_user}",
            "gists_url": "https://api.github.com/users/liangz1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liangz1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liangz1/subscriptions",
            "organizations_url": "https://api.github.com/users/liangz1/orgs",
            "repos_url": "https://api.github.com/users/liangz1/repos",
            "events_url": "https://api.github.com/users/liangz1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liangz1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-19T11:38:43Z",
        "updated_at": "2023-05-21T22:56:09Z",
        "closed_at": "2023-05-21T22:56:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.173\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [X] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.evaluation.qa import QAGenerateChain\r\nfrom langchain.chains.loading import load_chain\r\n\r\nexample_gen_chain = QAGenerateChain.from_llm(OpenAI())\r\nexample_gen_chain.save(\"/Users/liang.zhang/qa_gen_chain.yaml\")\r\n\r\nloaded_chain = load_chain(\"/Users/liang.zhang/qa_gen_chain.yaml\")\r\n```\r\nError:\r\n```\r\n---------------------------------------------------------------------------\r\nValidationError                           Traceback (most recent call last)\r\nInput In [13], in <cell line: 2>()\r\n      1 from langchain.chains.loading import load_chain\r\n----> 2 loaded_chain = load_chain(\"/Users/liang.zhang/qa_gen_chain.yaml\")\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/langchain/chains/loading.py:449, in load_chain(path, **kwargs)\r\n    447     return hub_result\r\n    448 else:\r\n--> 449     return _load_chain_from_file(path, **kwargs)\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/langchain/chains/loading.py:476, in _load_chain_from_file(file, **kwargs)\r\n    473     config[\"memory\"] = kwargs.pop(\"memory\")\r\n    475 # Load the chain from the config now.\r\n--> 476 return load_chain_from_config(config, **kwargs)\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/langchain/chains/loading.py:439, in load_chain_from_config(config, **kwargs)\r\n    436     raise ValueError(f\"Loading {config_type} chain not supported\")\r\n    438 chain_loader = type_to_loader_dict[config_type]\r\n--> 439 return chain_loader(config, **kwargs)\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/langchain/chains/loading.py:44, in _load_llm_chain(config, **kwargs)\r\n     42 if \"prompt\" in config:\r\n     43     prompt_config = config.pop(\"prompt\")\r\n---> 44     prompt = load_prompt_from_config(prompt_config)\r\n     45 elif \"prompt_path\" in config:\r\n     46     prompt = load_prompt(config.pop(\"prompt_path\"))\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/langchain/prompts/loading.py:30, in load_prompt_from_config(config)\r\n     27     raise ValueError(f\"Loading {config_type} prompt not supported\")\r\n     29 prompt_loader = type_to_loader_dict[config_type]\r\n---> 30 return prompt_loader(config)\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/langchain/prompts/loading.py:115, in _load_prompt(config)\r\n    113 config = _load_template(\"template\", config)\r\n    114 config = _load_output_parser(config)\r\n--> 115 return PromptTemplate(**config)\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/pydantic/main.py:342, in pydantic.main.BaseModel.__init__()\r\n\r\nValidationError: 1 validation error for PromptTemplate\r\noutput_parser\r\n  Can't instantiate abstract class BaseOutputParser with abstract methods parse (type=type_error)\r\n\r\n```\n\n### Expected behavior\n\nNo errors should occur.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4977/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4977/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4975",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4975/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4975/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4975/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4975",
        "id": 1717046200,
        "node_id": "I_kwDOIPDwls5mWAu4",
        "number": 4975,
        "title": "consider introduce ToT approch in langchain\ud83d\udc31\ud83d\udc31",
        "user": {
            "login": "rickerliang",
            "id": 7065227,
            "node_id": "MDQ6VXNlcjcwNjUyMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7065227?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickerliang",
            "html_url": "https://github.com/rickerliang",
            "followers_url": "https://api.github.com/users/rickerliang/followers",
            "following_url": "https://api.github.com/users/rickerliang/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickerliang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickerliang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickerliang/subscriptions",
            "organizations_url": "https://api.github.com/users/rickerliang/orgs",
            "repos_url": "https://api.github.com/users/rickerliang/repos",
            "events_url": "https://api.github.com/users/rickerliang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickerliang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 23,
        "created_at": "2023-05-19T10:50:30Z",
        "updated_at": "2023-08-17T20:58:11Z",
        "closed_at": "2023-08-17T20:58:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nhttps://arxiv.org/pdf/2305.10601.pdf\r\n\n\n### Motivation\n\nLanguage models are increasingly being deployed for general problem-solving across a wide range of tasks, but are still confined to token-level, left-to-right decision-making processes during inference. This means they can fall short in tasks that require exploration, strategic lookahead, or where initial decisions play a pivotal role. To surmount these challenges, there is a new framework for language model inference, \u201cTree of Thoughts\u201d (ToT), which generalizes over the popular \u201cChain of Thought\u201d approach to prompting language models and enables exploration over coherent units of text (\u201cthoughts\u201d) that serve as intermediate steps toward problem-solving. ToT allows LMs to perform deliberate decision-making by considering multiple different reasoning paths and self-evaluating choices to decide the next course of action, as well as looking ahead or backtracking when necessary to make global choices.\n\n### Your contribution\n\nmaybe, not sure\ud83d\ude25",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4975/reactions",
            "total_count": 55,
            "+1": 51,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 4,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4975/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4974",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4974/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4974/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4974/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4974",
        "id": 1717032053,
        "node_id": "I_kwDOIPDwls5mV9R1",
        "number": 4974,
        "title": "Issue: openapi-schema-pydantic vulnerability",
        "user": {
            "login": "trover97",
            "id": 53858027,
            "node_id": "MDQ6VXNlcjUzODU4MDI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/53858027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trover97",
            "html_url": "https://github.com/trover97",
            "followers_url": "https://api.github.com/users/trover97/followers",
            "following_url": "https://api.github.com/users/trover97/following{/other_user}",
            "gists_url": "https://api.github.com/users/trover97/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trover97/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trover97/subscriptions",
            "organizations_url": "https://api.github.com/users/trover97/orgs",
            "repos_url": "https://api.github.com/users/trover97/repos",
            "events_url": "https://api.github.com/users/trover97/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trover97/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-19T10:39:37Z",
        "updated_at": "2023-10-27T19:24:30Z",
        "closed_at": "2023-10-27T19:22:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi!\r\nCan you change the version of pydantic in the dependencies? There is a vulnerability in this version, because it depends on pydantic. I can't install new versions of langchain because they don't pass the security check on my PC.\r\nhttps://github.com/kuimono/openapi-schema-pydantic/issues/31\r\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-29510\n\n### Suggestion:\n\nRemove openapi-schema-pydantic from dependency?!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4974/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4974/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4972",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4972/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4972/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4972/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4972",
        "id": 1716866155,
        "node_id": "I_kwDOIPDwls5mVUxr",
        "number": 4972,
        "title": "SupabaseVectorStore ValueError in .as_retriever(search_type=\"mmr\").get_relevant_documents() ",
        "user": {
            "login": "limcheekin",
            "id": 88172,
            "node_id": "MDQ6VXNlcjg4MTcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/88172?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/limcheekin",
            "html_url": "https://github.com/limcheekin",
            "followers_url": "https://api.github.com/users/limcheekin/followers",
            "following_url": "https://api.github.com/users/limcheekin/following{/other_user}",
            "gists_url": "https://api.github.com/users/limcheekin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/limcheekin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/limcheekin/subscriptions",
            "organizations_url": "https://api.github.com/users/limcheekin/orgs",
            "repos_url": "https://api.github.com/users/limcheekin/repos",
            "events_url": "https://api.github.com/users/limcheekin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/limcheekin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-19T08:38:01Z",
        "updated_at": "2023-05-19T09:03:00Z",
        "closed_at": "2023-05-19T09:03:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain version: 0.0.173\r\nPlatform: Ubuntu 22.04.2 LTS\r\nPython: 3.10.6\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nFirstly, you can reproduce the errors using the following jupyter notebook, assumed that you have all the dependencies setup:\r\nhttps://github.com/limcheekin/langchain-playground/blob/main/supabase.ipynb\r\n\r\nWhen running the following code:\r\n```\r\nretriever = vector_store.as_retriever(search_type=\"mmr\", search_kwargs={\"k\": 1})\r\ndocs = retriever.get_relevant_documents(\"What is Flutter?\")\r\n```\r\nIt return the following errors, you can see the complete errors thread at cell 6 from the notebook above:\r\n```\r\nValueError: Number of columns in X and Y must be the same. X has shape (1, 768) and Y has shape (20, 0).\r\n```\r\n\r\n### Expected behavior\r\n\r\nIt should return 1 doc which similar to the documentation at https://python.langchain.com/en/latest/modules/indexes/vectorstores/examples/supabase.html#maximal-marginal-relevance-searches",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4972/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4972/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4971",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4971/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4971/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4971/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4971",
        "id": 1716771835,
        "node_id": "PR_kwDOIPDwls5Q3fyd",
        "number": 4971,
        "title": "Update python.py",
        "user": {
            "login": "pengwork",
            "id": 31396670,
            "node_id": "MDQ6VXNlcjMxMzk2Njcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/31396670?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pengwork",
            "html_url": "https://github.com/pengwork",
            "followers_url": "https://api.github.com/users/pengwork/followers",
            "following_url": "https://api.github.com/users/pengwork/following{/other_user}",
            "gists_url": "https://api.github.com/users/pengwork/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pengwork/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pengwork/subscriptions",
            "organizations_url": "https://api.github.com/users/pengwork/orgs",
            "repos_url": "https://api.github.com/users/pengwork/repos",
            "events_url": "https://api.github.com/users/pengwork/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pengwork/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-19T07:22:28Z",
        "updated_at": "2023-05-19T20:57:23Z",
        "closed_at": "2023-05-19T20:57:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4971",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4971",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4971.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4971.patch",
            "merged_at": "2023-05-19T20:57:16Z"
        },
        "body": "# Delete a useless \"print\" \r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4971/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4971/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4970",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4970/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4970/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4970/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4970",
        "id": 1716760427,
        "node_id": "PR_kwDOIPDwls5Q3dY6",
        "number": 4970,
        "title": "Update azure_openai_example.ipynb",
        "user": {
            "login": "N-E-W-T-O-N",
            "id": 38786893,
            "node_id": "MDQ6VXNlcjM4Nzg2ODkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/38786893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/N-E-W-T-O-N",
            "html_url": "https://github.com/N-E-W-T-O-N",
            "followers_url": "https://api.github.com/users/N-E-W-T-O-N/followers",
            "following_url": "https://api.github.com/users/N-E-W-T-O-N/following{/other_user}",
            "gists_url": "https://api.github.com/users/N-E-W-T-O-N/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/N-E-W-T-O-N/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/N-E-W-T-O-N/subscriptions",
            "organizations_url": "https://api.github.com/users/N-E-W-T-O-N/orgs",
            "repos_url": "https://api.github.com/users/N-E-W-T-O-N/repos",
            "events_url": "https://api.github.com/users/N-E-W-T-O-N/events{/privacy}",
            "received_events_url": "https://api.github.com/users/N-E-W-T-O-N/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-19T07:12:30Z",
        "updated_at": "2023-06-03T21:36:28Z",
        "closed_at": "2023-06-03T21:36:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4970",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4970",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4970.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4970.patch",
            "merged_at": "2023-06-03T21:36:28Z"
        },
        "body": "Updated API version\r\n\r\nUpdated azure-api-version to current one.\r\n\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n   \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4970/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4970/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4969",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4969/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4969/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4969/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4969",
        "id": 1716721197,
        "node_id": "PR_kwDOIPDwls5Q3Usz",
        "number": 4969,
        "title": "preserve language in conversation retrieval",
        "user": {
            "login": "hansvdam",
            "id": 2060172,
            "node_id": "MDQ6VXNlcjIwNjAxNzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2060172?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hansvdam",
            "html_url": "https://github.com/hansvdam",
            "followers_url": "https://api.github.com/users/hansvdam/followers",
            "following_url": "https://api.github.com/users/hansvdam/following{/other_user}",
            "gists_url": "https://api.github.com/users/hansvdam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hansvdam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hansvdam/subscriptions",
            "organizations_url": "https://api.github.com/users/hansvdam/orgs",
            "repos_url": "https://api.github.com/users/hansvdam/repos",
            "events_url": "https://api.github.com/users/hansvdam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hansvdam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-19T06:43:47Z",
        "updated_at": "2023-05-22T04:16:04Z",
        "closed_at": "2023-05-22T04:16:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4969",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4969",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4969.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4969.patch",
            "merged_at": "2023-05-22T04:16:04Z"
        },
        "body": "Without the addition of 'in its original language', the condensing response, more often than not, outputs the rephrased question in English, even when the conversation is in another language. This question in English then transfers to the question in the retrieval prompt and the chatbot is stuck in English.\r\n\r\nI'm sometimes surprised that this does not happen more often, but apparently the GPT models are smart enough to understand that when the template contains\r\n\r\nQuestion: ....\r\nAnswer:\r\n\r\nthen the answer should be in in the language of the question.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4969/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4969/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]