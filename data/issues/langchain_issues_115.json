[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2294",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2294/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2294/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2294/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2294",
        "id": 1650862077,
        "node_id": "I_kwDOIPDwls5iZif9",
        "number": 2294,
        "title": "how can I config angchain.llms.OpenAI like openai",
        "user": {
            "login": "oashua",
            "id": 58935410,
            "node_id": "MDQ6VXNlcjU4OTM1NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/58935410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oashua",
            "html_url": "https://github.com/oashua",
            "followers_url": "https://api.github.com/users/oashua/followers",
            "following_url": "https://api.github.com/users/oashua/following{/other_user}",
            "gists_url": "https://api.github.com/users/oashua/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oashua/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oashua/subscriptions",
            "organizations_url": "https://api.github.com/users/oashua/orgs",
            "repos_url": "https://api.github.com/users/oashua/repos",
            "events_url": "https://api.github.com/users/oashua/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oashua/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-02T08:40:01Z",
        "updated_at": "2023-09-10T16:38:50Z",
        "closed_at": "2023-09-10T16:38:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "if i create a llm by `llm=OpenAI()`, how can i set params  `organization, api_base`  and so on like in package `openai`? many thanks.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2294/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 3
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2294/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2293",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2293/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2293/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2293/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2293",
        "id": 1650848020,
        "node_id": "PR_kwDOIPDwls5NbYC1",
        "number": 2293,
        "title": "Add Anthropic ChatModel to langchain",
        "user": {
            "login": "mikelambert",
            "id": 7953259,
            "node_id": "MDQ6VXNlcjc5NTMyNTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7953259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikelambert",
            "html_url": "https://github.com/mikelambert",
            "followers_url": "https://api.github.com/users/mikelambert/followers",
            "following_url": "https://api.github.com/users/mikelambert/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikelambert/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikelambert/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikelambert/subscriptions",
            "organizations_url": "https://api.github.com/users/mikelambert/orgs",
            "repos_url": "https://api.github.com/users/mikelambert/repos",
            "events_url": "https://api.github.com/users/mikelambert/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikelambert/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-02T07:46:31Z",
        "updated_at": "2023-04-14T22:09:08Z",
        "closed_at": "2023-04-14T22:09:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2293",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2293",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2293.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2293.patch",
            "merged_at": "2023-04-14T22:09:08Z"
        },
        "body": "* Adds an Anthropic ChatModel\r\n* Factors out common code in our LLMModel and ChatModel\r\n* Supports streaming  llm-tokens to the callbacks on a delta basis (until a future V2 API does that for us)\r\n* Some fixes",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2293/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2293/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2292",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2292/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2292/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2292/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2292",
        "id": 1650846478,
        "node_id": "I_kwDOIPDwls5iZesO",
        "number": 2292,
        "title": "temperature not work in ChatOpenAI",
        "user": {
            "login": "slovx2",
            "id": 2713715,
            "node_id": "MDQ6VXNlcjI3MTM3MTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2713715?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/slovx2",
            "html_url": "https://github.com/slovx2",
            "followers_url": "https://api.github.com/users/slovx2/followers",
            "following_url": "https://api.github.com/users/slovx2/following{/other_user}",
            "gists_url": "https://api.github.com/users/slovx2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/slovx2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/slovx2/subscriptions",
            "organizations_url": "https://api.github.com/users/slovx2/orgs",
            "repos_url": "https://api.github.com/users/slovx2/repos",
            "events_url": "https://api.github.com/users/slovx2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/slovx2/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-02T07:40:03Z",
        "updated_at": "2023-06-27T09:08:11Z",
        "closed_at": "2023-06-27T09:08:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "This code not work\r\n`llm = ChatOpenAI(temperature=0)`\r\n\r\n It seems that Temperature has not been added to the **kwargs of the request In ChatOpenAI\r\n\r\nAnd this code is working fine\r\n`llm = ChatOpenAI(model_kwargs={'temperature': 0})`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2292/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2292/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2291",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2291/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2291/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2291/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2291",
        "id": 1650839428,
        "node_id": "PR_kwDOIPDwls5NbWcs",
        "number": 2291,
        "title": "Introduces SeleniumURLLoader for JavaScript-Dependent Web Page Data Retrieval",
        "user": {
            "login": "Ynng",
            "id": 44907675,
            "node_id": "MDQ6VXNlcjQ0OTA3Njc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/44907675?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ynng",
            "html_url": "https://github.com/Ynng",
            "followers_url": "https://api.github.com/users/Ynng/followers",
            "following_url": "https://api.github.com/users/Ynng/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ynng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ynng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ynng/subscriptions",
            "organizations_url": "https://api.github.com/users/Ynng/orgs",
            "repos_url": "https://api.github.com/users/Ynng/repos",
            "events_url": "https://api.github.com/users/Ynng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ynng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-02T07:09:35Z",
        "updated_at": "2023-04-08T19:12:37Z",
        "closed_at": "2023-04-02T21:05:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2291",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2291",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2291.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2291.patch",
            "merged_at": "2023-04-02T21:05:00Z"
        },
        "body": "### Summary\r\nThis PR introduces a `SeleniumURLLoader` which, similar to `UnstructuredURLLoader`, loads data from URLs. However, it utilizes `selenium` to fetch page content, enabling it to work with JavaScript-rendered pages. The `unstructured` library is also employed for loading the HTML content.\r\n\r\n### Testing\r\n```bash\r\npip install selenium\r\npip install unstructured\r\n```\r\n\r\n```python\r\nfrom langchain.document_loaders import SeleniumURLLoader\r\n\r\nurls = [\r\n    \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\",\r\n    \"https://goo.gl/maps/NDSHwePEyaHMFGwh8\"\r\n]\r\n\r\nloader = SeleniumURLLoader(urls=urls)\r\ndata = loader.load()\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2291/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2291/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2290",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2290/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2290/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2290/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2290",
        "id": 1650809868,
        "node_id": "PR_kwDOIPDwls5NbQtt",
        "number": 2290,
        "title": "Prevented memory leaks by optimizing conversation history storage",
        "user": {
            "login": "fritzprix",
            "id": 917899,
            "node_id": "MDQ6VXNlcjkxNzg5OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/917899?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fritzprix",
            "html_url": "https://github.com/fritzprix",
            "followers_url": "https://api.github.com/users/fritzprix/followers",
            "following_url": "https://api.github.com/users/fritzprix/following{/other_user}",
            "gists_url": "https://api.github.com/users/fritzprix/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fritzprix/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fritzprix/subscriptions",
            "organizations_url": "https://api.github.com/users/fritzprix/orgs",
            "repos_url": "https://api.github.com/users/fritzprix/repos",
            "events_url": "https://api.github.com/users/fritzprix/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fritzprix/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-02T05:14:39Z",
        "updated_at": "2023-04-07T10:43:50Z",
        "closed_at": "2023-04-07T10:43:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2290",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2290",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2290.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2290.patch",
            "merged_at": null
        },
        "body": "Hi there! I noticed that the previous conversation history can exceed the buffer size (`self.k * 2`), and messages that exceed the buffer can potentially cause a memory leak. To prevent this issue, I made some modifications to the code that allow us to store the conversation history while avoiding the possibility of memory leaks. I hope this helps improve the performance and reliability of the code. Thank you!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2290/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2290/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2289",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2289/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2289/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2289/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2289",
        "id": 1650804547,
        "node_id": "I_kwDOIPDwls5iZUdD",
        "number": 2289,
        "title": "In chains with multiple sub-chains, Is there a way to pass the initial input as an argument to all subsequent chains?",
        "user": {
            "login": "aravinthmuthu",
            "id": 17089804,
            "node_id": "MDQ6VXNlcjE3MDg5ODA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/17089804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aravinthmuthu",
            "html_url": "https://github.com/aravinthmuthu",
            "followers_url": "https://api.github.com/users/aravinthmuthu/followers",
            "following_url": "https://api.github.com/users/aravinthmuthu/following{/other_user}",
            "gists_url": "https://api.github.com/users/aravinthmuthu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aravinthmuthu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aravinthmuthu/subscriptions",
            "organizations_url": "https://api.github.com/users/aravinthmuthu/orgs",
            "repos_url": "https://api.github.com/users/aravinthmuthu/repos",
            "events_url": "https://api.github.com/users/aravinthmuthu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aravinthmuthu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-02T04:47:26Z",
        "updated_at": "2023-04-02T05:04:53Z",
        "closed_at": "2023-04-02T05:04:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "1) In chains with multiple sub-chains, Is there a way to pass the initial input as an argument to all subsequent chains?\r\n2) Can we assign variable names to outputs of chains and use them in subsequent chains?\r\n\r\nI am trying to get additional information from an article using preprocess_chain. I would like to send the original article and the additional information to an analysis_chain. \r\n\r\n```\r\n# Chain1 : To get additional info about an article\r\npreprocess_template = \"\"\"Given the article. Derive additional info\r\n% Article\r\n{article}\r\n\r\nYOUR RESPONSE:\r\n\"\"\"\r\nprompt_template2 = PromptTemplate(input_variables=[\"article\"], template=stakeholder_template)\r\npreprocess_chain = LLMChain(llm=llm, prompt=prompt_template1)\r\n\r\n#Chain2: Would like to pass both original article and response of chain1 to chain2\r\nanalysis_template = \"\"\"Analyse the article in context of additional Info.\r\n% Article\r\n{article}           ### Need help adding this variable here\r\n\r\n% Additional info\r\n{additionalInfo}\r\n\r\nYOUR RESPONSE:\r\n\"\"\"\r\nprompt_template2 = PromptTemplate(input_variables=[\"article\",\"additionalInfo\"], template=stakeholder_template)\r\nanalysis_chain = LLMChain(llm=llm, prompt=prompt_template2)\r\n\r\noverall_chain = SimpleSequentialChain(chains=[preprocess_chain,analysis_chain], verbose=True)\r\noverall_chain.run(articleText)\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2289/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2289/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2288",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2288/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2288/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2288/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2288",
        "id": 1650795950,
        "node_id": "PR_kwDOIPDwls5NbOGW",
        "number": 2288,
        "title": "Add Zilliz example",
        "user": {
            "login": "fzliu",
            "id": 6334158,
            "node_id": "MDQ6VXNlcjYzMzQxNTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6334158?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fzliu",
            "html_url": "https://github.com/fzliu",
            "followers_url": "https://api.github.com/users/fzliu/followers",
            "following_url": "https://api.github.com/users/fzliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/fzliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fzliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fzliu/subscriptions",
            "organizations_url": "https://api.github.com/users/fzliu/orgs",
            "repos_url": "https://api.github.com/users/fzliu/repos",
            "events_url": "https://api.github.com/users/fzliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fzliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-02T04:00:30Z",
        "updated_at": "2023-04-02T20:38:21Z",
        "closed_at": "2023-04-02T20:38:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2288",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2288",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2288.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2288.patch",
            "merged_at": "2023-04-02T20:38:20Z"
        },
        "body": "Add Zilliz example",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2288/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2288/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2287",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2287/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2287/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2287/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2287",
        "id": 1650784160,
        "node_id": "PR_kwDOIPDwls5NbL1-",
        "number": 2287,
        "title": "Modify output for wikipedia api wrapper",
        "user": {
            "login": "akmhmgc",
            "id": 38002468,
            "node_id": "MDQ6VXNlcjM4MDAyNDY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/38002468?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akmhmgc",
            "html_url": "https://github.com/akmhmgc",
            "followers_url": "https://api.github.com/users/akmhmgc/followers",
            "following_url": "https://api.github.com/users/akmhmgc/following{/other_user}",
            "gists_url": "https://api.github.com/users/akmhmgc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akmhmgc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akmhmgc/subscriptions",
            "organizations_url": "https://api.github.com/users/akmhmgc/orgs",
            "repos_url": "https://api.github.com/users/akmhmgc/repos",
            "events_url": "https://api.github.com/users/akmhmgc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akmhmgc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-02T02:59:08Z",
        "updated_at": "2023-04-02T21:00:27Z",
        "closed_at": "2023-04-02T21:00:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2287",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2287",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2287.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2287.patch",
            "merged_at": "2023-04-02T21:00:27Z"
        },
        "body": "## Description\r\nThanks for the quick maintenance for great repository!!\r\nI modified wikipedia api wrapper\r\n\r\n## Details\r\n- Add output for missing search results\r\n- Add tests\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2287/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2287/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2286",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2286/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2286/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2286/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2286",
        "id": 1650766257,
        "node_id": "I_kwDOIPDwls5iZLGx",
        "number": 2286,
        "title": "Agent not loading tools from ZapierToolkit ",
        "user": {
            "login": "haritiruna",
            "id": 4934455,
            "node_id": "MDQ6VXNlcjQ5MzQ0NTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4934455?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/haritiruna",
            "html_url": "https://github.com/haritiruna",
            "followers_url": "https://api.github.com/users/haritiruna/followers",
            "following_url": "https://api.github.com/users/haritiruna/following{/other_user}",
            "gists_url": "https://api.github.com/users/haritiruna/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/haritiruna/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/haritiruna/subscriptions",
            "organizations_url": "https://api.github.com/users/haritiruna/orgs",
            "repos_url": "https://api.github.com/users/haritiruna/repos",
            "events_url": "https://api.github.com/users/haritiruna/events{/privacy}",
            "received_events_url": "https://api.github.com/users/haritiruna/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-02T01:29:17Z",
        "updated_at": "2023-09-18T16:21:39Z",
        "closed_at": "2023-09-18T16:21:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm trying to replicate the Zapier agent example [here](https://python.langchain.com/en/latest/modules/agents/tools/examples/zapier.html?highlight=zapier), but the agent doesn't find the right tools even though I've created the relevant Zapier NLA actions in my account.\r\n\r\nWhen I run:\r\n`agent.run(\"Summarize the last email I received regarding Silicon Valley Bank. Send the summary to the #test-zapier channel in slack.\")`\r\n\r\nExpected output:\r\n```\r\n> Entering new AgentExecutor chain...\r\n I need to find the email and summarize it.\r\nAction: Gmail: Find Email\r\nAction Input: Find the latest email from Silicon Valley Bank\r\nObservation: {\"from__name\": \"Silicon Valley Bridge Bank, N.A.\", \"from__email\": \"sreply@svb.com\", \"body_plain\": \"Dear Clients, After chaotic, tumultuous & stressful days, we have clarity on path for SVB, FDIC is fully insuring all deposits & have an ask for clients & partners as we rebuild. Tim Mayopoulos <https://eml.svb.com/NjEwLUtBSy0yNjYAAAGKgoxUeBCLAyF_NxON97X4rKEaNBLG\", \"reply_to__email\": \"sreply@svb.com\", \"subject\": \"Meet the new CEO Tim Mayopoulos\", \"date\": \"Tue, 14 Mar 2023 23:42:29 -0500 (CDT)\", \"message_url\": \"https://mail.google.com/mail/u/0/#inbox/186e393b13cfdf0a\", \"attachment_count\": \"0\", \"to__emails\": \"ankush@langchain.dev\", \"message_id\": \"186e393b13cfdf0a\", \"labels\": \"IMPORTANT, CATEGORY_UPDATES, INBOX\"}\r\nThought: I need to summarize the email and send it to the #test-zapier channel in Slack.\r\nAction: Slack: Send Channel Message\r\nAction Input: Send a slack message to the #test-zapier channel with the text \"Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild.\"\r\nObservation: {\"message__text\": \"Silicon Valley Bank has announced that Tim Mayopoulos is the new CEO. FDIC is fully insuring all deposits and they have an ask for clients and partners as they rebuild.\", \"message__permalink\": \"https://langchain.slack.com/archives/C04TSGU0RA7/p1678859932375259\", \"channel\": \"C04TSGU0RA7\", \"message__bot_profile__name\": \"Zapier\", \"message__team\": \"T04F8K3FZB5\", \"message__bot_id\": \"B04TRV4R74K\", \"message__bot_profile__deleted\": \"false\", \"message__bot_profile__app_id\": \"A024R9PQM\", \"ts_time\": \"2023-03-15T05:58:52Z\", \"message__bot_profile__icons__image_36\": \"https://avatars.slack-edge.com/2022-08-02/3888649620612_f864dc1bb794cf7d82b0_36.png\", \"message__blocks[]block_id\": \"kdZZ\", \"message__blocks[]elements[]type\": \"['rich_text_section']\"}\r\nThought: I now know the final answer.\r\nFinal Answer: I have sent a summary of the last email from Silicon Valley Bank to the #test-zapier channel in Slack.\r\n\r\n> Finished chain.\r\n```\r\n\r\nMy output:\r\n```\r\n> Entering new AgentExecutor chain...\r\n I need to read the email and summarize it in a way that is concise and informative.\r\nAction: Read the email\r\nAction Input: Last email received regarding Silicon Valley Bank\r\nObservation: Read the email is not a valid tool, try another one.\r\nThought: I need to use a tool that will allow me to quickly summarize the email.\r\nAction: Use a summarization tool\r\nAction Input: Last email received regarding Silicon Valley Bank\r\nObservation: Use a summarization tool is not a valid tool, try another one.\r\nThought: I need to use a tool that will allow me to quickly summarize the email and post it to the #test-zapier channel in Slack.\r\n...\r\n```\r\n\r\nI tried to print the tools from the toolkit, but none are found.\r\n```\r\nfor tool in toolkit.get_tools():\r\n    print (tool.name)\r\n    print (tool.description)\r\n    print (\"\\n\\n\")\r\n```\r\n\r\nI have version 0.0.129 of langchain installed (which is the latest as of today). Any ideas why the agent is not picking up any Zapier tools?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2286/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2286/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2285",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2285/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2285/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2285/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2285",
        "id": 1650724703,
        "node_id": "PR_kwDOIPDwls5Na_qU",
        "number": 2285,
        "title": "\ud83d\udc1b fix: missing kwargs in from_agent_and_tools in dataframe agent",
        "user": {
            "login": "MohammedAlhajji",
            "id": 91945586,
            "node_id": "U_kgDOBXr6cg",
            "avatar_url": "https://avatars.githubusercontent.com/u/91945586?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MohammedAlhajji",
            "html_url": "https://github.com/MohammedAlhajji",
            "followers_url": "https://api.github.com/users/MohammedAlhajji/followers",
            "following_url": "https://api.github.com/users/MohammedAlhajji/following{/other_user}",
            "gists_url": "https://api.github.com/users/MohammedAlhajji/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MohammedAlhajji/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MohammedAlhajji/subscriptions",
            "organizations_url": "https://api.github.com/users/MohammedAlhajji/orgs",
            "repos_url": "https://api.github.com/users/MohammedAlhajji/repos",
            "events_url": "https://api.github.com/users/MohammedAlhajji/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MohammedAlhajji/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-01T23:08:14Z",
        "updated_at": "2023-04-03T21:26:04Z",
        "closed_at": "2023-04-03T21:26:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2285",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2285",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2285.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2285.patch",
            "merged_at": "2023-04-03T21:26:03Z"
        },
        "body": "Hello! \r\nI've noticed a bug in `create_pandas_dataframe_agent`. When calling it with argument `return_intermediate_steps=True`, it doesn't return the intermediate step. I think the issue is that `kwargs` was not passed where it needed to be passed. It should be passed into `AgentExecutor.from_agent_and_tools`\r\n\r\nPlease correct me if my solution isn't appropriate and I will fix with the appropriate approach.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2285/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2285/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2284",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2284/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2284/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2284/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2284",
        "id": 1650698780,
        "node_id": "I_kwDOIPDwls5iY6oc",
        "number": 2284,
        "title": "ReAct vs MRKL",
        "user": {
            "login": "clayoneil",
            "id": 117665148,
            "node_id": "U_kgDOBwNtfA",
            "avatar_url": "https://avatars.githubusercontent.com/u/117665148?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/clayoneil",
            "html_url": "https://github.com/clayoneil",
            "followers_url": "https://api.github.com/users/clayoneil/followers",
            "following_url": "https://api.github.com/users/clayoneil/following{/other_user}",
            "gists_url": "https://api.github.com/users/clayoneil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/clayoneil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clayoneil/subscriptions",
            "organizations_url": "https://api.github.com/users/clayoneil/orgs",
            "repos_url": "https://api.github.com/users/clayoneil/repos",
            "events_url": "https://api.github.com/users/clayoneil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/clayoneil/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-01T22:44:51Z",
        "updated_at": "2023-09-29T16:09:21Z",
        "closed_at": "2023-09-29T16:09:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Sorry if this is a dumb question:\r\n\r\nWhy is the ZeroShotAgent called \"zero-shot-react-description\" instead of \"zero-shot-mrkl-description\" or something like that? It is implemented to follow the MRKL design, not the reAct design. I am misunderstanding something?\r\n\r\n\r\nHere is the code:\r\n\r\n```\r\nAGENT_TO_CLASS = {\r\n    \"zero-shot-react-description\": ZeroShotAgent,\r\n    \"react-docstore\": ReActDocstoreAgent,\r\n    \"self-ask-with-search\": SelfAskWithSearchAgent,\r\n    \"conversational-react-description\": ConversationalAgent,\r\n    \"chat-zero-shot-react-description\": ChatAgent,\r\n    \"chat-conversational-react-description\": ConversationalChatAgent,\r\n}\r\n```\r\n\r\npermalink: https://github.com/hwchase17/langchain/blob/acfda4d1d8b3cd98de381ff58ba7fd6b91c6c204/langchain/agents/loading.py#L21",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2284/reactions",
            "total_count": 12,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 5,
            "rocket": 0,
            "eyes": 7
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2284/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2283",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2283/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2283/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2283/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2283",
        "id": 1650690120,
        "node_id": "PR_kwDOIPDwls5Na3o6",
        "number": 2283,
        "title": "Awstextract Text Extraction",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-01T22:30:29Z",
        "updated_at": "2023-04-11T04:17:24Z",
        "closed_at": "2023-04-11T04:17:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2283",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2283",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2283.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2283.patch",
            "merged_at": "2023-04-11T04:17:23Z"
        },
        "body": "Added aws texract extraction python file to the document loader module . This will help in extracting  images text with aws texract service.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2283/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2283/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2282",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2282/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2282/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2282/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2282",
        "id": 1650648539,
        "node_id": "I_kwDOIPDwls5iYuXb",
        "number": 2282,
        "title": "RegexParser pattern \"(.*?)\\nScore: (.*)\" is not reliable",
        "user": {
            "login": "provVladBurlik",
            "id": 93543976,
            "node_id": "U_kgDOBZNeKA",
            "avatar_url": "https://avatars.githubusercontent.com/u/93543976?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/provVladBurlik",
            "html_url": "https://github.com/provVladBurlik",
            "followers_url": "https://api.github.com/users/provVladBurlik/followers",
            "following_url": "https://api.github.com/users/provVladBurlik/following{/other_user}",
            "gists_url": "https://api.github.com/users/provVladBurlik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/provVladBurlik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/provVladBurlik/subscriptions",
            "organizations_url": "https://api.github.com/users/provVladBurlik/orgs",
            "repos_url": "https://api.github.com/users/provVladBurlik/repos",
            "events_url": "https://api.github.com/users/provVladBurlik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/provVladBurlik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-01T20:46:38Z",
        "updated_at": "2023-08-25T16:16:06Z",
        "closed_at": "2023-08-25T16:13:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "LLM response is parsed with `RegexParser  `with the pattern `\"(.*?)\\nScore: (.*)\"` which is not reliable. In some instances the `Score `is missing or present without newline `\"\\n\"`\r\nThis leads to \r\n`ValueError: Could not parse output: ....`\r\n\r\nUpdate:\r\n`\"Answer:\"` in some cases is missing too\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2282/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2282/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2281",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2281/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2281/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2281/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2281",
        "id": 1650622021,
        "node_id": "PR_kwDOIPDwls5NapEv",
        "number": 2281,
        "title": "bump version to 129",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-01T19:55:39Z",
        "updated_at": "2023-04-01T22:04:39Z",
        "closed_at": "2023-04-01T22:04:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2281",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2281",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2281.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2281.patch",
            "merged_at": "2023-04-01T22:04:39Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2281/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2281/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2280",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2280/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2280/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2280/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2280",
        "id": 1650618753,
        "node_id": "PR_kwDOIPDwls5NaoYl",
        "number": 2280,
        "title": "Harrison/multiline commands",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-01T19:48:08Z",
        "updated_at": "2023-04-01T19:55:22Z",
        "closed_at": "2023-04-01T19:54:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2280",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2280",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2280.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2280.patch",
            "merged_at": "2023-04-01T19:54:07Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2280/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2280/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2279",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2279/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2279/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2279/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2279",
        "id": 1650616976,
        "node_id": "PR_kwDOIPDwls5NaoCA",
        "number": 2279,
        "title": "Gitbook enhancements",
        "user": {
            "login": "alexiri",
            "id": 5055697,
            "node_id": "MDQ6VXNlcjUwNTU2OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5055697?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexiri",
            "html_url": "https://github.com/alexiri",
            "followers_url": "https://api.github.com/users/alexiri/followers",
            "following_url": "https://api.github.com/users/alexiri/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexiri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexiri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexiri/subscriptions",
            "organizations_url": "https://api.github.com/users/alexiri/orgs",
            "repos_url": "https://api.github.com/users/alexiri/repos",
            "events_url": "https://api.github.com/users/alexiri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexiri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-01T19:42:26Z",
        "updated_at": "2023-04-07T05:55:14Z",
        "closed_at": "2023-04-07T05:55:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2279",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2279",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2279.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2279.patch",
            "merged_at": "2023-04-07T05:55:08Z"
        },
        "body": "The gitbook importer had some issues while trying to ingest a particular site, these commits allowed it to work as expected. The last commit (06017ff) is to open the door to extending this class for other documentation formats (which will come in a future PR).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2279/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2279/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2278",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2278/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2278/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2278/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2278",
        "id": 1650610152,
        "node_id": "PR_kwDOIPDwls5NamsJ",
        "number": 2278,
        "title": "Update apis.md",
        "user": {
            "login": "oldsj",
            "id": 12104969,
            "node_id": "MDQ6VXNlcjEyMTA0OTY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/12104969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oldsj",
            "html_url": "https://github.com/oldsj",
            "followers_url": "https://api.github.com/users/oldsj/followers",
            "following_url": "https://api.github.com/users/oldsj/following{/other_user}",
            "gists_url": "https://api.github.com/users/oldsj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oldsj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oldsj/subscriptions",
            "organizations_url": "https://api.github.com/users/oldsj/orgs",
            "repos_url": "https://api.github.com/users/oldsj/repos",
            "events_url": "https://api.github.com/users/oldsj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oldsj/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-01T19:22:32Z",
        "updated_at": "2023-04-01T19:48:16Z",
        "closed_at": "2023-04-01T19:48:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2278",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2278",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2278.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2278.patch",
            "merged_at": "2023-04-01T19:48:16Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2278/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2278/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2277",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2277/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2277/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2277/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2277",
        "id": 1650597393,
        "node_id": "I_kwDOIPDwls5iYh4R",
        "number": 2277,
        "title": "Kindly add support for  databricks-sql-connector (databricks library) via sqlalchemy in langchain",
        "user": {
            "login": "kf-himpunetha",
            "id": 84923079,
            "node_id": "MDQ6VXNlcjg0OTIzMDc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/84923079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kf-himpunetha",
            "html_url": "https://github.com/kf-himpunetha",
            "followers_url": "https://api.github.com/users/kf-himpunetha/followers",
            "following_url": "https://api.github.com/users/kf-himpunetha/following{/other_user}",
            "gists_url": "https://api.github.com/users/kf-himpunetha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kf-himpunetha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kf-himpunetha/subscriptions",
            "organizations_url": "https://api.github.com/users/kf-himpunetha/orgs",
            "repos_url": "https://api.github.com/users/kf-himpunetha/repos",
            "events_url": "https://api.github.com/users/kf-himpunetha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kf-himpunetha/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-01T18:45:35Z",
        "updated_at": "2023-08-11T16:31:54Z",
        "closed_at": "2023-08-11T16:31:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am getting some issues while trying to connect from langchain to databricks via sqlalchemy.\r\nIt works fine when I connect directly via sqlalchemy.\r\n\r\nI think the issue is  in the below lines\r\nhttps://github.com/hwchase17/langchain/blob/09f94642543b23d7c9db81aa15ef54a1b6e13840/langchain/sql_database.py#L32-L33\r\n\r\nthe variable self._include_tables in line 33 is is set with values after calling get_table_names function (in line 32) which in turn uses self._include_tables and hence it will have None value at that time which causes some errors for databricks connection.\r\n\r\n![image](https://user-images.githubusercontent.com/84923079/229308813-5adfb74d-8961-4369-b609-2f33802b898f.png)\r\n\r\nThere are few more such issues while connecting to databricks using langchain and  databricks-sql-connector library. It works fine with just sqlalchemy and  databricks-sql-connector. \r\nCould you add support for databricks?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2277/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2277/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2276",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2276/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2276/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2276/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2276",
        "id": 1650596807,
        "node_id": "I_kwDOIPDwls5iYhvH",
        "number": 2276,
        "title": "Exception when Conversation Agent doesn't receive json output",
        "user": {
            "login": "alexiri",
            "id": 5055697,
            "node_id": "MDQ6VXNlcjUwNTU2OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5055697?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexiri",
            "html_url": "https://github.com/alexiri",
            "followers_url": "https://api.github.com/users/alexiri/followers",
            "following_url": "https://api.github.com/users/alexiri/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexiri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexiri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexiri/subscriptions",
            "organizations_url": "https://api.github.com/users/alexiri/orgs",
            "repos_url": "https://api.github.com/users/alexiri/repos",
            "events_url": "https://api.github.com/users/alexiri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexiri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-04-01T18:43:07Z",
        "updated_at": "2023-10-16T16:09:00Z",
        "closed_at": "2023-10-16T16:08:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "I'm trying to create a conversation agent essentially defined like this:\r\n\r\n```python\r\ntools = load_tools([]) # \"wikipedia\"])\r\n\r\nllm = ChatOpenAI(model_name=MODEL, verbose=True)\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\n\r\nagent = initialize_agent(tools, llm,\r\n    agent=\"chat-conversational-react-description\",\r\n    max_iterations=3,\r\n    early_stopping_method=\"generate\",\r\n    memory=memory,\r\n    verbose=True)\r\n```\r\n\r\nThe agent raises an exception after it tries to use an invalid tool.\r\n\r\n```\r\nQuestion: My name is James and I'm helping Will. He's an engineer.\r\n\r\n\r\n> Entering new AgentExecutor chain...\r\n{\r\n    \"action\": \"Final Answer\",\r\n    \"action_input\": \"Hello James, nice to meet you! How can I assist you and Will today?\"\r\n}\r\n\r\n> Finished chain.\r\nAnswer: Hello James, nice to meet you! How can I assist you and Will today?\r\nQuestion: What do you know about Will?\r\n\r\n\r\n> Entering new AgentExecutor chain...\r\n{\r\n    \"action\": \"recommend_tool\",\r\n    \"action_input\": \"I recommend searching for information on Will on LinkedIn, which is a professional networking site. It may have his work experience, education and other professional details.\"\r\n}\r\nObservation: recommend_tool is not a valid tool, try another one.\r\nThought:Traceback (most recent call last):\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/agents/conversational_chat/base.py\", line 106, in _extract_tool_and_input\r\n    response = self.output_parser.parse(llm_output)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/agents/conversational_chat/base.py\", line 51, in parse\r\n    response = json.loads(cleaned_output)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/json/__init__.py\", line 346, in loads\r\n    return _default_decoder.decode(s)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/json/decoder.py\", line 337, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/json/decoder.py\", line 355, in raw_decode\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/src/app/main.py\", line 93, in <module>\r\n    ask(question)\r\n  File \"/usr/src/app/main.py\", line 76, in ask\r\n    result = agent.run(question)\r\n             ^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/chains/base.py\", line 213, in run\r\n    return self(args[0])[self.output_keys[0]]\r\n           ^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/chains/base.py\", line 116, in __call__\r\n    raise e\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/chains/base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n              ^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/agents/agent.py\", line 632, in _call\r\n    next_step_output = self._take_next_step(\r\n                       ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/agents/agent.py\", line 548, in _take_next_step\r\n    output = self.agent.plan(intermediate_steps, **inputs)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/agents/agent.py\", line 281, in plan\r\n    action = self._get_next_action(full_inputs)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/agents/agent.py\", line 243, in _get_next_action\r\n    parsed_output = self._extract_tool_and_input(full_output)\r\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/agents/conversational_chat/base.py\", line 109, in _extract_tool_and_input\r\n    raise ValueError(f\"Could not parse LLM output: {llm_output}\")\r\nValueError: Could not parse LLM output: My apologies, allow me to clarify my previous response:\r\n\r\n{\r\n    \"action\": \"recommend_tool\",\r\n    \"action_input\": \"I recommend using a professional social network which can provide informative details on Will's professional background and accomplishments.\"\r\n} \r\n\r\nYou can try searching for information on platforms such as LinkedIn or XING to start.\r\n>>>\r\n```\r\n\r\nPerhaps this is because there are no tools defined? This may be somewhat related to #2241, which is also a parsing error.\r\n\r\nMy real goal here was trying to test the agent's memory, but if I defined wikipedia as a tool, the agent would try to search for Will in wikipedia and respond with facts about some random Will. How can I get this to work?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2276/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2276/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2275",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2275/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2275/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2275/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2275",
        "id": 1650578015,
        "node_id": "PR_kwDOIPDwls5NagKQ",
        "number": 2275,
        "title": "Add ability to pass kwargs to loader classes in `DirectoryLoader`, add ability to modify encoding and BeautifulSoup behaviour in `BSHTMLLoader`",
        "user": {
            "login": "samuelwcm",
            "id": 74786574,
            "node_id": "MDQ6VXNlcjc0Nzg2NTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/74786574?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/samuelwcm",
            "html_url": "https://github.com/samuelwcm",
            "followers_url": "https://api.github.com/users/samuelwcm/followers",
            "following_url": "https://api.github.com/users/samuelwcm/following{/other_user}",
            "gists_url": "https://api.github.com/users/samuelwcm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/samuelwcm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/samuelwcm/subscriptions",
            "organizations_url": "https://api.github.com/users/samuelwcm/orgs",
            "repos_url": "https://api.github.com/users/samuelwcm/repos",
            "events_url": "https://api.github.com/users/samuelwcm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/samuelwcm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-01T17:54:02Z",
        "updated_at": "2023-04-03T13:30:41Z",
        "closed_at": "2023-04-01T19:48:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2275",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2275",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2275.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2275.patch",
            "merged_at": "2023-04-01T19:48:27Z"
        },
        "body": "Solves #2247. Noted that the only test I added checks for the BeautifulSoup behaviour change. Happy to add a test for `DirectoryLoader` if deemed necessary.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2275/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2275/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2274",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2274/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2274/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2274/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2274",
        "id": 1650567180,
        "node_id": "I_kwDOIPDwls5iYagM",
        "number": 2274,
        "title": "MongoDB Atlas Search Support",
        "user": {
            "login": "nathanclevenger",
            "id": 4130910,
            "node_id": "MDQ6VXNlcjQxMzA5MTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4130910?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nathanclevenger",
            "html_url": "https://github.com/nathanclevenger",
            "followers_url": "https://api.github.com/users/nathanclevenger/followers",
            "following_url": "https://api.github.com/users/nathanclevenger/following{/other_user}",
            "gists_url": "https://api.github.com/users/nathanclevenger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nathanclevenger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nathanclevenger/subscriptions",
            "organizations_url": "https://api.github.com/users/nathanclevenger/orgs",
            "repos_url": "https://api.github.com/users/nathanclevenger/repos",
            "events_url": "https://api.github.com/users/nathanclevenger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nathanclevenger/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-04-01T17:15:15Z",
        "updated_at": "2023-09-27T16:10:39Z",
        "closed_at": "2023-09-27T16:10:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "It appears that MongoDB Atlas Search supports Vector Search via the `kNNBeta` operator:\r\n\r\n- https://github.com/esteininger/vector-search/blob/master/foundations/atlas-vector-search/Atlas_Vector_Search_Demonstration.ipynb\r\n- https://www.mongodb.com/docs/atlas/atlas-search/knn-beta/\r\n\r\nIs there anyone else that is working with or exploring MongoDB as a Vectorstore?   \r\n\r\nIf not, @hwchase17, would you be open to a pull-request?\r\n\r\ncc: @sam-lippert and @AggressivelyMeows",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2274/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2274/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2273",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2273/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2273/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2273/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2273",
        "id": 1650565569,
        "node_id": "PR_kwDOIPDwls5Nadwn",
        "number": 2273,
        "title": "Fixed Python repl for ChatGPT multiline commands",
        "user": {
            "login": "mpaepper",
            "id": 4135790,
            "node_id": "MDQ6VXNlcjQxMzU3OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4135790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mpaepper",
            "html_url": "https://github.com/mpaepper",
            "followers_url": "https://api.github.com/users/mpaepper/followers",
            "following_url": "https://api.github.com/users/mpaepper/following{/other_user}",
            "gists_url": "https://api.github.com/users/mpaepper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mpaepper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mpaepper/subscriptions",
            "organizations_url": "https://api.github.com/users/mpaepper/orgs",
            "repos_url": "https://api.github.com/users/mpaepper/repos",
            "events_url": "https://api.github.com/users/mpaepper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mpaepper/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-01T17:10:10Z",
        "updated_at": "2023-04-01T19:41:37Z",
        "closed_at": "2023-04-01T19:41:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2273",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2273",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2273.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2273.patch",
            "merged_at": "2023-04-01T19:41:37Z"
        },
        "body": "ChatGPT outputs multiline commands like this:\r\n\r\n\"\"\"\r\n```\r\ndef multiply():\r\n    print(5*6)\r\nmultiply()\r\n```\r\n\"\"\"\r\n\r\nwhich is a string that contains three times ` around the code.\r\n\r\nThis leads to the output SyntaxError because of the ```.\r\n\r\nWhen these ``` are removed, the output is properly calculated and returned\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2273/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2273/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2271",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2271/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2271/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2271/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2271",
        "id": 1650503405,
        "node_id": "PR_kwDOIPDwls5NaRno",
        "number": 2271,
        "title": "feat: category support for SearxSearchWrapper",
        "user": {
            "login": "AlexW00",
            "id": 55558407,
            "node_id": "MDQ6VXNlcjU1NTU4NDA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/55558407?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlexW00",
            "html_url": "https://github.com/AlexW00",
            "followers_url": "https://api.github.com/users/AlexW00/followers",
            "following_url": "https://api.github.com/users/AlexW00/following{/other_user}",
            "gists_url": "https://api.github.com/users/AlexW00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AlexW00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AlexW00/subscriptions",
            "organizations_url": "https://api.github.com/users/AlexW00/orgs",
            "repos_url": "https://api.github.com/users/AlexW00/repos",
            "events_url": "https://api.github.com/users/AlexW00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AlexW00/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-01T14:39:38Z",
        "updated_at": "2023-04-02T21:05:22Z",
        "closed_at": "2023-04-02T21:05:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2271",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2271",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2271.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2271.patch",
            "merged_at": "2023-04-02T21:05:21Z"
        },
        "body": "Added an optional parameter \"categories\" to specify the active search categories.\r\nAPI: https://docs.searxng.org/dev/search_api.html",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2271/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2271/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2270",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2270/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2270/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2270/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2270",
        "id": 1650427171,
        "node_id": "PR_kwDOIPDwls5NaCLA",
        "number": 2270,
        "title": "feat(tools): `PythonAstREPLTool` handles variants of python code more robustly",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-01T11:12:48Z",
        "updated_at": "2023-11-03T22:52:49Z",
        "closed_at": "2023-11-03T22:52:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2270",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2270",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2270.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2270.patch",
            "merged_at": null
        },
        "body": "We can't do something similar for non ast version. So this is best effort.\r\n\r\nPart of: https://github.com/hwchase17/langchain/issues/586\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2270/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2270/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2269",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2269/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2269/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2269/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2269",
        "id": 1650414523,
        "node_id": "PR_kwDOIPDwls5NZ_0c",
        "number": 2269,
        "title": "Update simple typo in llm_bash md",
        "user": {
            "login": "abdullamatar",
            "id": 76493346,
            "node_id": "MDQ6VXNlcjc2NDkzMzQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/76493346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abdullamatar",
            "html_url": "https://github.com/abdullamatar",
            "followers_url": "https://api.github.com/users/abdullamatar/followers",
            "following_url": "https://api.github.com/users/abdullamatar/following{/other_user}",
            "gists_url": "https://api.github.com/users/abdullamatar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abdullamatar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abdullamatar/subscriptions",
            "organizations_url": "https://api.github.com/users/abdullamatar/orgs",
            "repos_url": "https://api.github.com/users/abdullamatar/repos",
            "events_url": "https://api.github.com/users/abdullamatar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abdullamatar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-01T10:48:03Z",
        "updated_at": "2023-04-01T15:56:55Z",
        "closed_at": "2023-04-01T15:56:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2269",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2269",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2269.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2269.patch",
            "merged_at": "2023-04-01T15:56:55Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2269/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2269/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2268",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2268/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2268/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2268/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2268",
        "id": 1650390352,
        "node_id": "I_kwDOIPDwls5iXvVQ",
        "number": 2268,
        "title": "VectorStoreRetriever does not support async in 0.0.128",
        "user": {
            "login": "chrischjh",
            "id": 11455393,
            "node_id": "MDQ6VXNlcjExNDU1Mzkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/11455393?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrischjh",
            "html_url": "https://github.com/chrischjh",
            "followers_url": "https://api.github.com/users/chrischjh/followers",
            "following_url": "https://api.github.com/users/chrischjh/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrischjh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrischjh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrischjh/subscriptions",
            "organizations_url": "https://api.github.com/users/chrischjh/orgs",
            "repos_url": "https://api.github.com/users/chrischjh/repos",
            "events_url": "https://api.github.com/users/chrischjh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrischjh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-01T09:48:31Z",
        "updated_at": "2023-09-29T16:09:26Z",
        "closed_at": "2023-09-29T16:09:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I got this error in 0.0.127 and 0.0.128 version, and worked fine in previous versions. I'm using ConversationalRetrievalChain with PGVector.\r\n\r\n```\r\nPG_CONNECTION_STRING = PGVector.connection_string_from_db_params(\r\n    driver=os.environ.get(\"PGVECTOR_DRIVER\", \"psycopg2\"),\r\n    host=os.environ.get(\"PGVECTOR_HOST\", \"localhost\"),\r\n    port=int(os.environ.get(\"PGVECTOR_PORT\", \"5432\")),\r\n    database=os.environ.get(\"PGVECTOR_DATABASE\", \"vector\"),\r\n    user=os.environ.get(\"PGVECTOR_USER\", \"xxxx\"),\r\n    password=os.environ.get(\"PGVECTOR_PASSWORD\", \"xxxxxxxxxxxxx\"),\r\n)\r\n\r\nvectorstore = PGVector(\r\n    connection_string=PG_CONNECTION_STRING,\r\n    embedding_function=embeddings,\r\n    collection_name=\"langchain\"\r\n)\r\n\r\nmanager = AsyncCallbackManager([])\r\nquestion_manager = AsyncCallbackManager([question_handler])\r\nstream_manager = AsyncCallbackManager([stream_handler])\r\nif tracing:\r\n    tracer = LangChainTracer()\r\n    tracer.load_default_session()\r\n    manager.add_handler(tracer)\r\n    question_manager.add_handler(tracer)\r\n    stream_manager.add_handler(tracer)\r\n\r\nquestion_gen_llm = ChatOpenAI(\r\n    model_name=\"gpt-3.5-turbo\",\r\n    temperature=0,\r\n    verbose=True,\r\n    callback_manager=question_manager,\r\n)\r\nstreaming_llm = ChatOpenAI(\r\n    model_name=\"gpt-3.5-turbo\",\r\n    streaming=True,\r\n    callback_manager=stream_manager,\r\n    verbose=True,\r\n    temperature=0,\r\n)\r\n\r\nquestion_generator = LLMChain(\r\n    llm=question_gen_llm, prompt=CONDENSE_QUESTION_PROMPT, callback_manager=manager  \r\n)\r\ncombine_docs_chain = load_qa_chain(\r\n    streaming_llm, chain_type=\"stuff\", prompt=QA_PROMPT, callback_manager=manager \r\n)\r\n\r\nretriever = vectorstore.as_retriever()\r\n\r\nqa = ConversationalRetrievalChain(\r\n    retriever=retriever,\r\n    combine_docs_chain=combine_docs_chain,\r\n    question_generator=question_generator,\r\n    callback_manager=manager,\r\n)\r\n\r\n```\r\n\r\n```\r\nERROR:root:VectorStoreRetriever does not support async\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2268/reactions",
            "total_count": 11,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 7
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2268/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2267",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2267/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2267/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2267/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2267",
        "id": 1650381349,
        "node_id": "PR_kwDOIPDwls5NZ5-d",
        "number": 2267,
        "title": "Add wikipedia api example",
        "user": {
            "login": "akmhmgc",
            "id": 38002468,
            "node_id": "MDQ6VXNlcjM4MDAyNDY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/38002468?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akmhmgc",
            "html_url": "https://github.com/akmhmgc",
            "followers_url": "https://api.github.com/users/akmhmgc/followers",
            "following_url": "https://api.github.com/users/akmhmgc/following{/other_user}",
            "gists_url": "https://api.github.com/users/akmhmgc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akmhmgc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akmhmgc/subscriptions",
            "organizations_url": "https://api.github.com/users/akmhmgc/orgs",
            "repos_url": "https://api.github.com/users/akmhmgc/repos",
            "events_url": "https://api.github.com/users/akmhmgc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akmhmgc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-01T09:17:26Z",
        "updated_at": "2023-04-01T15:57:04Z",
        "closed_at": "2023-04-01T15:57:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2267",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2267",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2267.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2267.patch",
            "merged_at": "2023-04-01T15:57:04Z"
        },
        "body": "# description\r\nThanks for awesome repository!!\r\nI added  example for wikipedia api wrapper.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2267/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2267/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2266",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2266/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2266/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2266/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2266",
        "id": 1650366622,
        "node_id": "I_kwDOIPDwls5iXpie",
        "number": 2266,
        "title": "avoiding unnecessary imports in Python classes and functions using sys.modules",
        "user": {
            "login": "sergerdn",
            "id": 64213648,
            "node_id": "MDQ6VXNlcjY0MjEzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/64213648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sergerdn",
            "html_url": "https://github.com/sergerdn",
            "followers_url": "https://api.github.com/users/sergerdn/followers",
            "following_url": "https://api.github.com/users/sergerdn/following{/other_user}",
            "gists_url": "https://api.github.com/users/sergerdn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sergerdn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sergerdn/subscriptions",
            "organizations_url": "https://api.github.com/users/sergerdn/orgs",
            "repos_url": "https://api.github.com/users/sergerdn/repos",
            "events_url": "https://api.github.com/users/sergerdn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sergerdn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-01T08:36:52Z",
        "updated_at": "2023-08-25T16:13:15Z",
        "closed_at": "2023-08-25T16:13:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "**Any comments would be appreciated.**\r\n\r\nWhen an import statement is executed inside a function or object creation in Python, a new module object is created every time the function or object is called or instantiated, respectively. \r\n\r\nWe have multiple imports like that in many classes in a code base:\r\n\r\n```python\r\nclass Chroma(VectorStore):\r\n\t\r\n\r\n    def __init__(\r\n        self,\r\n        collection_name: str = _LANGCHAIN_DEFAULT_COLLECTION_NAME,\r\n        embedding_function: Optional[Embeddings] = None,\r\n        persist_directory: Optional[str] = None,\r\n        client_settings: Optional[chromadb.config.Settings] = None,\r\n    ) -> None:\r\n        \"\"\"Initialize with Chroma client.\"\"\"\r\n        try:\r\n            import chromadb\r\n            import chromadb.config\r\n        except ImportError:\r\n            raise ValueError(\r\n                \"Could not import chromadb python package. \"\r\n                \"Please install it with `pip install chromadb`.\"\r\n            )\r\n```\r\n\r\nIt's worth noting that these types of imports can also occur in other places of code, such as in the user's own code. So, if we have import in used code, we will have double import on object creation.\r\n\r\n```python\r\nimport logging\r\n\r\nimport chromadb  # importing chromadb\r\nfrom dotenv import load_dotenv\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Chroma\r\nlogging.basicConfig(level=logging.DEBUG)\r\n\r\n\r\ndef init_chromadb():\r\n    client_settings = chromadb.config.Settings(\r\n        chroma_db_impl=\"duckdb+parquet\",\r\n        anonymized_telemetry=False\r\n    )\r\n    embeddings = OpenAIEmbeddings()\r\n\r\n\r\n    # create an instance of the Chroma class\r\n    # importing chromadb will be fired again, which can cause performance issues\r\n    vectorstore = Chroma(\r\n        collection_name=\"langchain_store\",\r\n        embedding_function=embeddings,\r\n        client_settings=client_settings\r\n    )\r\n\r\n\r\ndef main():\r\n    init_chromadb()\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n\r\n```\r\n\r\nHere is an example of how we can modify the previous code to avoid multiple imports:\r\n```python\r\nimport sys\r\n\r\nclass Chroma(VectorStore):\r\n\t\r\n\r\n    def __init__(\r\n        self,\r\n        collection_name: str = _LANGCHAIN_DEFAULT_COLLECTION_NAME,\r\n        embedding_function: Optional[Embeddings] = None,\r\n        persist_directory: Optional[str] = None,\r\n        client_settings: Optional[chromadb.config.Settings] = None,\r\n    ) -> None:\r\n        \"\"\"Initialize with Chroma client.\"\"\"\r\n        if 'chromadb' not in sys.modules:\r\n            try:\r\n                import chromadb\r\n                import chromadb.config\r\n            except ImportError:\r\n                raise ValueError(\r\n                    \"Could not import chromadb python package. \"\r\n                    \"Please install it with `pip install chromadb`.\"\r\n                )\r\n```\r\n\r\nIn this modified version, we check if the 'chromadb' module has already been imported by checking its presence in the sys.modules dictionary. If it has not been imported, we import the module and its config sub-module as before. If it has been imported, we simply retrieve it from the sys.modules dictionary and assign it to the chromadb variable. This way, we can prevent multiple imports of the same module and improve the performance and memory usage of our code.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2266/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2266/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2265",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2265/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2265/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2265/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2265",
        "id": 1650366217,
        "node_id": "I_kwDOIPDwls5iXpcJ",
        "number": 2265,
        "title": "how to use TextSplitter for GPTSimpleVectorIndex",
        "user": {
            "login": "oashua",
            "id": 58935410,
            "node_id": "MDQ6VXNlcjU4OTM1NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/58935410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oashua",
            "html_url": "https://github.com/oashua",
            "followers_url": "https://api.github.com/users/oashua/followers",
            "following_url": "https://api.github.com/users/oashua/following{/other_user}",
            "gists_url": "https://api.github.com/users/oashua/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oashua/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oashua/subscriptions",
            "organizations_url": "https://api.github.com/users/oashua/orgs",
            "repos_url": "https://api.github.com/users/oashua/repos",
            "events_url": "https://api.github.com/users/oashua/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oashua/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-01T08:35:09Z",
        "updated_at": "2023-04-02T08:00:59Z",
        "closed_at": "2023-04-02T08:00:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "how can I use `TextSplitter` for `GPTSimpleVectorIndex` to split document by such \u201c\\n\u201d or/and other?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2265/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2265/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2264",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2264/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2264/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2264/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2264",
        "id": 1650359937,
        "node_id": "I_kwDOIPDwls5iXn6B",
        "number": 2264,
        "title": "Prompt engineering for ConversationalRetrievalChain",
        "user": {
            "login": "cwfparsonson",
            "id": 44027665,
            "node_id": "MDQ6VXNlcjQ0MDI3NjY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/44027665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cwfparsonson",
            "html_url": "https://github.com/cwfparsonson",
            "followers_url": "https://api.github.com/users/cwfparsonson/followers",
            "following_url": "https://api.github.com/users/cwfparsonson/following{/other_user}",
            "gists_url": "https://api.github.com/users/cwfparsonson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cwfparsonson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cwfparsonson/subscriptions",
            "organizations_url": "https://api.github.com/users/cwfparsonson/orgs",
            "repos_url": "https://api.github.com/users/cwfparsonson/repos",
            "events_url": "https://api.github.com/users/cwfparsonson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cwfparsonson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-01T08:10:59Z",
        "updated_at": "2023-09-26T16:11:58Z",
        "closed_at": "2023-09-26T16:11:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Does anyone have an example of how to use `condense_question_prompt` and `qa_prompt` with `ConversationalRetrievalChain`? I have some information which I want to always be included in the context of a user's question (e.g. 'You are a bot whose name is Bob'), but this context information is seemingly lost when I ask a question (e.g. 'What is your name?').\r\n\r\nIf anyone has an example of how to include a pre-defined context in the prompt for `ConversationalRetrievalChain`, I would be extremely grateful!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2264/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2264/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2263",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2263/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2263/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2263/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2263",
        "id": 1650335296,
        "node_id": "PR_kwDOIPDwls5NZw3s",
        "number": 2263,
        "title": "feat(chain): Summarize long URL response for LLMRequestsChain",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-01T07:00:35Z",
        "updated_at": "2023-08-08T20:50:47Z",
        "closed_at": "2023-08-08T20:50:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2263",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2263",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2263.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2263.patch",
            "merged_at": null
        },
        "body": "Summarize long URL for LLMRequestsChain\r\n\r\nNot sure if should create a new example...\r\n\r\nCloses: https://github.com/hwchase17/langchain/issues/709",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2263/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2263/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2262",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2262/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2262/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2262/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2262",
        "id": 1650313544,
        "node_id": "I_kwDOIPDwls5iXclI",
        "number": 2262,
        "title": "MM-ReAct (Multimodal Reasoning and Action)",
        "user": {
            "login": "slavakurilyak",
            "id": 6625584,
            "node_id": "MDQ6VXNlcjY2MjU1ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6625584?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/slavakurilyak",
            "html_url": "https://github.com/slavakurilyak",
            "followers_url": "https://api.github.com/users/slavakurilyak/followers",
            "following_url": "https://api.github.com/users/slavakurilyak/following{/other_user}",
            "gists_url": "https://api.github.com/users/slavakurilyak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/slavakurilyak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/slavakurilyak/subscriptions",
            "organizations_url": "https://api.github.com/users/slavakurilyak/orgs",
            "repos_url": "https://api.github.com/users/slavakurilyak/repos",
            "events_url": "https://api.github.com/users/slavakurilyak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/slavakurilyak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-04-01T05:52:16Z",
        "updated_at": "2023-11-14T04:06:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "For GPT-4, image inputs are still in [limited alpha](https://openai.com/research/gpt-4#:~:text=image%20inputs%20are%20still%20in%20limited%20alpha). \r\n\r\nFor GPT-3.5, it would be great to see LangChain use the MM-ReAct agent.\r\n\r\n- Repo: [github.com/microsoft/MM-REACT](https://github.com/microsoft/MM-REACT)\r\n- Website: [multimodal-react.github.io](https://multimodal-react.github.io/)\r\n- Demo: [huggingface.co/spaces/microsoft-cognitive-service/mm-react](https://huggingface.co/spaces/microsoft-cognitive-service/mm-react)\r\n- Paper Abstract: [arxiv.org/abs/2303.11381](https://arxiv.org/abs/2303.11381)\r\n- Paper PDF: [arxiv.org/pdf/2303.11381.pdf](https://arxiv.org/pdf/2303.11381.pdf)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2262/reactions",
            "total_count": 8,
            "+1": 8,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2262/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2261",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2261/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2261/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2261/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2261",
        "id": 1650306640,
        "node_id": "I_kwDOIPDwls5iXa5Q",
        "number": 2261,
        "title": "Structured conversational memory: store query result (e.g. url response + metadata) directly into document store",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-01T05:25:31Z",
        "updated_at": "2023-08-25T16:13:20Z",
        "closed_at": "2023-08-25T16:13:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "This could improve the model's/langchain's awareness of the structured context surrounding an external source in its conversational memory.\r\n\r\nThe conversational memory document store can act as a buffer for all external sources.\r\n\r\nOriginal: https://github.com/hwchase17/langchain/issues/709#issuecomment-1492828239\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2261/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2261/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2260",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2260/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2260/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2260/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2260",
        "id": 1650297170,
        "node_id": "PR_kwDOIPDwls5NZpFc",
        "number": 2260,
        "title": "Add titles to metadatas in gdrive loader",
        "user": {
            "login": "patrickstorm",
            "id": 1664793,
            "node_id": "MDQ6VXNlcjE2NjQ3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1664793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/patrickstorm",
            "html_url": "https://github.com/patrickstorm",
            "followers_url": "https://api.github.com/users/patrickstorm/followers",
            "following_url": "https://api.github.com/users/patrickstorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/patrickstorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/patrickstorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/patrickstorm/subscriptions",
            "organizations_url": "https://api.github.com/users/patrickstorm/orgs",
            "repos_url": "https://api.github.com/users/patrickstorm/repos",
            "events_url": "https://api.github.com/users/patrickstorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/patrickstorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-01T04:58:45Z",
        "updated_at": "2023-04-01T15:43:34Z",
        "closed_at": "2023-04-01T15:43:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2260",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2260",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2260.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2260.patch",
            "merged_at": "2023-04-01T15:43:34Z"
        },
        "body": "I noticed the Googledrive loader does not have the \"title\" metadata for google docs and PDFs. This just adds that info to match the sheets.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2260/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2260/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2259",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2259/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2259/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2259/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2259",
        "id": 1650293522,
        "node_id": "I_kwDOIPDwls5iXXsS",
        "number": 2259,
        "title": "Add module for real-time search to improve engagement and intent satisfaction",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-01T04:49:22Z",
        "updated_at": "2023-08-25T16:13:25Z",
        "closed_at": "2023-08-25T16:13:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Real-time search-based planning has been shown to enhance the performance of AI agents:\r\n1. AlphaGo, MuZero (planning in games)\r\n2. Libratus, Pluribus (planning in Poker)\r\n3. Behavioural forecasting in self-driving (e.g. Waymo VectorNet)\r\n\r\nThe basic principle is that given some target objective, an agent (in this case conversational) can better account for their uncertainty about local choices by sampling future rollouts. Intuitively, we are deferring the evaluation of local choices to some external metric (e.g. the semi-supervised reward network).\r\n\r\nThe principle here is very similar to CoT or self-ask, in deferring reasoning into some self-reflexive output - except that we rely on some external metric. The external metric can also self reflexive - how many rounds of interaction to arrive at an answer which the model itself judges to appear satisfactory.\r\n\r\nHowever, the objective is to enable search over a much longer context, and many more rollouts than can be stored in a single context window in order to maximize long-horizon rewards. \r\n\r\n(Note that the proposal breaks the assumption that LLMs are good few-shot learners - in particular, it doubts the models' ability to consider alternatives as part of its inference - which may not be a good hypothesis, and may render this idea ineffective. However, we persist.)\r\n\r\nFor instance, when engaging a customer for sales acquisition, the model can be selective on its phrasing and its inclusion or omission of certain details based on which of its future conversation rollouts lead to (in it's own imagination) a better outcome - for instance, avoiding frustrated users, clarifying as opposed to assuming, thus more quickly arriving at a common understanding etc.\r\n\r\nWhile I believe there are parts to this problem that are research-level, I expect that a naive implementation on a base model that has already been exposed to human feedback can lead to some good results.\r\n\r\n---\r\n\r\nAdditional advantages:\r\n1. I think it would be a great tool to inspect how the model imagines its future conversations. It can be a great way to observe how it hallucinates its interlocutor's intent, the alternatives it considers, and additionally one can collect metrics like self-evaluation via CoT/self-ask along different paths, thus serving as a useful way to understand why it did or did not arrive at one's desired outcome\r\n\r\n---\r\n\r\nAdditional implementation details:\r\n1. Rollouts can be conditioned on the model's own output for alternatives for e.g. chain of thought reasoning, self-ask. The prompt goes: \"output 3-5 possible next steps in your reasoning\". Our system will simply sample each of those separately.\r\n\r\n--- \r\n\r\nDisadvantage:\r\n1. Potential high cost. \r\n   - Especially if samples are identical -> We can implement strategies that help improve path diversity.\r\n   - Cost should be weighed against improved qualitative result.\r\n2. Even slower than before.\r\n   - Latency increase is proportional to depth of the search tree. (branches can be run in parallel).\r\n   \r\nAdvantage:\r\n1. More concise results avoiding dead-end conversational branches, more able to anticipate user requests or ask clarifying questions.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2259/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2259/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2258",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2258/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2258/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2258/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2258",
        "id": 1650285248,
        "node_id": "I_kwDOIPDwls5iXVrA",
        "number": 2258,
        "title": "Introspection/Tracing: Use local models as a way to extract useful characterizations of data (input, intermediate, output) without external API call",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-01T04:14:06Z",
        "updated_at": "2023-08-25T16:13:31Z",
        "closed_at": "2023-08-25T16:13:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I think we could increase the integration of local models with some of the introspection tools, so that e.g. \r\n1. one could visualize/collect metrics on a large collection of search-augmented conversations with keywords extracted by a local model.\r\n2. others...?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2258/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2258/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2257",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2257/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2257/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2257/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2257",
        "id": 1650278293,
        "node_id": "I_kwDOIPDwls5iXT-V",
        "number": 2257,
        "title": "discussion: Combining strategies to overcome context-window limit",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-01T03:57:18Z",
        "updated_at": "2023-09-10T16:39:01Z",
        "closed_at": "2023-09-10T16:39:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "There are 2 ways to overcome context window limit:\r\n1. Store the outputs of old conversations back into the document store (similar to external memory), utilizing an external index (e.g. inverse document index) to query the documents\r\n2. Hierarchically compress a summary of conversation history, feeding it into future context windows\r\n\r\nNote that the two approaches are completely orthogonal.\r\n\r\nI believe 1. is implemented but I think that 2. can improve the the model's awareness of the relevancy of the document store\r\n\r\nThis issue is tracking the implementation of easy to use abstractions that:\r\n1. implements hierarchical compression (see also https://github.com/hwchase17/langchain/issues/709)\r\n2. combines these two approaches. \r\n   - For instance, having the document store itself have a hierarchical index involving summaries at different levels of granularity, to increase the model's ability to rank for relevancy in based on its own context rather than rely on an external ranking algorithm.\r\n   - Another simple interface is to allow for not only chunking an incoming document, but pre-summarizing it and returning some metadata (on e.g. the section titles, length) so that the model can decide whether it wants to ingest the entire document. Note that chunking already mitigates this issue to a degree, while metadata can implicitly provide the hierarchical structure.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2257/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2257/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2256",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2256/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2256/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2256/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2256",
        "id": 1650276231,
        "node_id": "I_kwDOIPDwls5iXTeH",
        "number": 2256,
        "title": "Memory not supported with sources chain?",
        "user": {
            "login": "jordanparker6",
            "id": 29700471,
            "node_id": "MDQ6VXNlcjI5NzAwNDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29700471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordanparker6",
            "html_url": "https://github.com/jordanparker6",
            "followers_url": "https://api.github.com/users/jordanparker6/followers",
            "following_url": "https://api.github.com/users/jordanparker6/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordanparker6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordanparker6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordanparker6/subscriptions",
            "organizations_url": "https://api.github.com/users/jordanparker6/orgs",
            "repos_url": "https://api.github.com/users/jordanparker6/repos",
            "events_url": "https://api.github.com/users/jordanparker6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordanparker6/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 26,
        "created_at": "2023-04-01T03:50:19Z",
        "updated_at": "2023-09-22T17:56:45Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Memory doesn't seem to be supported when using the 'sources' chains. It appears to have issues writing multiple output keys.\r\n\r\nIs there a work around to this?\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nCell In[13], line 1\r\n----> 1 chain({ \"question\": \"Do we have any agreements with INGRAM MICRO.\" }, return_only_outputs=True)\r\n\r\nFile [~/helpmefindlaw/search-service/.venv/lib/python3.10/site-packages/langchain/chains/base.py:118](https://file+.vscode-resource.vscode-cdn.net/Users/jordanparker/helpmefindlaw/search-service/examples/notebooks/~/helpmefindlaw/search-service/.venv/lib/python3.10/site-packages/langchain/chains/base.py:118), in Chain.__call__(self, inputs, return_only_outputs)\r\n    116     raise e\r\n    117 self.callback_manager.on_chain_end(outputs, verbose=self.verbose)\r\n--> 118 return self.prep_outputs(inputs, outputs, return_only_outputs)\r\n\r\nFile [~/helpmefindlaw/search-service/.venv/lib/python3.10/site-packages/langchain/chains/base.py:170](https://file+.vscode-resource.vscode-cdn.net/Users/jordanparker/helpmefindlaw/search-service/examples/notebooks/~/helpmefindlaw/search-service/.venv/lib/python3.10/site-packages/langchain/chains/base.py:170), in Chain.prep_outputs(self, inputs, outputs, return_only_outputs)\r\n    168 self._validate_outputs(outputs)\r\n    169 if self.memory is not None:\r\n--> 170     self.memory.save_context(inputs, outputs)\r\n    171 if return_only_outputs:\r\n    172     return outputs\r\n\r\nFile [~/helpmefindlaw/search-service/.venv/lib/python3.10/site-packages/langchain/memory/summary_buffer.py:59](https://file+.vscode-resource.vscode-cdn.net/Users/jordanparker/helpmefindlaw/search-service/examples/notebooks/~/helpmefindlaw/search-service/.venv/lib/python3.10/site-packages/langchain/memory/summary_buffer.py:59), in ConversationSummaryBufferMemory.save_context(self, inputs, outputs)\r\n     57 def save_context(self, inputs: Dict[str, Any], outputs: Dict[str, str]) -> None:\r\n     58     \"\"\"Save context from this conversation to buffer.\"\"\"\r\n---> 59     super().save_context(inputs, outputs)\r\n     60     # Prune buffer if it exceeds max token limit\r\n     61     buffer = self.chat_memory.messages\r\n\r\nFile [~/helpmefindlaw/search-service/.venv/lib/python3.10/site-packages/langchain/memory/chat_memory.py:37](https://file+.vscode-resource.vscode-cdn.net/Users/jordanparker/helpmefindlaw/search-service/examples/notebooks/~/helpmefindlaw/search-service/.venv/lib/python3.10/site-packages/langchain/memory/chat_memory.py:37), in BaseChatMemory.save_context(self, inputs, outputs)\r\n...\r\n---> 37         raise ValueError(f\"One output key expected, got {outputs.keys()}\")\r\n     38     output_key = list(outputs.keys())[0]\r\n     39 else:\r\n\r\nValueError: One output key expected, got dict_keys(['answer', 'sources'])\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2256/reactions",
            "total_count": 29,
            "+1": 24,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 5,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2256/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2255",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2255/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2255/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2255/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2255",
        "id": 1650268985,
        "node_id": "I_kwDOIPDwls5iXRs5",
        "number": 2255,
        "title": "Number of requested results 4 cannot be greater than number of elements in index 2",
        "user": {
            "login": "try-agaaain",
            "id": 52828870,
            "node_id": "MDQ6VXNlcjUyODI4ODcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/52828870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/try-agaaain",
            "html_url": "https://github.com/try-agaaain",
            "followers_url": "https://api.github.com/users/try-agaaain/followers",
            "following_url": "https://api.github.com/users/try-agaaain/following{/other_user}",
            "gists_url": "https://api.github.com/users/try-agaaain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/try-agaaain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/try-agaaain/subscriptions",
            "organizations_url": "https://api.github.com/users/try-agaaain/orgs",
            "repos_url": "https://api.github.com/users/try-agaaain/repos",
            "events_url": "https://api.github.com/users/try-agaaain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/try-agaaain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-04-01T03:18:44Z",
        "updated_at": "2023-11-03T14:15:32Z",
        "closed_at": "2023-04-01T15:08:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I write my code according to `docs/modules/chains/index_examples/vector_db_qa.ipynb`, but the following error happened:\r\n```console\r\nUsing embedded DuckDB without persistence: data will be transient\r\nTraceback (most recent call last):\r\n  File \"/home/todo/intership/GPTtrace/try.py\", line 76, in <module>\r\n    qa.run(query=query, k=1)\r\n  File \"/home/todo/anaconda3/envs/gpt/lib/python3.10/site-packages/langchain/chains/base.py\", line 216, in run\r\n    return self(kwargs)[self.output_keys[0]]\r\n  File \"/home/todo/anaconda3/envs/gpt/lib/python3.10/site-packages/langchain/chains/base.py\", line 116, in __call__\r\n    raise e\r\n  File \"/home/todo/anaconda3/envs/gpt/lib/python3.10/site-packages/langchain/chains/base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n  File \"/home/todo/anaconda3/envs/gpt/lib/python3.10/site-packages/langchain/chains/retrieval_qa/base.py\", line 109, in _call\r\n    docs = self._get_docs(question)\r\n  File \"/home/todo/anaconda3/envs/gpt/lib/python3.10/site-packages/langchain/chains/retrieval_qa/base.py\", line 163, in _get_docs\r\n    return self.retriever.get_relevant_documents(question)\r\n  File \"/home/todo/anaconda3/envs/gpt/lib/python3.10/site-packages/langchain/vectorstores/base.py\", line 154, in get_relevant_documents\r\n    docs = self.vectorstore.similarity_search(query, **self.search_kwargs)\r\n  File \"/home/todo/anaconda3/envs/gpt/lib/python3.10/site-packages/langchain/vectorstores/chroma.py\", line 136, in similarity_search\r\n    docs_and_scores = self.similarity_search_with_score(query, k, filter=filter)\r\n  File \"/home/todo/anaconda3/envs/gpt/lib/python3.10/site-packages/langchain/vectorstores/chroma.py\", line 182, in similarity_search_with_score\r\n    results = self._collection.query(\r\n  File \"/home/todo/anaconda3/envs/gpt/lib/python3.10/site-packages/chromadb/api/models/Collection.py\", line 203, in query\r\n    return self._client._query(\r\n  File \"/home/todo/anaconda3/envs/gpt/lib/python3.10/site-packages/chromadb/api/local.py\", line 247, in _query\r\n    uuids, distances = self._db.get_nearest_neighbors(\r\n  File \"/home/todo/anaconda3/envs/gpt/lib/python3.10/site-packages/chromadb/db/clickhouse.py\", line 521, in get_nearest_neighbors\r\n    uuids, distances = index.get_nearest_neighbors(embeddings, n_results, ids)\r\n  File \"/home/todo/anaconda3/envs/gpt/lib/python3.10/site-packages/chromadb/db/index/hnswlib.py\", line 228, in get_nearest_neighbors\r\n    raise NotEnoughElementsException(\r\nchromadb.errors.NotEnoughElementsException: Number of requested results 4 cannot be greater than number of elements in index 2\r\n```\r\n\r\nMy code is following:\r\n```python\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chains import RetrievalQA\r\nimport os\r\nos.environ['OPENAI_API_KEY']=\"sk-...\"\r\n\r\nfrom langchain.document_loaders import TextLoader\r\nloader = TextLoader(\"./prompts/text.txt\")\r\ndocuments = loader.load()\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\ntexts = text_splitter.split_documents(documents)\r\n\r\nembeddings = OpenAIEmbeddings()\r\ndocsearch = Chroma.from_documents(texts, embeddings)\r\n\r\nqa = RetrievalQA.from_chain_type(llm=OpenAI(), chain_type=\"stuff\", retriever=docsearch.as_retriever())\r\n\r\nquery = \"What did the president say about Ketanji Brown Jackson\"\r\nqa.run(query)\r\n```\r\n\r\nIt's seems relate to the content of text file passed to the `TextLoader`, when I pass the `langchain/docs/modules/state_of_the_union.txt`, It's can work well. It's very strange.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2255/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2255/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2254",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2254/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2254/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2254/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2254",
        "id": 1650265852,
        "node_id": "PR_kwDOIPDwls5NZiu_",
        "number": 2254,
        "title": "Expand requests tool into individual methods for load_tools",
        "user": {
            "login": "happilyeverafter95",
            "id": 32079152,
            "node_id": "MDQ6VXNlcjMyMDc5MTUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/32079152?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/happilyeverafter95",
            "html_url": "https://github.com/happilyeverafter95",
            "followers_url": "https://api.github.com/users/happilyeverafter95/followers",
            "following_url": "https://api.github.com/users/happilyeverafter95/following{/other_user}",
            "gists_url": "https://api.github.com/users/happilyeverafter95/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/happilyeverafter95/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/happilyeverafter95/subscriptions",
            "organizations_url": "https://api.github.com/users/happilyeverafter95/orgs",
            "repos_url": "https://api.github.com/users/happilyeverafter95/repos",
            "events_url": "https://api.github.com/users/happilyeverafter95/events{/privacy}",
            "received_events_url": "https://api.github.com/users/happilyeverafter95/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-01T03:05:45Z",
        "updated_at": "2023-04-03T22:59:52Z",
        "closed_at": "2023-04-03T22:59:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2254",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2254",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2254.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2254.patch",
            "merged_at": "2023-04-03T22:59:52Z"
        },
        "body": "### Motivation / Context\r\n\r\nWhen exploring `load_tools([\"requests\"] )`, I would have expected all request method tools to be imported instead of just `RequestsGetTool`.\r\n\r\n### Changes\r\n\r\nBreak `_get_requests` into multiple functions by request method. Each function returns the `BaseTool` for that particular request method.\r\n\r\nIn `load_tools`, if the tool name \"requests_all\" is encountered, we replace with all `_BASE_TOOLS` that starts with `requests_`. \r\n\r\nThis way, `load_tools([\"requests\"])` returns:\r\n- RequestsGetTool\r\n- RequestsPostTool\r\n- RequestsPatchTool\r\n- RequestsPutTool\r\n- RequestsDeleteTool",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2254/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2254/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2253",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2253/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2253/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2253/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2253",
        "id": 1650257839,
        "node_id": "PR_kwDOIPDwls5NZg9J",
        "number": 2253,
        "title": "Add AI21Embeddings class text embeddings",
        "user": {
            "login": "LaloLalo1999",
            "id": 6173685,
            "node_id": "MDQ6VXNlcjYxNzM2ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6173685?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LaloLalo1999",
            "html_url": "https://github.com/LaloLalo1999",
            "followers_url": "https://api.github.com/users/LaloLalo1999/followers",
            "following_url": "https://api.github.com/users/LaloLalo1999/following{/other_user}",
            "gists_url": "https://api.github.com/users/LaloLalo1999/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LaloLalo1999/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LaloLalo1999/subscriptions",
            "organizations_url": "https://api.github.com/users/LaloLalo1999/orgs",
            "repos_url": "https://api.github.com/users/LaloLalo1999/repos",
            "events_url": "https://api.github.com/users/LaloLalo1999/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LaloLalo1999/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-01T02:49:16Z",
        "updated_at": "2023-04-03T21:26:59Z",
        "closed_at": "2023-04-03T21:26:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2253",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2253",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2253.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2253.patch",
            "merged_at": "2023-04-03T21:26:59Z"
        },
        "body": "This pull request adds the AI21Embeddings class to the langchain/langchain/embeddings module, providing support for generating text embeddings using the AI21 language model. The new class offers a similar interface as the existing OpenAIEmbeddings class, making it easy to integrate into the existing codebase.\r\n\r\nThe AI21Embeddings class has the following main methods:\r\n\r\ngenerate_embeddings(texts, model): Generates embeddings for a list of texts using the specified AI21 model.\r\nget_similarity(text1, text2, model): Calculates the similarity between two texts using the specified AI21 model.\r\nThe implementation uses the AI21 Python SDK for interacting with the AI21 API and requires an API key for initialization. The class is designed to be flexible and easy to use, allowing users to switch between different AI21 models by simply providing the model name as an argument.\r\n\r\nThis PR addresses issue #85 and provides an alternative to the existing OpenAI-based text embeddings.\r\n\r\nPlease let me know if you have any questions or need further changes.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2253/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2253/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2252",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2252/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2252/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2252/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2252",
        "id": 1650226595,
        "node_id": "I_kwDOIPDwls5iXHWj",
        "number": 2252,
        "title": "Toolkits - Pandas Dataframe Agent failed to call \"python_repl_ast\" consistently",
        "user": {
            "login": "zhangjw71",
            "id": 12403922,
            "node_id": "MDQ6VXNlcjEyNDAzOTIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/12403922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhangjw71",
            "html_url": "https://github.com/zhangjw71",
            "followers_url": "https://api.github.com/users/zhangjw71/followers",
            "following_url": "https://api.github.com/users/zhangjw71/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhangjw71/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhangjw71/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhangjw71/subscriptions",
            "organizations_url": "https://api.github.com/users/zhangjw71/orgs",
            "repos_url": "https://api.github.com/users/zhangjw71/repos",
            "events_url": "https://api.github.com/users/zhangjw71/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhangjw71/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2023-04-01T01:14:39Z",
        "updated_at": "2023-11-03T14:48:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Please ask: how many rows\r\n\r\n> Entering new AgentExecutor chain...\r\nThought: I need to find the number of rows in the dataframe\r\n**Action: python_repl_ast**\r\nAction Input: len(df)\r\nObservation: 45\r\nThought:I have the number of rows\r\nFinal Answer: 45\r\n\r\n> Finished chain.\r\n45\r\n\r\n\r\n\r\nPlease ask: does fg-40f support local report\r\n\r\n\r\n> Entering new AgentExecutor chain...\r\nThought: We need to check if the \"FG-40F Series\" row has \"Yes\" in the \"Local Reporting\" column.\r\n**Action: Use pandas boolean indexing to filter the dataframe to only the \"FG-40F Series\" row and check the value in the \"Local Reporting\" column.**\r\nAction Input: `df[df['Product'] == 'FG-40F Series']['Local Reporting']`\r\nObservation: Use pandas boolean indexing to filter the dataframe to only the \"FG-40F Series\" row and check the value in the \"Local Reporting\" column. is not a valid tool, try another one.\r\nThought:I made a mistake, I should use python_repl_ast instead of Observation.\r\nAction: Use python_repl_ast to execute the previous input.\r\nAction Input: `python_repl_ast(df[df['Product'] == 'FG-40F Series']['Local Reporting'])`\r\nObservation: Use python_repl_ast to execute the previous input. is not a valid tool, try another one.\r\nThought:I made another mistake, I should use print() to display the result.\r\nAction: Use python_repl_ast to execute the previous input with print().\r\nAction Input: `python_repl_ast(print(df[df['Product'] == 'FG-40F Series']['Local Reporting']))`\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2252/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2252/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2251",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2251/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2251/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2251/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2251",
        "id": 1650208796,
        "node_id": "I_kwDOIPDwls5iXDAc",
        "number": 2251,
        "title": "SearxSearchWrapper: ('Searx API returned an error: ', 'Too Many Requests')",
        "user": {
            "login": "AlexW00",
            "id": 55558407,
            "node_id": "MDQ6VXNlcjU1NTU4NDA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/55558407?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlexW00",
            "html_url": "https://github.com/AlexW00",
            "followers_url": "https://api.github.com/users/AlexW00/followers",
            "following_url": "https://api.github.com/users/AlexW00/following{/other_user}",
            "gists_url": "https://api.github.com/users/AlexW00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AlexW00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AlexW00/subscriptions",
            "organizations_url": "https://api.github.com/users/AlexW00/orgs",
            "repos_url": "https://api.github.com/users/AlexW00/repos",
            "events_url": "https://api.github.com/users/AlexW00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AlexW00/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-01T00:37:48Z",
        "updated_at": "2023-08-11T16:31:55Z",
        "closed_at": "2023-08-11T16:31:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "The following code produces the \"too many requests\" error. Using a different host does not fix it.\r\n```py\r\nname=\"Execute Query Tool\"\r\ndescription=\"Useful for executing a query against a search engine. Returns the results of the query.\"\r\n\r\nsearch = SearxSearchWrapper(searx_host=\"https://www.gruble.de\")\r\n\r\ndef func (query: Query) -> SearchResult:\r\n    searx_results = search.results(query, num_results=10, engines=['wiki'])\r\n    results_stack = [SearchResult.from_searx_result(result) for result in searx_results]\r\n    return results_stack\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2251/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2251/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2250",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2250/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2250/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2250/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2250",
        "id": 1650186896,
        "node_id": "PR_kwDOIPDwls5NZSxP",
        "number": 2250,
        "title": "Add encoding parameter to TextLoader",
        "user": {
            "login": "Tiger767",
            "id": 47340315,
            "node_id": "MDQ6VXNlcjQ3MzQwMzE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/47340315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Tiger767",
            "html_url": "https://github.com/Tiger767",
            "followers_url": "https://api.github.com/users/Tiger767/followers",
            "following_url": "https://api.github.com/users/Tiger767/following{/other_user}",
            "gists_url": "https://api.github.com/users/Tiger767/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Tiger767/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Tiger767/subscriptions",
            "organizations_url": "https://api.github.com/users/Tiger767/orgs",
            "repos_url": "https://api.github.com/users/Tiger767/repos",
            "events_url": "https://api.github.com/users/Tiger767/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Tiger767/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-01T00:00:22Z",
        "updated_at": "2023-04-03T09:03:18Z",
        "closed_at": "2023-04-01T15:57:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2250",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2250",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2250.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2250.patch",
            "merged_at": "2023-04-01T15:57:17Z"
        },
        "body": "This merge request proposes changes to the TextLoader class to make it more flexible and robust when handling text files with different encodings. The current implementation of TextLoader does not provide a way to specify the encoding of the text file being read. As a result, it might lead to incorrect handling of files with non-default encodings, causing issues with loading the content.\r\n\r\nBenefits:\r\n- The proposed changes will make the TextLoader class more flexible, allowing it to handle text files with different encodings.\r\n- The changes maintain backward compatibility, as the encoding parameter is optional.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2250/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2250/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2249",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2249/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2249/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2249/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2249",
        "id": 1650139503,
        "node_id": "I_kwDOIPDwls5iWyFv",
        "number": 2249,
        "title": "Python tool uses exec and eval instead of subprocess",
        "user": {
            "login": "teleprint-me",
            "id": 77757836,
            "node_id": "MDQ6VXNlcjc3NzU3ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/77757836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/teleprint-me",
            "html_url": "https://github.com/teleprint-me",
            "followers_url": "https://api.github.com/users/teleprint-me/followers",
            "following_url": "https://api.github.com/users/teleprint-me/following{/other_user}",
            "gists_url": "https://api.github.com/users/teleprint-me/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/teleprint-me/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/teleprint-me/subscriptions",
            "organizations_url": "https://api.github.com/users/teleprint-me/orgs",
            "repos_url": "https://api.github.com/users/teleprint-me/repos",
            "events_url": "https://api.github.com/users/teleprint-me/events{/privacy}",
            "received_events_url": "https://api.github.com/users/teleprint-me/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-31T22:52:56Z",
        "updated_at": "2023-09-12T21:30:13Z",
        "closed_at": "2023-08-18T17:03:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Issue:\r\n\r\nPython tool uses exec and eval instead of subprocess.\r\n\r\nDescription:\r\n\r\nThis leaves the chain open to an attack vector where malicious code can be injected and blindly executed. \r\n\r\nSolution:\r\n\r\nCommands should be sanitized and then passed to subprocess instead.\r\n\r\nNote:\r\n\r\nThis issue applies to any command that functions similarly for any other language.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2249/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2249/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2248",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2248/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2248/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2248/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2248",
        "id": 1650074102,
        "node_id": "PR_kwDOIPDwls5NY67G",
        "number": 2248,
        "title": "[request tool] Preclean text input so it can be successfully converted into a JSON object",
        "user": {
            "login": "drdee",
            "id": 109400,
            "node_id": "MDQ6VXNlcjEwOTQwMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/109400?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/drdee",
            "html_url": "https://github.com/drdee",
            "followers_url": "https://api.github.com/users/drdee/followers",
            "following_url": "https://api.github.com/users/drdee/following{/other_user}",
            "gists_url": "https://api.github.com/users/drdee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/drdee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/drdee/subscriptions",
            "organizations_url": "https://api.github.com/users/drdee/orgs",
            "repos_url": "https://api.github.com/users/drdee/repos",
            "events_url": "https://api.github.com/users/drdee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/drdee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-03-31T21:36:01Z",
        "updated_at": "2023-11-03T22:52:39Z",
        "closed_at": "2023-11-03T22:52:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2248",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2248",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2248.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2248.patch",
            "merged_at": null
        },
        "body": "Sometimes when chaining API calls, we have to preclean the output of the preceding step to be successfully converted into a JSON object. This PR adds a `_preclean_input` function that strips out backticks and newlines. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2248/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2248/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2247",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2247/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2247/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2247/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2247",
        "id": 1650046790,
        "node_id": "I_kwDOIPDwls5iWbdG",
        "number": 2247,
        "title": "`UnicodeDecodeError` when using `BSHTMLLoader` on Windows",
        "user": {
            "login": "samuelwcm",
            "id": 74786574,
            "node_id": "MDQ6VXNlcjc0Nzg2NTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/74786574?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/samuelwcm",
            "html_url": "https://github.com/samuelwcm",
            "followers_url": "https://api.github.com/users/samuelwcm/followers",
            "following_url": "https://api.github.com/users/samuelwcm/following{/other_user}",
            "gists_url": "https://api.github.com/users/samuelwcm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/samuelwcm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/samuelwcm/subscriptions",
            "organizations_url": "https://api.github.com/users/samuelwcm/orgs",
            "repos_url": "https://api.github.com/users/samuelwcm/repos",
            "events_url": "https://api.github.com/users/samuelwcm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/samuelwcm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-31T21:13:09Z",
        "updated_at": "2023-04-03T17:17:47Z",
        "closed_at": "2023-04-03T17:17:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "I am getting `UnicodeDecodeError`s from BeautifulSoup (the offending character is 0x9d - right double quotation mark). I am using Python 3.10 x64 on Windows 10 21H2.\r\n\r\nThe solution I would propose is to add the ability to pass some kwargs to the BSHTMLLoader constructor so we can specify the encoding to pass to `open()`:\r\nhttps://github.com/hwchase17/langchain/blob/e57b045402b52c2a602f4895c5b06fa2c22b745a/langchain/document_loaders/html_bs.py#L15-L23\r\n```python\r\n def __init__(self, file_path: str, encoding: str=None) -> None: \r\n     try: \r\n         import bs4  # noqa:F401 \r\n     except ImportError: \r\n         raise ValueError( \r\n             \"bs4 package not found, please install it with \" \"`pip install bs4`\" \r\n         ) \r\n  \r\n     self.file_path = file_path \r\n     self.encoding = encoding\r\n```\r\n\r\nhttps://github.com/hwchase17/langchain/blob/e57b045402b52c2a602f4895c5b06fa2c22b745a/langchain/document_loaders/html_bs.py#L29-L30\r\n```python\r\n with open(self.file_path, \"r\", encoding=self.encoding) as f: \r\n     soup = BeautifulSoup(f, features=\"lxml\") \r\n```\r\n\r\nAn extra benefit of this is that you could change the BeautifulSoup features to use the builtin `html.parser` to remove the dependency on `lxml`.\r\n\r\nFurther to this I would add something like a `loader_kwargs` argument to DirectoryLoader so we can pass these here as well:\r\nhttps://github.com/hwchase17/langchain/blob/e57b045402b52c2a602f4895c5b06fa2c22b745a/langchain/document_loaders/directory.py#L29-L37\r\n```python\r\n def __init__( \r\n     self, \r\n     path: str, \r\n     glob: str = \"**/[!.]*\", \r\n     silent_errors: bool = False, \r\n     load_hidden: bool = False, \r\n     loader_cls: FILE_LOADER_TYPE = UnstructuredFileLoader, \r\n     loader_kwargs: dict = None,\r\n     recursive: bool = False, \r\n ): \r\n     if loader_kwargs is None:\r\n         loader_kwargs = {}\r\n```\r\nAnd wire it up like this:\r\nhttps://github.com/hwchase17/langchain/blob/e57b045402b52c2a602f4895c5b06fa2c22b745a/langchain/document_loaders/directory.py#L51-L61\r\n```python\r\nfor i in items:\r\n    if i.is_file():\r\n        if _is_visible(i.relative_to(p)) or self.load_hidden:\r\n            try:\r\n                sub_docs = self.loader_cls(str(i), **self.loader_kwargs).load()\r\n                docs.extend(sub_docs)\r\n            except Exception as e:\r\n                if self.silent_errors:\r\n                    logger.warning(e)\r\n                else:\r\n                    raise e\r\n```\r\n\r\nA workaround would be to set the environment variable `PYTHONUTF8=1` but this becomes tricky if you're using a Jupyter Notebook like I am.\r\n\r\nI'll keep an eye on this issue and if I get a spare moment I'd be happy to make this change myself if the maintainers agree with my approach.\r\n\r\nThanks!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2247/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2247/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2246",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2246/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2246/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2246/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2246",
        "id": 1650033751,
        "node_id": "PR_kwDOIPDwls5NYyIF",
        "number": 2246,
        "title": "Fixed the link to promptlayer dashboard",
        "user": {
            "login": "LaloLalo1999",
            "id": 6173685,
            "node_id": "MDQ6VXNlcjYxNzM2ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6173685?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LaloLalo1999",
            "html_url": "https://github.com/LaloLalo1999",
            "followers_url": "https://api.github.com/users/LaloLalo1999/followers",
            "following_url": "https://api.github.com/users/LaloLalo1999/following{/other_user}",
            "gists_url": "https://api.github.com/users/LaloLalo1999/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LaloLalo1999/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LaloLalo1999/subscriptions",
            "organizations_url": "https://api.github.com/users/LaloLalo1999/orgs",
            "repos_url": "https://api.github.com/users/LaloLalo1999/repos",
            "events_url": "https://api.github.com/users/LaloLalo1999/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LaloLalo1999/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-31T21:04:57Z",
        "updated_at": "2023-03-31T23:18:02Z",
        "closed_at": "2023-03-31T23:16:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2246",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2246",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2246.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2246.patch",
            "merged_at": "2023-03-31T23:16:23Z"
        },
        "body": "Fixed a simple error where in the PromptLayer LLM documentation, the \"PromptLayer dashboard\" hyperlink linked to \"https://ww.promptlayer.com\" instead of \"https://www.promptlayer.com\". Solved issue  #2245 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2246/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2246/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2245",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2245/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2245/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2245/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2245",
        "id": 1649993009,
        "node_id": "I_kwDOIPDwls5iWOUx",
        "number": 2245,
        "title": "Wrong PromptLayer Dashboard hyperlink",
        "user": {
            "login": "LaloLalo1999",
            "id": 6173685,
            "node_id": "MDQ6VXNlcjYxNzM2ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6173685?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LaloLalo1999",
            "html_url": "https://github.com/LaloLalo1999",
            "followers_url": "https://api.github.com/users/LaloLalo1999/followers",
            "following_url": "https://api.github.com/users/LaloLalo1999/following{/other_user}",
            "gists_url": "https://api.github.com/users/LaloLalo1999/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LaloLalo1999/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LaloLalo1999/subscriptions",
            "organizations_url": "https://api.github.com/users/LaloLalo1999/orgs",
            "repos_url": "https://api.github.com/users/LaloLalo1999/repos",
            "events_url": "https://api.github.com/users/LaloLalo1999/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LaloLalo1999/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-31T20:33:41Z",
        "updated_at": "2023-03-31T22:21:36Z",
        "closed_at": "2023-03-31T22:21:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "In the docs, in https://python.langchain.com/en/latest/modules/models/llms/integrations/promptlayer_openai.html there is a hyperlink to the PromptLayer dashboard that links to \"https://ww.promptlayer.com\", which is incorrect.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2245/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2245/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2244",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2244/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2244/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2244/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2244",
        "id": 1649936664,
        "node_id": "PR_kwDOIPDwls5NYdpE",
        "number": 2244,
        "title": "add metal retriever",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-31T19:53:37Z",
        "updated_at": "2023-04-04T19:17:15Z",
        "closed_at": "2023-04-04T19:17:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2244",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2244",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2244.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2244.patch",
            "merged_at": "2023-04-04T19:17:13Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2244/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2244/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2243",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2243/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2243/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2243/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2243",
        "id": 1649924239,
        "node_id": "PR_kwDOIPDwls5NYa-n",
        "number": 2243,
        "title": "Add total_cost estimates based on token count for openai",
        "user": {
            "login": "timothyasp",
            "id": 707699,
            "node_id": "MDQ6VXNlcjcwNzY5OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/707699?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timothyasp",
            "html_url": "https://github.com/timothyasp",
            "followers_url": "https://api.github.com/users/timothyasp/followers",
            "following_url": "https://api.github.com/users/timothyasp/following{/other_user}",
            "gists_url": "https://api.github.com/users/timothyasp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timothyasp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timothyasp/subscriptions",
            "organizations_url": "https://api.github.com/users/timothyasp/orgs",
            "repos_url": "https://api.github.com/users/timothyasp/repos",
            "events_url": "https://api.github.com/users/timothyasp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timothyasp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-31T19:43:28Z",
        "updated_at": "2023-04-01T00:46:38Z",
        "closed_at": "2023-04-01T00:46:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2243",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2243",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2243.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2243.patch",
            "merged_at": "2023-04-01T00:46:38Z"
        },
        "body": "We have completion and prompt tokens, model names, so if we can, let's keep a running total of the cost.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2243/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2243/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2242",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2242/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2242/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2242/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2242",
        "id": 1649890860,
        "node_id": "PR_kwDOIPDwls5NYUW1",
        "number": 2242,
        "title": "Add llama.cpp support",
        "user": {
            "login": "rjadr",
            "id": 30639818,
            "node_id": "MDQ6VXNlcjMwNjM5ODE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/30639818?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjadr",
            "html_url": "https://github.com/rjadr",
            "followers_url": "https://api.github.com/users/rjadr/followers",
            "following_url": "https://api.github.com/users/rjadr/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjadr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjadr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjadr/subscriptions",
            "organizations_url": "https://api.github.com/users/rjadr/orgs",
            "repos_url": "https://api.github.com/users/rjadr/repos",
            "events_url": "https://api.github.com/users/rjadr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjadr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-31T19:18:09Z",
        "updated_at": "2023-04-02T21:09:18Z",
        "closed_at": "2023-04-02T21:09:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2242",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2242",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2242.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2242.patch",
            "merged_at": "2023-04-02T21:09:18Z"
        },
        "body": "Adds [llama.cpp](https://github.com/ggerganov/llama.cpp) support for local inference (both for LLM and embeddings).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2242/reactions",
            "total_count": 26,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 19,
            "rocket": 7,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2242/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2241",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2241/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2241/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2241/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2241",
        "id": 1649835002,
        "node_id": "I_kwDOIPDwls5iVnv6",
        "number": 2241,
        "title": "Issues with conversational_chat and LLM chains responding with a multi-line markdown code block",
        "user": {
            "login": "surfkansas",
            "id": 37444469,
            "node_id": "MDQ6VXNlcjM3NDQ0NDY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/37444469?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/surfkansas",
            "html_url": "https://github.com/surfkansas",
            "followers_url": "https://api.github.com/users/surfkansas/followers",
            "following_url": "https://api.github.com/users/surfkansas/following{/other_user}",
            "gists_url": "https://api.github.com/users/surfkansas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/surfkansas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/surfkansas/subscriptions",
            "organizations_url": "https://api.github.com/users/surfkansas/orgs",
            "repos_url": "https://api.github.com/users/surfkansas/repos",
            "events_url": "https://api.github.com/users/surfkansas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/surfkansas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-03-31T18:32:25Z",
        "updated_at": "2023-12-02T16:09:52Z",
        "closed_at": "2023-12-02T16:09:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When using the `conversational_chat` agent, an issue occurs when the LLM returns a markdown result that has a code block included. My use case is an agent that reads from an internal database using an agent to get information that will be used to build a block of code. The agent correctly uses the tools, but fails to return an answer. \r\n\r\nThe exhibited behavior is that the triple apostrophe used to offset the code block interferes with the json in a code block that the agent is expecting. It tries to parse the document, but stops when it finds the second triple apostrophe that starts the code block. This is because we end up with nested code blocks (the outer code block being the agent response JSON in a code block)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2241/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2241/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2240",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2240/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2240/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2240/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2240",
        "id": 1649796073,
        "node_id": "PR_kwDOIPDwls5NYAvI",
        "number": 2240,
        "title": "Open a Deeplake dataset in read only mode",
        "user": {
            "login": "jc-tzn",
            "id": 3951735,
            "node_id": "MDQ6VXNlcjM5NTE3MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3951735?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jc-tzn",
            "html_url": "https://github.com/jc-tzn",
            "followers_url": "https://api.github.com/users/jc-tzn/followers",
            "following_url": "https://api.github.com/users/jc-tzn/following{/other_user}",
            "gists_url": "https://api.github.com/users/jc-tzn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jc-tzn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jc-tzn/subscriptions",
            "organizations_url": "https://api.github.com/users/jc-tzn/orgs",
            "repos_url": "https://api.github.com/users/jc-tzn/repos",
            "events_url": "https://api.github.com/users/jc-tzn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jc-tzn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-31T18:00:54Z",
        "updated_at": "2023-04-01T17:12:55Z",
        "closed_at": "2023-04-01T15:58:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2240",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2240",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2240.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2240.patch",
            "merged_at": "2023-04-01T15:58:53Z"
        },
        "body": "I'm using Deeplake as a vector store for a Q&A application. When several questions are being processed at the same time for the same dataset, the 2nd one triggers the following error:\r\n\r\n> LockedException: This dataset cannot be open for writing as it is locked by another machine. Try loading the dataset with `read_only=True`.\r\n\r\nAnswering questions doesn't require writing new embeddings so it's ok to open the dataset in read only mode at that time.\r\n\r\nThis pull request thus adds the `read_only` option to the Deeplake constructor and to its subsequent `deeplake.load()` call. \r\n\r\nThe related Deeplake documentation is [here](https://docs.deeplake.ai/en/latest/deeplake.html#deeplake.load).\r\n\r\nI've tested this update on my local dev environment. I don't know if an integration test and/or additional documentation are expected however. Let me know if it is, ideally with some guidance as I'm not particularly experienced in Python.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2240/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2240/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2239",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2239/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2239/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2239/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2239",
        "id": 1649784078,
        "node_id": "PR_kwDOIPDwls5NX-QL",
        "number": 2239,
        "title": "update vectorstore.ipynb",
        "user": {
            "login": "franfram",
            "id": 18502770,
            "node_id": "MDQ6VXNlcjE4NTAyNzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/18502770?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/franfram",
            "html_url": "https://github.com/franfram",
            "followers_url": "https://api.github.com/users/franfram/followers",
            "following_url": "https://api.github.com/users/franfram/following{/other_user}",
            "gists_url": "https://api.github.com/users/franfram/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/franfram/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/franfram/subscriptions",
            "organizations_url": "https://api.github.com/users/franfram/orgs",
            "repos_url": "https://api.github.com/users/franfram/repos",
            "events_url": "https://api.github.com/users/franfram/events{/privacy}",
            "received_events_url": "https://api.github.com/users/franfram/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-31T17:50:05Z",
        "updated_at": "2023-04-01T00:49:24Z",
        "closed_at": "2023-04-01T00:49:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2239",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2239",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2239.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2239.patch",
            "merged_at": "2023-04-01T00:49:24Z"
        },
        "body": "Hello!\r\nMaybe there's a mistake in the .ipynb, where `create_vectorstore_agent` should be `create_vectorstore_router_agent`\r\n\r\nCheers!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2239/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2239/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2238",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2238/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2238/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2238/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2238",
        "id": 1649726823,
        "node_id": "PR_kwDOIPDwls5NXyw1",
        "number": 2238,
        "title": "skip unit tests that fails in Windows",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-31T17:08:39Z",
        "updated_at": "2023-06-01T06:32:45Z",
        "closed_at": "2023-04-01T19:52:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2238",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2238",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2238.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2238.patch",
            "merged_at": "2023-04-01T19:52:21Z"
        },
        "body": "closes #2174\r\nSeveral unit tests fail in Windows.\r\nAdded pytest attribute to skip these tests automatically.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2238/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2238/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2236",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2236/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2236/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2236/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2236",
        "id": 1649699249,
        "node_id": "PR_kwDOIPDwls5NXsvY",
        "number": 2236,
        "title": "bump version to 128",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-31T16:50:11Z",
        "updated_at": "2023-03-31T18:16:22Z",
        "closed_at": "2023-03-31T18:16:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2236",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2236",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2236.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2236.patch",
            "merged_at": "2023-03-31T18:16:21Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2236/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2236/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2235",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2235/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2235/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2235/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2235",
        "id": 1649683980,
        "node_id": "I_kwDOIPDwls5iVC4M",
        "number": 2235,
        "title": "'VectorStoreIndexWrapper' object has no attribute 'similarity_search'",
        "user": {
            "login": "try-agaaain",
            "id": 52828870,
            "node_id": "MDQ6VXNlcjUyODI4ODcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/52828870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/try-agaaain",
            "html_url": "https://github.com/try-agaaain",
            "followers_url": "https://api.github.com/users/try-agaaain/followers",
            "following_url": "https://api.github.com/users/try-agaaain/following{/other_user}",
            "gists_url": "https://api.github.com/users/try-agaaain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/try-agaaain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/try-agaaain/subscriptions",
            "organizations_url": "https://api.github.com/users/try-agaaain/orgs",
            "repos_url": "https://api.github.com/users/try-agaaain/repos",
            "events_url": "https://api.github.com/users/try-agaaain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/try-agaaain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-31T16:37:22Z",
        "updated_at": "2023-04-01T01:13:57Z",
        "closed_at": "2023-04-01T01:13:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When running `docs/modules/chains/index_examples/question_answering.ipynb`, the following error occurs:\r\n\r\n![image](https://user-images.githubusercontent.com/52828870/229178901-83d00b12-64ca-494b-84f3-22550e23db74.png)\r\n\r\nI didn't change the code, just ran the file directly.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2235/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2235/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2234",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2234/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2234/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2234/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2234",
        "id": 1649583809,
        "node_id": "PR_kwDOIPDwls5NXUX4",
        "number": 2234,
        "title": "Add Support for Returning Status Code and Reason",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-31T15:28:59Z",
        "updated_at": "2023-04-04T02:57:20Z",
        "closed_at": "2023-04-04T02:56:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2234",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2234",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2234.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2234.patch",
            "merged_at": null
        },
        "body": "It's common for agents to incorrectly use a tool at first, which can be handled if is able to see the status code and reason information from the server. Calling `.text` on everything strips that information.\r\n\r\nThis PR doesn't alter the defaults but rather lets the user add a format template similar to common log syntax..",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2234/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2234/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2233",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2233/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2233/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2233/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2233",
        "id": 1649571114,
        "node_id": "PR_kwDOIPDwls5NXRmw",
        "number": 2233,
        "title": "Virat/add param to optionally not refresh ES indices",
        "user": {
            "login": "virattt",
            "id": 901795,
            "node_id": "MDQ6VXNlcjkwMTc5NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/901795?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/virattt",
            "html_url": "https://github.com/virattt",
            "followers_url": "https://api.github.com/users/virattt/followers",
            "following_url": "https://api.github.com/users/virattt/following{/other_user}",
            "gists_url": "https://api.github.com/users/virattt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/virattt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/virattt/subscriptions",
            "organizations_url": "https://api.github.com/users/virattt/orgs",
            "repos_url": "https://api.github.com/users/virattt/repos",
            "events_url": "https://api.github.com/users/virattt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/virattt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-31T15:21:47Z",
        "updated_at": "2023-04-01T19:53:02Z",
        "closed_at": "2023-04-01T19:53:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2233",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2233",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2233.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2233.patch",
            "merged_at": "2023-04-01T19:53:02Z"
        },
        "body": "**Context**\r\nNoticed a TODO in `langchain/vectorstores/elastic_vector_search.py` for adding the option to NOT refresh ES indices\r\n\r\n**Change**\r\nAdded a param to `add_texts()` called `refresh_indices` to not refresh ES indices.  The default value is `True` so that existing behavior does not break.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2233/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2233/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2232",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2232/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2232/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2232/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2232",
        "id": 1649526720,
        "node_id": "PR_kwDOIPDwls5NXHqV",
        "number": 2232,
        "title": "remote retriever",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-31T15:01:13Z",
        "updated_at": "2023-04-01T15:59:06Z",
        "closed_at": "2023-04-01T15:59:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2232",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2232",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2232.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2232.patch",
            "merged_at": "2023-04-01T15:59:05Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2232/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2232/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2229",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2229/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2229/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2229/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2229",
        "id": 1649464362,
        "node_id": "I_kwDOIPDwls5iUNQq",
        "number": 2229,
        "title": "[Bing Search] allow additional parameters like site restriction",
        "user": {
            "login": "iMicknl",
            "id": 1424596,
            "node_id": "MDQ6VXNlcjE0MjQ1OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1424596?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iMicknl",
            "html_url": "https://github.com/iMicknl",
            "followers_url": "https://api.github.com/users/iMicknl/followers",
            "following_url": "https://api.github.com/users/iMicknl/following{/other_user}",
            "gists_url": "https://api.github.com/users/iMicknl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iMicknl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iMicknl/subscriptions",
            "organizations_url": "https://api.github.com/users/iMicknl/orgs",
            "repos_url": "https://api.github.com/users/iMicknl/repos",
            "events_url": "https://api.github.com/users/iMicknl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iMicknl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-31T14:31:32Z",
        "updated_at": "2023-09-10T16:39:06Z",
        "closed_at": "2023-09-10T16:39:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "It would be good to allow more parameters to the `BingSearchWrapper`, so that for example the internet search can be limited to a single domain. See [Getting results from a specific site\r\n](https://learn.microsoft.com/en-us/bing/search-apis/bing-web-search/filter-answers#getting-results-from-a-specific-site).\r\n\r\n[Advanced search keywords](https://support.microsoft.com/en-us/topic/advanced-search-keywords-ea595928-5d63-4a0b-9c6b-0b769865e78a)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2229/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2229/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2228",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2228/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2228/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2228/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2228",
        "id": 1649357823,
        "node_id": "I_kwDOIPDwls5iTzP_",
        "number": 2228,
        "title": "Vicuna (Fine-tuned LLaMa)",
        "user": {
            "login": "slavakurilyak",
            "id": 6625584,
            "node_id": "MDQ6VXNlcjY2MjU1ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6625584?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/slavakurilyak",
            "html_url": "https://github.com/slavakurilyak",
            "followers_url": "https://api.github.com/users/slavakurilyak/followers",
            "following_url": "https://api.github.com/users/slavakurilyak/following{/other_user}",
            "gists_url": "https://api.github.com/users/slavakurilyak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/slavakurilyak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/slavakurilyak/subscriptions",
            "organizations_url": "https://api.github.com/users/slavakurilyak/orgs",
            "repos_url": "https://api.github.com/users/slavakurilyak/repos",
            "events_url": "https://api.github.com/users/slavakurilyak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/slavakurilyak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 30,
        "created_at": "2023-03-31T13:27:32Z",
        "updated_at": "2023-10-13T12:08:05Z",
        "closed_at": "2023-10-13T12:08:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "It would be great to see LangChain wrap around Vicuna, a chat assistant fine-tuned from LLaMA on user-shared conversations.\r\n\r\nVicuna-13B is an open-source chatbot trained using user-shared conversations collected from [ShareGPT](https://sharegpt.com/). The chatbot has been evaluated using\u00a0GPT-4. It has achieved more than 90% quality of OpenAI ChatGPT and\u00a0Google Bard while outperforming other models like LLaMA https://github.com/hwchase17/langchain/issues/1473 and\u00a0Stanford Alpaca https://github.com/hwchase17/langchain/issues/1777 \u00a0in more than 90% of cases.\r\n\r\n**Useful links**\r\n\r\n1. Blog post: [vicuna.lmsys.org](https://vicuna.lmsys.org/)\r\n2. Training and servicing code: [github.com/lm-sys/FastChat](https://github.com/lm-sys/FastChat)\r\n3. Demo: [chat.lmsys.org](https://chat.lmsys.org/)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2228/reactions",
            "total_count": 56,
            "+1": 51,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 5,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2228/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2227",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2227/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2227/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2227/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2227",
        "id": 1649307593,
        "node_id": "I_kwDOIPDwls5iTm_J",
        "number": 2227,
        "title": "Add BaseCallbackHandler, AsyncCallbackHandler and AsyncCallbackManager to exports of langchain.callbacks",
        "user": {
            "login": "sostholmwork",
            "id": 48830404,
            "node_id": "MDQ6VXNlcjQ4ODMwNDA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/48830404?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sostholmwork",
            "html_url": "https://github.com/sostholmwork",
            "followers_url": "https://api.github.com/users/sostholmwork/followers",
            "following_url": "https://api.github.com/users/sostholmwork/following{/other_user}",
            "gists_url": "https://api.github.com/users/sostholmwork/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sostholmwork/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sostholmwork/subscriptions",
            "organizations_url": "https://api.github.com/users/sostholmwork/orgs",
            "repos_url": "https://api.github.com/users/sostholmwork/repos",
            "events_url": "https://api.github.com/users/sostholmwork/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sostholmwork/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-03-31T12:54:40Z",
        "updated_at": "2023-09-25T10:18:43Z",
        "closed_at": "2023-09-25T10:18:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello!\r\n\r\nI would like to propose adding BaseCallbackHandler, AsyncCallbackHandler, and AsyncCallbackManager to the exports of langchain.callbacks. Doing so would enable developers to create custom CallbackHandlers and run their own code for each of the steps handled by the BaseCallbackHandler, as well as their async counterparts.\r\n\r\nIn my opinion, this is an essential feature for scaling langchain-based applications. It would allow for things such as streaming step-by-step information to a frontend client for live debugging.\r\n\r\nI believe that incorporating these features into the langchain.callbacks exports would make langchain even more powerful and user-friendly for developers.\r\n\r\nThank you for considering my proposal.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2227/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2227/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2226",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2226/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2226/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2226/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2226",
        "id": 1649296178,
        "node_id": "I_kwDOIPDwls5iTkMy",
        "number": 2226,
        "title": "Add on_agent_observation method to BaseCallbackHandler for custom observation logic",
        "user": {
            "login": "sostholmwork",
            "id": 48830404,
            "node_id": "MDQ6VXNlcjQ4ODMwNDA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/48830404?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sostholmwork",
            "html_url": "https://github.com/sostholmwork",
            "followers_url": "https://api.github.com/users/sostholmwork/followers",
            "following_url": "https://api.github.com/users/sostholmwork/following{/other_user}",
            "gists_url": "https://api.github.com/users/sostholmwork/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sostholmwork/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sostholmwork/subscriptions",
            "organizations_url": "https://api.github.com/users/sostholmwork/orgs",
            "repos_url": "https://api.github.com/users/sostholmwork/repos",
            "events_url": "https://api.github.com/users/sostholmwork/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sostholmwork/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-31T12:46:23Z",
        "updated_at": "2023-09-25T16:13:17Z",
        "closed_at": "2023-09-25T16:13:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello!\r\n\r\nI've noticed that when creating a custom CallbackHandler in LangChain, there is currently no method for dealing with the Observation step. Specifically, in the agent.py file, the Agent and AgentExecutor class does not call any on_agent_observation function, and this function is not present in the BaseCallbackHandler base class.\r\n\r\nI propose adding an on_agent_observation method to the BaseCallbackHandler, and calling this method at the end of both the _take_next_step and _atake_next_step functions in the Agent and AgentExecutor. This would enable developers to run custom logic for this step, such as streaming the observation to a frontend client.\r\n\r\nI think usefulness of this feature cannot be understated, especially for scaling applications based on LangChain where multiple people will be involved in debugging.\r\n\r\nI hope this proposal makes sense and will be useful for other developers. Please let me know if you have any feedback or concerns.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2226/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2226/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2225",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2225/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2225/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2225/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2225",
        "id": 1649180957,
        "node_id": "I_kwDOIPDwls5iTIEd",
        "number": 2225,
        "title": "similarity Search Issue ",
        "user": {
            "login": "mohitraj",
            "id": 5251119,
            "node_id": "MDQ6VXNlcjUyNTExMTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5251119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mohitraj",
            "html_url": "https://github.com/mohitraj",
            "followers_url": "https://api.github.com/users/mohitraj/followers",
            "following_url": "https://api.github.com/users/mohitraj/following{/other_user}",
            "gists_url": "https://api.github.com/users/mohitraj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mohitraj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mohitraj/subscriptions",
            "organizations_url": "https://api.github.com/users/mohitraj/orgs",
            "repos_url": "https://api.github.com/users/mohitraj/repos",
            "events_url": "https://api.github.com/users/mohitraj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mohitraj/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-03-31T11:19:55Z",
        "updated_at": "2023-09-18T16:21:43Z",
        "closed_at": "2023-09-18T16:21:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "We are using Chroma for storing the records in vector form. When searching the query, the return documents do not give accurate results.  \r\nc1 = Chroma('langchain', embedding, persist_directory)\r\nqa = ChatVectorDBChain(vectorstore=c1,  combine_docs_chain=doc_chain, question_generator=question_generator,top_k_docs_for_context=12, return_source_documents=True)\r\n \r\nWhat is the solution to get accurate results?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2225/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2225/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2224",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2224/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2224/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2224/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2224",
        "id": 1649020314,
        "node_id": "I_kwDOIPDwls5iSg2a",
        "number": 2224,
        "title": "Chatbot using HuggingFace model, not working",
        "user": {
            "login": "levalencia",
            "id": 6962857,
            "node_id": "MDQ6VXNlcjY5NjI4NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6962857?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/levalencia",
            "html_url": "https://github.com/levalencia",
            "followers_url": "https://api.github.com/users/levalencia/followers",
            "following_url": "https://api.github.com/users/levalencia/following{/other_user}",
            "gists_url": "https://api.github.com/users/levalencia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/levalencia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/levalencia/subscriptions",
            "organizations_url": "https://api.github.com/users/levalencia/orgs",
            "repos_url": "https://api.github.com/users/levalencia/repos",
            "events_url": "https://api.github.com/users/levalencia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/levalencia/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-03-31T09:26:50Z",
        "updated_at": "2023-09-27T16:10:49Z",
        "closed_at": "2023-09-27T16:10:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "I am trying to create a chatbot using your documentation from here:\r\nhttps://python.langchain.com/en/latest/modules/agents/agent_executors/examples/chatgpt_clone.html\r\n\r\nHowever, in order to reduce costs, instead of using ChatGPT I want to use a HuggingFace Model.\r\nI tried to use a conversational model, but I got an error that this task is not implemented yet and that it only supports TextGeneration and Tex2TextSequence.\r\n\r\nSo, I went to the hub and got the model ID with the most likes/downloads and I am testing it:\r\n\r\n```\r\nfrom langchain import PromptTemplate, HuggingFaceHub, LLMChain\r\nfrom langchain.llms import HuggingFacePipeline\r\nfrom langchain.llms import HuggingFaceHub\r\nimport os\r\nos.environ[\"HUGGINGFACEHUB_API_TOKEN\"] = \"x\"\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain import PromptTemplate, LLMChain\r\nfrom langchain.prompts.chat import (\r\n    ChatPromptTemplate,\r\n    SystemMessagePromptTemplate,\r\n    AIMessagePromptTemplate,\r\n    HumanMessagePromptTemplate,\r\n)\r\nfrom langchain.schema import (\r\n    AIMessage,\r\n    HumanMessage,\r\n    SystemMessage\r\n)\r\nfrom langchain import PromptTemplate, HuggingFaceHub, LLMChain\r\nfrom langchain.memory import ConversationBufferWindowMemory\r\n\r\ntemplate = \"\"\"Assistant is a large language model trained by OpenAI.\r\n\r\nAssistant is designed to be able to assist with a wide range of tasks, from answering simple questions to providing in-depth explanations and discussions on a wide range of topics. As a language model, Assistant is able to generate human-like text based on the input it receives, allowing it to engage in natural-sounding conversations and provide responses that are coherent and relevant to the topic at hand.\r\n\r\nAssistant is constantly learning and improving, and its capabilities are constantly evolving. It is able to process and understand large amounts of text, and can use this knowledge to provide accurate and informative responses to a wide range of questions. Additionally, Assistant is able to generate its own text based on the input it receives, allowing it to engage in discussions and provide explanations and descriptions on a wide range of topics.\r\n\r\nOverall, Assistant is a powerful tool that can help with a wide range of tasks and provide valuable insights and information on a wide range of topics. Whether you need help with a specific question or just want to have a conversation about a particular topic, Assistant is here to assist.\r\n\r\n{history}\r\nHuman: {human_input}\r\nAssistant:\"\"\"\r\n\r\nprompt = PromptTemplate(\r\n    input_variables=[\"history\", \"human_input\"], \r\n    template=template\r\n)\r\n\r\nllm = HuggingFaceHub(repo_id=\"facebook/mbart-large-50\", model_kwargs={\"temperature\":0, \"max_length\":64})\r\nllm_chain = LLMChain(prompt=prompt, llm=llm, memory=ConversationBufferWindowMemory(k=2))\r\noutput = llm_chain.predict(human_input=\"Whats the weather like?\")\r\nprint(output)\r\n```\r\n\r\n\r\nHowever in the Google Colab output, all I get is this:\r\n`Assistant is a large language model trained by OpenAI. Assistant is designed to be able to assist with a wide range of tasks, from answering simple questions to providing in-depth explanations and discussions on a wide range of topics. As a language model, Assistant is able to generate\r\n`\r\n\r\nAnd no prediction is in the output.\r\n\r\nWhat am I missing?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2224/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2224/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2223",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2223/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2223/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2223/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2223",
        "id": 1648984646,
        "node_id": "PR_kwDOIPDwls5NVSjB",
        "number": 2223,
        "title": "Fix UnicodeDecodeError",
        "user": {
            "login": "chmodsss",
            "id": 5442238,
            "node_id": "MDQ6VXNlcjU0NDIyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5442238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chmodsss",
            "html_url": "https://github.com/chmodsss",
            "followers_url": "https://api.github.com/users/chmodsss/followers",
            "following_url": "https://api.github.com/users/chmodsss/following{/other_user}",
            "gists_url": "https://api.github.com/users/chmodsss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chmodsss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chmodsss/subscriptions",
            "organizations_url": "https://api.github.com/users/chmodsss/orgs",
            "repos_url": "https://api.github.com/users/chmodsss/repos",
            "events_url": "https://api.github.com/users/chmodsss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chmodsss/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-31T09:03:19Z",
        "updated_at": "2023-04-03T09:04:49Z",
        "closed_at": "2023-04-03T09:04:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2223",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2223",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2223.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2223.patch",
            "merged_at": null
        },
        "body": "This PR fixes the UnicodeDecodeError in windows\r\n\r\nOpening the file with 'r' read parameter, fixes the following  UnicodeDecodeError\r\n`UnicodeDecodeError`: 'charmap' codec can't decode byte 0x9d in position 1094: character maps to <undefined>\r\n\r\nOS: Windows 10 x64",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2223/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2223/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2222",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2222/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2222/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2222/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2222",
        "id": 1648966589,
        "node_id": "I_kwDOIPDwls5iSTu9",
        "number": 2222,
        "title": "TypeError: Object of type Document is not JSON serializable",
        "user": {
            "login": "sergerdn",
            "id": 64213648,
            "node_id": "MDQ6VXNlcjY0MjEzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/64213648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sergerdn",
            "html_url": "https://github.com/sergerdn",
            "followers_url": "https://api.github.com/users/sergerdn/followers",
            "following_url": "https://api.github.com/users/sergerdn/following{/other_user}",
            "gists_url": "https://api.github.com/users/sergerdn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sergerdn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sergerdn/subscriptions",
            "organizations_url": "https://api.github.com/users/sergerdn/orgs",
            "repos_url": "https://api.github.com/users/sergerdn/repos",
            "events_url": "https://api.github.com/users/sergerdn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sergerdn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-03-31T08:51:41Z",
        "updated_at": "2023-10-23T07:41:02Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "**Any comments would be appreciated.**\r\n\r\nThe issue is that the json module is unable to serialize the Document object, which is a custom class that inherits from BaseModel. The error message specifically says that the Document object is not JSON serializable, meaning it cannot be converted into a JSON string. This is likely because the json module does not know how to serialize the BaseModel class or any of its child classes. To fix the issue, we may need to provide a custom encoder or implement the jsonable_encoder function from the FastAPI library, which is designed to handle pydantic models like BaseModel.\r\n\r\n```python\r\ndef query_chromadb():\r\n    client_settings = chromadb.config.Settings(\r\n        chroma_db_impl=\"duckdb+parquet\",\r\n        persist_directory=DB_DIR,\r\n        anonymized_telemetry=False\r\n    )\r\n\r\n    embeddings = OpenAIEmbeddings()\r\n\r\n    vectorstore = Chroma(\r\n        collection_name=\"langchain_store\",\r\n        embedding_function=embeddings,\r\n        client_settings=client_settings,\r\n        persist_directory=DB_DIR,\r\n    )\r\n\r\n    result = vectorstore.similarity_search_with_score(query=\"FREDERICK\", k=4)\r\n    print(result)\r\n    print(json.dumps(result, indent=4, sort_keys=False)) // ERROR\r\n\r\n\r\ndef main():\r\n    # init_chromadb()\r\n    query_chromadb()\r\n```\r\n\r\n```python\r\nimport json\r\nfrom pydantic import BaseModel, Field\r\n\r\nclass Document(BaseModel):\r\n    \"\"\"Interface for interacting with a document.\"\"\"\r\n\r\n    page_content: str\r\n    metadata: dict = Field(default_factory=dict)\r\n\r\ndoc = Document(page_content=\"Some page content\", metadata={\"author\": \"John Doe\"})\r\n\r\nprint(json.dumps(doc)) // ERROR\r\n```\r\n\r\n\r\nPossible fixes:\r\n\r\n```python\r\nimport json\r\n\r\nfrom pydantic import BaseModel, Field\r\n\r\n\r\nclass Document(BaseModel):\r\n    \"\"\"Interface for interacting with a document.\"\"\"\r\n\r\n    page_content: str\r\n    metadata: dict = Field(default_factory=dict)\r\n\r\n    def to_dict(self):\r\n        return self.dict(by_alias=True, exclude_unset=True) # just an example!\r\n\r\n    def to_json(self):\r\n        return self.json(by_alias=True, exclude_unset=True) # just an example!\r\n\r\n\r\ndoc = Document(page_content=\"Some page content\", metadata={\"author\": \"John Doe\"})\r\n\r\n# Convert to dictionary and serialize\r\ndoc_dict = doc.to_dict()\r\ndoc_json = json.dumps(doc.to_dict())\r\n\r\n## {\"page_content\": \"Some page content\", \"metadata\": {\"author\": \"John Doe\"}}\r\nprint(doc_json)\r\n\r\n# Or use the custom to_json() method\r\ndoc_json = doc.to_json()\r\n## {\"page_content\": \"Some page content\", \"metadata\": {\"author\": \"John Doe\"}}\r\nprint(doc_json)\r\n```\r\n\r\nAnother approach:\r\n```python\r\nimport json\r\nfrom fastapi.encoders import jsonable_encoder\r\nfrom pydantic import BaseModel, Field\r\n\r\n\r\nclass Document(BaseModel):\r\n    \"\"\"Interface for interacting with a document.\"\"\"\r\n\r\n    page_content: str\r\n    metadata: dict = Field(default_factory=dict)\r\n\r\n\r\ndoc = Document(page_content=\"Some page content\", metadata={\"author\": \"John Doe\"})\r\n\r\nprint(json.dumps( jsonable_encoder(doc), indent=4))\r\n```\r\n\r\nDo we need an API like `doc.to_json()` or/and `doc.to_dict()`? Because in this case it will hide the details of model realization from the end user.\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2222/reactions",
            "total_count": 9,
            "+1": 9,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2222/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2221",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2221/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2221/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2221/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2221",
        "id": 1648936876,
        "node_id": "PR_kwDOIPDwls5NVIh2",
        "number": 2221,
        "title": "Add `__version__` ",
        "user": {
            "login": "philschmid",
            "id": 32632186,
            "node_id": "MDQ6VXNlcjMyNjMyMTg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/32632186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/philschmid",
            "html_url": "https://github.com/philschmid",
            "followers_url": "https://api.github.com/users/philschmid/followers",
            "following_url": "https://api.github.com/users/philschmid/following{/other_user}",
            "gists_url": "https://api.github.com/users/philschmid/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/philschmid/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/philschmid/subscriptions",
            "organizations_url": "https://api.github.com/users/philschmid/orgs",
            "repos_url": "https://api.github.com/users/philschmid/repos",
            "events_url": "https://api.github.com/users/philschmid/events{/privacy}",
            "received_events_url": "https://api.github.com/users/philschmid/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-31T08:32:10Z",
        "updated_at": "2023-03-31T16:49:12Z",
        "closed_at": "2023-03-31T16:49:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2221",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2221",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2221.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2221.patch",
            "merged_at": "2023-03-31T16:49:12Z"
        },
        "body": "# What does this PR do? \r\n\r\nThis PR adds the `__version__` variable in the main `__init__.py` to easily retrieve the version, e.g., for debugging purposes or when a user wants to open an issue and provide information. \r\n\r\nUsage\r\n```python\r\n>>> import langchain\r\n>>> langchain.__version__\r\n'0.0.127'\r\n```\r\n\r\n\r\n![Bildschirmfoto 2023-03-31 um 10 30 18](https://user-images.githubusercontent.com/32632186/229068621-53d068b5-32f4-4154-ad2c-a3e1cc7e1ef3.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2221/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2221/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2220",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2220/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2220/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2220/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2220",
        "id": 1648853042,
        "node_id": "I_kwDOIPDwls5iR4Ay",
        "number": 2220,
        "title": "Is it possible to use gpt-3.5-turbo or gpt-4 as the LLM model for agents? ",
        "user": {
            "login": "mathematicsofpaul",
            "id": 31915369,
            "node_id": "MDQ6VXNlcjMxOTE1MzY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/31915369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mathematicsofpaul",
            "html_url": "https://github.com/mathematicsofpaul",
            "followers_url": "https://api.github.com/users/mathematicsofpaul/followers",
            "following_url": "https://api.github.com/users/mathematicsofpaul/following{/other_user}",
            "gists_url": "https://api.github.com/users/mathematicsofpaul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mathematicsofpaul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mathematicsofpaul/subscriptions",
            "organizations_url": "https://api.github.com/users/mathematicsofpaul/orgs",
            "repos_url": "https://api.github.com/users/mathematicsofpaul/repos",
            "events_url": "https://api.github.com/users/mathematicsofpaul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mathematicsofpaul/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-03-31T07:45:45Z",
        "updated_at": "2023-10-18T16:09:33Z",
        "closed_at": "2023-10-18T16:09:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Provided I have given a system prompt, I wanted to use gpt-4 as the llm for my agents. I read around, but it only seems like gpt-3 davinci and nothing beyond it is an option. \r\n\r\nCan gpt-3.5-turbo or gpt-4 be included as a llm option for agents? ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2220/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2220/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2219",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2219/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2219/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2219/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2219",
        "id": 1648834828,
        "node_id": "I_kwDOIPDwls5iRzkM",
        "number": 2219,
        "title": "PGVector does not work with HuggingFaceEmbeddings",
        "user": {
            "login": "vcahlik",
            "id": 17980426,
            "node_id": "MDQ6VXNlcjE3OTgwNDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/17980426?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vcahlik",
            "html_url": "https://github.com/vcahlik",
            "followers_url": "https://api.github.com/users/vcahlik/followers",
            "following_url": "https://api.github.com/users/vcahlik/following{/other_user}",
            "gists_url": "https://api.github.com/users/vcahlik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vcahlik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vcahlik/subscriptions",
            "organizations_url": "https://api.github.com/users/vcahlik/orgs",
            "repos_url": "https://api.github.com/users/vcahlik/repos",
            "events_url": "https://api.github.com/users/vcahlik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vcahlik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 16,
        "created_at": "2023-03-31T07:34:07Z",
        "updated_at": "2023-11-13T16:39:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "PGVector works fine for me when coupled with OpenAIEmbeddings. However, when I try to use HuggingFaceEmbeddings, I get the following error: `StatementError: (builtins.ValueError) expected 1536 dimensions, not 768`\r\n\r\nExample code:\r\n```python\r\nfrom langchain.vectorstores.pgvector import PGVector\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.embeddings import HuggingFaceEmbeddings\r\nfrom langchain.document_loaders import TextLoader\r\n\r\nimport os\r\n\r\nembeddings = HuggingFaceEmbeddings(model_name=\"sentence-transformers/all-mpnet-base-v2\")\r\ntexts = TextLoader('data/made-up-story.txt').load()\r\ndocuments = CharacterTextSplitter(chunk_size=500, chunk_overlap=20).split_documents(texts)\r\n\r\nCONNECTION_STRING = PGVector.connection_string_from_db_params(\r\n    driver=os.environ.get(\"PGVECTOR_DRIVER\", \"psycopg2\"),\r\n    host=os.environ.get(\"PGVECTOR_HOST\", \"localhost\"),\r\n    port=int(os.environ.get(\"PGVECTOR_PORT\", \"5432\")),\r\n    database=os.environ.get(\"PGVECTOR_DATABASE\", \"postgres\"),\r\n    user=os.environ.get(\"PGVECTOR_USER\", \"postgres\"),\r\n    password=os.environ.get(\"PGVECTOR_PASSWORD\", \"postgres\"),\r\n)\r\n\r\ndb = PGVector.from_documents(\r\n    embedding=embeddings,\r\n    documents=documents,\r\n    collection_name=\"test\",\r\n    connection_string=CONNECTION_STRING,\r\n)\r\n```\r\nOutput:\r\n```\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/engine/base.py:1702 in            \u2502\r\n\u2502 _execute_context                                                                                 \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1699 \u2502   \u2502   \u2502   if conn is None:                                                              \u2502\r\n\u2502   1700 \u2502   \u2502   \u2502   \u2502   conn = self._revalidate_connection()                                      \u2502\r\n\u2502   1701 \u2502   \u2502   \u2502                                                                                 \u2502\r\n\u2502 \u2771 1702 \u2502   \u2502   \u2502   context = constructor(                                                        \u2502\r\n\u2502   1703 \u2502   \u2502   \u2502   \u2502   dialect, self, conn, execution_options, *args, **kw                       \u2502\r\n\u2502   1704 \u2502   \u2502   \u2502   )                                                                             \u2502\r\n\u2502   1705 \u2502   \u2502   except (exc.PendingRollbackError, exc.ResourceClosedError):                       \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/engine/default.py:1078 in         \u2502\r\n\u2502 _init_compiled                                                                                   \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1075 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   for key in compiled_params                                        \u2502\r\n\u2502   1076 \u2502   \u2502   \u2502   \u2502   \u2502   }                                                                     \u2502\r\n\u2502   1077 \u2502   \u2502   \u2502   \u2502   else:                                                                     \u2502\r\n\u2502 \u2771 1078 \u2502   \u2502   \u2502   \u2502   \u2502   param = {                                                             \u2502\r\n\u2502   1079 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   key: processors[key](compiled_params[key])                        \u2502\r\n\u2502   1080 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   if key in processors                                              \u2502\r\n\u2502   1081 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   else compiled_params[key]                                         \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/engine/default.py:1079 in         \u2502\r\n\u2502 <dictcomp>                                                                                       \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1076 \u2502   \u2502   \u2502   \u2502   \u2502   }                                                                     \u2502\r\n\u2502   1077 \u2502   \u2502   \u2502   \u2502   else:                                                                     \u2502\r\n\u2502   1078 \u2502   \u2502   \u2502   \u2502   \u2502   param = {                                                             \u2502\r\n\u2502 \u2771 1079 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   key: processors[key](compiled_params[key])                        \u2502\r\n\u2502   1080 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   if key in processors                                              \u2502\r\n\u2502   1081 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   else compiled_params[key]                                         \u2502\r\n\u2502   1082 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   for key in compiled_params                                        \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/pgvector/sqlalchemy/__init__.py:21 in        \u2502\r\n\u2502 process                                                                                          \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   18 \u2502                                                                                           \u2502\r\n\u2502   19 \u2502   def bind_processor(self, dialect):                                                      \u2502\r\n\u2502   20 \u2502   \u2502   def process(value):                                                                 \u2502\r\n\u2502 \u2771 21 \u2502   \u2502   \u2502   return to_db(value, self.dim)                                                   \u2502\r\n\u2502   22 \u2502   \u2502   return process                                                                      \u2502\r\n\u2502   23 \u2502                                                                                           \u2502\r\n\u2502   24 \u2502   def result_processor(self, dialect, coltype):                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/pgvector/utils/__init__.py:35 in to_db       \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   32 \u2502   \u2502   value = value.tolist()                                                              \u2502\r\n\u2502   33 \u2502                                                                                           \u2502\r\n\u2502   34 \u2502   if dim is not None and len(value) != dim:                                               \u2502\r\n\u2502 \u2771 35 \u2502   \u2502   raise ValueError('expected %d dimensions, not %d' % (dim, len(value)))              \u2502\r\n\u2502   36 \u2502                                                                                           \u2502\r\n\u2502   37 \u2502   return '[' + ','.join([str(float(v)) for v in value]) + ']'                             \u2502\r\n\u2502   38                                                                                             \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nValueError: expected 1536 dimensions, not 768\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 /tmp/ipykernel_81963/141995419.py:21 in <cell line: 21>                                          \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 [Errno 2] No such file or directory: '/tmp/ipykernel_81963/141995419.py'                         \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/langchain/vectorstores/pgvector.py:420 in    \u2502\r\n\u2502 from_documents                                                                                   \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   417 \u2502   \u2502                                                                                      \u2502\r\n\u2502   418 \u2502   \u2502   kwargs[\"connection_string\"] = connection_string                                    \u2502\r\n\u2502   419 \u2502   \u2502                                                                                      \u2502\r\n\u2502 \u2771 420 \u2502   \u2502   return cls.from_texts(                                                             \u2502\r\n\u2502   421 \u2502   \u2502   \u2502   texts=texts,                                                                   \u2502\r\n\u2502   422 \u2502   \u2502   \u2502   pre_delete_collection=pre_delete_collection,                                   \u2502\r\n\u2502   423 \u2502   \u2502   \u2502   embedding=embedding,                                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/langchain/vectorstores/pgvector.py:376 in    \u2502\r\n\u2502 from_texts                                                                                       \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   373 \u2502   \u2502   \u2502   pre_delete_collection=pre_delete_collection,                                   \u2502\r\n\u2502   374 \u2502   \u2502   )                                                                                  \u2502\r\n\u2502   375 \u2502   \u2502                                                                                      \u2502\r\n\u2502 \u2771 376 \u2502   \u2502   store.add_texts(texts=texts, metadatas=metadatas, ids=ids, **kwargs)               \u2502\r\n\u2502   377 \u2502   \u2502   return store                                                                       \u2502\r\n\u2502   378 \u2502                                                                                          \u2502\r\n\u2502   379 \u2502   @classmethod                                                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/langchain/vectorstores/pgvector.py:228 in    \u2502\r\n\u2502 add_texts                                                                                        \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   225 \u2502   \u2502   \u2502   \u2502   )                                                                          \u2502\r\n\u2502   226 \u2502   \u2502   \u2502   \u2502   collection.embeddings.append(embedding_store)                              \u2502\r\n\u2502   227 \u2502   \u2502   \u2502   \u2502   session.add(embedding_store)                                               \u2502\r\n\u2502 \u2771 228 \u2502   \u2502   \u2502   session.commit()                                                               \u2502\r\n\u2502   229 \u2502   \u2502                                                                                      \u2502\r\n\u2502   230 \u2502   \u2502   return ids                                                                         \u2502\r\n\u2502   231                                                                                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/orm/session.py:1428 in commit     \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1425 \u2502   \u2502   \u2502   if not self._autobegin():                                                     \u2502\r\n\u2502   1426 \u2502   \u2502   \u2502   \u2502   raise sa_exc.InvalidRequestError(\"No transaction is begun.\")              \u2502\r\n\u2502   1427 \u2502   \u2502                                                                                     \u2502\r\n\u2502 \u2771 1428 \u2502   \u2502   self._transaction.commit(_to_root=self.future)                                    \u2502\r\n\u2502   1429 \u2502                                                                                         \u2502\r\n\u2502   1430 \u2502   def prepare(self):                                                                    \u2502\r\n\u2502   1431 \u2502   \u2502   \"\"\"Prepare the current transaction in progress for two phase commit.              \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/orm/session.py:829 in commit      \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    826 \u2502   def commit(self, _to_root=False):                                                     \u2502\r\n\u2502    827 \u2502   \u2502   self._assert_active(prepared_ok=True)                                             \u2502\r\n\u2502    828 \u2502   \u2502   if self._state is not PREPARED:                                                   \u2502\r\n\u2502 \u2771  829 \u2502   \u2502   \u2502   self._prepare_impl()                                                          \u2502\r\n\u2502    830 \u2502   \u2502                                                                                     \u2502\r\n\u2502    831 \u2502   \u2502   if self._parent is None or self.nested:                                           \u2502\r\n\u2502    832 \u2502   \u2502   \u2502   for conn, trans, should_commit, autoclose in set(                             \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/orm/session.py:808 in             \u2502\r\n\u2502 _prepare_impl                                                                                    \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    805 \u2502   \u2502   \u2502   for _flush_guard in range(100):                                               \u2502\r\n\u2502    806 \u2502   \u2502   \u2502   \u2502   if self.session._is_clean():                                              \u2502\r\n\u2502    807 \u2502   \u2502   \u2502   \u2502   \u2502   break                                                                 \u2502\r\n\u2502 \u2771  808 \u2502   \u2502   \u2502   \u2502   self.session.flush()                                                      \u2502\r\n\u2502    809 \u2502   \u2502   \u2502   else:                                                                         \u2502\r\n\u2502    810 \u2502   \u2502   \u2502   \u2502   raise exc.FlushError(                                                     \u2502\r\n\u2502    811 \u2502   \u2502   \u2502   \u2502   \u2502   \"Over 100 subsequent flushes have occurred within \"                   \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/orm/session.py:3345 in flush      \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   3342 \u2502   \u2502   \u2502   return                                                                        \u2502\r\n\u2502   3343 \u2502   \u2502   try:                                                                              \u2502\r\n\u2502   3344 \u2502   \u2502   \u2502   self._flushing = True                                                         \u2502\r\n\u2502 \u2771 3345 \u2502   \u2502   \u2502   self._flush(objects)                                                          \u2502\r\n\u2502   3346 \u2502   \u2502   finally:                                                                          \u2502\r\n\u2502   3347 \u2502   \u2502   \u2502   self._flushing = False                                                        \u2502\r\n\u2502   3348                                                                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/orm/session.py:3485 in _flush     \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   3482 \u2502   \u2502                                                                                     \u2502\r\n\u2502   3483 \u2502   \u2502   except:                                                                           \u2502\r\n\u2502   3484 \u2502   \u2502   \u2502   with util.safe_reraise():                                                     \u2502\r\n\u2502 \u2771 3485 \u2502   \u2502   \u2502   \u2502   transaction.rollback(_capture_exception=True)                             \u2502\r\n\u2502   3486 \u2502                                                                                         \u2502\r\n\u2502   3487 \u2502   def bulk_save_objects(                                                                \u2502\r\n\u2502   3488 \u2502   \u2502   self,                                                                             \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py:70 in         \u2502\r\n\u2502 __exit__                                                                                         \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502     67 \u2502   \u2502   \u2502   exc_type, exc_value, exc_tb = self._exc_info                                  \u2502\r\n\u2502     68 \u2502   \u2502   \u2502   self._exc_info = None  # remove potential circular references                 \u2502\r\n\u2502     69 \u2502   \u2502   \u2502   if not self.warn_only:                                                        \u2502\r\n\u2502 \u2771   70 \u2502   \u2502   \u2502   \u2502   compat.raise_(                                                            \u2502\r\n\u2502     71 \u2502   \u2502   \u2502   \u2502   \u2502   exc_value,                                                            \u2502\r\n\u2502     72 \u2502   \u2502   \u2502   \u2502   \u2502   with_traceback=exc_tb,                                                \u2502\r\n\u2502     73 \u2502   \u2502   \u2502   \u2502   )                                                                         \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/util/compat.py:207 in raise_      \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   204 \u2502   \u2502   \u2502   exception.__cause__ = replace_context                                          \u2502\r\n\u2502   205 \u2502   \u2502                                                                                      \u2502\r\n\u2502   206 \u2502   \u2502   try:                                                                               \u2502\r\n\u2502 \u2771 207 \u2502   \u2502   \u2502   raise exception                                                                \u2502\r\n\u2502   208 \u2502   \u2502   finally:                                                                           \u2502\r\n\u2502   209 \u2502   \u2502   \u2502   # credit to                                                                    \u2502\r\n\u2502   210 \u2502   \u2502   \u2502   # https://cosmicpercolator.com/2016/01/13/exception-leaks-in-python-2-and-3/   \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/orm/session.py:3445 in _flush     \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   3442 \u2502   \u2502   try:                                                                              \u2502\r\n\u2502   3443 \u2502   \u2502   \u2502   self._warn_on_events = True                                                   \u2502\r\n\u2502   3444 \u2502   \u2502   \u2502   try:                                                                          \u2502\r\n\u2502 \u2771 3445 \u2502   \u2502   \u2502   \u2502   flush_context.execute()                                                   \u2502\r\n\u2502   3446 \u2502   \u2502   \u2502   finally:                                                                      \u2502\r\n\u2502   3447 \u2502   \u2502   \u2502   \u2502   self._warn_on_events = False                                              \u2502\r\n\u2502   3448                                                                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/orm/unitofwork.py:456 in execute  \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   453 \u2502   \u2502   \u2502   \u2502   \u2502   n.execute_aggregate(self, set_)                                        \u2502\r\n\u2502   454 \u2502   \u2502   else:                                                                              \u2502\r\n\u2502   455 \u2502   \u2502   \u2502   for rec in topological.sort(self.dependencies, postsort_actions):              \u2502\r\n\u2502 \u2771 456 \u2502   \u2502   \u2502   \u2502   rec.execute(self)                                                          \u2502\r\n\u2502   457 \u2502                                                                                          \u2502\r\n\u2502   458 \u2502   def finalize_flush_changes(self):                                                      \u2502\r\n\u2502   459 \u2502   \u2502   \"\"\"Mark processed objects as clean / deleted after a successful                    \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/orm/unitofwork.py:630 in execute  \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   627 \u2502                                                                                          \u2502\r\n\u2502   628 \u2502   @util.preload_module(\"sqlalchemy.orm.persistence\")                                     \u2502\r\n\u2502   629 \u2502   def execute(self, uow):                                                                \u2502\r\n\u2502 \u2771 630 \u2502   \u2502   util.preloaded.orm_persistence.save_obj(                                           \u2502\r\n\u2502   631 \u2502   \u2502   \u2502   self.mapper,                                                                   \u2502\r\n\u2502   632 \u2502   \u2502   \u2502   uow.states_for_mapper_hierarchy(self.mapper, False, False),                    \u2502\r\n\u2502   633 \u2502   \u2502   \u2502   uow,                                                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/orm/persistence.py:244 in         \u2502\r\n\u2502 save_obj                                                                                         \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    241 \u2502   \u2502   \u2502   update,                                                                       \u2502\r\n\u2502    242 \u2502   \u2502   )                                                                                 \u2502\r\n\u2502    243 \u2502   \u2502                                                                                     \u2502\r\n\u2502 \u2771  244 \u2502   \u2502   _emit_insert_statements(                                                          \u2502\r\n\u2502    245 \u2502   \u2502   \u2502   base_mapper,                                                                  \u2502\r\n\u2502    246 \u2502   \u2502   \u2502   uowtransaction,                                                               \u2502\r\n\u2502    247 \u2502   \u2502   \u2502   mapper,                                                                       \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/orm/persistence.py:1155 in        \u2502\r\n\u2502 _emit_insert_statements                                                                          \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1152 \u2502   \u2502   \u2502   if do_executemany:                                                            \u2502\r\n\u2502   1153 \u2502   \u2502   \u2502   \u2502   multiparams = [rec[2] for rec in records]                                 \u2502\r\n\u2502   1154 \u2502   \u2502   \u2502   \u2502                                                                             \u2502\r\n\u2502 \u2771 1155 \u2502   \u2502   \u2502   \u2502   c = connection._execute_20(                                               \u2502\r\n\u2502   1156 \u2502   \u2502   \u2502   \u2502   \u2502   statement, multiparams, execution_options=execution_options           \u2502\r\n\u2502   1157 \u2502   \u2502   \u2502   \u2502   )                                                                         \u2502\r\n\u2502   1158                                                                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/engine/base.py:1614 in            \u2502\r\n\u2502 _execute_20                                                                                      \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1611 \u2502   \u2502   \u2502   \u2502   exc.ObjectNotExecutableError(statement), replace_context=err              \u2502\r\n\u2502   1612 \u2502   \u2502   \u2502   )                                                                             \u2502\r\n\u2502   1613 \u2502   \u2502   else:                                                                             \u2502\r\n\u2502 \u2771 1614 \u2502   \u2502   \u2502   return meth(self, args_10style, kwargs_10style, execution_options)            \u2502\r\n\u2502   1615 \u2502                                                                                         \u2502\r\n\u2502   1616 \u2502   def exec_driver_sql(                                                                  \u2502\r\n\u2502   1617 \u2502   \u2502   self, statement, parameters=None, execution_options=None                          \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/sql/elements.py:325 in            \u2502\r\n\u2502 _execute_on_connection                                                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    322 \u2502   \u2502   self, connection, multiparams, params, execution_options, _force=False            \u2502\r\n\u2502    323 \u2502   ):                                                                                    \u2502\r\n\u2502    324 \u2502   \u2502   if _force or self.supports_execution:                                             \u2502\r\n\u2502 \u2771  325 \u2502   \u2502   \u2502   return connection._execute_clauseelement(                                     \u2502\r\n\u2502    326 \u2502   \u2502   \u2502   \u2502   self, multiparams, params, execution_options                              \u2502\r\n\u2502    327 \u2502   \u2502   \u2502   )                                                                             \u2502\r\n\u2502    328 \u2502   \u2502   else:                                                                             \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/engine/base.py:1481 in            \u2502\r\n\u2502 _execute_clauseelement                                                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1478 \u2502   \u2502   \u2502   schema_translate_map=schema_translate_map,                                    \u2502\r\n\u2502   1479 \u2502   \u2502   \u2502   linting=self.dialect.compiler_linting | compiler.WARN_LINTING,                \u2502\r\n\u2502   1480 \u2502   \u2502   )                                                                                 \u2502\r\n\u2502 \u2771 1481 \u2502   \u2502   ret = self._execute_context(                                                      \u2502\r\n\u2502   1482 \u2502   \u2502   \u2502   dialect,                                                                      \u2502\r\n\u2502   1483 \u2502   \u2502   \u2502   dialect.execution_ctx_cls._init_compiled,                                     \u2502\r\n\u2502   1484 \u2502   \u2502   \u2502   compiled_sql,                                                                 \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/engine/base.py:1708 in            \u2502\r\n\u2502 _execute_context                                                                                 \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1705 \u2502   \u2502   except (exc.PendingRollbackError, exc.ResourceClosedError):                       \u2502\r\n\u2502   1706 \u2502   \u2502   \u2502   raise                                                                         \u2502\r\n\u2502   1707 \u2502   \u2502   except BaseException as e:                                                        \u2502\r\n\u2502 \u2771 1708 \u2502   \u2502   \u2502   self._handle_dbapi_exception(                                                 \u2502\r\n\u2502   1709 \u2502   \u2502   \u2502   \u2502   e, util.text_type(statement), parameters, None, None                      \u2502\r\n\u2502   1710 \u2502   \u2502   \u2502   )                                                                             \u2502\r\n\u2502   1711                                                                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/engine/base.py:2026 in            \u2502\r\n\u2502 _handle_dbapi_exception                                                                          \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   2023 \u2502   \u2502   \u2502   if newraise:                                                                  \u2502\r\n\u2502   2024 \u2502   \u2502   \u2502   \u2502   util.raise_(newraise, with_traceback=exc_info[2], from_=e)                \u2502\r\n\u2502   2025 \u2502   \u2502   \u2502   elif should_wrap:                                                             \u2502\r\n\u2502 \u2771 2026 \u2502   \u2502   \u2502   \u2502   util.raise_(                                                              \u2502\r\n\u2502   2027 \u2502   \u2502   \u2502   \u2502   \u2502   sqlalchemy_exception, with_traceback=exc_info[2], from_=e             \u2502\r\n\u2502   2028 \u2502   \u2502   \u2502   \u2502   )                                                                         \u2502\r\n\u2502   2029 \u2502   \u2502   \u2502   else:                                                                         \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/util/compat.py:207 in raise_      \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   204 \u2502   \u2502   \u2502   exception.__cause__ = replace_context                                          \u2502\r\n\u2502   205 \u2502   \u2502                                                                                      \u2502\r\n\u2502   206 \u2502   \u2502   try:                                                                               \u2502\r\n\u2502 \u2771 207 \u2502   \u2502   \u2502   raise exception                                                                \u2502\r\n\u2502   208 \u2502   \u2502   finally:                                                                           \u2502\r\n\u2502   209 \u2502   \u2502   \u2502   # credit to                                                                    \u2502\r\n\u2502   210 \u2502   \u2502   \u2502   # https://cosmicpercolator.com/2016/01/13/exception-leaks-in-python-2-and-3/   \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/engine/base.py:1702 in            \u2502\r\n\u2502 _execute_context                                                                                 \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1699 \u2502   \u2502   \u2502   if conn is None:                                                              \u2502\r\n\u2502   1700 \u2502   \u2502   \u2502   \u2502   conn = self._revalidate_connection()                                      \u2502\r\n\u2502   1701 \u2502   \u2502   \u2502                                                                                 \u2502\r\n\u2502 \u2771 1702 \u2502   \u2502   \u2502   context = constructor(                                                        \u2502\r\n\u2502   1703 \u2502   \u2502   \u2502   \u2502   dialect, self, conn, execution_options, *args, **kw                       \u2502\r\n\u2502   1704 \u2502   \u2502   \u2502   )                                                                             \u2502\r\n\u2502   1705 \u2502   \u2502   except (exc.PendingRollbackError, exc.ResourceClosedError):                       \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/engine/default.py:1078 in         \u2502\r\n\u2502 _init_compiled                                                                                   \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1075 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   for key in compiled_params                                        \u2502\r\n\u2502   1076 \u2502   \u2502   \u2502   \u2502   \u2502   }                                                                     \u2502\r\n\u2502   1077 \u2502   \u2502   \u2502   \u2502   else:                                                                     \u2502\r\n\u2502 \u2771 1078 \u2502   \u2502   \u2502   \u2502   \u2502   param = {                                                             \u2502\r\n\u2502   1079 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   key: processors[key](compiled_params[key])                        \u2502\r\n\u2502   1080 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   if key in processors                                              \u2502\r\n\u2502   1081 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   else compiled_params[key]                                         \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/sqlalchemy/engine/default.py:1079 in         \u2502\r\n\u2502 <dictcomp>                                                                                       \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1076 \u2502   \u2502   \u2502   \u2502   \u2502   }                                                                     \u2502\r\n\u2502   1077 \u2502   \u2502   \u2502   \u2502   else:                                                                     \u2502\r\n\u2502   1078 \u2502   \u2502   \u2502   \u2502   \u2502   param = {                                                             \u2502\r\n\u2502 \u2771 1079 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   key: processors[key](compiled_params[key])                        \u2502\r\n\u2502   1080 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   if key in processors                                              \u2502\r\n\u2502   1081 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   else compiled_params[key]                                         \u2502\r\n\u2502   1082 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   for key in compiled_params                                        \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/pgvector/sqlalchemy/__init__.py:21 in        \u2502\r\n\u2502 process                                                                                          \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   18 \u2502                                                                                           \u2502\r\n\u2502   19 \u2502   def bind_processor(self, dialect):                                                      \u2502\r\n\u2502   20 \u2502   \u2502   def process(value):                                                                 \u2502\r\n\u2502 \u2771 21 \u2502   \u2502   \u2502   return to_db(value, self.dim)                                                   \u2502\r\n\u2502   22 \u2502   \u2502   return process                                                                      \u2502\r\n\u2502   23 \u2502                                                                                           \u2502\r\n\u2502   24 \u2502   def result_processor(self, dialect, coltype):                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/vojta/.miniconda3/lib/python3.9/site-packages/pgvector/utils/__init__.py:35 in to_db       \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   32 \u2502   \u2502   value = value.tolist()                                                              \u2502\r\n\u2502   33 \u2502                                                                                           \u2502\r\n\u2502   34 \u2502   if dim is not None and len(value) != dim:                                               \u2502\r\n\u2502 \u2771 35 \u2502   \u2502   raise ValueError('expected %d dimensions, not %d' % (dim, len(value)))              \u2502\r\n\u2502   36 \u2502                                                                                           \u2502\r\n\u2502   37 \u2502   return '[' + ','.join([str(float(v)) for v in value]) + ']'                             \u2502\r\n\u2502   38                                                                                             \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nStatementError: (builtins.ValueError) expected 1536 dimensions, not 768\r\n[SQL: INSERT INTO langchain_pg_embedding (uuid, collection_id, embedding, document, cmetadata, custom_id) VALUES \r\n(%(uuid)s, %(collection_id)s, %(embedding)s, %(document)s, %(cmetadata)s, %(custom_id)s)]\r\n[parameters: [{'embedding': [0.10074684768915176, 0.00936161819845438, 0.01689612865447998, 0.00424081739038229, \r\n0.01892073266208172, 0.02156691998243332, -0.00793 ... (174655 characters truncated) ... \r\nUUID('65a530b7-bcd4-47a2-a2df-e22fb3c353d2'), 'custom_id': '8daf3193-cf95-11ed-aea8-482ae319f16c', 'cmetadata': \r\n{'source': 'data/made-up-story.txt'}}]]\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2219/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2219/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2218",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2218/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2218/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2218/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2218",
        "id": 1648730777,
        "node_id": "I_kwDOIPDwls5iRaKZ",
        "number": 2218,
        "title": "Sometimes requests tools connect to a wrong URL while using AIPluginTool.",
        "user": {
            "login": "longmans",
            "id": 932025,
            "node_id": "MDQ6VXNlcjkzMjAyNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/932025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/longmans",
            "html_url": "https://github.com/longmans",
            "followers_url": "https://api.github.com/users/longmans/followers",
            "following_url": "https://api.github.com/users/longmans/following{/other_user}",
            "gists_url": "https://api.github.com/users/longmans/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/longmans/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/longmans/subscriptions",
            "organizations_url": "https://api.github.com/users/longmans/orgs",
            "repos_url": "https://api.github.com/users/longmans/repos",
            "events_url": "https://api.github.com/users/longmans/events{/privacy}",
            "received_events_url": "https://api.github.com/users/longmans/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-03-31T06:08:18Z",
        "updated_at": "2023-09-26T16:12:09Z",
        "closed_at": "2023-09-26T16:12:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm using this code:\r\n```\r\naiplugin_tool = AIPluginTool.from_plugin_url(\"https://xxxx/plugin/.well-known/ai-plugin.json\")\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\n\r\n\r\nllm = ChatOpenAI(temperature=0)\r\n\r\n\r\nextra_info_tool = make_vector_tool(\"{}/{}\".format(os.getcwd(), \"extra_info.txt\"))\r\nnetwork_tool = load_tools([\"requests\"])[0]\r\ntools = [network_tool, aiplugin_tool, extra_info_tool]\r\n\r\nagent_kwargs = {\"prefix\": PREFIX, \"suffix\": SUFFIX}\r\nagent_chain = initialize_agent(\r\n    tools, llm, agent=\"conversational-react-description\", verbose=True, agent_kwargs=agent_kwargs, memory=memory, max_iterations=5\r\n)\r\n\r\n\r\n```\r\nI got this error:\r\n  File \"/Users/longman/Code/langchain/plugin/venv/lib/python3.8/site-packages/langchain/chains/base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n  File \"/Users/longman/Code/langchain/plugin/venv/lib/python3.8/site-packages/langchain/agents/agent.py\", line 505, in _call\r\n    next_step_output = self._take_next_step(\r\n  File \"/Users/longman/Code/langchain/plugin/venv/lib/python3.8/site-packages/langchain/agents/agent.py\", line 423, in _take_next_step\r\n    observation = tool.run(\r\n  File \"/Users/longman/Code/langchain/plugin/venv/lib/python3.8/site-packages/langchain/tools/base.py\", line 71, in run\r\n    raise e\r\n  File \"/Users/longman/Code/langchain/plugin/venv/lib/python3.8/site-packages/langchain/tools/base.py\", line 68, in run\r\n    observation = self._run(tool_input)\r\n  File \"/Users/longman/Code/langchain/plugin/venv/lib/python3.8/site-packages/langchain/tools/requests/tool.py\", line 31, in _run\r\n    return self.requests_wrapper.get(url)\r\n  File \"/Users/longman/Code/langchain/plugin/venv/lib/python3.8/site-packages/langchain/requests.py\", line 23, in get\r\n    return requests.get(url, headers=self.headers).text\r\n  File \"/Users/longman/Code/langchain/plugin/venv/lib/python3.8/site-packages/requests/api.py\", line 73, in get\r\n    return request(\"get\", url, params=params, **kwargs)\r\n  File \"/Users/longman/Code/langchain/plugin/venv/lib/python3.8/site-packages/requests/api.py\", line 59, in request\r\n    return session.request(method=method, url=url, **kwargs)\r\n  File \"/Users/longman/Code/langchain/plugin/venv/lib/python3.8/site-packages/requests/sessions.py\", line 587, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/Users/longman/Code/langchain/plugin/venv/lib/python3.8/site-packages/requests/sessions.py\", line 701, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/Users/longman/Code/langchain/plugin/venv/lib/python3.8/site-packages/requests/adapters.py\", line 563, in send\r\n    raise SSLError(e, request=request)\r\nrequests.exceptions.SSLError: HTTPSConnectionPool(host='www.mamaimai.com', port=443): Max retries exceeded with url: /menu (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1108)')))\r\n\r\n\r\n\r\n\r\n\r\n\r\nhere is my ai-plugin.json file:\r\n{\r\n  \"schema_version\": \"v1\",\r\n  \"name_for_human\": \"Mamaimai restaurant order\",\r\n  \"name_for_model\": \"Mamaimai restaurant food order\",\r\n  \"description_for_human\": \"A plugin that helps users order and place orders\",\r\n  \"description_for_model\": \"A plugin that helps users order and place orders\",\r\n  \"auth\": {\r\n    \"type\": \"none\"\r\n  },\r\n  \"api\": {\r\n    \"type\": \"openapi\",\r\n    \"url\": \"https://the-graces.com/plugin/openapi.json\",\r\n    \"is_user_authenticated\": false\r\n  },\r\n  \"logo_url\": \"https://the-graces.com/plugin/logo.png\",\r\n  \"contact_email\": \"longman@daw.global\",\r\n  \"legal_info_url\": \"https://example.com/legal\"\r\n}",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2218/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2218/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2217",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2217/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2217/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2217/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2217",
        "id": 1648693829,
        "node_id": "I_kwDOIPDwls5iRRJF",
        "number": 2217,
        "title": "Failed to decide which tool to use.",
        "user": {
            "login": "SDADSWws",
            "id": 107572179,
            "node_id": "U_kgDOBmlr0w",
            "avatar_url": "https://avatars.githubusercontent.com/u/107572179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SDADSWws",
            "html_url": "https://github.com/SDADSWws",
            "followers_url": "https://api.github.com/users/SDADSWws/followers",
            "following_url": "https://api.github.com/users/SDADSWws/following{/other_user}",
            "gists_url": "https://api.github.com/users/SDADSWws/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SDADSWws/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SDADSWws/subscriptions",
            "organizations_url": "https://api.github.com/users/SDADSWws/orgs",
            "repos_url": "https://api.github.com/users/SDADSWws/repos",
            "events_url": "https://api.github.com/users/SDADSWws/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SDADSWws/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-03-31T05:26:32Z",
        "updated_at": "2023-09-25T16:13:33Z",
        "closed_at": "2023-09-25T16:13:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "> Entering new AgentExecutor chain...\r\nThought: Do I need to use a tool? Yes\r\nAction: the action to take, should be one of [Time, TODO List, Python Execute, Wolfram Alpha]\r\nAction Input:  Wolfram Alpha 222+222\r\nObservation: the action to take, should be one of [Time, TODO List, Python Execute, Wolfram Alpha] is not a valid tool, try another one.\r\nThought:Do I need to use a tool? Yes\r\nAction: the action to take, should be one of [Time, TODO List, Python Execute, Wolfram Alpha]\r\nAction Input: Wolfram Alpha 222+222\r\nObservation: the action to take, should be one of [Time, TODO List, Python Execute, Wolfram Alpha] is not a valid tool, try another one.\r\nThought:Do I need to use a tool? Yes\r\nAction: the action to take, should be one of [Time, TODO List, Python Execute, Wolfram Alpha]\r\nAction Input: Wolfram Alpha what is the solution to 222+222?\r\nObservation: the action to take, should be one of [Time, TODO List, Python Execute, Wolfram Alpha] is not a valid tool, try another one.\r\nThought:Do I need to use a tool? Yes\r\nAction: the action to take, should be one of [Time, TODO List, Python Execute, Wolfram Alpha]\r\nAction Input: Wolfram Alpha \"what is 222+222?\"\r\nObservation: the action to take, should be one of [Time, TODO List, Python Execute, Wolfram Alpha] is not a valid tool, try another one.\r\nThought:Do I need to use a tool? Yes\r\nAction: the action to take, should be one of [Time, TODO List, Python Execute, Wolfram Alpha]\r\nAction Input: Wolfram Alpha \"solve 222+222\"\r\nObservation: the action to take, should be one of [Time, TODO List, Python Execute, Wolfram Alpha] is not a valid tool, try another one.\r\nThought:Do I need to use a tool? Yes\r\nAction: the action to take, should be one of [Time, TODO List, Python Execute, Wolfram Alpha]\r\nAction Input: Wolfram Alpha \"what is the sum of 222 and 222?\"\r\nObservation: the action to take, should be one of [Time, TODO List, Python Execute, Wolfram Alpha] is not a valid tool, try another one.\r\nThought:Do I need to use a tool? Yes\r\nAction: the action to take, should be one of [Time, TODO List, Python Execute, Wolfram Alpha]\r\nAction Input: Wolfram Alpha \"what is 222+222\"",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2217/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2217/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2216",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2216/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2216/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2216/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2216",
        "id": 1648637565,
        "node_id": "PR_kwDOIPDwls5NUJXR",
        "number": 2216,
        "title": "Harrison/sql alchemy",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-31T04:11:25Z",
        "updated_at": "2023-04-01T19:52:10Z",
        "closed_at": "2023-04-01T19:52:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2216",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2216",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2216.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2216.patch",
            "merged_at": "2023-04-01T19:52:09Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2216/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2216/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2215",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2215/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2215/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2215/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2215",
        "id": 1648622580,
        "node_id": "PR_kwDOIPDwls5NUGI6",
        "number": 2215,
        "title": "Harrison/apify",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-31T03:50:26Z",
        "updated_at": "2023-03-31T03:58:15Z",
        "closed_at": "2023-03-31T03:58:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2215",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2215",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2215.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2215.patch",
            "merged_at": "2023-03-31T03:58:14Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2215/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2215/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2214",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2214/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2214/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2214/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2214",
        "id": 1648617756,
        "node_id": "PR_kwDOIPDwls5NUFIw",
        "number": 2214,
        "title": "sitemap more flexible",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-31T03:41:44Z",
        "updated_at": "2023-04-18T12:12:20Z",
        "closed_at": "2023-03-31T03:46:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2214",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2214",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2214.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2214.patch",
            "merged_at": "2023-03-31T03:46:36Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2214/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2214/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2213",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2213/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2213/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2213/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2213",
        "id": 1648617710,
        "node_id": "I_kwDOIPDwls5iQ-ju",
        "number": 2213,
        "title": "AttributeError in Chroma: 'LocalAPI' object has no attribute 'get_or_create_collection'",
        "user": {
            "login": "sgrening",
            "id": 23106569,
            "node_id": "MDQ6VXNlcjIzMTA2NTY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/23106569?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sgrening",
            "html_url": "https://github.com/sgrening",
            "followers_url": "https://api.github.com/users/sgrening/followers",
            "following_url": "https://api.github.com/users/sgrening/following{/other_user}",
            "gists_url": "https://api.github.com/users/sgrening/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sgrening/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sgrening/subscriptions",
            "organizations_url": "https://api.github.com/users/sgrening/orgs",
            "repos_url": "https://api.github.com/users/sgrening/repos",
            "events_url": "https://api.github.com/users/sgrening/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sgrening/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-03-31T03:41:39Z",
        "updated_at": "2023-09-25T16:13:38Z",
        "closed_at": "2023-09-25T16:13:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "While using the LangChain package to create a Vectorstore index, I encountered an AttributeError in the chroma.py file. The traceback indicates that the 'LocalAPI' object does not have the attribute 'get_or_create_collection'. This issue occurred when trying to create an index using the following code:\r\n\r\n`index = VectorstoreIndexCreator().from_loaders([loader])`\r\n\r\nHere's the full traceback:\r\n\r\nTraceback (most recent call last):\r\n ```\r\n File \"main.py\", line 29, in <module>\r\n    index = VectorstoreIndexCreator().from_loaders([loader])\r\n  File \"/home/runner/VioletWarpedDeclarations/venv/lib/python3.10/site-packages/langchain/indexes/vectorstore.py\", line 71, in from_loaders\r\n    vectorstore = self.vectorstore_cls.from_documents(\r\n  File \"/home/runner/VioletWarpedDeclarations/venv/lib/python3.10/site-packages/langchain/vectorstores/chroma.py\", line 268, in from_documents\r\n    return cls.from_texts(\r\n  File \"/home/runner/VioletWarpedDeclarations/venv/lib/python3.10/site-packages/langchain/vectorstores/chroma.py\", line 231, in from_texts\r\n    chroma_collection = cls(\r\n  File \"/home/runner/VioletWarpedDeclarations/venv/lib/python3.10/site-packages/langchain/vectorstores/chroma.py\", line 81, in __init__\r\n    self._collection = self._client.get_or_create_collection(\r\nAttributeError: 'LocalAPI' object has no attribute 'get_or_create_collection'. Did you mean: 'create_collection'?\r\n```\r\nIt seems like the 'LocalAPI' object is missing the 'get_or_create_collection' method or the method's name might have been changed in the recent updates.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2213/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2213/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2212",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2212/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2212/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2212/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2212",
        "id": 1648605512,
        "node_id": "I_kwDOIPDwls5iQ7lI",
        "number": 2212,
        "title": "error when there are quotation marks in prompt template string",
        "user": {
            "login": "xlbao123",
            "id": 59169032,
            "node_id": "MDQ6VXNlcjU5MTY5MDMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/59169032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xlbao123",
            "html_url": "https://github.com/xlbao123",
            "followers_url": "https://api.github.com/users/xlbao123/followers",
            "following_url": "https://api.github.com/users/xlbao123/following{/other_user}",
            "gists_url": "https://api.github.com/users/xlbao123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xlbao123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xlbao123/subscriptions",
            "organizations_url": "https://api.github.com/users/xlbao123/orgs",
            "repos_url": "https://api.github.com/users/xlbao123/repos",
            "events_url": "https://api.github.com/users/xlbao123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xlbao123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-03-31T03:21:33Z",
        "updated_at": "2023-12-06T11:53:08Z",
        "closed_at": "2023-04-17T01:54:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "hi, I want to include json data in the template, the code and error is as follows, please help me to solve it.\r\n\r\n```python\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain import PromptTemplate, LLMChain\r\nfrom langchain.chains import ConversationChain\r\nfrom langchain.prompts.chat import SystemMessagePromptTemplate\r\n\r\nsystem = r'Me: Set an alarm\\nYou: {\"content\":{\"type\":\"alarm\",\"time\":\"17:00\"}}'\r\nsystem_prompt = SystemMessagePromptTemplate.from_template(system)\r\n#system_prompt = SystemMessagePromptTemplate.from_template(system.replace('\"', '\\\\\"'))\r\n```\r\n\r\nthe error is:\r\n```bash\r\nTraceback (most recent call last):\r\n  File \"/mnt/d/works/chatgpt-cli/tt.py\", line 8, in <module>\r\n    system_prompt = SystemMessagePromptTemplate.from_template(system.replace('\"', '\\\\\"'))\r\n  File \"/home/xlbao/.local/lib/python3.9/site-packages/langchain/prompts/chat.py\", line 67, in from_template\r\n    prompt = PromptTemplate.from_template(template)\r\n  File \"/home/xlbao/.local/lib/python3.9/site-packages/langchain/prompts/prompt.py\", line 130, in from_template\r\n    return cls(input_variables=list(sorted(input_variables)), template=template)\r\n  File \"pydantic/main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for PromptTemplate\r\n__root__\r\n  Invalid prompt schema; check for mismatched or missing input parameters. '\\\\\"type\\\\\"' (type=value_error)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2212/reactions",
            "total_count": 4,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 1,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2212/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2211",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2211/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2211/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2211/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2211",
        "id": 1648559252,
        "node_id": "I_kwDOIPDwls5iQwSU",
        "number": 2211,
        "title": "Implement \"Adversarial fact checking\" functionality",
        "user": {
            "login": "jasondotparse",
            "id": 13938372,
            "node_id": "MDQ6VXNlcjEzOTM4Mzcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13938372?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondotparse",
            "html_url": "https://github.com/jasondotparse",
            "followers_url": "https://api.github.com/users/jasondotparse/followers",
            "following_url": "https://api.github.com/users/jasondotparse/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondotparse/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondotparse/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondotparse/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondotparse/orgs",
            "repos_url": "https://api.github.com/users/jasondotparse/repos",
            "events_url": "https://api.github.com/users/jasondotparse/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondotparse/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-03-31T02:15:24Z",
        "updated_at": "2023-09-26T16:12:14Z",
        "closed_at": "2023-09-26T16:12:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## Concept \r\nIt would be useful if Agents had the ability to fact check their own work using a different LLM in an adversarial manner to \"second guess\" their assumptions and potentially provide feedback before allowing the final \"answer\" to surface to the end user. \r\n\r\nFor example, if a chain completes and an Agent is ready to return its final answer, the \"fact checking\" functionality (perhaps a Tool) could kick off another chain (with a different model perhaps) to validate the original answer or instruct it to perform more work before the user is given the final answer.\r\n\r\n(This is currently an experimental work in progress being done by myself and https://github.com/maxtheman. If you would like to contribute to the effort to test and implement this functionality, feel free to reach out on Discord @jasondotparse )",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2211/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2211/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2210",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2210/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2210/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2210/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2210",
        "id": 1648538188,
        "node_id": "PR_kwDOIPDwls5NT0z_",
        "number": 2210,
        "title": "Update vectorstore-retriever.ipynb",
        "user": {
            "login": "stakodiak",
            "id": 1082786,
            "node_id": "MDQ6VXNlcjEwODI3ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1082786?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stakodiak",
            "html_url": "https://github.com/stakodiak",
            "followers_url": "https://api.github.com/users/stakodiak/followers",
            "following_url": "https://api.github.com/users/stakodiak/following{/other_user}",
            "gists_url": "https://api.github.com/users/stakodiak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stakodiak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stakodiak/subscriptions",
            "organizations_url": "https://api.github.com/users/stakodiak/orgs",
            "repos_url": "https://api.github.com/users/stakodiak/repos",
            "events_url": "https://api.github.com/users/stakodiak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stakodiak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-31T01:42:25Z",
        "updated_at": "2023-03-31T03:51:47Z",
        "closed_at": "2023-03-31T03:51:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2210",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2210",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2210.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2210.patch",
            "merged_at": "2023-03-31T03:51:46Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2210/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2210/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2209",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2209/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2209/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2209/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2209",
        "id": 1648534494,
        "node_id": "PR_kwDOIPDwls5NT0EN",
        "number": 2209,
        "title": "make requests more general",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-31T01:35:33Z",
        "updated_at": "2023-03-31T03:41:57Z",
        "closed_at": "2023-03-31T03:41:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2209",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2209",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2209.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2209.patch",
            "merged_at": "2023-03-31T03:41:56Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2209/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2209/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2208",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2208/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2208/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2208/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2208",
        "id": 1648510025,
        "node_id": "I_kwDOIPDwls5iQkRJ",
        "number": 2208,
        "title": "Plugin chat gpt",
        "user": {
            "login": "feyhero",
            "id": 56613861,
            "node_id": "MDQ6VXNlcjU2NjEzODYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/56613861?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/feyhero",
            "html_url": "https://github.com/feyhero",
            "followers_url": "https://api.github.com/users/feyhero/followers",
            "following_url": "https://api.github.com/users/feyhero/following{/other_user}",
            "gists_url": "https://api.github.com/users/feyhero/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/feyhero/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/feyhero/subscriptions",
            "organizations_url": "https://api.github.com/users/feyhero/orgs",
            "repos_url": "https://api.github.com/users/feyhero/repos",
            "events_url": "https://api.github.com/users/feyhero/events{/privacy}",
            "received_events_url": "https://api.github.com/users/feyhero/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-31T00:58:01Z",
        "updated_at": "2023-09-10T16:39:12Z",
        "closed_at": "2023-09-10T16:39:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2208/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2208/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2207",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2207/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2207/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2207/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2207",
        "id": 1648441984,
        "node_id": "PR_kwDOIPDwls5NTgp2",
        "number": 2207,
        "title": "Reflect metadata only for included tables",
        "user": {
            "login": "raj3shv",
            "id": 1542998,
            "node_id": "MDQ6VXNlcjE1NDI5OTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1542998?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raj3shv",
            "html_url": "https://github.com/raj3shv",
            "followers_url": "https://api.github.com/users/raj3shv/followers",
            "following_url": "https://api.github.com/users/raj3shv/following{/other_user}",
            "gists_url": "https://api.github.com/users/raj3shv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raj3shv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raj3shv/subscriptions",
            "organizations_url": "https://api.github.com/users/raj3shv/orgs",
            "repos_url": "https://api.github.com/users/raj3shv/repos",
            "events_url": "https://api.github.com/users/raj3shv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raj3shv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-30T23:11:19Z",
        "updated_at": "2023-04-01T16:00:20Z",
        "closed_at": "2023-04-01T16:00:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2207",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2207",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2207.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2207.patch",
            "merged_at": null
        },
        "body": "Reflecting all tables is unnecessary when include_tables is provided. It's time-taking and prone to errors. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2207/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2207/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2206",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2206/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2206/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2206/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2206",
        "id": 1648435963,
        "node_id": "I_kwDOIPDwls5iQSL7",
        "number": 2206,
        "title": "cannot import name 'PromptTemplate' from partially initialized module 'langchain' (most likely due to a circular import)",
        "user": {
            "login": "creo13",
            "id": 29203907,
            "node_id": "MDQ6VXNlcjI5MjAzOTA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/29203907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/creo13",
            "html_url": "https://github.com/creo13",
            "followers_url": "https://api.github.com/users/creo13/followers",
            "following_url": "https://api.github.com/users/creo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/creo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/creo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/creo13/subscriptions",
            "organizations_url": "https://api.github.com/users/creo13/orgs",
            "repos_url": "https://api.github.com/users/creo13/repos",
            "events_url": "https://api.github.com/users/creo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/creo13/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-30T23:03:17Z",
        "updated_at": "2023-03-30T23:19:52Z",
        "closed_at": "2023-03-30T23:19:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Greetings. Followed the tutorial and got pretty far, so I know langchain works on the environment (below). However, the following error below appeared out of nowhere. Tried restarting the environment and still getting the same error. Tried pip uninstalling langchain and reinstalling but still outputting the same error.\r\n\r\nPython 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from langchain.llms import OpenAI\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\...\\langchain.py\", line 2, in <module>\r\n    from langchain import PromptTemplate, HuggingFaceHub, LLMChain\r\nImportError: cannot import name 'PromptTemplate' from partially initialized module 'langchain' (most likely due to a circular import) (C:\\...\\langchain.py)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2206/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2206/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2205",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2205/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2205/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2205/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2205",
        "id": 1648415099,
        "node_id": "I_kwDOIPDwls5iQNF7",
        "number": 2205,
        "title": "ChromaDB/VectorStore Problem: \"NotEnoughElementsException: Number of requested results 4 cannot be greater than number of elements in index 1\"",
        "user": {
            "login": "pmcray",
            "id": 540234,
            "node_id": "MDQ6VXNlcjU0MDIzNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/540234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmcray",
            "html_url": "https://github.com/pmcray",
            "followers_url": "https://api.github.com/users/pmcray/followers",
            "following_url": "https://api.github.com/users/pmcray/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmcray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmcray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmcray/subscriptions",
            "organizations_url": "https://api.github.com/users/pmcray/orgs",
            "repos_url": "https://api.github.com/users/pmcray/repos",
            "events_url": "https://api.github.com/users/pmcray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmcray/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-03-30T22:36:23Z",
        "updated_at": "2023-09-26T16:12:18Z",
        "closed_at": "2023-09-26T16:12:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am using langchain in CoLab and have come across this ChromaDB/VectorStore problem a few times, mostly recently with the code below. The piece of text I am importing is only a few hundred characters. I found this issue on the ChromaDB repository: https://github.com/chroma-core/chroma/issues/225, which is the same or similar issue. This made be think it might be that I didn't need to split the text, but it makes no difference when hashed out the text splitter lines. Any thoughts on what might the issue here?\r\n\r\nloader = TextLoader('./report.txt')\r\ndocuments = loader.load()\r\n#text_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\n#texts = text_splitter.split_documents(documents)\r\n\r\nembeddings = OpenAIEmbeddings()\r\nreport_store = Chroma.from_documents(documents, embeddings, collection_name=\"report\")\r\n\r\nllm = OpenAI(temperature=0)\r\n\r\nvectorstore_info = VectorStoreInfo(name=\"report\", description=\"the most recent weekly API report\", vectorstore=report_store)\r\n\r\ntoolkit = VectorStoreToolkit(vectorstore_info=vectorstore_info)\r\nagent_executor = create_vectorstore_agent(llm=llm, toolkit=toolkit, verbose=True)\r\n\r\nagent_executor.run(\"How many APIs were in the Red Zone this week?\")\r\n\r\n> Entering new AgentExecutor chain...\r\n I need to find out the answer from the report\r\nAction: report\r\nAction Input: How many APIs were in the Red Zone this week?\r\n---------------------------------------------------------------------------\r\nNotEnoughElementsException                Traceback (most recent call last)\r\n[<ipython-input-21-22938c4f7204>](https://localhost:8080/#) in <cell line: 1>()\r\n----> 1 agent_executor.run(\"How many APIs were in the Red Zone this week?\")\r\n\r\n18 frames\r\n[/usr/local/lib/python3.9/dist-packages/chromadb/db/index/hnswlib.py](https://localhost:8080/#) in get_nearest_neighbors(self, query, k, ids)\r\n    226 \r\n    227         if k > self._index_metadata[\"elements\"]:\r\n--> 228             raise NotEnoughElementsException(\r\n    229                 f\"Number of requested results {k} cannot be greater than number of elements in index {self._index_metadata['elements']}\"\r\n    230             )\r\n\r\nNotEnoughElementsException: Number of requested results 4 cannot be greater than number of elements in index 1",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2205/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2205/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2204",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2204/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2204/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2204/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2204",
        "id": 1648328520,
        "node_id": "I_kwDOIPDwls5iP39I",
        "number": 2204,
        "title": "Rate limit error when using davinci model",
        "user": {
            "login": "complete-dope",
            "id": 97352487,
            "node_id": "U_kgDOBc17Jw",
            "avatar_url": "https://avatars.githubusercontent.com/u/97352487?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/complete-dope",
            "html_url": "https://github.com/complete-dope",
            "followers_url": "https://api.github.com/users/complete-dope/followers",
            "following_url": "https://api.github.com/users/complete-dope/following{/other_user}",
            "gists_url": "https://api.github.com/users/complete-dope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/complete-dope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/complete-dope/subscriptions",
            "organizations_url": "https://api.github.com/users/complete-dope/orgs",
            "repos_url": "https://api.github.com/users/complete-dope/repos",
            "events_url": "https://api.github.com/users/complete-dope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/complete-dope/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-03-30T21:11:48Z",
        "updated_at": "2023-03-31T20:16:02Z",
        "closed_at": "2023-03-31T20:16:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "WARNING:langchain.llms.openai:Retrying langchain.llms.openai.completion_with_retry.<locals>._completion_with_retry in 4.0 seconds as it raised RateLimitError: You exceeded your current quota, please check your plan and billing details..\r\n\r\n**Does anyone has a solution for this error ??**\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2204/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2204/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2203",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2203/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2203/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2203/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2203",
        "id": 1648133600,
        "node_id": "PR_kwDOIPDwls5NSf2u",
        "number": 2203,
        "title": "Update huggingface_length_function.ipynb",
        "user": {
            "login": "eltociear",
            "id": 22633385,
            "node_id": "MDQ6VXNlcjIyNjMzMzg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22633385?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eltociear",
            "html_url": "https://github.com/eltociear",
            "followers_url": "https://api.github.com/users/eltociear/followers",
            "following_url": "https://api.github.com/users/eltociear/following{/other_user}",
            "gists_url": "https://api.github.com/users/eltociear/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eltociear/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eltociear/subscriptions",
            "organizations_url": "https://api.github.com/users/eltociear/orgs",
            "repos_url": "https://api.github.com/users/eltociear/repos",
            "events_url": "https://api.github.com/users/eltociear/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eltociear/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-30T18:44:18Z",
        "updated_at": "2023-03-31T03:43:59Z",
        "closed_at": "2023-03-31T03:43:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2203",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2203",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2203.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2203.patch",
            "merged_at": "2023-03-31T03:43:59Z"
        },
        "body": "HuggingFace -> Hugging Face",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2203/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2203/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2202",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2202/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2202/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2202/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2202",
        "id": 1647959439,
        "node_id": "PR_kwDOIPDwls5NR6bo",
        "number": 2202,
        "title": "feat: document loader for epublications",
        "user": {
            "login": "MthwRobinson",
            "id": 1635179,
            "node_id": "MDQ6VXNlcjE2MzUxNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1635179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MthwRobinson",
            "html_url": "https://github.com/MthwRobinson",
            "followers_url": "https://api.github.com/users/MthwRobinson/followers",
            "following_url": "https://api.github.com/users/MthwRobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/MthwRobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MthwRobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MthwRobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/MthwRobinson/orgs",
            "repos_url": "https://api.github.com/users/MthwRobinson/repos",
            "events_url": "https://api.github.com/users/MthwRobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MthwRobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-30T16:40:41Z",
        "updated_at": "2023-03-31T03:45:31Z",
        "closed_at": "2023-03-31T03:45:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2202",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2202",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2202.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2202.patch",
            "merged_at": "2023-03-31T03:45:31Z"
        },
        "body": "### Summary\r\n\r\nAdds a new document loader for processing e-publications. Works with `unstructured>=0.5.4`. You need to have [`pandoc`](https://pandoc.org/installing.html) installed for this loader to work.\r\n\r\n### Testing\r\n\r\n```python\r\nfrom langchain.document_loaders import UnstructuredEPubLoader\r\n\r\nloader = UnstructuredEPubLoader(\"winter-sports.epub\", mode=\"elements\")\r\ndata = loader.load()\r\ndata[0]\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2202/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2202/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2201",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2201/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2201/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2201/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2201",
        "id": 1647897109,
        "node_id": "PR_kwDOIPDwls5NRtDL",
        "number": 2201,
        "title": "feat: Add Apify integration in document loaders and utilities",
        "user": {
            "login": "jirimoravcik",
            "id": 951187,
            "node_id": "MDQ6VXNlcjk1MTE4Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/951187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jirimoravcik",
            "html_url": "https://github.com/jirimoravcik",
            "followers_url": "https://api.github.com/users/jirimoravcik/followers",
            "following_url": "https://api.github.com/users/jirimoravcik/following{/other_user}",
            "gists_url": "https://api.github.com/users/jirimoravcik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jirimoravcik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jirimoravcik/subscriptions",
            "organizations_url": "https://api.github.com/users/jirimoravcik/orgs",
            "repos_url": "https://api.github.com/users/jirimoravcik/repos",
            "events_url": "https://api.github.com/users/jirimoravcik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jirimoravcik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-30T15:56:59Z",
        "updated_at": "2023-03-31T03:47:19Z",
        "closed_at": "2023-03-31T03:47:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2201",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2201",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2201.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2201.patch",
            "merged_at": "2023-03-31T03:47:19Z"
        },
        "body": "Adds an integration with the [Apify](https://apify.com/) platform. Apify is a web scraping and data extraction platform. You can use it to get content from documentation, knowledge bases, help centers, or blogs. \r\n\r\nApify welcomes all developers, they can sign up for a free account [here](https://console.apify.com/sign-up).\r\n\r\n## Usage\r\n```python\r\nimport os\r\nfrom langchain.document_loaders.base import Document\r\nfrom langchain.indexes import VectorstoreIndexCreator\r\nfrom langchain.utilities import ApifyWrapper\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = \"Your OpenAI API key\"\r\nos.environ[\"APIFY_API_TOKEN\"] = \"Your Apify API token\"\r\n\r\napify = ApifyWrapper()\r\n\r\nloader = apify.call_actor(\r\n    actor_id=\"apify/website-content-crawler\",\r\n    run_input={\"startUrls\": [{\"url\": \"https://python.langchain.com/en/latest/\"}]},\r\n    dataset_mapping_function=lambda item: Document(\r\n        page_content=item[\"text\"] or \"\", metadata={\"source\": item[\"url\"]}\r\n    ),\r\n)\r\n\r\nindex = VectorstoreIndexCreator().from_loaders([loader])\r\nquery = \"What is LangChain?\"\r\nresult = index.query_with_sources(query)\r\n\r\nprint(result[\"answer\"])\r\nprint(result[\"sources\"])\r\n```\r\n### Output\r\n```\r\nLangChain is a standard interface through which you can interact with a variety of large language models (LLMs). It provides modules that can be used to build language model applications, and it also provides chains and agents with memory capabilities.\r\n\r\nhttps://python.langchain.com/en/latest/modules/models/llms.html, https://python.langchain.com/en/latest/getting_started/getting_started.html\r\n```\r\n\r\nThis PR includes all the required code with docstrings, and documentation with examples. If you have any suggestions how to improve this PR, feel free to comment here.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2201/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2201/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2200",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2200/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2200/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2200/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2200",
        "id": 1647862537,
        "node_id": "PR_kwDOIPDwls5NRlpm",
        "number": 2200,
        "title": "embedding docs",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-30T15:34:08Z",
        "updated_at": "2023-03-30T15:34:16Z",
        "closed_at": "2023-03-30T15:34:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2200",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2200",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2200.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2200.patch",
            "merged_at": "2023-03-30T15:34:15Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2200/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2200/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2199",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2199/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2199/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2199/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2199",
        "id": 1647839422,
        "node_id": "PR_kwDOIPDwls5NRgtW",
        "number": 2199,
        "title": "Harrison/docs reqs",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-30T15:19:59Z",
        "updated_at": "2023-03-30T15:20:32Z",
        "closed_at": "2023-03-30T15:20:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2199",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2199",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2199.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2199.patch",
            "merged_at": "2023-03-30T15:20:31Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2199/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2199/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2197",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2197/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2197/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2197/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2197",
        "id": 1647803073,
        "node_id": "PR_kwDOIPDwls5NRY78",
        "number": 2197,
        "title": "bump version to 127",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-30T14:59:06Z",
        "updated_at": "2023-03-30T15:11:06Z",
        "closed_at": "2023-03-30T15:11:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2197",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2197",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2197.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2197.patch",
            "merged_at": "2023-03-30T15:11:04Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2197/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2197/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2195",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2195/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2195/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2195/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2195",
        "id": 1647706778,
        "node_id": "PR_kwDOIPDwls5NREFD",
        "number": 2195,
        "title": "Update text.py",
        "user": {
            "login": "Jeru2023",
            "id": 123569003,
            "node_id": "U_kgDOB12Daw",
            "avatar_url": "https://avatars.githubusercontent.com/u/123569003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jeru2023",
            "html_url": "https://github.com/Jeru2023",
            "followers_url": "https://api.github.com/users/Jeru2023/followers",
            "following_url": "https://api.github.com/users/Jeru2023/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jeru2023/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jeru2023/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jeru2023/subscriptions",
            "organizations_url": "https://api.github.com/users/Jeru2023/orgs",
            "repos_url": "https://api.github.com/users/Jeru2023/repos",
            "events_url": "https://api.github.com/users/Jeru2023/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jeru2023/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-30T14:07:57Z",
        "updated_at": "2023-04-14T20:51:54Z",
        "closed_at": "2023-03-30T14:52:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2195",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2195",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2195.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2195.patch",
            "merged_at": "2023-03-30T14:52:17Z"
        },
        "body": "Add encoding parameter when open txt file to support unicode files.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2195/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2195/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2194",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2194/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2194/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2194/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2194",
        "id": 1647620759,
        "node_id": "PR_kwDOIPDwls5NQxLZ",
        "number": 2194,
        "title": "Small typo in custom_agent.ipynb",
        "user": {
            "login": "adelevie",
            "id": 86790,
            "node_id": "MDQ6VXNlcjg2Nzkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/86790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adelevie",
            "html_url": "https://github.com/adelevie",
            "followers_url": "https://api.github.com/users/adelevie/followers",
            "following_url": "https://api.github.com/users/adelevie/following{/other_user}",
            "gists_url": "https://api.github.com/users/adelevie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adelevie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adelevie/subscriptions",
            "organizations_url": "https://api.github.com/users/adelevie/orgs",
            "repos_url": "https://api.github.com/users/adelevie/repos",
            "events_url": "https://api.github.com/users/adelevie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adelevie/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-30T13:25:03Z",
        "updated_at": "2023-03-30T14:52:30Z",
        "closed_at": "2023-03-30T14:52:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2194",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2194",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2194.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2194.patch",
            "merged_at": "2023-03-30T14:52:29Z"
        },
        "body": "determin -> determine",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2194/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2194/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2193",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2193/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2193/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2193/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2193",
        "id": 1647606827,
        "node_id": "PR_kwDOIPDwls5NQuM-",
        "number": 2193,
        "title": "fix typo in chat_prompt_template docs",
        "user": {
            "login": "czue",
            "id": 66555,
            "node_id": "MDQ6VXNlcjY2NTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/66555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/czue",
            "html_url": "https://github.com/czue",
            "followers_url": "https://api.github.com/users/czue/followers",
            "following_url": "https://api.github.com/users/czue/following{/other_user}",
            "gists_url": "https://api.github.com/users/czue/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/czue/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/czue/subscriptions",
            "organizations_url": "https://api.github.com/users/czue/orgs",
            "repos_url": "https://api.github.com/users/czue/repos",
            "events_url": "https://api.github.com/users/czue/events{/privacy}",
            "received_events_url": "https://api.github.com/users/czue/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-30T13:17:44Z",
        "updated_at": "2023-03-30T14:52:41Z",
        "closed_at": "2023-03-30T14:52:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2193",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2193",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2193.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2193.patch",
            "merged_at": "2023-03-30T14:52:41Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2193/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2193/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2192",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2192/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2192/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2192/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2192",
        "id": 1647474312,
        "node_id": "I_kwDOIPDwls5iMnaI",
        "number": 2192,
        "title": "summarization",
        "user": {
            "login": "scarea",
            "id": 86663355,
            "node_id": "MDQ6VXNlcjg2NjYzMzU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/86663355?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scarea",
            "html_url": "https://github.com/scarea",
            "followers_url": "https://api.github.com/users/scarea/followers",
            "following_url": "https://api.github.com/users/scarea/following{/other_user}",
            "gists_url": "https://api.github.com/users/scarea/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scarea/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scarea/subscriptions",
            "organizations_url": "https://api.github.com/users/scarea/orgs",
            "repos_url": "https://api.github.com/users/scarea/repos",
            "events_url": "https://api.github.com/users/scarea/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scarea/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-30T11:58:21Z",
        "updated_at": "2023-09-18T16:21:48Z",
        "closed_at": "2023-09-18T16:21:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I want to know if I am use this example to upload a text which exceeds 4097 tokens, it will definitely report an error because which  passed the text_splitter takes 4000 as a block default, and then takes the first three segments. This way, the token passed into the model must be greater than 4097, even if the chain_ type=\"map_reduce\"\r\n[https://python.langchain.com/en/latest/modules/chains/index_examples/summarize.html](https://python.langchain.com/en/latest/modules/chains/index_examples/summarize.html)\r\n\r\nSorry, I'm a novice coder. I've been looking for a chain for the past two days, which can help me solve the problem of long text summary summaries. I see a map_reduce seems to work, but after my testing, it doesn't work. can you tell me if there are any encapsulated methods for handling chains with more than 4097 tokens besides their own word segmentation recursion.\"",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2192/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2192/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2191",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2191/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2191/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2191/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2191",
        "id": 1647466370,
        "node_id": "PR_kwDOIPDwls5NQPlt",
        "number": 2191,
        "title": "Adding = sign after chat otherwise jupyter cell will throw an error.",
        "user": {
            "login": "punitvara",
            "id": 9531144,
            "node_id": "MDQ6VXNlcjk1MzExNDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9531144?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/punitvara",
            "html_url": "https://github.com/punitvara",
            "followers_url": "https://api.github.com/users/punitvara/followers",
            "following_url": "https://api.github.com/users/punitvara/following{/other_user}",
            "gists_url": "https://api.github.com/users/punitvara/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/punitvara/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/punitvara/subscriptions",
            "organizations_url": "https://api.github.com/users/punitvara/orgs",
            "repos_url": "https://api.github.com/users/punitvara/repos",
            "events_url": "https://api.github.com/users/punitvara/events{/privacy}",
            "received_events_url": "https://api.github.com/users/punitvara/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-30T11:52:38Z",
        "updated_at": "2023-03-30T15:11:54Z",
        "closed_at": "2023-03-30T15:11:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2191",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2191",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2191.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2191.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2191/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2191/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2190",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2190/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2190/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2190/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/2190",
        "id": 1647464242,
        "node_id": "I_kwDOIPDwls5iMk8y",
        "number": 2190,
        "title": "AzureOpenAI wrong engine name",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-30T11:51:06Z",
        "updated_at": "2023-09-10T16:39:21Z",
        "closed_at": "2023-09-10T16:39:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\n\r\nI want to use a model deployment from Azure for embeddings (I use version 0.0.123 of langchain). Like this:\r\n\r\n```python\r\nAzureOpenAI(\r\n  deployment_name=\"<my deployment name>\",\r\n  model_name=\"text-embedding-ada-002\",\r\n  ...\r\n)\r\n```\r\n\r\nBut I get 'The API deployment for this resource does not exist.' in the response.\r\n\r\nI debugged the code and noticed that the wrong engine name was provided to the Azure API:\r\nIn [openai.py](https://github.com/hwchase17/langchain/blob/master/langchain/embeddings/openai.py#L257), the `model_name` is put in the `engine` parameter, but `deployment_name` should be used for Azure.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2190/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2190/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2189",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2189/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2189/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2189/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/2189",
        "id": 1647399835,
        "node_id": "PR_kwDOIPDwls5NQA_E",
        "number": 2189,
        "title": "Add add_system_messsage to BaseChatMessageHistory",
        "user": {
            "login": "alvarosevilla95",
            "id": 1376447,
            "node_id": "MDQ6VXNlcjEzNzY0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1376447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alvarosevilla95",
            "html_url": "https://github.com/alvarosevilla95",
            "followers_url": "https://api.github.com/users/alvarosevilla95/followers",
            "following_url": "https://api.github.com/users/alvarosevilla95/following{/other_user}",
            "gists_url": "https://api.github.com/users/alvarosevilla95/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alvarosevilla95/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alvarosevilla95/subscriptions",
            "organizations_url": "https://api.github.com/users/alvarosevilla95/orgs",
            "repos_url": "https://api.github.com/users/alvarosevilla95/repos",
            "events_url": "https://api.github.com/users/alvarosevilla95/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alvarosevilla95/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-03-30T11:07:57Z",
        "updated_at": "2023-04-08T05:14:26Z",
        "closed_at": "2023-03-31T08:56:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/2189",
            "html_url": "https://github.com/langchain-ai/langchain/pull/2189",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/2189.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/2189.patch",
            "merged_at": null
        },
        "body": "Adds a new method to BaseChatMessageHistory to add system messages.\r\n\r\nI'm not sure if there's a rationale for keeping system messages out of the interface (is this too specific to OpenAI models?), but it seems useful to me to be able to sprinkle them at will.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/2189/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/2189/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]