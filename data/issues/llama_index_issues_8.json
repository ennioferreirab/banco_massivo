[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8804",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8804/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8804/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8804/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8804",
        "id": 1985655206,
        "node_id": "I_kwDOIWuq5852WrGm",
        "number": 8804,
        "title": "[Question]:  How do I add topical safety and content safety to my application.",
        "user": {
            "login": "ram510",
            "id": 2175155,
            "node_id": "MDQ6VXNlcjIxNzUxNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2175155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ram510",
            "html_url": "https://github.com/ram510",
            "followers_url": "https://api.github.com/users/ram510/followers",
            "following_url": "https://api.github.com/users/ram510/following{/other_user}",
            "gists_url": "https://api.github.com/users/ram510/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ram510/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ram510/subscriptions",
            "organizations_url": "https://api.github.com/users/ram510/orgs",
            "repos_url": "https://api.github.com/users/ram510/repos",
            "events_url": "https://api.github.com/users/ram510/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ram510/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-09T13:43:43Z",
        "updated_at": "2023-11-15T04:40:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHere is my retriever and query engine, How do I apply content and topical safety to my application.\r\nIs there a way I can implement demo guard rails into my application.\r\n\r\nfrom llama_index import QueryBundle\r\nfrom llama_index.retrievers import BaseRetriever\r\nfrom typing import Any, List\r\nfrom llama_index.vector_stores import VectorStoreQuery\r\nfrom llama_index.schema import NodeWithScore\r\nfrom typing import Optional\r\n\r\nclass VectorDBRetriever(BaseRetriever):\r\n    \"\"\"Retriever over a postgres vector store.\"\"\"\r\n\r\n    def __init__(\r\n        self,\r\n        vector_store: PGVectorStore,\r\n        embed_model: Any,\r\n        query_mode: str = \"default\",\r\n        similarity_top_k: int = 2,\r\n    ) -> None:\r\n        \"\"\"Init params.\"\"\"\r\n        self._vector_store = vector_store\r\n        self._embed_model = embed_model\r\n        self._query_mode = query_mode\r\n        self._similarity_top_k = similarity_top_k\r\n\r\n    def _retrieve(self, query_bundle: QueryBundle) -> List[NodeWithScore]:\r\n        \"\"\"Retrieve.\"\"\"\r\n        query_embedding = embed_model.get_query_embedding(query_str)\r\n        vector_store_query = VectorStoreQuery(\r\n            query_embedding=query_embedding,\r\n            similarity_top_k=self._similarity_top_k,\r\n            mode=self._query_mode,\r\n        )\r\n        query_result = vector_store.query(vector_store_query)\r\n\r\n        nodes_with_scores = []\r\n        for index, node in enumerate(query_result.nodes):\r\n            score: Optional[float] = None\r\n            if query_result.similarities is not None:\r\n                score = query_result.similarities[index]\r\n            nodes_with_scores.append(NodeWithScore(node=node, score=score))\r\n\r\n        return nodes_with_scores\r\n    \r\n    retriever = VectorDBRetriever(\r\n    vector_store, embed_model, query_mode=\"default\", similarity_top_k=2\r\n)\r\n    \r\nquery_engine = RetrieverQueryEngine.from_args(\r\n    retriever, service_context=service_context\r\n\r\n)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8804/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8804/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8803",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8803/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8803/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8803/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8803",
        "id": 1985651595,
        "node_id": "I_kwDOIWuq5852WqOL",
        "number": 8803,
        "title": "[Feature Request]: Implementation of Nemo Guard Rails for Content Safety and Topical safety ",
        "user": {
            "login": "ram510",
            "id": 2175155,
            "node_id": "MDQ6VXNlcjIxNzUxNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2175155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ram510",
            "html_url": "https://github.com/ram510",
            "followers_url": "https://api.github.com/users/ram510/followers",
            "following_url": "https://api.github.com/users/ram510/following{/other_user}",
            "gists_url": "https://api.github.com/users/ram510/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ram510/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ram510/subscriptions",
            "organizations_url": "https://api.github.com/users/ram510/orgs",
            "repos_url": "https://api.github.com/users/ram510/repos",
            "events_url": "https://api.github.com/users/ram510/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ram510/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 6210489544,
                "node_id": "LA_kwDOIWuq588AAAABciyMyA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/safety",
                "name": "safety",
                "color": "9BA73C",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-09T13:41:43Z",
        "updated_at": "2023-11-15T04:34:38Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nNow the LLM application answer questions on anything without restricting to the vectorised topics.\r\nIt will be a great add on if Nemo Guard rails like feature is inbuilt into Llama Index for content and Topical safety.\n\n### Reason\n\nContent and Topical Safety\n\n### Value of Feature\n\nwill be used by every user, who's putting the application on Production",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8803/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8803/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8802",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8802/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8802/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8802/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8802",
        "id": 1985647384,
        "node_id": "I_kwDOIWuq5852WpMY",
        "number": 8802,
        "title": "[Question]:  Conversational chat agent with history and previous responses as context.",
        "user": {
            "login": "ram510",
            "id": 2175155,
            "node_id": "MDQ6VXNlcjIxNzUxNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2175155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ram510",
            "html_url": "https://github.com/ram510",
            "followers_url": "https://api.github.com/users/ram510/followers",
            "following_url": "https://api.github.com/users/ram510/following{/other_user}",
            "gists_url": "https://api.github.com/users/ram510/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ram510/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ram510/subscriptions",
            "organizations_url": "https://api.github.com/users/ram510/orgs",
            "repos_url": "https://api.github.com/users/ram510/repos",
            "events_url": "https://api.github.com/users/ram510/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ram510/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-11-09T13:39:30Z",
        "updated_at": "2023-11-20T14:51:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHere is the code where I implemented a RAG agent,\r\n\r\ndef chat_app(query_str):    \r\n    query_str = query_str \r\n    chat_agent = CondenseQuestionChatEngine.from_defaults(query_engine=query_engine,service_context=service_context)\r\n    chat_resp = chat_agent.chat(query_str)\r\n    return chat_resp\r\nchat_resp = chat_app(\"query_str\")\r\nwhile True:\r\n    query_str = input(\"User: \")\r\n    if query_str == \"exit\":\r\n        break\r\n    response = chat_app(query_str)\r\n    \r\n    print(f\"Agent: {response}\")\r\n    print()\r\n    \r\n    how do I pass previous responses and context to the CondenseQuestionChatEngine.from_defaults so that the user need not be specific about the details or need to supply the context every time",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8802/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8802/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8801",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8801/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8801/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8801/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8801",
        "id": 1985578828,
        "node_id": "PR_kwDOIWuq585fCD5C",
        "number": 8801,
        "title": "Fix SQL commit using enging.begin().",
        "user": {
            "login": "fossilet",
            "id": 948336,
            "node_id": "MDQ6VXNlcjk0ODMzNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/948336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fossilet",
            "html_url": "https://github.com/fossilet",
            "followers_url": "https://api.github.com/users/fossilet/followers",
            "following_url": "https://api.github.com/users/fossilet/following{/other_user}",
            "gists_url": "https://api.github.com/users/fossilet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fossilet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fossilet/subscriptions",
            "organizations_url": "https://api.github.com/users/fossilet/orgs",
            "repos_url": "https://api.github.com/users/fossilet/repos",
            "events_url": "https://api.github.com/users/fossilet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fossilet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-09T13:03:12Z",
        "updated_at": "2023-11-14T08:02:52Z",
        "closed_at": "2023-11-09T15:50:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8801",
            "html_url": "https://github.com/run-llama/llama_index/pull/8801",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8801.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8801.patch",
            "merged_at": "2023-11-09T15:50:54Z"
        },
        "body": "# Description\r\n\r\nThe example code returns response like `The city with the highest population is [city_name].` This fix will make sure the rows are inserted into the database. \r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8801/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8801/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8800",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8800/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8800/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8800/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8800",
        "id": 1985131605,
        "node_id": "PR_kwDOIWuq585fAiDU",
        "number": 8800,
        "title": "notebook: stress test gpt-4/claude w/ long docs with hidden context",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-09T08:53:28Z",
        "updated_at": "2023-11-09T16:36:25Z",
        "closed_at": "2023-11-09T16:36:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8800",
            "html_url": "https://github.com/run-llama/llama_index/pull/8800",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8800.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8800.patch",
            "merged_at": "2023-11-09T16:36:24Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8800/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8800/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8799",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8799/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8799/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8799/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8799",
        "id": 1984860508,
        "node_id": "I_kwDOIWuq5852TpFc",
        "number": 8799,
        "title": "[Question]: Is there an exmaple of cost analysis that works? MockLLMPRedictor is not working",
        "user": {
            "login": "Jgerardopine",
            "id": 20849578,
            "node_id": "MDQ6VXNlcjIwODQ5NTc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/20849578?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jgerardopine",
            "html_url": "https://github.com/Jgerardopine",
            "followers_url": "https://api.github.com/users/Jgerardopine/followers",
            "following_url": "https://api.github.com/users/Jgerardopine/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jgerardopine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jgerardopine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jgerardopine/subscriptions",
            "organizations_url": "https://api.github.com/users/Jgerardopine/orgs",
            "repos_url": "https://api.github.com/users/Jgerardopine/repos",
            "events_url": "https://api.github.com/users/Jgerardopine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jgerardopine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-09T05:27:56Z",
        "updated_at": "2023-11-12T14:59:05Z",
        "closed_at": "2023-11-10T04:31:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n I am looking for a Cost Analysis example that I can use without calling OpenAI, so I can get an approximate cost of a specific use case I have. I've seen the xamples and I got my code working almost to the end, but the MockLLMPRedictor library apparently is not working anymore for the newest versions.\r\n\r\nI used this example: `https://betterprogramming.pub/how-to-calculate-and-optimize-chatgpt-costs-using-langchain-9599354f0e2c`\r\nI go tit almost working except the total_token_usage, as that function is no longer working.  I also looked into the documentation, and they have the same exmaples, and none is working:\r\n\r\nhttps://gpt-index.readthedocs.io/en/v0.6.8/reference/service_context/llm_predictor.html\r\nhttps://gpt-index.readthedocs.io/en/v0.6.8/how_to/analysis/cost_analysis.html\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8799/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8799/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8798",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8798/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8798/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8798/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8798",
        "id": 1984805081,
        "node_id": "I_kwDOIWuq5852TbjZ",
        "number": 8798,
        "title": "[Bug]: GPTListIndex Object incorrectly creates a SummaryIndex Object",
        "user": {
            "login": "Jgerardopine",
            "id": 20849578,
            "node_id": "MDQ6VXNlcjIwODQ5NTc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/20849578?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jgerardopine",
            "html_url": "https://github.com/Jgerardopine",
            "followers_url": "https://api.github.com/users/Jgerardopine/followers",
            "following_url": "https://api.github.com/users/Jgerardopine/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jgerardopine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jgerardopine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jgerardopine/subscriptions",
            "organizations_url": "https://api.github.com/users/Jgerardopine/orgs",
            "repos_url": "https://api.github.com/users/Jgerardopine/repos",
            "events_url": "https://api.github.com/users/Jgerardopine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jgerardopine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-09T04:37:01Z",
        "updated_at": "2023-11-09T05:38:40Z",
        "closed_at": "2023-11-09T04:40:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI created an object of GPTListIndex, bur when using it it says it is a SummaryIndex Object and I can't use  the query attribute\r\n\r\nCode:\r\n``` \r\nindex = GPTListIndex.from_documents(mock_document, service_context=service_context)\r\n```\r\n\r\nI call the query: \r\n```\r\nresponse = index.query(example_query, mode=\"default\", service_context=service_context)\r\n```\r\n\r\nand I get this error:\r\n`'SummaryIndex' object has no attribute 'query'`\r\n\n\n### Version\n\n0.8.65\n\n### Steps to Reproduce\n\nImport Llama Index GPTListIndex\r\n\r\n`from llama_index import  GPTListIndex, SimpleDirectoryReader`\r\n\r\nI am using MockLLMPredicto  and MOck Ebed as well for th efull excercise, as I create a ServiceContext. You cna create it as well. Here are all the lines of code:\r\n\r\n```\r\nllm_model_name = \"gpt-3.5-turbo\"\r\nllm=OpenAI(temperature=0, model_name=llm_model_name))\r\n    llm_predictor_mock = MockLLMPredictor(max_tokens=256, llm=llm_model_name)\r\n    embed_model_mock = MockEmbedding(embed_dim=1536)\r\n\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor_mock, embed_model=embed_model_mock)\r\n```\r\n\r\nLoad a Document, create the index and call the index with a query (any query string will do)\r\n\r\n```\r\nindex = GPTListIndex.from_documents(mock_document, service_context=service_context)\r\n\r\nquery_str = \"\"\" WHat's the end of life of Lenovo ABC\"\"\"\r\n\r\nprint(index)\r\nresponse = index.query(example_query, mode=\"default\", service_context=service_context)\r\nprint(response)\r\n```\n\n### Relevant Logs/Tracbacks\n\n```shell\nWARNING:py.warnings:/home/src/aithentic_optimus/transformers/semantic_list_and_cost.py:71: FutureWarning: The default value of regex will change from True to False in a future version. In addition, single character regular expressions will *not* be treated as literal strings when regex=True.\r\n\r\n  ' and characteristics ' + df['BPM_ProductDescriptionUpdate'].str.replace('|', ' ')\r\n\r\n\r\n\r\nTotal Tokens: 1212\r\n\r\nEMbedding Cost in USD: 0.000485\r\n\r\n<llama_index.indices.list.base.SummaryIndex object at 0x7f5482fc4100>\r\n\r\n\r\n---------------------------------------------------------------------------\r\n\r\nAttributeError                            Traceback (most recent call last)\r\n\r\n/home/src/aithentic_optimus/transformers/semantic_list_and_cost.py in transform(data, *args, **kwargs)\r\n\r\n    144      \"\"\"\r\n\r\n    145     print(index)\r\n\r\n--> 146     response = index.query(example_query, mode=\"default\", service_context=service_context)\r\n\r\n    147     print(response)\r\n\r\n    148 \r\n\r\n\r\nAttributeError: 'SummaryIndex' object has no attribute 'query'\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8798/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8798/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8797",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8797/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8797/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8797/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8797",
        "id": 1984728674,
        "node_id": "I_kwDOIWuq5852TI5i",
        "number": 8797,
        "title": "examples/agent\u6587\u4ef6\u5939\u7684demo\u662f\u5426\u652f\u6301qwen\u5927\u6a21\u578b\u5462\uff1f",
        "user": {
            "login": "xxm1668",
            "id": 129041904,
            "node_id": "U_kgDOB7EF8A",
            "avatar_url": "https://avatars.githubusercontent.com/u/129041904?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xxm1668",
            "html_url": "https://github.com/xxm1668",
            "followers_url": "https://api.github.com/users/xxm1668/followers",
            "following_url": "https://api.github.com/users/xxm1668/following{/other_user}",
            "gists_url": "https://api.github.com/users/xxm1668/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xxm1668/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xxm1668/subscriptions",
            "organizations_url": "https://api.github.com/users/xxm1668/orgs",
            "repos_url": "https://api.github.com/users/xxm1668/repos",
            "events_url": "https://api.github.com/users/xxm1668/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xxm1668/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-09T02:58:27Z",
        "updated_at": "2023-11-09T03:12:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nexamples/agent\u6587\u4ef6\u5939\u7684demo\u662f\u5426\u652f\u6301qwen\u5927\u6a21\u578b\u5462\uff1f\n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8797/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8797/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8796",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8796/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8796/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8796/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8796",
        "id": 1984725468,
        "node_id": "PR_kwDOIWuq585e_KHg",
        "number": 8796,
        "title": "Minor fix for _build_image_vector_store_query",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-09T02:54:47Z",
        "updated_at": "2023-11-09T03:11:46Z",
        "closed_at": "2023-11-09T03:11:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8796",
            "html_url": "https://github.com/run-llama/llama_index/pull/8796",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8796.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8796.patch",
            "merged_at": "2023-11-09T03:11:45Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8796/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8796/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8795",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8795/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8795/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8795/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8795",
        "id": 1984708544,
        "node_id": "PR_kwDOIWuq585e_Gmh",
        "number": 8795,
        "title": "support un-listable fsspecs",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-09T02:33:04Z",
        "updated_at": "2023-11-09T04:24:54Z",
        "closed_at": "2023-11-09T04:24:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8795",
            "html_url": "https://github.com/run-llama/llama_index/pull/8795",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8795.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8795.patch",
            "merged_at": "2023-11-09T04:24:53Z"
        },
        "body": "# Description\r\n\r\nSome fsspec configs/platforms do not allow you to list a directory. So we need to support that PLUS support old backwards compact vector stores.\r\n\r\nFixes https://github.com/run-llama/llama_index/issues/8791\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8795/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8795/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8794",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8794/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8794/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8794/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8794",
        "id": 1984646454,
        "node_id": "I_kwDOIWuq5852S002",
        "number": 8794,
        "title": "[Question]: Empty Response starting from the 2nd query",
        "user": {
            "login": "junpuf",
            "id": 19641011,
            "node_id": "MDQ6VXNlcjE5NjQxMDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/19641011?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/junpuf",
            "html_url": "https://github.com/junpuf",
            "followers_url": "https://api.github.com/users/junpuf/followers",
            "following_url": "https://api.github.com/users/junpuf/following{/other_user}",
            "gists_url": "https://api.github.com/users/junpuf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/junpuf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/junpuf/subscriptions",
            "organizations_url": "https://api.github.com/users/junpuf/orgs",
            "repos_url": "https://api.github.com/users/junpuf/repos",
            "events_url": "https://api.github.com/users/junpuf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/junpuf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-09T01:12:21Z",
        "updated_at": "2023-11-15T04:41:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi there, I encountered an issue where `query_engine.query()` only generated response for the first query, later query all ended up with `Empty Response`. Below is the log:\r\n\r\n```\r\nLoading all indices.\r\nStarting Q&A Session...\r\nUser: What did the author do growing up?\r\n\r\nllama_print_timings:        load time =    3516.49 ms\r\nllama_print_timings:      sample time =      60.51 ms /    91 runs   (    0.66 ms per token,  1503.78 tokens per second)\r\nllama_print_timings: prompt eval time =   22777.19 ms /  2261 tokens (   10.07 ms per token,    99.27 tokens per second)\r\nllama_print_timings:        eval time =   30562.05 ms /    90 runs   (  339.58 ms per token,     2.94 tokens per second)\r\nllama_print_timings:       total time =   53720.44 ms\r\nLLM:  Based on the given context information, the author wrote short stories when they were younger, and they used to program on an IBM 1401 computer in school. They also mention that they painted and drew during their time at RISD. However, the author does not provide any specific details about their experiences with these activities or how they relate to their current interests and pursuits. Therefore, I cannot answer the query with certainty.\r\n\r\nUser: What are the first programs the author wrote?\r\nLlama.generate: prefix-match hit\r\n\r\nllama_print_timings:        load time =    3516.49 ms\r\nllama_print_timings:      sample time =       0.70 ms /     1 runs   (    0.70 ms per token,  1418.44 tokens per second)\r\nllama_print_timings: prompt eval time =   14434.12 ms /  1118 tokens (   12.91 ms per token,    77.46 tokens per second)\r\nllama_print_timings:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)\r\nllama_print_timings:       total time =   14451.82 ms\r\nLLM: Empty Response\r\n\r\nUser: What are the grad schools the author applied?\r\nLlama.generate: prefix-match hit\r\n\r\nllama_print_timings:        load time =    3516.49 ms\r\nllama_print_timings:      sample time =       0.71 ms /     1 runs   (    0.71 ms per token,  1414.43 tokens per second)\r\nllama_print_timings: prompt eval time =   22515.69 ms /  2145 tokens (   10.50 ms per token,    95.27 tokens per second)\r\nllama_print_timings:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)\r\nllama_print_timings:       total time =   22542.06 ms\r\nLLM: Empty Response\r\n```\r\n\r\nMy code\r\n```python\r\nimport logging\r\nimport sys\r\nimport os.path\r\nimport argparse\r\n\r\nimport torch\r\nfrom llama_index import (\r\n    VectorStoreIndex,\r\n    SimpleDirectoryReader,\r\n    ServiceContext,\r\n    StorageContext,\r\n    load_index_from_storage,\r\n)\r\nfrom llama_index.llms import LlamaCPP\r\nfrom llama_index.llms.llama_utils import (\r\n    messages_to_prompt,\r\n    completion_to_prompt,\r\n)\r\nfrom llama_index.embeddings import HuggingFaceEmbedding\r\n\r\nlogging.basicConfig(stream=sys.stdout, level=logging.INFO)\r\nlogging.getLogger().addHandler(logging.StreamHandler(stream=sys.stdout))\r\n\r\ndef initialize_index(num_gpus, model_url, data_path):\r\n    llm = LlamaCPP(\r\n        # You can pass in the URL to a GGML model to download it automatically\r\n        model_url=model_url,\r\n        # optionally, you can set the path to a pre-downloaded model instead of model_url\r\n        model_path=None,\r\n        temperature=0.1,\r\n        max_new_tokens=256,\r\n        # llama2 has a context window of 4096 tokens, but we set it lower to allow for some wiggle room\r\n        context_window=3900,\r\n        # kwargs to pass to __call__()\r\n        generate_kwargs={},\r\n        # kwargs to pass to __init__()\r\n        # set to at least 1 to use GPU\r\n        model_kwargs={\"n_gpu_layers\": num_gpus},\r\n        # transform inputs into Llama2 format\r\n        messages_to_prompt=messages_to_prompt,\r\n        completion_to_prompt=completion_to_prompt,\r\n        verbose=True,\r\n    )\r\n    # use Huggingface embeddings\r\n    # # https://github.com/run-llama/llama_index/issues/8789\r\n    embed_model = HuggingFaceEmbedding(model_name=\"BAAI/bge-small-en-v1.5\", device=\"cuda:0\")\r\n    \r\n    # create a service context\r\n    service_context = ServiceContext.from_defaults(\r\n        llm=llm,\r\n        embed_model=embed_model,\r\n    )\r\n\r\n    # check if storage already exists\r\n    if not os.path.exists(\"./storage\"):\r\n        print(\"load the documents and create the index\")\r\n        documents = SimpleDirectoryReader(data_path).load_data()\r\n        for doc in documents:\r\n            print(doc.metadata)\r\n        # create vector store index\r\n        index = VectorStoreIndex.from_documents(documents, service_context=service_context)\r\n        # store it for later\r\n        index.storage_context.persist()\r\n    else:\r\n        print(\"load the existing index\")\r\n        storage_context = StorageContext.from_defaults(persist_dir=\"./storage\")\r\n        index = load_index_from_storage(storage_context, service_context=service_context)\r\n    return index\r\n\r\n\r\ndef main(num_gpus, model_url, data_path):\r\n    try:\r\n        index = initialize_index(num_gpus, model_url, data_path)\r\n        query_engine = index.as_query_engine()\r\n        # query_engine = index.as_chat_engine()\r\n        print(\"Starting Q&A Session...\")\r\n        while True:\r\n            \"\"\"\r\n            What did the author do growing up? -> Has answer\r\n            What are the first programs the author wrote? -> Empty Response\r\n            What are the grad schools the author applied? -> Empty Response\r\n            \"\"\"\r\n            user_input = input(\"User: \")\r\n            # response = query_engine.chat(user_input)\r\n            response = query_engine.query(user_input)\r\n            print(f\"LLM: {response}\")\r\n    except KeyboardInterrupt:\r\n        print(\"\\nProgram terminated by user (Ctrl+C). Exiting.\")\r\n        return\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    parser = argparse.ArgumentParser(description=\"Continuous input processing with command-line arguments\")\r\n    parser.add_argument(\"--model_url\", type=str, default=\"https://huggingface.co/TheBloke/Llama-2-13B-chat-GGUF/resolve/main/llama-2-13b-chat.Q4_0.gguf\", help=\"URL of the model\")\r\n    parser.add_argument(\"--data_path\", type=str, default=\"./data/paul_graham_essay\", help=\"Path to data\")\r\n    args = parser.parse_args()\r\n    if torch.cuda.is_available():\r\n        # Get the number of available GPUs\r\n        num_gpus = torch.cuda.device_count()\r\n        print(f\"Number of available GPUs: {num_gpus}\")\r\n        main(num_gpus, args.model_url, args.data_path)\r\n    else:\r\n        print(\"No GPUs available on this system.\")\r\n    \r\n```\r\n\r\nAny help is appreciated.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8794/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8794/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8793",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8793/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8793/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8793/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8793",
        "id": 1984615936,
        "node_id": "PR_kwDOIWuq585e-zIk",
        "number": 8793,
        "title": "Support parallel function calling in pydantic program",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-09T00:34:22Z",
        "updated_at": "2023-11-09T02:28:40Z",
        "closed_at": "2023-11-09T02:28:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8793",
            "html_url": "https://github.com/run-llama/llama_index/pull/8793",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8793.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8793.patch",
            "merged_at": "2023-11-09T02:28:40Z"
        },
        "body": "# Description\r\n\r\nSupport parallel function calling in pydantic program\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8793/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8793/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8792",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8792/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8792/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8792/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8792",
        "id": 1984609388,
        "node_id": "PR_kwDOIWuq585e-xwj",
        "number": 8792,
        "title": "Update building_a_chatbot.md",
        "user": {
            "login": "jeffxtang",
            "id": 535090,
            "node_id": "MDQ6VXNlcjUzNTA5MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/535090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffxtang",
            "html_url": "https://github.com/jeffxtang",
            "followers_url": "https://api.github.com/users/jeffxtang/followers",
            "following_url": "https://api.github.com/users/jeffxtang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffxtang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffxtang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffxtang/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffxtang/orgs",
            "repos_url": "https://api.github.com/users/jeffxtang/repos",
            "events_url": "https://api.github.com/users/jeffxtang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffxtang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-09T00:26:14Z",
        "updated_at": "2023-11-09T01:31:21Z",
        "closed_at": "2023-11-09T01:31:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8792",
            "html_url": "https://github.com/run-llama/llama_index/pull/8792",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8792.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8792.patch",
            "merged_at": "2023-11-09T01:31:21Z"
        },
        "body": "wrong definition for LLM\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8792/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8792/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8791",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8791/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8791/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8791/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8791",
        "id": 1984604069,
        "node_id": "I_kwDOIWuq5852Sqel",
        "number": 8791,
        "title": "[Bug]: Cannot initialize storage context using gcsfs",
        "user": {
            "login": "mikeldking",
            "id": 5640648,
            "node_id": "MDQ6VXNlcjU2NDA2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5640648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeldking",
            "html_url": "https://github.com/mikeldking",
            "followers_url": "https://api.github.com/users/mikeldking/followers",
            "following_url": "https://api.github.com/users/mikeldking/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeldking/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeldking/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeldking/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeldking/orgs",
            "repos_url": "https://api.github.com/users/mikeldking/repos",
            "events_url": "https://api.github.com/users/mikeldking/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeldking/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-11-09T00:19:51Z",
        "updated_at": "2023-11-09T04:24:54Z",
        "closed_at": "2023-11-09T04:24:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nCannot initialize the storage context from defaults using `gcsfs` since it tries to traverse the os filepath and fails.\n\n### Version\n\n0.8.65\n\n### Steps to Reproduce\n\n```python\r\nfrom gcsfs import GCSFileSystem\r\nfile_system = GCSFileSystem(project=\"public-assets-275721\")\r\nindex_path = \"arize-assets/phoenix/datasets/unstructured/llm/llama-index/arize-docs/index/\"\r\nstorage_context = StorageContext.from_defaults(\r\n    fs=file_system,\r\n    persist_dir=index_path,\r\n    graph_store=SimpleGraphStore(),  # prevents unauthorized request to GCS\r\n)\r\n```\r\n\r\nYields\r\n```\r\n{\r\n\t\"name\": \"FileNotFoundError\",\r\n\t\"message\": \"[Errno 2] No such file or directory: 'arize-assets/phoenix/datasets/unstructured/llm/llama-index/arize-docs/index/'\",\r\n\t\"stack\": \"---------------------------------------------------------------------------\r\nFileNotFoundError                         Traceback (most recent call last)\r\n/Users/mikeldking/work/phoenix/tutorials/llama_index_search_and_retrieval_tutorial.ipynb Cell 13 line 3\r\n      <a href='vscode-notebook-cell:/Users/mikeldking/work/phoenix/tutorials/llama_index_search_and_retrieval_tutorial.ipynb#X15sZmlsZQ%3D%3D?line=0'>1</a> file_system = GCSFileSystem(project=\\\"public-assets-275721\\\")\r\n      <a href='vscode-notebook-cell:/Users/mikeldking/work/phoenix/tutorials/llama_index_search_and_retrieval_tutorial.ipynb#X15sZmlsZQ%3D%3D?line=1'>2</a> index_path = \\\"arize-assets/phoenix/datasets/unstructured/llm/llama-index/arize-docs/index/\\\"\r\n----> <a href='vscode-notebook-cell:/Users/mikeldking/work/phoenix/tutorials/llama_index_search_and_retrieval_tutorial.ipynb#X15sZmlsZQ%3D%3D?line=2'>3</a> storage_context = StorageContext.from_defaults(\r\n      <a href='vscode-notebook-cell:/Users/mikeldking/work/phoenix/tutorials/llama_index_search_and_retrieval_tutorial.ipynb#X15sZmlsZQ%3D%3D?line=3'>4</a>     fs=file_system,\r\n      <a href='vscode-notebook-cell:/Users/mikeldking/work/phoenix/tutorials/llama_index_search_and_retrieval_tutorial.ipynb#X15sZmlsZQ%3D%3D?line=4'>5</a>     persist_dir=index_path,\r\n      <a href='vscode-notebook-cell:/Users/mikeldking/work/phoenix/tutorials/llama_index_search_and_retrieval_tutorial.ipynb#X15sZmlsZQ%3D%3D?line=5'>6</a>     graph_store=SimpleGraphStore(),  # prevents unauthorized request to GCS\r\n      <a href='vscode-notebook-cell:/Users/mikeldking/work/phoenix/tutorials/llama_index_search_and_retrieval_tutorial.ipynb#X15sZmlsZQ%3D%3D?line=6'>7</a> )\r\n\r\nFile ~/.virtualenvs/phoenix/lib/python3.10/site-packages/llama_index/storage/storage_context.py:103, in StorageContext.from_defaults(cls, docstore, index_store, vector_store, vector_stores, graph_store, persist_dir, fs)\r\n    101         vector_stores = vector_stores\r\n    102     else:\r\n--> 103         vector_stores = SimpleVectorStore.from_namespaced_persist_dir(\r\n    104             persist_dir, fs=fs\r\n    105         )\r\n    107 return cls(\r\n    108     docstore=docstore,\r\n    109     index_store=index_store,\r\n    110     vector_stores=vector_stores,\r\n    111     graph_store=graph_store,\r\n    112 )\r\n\r\nFile ~/.virtualenvs/phoenix/lib/python3.10/site-packages/llama_index/vector_stores/simple.py:136, in SimpleVectorStore.from_namespaced_persist_dir(cls, persist_dir, fs)\r\n    134 \\\"\\\"\\\"Load from namespaced persist dir.\\\"\\\"\\\"\r\n    135 vector_stores: Dict[str, VectorStore] = {}\r\n--> 136 for fname in os.listdir(persist_dir):\r\n    137     if fname.endswith(DEFAULT_PERSIST_FNAME):\r\n    138         namespace = fname.split(NAMESPACE_SEP)[0]\r\n\r\nFileNotFoundError: [Errno 2] No such file or directory: 'arize-assets/phoenix/datasets/unstructured/llm/llama-index/arize-docs/index/'\"\r\n}\r\n```\n\n### Relevant Logs/Tracbacks\n\n```shell\n{\r\n\t\"name\": \"FileNotFoundError\",\r\n\t\"message\": \"[Errno 2] No such file or directory: 'arize-assets/phoenix/datasets/unstructured/llm/llama-index/arize-docs/index/'\",\r\n\t\"stack\": \"---------------------------------------------------------------------------\r\nFileNotFoundError                         Traceback (most recent call last)\r\n/Users/mikeldking/work/phoenix/tutorials/llama_index_search_and_retrieval_tutorial.ipynb Cell 13 line 3\r\n      <a href='vscode-notebook-cell:/Users/mikeldking/work/phoenix/tutorials/llama_index_search_and_retrieval_tutorial.ipynb#X15sZmlsZQ%3D%3D?line=0'>1</a> file_system = GCSFileSystem(project=\\\"public-assets-275721\\\")\r\n      <a href='vscode-notebook-cell:/Users/mikeldking/work/phoenix/tutorials/llama_index_search_and_retrieval_tutorial.ipynb#X15sZmlsZQ%3D%3D?line=1'>2</a> index_path = \\\"arize-assets/phoenix/datasets/unstructured/llm/llama-index/arize-docs/index/\\\"\r\n----> <a href='vscode-notebook-cell:/Users/mikeldking/work/phoenix/tutorials/llama_index_search_and_retrieval_tutorial.ipynb#X15sZmlsZQ%3D%3D?line=2'>3</a> storage_context = StorageContext.from_defaults(\r\n      <a href='vscode-notebook-cell:/Users/mikeldking/work/phoenix/tutorials/llama_index_search_and_retrieval_tutorial.ipynb#X15sZmlsZQ%3D%3D?line=3'>4</a>     fs=file_system,\r\n      <a href='vscode-notebook-cell:/Users/mikeldking/work/phoenix/tutorials/llama_index_search_and_retrieval_tutorial.ipynb#X15sZmlsZQ%3D%3D?line=4'>5</a>     persist_dir=index_path,\r\n      <a href='vscode-notebook-cell:/Users/mikeldking/work/phoenix/tutorials/llama_index_search_and_retrieval_tutorial.ipynb#X15sZmlsZQ%3D%3D?line=5'>6</a>     graph_store=SimpleGraphStore(),  # prevents unauthorized request to GCS\r\n      <a href='vscode-notebook-cell:/Users/mikeldking/work/phoenix/tutorials/llama_index_search_and_retrieval_tutorial.ipynb#X15sZmlsZQ%3D%3D?line=6'>7</a> )\r\n\r\nFile ~/.virtualenvs/phoenix/lib/python3.10/site-packages/llama_index/storage/storage_context.py:103, in StorageContext.from_defaults(cls, docstore, index_store, vector_store, vector_stores, graph_store, persist_dir, fs)\r\n    101         vector_stores = vector_stores\r\n    102     else:\r\n--> 103         vector_stores = SimpleVectorStore.from_namespaced_persist_dir(\r\n    104             persist_dir, fs=fs\r\n    105         )\r\n    107 return cls(\r\n    108     docstore=docstore,\r\n    109     index_store=index_store,\r\n    110     vector_stores=vector_stores,\r\n    111     graph_store=graph_store,\r\n    112 )\r\n\r\nFile ~/.virtualenvs/phoenix/lib/python3.10/site-packages/llama_index/vector_stores/simple.py:136, in SimpleVectorStore.from_namespaced_persist_dir(cls, persist_dir, fs)\r\n    134 \\\"\\\"\\\"Load from namespaced persist dir.\\\"\\\"\\\"\r\n    135 vector_stores: Dict[str, VectorStore] = {}\r\n--> 136 for fname in os.listdir(persist_dir):\r\n    137     if fname.endswith(DEFAULT_PERSIST_FNAME):\r\n    138         namespace = fname.split(NAMESPACE_SEP)[0]\r\n\r\nFileNotFoundError: [Errno 2] No such file or directory: 'arize-assets/phoenix/datasets/unstructured/llm/llama-index/arize-docs/index/'\"\r\n}\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8791/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8791/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8790",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8790/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8790/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8790/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8790",
        "id": 1984600178,
        "node_id": "I_kwDOIWuq5852Sphy",
        "number": 8790,
        "title": "How to retreive ReAct agent history",
        "user": {
            "login": "snassimr",
            "id": 6830626,
            "node_id": "MDQ6VXNlcjY4MzA2MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6830626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snassimr",
            "html_url": "https://github.com/snassimr",
            "followers_url": "https://api.github.com/users/snassimr/followers",
            "following_url": "https://api.github.com/users/snassimr/following{/other_user}",
            "gists_url": "https://api.github.com/users/snassimr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snassimr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snassimr/subscriptions",
            "organizations_url": "https://api.github.com/users/snassimr/orgs",
            "repos_url": "https://api.github.com/users/snassimr/repos",
            "events_url": "https://api.github.com/users/snassimr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snassimr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-09T00:15:16Z",
        "updated_at": "2023-11-09T23:21:07Z",
        "closed_at": "2023-11-09T23:21:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi , \r\n\r\nI wonder if it's possible to get the content of ReAct agent history in some structured or semi-structured way ?\r\n\r\nThe example for history is below : \r\n\r\n![image](https://github.com/run-llama/llama_index/assets/6830626/18647da8-c9e6-42ac-8ce0-77639f07fbe5)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8790/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8790/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8789",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8789/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8789/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8789/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8789",
        "id": 1984518990,
        "node_id": "I_kwDOIWuq5852SVtO",
        "number": 8789,
        "title": "[Question]: RuntimeError: Expected all tensors to be on the same device, but found at least two devices while trying out index.as_chat_engine()",
        "user": {
            "login": "junpuf",
            "id": 19641011,
            "node_id": "MDQ6VXNlcjE5NjQxMDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/19641011?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/junpuf",
            "html_url": "https://github.com/junpuf",
            "followers_url": "https://api.github.com/users/junpuf/followers",
            "following_url": "https://api.github.com/users/junpuf/following{/other_user}",
            "gists_url": "https://api.github.com/users/junpuf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/junpuf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/junpuf/subscriptions",
            "organizations_url": "https://api.github.com/users/junpuf/orgs",
            "repos_url": "https://api.github.com/users/junpuf/repos",
            "events_url": "https://api.github.com/users/junpuf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/junpuf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-08T22:40:43Z",
        "updated_at": "2023-11-08T22:58:11Z",
        "closed_at": "2023-11-08T22:58:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI encountered an issue while following the [Customization Tutorial](https://docs.llamaindex.ai/en/stable/getting_started/customization.html) for the section \u201cI want a chatbot instead of Q&A\u201d. Below is the error i got:\r\n```\r\nStarting Q&A Session...\r\nUser: tell me about the author\r\n\r\nllama_print_timings:        load time =    3864.22 ms\r\nllama_print_timings:      sample time =      77.19 ms /   117 runs   (    0.66 ms per token,  1515.66 tokens per second)\r\nllama_print_timings: prompt eval time =    3862.87 ms /   512 tokens (    7.54 ms per token,   132.54 tokens per second)\r\nllama_print_timings:        eval time =   32098.75 ms /   117 runs   (  274.35 ms per token,     3.65 tokens per second)\r\nllama_print_timings:       total time =   36425.16 ms\r\nTraceback (most recent call last):\r\n  File \"/fsx/save/llama_index/starter.py\", line 94, in <module>\r\n    main(num_gpus, args.model_url, args.data_path)\r\n ...\r\n    File \"/fsx/conda/envs/llama_index/lib/python3.10/site-packages/llama_index/embeddings/huggingface.py\", line 175, in _get_query_embedding\r\n    return self._embed([query])[0]\r\n  File \"/fsx/conda/envs/llama_index/lib/python3.10/site-packages/llama_index/embeddings/huggingface.py\", line 154, in _embed\r\n    model_output = self._model(**encoded_input)\r\n  File \"/fsx/conda/envs/llama_index/lib/python3.10/site-packages/torch/nn/modules/module.py\", line 1501, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\n  File \"/fsx/conda/envs/llama_index/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\", line 1006, in forward\r\n    embedding_output = self.embeddings(\r\n  File \"/fsx/conda/envs/llama_index/lib/python3.10/site-packages/torch/nn/modules/module.py\", line 1501, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\n  File \"/fsx/conda/envs/llama_index/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py\", line 232, in forward\r\n    inputs_embeds = self.word_embeddings(input_ids)\r\n  File \"/fsx/conda/envs/llama_index/lib/python3.10/site-packages/torch/nn/modules/module.py\", line 1501, in _call_impl\r\n    return forward_call(*args, **kwargs)\r\n  File \"/fsx/conda/envs/llama_index/lib/python3.10/site-packages/torch/nn/modules/sparse.py\", line 162, in forward\r\n    return F.embedding(\r\n  File \"/fsx/conda/envs/llama_index/lib/python3.10/site-packages/torch/nn/functional.py\", line 2210, in embedding\r\n    return torch.embedding(weight, input, padding_idx, scale_grad_by_freq, sparse)\r\nRuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:7 and cuda:0! (when checking argument for argument index in method wrapper_CUDA__index_select)\r\n```\r\n\r\nThe code that i am using\r\n\r\n```python\r\nimport logging\r\nimport sys\r\nimport os.path\r\nimport argparse\r\n\r\nimport torch\r\nfrom llama_index import (\r\n    VectorStoreIndex,\r\n    SimpleDirectoryReader,\r\n    ServiceContext,\r\n    StorageContext,\r\n    load_index_from_storage,\r\n)\r\nfrom llama_index.llms import LlamaCPP\r\nfrom llama_index.llms.llama_utils import (\r\n    messages_to_prompt,\r\n    completion_to_prompt,\r\n)\r\nfrom llama_index.embeddings import HuggingFaceEmbedding\r\n\r\nlogging.basicConfig(stream=sys.stdout, level=logging.INFO)\r\nlogging.getLogger().addHandler(logging.StreamHandler(stream=sys.stdout))\r\n\r\n\r\ndef main(num_gpus, model_url, data_path):\r\n    def initialize_index(num_gpus, model_url):\r\n        llm = LlamaCPP(\r\n            # You can pass in the URL to a GGML model to download it automatically\r\n            model_url=model_url,\r\n            # optionally, you can set the path to a pre-downloaded model instead of model_url\r\n            model_path=None,\r\n            temperature=0.1,\r\n            max_new_tokens=256,\r\n            # llama2 has a context window of 4096 tokens, but we set it lower to allow for some wiggle room\r\n            context_window=3900,\r\n            # kwargs to pass to __call__()\r\n            generate_kwargs={},\r\n            # kwargs to pass to __init__()\r\n            # set to at least 1 to use GPU\r\n            model_kwargs={\"n_gpu_layers\": num_gpus},\r\n            # transform inputs into Llama2 format\r\n            messages_to_prompt=messages_to_prompt,\r\n            completion_to_prompt=completion_to_prompt,\r\n            verbose=True,\r\n        )\r\n        # use Huggingface embeddings\r\n        embed_model = HuggingFaceEmbedding(model_name=\"BAAI/bge-small-en-v1.5\")\r\n        \r\n        # create a service context\r\n        service_context = ServiceContext.from_defaults(\r\n            llm=llm,\r\n            embed_model=embed_model,\r\n        )\r\n\r\n        # check if storage already exists\r\n        if not os.path.exists(\"./storage\"):\r\n            print(\"load the documents and create the index\")\r\n            documents = SimpleDirectoryReader(data_path).load_data()\r\n            for doc in documents:\r\n                print(doc.metadata)\r\n            # create vector store index\r\n            index = VectorStoreIndex.from_documents(documents, service_context=service_context)\r\n            # store it for later\r\n            index.storage_context.persist()\r\n        else:\r\n            print(\"load the existing index\")\r\n            storage_context = StorageContext.from_defaults(persist_dir=\"./storage\")\r\n            index = load_index_from_storage(storage_context, service_context=service_context)\r\n        return index\r\n\r\n    try:\r\n        index = initialize_index(num_gpus, model_url)\r\n        # query_engine = index.as_query_engine()\r\n        query_engine = index.as_chat_engine()\r\n        print(\"Starting Q&A Session...\")\r\n        while True:\r\n            user_input = input(\"User: \")\r\n            response = query_engine.chat(user_input)\r\n            # response = query_engine.query(user_input)\r\n            print(f\"LLM: {response}\")\r\n    except KeyboardInterrupt:\r\n        print(\"\\nProgram terminated by user (Ctrl+C). Exiting.\")\r\n        return\r\n\r\nif __name__ == \"__main__\":\r\n    parser = argparse.ArgumentParser(description=\"Continuous input processing with command-line arguments\")\r\n    parser.add_argument(\"--model_url\", type=str, default=\"https://huggingface.co/TheBloke/Llama-2-13B-chat-GGUF/resolve/main/llama-2-13b-chat.Q4_0.gguf\", help=\"URL of the model\")\r\n    parser.add_argument(\"--data_path\", type=str, default=\"./data/conda\", help=\"Path to data\")\r\n    args = parser.parse_args()\r\n    if torch.cuda.is_available():\r\n        # Get the number of available GPUs\r\n        num_gpus = torch.cuda.device_count()\r\n        print(f\"Number of available GPUs: {num_gpus}\")\r\n        main(num_gpus, args.model_url, args.data_path)\r\n    else:\r\n        print(\"No GPUs available on this system.\")\r\n```\r\n\r\nAppreciate any help on this.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8789/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8789/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8787",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8787/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8787/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8787/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8787",
        "id": 1984409866,
        "node_id": "PR_kwDOIWuq585e-GiN",
        "number": 8787,
        "title": "Add Multi Modal Retriever",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-08T21:14:26Z",
        "updated_at": "2023-11-09T02:36:46Z",
        "closed_at": "2023-11-09T02:35:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8787",
            "html_url": "https://github.com/run-llama/llama_index/pull/8787",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8787.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8787.patch",
            "merged_at": "2023-11-09T02:35:41Z"
        },
        "body": "# Description\r\n\r\nMutli Modal retriever (text and images) based on multi modal index/vector store\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8787/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8787/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8786",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8786/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8786/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8786/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8786",
        "id": 1984404422,
        "node_id": "I_kwDOIWuq5852R5vG",
        "number": 8786,
        "title": "Recursive Retriever with BM25",
        "user": {
            "login": "snassimr",
            "id": 6830626,
            "node_id": "MDQ6VXNlcjY4MzA2MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6830626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snassimr",
            "html_url": "https://github.com/snassimr",
            "followers_url": "https://api.github.com/users/snassimr/followers",
            "following_url": "https://api.github.com/users/snassimr/following{/other_user}",
            "gists_url": "https://api.github.com/users/snassimr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snassimr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snassimr/subscriptions",
            "organizations_url": "https://api.github.com/users/snassimr/orgs",
            "repos_url": "https://api.github.com/users/snassimr/repos",
            "events_url": "https://api.github.com/users/snassimr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snassimr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-08T21:10:10Z",
        "updated_at": "2023-11-08T22:50:23Z",
        "closed_at": "2023-11-08T22:50:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHello , \r\n\r\nI think my RAG would be more successful with keyword based retrieval like [BM25](https://docs.llamaindex.ai/en/stable/examples/retrievers/bm25_retriever.html) .\r\n\r\nI am using [Recursive Retriever](https://gpt-index.readthedocs.io/en/latest/examples/query_engine/recursive_retriever_agents.html)\r\n\r\nHow I can change Recursive Retriever to add an option for BM25Retriever for single document",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8786/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8786/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8785",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8785/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8785/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8785/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8785",
        "id": 1984392582,
        "node_id": "PR_kwDOIWuq585e-Cw4",
        "number": 8785,
        "title": "Add Wrapping Library Metadata to MongoDB vector store",
        "user": {
            "login": "NoahStapp",
            "id": 30483654,
            "node_id": "MDQ6VXNlcjMwNDgzNjU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/30483654?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NoahStapp",
            "html_url": "https://github.com/NoahStapp",
            "followers_url": "https://api.github.com/users/NoahStapp/followers",
            "following_url": "https://api.github.com/users/NoahStapp/following{/other_user}",
            "gists_url": "https://api.github.com/users/NoahStapp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NoahStapp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NoahStapp/subscriptions",
            "organizations_url": "https://api.github.com/users/NoahStapp/orgs",
            "repos_url": "https://api.github.com/users/NoahStapp/repos",
            "events_url": "https://api.github.com/users/NoahStapp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NoahStapp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-08T21:01:39Z",
        "updated_at": "2023-11-20T16:45:46Z",
        "closed_at": "2023-11-20T16:45:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8785",
            "html_url": "https://github.com/run-llama/llama_index/pull/8785",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8785.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8785.patch",
            "merged_at": "2023-11-20T16:45:46Z"
        },
        "body": "# Description\r\nMongoDB drivers are used in various flavors and languages. Making sure we exercise our due diligence in identifying the \"origin\" of the library calls makes it best to understand how our Atlas servers get accessed.\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8785/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8785/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8784",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8784/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8784/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8784/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8784",
        "id": 1984366837,
        "node_id": "PR_kwDOIWuq585e99KC",
        "number": 8784,
        "title": "Latest `huggingface_hub`'s recommended model",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6003270643,
                "node_id": "LA_kwDOIWuq588AAAABZdKj8w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/embedding",
                "name": "embedding",
                "color": "1D775A",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-08T20:42:40Z",
        "updated_at": "2023-11-09T15:51:04Z",
        "closed_at": "2023-11-09T15:51:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8784",
            "html_url": "https://github.com/run-llama/llama_index/pull/8784",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8784.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8784.patch",
            "merged_at": "2023-11-09T15:51:03Z"
        },
        "body": "# Description\r\n\r\n`huggingface_hub==0.19.0` dropped today, which includes `InferenceClient.get_recommended_model` from https://github.com/huggingface/huggingface_hub/pull/1770. This PR makes use of it:\r\n\r\n- Adds `task` to `HuggingFaceInferenceAPI` for recommendation of model\r\n- Adds test of new recommended model capability\r\n- Updated test fixture names to correspond with https://github.com/run-llama/llama_index/pull/8565\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8784/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8784/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8783",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8783/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8783/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8783/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8783",
        "id": 1984360134,
        "node_id": "PR_kwDOIWuq585e97sS",
        "number": 8783,
        "title": "nit: add parallel fn calling nb to docs",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-08T20:38:05Z",
        "updated_at": "2023-11-08T20:44:35Z",
        "closed_at": "2023-11-08T20:44:35Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8783",
            "html_url": "https://github.com/run-llama/llama_index/pull/8783",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8783.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8783.patch",
            "merged_at": "2023-11-08T20:44:35Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8783/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8783/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8782",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8782/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8782/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8782/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8782",
        "id": 1984353653,
        "node_id": "PR_kwDOIWuq585e96SX",
        "number": 8782,
        "title": "improve multimodal retrieval and delete",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-08T20:32:54Z",
        "updated_at": "2023-11-08T20:56:32Z",
        "closed_at": "2023-11-08T20:56:32Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8782",
            "html_url": "https://github.com/run-llama/llama_index/pull/8782",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8782.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8782.patch",
            "merged_at": "2023-11-08T20:56:32Z"
        },
        "body": "# Description\r\n\r\nMultiModalVectorStoreIndex had some issues with retrieval and deletion. This PR fixes both by\r\n\r\n- ensuring duplicate node ids are not inserted into ref_doc_info\r\n- ensures the proper node type is loaded when fetching from a vector store\r\n- no longer forces users to use the docstore/index store, since most images should just be paths or URLs anyways (if this is an issue for users, they can always enable the docstore)\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8782/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8782/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8781",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8781/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8781/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8781/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8781",
        "id": 1984335737,
        "node_id": "PR_kwDOIWuq585e92VA",
        "number": 8781,
        "title": "[version] bump version to 0.8.65",
        "user": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-08T20:21:11Z",
        "updated_at": "2023-11-08T20:48:00Z",
        "closed_at": "2023-11-08T20:47:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8781",
            "html_url": "https://github.com/run-llama/llama_index/pull/8781",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8781.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8781.patch",
            "merged_at": "2023-11-08T20:47:57Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8781/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8781/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8780",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8780/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8780/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8780/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8780",
        "id": 1984293819,
        "node_id": "I_kwDOIWuq5852Reu7",
        "number": 8780,
        "title": "[Question]: How to use the finetuned embedding model?",
        "user": {
            "login": "Aekansh-Ak",
            "id": 64459173,
            "node_id": "MDQ6VXNlcjY0NDU5MTcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/64459173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Aekansh-Ak",
            "html_url": "https://github.com/Aekansh-Ak",
            "followers_url": "https://api.github.com/users/Aekansh-Ak/followers",
            "following_url": "https://api.github.com/users/Aekansh-Ak/following{/other_user}",
            "gists_url": "https://api.github.com/users/Aekansh-Ak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Aekansh-Ak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Aekansh-Ak/subscriptions",
            "organizations_url": "https://api.github.com/users/Aekansh-Ak/orgs",
            "repos_url": "https://api.github.com/users/Aekansh-Ak/repos",
            "events_url": "https://api.github.com/users/Aekansh-Ak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Aekansh-Ak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-08T19:51:19Z",
        "updated_at": "2023-11-14T17:22:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI was able to finetune the model using this documentation: \r\n\r\nhttps://gpt-index.readthedocs.io/en/stable/examples/finetuning/embeddings/finetune_embedding.html\r\n\r\nIt created a folder \"model_output_test\" with files-:\r\nconfig.json  pytorch_model.bin\r\n\r\nThe original embedding model downloaded from hugging face has these files-:\r\nconfig_sentence_transformers.json  pytorch_model.bin  sentence_bert_config.json  tokenizer_config.json  vocab.txt\r\nconfig.json  modules.json                       README.md          special_tokens_map.json    tokenizer.json\r\n\r\nI am currently using the embedding model like this-: \r\nembed_model = HuggingFaceInstructEmbeddings(model_name=\"BAAI/bge-large-en-v1.5\",\r\n                                                model_kwargs={\"device\": \"cpu\"})\r\n                                                \r\nHow do I use the one which is finetuned on my data since it is in a folder, plus is it okay for it to just have those two files?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8780/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8780/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8779",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8779/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8779/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8779/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8779",
        "id": 1984233548,
        "node_id": "PR_kwDOIWuq585e9gHo",
        "number": 8779,
        "title": "Fixed embeddings `__all__`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-08T19:08:56Z",
        "updated_at": "2023-11-08T19:51:40Z",
        "closed_at": "2023-11-08T19:51:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8779",
            "html_url": "https://github.com/run-llama/llama_index/pull/8779",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8779.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8779.patch",
            "merged_at": "2023-11-08T19:51:39Z"
        },
        "body": "# Description\r\n\r\nMy IDE was warning me about `HuggingFaceInferenceAPIEmbeddings` not being imported in `__init__.py`.  Looks like this was missed in https://github.com/run-llama/llama_index/pull/8565.\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8779/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8779/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8778",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8778/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8778/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8778/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8778",
        "id": 1984220957,
        "node_id": "PR_kwDOIWuq585e9daP",
        "number": 8778,
        "title": "Add truncate option to TEI",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-08T19:00:09Z",
        "updated_at": "2023-11-08T20:13:55Z",
        "closed_at": "2023-11-08T20:13:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8778",
            "html_url": "https://github.com/run-llama/llama_index/pull/8778",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8778.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8778.patch",
            "merged_at": "2023-11-08T20:13:54Z"
        },
        "body": "# Description\r\n\r\nTEI doesn't truncate text by default, which can cause some issues for users\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8778/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8778/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8777",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8777/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8777/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8777/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8777",
        "id": 1983984601,
        "node_id": "PR_kwDOIWuq585e8pkQ",
        "number": 8777,
        "title": "Astra DB documentation updates, and ordering of indices",
        "user": {
            "login": "erichare",
            "id": 700235,
            "node_id": "MDQ6VXNlcjcwMDIzNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/700235?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/erichare",
            "html_url": "https://github.com/erichare",
            "followers_url": "https://api.github.com/users/erichare/followers",
            "following_url": "https://api.github.com/users/erichare/following{/other_user}",
            "gists_url": "https://api.github.com/users/erichare/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/erichare/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/erichare/subscriptions",
            "organizations_url": "https://api.github.com/users/erichare/orgs",
            "repos_url": "https://api.github.com/users/erichare/repos",
            "events_url": "https://api.github.com/users/erichare/events{/privacy}",
            "received_events_url": "https://api.github.com/users/erichare/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-08T16:30:40Z",
        "updated_at": "2023-11-09T02:54:59Z",
        "closed_at": "2023-11-09T02:53:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8777",
            "html_url": "https://github.com/run-llama/llama_index/pull/8777",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8777.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8777.patch",
            "merged_at": "2023-11-09T02:53:22Z"
        },
        "body": "# Description\r\n\r\nThis adds some needed documentation for the newly-merged Astra DB Vector Store integration. In the process, I also re-organized the various lists of vector stores alphabetically, which i think improves the readability of everything especially as more continue to be added.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8777/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8777/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8776",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8776/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8776/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8776/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8776",
        "id": 1983979156,
        "node_id": "I_kwDOIWuq5852QR6U",
        "number": 8776,
        "title": "[Feature Request]: Digital ocean storage for remote backend",
        "user": {
            "login": "smyja",
            "id": 20070770,
            "node_id": "MDQ6VXNlcjIwMDcwNzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/20070770?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smyja",
            "html_url": "https://github.com/smyja",
            "followers_url": "https://api.github.com/users/smyja/followers",
            "following_url": "https://api.github.com/users/smyja/following{/other_user}",
            "gists_url": "https://api.github.com/users/smyja/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smyja/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smyja/subscriptions",
            "organizations_url": "https://api.github.com/users/smyja/orgs",
            "repos_url": "https://api.github.com/users/smyja/repos",
            "events_url": "https://api.github.com/users/smyja/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smyja/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-11-08T16:27:31Z",
        "updated_at": "2023-11-15T04:47:42Z",
        "closed_at": "2023-11-15T04:47:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nI'd like to see an example on using digital ocean to store the Vectors and retrieve also. \n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8776/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8776/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8775",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8775/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8775/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8775/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8775",
        "id": 1983687423,
        "node_id": "I_kwDOIWuq5852PKr_",
        "number": 8775,
        "title": "[Question]: Why similarity top_k do not have any effect?",
        "user": {
            "login": "yixuantt",
            "id": 102734371,
            "node_id": "U_kgDOBh-aIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/102734371?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yixuantt",
            "html_url": "https://github.com/yixuantt",
            "followers_url": "https://api.github.com/users/yixuantt/followers",
            "following_url": "https://api.github.com/users/yixuantt/following{/other_user}",
            "gists_url": "https://api.github.com/users/yixuantt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yixuantt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yixuantt/subscriptions",
            "organizations_url": "https://api.github.com/users/yixuantt/orgs",
            "repos_url": "https://api.github.com/users/yixuantt/repos",
            "events_url": "https://api.github.com/users/yixuantt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yixuantt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-08T14:03:14Z",
        "updated_at": "2023-11-08T22:51:51Z",
        "closed_at": "2023-11-08T22:51:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nPlease help me. Why similarity top_k=3 do not have any effect? If I use GPTVectorStoreIndex, then I just get one chunk for tree_summarize.  For now, it will extract ten chunks. (I have a long doc)\r\n\r\n```\r\ndef data_querying(input_text):\r\n\r\n    # Setup\r\n    docs = {}\r\n    files = get_all_files_in_directory('./')\r\n\r\n    for file_title in files:\r\n        docs[file_title] = SimpleDirectoryReader(input_files=[file_title]).load_data()\r\n    print(\"Finish loading files...\")\r\n\r\n    vector_indices = {}\r\n    # Defining the Set of Indexes\r\n    for file_title in files:\r\n        storage_context = StorageContext.from_defaults()\r\n       \r\n        vector_indices[file_title] = GPTListIndex.from_documents(\r\n            docs[file_title],\r\n            service_context=create_service_context(),\r\n            storage_context=storage_context,\r\n        )\r\n        # set id for vector index\r\n        vector_indices[file_title].index_struct.index_id = file_title\r\n\r\n        print(f\"Finish building vector index of {file_title}\") \r\n        # # persist to disk\r\n    print(\"Finish building vector index...\")      \r\n\r\n    # Defining a Graph for Compare/Contrast Queries\r\n    index_summaries = {}\r\n    for file_title in files:\r\n        # set summary text for files\r\n        index_summaries[file_title] = (\r\n        f\"This content contains many detailed information about {file_title}. \"\r\n        f\"Use this index if you need to lookup detailed information about {file_title}.\\n\"\r\n        \"Do not use this index if you want to analyze or compare multiple articles.\"\r\n    )\r\n    graph = ComposableGraph.from_indices(\r\n        SimpleKeywordTableIndex,  # SimpleKeywordTableIndex,GPTListIndex\r\n        [index for _, index in vector_indices.items()],\r\n        [summary for _, summary in index_summaries.items()],\r\n        service_context=create_service_context(),\r\n    )\r\n\r\n    # get root index\r\n    root_index = graph.get_index(graph.index_struct.index_id)\r\n    file_collect = \"\"\r\n    for file_title in files:\r\n        if file_title!=files[-1]:\r\n            file_collect = file_collect + file_title + \", \"\r\n        else:\r\n            file_collect = file_collect + file_title\r\n    # set id of root index\r\n    root_index.set_index_id(\"compare_contrast\")\r\n    root_index.summary = (\r\n        f\"This index contains articles from multiple source:{file_collect}. \"\r\n        f\"Use this index if you want to compare multiple articles:{file_collect}. \"\r\n    )\r\n\r\n    # define custom query engines\r\n    from llama_index.query_engine.transform_query_engine import TransformQueryEngine\r\n    custom_query_engines = {}\r\n\r\n    for index in vector_indices.values():\r\n        query_engine = index.as_query_engine(\r\n            service_context=create_service_context(),\r\n            text_qa_template=qa_template,\r\n            summary_template=summary_template,\r\n            refine_template=refine_template)\r\n        custom_query_engines[index.index_id] = query_engine\r\n\r\n    custom_query_engines[graph.root_id] = graph.root_index.as_query_engine(\r\n        response_mode='tree_summarize',\r\n        text_qa_template=qa_template,\r\n        summary_template=summary_template,\r\n        refine_template=refine_template,\r\n        service_context=create_service_context(),\r\n    )\r\n\r\n    # define query engine\r\n    graph_query_engine = graph.as_query_engine(similarity_top_k=3,custom_query_engines=custom_query_engines)\r\n\r\n    query_engine_tools = []\r\n\r\n    # add vector index tools\r\n    for file_title in files:\r\n        index = vector_indices[file_title]\r\n        summary = index_summaries[file_title]\r\n\r\n        query_engine = index.as_query_engine(service_context=create_service_context(),\r\n                                            text_qa_template=qa_template,\r\n                                            summary_template=summary_template,\r\n                                            refine_template=refine_template)\r\n        vector_tool = QueryEngineTool.from_defaults(query_engine, description=summary)\r\n        query_engine_tools.append(vector_tool)\r\n\r\n\r\n    # add graph tool\r\n    graph_description = (\r\n        f\"This index contains articles from multiple source: {file_collect}. \"\r\n        f\"Use this index if you want to compare multiple articles: {file_collect}. \"\r\n        f\"Use this index if you want to get a detailed analysis or summary from multiple articles: {file_collect}. \"\r\n    )\r\n    graph_tool = QueryEngineTool.from_defaults(graph_query_engine, description=graph_description)\r\n    query_engine_tools.append(graph_tool)\r\n    router_query_engine = RouterQueryEngine(\r\n        selector=LLMSingleSelector.from_defaults(service_context=create_service_context(),\r\n                                                 output_parser=RobustSelectionOutputParser(),\r\n                                                 prompt_template_str = router_prompt),\r\n        query_engine_tools=query_engine_tools\r\n    )\r\n    print(\"Start to query...\") \r\n    return router_query_engine.query(input_text)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8775/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8775/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8774",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8774/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8774/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8774/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8774",
        "id": 1983542712,
        "node_id": "PR_kwDOIWuq585e7JJK",
        "number": 8774,
        "title": "docs: openllmetry integration",
        "user": {
            "login": "nirga",
            "id": 4224692,
            "node_id": "MDQ6VXNlcjQyMjQ2OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4224692?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nirga",
            "html_url": "https://github.com/nirga",
            "followers_url": "https://api.github.com/users/nirga/followers",
            "following_url": "https://api.github.com/users/nirga/following{/other_user}",
            "gists_url": "https://api.github.com/users/nirga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nirga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nirga/subscriptions",
            "organizations_url": "https://api.github.com/users/nirga/orgs",
            "repos_url": "https://api.github.com/users/nirga/repos",
            "events_url": "https://api.github.com/users/nirga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nirga/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-08T12:50:28Z",
        "updated_at": "2023-11-08T15:13:40Z",
        "closed_at": "2023-11-08T15:13:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8774",
            "html_url": "https://github.com/run-llama/llama_index/pull/8774",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8774.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8774.patch",
            "merged_at": "2023-11-08T15:13:39Z"
        },
        "body": "# Description\r\n\r\nAdded docs on using OpenLLMetry for Llama Index observability.\r\n(didn't fill the rest of this as it doesn't feel it applies).\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8774/reactions",
            "total_count": 3,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 2,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8774/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8773",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8773/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8773/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8773/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8773",
        "id": 1983417215,
        "node_id": "PR_kwDOIWuq585e6s6F",
        "number": 8773,
        "title": "make PydanticProgramExtractor importable from extractors",
        "user": {
            "login": "smowden",
            "id": 1259054,
            "node_id": "MDQ6VXNlcjEyNTkwNTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1259054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smowden",
            "html_url": "https://github.com/smowden",
            "followers_url": "https://api.github.com/users/smowden/followers",
            "following_url": "https://api.github.com/users/smowden/following{/other_user}",
            "gists_url": "https://api.github.com/users/smowden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smowden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smowden/subscriptions",
            "organizations_url": "https://api.github.com/users/smowden/orgs",
            "repos_url": "https://api.github.com/users/smowden/repos",
            "events_url": "https://api.github.com/users/smowden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smowden/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-08T11:48:32Z",
        "updated_at": "2023-11-10T09:09:36Z",
        "closed_at": "2023-11-10T09:09:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8773",
            "html_url": "https://github.com/run-llama/llama_index/pull/8773",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8773.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8773.patch",
            "merged_at": "2023-11-10T09:09:28Z"
        },
        "body": "# Description\r\n\r\nThe example code here https://gpt-index.readthedocs.io/en/latest/examples/metadata_extraction/PydanticExtractor.html\r\ndoes not work because the module is not importable from extractors.\r\n\r\nFixes # (issue)\r\nno issue\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8773/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8773/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8771",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8771/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8771/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8771/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8771",
        "id": 1983254119,
        "node_id": "I_kwDOIWuq5852Ng5n",
        "number": 8771,
        "title": "[Question]: Customizing chat engines",
        "user": {
            "login": "lucijaSub",
            "id": 147489326,
            "node_id": "U_kgDOCMqCLg",
            "avatar_url": "https://avatars.githubusercontent.com/u/147489326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lucijaSub",
            "html_url": "https://github.com/lucijaSub",
            "followers_url": "https://api.github.com/users/lucijaSub/followers",
            "following_url": "https://api.github.com/users/lucijaSub/following{/other_user}",
            "gists_url": "https://api.github.com/users/lucijaSub/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lucijaSub/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lucijaSub/subscriptions",
            "organizations_url": "https://api.github.com/users/lucijaSub/orgs",
            "repos_url": "https://api.github.com/users/lucijaSub/repos",
            "events_url": "https://api.github.com/users/lucijaSub/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lucijaSub/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-11-08T10:18:10Z",
        "updated_at": "2023-11-14T10:23:43Z",
        "closed_at": "2023-11-08T22:54:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI have an issue with writing custom prompts for a chat engine. I have a vector index with my custom knowlage. \r\nI am using CondenseQuestionChatEngine as my query engine. I want to add a custom prompt that will tell my chat bot \"You are an expert on X topic, answer correctly and don't hallucinate\" but I am confused on how to do it.\r\n\r\nWhen I do it like this:\r\n```\r\nquery_engine_base = self.vector_index.as_query_engine(text_qa_template=qa_template)\r\n\r\nself.base_chat_engine = CondenseQuestionChatEngine.from_defaults(\r\n    query_engine=query_engine_base,\r\n    verbose=True,\r\n    service_context=self.service_context)\r\n\r\n```\r\nThe bot answers correctly, but it doesn't remember chat history. How is this supposed to be done? I searched in the documentation and it has been confusing, I can't find a solution that does what I want.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8771/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8771/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8770",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8770/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8770/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8770/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8770",
        "id": 1983251921,
        "node_id": "I_kwDOIWuq5852NgXR",
        "number": 8770,
        "title": "[Feature Request]: When using elasticsarch to store vectors, can specify the analyzer for the content field.",
        "user": {
            "login": "czhcc",
            "id": 4754730,
            "node_id": "MDQ6VXNlcjQ3NTQ3MzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4754730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/czhcc",
            "html_url": "https://github.com/czhcc",
            "followers_url": "https://api.github.com/users/czhcc/followers",
            "following_url": "https://api.github.com/users/czhcc/following{/other_user}",
            "gists_url": "https://api.github.com/users/czhcc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/czhcc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/czhcc/subscriptions",
            "organizations_url": "https://api.github.com/users/czhcc/orgs",
            "repos_url": "https://api.github.com/users/czhcc/repos",
            "events_url": "https://api.github.com/users/czhcc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/czhcc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5804135704,
                "node_id": "LA_kwDOIWuq588AAAABWfQVGA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/vector%20store",
                "name": "vector store",
                "color": "4AE220",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-08T10:17:20Z",
        "updated_at": "2023-11-15T04:53:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nWhen using elasticsarch to store vectors, can specify the analyzer for the content field.\r\nexample:\r\nself.text_field: {\"type\": \"text\", \"analyzer\": \"ik_smart\"}\n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8770/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8770/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8769",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8769/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8769/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8769/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8769",
        "id": 1983134505,
        "node_id": "I_kwDOIWuq5852NDsp",
        "number": 8769,
        "title": "[Bug]:Exception raised on load_index_from_storage() and VectorStoreIndex.from_vector_store().",
        "user": {
            "login": "gich2009",
            "id": 83756959,
            "node_id": "MDQ6VXNlcjgzNzU2OTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/83756959?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gich2009",
            "html_url": "https://github.com/gich2009",
            "followers_url": "https://api.github.com/users/gich2009/followers",
            "following_url": "https://api.github.com/users/gich2009/following{/other_user}",
            "gists_url": "https://api.github.com/users/gich2009/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gich2009/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gich2009/subscriptions",
            "organizations_url": "https://api.github.com/users/gich2009/orgs",
            "repos_url": "https://api.github.com/users/gich2009/repos",
            "events_url": "https://api.github.com/users/gich2009/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gich2009/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-08T09:23:49Z",
        "updated_at": "2023-11-08T09:48:34Z",
        "closed_at": "2023-11-08T09:48:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nTypeError is raised when loading an index due to an unexpected keyword argument 'socket_options'\n\n### Version\n\n0.8.64\n\n### Steps to Reproduce\n\nTry loading an index using either load_index_from_storage() or VectorStoreIndex.from_vector_store()\n\n### Relevant Logs/Tracbacks\n\n```shell\n###load_index_from_storage()\r\nTraceback (most recent call last):\r\n  File \"/home/gich2009/Work/BAYESNET/lib/nets/comparisonChatEngine.py\", line 273, in <module>\r\n    chatbot = ComparisonChatBot(\r\n  File \"/home/gich2009/Work/BAYESNET/lib/nets/comparisonChatEngine.py\", line 88, in __init__\r\n    self.setup_query_engines()\r\n  File \"/home/gich2009/Work/BAYESNET/lib/nets/comparisonChatEngine.py\", line 159, in setup_query_engines\r\n    self.setup_index(context=context)\r\n  File \"/home/gich2009/Work/BAYESNET/lib/nets/comparisonChatEngine.py\", line 190, in setup_index\r\n    self.index = load_index_from_storage(storage_context)\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/llama_index/indices/loading.py\", line 33, in load_index_from_storage\r\n    indices = load_indices_from_storage(storage_context, index_ids=index_ids, **kwargs)\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/llama_index/indices/loading.py\", line 78, in load_indices_from_storage\r\n    index = index_cls(\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/llama_index/indices/vector_store/base.py\", line 49, in __init__\r\n    super().__init__(\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/llama_index/indices/base.py\", line 61, in __init__\r\n    self._service_context = service_context or ServiceContext.from_defaults()\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/llama_index/indices/service_context.py\", line 157, in from_defaults\r\n    llm_predictor = llm_predictor or LLMPredictor(\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/llama_index/llm_predictor/base.py\", line 92, in __init__\r\n    self._llm = resolve_llm(llm)\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/llama_index/llms/utils.py\", line 20, in resolve_llm\r\n    llm = OpenAI()\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/llama_index/llms/openai.py\", line 116, in __init__\r\n    self._client, self._aclient = self._get_clients(**kwargs)\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/llama_index/llms/openai.py\", line 119, in _get_clients\r\n    client = SyncOpenAI(**self._get_credential_kwargs())\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/openai/_client.py\", line 105, in __init__\r\n    super().__init__(\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/openai/_base_client.py\", line 738, in __init__\r\n    self._client = http_client or httpx.Client(\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/httpx/_client.py\", line 672, in __init__\r\n    self._transport = self._init_transport(\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/httpx/_client.py\", line 720, in _init_transport\r\n    return HTTPTransport(\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/httpx/_transports/default.py\", line 136, in __init__\r\n    self._pool = httpcore.ConnectionPool(\r\nTypeError: ConnectionPool.__init__() got an unexpected keyword argument 'socket_options'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n###VectorStoreIndex.from_vector_store():\r\nTraceback (most recent call last):\r\n  File \"/home/gich2009/Work/BAYESNET/lib/nets/comparisonChatEngine.py\", line 273, in <module>\r\n    chatbot = ComparisonChatBot(\r\n  File \"/home/gich2009/Work/BAYESNET/lib/nets/comparisonChatEngine.py\", line 88, in __init__\r\n    self.setup_query_engines()\r\n  File \"/home/gich2009/Work/BAYESNET/lib/nets/comparisonChatEngine.py\", line 159, in setup_query_engines\r\n    self.setup_index(context=context)\r\n  File \"/home/gich2009/Work/BAYESNET/lib/nets/comparisonChatEngine.py\", line 197, in setup_index\r\n    self.index = VectorStoreIndex.from_vector_store(vector_store=vector_store)\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/llama_index/indices/vector_store/base.py\", line 71, in from_vector_store\r\n    return cls(\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/llama_index/indices/vector_store/base.py\", line 49, in __init__\r\n    super().__init__(\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/llama_index/indices/base.py\", line 61, in __init__\r\n    self._service_context = service_context or ServiceContext.from_defaults()\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/llama_index/indices/service_context.py\", line 157, in from_defaults\r\n    llm_predictor = llm_predictor or LLMPredictor(\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/llama_index/llm_predictor/base.py\", line 92, in __init__\r\n    self._llm = resolve_llm(llm)\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/llama_index/llms/utils.py\", line 20, in resolve_llm\r\n    llm = OpenAI()\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/llama_index/llms/openai.py\", line 116, in __init__\r\n    self._client, self._aclient = self._get_clients(**kwargs)\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/llama_index/llms/openai.py\", line 119, in _get_clients\r\n    client = SyncOpenAI(**self._get_credential_kwargs())\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/openai/_client.py\", line 105, in __init__\r\n    super().__init__(\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/openai/_base_client.py\", line 738, in __init__\r\n    self._client = http_client or httpx.Client(\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/httpx/_client.py\", line 672, in __init__\r\n    self._transport = self._init_transport(\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/httpx/_client.py\", line 720, in _init_transport\r\n    return HTTPTransport(\r\n  File \"/home/gich2009/Work/BAYESNET/venv-fastapi/lib/python3.10/site-packages/httpx/_transports/default.py\", line 136, in __init__\r\n    self._pool = httpcore.ConnectionPool(\r\nTypeError: ConnectionPool.__init__() got an unexpected keyword argument 'socket_options'\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8769/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8769/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8768",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8768/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8768/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8768/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8768",
        "id": 1983083790,
        "node_id": "I_kwDOIWuq5852M3UO",
        "number": 8768,
        "title": "[Question]: General Question",
        "user": {
            "login": "gich2009",
            "id": 83756959,
            "node_id": "MDQ6VXNlcjgzNzU2OTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/83756959?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gich2009",
            "html_url": "https://github.com/gich2009",
            "followers_url": "https://api.github.com/users/gich2009/followers",
            "following_url": "https://api.github.com/users/gich2009/following{/other_user}",
            "gists_url": "https://api.github.com/users/gich2009/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gich2009/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gich2009/subscriptions",
            "organizations_url": "https://api.github.com/users/gich2009/orgs",
            "repos_url": "https://api.github.com/users/gich2009/repos",
            "events_url": "https://api.github.com/users/gich2009/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gich2009/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-08T09:01:11Z",
        "updated_at": "2023-11-10T11:20:59Z",
        "closed_at": "2023-11-10T11:20:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nIs anyone else getting this response from an engine?:\r\n\r\n\r\n'The context provided is a long string of numbers, specifically the number 7 repeated multiple times. It is unclear what the purpose or meaning of this string of numbers is.' ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8768/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8768/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8767",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8767/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8767/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8767/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8767",
        "id": 1982917027,
        "node_id": "I_kwDOIWuq5852MOmj",
        "number": 8767,
        "title": "[Question]: KnowledgeGraphIndex, FAISS and gpu search",
        "user": {
            "login": "patrickocal",
            "id": 45278848,
            "node_id": "MDQ6VXNlcjQ1Mjc4ODQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/45278848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/patrickocal",
            "html_url": "https://github.com/patrickocal",
            "followers_url": "https://api.github.com/users/patrickocal/followers",
            "following_url": "https://api.github.com/users/patrickocal/following{/other_user}",
            "gists_url": "https://api.github.com/users/patrickocal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/patrickocal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/patrickocal/subscriptions",
            "organizations_url": "https://api.github.com/users/patrickocal/orgs",
            "repos_url": "https://api.github.com/users/patrickocal/repos",
            "events_url": "https://api.github.com/users/patrickocal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/patrickocal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-08T07:19:42Z",
        "updated_at": "2023-11-08T07:47:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI suppose this is a question about the nature of a KnowledgeGraphIndex. What is it's structure and can such an object be stored as a FAISS datastore and then searched on the gpu? \r\n\r\nHow does a KnowledgeGraphIndex encode triples (head, relation, tail)? Is it as triples of vectors or as vectors?\r\n\r\nIdeally, I would like to use the graph structure to find the k nearest neighbors. Can we use the faiss.knn_gpu function?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8767/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8767/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8766",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8766/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8766/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8766/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8766",
        "id": 1982916306,
        "node_id": "PR_kwDOIWuq585e4-o7",
        "number": 8766,
        "title": "add demo showing assistant agent with vector store",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-08T07:19:07Z",
        "updated_at": "2023-11-08T07:37:27Z",
        "closed_at": "2023-11-08T07:37:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8766",
            "html_url": "https://github.com/run-llama/llama_index/pull/8766",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8766.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8766.patch",
            "merged_at": "2023-11-08T07:37:26Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8766/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8766/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8765",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8765/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8765/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8765/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8765",
        "id": 1982886401,
        "node_id": "I_kwDOIWuq5852MHIB",
        "number": 8765,
        "title": "[Question]: APIConnectionError: Connection error",
        "user": {
            "login": "4entertainment",
            "id": 58992739,
            "node_id": "MDQ6VXNlcjU4OTkyNzM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/58992739?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/4entertainment",
            "html_url": "https://github.com/4entertainment",
            "followers_url": "https://api.github.com/users/4entertainment/followers",
            "following_url": "https://api.github.com/users/4entertainment/following{/other_user}",
            "gists_url": "https://api.github.com/users/4entertainment/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/4entertainment/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/4entertainment/subscriptions",
            "organizations_url": "https://api.github.com/users/4entertainment/orgs",
            "repos_url": "https://api.github.com/users/4entertainment/repos",
            "events_url": "https://api.github.com/users/4entertainment/events{/privacy}",
            "received_events_url": "https://api.github.com/users/4entertainment/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-11-08T06:58:49Z",
        "updated_at": "2023-11-08T22:56:48Z",
        "closed_at": "2023-11-08T22:56:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI want to run the following starter code with llama-index:\r\n\r\n\r\n`\r\n> import os\r\n> from silly import  no_ssl_verification\r\n> with no_ssl_verification():\r\n>     os.environ[\"HUGGINGFACEHUB_API_TOKEN\"] = \"my_token\"\r\n>     from llama_index import VectorStoreIndex, SimpleDirectoryReader\r\n>     documents = SimpleDirectoryReader(\"./docs/examples/data/paul_graham\").load_data()\r\n>     index = VectorStoreIndex.from_documents(documents)\r\n>     query_engine = index.as_query_engine()\r\n>     response = query_engine.query(\"What did the author do growing up?\")\r\n>     print(response)\r\n\r\n`\r\n\r\nI get the following error:\r\n\r\n`raise APIConnectionError(request=request) from err\r\nopenai.APIConnectionError: Connection error.`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8765/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8765/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8764",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8764/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8764/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8764/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8764",
        "id": 1982819977,
        "node_id": "PR_kwDOIWuq585e4pTw",
        "number": 8764,
        "title": "add back rag from scratch",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-08T06:10:54Z",
        "updated_at": "2023-11-08T07:45:06Z",
        "closed_at": "2023-11-08T07:45:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8764",
            "html_url": "https://github.com/run-llama/llama_index/pull/8764",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8764.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8764.patch",
            "merged_at": "2023-11-08T07:45:05Z"
        },
        "body": "oops was accidentally taken out ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8764/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8764/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8763",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8763/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8763/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8763/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8763",
        "id": 1982710791,
        "node_id": "PR_kwDOIWuq585e4RVq",
        "number": 8763,
        "title": "Add Google PaLM Embeddings.",
        "user": {
            "login": "ravi03071991",
            "id": 12198101,
            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "html_url": "https://github.com/ravi03071991",
            "followers_url": "https://api.github.com/users/ravi03071991/followers",
            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
            "repos_url": "https://api.github.com/users/ravi03071991/repos",
            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-08T04:23:10Z",
        "updated_at": "2023-11-09T16:31:52Z",
        "closed_at": "2023-11-09T16:31:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8763",
            "html_url": "https://github.com/run-llama/llama_index/pull/8763",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8763.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8763.patch",
            "merged_at": "2023-11-09T16:31:52Z"
        },
        "body": "# Description\r\n\r\nPR for Google PaLM embeddings. \r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8763/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8763/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8762",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8762/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8762/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8762/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8762",
        "id": 1982625128,
        "node_id": "PR_kwDOIWuq585e3-mW",
        "number": 8762,
        "title": "Initialize Multi Modal Embedding Base",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-08T02:53:39Z",
        "updated_at": "2023-11-08T15:12:49Z",
        "closed_at": "2023-11-08T15:12:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8762",
            "html_url": "https://github.com/run-llama/llama_index/pull/8762",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8762.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8762.patch",
            "merged_at": "2023-11-08T15:12:48Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8762/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8762/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8761",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8761/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8761/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8761/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8761",
        "id": 1982624022,
        "node_id": "I_kwDOIWuq5852LHEW",
        "number": 8761,
        "title": "[Bug]: it is not always safe to explicitly pass `api_key` to `OpenAI`",
        "user": {
            "login": "mattgiles",
            "id": 4960227,
            "node_id": "MDQ6VXNlcjQ5NjAyMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4960227?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattgiles",
            "html_url": "https://github.com/mattgiles",
            "followers_url": "https://api.github.com/users/mattgiles/followers",
            "following_url": "https://api.github.com/users/mattgiles/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattgiles/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattgiles/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattgiles/subscriptions",
            "organizations_url": "https://api.github.com/users/mattgiles/orgs",
            "repos_url": "https://api.github.com/users/mattgiles/repos",
            "events_url": "https://api.github.com/users/mattgiles/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattgiles/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-11-08T02:52:26Z",
        "updated_at": "2023-11-08T08:00:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nCalling `VectorStoreIndex.from_documents()` with a `ServiceContext` that uses an instance of `OpenAI` as the `llm` that explicitly passes the `api_key` rather than setting the `OPENAI_API_KEY ` environment variable, raises a nasty traceback complaining: `\"LocalProtocolError: Illegal header value b'Bearer '\"`.\r\n\r\nI note that even though this works:\r\n\r\n```python\r\nllm = OpenAI(model=\"gpt-4\", api_key=\"XXX\")\r\n\r\nresponse = llm.complete(\"Paul Graham is \")\r\n\r\nprint(response)\r\n```\r\n\r\nContinuing on with:\r\n\r\n```python\r\nservice_context = ServiceContext.from_defaults(llm=llm)\r\n\r\nreader = SimpleDirectoryReader(input_dir=\"/some/directory\")\r\n\r\ndocs = reader.load_data()\r\n\r\nindex = VectorStoreIndex.from_documents(docs, service_context=service_context)\r\n```\r\n\r\nReliably fails with a very long stack trace (mine contains 121 `LocalProtocolError`s, 6 `APIConnectionError`s, a `CancelledError` and a `RetryError`).\r\n\r\nThe crux of which is the complaint about the header.\r\n\r\nI haven't spelunked far enough to find the offending code. It may be in the openai client library. The errors being thrown are from the http-related dependencies that enforce a rule against trailing spaces in header values.\r\n\r\nIt seems that some code path, potentially a retry path, is (a) not getting passed the api key passed to `OpenAI`, and (b) then relying on the environment variable being set. When it is not, the resulting header is simply `\"Bearer \"`.\r\n\r\nIf I set the environment variable, this problem goes away.\r\n\r\n### Version\r\n\r\n0.8.64.post1\r\n\r\n### Steps to Reproduce\r\n\r\nSee above.\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\n[[Too long]]\r\n\r\n...\r\n\r\n---------------------------------------------------------------------------\r\nLocalProtocolError                        Traceback (most recent call last)\r\nFile ~/dev/company/project/.venv/lib/python3.11/site-packages/httpcore/_exceptions.py:10, in map_exceptions(map)\r\n      9 try:\r\n---> 10     yield\r\n     11 except Exception as exc:  # noqa: PIE786\r\n\r\nFile ~/dev/company/project/.venv/lib/python3.11/site-packages/httpcore/_sync/http11.py:142, in HTTP11Connection._send_request_headers(self, request)\r\n    141 with map_exceptions({h11.LocalProtocolError: LocalProtocolError}):\r\n--> 142     event = h11.Request(\r\n    143         method=request.method,\r\n    144         target=request.url.target,\r\n    145         headers=request.headers,\r\n    146     )\r\n    147 self._send_event(event, timeout=timeout)\r\n\r\nFile ~/dev/company/project/.venv/lib/python3.11/site-packages/h11/_events.py:96, in Request.__init__(self, method, headers, target, http_version, _parsed)\r\n     94 else:\r\n     95     object.__setattr__(\r\n---> 96         self, \"headers\", normalize_and_validate(headers, _parsed=_parsed)\r\n     97     )\r\n     98 if not _parsed:\r\n\r\nFile ~/dev/company/project/.venv/lib/python3.11/site-packages/h11/_headers.py:164, in normalize_and_validate(headers, _parsed)\r\n    163     validate(_field_name_re, name, \"Illegal header name {!r}\", name)\r\n--> 164     validate(_field_value_re, value, \"Illegal header value {!r}\", value)\r\n    165 assert isinstance(name, bytes)\r\n\r\nFile ~/dev/company/project/.venv/lib/python3.11/site-packages/h11/_util.py:91, in validate(regex, data, msg, *format_args)\r\n     90         msg = msg.format(*format_args)\r\n---> 91     raise LocalProtocolError(msg)\r\n     92 return match.groupdict()\r\n\r\nLocalProtocolError: Illegal header value b'Bearer '\r\n\r\n...\r\n\r\nFile ~/dev/company/project/.venv/lib/python3.11/site-packages/openai/_base_client.py:890, in SyncAPIClient._request(self, cast_to, options, remaining_retries, stream, stream_cls)\r\n    888 except Exception as err:\r\n    889     if retries > 0:\r\n--> 890         return self._retry_request(\r\n    891             options,\r\n    892             cast_to,\r\n    893             retries,\r\n    894             stream=stream,\r\n    895             stream_cls=stream_cls,\r\n    896         )\r\n    897     raise APIConnectionError(request=request) from err\r\n    899 return self._process_response(\r\n    900     cast_to=cast_to,\r\n    901     options=options,\r\n   (...)\r\n    904     stream_cls=stream_cls,\r\n    905 )\r\n\r\nFile ~/dev/company/project/.venv/lib/python3.11/site-packages/openai/_base_client.py:925, in SyncAPIClient._retry_request(self, options, cast_to, remaining_retries, response_headers, stream, stream_cls)\r\n    921 # In a synchronous context we are blocking the entire thread. Up to the library user to run the client in a\r\n    922 # different thread if necessary.\r\n    923 time.sleep(timeout)\r\n--> 925 return self._request(\r\n    926     options=options,\r\n    927     cast_to=cast_to,\r\n    928     remaining_retries=remaining,\r\n    929     stream=stream,\r\n    930     stream_cls=stream_cls,\r\n    931 )\r\n\r\nFile ~/dev/company/project/.venv/lib/python3.11/site-packages/openai/_base_client.py:897, in SyncAPIClient._request(self, cast_to, options, remaining_retries, stream, stream_cls)\r\n    889     if retries > 0:\r\n    890         return self._retry_request(\r\n    891             options,\r\n    892             cast_to,\r\n   (...)\r\n    895             stream_cls=stream_cls,\r\n    896         )\r\n--> 897     raise APIConnectionError(request=request) from err\r\n    899 return self._process_response(\r\n    900     cast_to=cast_to,\r\n    901     options=options,\r\n   (...)\r\n    904     stream_cls=stream_cls,\r\n    905 )\r\n\r\nAPIConnectionError: Connection error.\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8761/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8761/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8760",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8760/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8760/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8760/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8760",
        "id": 1982559891,
        "node_id": "PR_kwDOIWuq585e3wou",
        "number": 8760,
        "title": "change log to print",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-08T01:44:21Z",
        "updated_at": "2023-11-08T02:49:38Z",
        "closed_at": "2023-11-08T02:49:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8760",
            "html_url": "https://github.com/run-llama/llama_index/pull/8760",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8760.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8760.patch",
            "merged_at": "2023-11-08T02:49:37Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8760/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8760/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8759",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8759/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8759/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8759/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8759",
        "id": 1982470693,
        "node_id": "PR_kwDOIWuq585e3dUj",
        "number": 8759,
        "title": "Update deps",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-08T00:11:38Z",
        "updated_at": "2023-11-10T00:11:50Z",
        "closed_at": "2023-11-10T00:11:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8759",
            "html_url": "https://github.com/run-llama/llama_index/pull/8759",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8759.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8759.patch",
            "merged_at": "2023-11-10T00:11:50Z"
        },
        "body": "# Description\r\n\r\nMake dependencies lighter ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8759/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8759/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8758",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8758/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8758/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8758/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8758",
        "id": 1982314578,
        "node_id": "PR_kwDOIWuq585e26nV",
        "number": 8758,
        "title": "GPT4V load images from local directory and some refactoring",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-07T22:05:54Z",
        "updated_at": "2023-11-07T22:41:14Z",
        "closed_at": "2023-11-07T22:41:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8758",
            "html_url": "https://github.com/run-llama/llama_index/pull/8758",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8758.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8758.patch",
            "merged_at": "2023-11-07T22:41:13Z"
        },
        "body": "# Description\r\n\r\n1. add image details (by default as low)\r\n2. support images from local dir\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8758/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8758/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8757",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8757/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8757/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8757/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8757",
        "id": 1982269427,
        "node_id": "PR_kwDOIWuq585e2wnD",
        "number": 8757,
        "title": "Bugfix and naming for QueryFusionIndex",
        "user": {
            "login": "ryanpeach",
            "id": 14838729,
            "node_id": "MDQ6VXNlcjE0ODM4NzI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14838729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanpeach",
            "html_url": "https://github.com/ryanpeach",
            "followers_url": "https://api.github.com/users/ryanpeach/followers",
            "following_url": "https://api.github.com/users/ryanpeach/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryanpeach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryanpeach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryanpeach/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanpeach/orgs",
            "repos_url": "https://api.github.com/users/ryanpeach/repos",
            "events_url": "https://api.github.com/users/ryanpeach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryanpeach/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-07T21:34:06Z",
        "updated_at": "2023-11-08T15:08:49Z",
        "closed_at": "2023-11-08T15:08:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8757",
            "html_url": "https://github.com/run-llama/llama_index/pull/8757",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8757.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8757.patch",
            "merged_at": "2023-11-08T15:08:49Z"
        },
        "body": "- Naming changes requested in #8460\r\n- Fixed a bug where results were appended by only iterating over one inner period of the double for loop\r\n\r\n# Description\r\n\r\nThe first parameter of \"zip\" in these lines does not have the same length as the second parameter, leading to it being truncated in its output.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Ran with breakpoints\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8757/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8757/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8755",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8755/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8755/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8755/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8755",
        "id": 1982091467,
        "node_id": "PR_kwDOIWuq585e2JJT",
        "number": 8755,
        "title": "Use tokenizer apply chat template for HuggingFaceLLM",
        "user": {
            "login": "geodavic",
            "id": 41129492,
            "node_id": "MDQ6VXNlcjQxMTI5NDky",
            "avatar_url": "https://avatars.githubusercontent.com/u/41129492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/geodavic",
            "html_url": "https://github.com/geodavic",
            "followers_url": "https://api.github.com/users/geodavic/followers",
            "following_url": "https://api.github.com/users/geodavic/following{/other_user}",
            "gists_url": "https://api.github.com/users/geodavic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/geodavic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/geodavic/subscriptions",
            "organizations_url": "https://api.github.com/users/geodavic/orgs",
            "repos_url": "https://api.github.com/users/geodavic/repos",
            "events_url": "https://api.github.com/users/geodavic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/geodavic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hatianzhang",
                "id": 2142132,
                "node_id": "MDQ6VXNlcjIxNDIxMzI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hatianzhang",
                "html_url": "https://github.com/hatianzhang",
                "followers_url": "https://api.github.com/users/hatianzhang/followers",
                "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
                "repos_url": "https://api.github.com/users/hatianzhang/repos",
                "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-07T19:40:03Z",
        "updated_at": "2023-11-08T15:41:13Z",
        "closed_at": "2023-11-08T15:41:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8755",
            "html_url": "https://github.com/run-llama/llama_index/pull/8755",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8755.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8755.patch",
            "merged_at": "2023-11-08T15:41:12Z"
        },
        "body": "# Description\r\n\r\nThe default `_messages_to_prompt` converter in `HuggingFaceLLM` can be problematic if your model is not trained on that specific instruction format. For example, Mistral 7b expects instructions to be formatted like `[INST] ... [/INST]` but other models might use `user: ...\\nassistant: ...` or something else. \r\n\r\nIn this change we use the tokenizer's `apply_chat_template` method, if it exists, to convert messages to prompt, only using the `generic_messages_to_prompt` as a fallback. We also add a warning about using models and tokenizers that aren't from the same huggingface repo (using a different tokenizer can lead to bad results).\r\n\r\n## Type of Change\r\n\r\nThis could be considered a \"bug\" depending on your definition of bug.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nHere is an example of the behavior before:\r\n\r\n```python\r\n>>> from llama_index.llms.base import ChatMessage\r\n>>> messages = [ChatMessage(role=\"user\",content=\"This is a chat message\")]\r\n>>> from llama_index.llms import HuggingFaceLLM\r\n>>> llm = HuggingFaceLLM(model_name=\"mistralai/Mistral-7B-Instruct-v0.1\", tokenizer_name=\"mistralai/Mistral-7B-Instruct-v0.1\", device_map=\"auto\")\r\nLoading checkpoint shards: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2/2 [00:13<00:00,  6.52s/it]\r\n>>> >>> llm._messages_to_prompt(messages)\r\n'user: This is a chat message\\nassistant: '\r\n>>> llm.chat(messages)\r\nSetting `pad_token_id` to `eos_token_id`:2 for open-end generation.\r\nChatResponse(message=ChatMessage(role=<MessageRole.ASSISTANT: 'assistant'>, content='1. What is the capital of France?\\n2. What is the population of the United States?\\n3. What is the weather like in New York City?\\n4. What is the highest mountain in the world?\\n5. What is the currency of Japan?\\n6. What is the largest planet in our solar system?\\n7. What is the smallest country in the world?\\n8. What is the largest animal on Earth?\\n9. What is the smallest mammal on Earth?\\n10. What is the largest mammal on Earth?\\n11. What is the smallest bird on Earth?\\n12. What is the largest bird on Earth?\\n13. What is the smallest fish on Earth?\\n14. What is the largest fish on Earth?\\n15. What is the smallest insect on Earth?\\n16. What is the largest insect on Earth?\\n17. What is the smallest reptile on Earth?\\n18. What is the largest reptile on Earth?\\n19. What is the smallest amphibian on Earth?\\n20. What is the largest amphibian on Earth?\\n21. What is the smallest mamm', additional_kwargs={}))\r\n```\r\n\r\nThis is the behavior after:\r\n\r\n```python\r\n>>> from llama_index.llms.base import ChatMessage\r\n>>> messages = [ChatMessage(role=\"user\",content=\"This is a chat message\")]\r\n>>> from llama_index.llms import HuggingFaceLLM\r\n>>> llm = HuggingFaceLLM(model_name=\"mistralai/Mistral-7B-Instruct-v0.1\", tokenizer_name=\"mistralai/Mistral-7B-Instruct-v0.1\", device_map=\"auto\")\r\nLoading checkpoint shards: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2/2 [00:13<00:00,  6.52s/it]\r\n>>> llm._messages_to_prompt(messages)\r\n'<s> [INST] This is a chat message [/INST]'\r\n>>> llm.chat(messages)\r\nSetting `pad_token_id` to `eos_token_id`:2 for open-end generation.\r\nChatResponse(message=ChatMessage(role=<MessageRole.ASSISTANT: 'assistant'>, content='Hello! How can I assist you today?', additional_kwargs={}))\r\n```\r\n\r\nWe see that using the correct prompt format yields more desirable Chat behavior.\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] My changes generate no new warnings\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8755/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8755/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8754",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8754/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8754/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8754/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8754",
        "id": 1982090842,
        "node_id": "I_kwDOIWuq5852JE5a",
        "number": 8754,
        "title": "Missing pypdf dependency in docs/examples/agent/openai_assistant_agent.ipynb",
        "user": {
            "login": "lgiavedoni",
            "id": 11629159,
            "node_id": "MDQ6VXNlcjExNjI5MTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11629159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lgiavedoni",
            "html_url": "https://github.com/lgiavedoni",
            "followers_url": "https://api.github.com/users/lgiavedoni/followers",
            "following_url": "https://api.github.com/users/lgiavedoni/following{/other_user}",
            "gists_url": "https://api.github.com/users/lgiavedoni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lgiavedoni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lgiavedoni/subscriptions",
            "organizations_url": "https://api.github.com/users/lgiavedoni/orgs",
            "repos_url": "https://api.github.com/users/lgiavedoni/repos",
            "events_url": "https://api.github.com/users/lgiavedoni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lgiavedoni/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-07T19:39:36Z",
        "updated_at": "2023-11-07T20:19:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI am getting the following error executing docs/examples/agent/openai_assistant_agent.ipynb in colab:\r\n\r\nWARNING:llama_index.readers.file.base:Failed to load file data/10k/lyft_2021.pdf with error:\r\npypdf is required to read PDF files: `pip install pypdf`.\r\nSkipping...\r\n\r\nSolution:\r\nInclude !pip install pypdf at the top \n\n### Version\n\nv0.8.64.post1\n\n### Steps to Reproduce\n\nOpen docs/examples/agent/openai_assistant_agent.ipynb in colab\r\n\r\nRun the full notebook\n\n### Relevant Logs/Tracbacks\n\n```shell\nWARNING:llama_index.readers.file.base:Failed to load file data/10k/lyft_2021.pdf with error:\r\npypdf is required to read PDF files: `pip install pypdf`.\r\nSkipping...\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8754/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8754/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8753",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8753/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8753/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8753/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8753",
        "id": 1982084201,
        "node_id": "PR_kwDOIWuq585e2Hj6",
        "number": 8753,
        "title": "add namespaced vector stores to storage context",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-07T19:34:49Z",
        "updated_at": "2023-11-09T00:16:49Z",
        "closed_at": "2023-11-07T21:56:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8753",
            "html_url": "https://github.com/run-llama/llama_index/pull/8753",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8753.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8753.patch",
            "merged_at": "2023-11-07T21:56:40Z"
        },
        "body": "# Description\r\n\r\nThere are some scenarios where you may want several vector indexes, and those vector indexes could come from any vector db provider.\r\n\r\nThis PR updates the storage context to add high-level namespaces for vector stores, to help support future development.\r\n\r\nI have personally tested storing/loading old and new indexes for backwards compatibility. \r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8753/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8753/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8752",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8752/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8752/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8752/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8752",
        "id": 1981923216,
        "node_id": "I_kwDOIWuq5852Ib-Q",
        "number": 8752,
        "title": "[Question]: Finetune embedding without OpenAI",
        "user": {
            "login": "Aekansh-Ak",
            "id": 64459173,
            "node_id": "MDQ6VXNlcjY0NDU5MTcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/64459173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Aekansh-Ak",
            "html_url": "https://github.com/Aekansh-Ak",
            "followers_url": "https://api.github.com/users/Aekansh-Ak/followers",
            "following_url": "https://api.github.com/users/Aekansh-Ak/following{/other_user}",
            "gists_url": "https://api.github.com/users/Aekansh-Ak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Aekansh-Ak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Aekansh-Ak/subscriptions",
            "organizations_url": "https://api.github.com/users/Aekansh-Ak/orgs",
            "repos_url": "https://api.github.com/users/Aekansh-Ak/repos",
            "events_url": "https://api.github.com/users/Aekansh-Ak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Aekansh-Ak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-07T17:58:50Z",
        "updated_at": "2023-11-08T19:43:41Z",
        "closed_at": "2023-11-08T19:43:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI have been following the documentation and trying to finetune embedding but stuck in the corpus generation.\r\n\r\n**The documentation** -: https://gpt-index.readthedocs.io/en/stable/examples/finetuning/embeddings/finetune_embedding_adapter.html\r\n\r\n**Code expected** -: \r\n\r\ntrain_dataset = generate_qa_embedding_pairs(train_nodes)\r\ntrain_dataset.save_json(\"train_dataset.json\")\r\n\r\nThis by default expects an openAI api key but I want to use my own model to generate corpus.\r\n\r\n**My code**-:\r\n\r\nllm = AutoModelForCausalLM.from_pretrained(\"lmsys/vicuna-13b-v1.5\",\r\n                                            device_map='auto',\r\n                                            torch_dtype=torch.float16\r\n                                            #low_cpu_mem_usage=False\r\n)\r\n\r\ntrain_dataset = generate_qa_embedding_pairs(train_nodes,llm)\r\n\r\n**The error**-: AttributeError: 'LlamaForCausalLM' object has no attribute 'complete'\r\n\r\n**Function generate_qa_embedding_pairs** :\r\n\r\ndef generate_qa_embedding_pairs(\r\n    nodes: List[TextNode],\r\n    llm: Optional[LLM] = None,\r\n    qa_generate_prompt_tmpl: str = DEFAULT_QA_GENERATE_PROMPT_TMPL,\r\n    num_questions_per_chunk: int = 2,\r\n) -> EmbeddingQAFinetuneDataset:\r\n    \"\"\"Generate examples given a set of nodes.\"\"\"\r\n    node_dict = {\r\n        node.node_id: node.get_content(metadata_mode=MetadataMode.NONE)\r\n        for node in nodes\r\n    }\r\n\r\n    llm = llm or OpenAI(model=\"gpt-3.5-turbo\")\r\n\r\n    queries = {}\r\n    relevant_docs = {}\r\n    for node_id, text in tqdm(node_dict.items()):\r\n        query = qa_generate_prompt_tmpl.format(\r\n            context_str=text, num_questions_per_chunk=num_questions_per_chunk\r\n        )\r\n        response = llm.complete(query)\r\n\r\n        result = str(response).strip().split(\"\\n\")\r\n        questions = [\r\n            re.sub(r\"^\\d+[\\).\\s]\", \"\", question).strip() for question in result\r\n        ]\r\n        questions = [question for question in questions if len(question) > 0]\r\n\r\n        for question in questions:\r\n            question_id = str(uuid.uuid4())\r\n            queries[question_id] = question\r\n            relevant_docs[question_id] = [node_id]",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8752/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8752/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8751",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8751/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8751/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8751/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8751",
        "id": 1981912822,
        "node_id": "PR_kwDOIWuq585e1iJz",
        "number": 8751,
        "title": "[version] bump version to 0.8.64.post1",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-07T17:53:25Z",
        "updated_at": "2023-11-07T22:59:39Z",
        "closed_at": "2023-11-07T22:59:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8751",
            "html_url": "https://github.com/run-llama/llama_index/pull/8751",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8751.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8751.patch",
            "merged_at": "2023-11-07T22:59:39Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8751/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8751/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8750",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8750/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8750/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8750/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8750",
        "id": 1981839311,
        "node_id": "I_kwDOIWuq5852IHfP",
        "number": 8750,
        "title": "[Question]: I am unable to determine the number of API calls and the cost associated with llama_index and GPT-3.5 Turbo calls. I'm trying to optimize the cost for one of my models.",
        "user": {
            "login": "akashkumar398",
            "id": 24894328,
            "node_id": "MDQ6VXNlcjI0ODk0MzI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/24894328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akashkumar398",
            "html_url": "https://github.com/akashkumar398",
            "followers_url": "https://api.github.com/users/akashkumar398/followers",
            "following_url": "https://api.github.com/users/akashkumar398/following{/other_user}",
            "gists_url": "https://api.github.com/users/akashkumar398/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akashkumar398/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akashkumar398/subscriptions",
            "organizations_url": "https://api.github.com/users/akashkumar398/orgs",
            "repos_url": "https://api.github.com/users/akashkumar398/repos",
            "events_url": "https://api.github.com/users/akashkumar398/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akashkumar398/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-07T17:10:39Z",
        "updated_at": "2023-11-07T17:35:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nSteps to Reproduce:\r\nllm = OpenAI(temperature=0.1, model=\"gpt-3.5-turbo\")\r\n\r\nservice_context = ServiceContext.from_defaults(\r\nllm=llm,callback_manager=callback_manager\r\n)\r\n\r\nfrom llama_index.indices.struct_store.sql_query import NLSQLTableQueryEngine\r\n\r\nquery_engine = NLSQLTableQueryEngine(\r\nsql_database=sql_database,\r\nservice_context=service_context\r\n)\r\n\r\ncustom_prompt = \"\"\"\r\nfollow the instructions if needed:\r\nWhen given an inquiry of id, select the 'status' column\"\r\n\"\"\"\r\n\r\ntoken_counter.reset_counts()\r\nquery_str = \"What is the inqiry of id 1234?\"\r\nresponse = query_engine.query(custom_prompt + \" \" + query_str)\r\nprint(response.response)\r\nprint('token_counter:',token_counter.total_llm_token_count)\r\n\r\nthis is printing the token counts but i need to print api calls and cost for api call",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8750/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8750/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8749",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8749/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8749/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8749/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8749",
        "id": 1981749239,
        "node_id": "PR_kwDOIWuq585e0-RH",
        "number": 8749,
        "title": "chore: update gpt4v notebook prompt",
        "user": {
            "login": "EmanuelCampos",
            "id": 16262455,
            "node_id": "MDQ6VXNlcjE2MjYyNDU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/16262455?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EmanuelCampos",
            "html_url": "https://github.com/EmanuelCampos",
            "followers_url": "https://api.github.com/users/EmanuelCampos/followers",
            "following_url": "https://api.github.com/users/EmanuelCampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/EmanuelCampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EmanuelCampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EmanuelCampos/subscriptions",
            "organizations_url": "https://api.github.com/users/EmanuelCampos/orgs",
            "repos_url": "https://api.github.com/users/EmanuelCampos/repos",
            "events_url": "https://api.github.com/users/EmanuelCampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EmanuelCampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hatianzhang",
                "id": 2142132,
                "node_id": "MDQ6VXNlcjIxNDIxMzI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hatianzhang",
                "html_url": "https://github.com/hatianzhang",
                "followers_url": "https://api.github.com/users/hatianzhang/followers",
                "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
                "repos_url": "https://api.github.com/users/hatianzhang/repos",
                "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-07T16:25:38Z",
        "updated_at": "2023-11-07T16:40:13Z",
        "closed_at": "2023-11-07T16:40:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8749",
            "html_url": "https://github.com/run-llama/llama_index/pull/8749",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8749.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8749.patch",
            "merged_at": "2023-11-07T16:40:13Z"
        },
        "body": "# Description\r\n\r\nPrompt asking as an alternative text give best results for the images used on the example.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Notebook update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8749/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8749/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8748",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8748/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8748/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8748/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8748",
        "id": 1981734792,
        "node_id": "PR_kwDOIWuq585e07G8",
        "number": 8748,
        "title": "Remove unsupported deployment_name arg",
        "user": {
            "login": "matthiaskern",
            "id": 9108002,
            "node_id": "MDQ6VXNlcjkxMDgwMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9108002?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matthiaskern",
            "html_url": "https://github.com/matthiaskern",
            "followers_url": "https://api.github.com/users/matthiaskern/followers",
            "following_url": "https://api.github.com/users/matthiaskern/following{/other_user}",
            "gists_url": "https://api.github.com/users/matthiaskern/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matthiaskern/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matthiaskern/subscriptions",
            "organizations_url": "https://api.github.com/users/matthiaskern/orgs",
            "repos_url": "https://api.github.com/users/matthiaskern/repos",
            "events_url": "https://api.github.com/users/matthiaskern/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matthiaskern/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-07T16:18:33Z",
        "updated_at": "2023-11-07T16:28:16Z",
        "closed_at": "2023-11-07T16:28:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8748",
            "html_url": "https://github.com/run-llama/llama_index/pull/8748",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8748.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8748.patch",
            "merged_at": "2023-11-07T16:28:16Z"
        },
        "body": "# Description\r\n\r\nThis broke Vectorstore Async embedding support broke after #8712 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [X] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [X] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8748/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8748/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8747",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8747/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8747/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8747/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8747",
        "id": 1981661914,
        "node_id": "PR_kwDOIWuq585e0rGM",
        "number": 8747,
        "title": "[version] bump version to 0.8.64",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-07T15:43:56Z",
        "updated_at": "2023-11-07T17:52:25Z",
        "closed_at": "2023-11-07T17:52:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8747",
            "html_url": "https://github.com/run-llama/llama_index/pull/8747",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8747.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8747.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8747/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8747/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8746",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8746/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8746/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8746/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8746",
        "id": 1981626719,
        "node_id": "PR_kwDOIWuq585e0jfR",
        "number": 8746,
        "title": "fix elastic search zero results",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-07T15:26:32Z",
        "updated_at": "2023-11-07T15:43:02Z",
        "closed_at": "2023-11-07T15:43:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8746",
            "html_url": "https://github.com/run-llama/llama_index/pull/8746",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8746.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8746.patch",
            "merged_at": "2023-11-07T15:43:01Z"
        },
        "body": "# Description\r\n\r\nSimple fix to avoid crashing when zero nodes are returned.\r\n\r\nFixes https://github.com/run-llama/llama_index/issues/8730\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8746/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8746/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8745",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8745/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8745/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8745/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8745",
        "id": 1981605575,
        "node_id": "I_kwDOIWuq5852HObH",
        "number": 8745,
        "title": "[Question]: How to use Own Model with Chroma Vector DB",
        "user": {
            "login": "taynotfound",
            "id": 50525948,
            "node_id": "MDQ6VXNlcjUwNTI1OTQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/50525948?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/taynotfound",
            "html_url": "https://github.com/taynotfound",
            "followers_url": "https://api.github.com/users/taynotfound/followers",
            "following_url": "https://api.github.com/users/taynotfound/following{/other_user}",
            "gists_url": "https://api.github.com/users/taynotfound/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/taynotfound/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/taynotfound/subscriptions",
            "organizations_url": "https://api.github.com/users/taynotfound/orgs",
            "repos_url": "https://api.github.com/users/taynotfound/repos",
            "events_url": "https://api.github.com/users/taynotfound/events{/privacy}",
            "received_events_url": "https://api.github.com/users/taynotfound/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-07T15:17:26Z",
        "updated_at": "2023-11-07T16:24:30Z",
        "closed_at": "2023-11-07T16:24:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nBasically what the Title Says. \r\nOn MacBook Pro 2019 i9, 8th gen. 32GB RAM, Vega Pro 20\r\n\r\nHere is my Code:\r\n```\r\nfrom llama_index import (\r\n    SimpleDirectoryReader,\r\n    VectorStoreIndex,\r\n    ServiceContext,\r\n)\r\nfrom llama_index.llms import LlamaCPP\r\nfrom llama_index.llms.llama_utils import messages_to_prompt, completion_to_prompt\r\n\r\nmodel_url = \"https://huggingface.co/TheBloke/Mistral-7B-v0.1-GGUF/resolve/main/mistral-7b-v0.1.Q5_K_M.gguf\"\r\nllm = LlamaCPP(\r\n    # You can pass in the URL to a GGML model to download it automatically\r\n    # optionally, you can set the path to a pre-downloaded model instead of model_url\r\n    model_path=\"/home/tay/AGVMastril/em_german_13b_v01-GGUF.gguf\",\r\n    temperature=0.1,\r\n    max_new_tokens=4048,\r\n    # llama2 has a context window of 4096 tokens, but we set it lower to allow for some wiggle room\r\n    context_window=3900,\r\n    # kwargs to pass to __call__()\r\n    generate_kwargs={},\r\n    # kwargs to pass to __init__()\r\n    # set to at least 1 to use GPU\r\n    # model_kwargs={\"n_gpu_layers\": 1},\r\n    # transform inputs into Llama2 format\r\n    # messages_to_prompt=messages_to_prompt,\r\n    # completion_to_prompt=completion_to_prompt,\r\n    verbose=True,\r\n    \r\n)\r\nresponse_iter = llm.stream_complete(\r\n    \"Schreib mir eine kleine Geschichte \u00fcber eine Katze.\"\r\n)\r\nfor response in response_iter:\r\n    print(response.delta, end=\"\", flush=True)\r\nprint(response.text)\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8745/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8745/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8744",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8744/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8744/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8744/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8744",
        "id": 1981601079,
        "node_id": "PR_kwDOIWuq585e0d2k",
        "number": 8744,
        "title": "try except SimpleDirectoryReader load loop",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-07T15:15:20Z",
        "updated_at": "2023-11-07T15:26:02Z",
        "closed_at": "2023-11-07T15:26:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8744",
            "html_url": "https://github.com/run-llama/llama_index/pull/8744",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8744.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8744.patch",
            "merged_at": "2023-11-07T15:26:01Z"
        },
        "body": "# Description\r\n\r\nSmall change to add a try/except when reading directories\r\n\r\nFixes https://github.com/run-llama/llama_index/issues/8742\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8744/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8744/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8743",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8743/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8743/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8743/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8743",
        "id": 1981480326,
        "node_id": "I_kwDOIWuq5852Gv2G",
        "number": 8743,
        "title": "[Question]: How to use PyTorch_MPS_HIGH_WATERMARK_RATIO?",
        "user": {
            "login": "taynotfound",
            "id": 50525948,
            "node_id": "MDQ6VXNlcjUwNTI1OTQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/50525948?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/taynotfound",
            "html_url": "https://github.com/taynotfound",
            "followers_url": "https://api.github.com/users/taynotfound/followers",
            "following_url": "https://api.github.com/users/taynotfound/following{/other_user}",
            "gists_url": "https://api.github.com/users/taynotfound/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/taynotfound/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/taynotfound/subscriptions",
            "organizations_url": "https://api.github.com/users/taynotfound/orgs",
            "repos_url": "https://api.github.com/users/taynotfound/repos",
            "events_url": "https://api.github.com/users/taynotfound/events{/privacy}",
            "received_events_url": "https://api.github.com/users/taynotfound/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-07T14:21:08Z",
        "updated_at": "2023-11-07T14:59:23Z",
        "closed_at": "2023-11-07T14:59:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHow to use PyTorch_MPS_HIGH_WATERMARK_RATIO?\r\n\r\n\r\n```\r\nindex = VectorStoreIndex.from_documents(\r\n    documents, storage_context=storage_context, service_context=service_context, PYTORCH_MPS_HIGH_WATERMARK_RATIO=0.0\r\n) \r\n```\r\nMakes  it crash with following error\r\n`RuntimeError: MPS backend out of memory (MPS allocated: 2.44 GB, other allocations: 4.34 GB, max allowed: 6.77 GB). Tried to allocate 10.58 MB on private pool. Use PYTORCH_MPS_HIGH_WATERMARK_RATIO=0.0 to disable upper limit for memory allocations (may cause system failure).`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8743/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8743/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8742",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8742/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8742/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8742/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8742",
        "id": 1981237891,
        "node_id": "I_kwDOIWuq5852F0qD",
        "number": 8742,
        "title": "[Bug]:  Trouble with corrupted pdfs?",
        "user": {
            "login": "andreifoldes",
            "id": 7458009,
            "node_id": "MDQ6VXNlcjc0NTgwMDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7458009?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andreifoldes",
            "html_url": "https://github.com/andreifoldes",
            "followers_url": "https://api.github.com/users/andreifoldes/followers",
            "following_url": "https://api.github.com/users/andreifoldes/following{/other_user}",
            "gists_url": "https://api.github.com/users/andreifoldes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andreifoldes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andreifoldes/subscriptions",
            "organizations_url": "https://api.github.com/users/andreifoldes/orgs",
            "repos_url": "https://api.github.com/users/andreifoldes/repos",
            "events_url": "https://api.github.com/users/andreifoldes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andreifoldes/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-07T12:29:24Z",
        "updated_at": "2023-11-07T15:26:02Z",
        "closed_at": "2023-11-07T15:26:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhen running\r\n`documents = SimpleDirectoryReader(data_path).load_data()` on a folder I moved all the academic pdf files from my Zotero library I get an error.\n\n### Version\n\n0.8.63.post2\n\n### Steps to Reproduce\n\nI'm not sure which pdf file is causing the problem, but I think it would be nice to catch this exception in the reader.\n\n### Relevant Logs/Tracbacks\n\n```shell\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\xxx\\Anaconda3\\envs\\py310\\lib\\site-packages\\llama_index\\readers\\file\\base.py\", line 227, in load_data\r\n    docs = reader.load_data(input_file, extra_info=metadata)\r\n  File \"C:\\Users\\xxx\\Anaconda3\\envs\\py310\\lib\\site-packages\\llama_index\\readers\\file\\docs_reader.py\", line 33, in load_data\r\n    num_pages = len(pdf.pages)\r\n  File \"C:\\Users\\xxx\\Anaconda3\\envs\\py310\\lib\\site-packages\\pypdf\\_page.py\", line 2498, in __len__\r\n    return self.length_function()\r\n  File \"C:\\Users\\xxx\\Anaconda3\\envs\\py310\\lib\\site-packages\\pypdf\\_reader.py\", line 462, in _get_num_pages\r\n    self._flatten()\r\n  File \"C:\\Users\\xx\\Anaconda3\\envs\\py310\\lib\\site-packages\\pypdf\\_reader.py\", line 1227, in _flatten\r\n    catalog = self.trailer[TK.ROOT].get_object()\r\n  File \"C:\\Users\\xxx\\Anaconda3\\envs\\py310\\lib\\site-packages\\pypdf\\generic\\_data_structures.py\", line 333, in __getitem__\r\n    return dict.__getitem__(self, key).get_object()\r\nKeyError: '/Root'\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8742/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8742/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8741",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8741/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8741/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8741/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8741",
        "id": 1981122155,
        "node_id": "I_kwDOIWuq5852FYZr",
        "number": 8741,
        "title": "[Bug]: TokenTextSplitter does not split when using huggingface tokenizer",
        "user": {
            "login": "manuelrech",
            "id": 63170478,
            "node_id": "MDQ6VXNlcjYzMTcwNDc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63170478?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manuelrech",
            "html_url": "https://github.com/manuelrech",
            "followers_url": "https://api.github.com/users/manuelrech/followers",
            "following_url": "https://api.github.com/users/manuelrech/following{/other_user}",
            "gists_url": "https://api.github.com/users/manuelrech/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manuelrech/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manuelrech/subscriptions",
            "organizations_url": "https://api.github.com/users/manuelrech/orgs",
            "repos_url": "https://api.github.com/users/manuelrech/repos",
            "events_url": "https://api.github.com/users/manuelrech/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manuelrech/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-07T11:19:14Z",
        "updated_at": "2023-11-07T15:16:52Z",
        "closed_at": "2023-11-07T15:16:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nI think this code in `TokenTextSplitter` is built around the tokenizer from tiktoken. Indeed when we call `self.tokenizer(text)` with a tokenizer from tiktoken we get as a result a list of tokens. However, when we use a tokenizer from the `transformers` library (in my case `mistralai/Mistral-7B-Instruct-v0.1`) the output of the `self.tokenizer(text)` is not a the list of tokens but a dictionary with two keys: `input_ids` and `attention_mask`. The `input_ids` contain the list of tokens as if it was generated by `self.tokenizer(text)` with a tiktoken tokenizer.\r\n\r\n\r\n### Version\r\n\r\n 0.8.61\r\n\r\n### Steps to Reproduce\r\n\r\nfrom transformers import AutoTokenizer\r\nfrom llama_index.node_parser import SimpleNodeParser\r\nfrom llama_index.text_splitter import TokenTextSplitter\r\ntokenizer = AutoTokenizer.from_pretrained(\"mistralai/Mistral-7B-Instruct-v0.1\")\r\ntext_splitter = TokenTextSplitter(\r\n  separator=\" \",\r\n  chunk_size=300,\r\n  chunk_overlap=5,\r\n  backup_separators=[\"\\n\"],\r\n  tokenizer=tokenizer\r\n)\r\nnode_parser = SimpleNodeParser.from_defaults(\r\n        text_splitter=text_splitter\r\n        )\r\nbase_nodes = node_parser.get_nodes_from_documents(**any list of llama index documents**, show_progress=True)\r\nprint(len(**any list of llama index documents**.text))\r\nprint('---')\r\nprint(len(base_nodes[0].text))\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8741/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8741/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8740",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8740/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8740/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8740/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8740",
        "id": 1981099075,
        "node_id": "I_kwDOIWuq5852FSxD",
        "number": 8740,
        "title": "[Bug]:  `openai` has no `ChatCompletion` attribute, this is likely due to an old version of the openai package. ",
        "user": {
            "login": "zhongli1990",
            "id": 48908256,
            "node_id": "MDQ6VXNlcjQ4OTA4MjU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/48908256?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhongli1990",
            "html_url": "https://github.com/zhongli1990",
            "followers_url": "https://api.github.com/users/zhongli1990/followers",
            "following_url": "https://api.github.com/users/zhongli1990/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhongli1990/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhongli1990/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhongli1990/subscriptions",
            "organizations_url": "https://api.github.com/users/zhongli1990/orgs",
            "repos_url": "https://api.github.com/users/zhongli1990/repos",
            "events_url": "https://api.github.com/users/zhongli1990/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhongli1990/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-07T11:05:50Z",
        "updated_at": "2023-11-07T15:18:27Z",
        "closed_at": "2023-11-07T15:18:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nCurrent version 0.8.63-post2 doesn't work with OpenAI 1.1 yet. \r\n\r\nToday morning I happened to restart my dockers, and since I didn't fix any openai and llama_index package version in requirements.txt (bad habit due to multi-tasking too much), it got the following issue:\r\n\r\npenai             | =============Building GPTVectorStoreIndex ======\r\nopenai             | Traceback (most recent call last):\r\nopenai             |   File \"/app/app.py\", line 148, in <module>\r\nopenai             |     llamaindex = load_index() \r\nopenai             |   File \"/app/app.py\", line 140, in load_index\r\nopenai             |     index = load_index_from_storage(storage_context, service_context=create_service_context())\r\nopenai             |   File \"/app/app.py\", line 100, in create_service_context\r\nopenai             |     llm_predictor = LLMPredictor(llm=ChatOpenAI(temperature=0.5, model_name=\"gpt-4\", max_tokens=num_outputs)) #gpt-3.5-turbo\r\nopenai             |   File \"/usr/local/lib/python3.10/site-packages/langchain/load/serializable.py\", line 97, in __init__\r\nopenai             |     super().__init__(**kwargs)\r\nopenai             |   File \"/usr/local/lib/python3.10/site-packages/pydantic/v1/main.py\", line 341, in __init__\r\nopenai             |     raise validation_error\r\nopenai             | pydantic.v1.error_wrappers.ValidationError: 1 validation error for ChatOpenAI\r\nopenai             | __root__\r\nopenai             |   `openai` has no `ChatCompletion` attribute, this is likely due to an old version of the openai package. Try upgrading it with `pip install --upgrade openai`. (type=value_error)\r\n\r\n\r\nIt's not really a big issue, but since it took me whole morning to realise it might be just due to langchain is not working with openai 1.1 etc by default yet. I simply changed it back to openai==0.86.1, then all restored.  So just a quick note here in case others stumbled on it too.\r\n\r\n### Version\r\n\r\n 0.8.63-post2\r\n\r\n### Steps to Reproduce\r\n\r\ndon't fix any version in requirements.txt for a python 3.10-slim-buster docker. \r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8740/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8740/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8739",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8739/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8739/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8739/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8739",
        "id": 1980783025,
        "node_id": "PR_kwDOIWuq585exqQy",
        "number": 8739,
        "title": "JSON mode vs. function calling notebook",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-07T08:11:00Z",
        "updated_at": "2023-11-07T23:16:16Z",
        "closed_at": "2023-11-07T23:16:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8739",
            "html_url": "https://github.com/run-llama/llama_index/pull/8739",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8739.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8739.patch",
            "merged_at": "2023-11-07T23:16:15Z"
        },
        "body": "# Description\r\n\r\nAdd JSON mode vs. function calling notebook\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8739/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8739/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8738",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8738/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8738/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8738/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8738",
        "id": 1980777852,
        "node_id": "PR_kwDOIWuq585expMZ",
        "number": 8738,
        "title": "Llama 633 refactor openaiagent",
        "user": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-07T08:07:35Z",
        "updated_at": "2023-11-09T04:00:06Z",
        "closed_at": "2023-11-08T20:07:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8738",
            "html_url": "https://github.com/run-llama/llama_index/pull/8738",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8738.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8738.patch",
            "merged_at": "2023-11-08T20:07:11Z"
        },
        "body": "# Description\r\n\r\n- Refactored `OpenAIAgent` to use the latest `OpenAI` api (v. >1.1.0)\r\n   - biggest change here is `tool_calls` over deprecated `function_call`, and `tool_choice` over deprecated `function_call` (they overloaded this variable...)\r\n- Also support now parallel function calling \r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (potentially breaking change which adds functionality)\r\n     - `llm.chat` and similar calls, we use `tool_choice` instead of `function_call` to mirror OpenAI API.\r\n     - also requires using `to_openai_tool` instead of `to_openai_function`\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Checked all affected notebooks\r\n- [x] Added new notebook (that tests end-to-end) on parallel function calling\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8738/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8738/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8737",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8737/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8737/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8737/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8737",
        "id": 1980719849,
        "node_id": "I_kwDOIWuq5852D2Lp",
        "number": 8737,
        "title": "[Question]: Retrieval with LlamaIndex ",
        "user": {
            "login": "4entertainment",
            "id": 58992739,
            "node_id": "MDQ6VXNlcjU4OTkyNzM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/58992739?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/4entertainment",
            "html_url": "https://github.com/4entertainment",
            "followers_url": "https://api.github.com/users/4entertainment/followers",
            "following_url": "https://api.github.com/users/4entertainment/following{/other_user}",
            "gists_url": "https://api.github.com/users/4entertainment/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/4entertainment/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/4entertainment/subscriptions",
            "organizations_url": "https://api.github.com/users/4entertainment/orgs",
            "repos_url": "https://api.github.com/users/4entertainment/repos",
            "events_url": "https://api.github.com/users/4entertainment/events{/privacy}",
            "received_events_url": "https://api.github.com/users/4entertainment/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-07T07:30:12Z",
        "updated_at": "2023-11-15T04:57:18Z",
        "closed_at": "2023-11-15T04:57:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI mentioned that I wanted to do this in the linket issue(https://github.com/run-llama/llama_index/issues/8661  but closed) and @logan-markewich  was very helpful.\r\n\r\nThinking back, I thought I could do it this way:\r\n1) I send my file.\r\n2) In the data ingestion section, I divide it into chunks and save it to a vector db. Here I should try chroma, deeplake, qdrant and see their performance.\r\n3) I perform similarity checks on embeddings consisting of files. I will send the answer to the input given according to the similarity checking results.\r\n\r\nI would be very pleased if there is someone who has knowledge about this task that I need to do and can provide code and explanation.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8737/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8737/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8736",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8736/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8736/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8736/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8736",
        "id": 1980650761,
        "node_id": "PR_kwDOIWuq585exNg_",
        "number": 8736,
        "title": "Include other powerpoint extension in SimpleDirectoryReader",
        "user": {
            "login": "yashodeepdeshmukh",
            "id": 76196538,
            "node_id": "MDQ6VXNlcjc2MTk2NTM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/76196538?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yashodeepdeshmukh",
            "html_url": "https://github.com/yashodeepdeshmukh",
            "followers_url": "https://api.github.com/users/yashodeepdeshmukh/followers",
            "following_url": "https://api.github.com/users/yashodeepdeshmukh/following{/other_user}",
            "gists_url": "https://api.github.com/users/yashodeepdeshmukh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yashodeepdeshmukh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yashodeepdeshmukh/subscriptions",
            "organizations_url": "https://api.github.com/users/yashodeepdeshmukh/orgs",
            "repos_url": "https://api.github.com/users/yashodeepdeshmukh/repos",
            "events_url": "https://api.github.com/users/yashodeepdeshmukh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yashodeepdeshmukh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-07T06:33:42Z",
        "updated_at": "2023-11-09T04:42:39Z",
        "closed_at": "2023-11-09T04:42:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8736",
            "html_url": "https://github.com/run-llama/llama_index/pull/8736",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8736.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8736.patch",
            "merged_at": "2023-11-09T04:42:39Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8736/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8736/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8735",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8735/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8735/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8735/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8735",
        "id": 1980605490,
        "node_id": "PR_kwDOIWuq585exDfz",
        "number": 8735,
        "title": "Add AI assistant agent ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-07T05:59:52Z",
        "updated_at": "2023-11-07T17:50:37Z",
        "closed_at": "2023-11-07T17:50:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8735",
            "html_url": "https://github.com/run-llama/llama_index/pull/8735",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8735.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8735.patch",
            "merged_at": "2023-11-07T17:50:36Z"
        },
        "body": "Followup from #8716 ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8735/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8735/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8734",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8734/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8734/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8734/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8734",
        "id": 1980592478,
        "node_id": "PR_kwDOIWuq585exAq9",
        "number": 8734,
        "title": "Add Perplexity LLM integration",
        "user": {
            "login": "vishhvak",
            "id": 30690855,
            "node_id": "MDQ6VXNlcjMwNjkwODU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/30690855?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vishhvak",
            "html_url": "https://github.com/vishhvak",
            "followers_url": "https://api.github.com/users/vishhvak/followers",
            "following_url": "https://api.github.com/users/vishhvak/following{/other_user}",
            "gists_url": "https://api.github.com/users/vishhvak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vishhvak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vishhvak/subscriptions",
            "organizations_url": "https://api.github.com/users/vishhvak/orgs",
            "repos_url": "https://api.github.com/users/vishhvak/repos",
            "events_url": "https://api.github.com/users/vishhvak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vishhvak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-07T05:46:18Z",
        "updated_at": "2023-11-17T15:58:17Z",
        "closed_at": "2023-11-17T15:58:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8734",
            "html_url": "https://github.com/run-llama/llama_index/pull/8734",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8734.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8734.patch",
            "merged_at": "2023-11-17T15:58:17Z"
        },
        "body": "# Description\r\n\r\nThis PR introduces a new class Perplexity to the Llama Index, designed to integrate with the Perplexity AI API. The class provides a structured way to access various functionalities of the Perplexity AI models, such as completions and chat-based interactions, with support for both synchronous and asynchronous calls, as well as streaming responses.\r\n\r\nFixes # (issue)\r\n\r\nAdds feature requested in #8731.\r\n\r\n## Type of Change\r\n\r\nAddition of an integration to an LLM provider.\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8734/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8734/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8733",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8733/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8733/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8733/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8733",
        "id": 1980591366,
        "node_id": "PR_kwDOIWuq585exAcX",
        "number": 8733,
        "title": "[part 2] add multi-modal doc sections",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-07T05:45:04Z",
        "updated_at": "2023-11-07T05:59:09Z",
        "closed_at": "2023-11-07T05:59:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8733",
            "html_url": "https://github.com/run-llama/llama_index/pull/8733",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8733.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8733.patch",
            "merged_at": "2023-11-07T05:59:08Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8733/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8733/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8732",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8732/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8732/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8732/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8732",
        "id": 1980589847,
        "node_id": "PR_kwDOIWuq585exAHy",
        "number": 8732,
        "title": "[part 2] add multi-modal doc section",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-07T05:43:24Z",
        "updated_at": "2023-11-07T05:43:35Z",
        "closed_at": "2023-11-07T05:43:35Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8732",
            "html_url": "https://github.com/run-llama/llama_index/pull/8732",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8732.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8732.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8732/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8732/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8731",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8731/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8731/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8731/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8731",
        "id": 1980585441,
        "node_id": "I_kwDOIWuq5852DVXh",
        "number": 8731,
        "title": "[Feature Request]: Perplexity LLM Integration",
        "user": {
            "login": "vishhvak",
            "id": 30690855,
            "node_id": "MDQ6VXNlcjMwNjkwODU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/30690855?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vishhvak",
            "html_url": "https://github.com/vishhvak",
            "followers_url": "https://api.github.com/users/vishhvak/followers",
            "following_url": "https://api.github.com/users/vishhvak/following{/other_user}",
            "gists_url": "https://api.github.com/users/vishhvak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vishhvak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vishhvak/subscriptions",
            "organizations_url": "https://api.github.com/users/vishhvak/orgs",
            "repos_url": "https://api.github.com/users/vishhvak/repos",
            "events_url": "https://api.github.com/users/vishhvak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vishhvak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 6129428377,
                "node_id": "LA_kwDOIWuq588AAAABbVenmQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/request%20contribution%20board",
                "name": "request contribution board",
                "color": "D93F0B",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-07T05:38:50Z",
        "updated_at": "2023-11-15T04:55:13Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nThis is a feature request for implementing a Perplexity LLM class to use the perplexity api (https://docs.perplexity.ai/) \r\n\r\n\n\n### Reason\n\nThere is no current class for using the above API as an LLM within llama index pipeleines\n\n### Value of Feature\n\nAdds a way to use another suite of LLMs offered by perplexity.ai, with fast inference for mistral, llama2 based models, etc. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8731/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8731/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8730",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8730/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8730/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8730/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8730",
        "id": 1980578504,
        "node_id": "I_kwDOIWuq5852DTrI",
        "number": 8730,
        "title": "[Bug]: When es_filter returns no results, an exception will occur.",
        "user": {
            "login": "czhcc",
            "id": 4754730,
            "node_id": "MDQ6VXNlcjQ3NTQ3MzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4754730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/czhcc",
            "html_url": "https://github.com/czhcc",
            "followers_url": "https://api.github.com/users/czhcc/followers",
            "following_url": "https://api.github.com/users/czhcc/following{/other_user}",
            "gists_url": "https://api.github.com/users/czhcc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/czhcc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/czhcc/subscriptions",
            "organizations_url": "https://api.github.com/users/czhcc/orgs",
            "repos_url": "https://api.github.com/users/czhcc/repos",
            "events_url": "https://api.github.com/users/czhcc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/czhcc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-07T05:31:03Z",
        "updated_at": "2023-11-07T15:43:02Z",
        "closed_at": "2023-11-07T15:43:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nUse elasticsearch for vector storage, and use es_filter for retrieval during query. If there are no results, an exception will occur.\n\n### Version\n\n0.8.26\n\n### Steps to Reproduce\n\nvector_store_kwargs = {\r\n        \"es_filter\": [{\r\n            \"simple_query_string\": {\r\n                \"query\": \"exception\",\r\n                \"fields\": [\"content\"]\r\n            }\r\n        }],  \r\n    }\r\nWrite a string in the query field that will definitely not be retrieved\n\n### Relevant Logs/Tracbacks\n\n```shell\nFile \"D:\\myprog\\py.projects\\aigc.github\\llama_index-main\\llama_index\\indices\\query\\base.py\", line 31, in query\r\n    return self._query(str_or_query_bundle)\r\n  File \"D:\\myprog\\py.projects\\aigc.github\\llama_index-main\\llama_index\\query_engine\\retriever_query_engine.py\", line 176, in _query\r\n    nodes = self.retrieve(query_bundle)\r\n  File \"D:\\myprog\\py.projects\\aigc.github\\llama_index-main\\llama_index\\query_engine\\retriever_query_engine.py\", line 128, in retrieve\r\n    nodes = self._retriever.retrieve(query_bundle)\r\n  File \"D:\\myprog\\py.projects\\aigc.github\\llama_index-main\\llama_index\\indices\\base_retriever.py\", line 34, in retrieve\r\n    return self._retrieve(str_or_query_bundle)\r\n  File \"D:\\myprog\\py.projects\\aigc.github\\llama_index-main\\llama_index\\indices\\vector_store\\retrievers\\retriever.py\", line 87, in _retrieve\r\n    return self._get_nodes_with_embeddings(query_bundle)\r\n  File \"D:\\myprog\\py.projects\\aigc.github\\llama_index-main\\llama_index\\indices\\vector_store\\retrievers\\retriever.py\", line 164, in _get_nodes_with_embeddings\r\n    query_result = self._vector_store.query(query, **self._kwargs)\r\n  File \"D:\\myprog\\py.projects\\aigc.github\\llama_index-main\\llama_index\\vector_stores\\elasticsearch.py\", line 449, in query\r\n    return asyncio.get_event_loop().run_until_complete(\r\n  File \"D:\\tools\\Python310\\torch\\lib\\site-packages\\nest_asyncio.py\", line 99, in run_until_complete\r\n    return f.result()\r\n  File \"D:\\tools\\Python310\\lib\\asyncio\\futures.py\", line 201, in result\r\n    raise self._exception.with_traceback(self._exception_tb)\r\n  File \"D:\\tools\\Python310\\lib\\asyncio\\tasks.py\", line 232, in __step\r\n    result = coro.send(None)\r\n  File \"D:\\myprog\\py.projects\\aigc.github\\llama_index-main\\llama_index\\vector_stores\\elasticsearch.py\", line 573, in aquery\r\n    similarities=_to_llama_similarities(top_k_scores),\r\n  File \"D:\\myprog\\py.projects\\aigc.github\\llama_index-main\\llama_index\\vector_stores\\elasticsearch.py\", line 132, in _to_llama_similarities\r\n    return np.exp(scores_to_norm - np.max(scores_to_norm)).tolist()\r\n  File \"<__array_function__ internals>\", line 180, in amax\r\n  File \"D:\\tools\\Python310\\torch\\lib\\site-packages\\numpy\\core\\fromnumeric.py\", line 2793, in amax\r\n    return _wrapreduction(a, np.maximum, 'max', axis, None, out,\r\n  File \"D:\\tools\\Python310\\torch\\lib\\site-packages\\numpy\\core\\fromnumeric.py\", line 86, in _wrapreduction\r\n    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)\r\nValueError: zero-size array to reduction operation maximum which has no identity\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8730/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8730/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8729",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8729/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8729/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8729/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8729",
        "id": 1980541965,
        "node_id": "PR_kwDOIWuq585ew2Bg",
        "number": 8729,
        "title": "[version] v0.8.63.post2",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-07T04:50:42Z",
        "updated_at": "2023-11-07T04:57:05Z",
        "closed_at": "2023-11-07T04:57:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8729",
            "html_url": "https://github.com/run-llama/llama_index/pull/8729",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8729.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8729.patch",
            "merged_at": "2023-11-07T04:57:04Z"
        },
        "body": "# Description\r\n\r\nv0.8.63.post2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8729/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8729/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8728",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8728/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8728/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8728/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8728",
        "id": 1980538124,
        "node_id": "I_kwDOIWuq5852DJ0M",
        "number": 8728,
        "title": "[Feature Request]: ObjectIndex save",
        "user": {
            "login": "nick-youngblut",
            "id": 2468572,
            "node_id": "MDQ6VXNlcjI0Njg1NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2468572?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nick-youngblut",
            "html_url": "https://github.com/nick-youngblut",
            "followers_url": "https://api.github.com/users/nick-youngblut/followers",
            "following_url": "https://api.github.com/users/nick-youngblut/following{/other_user}",
            "gists_url": "https://api.github.com/users/nick-youngblut/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nick-youngblut/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nick-youngblut/subscriptions",
            "organizations_url": "https://api.github.com/users/nick-youngblut/orgs",
            "repos_url": "https://api.github.com/users/nick-youngblut/repos",
            "events_url": "https://api.github.com/users/nick-youngblut/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nick-youngblut/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-11-07T04:46:07Z",
        "updated_at": "2023-11-24T21:37:27Z",
        "closed_at": "2023-11-24T21:37:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nCreating an ObjectIndex of 100's of table schema objects (as in the [text-to-sql guide](https://docs.llamaindex.ai/en/stable/examples/index_structs/struct_indices/SQLIndexDemo.html#part-2-query-time-retrieval-of-tables-for-text-to-sql)), the process is quite slow. As far as I can tell, the resulting ObjectIndex object cannot be saved (or simply pickled). It would be helpful to be able to save this object to disk in order to obviate the need to continuously recreate the ObjectIndex object.\n\n### Reason\n\nCreating an ObjectIndex can be very slow for large sql databases with 100's of tables.\n\n### Value of Feature\n\nllama-index's text-to-sql workflow would be more scalable for databases with large schemas.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8728/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8728/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8727",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8727/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8727/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8727/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8727",
        "id": 1980506718,
        "node_id": "PR_kwDOIWuq585ewuXP",
        "number": 8727,
        "title": "Logan/version bump clip patch",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-07T04:12:35Z",
        "updated_at": "2023-11-07T04:12:46Z",
        "closed_at": "2023-11-07T04:12:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8727",
            "html_url": "https://github.com/run-llama/llama_index/pull/8727",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8727.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8727.patch",
            "merged_at": "2023-11-07T04:12:46Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8727/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8727/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8726",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8726/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8726/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8726/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8726",
        "id": 1980504248,
        "node_id": "PR_kwDOIWuq585ewt09",
        "number": 8726,
        "title": "remove clip from dependencies temporarily",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-07T04:09:47Z",
        "updated_at": "2023-11-07T04:09:56Z",
        "closed_at": "2023-11-07T04:09:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8726",
            "html_url": "https://github.com/run-llama/llama_index/pull/8726",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8726.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8726.patch",
            "merged_at": "2023-11-07T04:09:55Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8726/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8726/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8725",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8725/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8725/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8725/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8725",
        "id": 1980496387,
        "node_id": "PR_kwDOIWuq585ewsJt",
        "number": 8725,
        "title": "Bump OpenAI library version to >=0.1.0",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-07T03:59:32Z",
        "updated_at": "2023-11-07T04:47:43Z",
        "closed_at": "2023-11-07T04:47:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8725",
            "html_url": "https://github.com/run-llama/llama_index/pull/8725",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8725.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8725.patch",
            "merged_at": "2023-11-07T04:47:42Z"
        },
        "body": "# Description\r\n\r\nBump OpenAI library version to >=0.1.0\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8725/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8725/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8724",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8724/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8724/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8724/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8724",
        "id": 1980482731,
        "node_id": "PR_kwDOIWuq585ewpP0",
        "number": 8724,
        "title": "[version] bump to v0.8.63",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-07T03:41:56Z",
        "updated_at": "2023-11-07T03:47:56Z",
        "closed_at": "2023-11-07T03:47:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8724",
            "html_url": "https://github.com/run-llama/llama_index/pull/8724",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8724.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8724.patch",
            "merged_at": "2023-11-07T03:47:56Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8724/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8724/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8723",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8723/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8723/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8723/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8723",
        "id": 1980471490,
        "node_id": "PR_kwDOIWuq585ewm4k",
        "number": 8723,
        "title": "fix download_loader",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-07T03:26:32Z",
        "updated_at": "2023-11-07T03:35:09Z",
        "closed_at": "2023-11-07T03:35:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8723",
            "html_url": "https://github.com/run-llama/llama_index/pull/8723",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8723.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8723.patch",
            "merged_at": "2023-11-07T03:35:09Z"
        },
        "body": "`download_loader` should not convert the remote path to a `Path` object, it was converting `https://....` to `https:/...`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8723/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8723/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8722",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8722/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8722/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8722/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8722",
        "id": 1980432861,
        "node_id": "PR_kwDOIWuq585eweqH",
        "number": 8722,
        "title": "Feature/citation metadata",
        "user": {
            "login": "jordanparker6",
            "id": 29700471,
            "node_id": "MDQ6VXNlcjI5NzAwNDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29700471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordanparker6",
            "html_url": "https://github.com/jordanparker6",
            "followers_url": "https://api.github.com/users/jordanparker6/followers",
            "following_url": "https://api.github.com/users/jordanparker6/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordanparker6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordanparker6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordanparker6/subscriptions",
            "organizations_url": "https://api.github.com/users/jordanparker6/orgs",
            "repos_url": "https://api.github.com/users/jordanparker6/repos",
            "events_url": "https://api.github.com/users/jordanparker6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordanparker6/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-07T02:44:11Z",
        "updated_at": "2023-11-10T20:57:45Z",
        "closed_at": "2023-11-10T20:57:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8722",
            "html_url": "https://github.com/run-llama/llama_index/pull/8722",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8722.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8722.patch",
            "merged_at": "2023-11-10T20:57:45Z"
        },
        "body": "# Description\r\n\r\nAdding the ability to include metadata to the CitationQueryEngine.\r\n\r\nThis is needed as sometimes the response would refer to the source number in text outside of the context of a citation (e.g. \"According to Source 2, there is x [2]\"). By adding the option metadata, the user can decide if they want the metadata in the template for each source. This solved the above problem for my use case.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ X] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8722/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8722/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8721",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8721/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8721/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8721/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8721",
        "id": 1980414828,
        "node_id": "PR_kwDOIWuq585ewa6T",
        "number": 8721,
        "title": "Refactor openai agent",
        "user": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-07T02:22:55Z",
        "updated_at": "2023-11-07T08:08:53Z",
        "closed_at": "2023-11-07T08:08:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8721",
            "html_url": "https://github.com/run-llama/llama_index/pull/8721",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8721.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8721.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nWIP. Main files to look at\r\n- `llama_index/agent/openai_agent.py`\r\n- `llama_index/llms/base.py`\r\n- `llama_index/llms/openai_utils.py`\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8721/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8721/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8720",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8720/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8720/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8720/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8720",
        "id": 1980410557,
        "node_id": "I_kwDOIWuq5852Cqq9",
        "number": 8720,
        "title": "[Bug]: download_loader(\"WikipediaReader\") throws InvalidURL",
        "user": {
            "login": "jayh-aa",
            "id": 106310181,
            "node_id": "U_kgDOBlYqJQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/106310181?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jayh-aa",
            "html_url": "https://github.com/jayh-aa",
            "followers_url": "https://api.github.com/users/jayh-aa/followers",
            "following_url": "https://api.github.com/users/jayh-aa/following{/other_user}",
            "gists_url": "https://api.github.com/users/jayh-aa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jayh-aa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jayh-aa/subscriptions",
            "organizations_url": "https://api.github.com/users/jayh-aa/orgs",
            "repos_url": "https://api.github.com/users/jayh-aa/repos",
            "events_url": "https://api.github.com/users/jayh-aa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jayh-aa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-07T02:19:42Z",
        "updated_at": "2023-11-07T08:13:23Z",
        "closed_at": "2023-11-07T08:12:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nHi, am trying to make use of WikipediaReader to load data from a Wikipedia article. The following code results in an error:\r\n\r\nfrom llama_index import download_loader\r\nWikipediaReader = download_loader(\"WikipediaReader\")\r\n\r\nInvalidURL: Invalid URL 'https:\\\\raw.githubusercontent.com\\\\run-llama\\\\llama-hub\\\\main\\\\llama_hub/library.json': No host supplied\n\n### Version\n\n0.8.62\n\n### Steps to Reproduce\n\nfrom llama_index import download_loader\r\nWikipediaReader = download_loader(\"WikipediaReader\")\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8720/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8720/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8719",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8719/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8719/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8719/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8719",
        "id": 1980355267,
        "node_id": "PR_kwDOIWuq585ewOYN",
        "number": 8719,
        "title": "OpenAI GPT4v Abstraction",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-07T01:14:21Z",
        "updated_at": "2023-11-07T05:23:19Z",
        "closed_at": "2023-11-07T05:23:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8719",
            "html_url": "https://github.com/run-llama/llama_index/pull/8719",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8719.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8719.patch",
            "merged_at": "2023-11-07T05:23:19Z"
        },
        "body": "# Description\r\n\r\n1. OpenAI GPT4V MM LLM abstraction\r\n2. Showcase generate image reasoning from GPT4v for image urls\r\n\r\nTODO\r\nLocal image files reasoning. Test failed due to rate limit lol\r\n\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8719/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8719/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8718",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8718/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8718/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8718/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8718",
        "id": 1980309602,
        "node_id": "PR_kwDOIWuq585ewEps",
        "number": 8718,
        "title": "Fixing documentation mistyped word (aronund -> around)",
        "user": {
            "login": "aaronjimv",
            "id": 67152883,
            "node_id": "MDQ6VXNlcjY3MTUyODgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/67152883?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronjimv",
            "html_url": "https://github.com/aaronjimv",
            "followers_url": "https://api.github.com/users/aaronjimv/followers",
            "following_url": "https://api.github.com/users/aaronjimv/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronjimv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronjimv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronjimv/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronjimv/orgs",
            "repos_url": "https://api.github.com/users/aaronjimv/repos",
            "events_url": "https://api.github.com/users/aaronjimv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronjimv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-07T00:25:48Z",
        "updated_at": "2023-11-08T20:55:03Z",
        "closed_at": "2023-11-07T16:27:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8718",
            "html_url": "https://github.com/run-llama/llama_index/pull/8718",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8718.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8718.patch",
            "merged_at": "2023-11-07T16:27:37Z"
        },
        "body": "# Description\r\n\r\nThis PR fixing the documentation mistyped word: aronund -> around. Requested in #8461 \r\n\r\nFixes #8461 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] My changes generate no new warnings\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8718/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8718/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8717",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8717/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8717/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8717/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8717",
        "id": 1980289481,
        "node_id": "PR_kwDOIWuq585ewAWF",
        "number": 8717,
        "title": "[version] bump version to 0.8.62.post1",
        "user": {
            "login": "sourabhdesai",
            "id": 3005241,
            "node_id": "MDQ6VXNlcjMwMDUyNDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3005241?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sourabhdesai",
            "html_url": "https://github.com/sourabhdesai",
            "followers_url": "https://api.github.com/users/sourabhdesai/followers",
            "following_url": "https://api.github.com/users/sourabhdesai/following{/other_user}",
            "gists_url": "https://api.github.com/users/sourabhdesai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sourabhdesai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sourabhdesai/subscriptions",
            "organizations_url": "https://api.github.com/users/sourabhdesai/orgs",
            "repos_url": "https://api.github.com/users/sourabhdesai/repos",
            "events_url": "https://api.github.com/users/sourabhdesai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sourabhdesai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-07T00:02:05Z",
        "updated_at": "2023-11-07T00:34:07Z",
        "closed_at": "2023-11-07T00:29:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8717",
            "html_url": "https://github.com/run-llama/llama_index/pull/8717",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8717.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8717.patch",
            "merged_at": "2023-11-07T00:29:11Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8717/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8717/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8716",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8716/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8716/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8716/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8716",
        "id": 1980267115,
        "node_id": "PR_kwDOIWuq585ev7fQ",
        "number": 8716,
        "title": "[wip] add ai assistant agent",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T23:35:16Z",
        "updated_at": "2023-11-07T06:00:02Z",
        "closed_at": "2023-11-07T06:00:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8716",
            "html_url": "https://github.com/run-llama/llama_index/pull/8716",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8716.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8716.patch",
            "merged_at": null
        },
        "body": "still need to test, dependent on underlying abstraction changes",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8716/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8716/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8715",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8715/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8715/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8715/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8715",
        "id": 1980067519,
        "node_id": "PR_kwDOIWuq585evPQu",
        "number": 8715,
        "title": "GPT Builder notebook demo",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T21:12:17Z",
        "updated_at": "2023-11-06T21:23:08Z",
        "closed_at": "2023-11-06T21:23:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8715",
            "html_url": "https://github.com/run-llama/llama_index/pull/8715",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8715.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8715.patch",
            "merged_at": "2023-11-06T21:23:07Z"
        },
        "body": "haven't upgraded yet to OpenAI's new API's but f it ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8715/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8715/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8714",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8714/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8714/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8714/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8714",
        "id": 1980063745,
        "node_id": "PR_kwDOIWuq585evObg",
        "number": 8714,
        "title": "Added Lantern as vectorstore",
        "user": {
            "login": "var77",
            "id": 17221195,
            "node_id": "MDQ6VXNlcjE3MjIxMTk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/17221195?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/var77",
            "html_url": "https://github.com/var77",
            "followers_url": "https://api.github.com/users/var77/followers",
            "following_url": "https://api.github.com/users/var77/following{/other_user}",
            "gists_url": "https://api.github.com/users/var77/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/var77/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/var77/subscriptions",
            "organizations_url": "https://api.github.com/users/var77/orgs",
            "repos_url": "https://api.github.com/users/var77/repos",
            "events_url": "https://api.github.com/users/var77/events{/privacy}",
            "received_events_url": "https://api.github.com/users/var77/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T21:09:20Z",
        "updated_at": "2023-11-07T16:35:40Z",
        "closed_at": "2023-11-07T16:35:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8714",
            "html_url": "https://github.com/run-llama/llama_index/pull/8714",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8714.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8714.patch",
            "merged_at": "2023-11-07T16:35:39Z"
        },
        "body": "# Description\r\n\r\nAdded support for [Lantern](https://github.com/lanterndata/lantern) VectorStore. Lantern is a Postgres extension, so the implementation is very similar to the already existing implementation of pgvector with some additions.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI have run the integration tests under `tests/vector_stores/test_lantern.py` and also tested the example notebook.\r\n\r\n- [X] Added new unit/integration tests\r\n- [X] Added new notebook (that tests end-to-end)\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [X] I have made corresponding changes to the documentation\r\n- [X] I have added Google Colab support for the newly added notebooks.\r\n- [X] My changes generate no new warnings\r\n- [X] I have added tests that prove my fix is effective or that my feature works\r\n- [X] New and existing unit tests pass locally with my changes\r\n- [X] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8714/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8714/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8713",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8713/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8713/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8713/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8713",
        "id": 1980017658,
        "node_id": "PR_kwDOIWuq585evERq",
        "number": 8713,
        "title": "add new devday models",
        "user": {
            "login": "yisding",
            "id": 1209314,
            "node_id": "MDQ6VXNlcjEyMDkzMTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1209314?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yisding",
            "html_url": "https://github.com/yisding",
            "followers_url": "https://api.github.com/users/yisding/followers",
            "following_url": "https://api.github.com/users/yisding/following{/other_user}",
            "gists_url": "https://api.github.com/users/yisding/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yisding/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yisding/subscriptions",
            "organizations_url": "https://api.github.com/users/yisding/orgs",
            "repos_url": "https://api.github.com/users/yisding/repos",
            "events_url": "https://api.github.com/users/yisding/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yisding/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-06T20:37:21Z",
        "updated_at": "2023-11-06T20:48:37Z",
        "closed_at": "2023-11-06T20:48:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8713",
            "html_url": "https://github.com/run-llama/llama_index/pull/8713",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8713.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8713.patch",
            "merged_at": "2023-11-06T20:48:36Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [X] My changes generate no new warnings\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8713/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8713/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8712",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8712/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8712/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8712/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8712",
        "id": 1979967288,
        "node_id": "PR_kwDOIWuq585eu5Ky",
        "number": 8712,
        "title": "[WIP] support latest openai client",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T20:02:56Z",
        "updated_at": "2023-11-07T03:39:45Z",
        "closed_at": "2023-11-07T03:39:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8712",
            "html_url": "https://github.com/run-llama/llama_index/pull/8712",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8712.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8712.patch",
            "merged_at": "2023-11-07T03:39:44Z"
        },
        "body": "# TODO:\r\n\r\n- [x] fix streaming\r\n- [x] fix tests\r\n- [x] fix azure LLM\r\n- [x] fix azure Embeddings\r\n- [x] update azure docs\r\n- [x] ensure other LLMs that extend OpenAI or use OpenAI utils didn't break\r\n\r\n### Testing\r\n- [x] verify OpenAI LLM notebook\r\n- [x] verify OpenAI Agent notebook \r\n- [x] verify function calling works",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8712/reactions",
            "total_count": 4,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8712/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8711",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8711/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8711/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8711/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8711",
        "id": 1979959408,
        "node_id": "I_kwDOIWuq5852A8hw",
        "number": 8711,
        "title": "[Feature Request]: Support gpt-4 vision model for multimodal response",
        "user": {
            "login": "fcakyon",
            "id": 34196005,
            "node_id": "MDQ6VXNlcjM0MTk2MDA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/34196005?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fcakyon",
            "html_url": "https://github.com/fcakyon",
            "followers_url": "https://api.github.com/users/fcakyon/followers",
            "following_url": "https://api.github.com/users/fcakyon/following{/other_user}",
            "gists_url": "https://api.github.com/users/fcakyon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fcakyon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fcakyon/subscriptions",
            "organizations_url": "https://api.github.com/users/fcakyon/orgs",
            "repos_url": "https://api.github.com/users/fcakyon/repos",
            "events_url": "https://api.github.com/users/fcakyon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fcakyon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-06T19:57:32Z",
        "updated_at": "2023-11-07T22:32:39Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nGpt4 vision api is launched today. It can be utilized to generate responses from the nearest image and text chunks.\r\n\r\nHere is the gpt4 vision api docs: https://platform.openai.com/docs/guides/vision\r\n\r\n### Reason\r\n\r\nResponse synthesizer and openai wrapper class should be updated accordingly.\r\n\r\n### Value of Feature\r\n\r\nImage content adds a lot of value when generating a response.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8711/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8711/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8710",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8710/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8710/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8710/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8710",
        "id": 1979935829,
        "node_id": "I_kwDOIWuq5852A2xV",
        "number": 8710,
        "title": "[Feature Request]: Support for OpenAI gpt-3.5-turbo-1106 and gpt-4-1106-preview models",
        "user": {
            "login": "niels-bosman",
            "id": 25898715,
            "node_id": "MDQ6VXNlcjI1ODk4NzE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/25898715?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/niels-bosman",
            "html_url": "https://github.com/niels-bosman",
            "followers_url": "https://api.github.com/users/niels-bosman/followers",
            "following_url": "https://api.github.com/users/niels-bosman/following{/other_user}",
            "gists_url": "https://api.github.com/users/niels-bosman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/niels-bosman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/niels-bosman/subscriptions",
            "organizations_url": "https://api.github.com/users/niels-bosman/orgs",
            "repos_url": "https://api.github.com/users/niels-bosman/repos",
            "events_url": "https://api.github.com/users/niels-bosman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/niels-bosman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-06T19:42:41Z",
        "updated_at": "2023-11-07T15:05:37Z",
        "closed_at": "2023-11-07T15:05:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nAs of right now, these new models are not supported because they are not in the list of options for the OpenAI wrapper.\n\n### Reason\n\nThese models are the newest and will be very popular.\n\n### Value of Feature\n\nThis is going to be the new standards for ChatGPT models.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8710/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8710/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8709",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8709/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8709/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8709/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8709",
        "id": 1979730992,
        "node_id": "PR_kwDOIWuq585euEPX",
        "number": 8709,
        "title": "Multi Modal Vector Index",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-06T17:55:20Z",
        "updated_at": "2023-11-08T17:21:14Z",
        "closed_at": "2023-11-08T17:21:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8709",
            "html_url": "https://github.com/run-llama/llama_index/pull/8709",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8709.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8709.patch",
            "merged_at": "2023-11-08T17:21:13Z"
        },
        "body": "# Description\r\n\r\nCreate base MultiModal Vector Store index:\r\n1. normal text vector store which store text related nodes\r\n2. image vector store which stores image nodes with image embeddings\r\n\r\nTODO: MM retriever\r\nUsage:\r\n\r\n```\r\nfrom llama_index.indices.multi_modal.base import MultiModalVectorStoreIndex\r\nfrom llama_index.vector_stores import QdrantVectorStore\r\nfrom llama_index import SimpleDirectoryReader, StorageContext\r\n\r\nfrom qdrant_client import QdrantClient\r\n\r\n# Create a Qdrant vector store\r\nclient = client = QdrantClient(path=\"qdrant_image_db\")\r\n\r\ntext_store = QdrantVectorStore(client=client, collection_name=\"text_collection\")\r\nimage_store = QdrantVectorStore(client=client, collection_name=\"image_collection\")\r\nstorage_context = StorageContext.from_defaults(vector_store=text_store)\r\n\r\n# Create the index\r\ndocuments = SimpleDirectoryReader(\"./test_img_data\").load_data()\r\nindex = MultiModalVectorStoreIndex.from_documents(\r\n    documents, storage_context=storage_context, image_store=image_store\r\n)\r\n\r\n# Save it\r\nindex.storage_context.persist(persist_dir=\"./storage\")\r\n\r\n# Load it\r\nfrom llama_index import load_index_from_storage\r\n\r\nstorage_context = StorageContext.from_defaults(\r\n    vector_store=text_store, persist_dir=\"./storage\"\r\n)\r\nindex = load_index_from_storage(storage_context, image_store=image_store)\r\n\r\n```\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8709/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8709/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8708",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8708/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8708/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8708/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8708",
        "id": 1979706374,
        "node_id": "PR_kwDOIWuq585et-5y",
        "number": 8708,
        "title": "[version] bump version to 0.8.62",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-06T17:44:00Z",
        "updated_at": "2023-11-07T17:55:39Z",
        "closed_at": "2023-11-07T17:55:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8708",
            "html_url": "https://github.com/run-llama/llama_index/pull/8708",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8708.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8708.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nbump version to 0.8.62\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8708/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8708/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8707",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8707/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8707/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8707/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8707",
        "id": 1979679555,
        "node_id": "PR_kwDOIWuq585et45u",
        "number": 8707,
        "title": "Pin OpenAI version to <1 ",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-06T17:31:16Z",
        "updated_at": "2023-11-06T17:37:11Z",
        "closed_at": "2023-11-06T17:37:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8707",
            "html_url": "https://github.com/run-llama/llama_index/pull/8707",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8707.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8707.patch",
            "merged_at": "2023-11-06T17:37:10Z"
        },
        "body": "# Description\r\n\r\nPing OpenAI version to prevent breakage as we work to support the >=1 client. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8707/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8707/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8706",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8706/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8706/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8706/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8706",
        "id": 1979556943,
        "node_id": "PR_kwDOIWuq585etd6H",
        "number": 8706,
        "title": "Logan/query fusion func names",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-06T16:27:55Z",
        "updated_at": "2023-11-14T03:38:34Z",
        "closed_at": "2023-11-08T02:50:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8706",
            "html_url": "https://github.com/run-llama/llama_index/pull/8706",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8706.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8706.patch",
            "merged_at": null
        },
        "body": "Minor change to underlying function names + changelog for #8460",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8706/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8706/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8705",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8705/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8705/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8705/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8705",
        "id": 1979473961,
        "node_id": "PR_kwDOIWuq585etLts",
        "number": 8705,
        "title": "Add CLIP pkg as dependency into Poetry",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-06T15:47:42Z",
        "updated_at": "2023-11-06T17:57:15Z",
        "closed_at": "2023-11-06T17:57:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8705",
            "html_url": "https://github.com/run-llama/llama_index/pull/8705",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8705.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8705.patch",
            "merged_at": "2023-11-06T17:57:14Z"
        },
        "body": "# Description\r\n\r\nAdd CLIP as a optional dependency pkg\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8705/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8705/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8704",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8704/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8704/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8704/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8704",
        "id": 1979279099,
        "node_id": "PR_kwDOIWuq585esgzD",
        "number": 8704,
        "title": "Add JinaEmbedding class ",
        "user": {
            "login": "JoanFM",
            "id": 19825685,
            "node_id": "MDQ6VXNlcjE5ODI1Njg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/19825685?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JoanFM",
            "html_url": "https://github.com/JoanFM",
            "followers_url": "https://api.github.com/users/JoanFM/followers",
            "following_url": "https://api.github.com/users/JoanFM/following{/other_user}",
            "gists_url": "https://api.github.com/users/JoanFM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JoanFM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JoanFM/subscriptions",
            "organizations_url": "https://api.github.com/users/JoanFM/orgs",
            "repos_url": "https://api.github.com/users/JoanFM/repos",
            "events_url": "https://api.github.com/users/JoanFM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JoanFM/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-06T14:19:39Z",
        "updated_at": "2023-11-10T23:12:35Z",
        "closed_at": "2023-11-10T23:12:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8704",
            "html_url": "https://github.com/run-llama/llama_index/pull/8704",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8704.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8704.patch",
            "merged_at": "2023-11-10T23:12:35Z"
        },
        "body": "# Description\r\n\r\nThis PR adds JinaAIEmbedding class to allow users to obtain embeddings from Jina AI Embeddings API (https://jina.ai/embeddings/).\r\n\r\nI am hesitating now how to add Documentation about it and I would like to hear suggestions from the team. I see there is a notebook using Jina Embeddings from HuggingFace but the usage is very different, should I edit that one or create a new one?\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8704/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8704/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8703",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8703/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8703/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8703/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8703",
        "id": 1979247513,
        "node_id": "I_kwDOIWuq5851-OuZ",
        "number": 8703,
        "title": "[Feature Request]: Support Embeddings with openai_like",
        "user": {
            "login": "sfxworks",
            "id": 5921035,
            "node_id": "MDQ6VXNlcjU5MjEwMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5921035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sfxworks",
            "html_url": "https://github.com/sfxworks",
            "followers_url": "https://api.github.com/users/sfxworks/followers",
            "following_url": "https://api.github.com/users/sfxworks/following{/other_user}",
            "gists_url": "https://api.github.com/users/sfxworks/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sfxworks/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sfxworks/subscriptions",
            "organizations_url": "https://api.github.com/users/sfxworks/orgs",
            "repos_url": "https://api.github.com/users/sfxworks/repos",
            "events_url": "https://api.github.com/users/sfxworks/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sfxworks/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-06T14:09:55Z",
        "updated_at": "2023-11-07T17:41:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nBased on https://github.com/run-llama/llama_index/pull/8241#issuecomment-1791257718, it doesn't look like the new openai like class will support LocalAI's embedding feature https://localai.io/features/embeddings/\r\n\r\nI would absolutely love it if it could! \n\n### Reason\n\n_No response_\n\n### Value of Feature\n\nUtilizing remote gpus for embedding instead of the local cpu/gpu ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8703/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8703/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8701",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8701/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8701/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8701/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8701",
        "id": 1978786002,
        "node_id": "I_kwDOIWuq58518eDS",
        "number": 8701,
        "title": "[Bug]: ValueError: Failed to convert output to JSON when using custom LLM in Router QE",
        "user": {
            "login": "Kirushikesh",
            "id": 49152921,
            "node_id": "MDQ6VXNlcjQ5MTUyOTIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/49152921?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kirushikesh",
            "html_url": "https://github.com/Kirushikesh",
            "followers_url": "https://api.github.com/users/Kirushikesh/followers",
            "following_url": "https://api.github.com/users/Kirushikesh/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kirushikesh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kirushikesh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kirushikesh/subscriptions",
            "organizations_url": "https://api.github.com/users/Kirushikesh/orgs",
            "repos_url": "https://api.github.com/users/Kirushikesh/repos",
            "events_url": "https://api.github.com/users/Kirushikesh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kirushikesh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-11-06T10:22:21Z",
        "updated_at": "2023-11-09T16:14:08Z",
        "closed_at": "2023-11-07T16:01:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI was trying to build a QA engine on SQL Database and Unstructured text, since Llama-index provides the connectivity Huggingface LLMs. I went with using that, when performing the inference on a given query using RouterQueryEngine, i am getting **ValueError: Failed to convert output to JSON** regardless of the query. \n\n### Version\n\n0.8.49\n\n### Steps to Reproduce\n\nAttaching the code snippet:\r\n\r\n```\r\nimport torch\r\nfrom langchain.llms.base import LLM\r\nfrom llama_index import SimpleDirectoryReader, LangchainEmbedding, ListIndex\r\nfrom llama_index import LLMPredictor, ServiceContext\r\nfrom transformers import pipeline\r\nfrom typing import Optional, List, Mapping, Any\r\n\r\nmodel_name = \"gpt2\"\r\n\r\npipeline = pipeline(\"text-generation\", model=model_name)\r\nclass CustomLLM(LLM):\r\n    \r\n    def _call(self, prompt: str, stop: Optional[List[str]] = None) -> str:\r\n        prompt_length = len(prompt)\r\n        response = pipeline(prompt, max_new_tokens=256)[0][\"generated_text\"]\r\n\r\n        # only return newly generated tokens\r\n        return response[prompt_length:]\r\n\r\n    @property\r\n    def _identifying_params(self) -> Mapping[str, Any]:\r\n        return {\"name_of_model\": model_name}\r\n\r\n    @property\r\n    def _llm_type(self) -> str:\r\n        return \"custom\"\r\n\r\nimport torch\r\nfrom langchain.embeddings import HuggingFaceEmbeddings\r\nfrom llama_index import ServiceContext, set_global_service_context, LLMPredictor\r\nfrom llama_index.node_parser import SimpleNodeParser\r\n\r\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\r\nmodel_name = \"sentence-transformers/all-mpnet-base-v2\"\r\nmodel_kwargs = {'device': device}\r\nencode_kwargs = {'normalize_embeddings': False}\r\n\r\nembed_model = HuggingFaceEmbeddings(\r\n    model_name=model_name,\r\n    model_kwargs=model_kwargs,\r\n    encode_kwargs=encode_kwargs\r\n)\r\n\r\nnode_parser = SimpleNodeParser.from_defaults(chunk_size=200, chunk_overlap=20)\r\nllm_predictor = LLMPredictor(llm=CustomLLM())\r\nservice_context = ServiceContext.from_defaults(\r\n    llm_predictor=llm_predictor, \r\n    embed_model=embed_model,\r\n    node_parser=node_parser,\r\n    num_output=256\r\n)\r\nset_global_service_context(service_context)\r\n\r\n\r\nfrom sqlalchemy import create_engine\r\nfrom llama_index import SQLDatabase, ServiceContext\r\n\r\nengine = create_engine(\"sqlite:///./rag_data/swimmingdataset.db\")\r\nsql_database = SQLDatabase(engine)\r\nfrom llama_index.indices.struct_store.sql_query import NLSQLTableQueryEngine\r\n\r\nsql_query_engine = NLSQLTableQueryEngine(\r\n    sql_database=sql_database,\r\n    tables=[\"men_butterfly_50m\"]\r\n)\r\n\r\n\r\nfrom llama_index import VectorStoreIndex, SimpleDirectoryReader, ServiceContext\r\nfrom llama_index.llms import HuggingFaceLLM\r\nfrom llama_index.storage import StorageContext\r\n\r\ndata = SimpleDirectoryReader(\r\n    input_files=[\"./rag_data/swimmingdataset.txt\"]\r\n).load_data()\r\n\r\nstorage_context = StorageContext.from_defaults()\r\nindex = VectorStoreIndex.from_documents(\r\n    data\r\n)\r\n\r\n\r\nfrom llama_index.tools.query_engine import QueryEngineTool\r\n\r\nsql_tool = QueryEngineTool.from_defaults(\r\n    query_engine=sql_query_engine,\r\n    description=(\r\n        \"Useful for translating a natural language query into a SQL query over\"\r\n        \"Contains multiple tables of world records in men's and women's 50 and 100 meters butterfly style.\"\r\n    ),\r\n)\r\n\r\nvector_tool = QueryEngineTool.from_defaults(\r\n    query_engine=index.as_query_engine(),\r\n    description=\"Useful for answering questions based on the persons personal information and records\",\r\n)\r\n\r\n\r\nfrom llama_index.query_engine.router_query_engine import RouterQueryEngine\r\nfrom llama_index.selectors.llm_selectors import LLMSingleSelector\r\nfrom llama_index.selectors.pydantic_selectors import PydanticSingleSelector\r\n\r\nquery_engine = RouterQueryEngine(\r\n    selector=LLMSingleSelector.from_defaults(),\r\n    query_engine_tools=([sql_tool, vector_tool]),\r\n)\r\nquery_engine.query(\r\n    \"Tell me about the Ian Crocker and his 100 meters records\"\r\n)\r\n```\n\n### Relevant Logs/Tracbacks\n\n```shell\nSetting `pad_token_id` to `eos_token_id`:50256 for open-end generation.\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nCell In[11], line 1\r\n----> 1 query_engine.query(\r\n      2     \"Tell me about the Ian Crocker and his 100 meters records\"\r\n      3 )\r\n\r\nFile ~/.conda/envs/guardrails1/lib/python3.9/site-packages/llama_index/indices/query/base.py:23, in BaseQueryEngine.query(self, str_or_query_bundle)\r\n     21 if isinstance(str_or_query_bundle, str):\r\n     22     str_or_query_bundle = QueryBundle(str_or_query_bundle)\r\n---> 23 return self._query(str_or_query_bundle)\r\n\r\nFile ~/.conda/envs/guardrails1/lib/python3.9/site-packages/llama_index/query_engine/router_query_engine.py:146, in RouterQueryEngine._query(self, query_bundle)\r\n    142 def _query(self, query_bundle: QueryBundle) -> RESPONSE_TYPE:\r\n    143     with self.callback_manager.event(\r\n    144         CBEventType.QUERY, payload={EventPayload.QUERY_STR: query_bundle.query_str}\r\n    145     ) as query_event:\r\n--> 146         result = self._selector.select(self._metadatas, query_bundle)\r\n    148         if len(result.inds) > 1:\r\n    149             responses = []\r\n\r\nFile ~/.conda/envs/guardrails1/lib/python3.9/site-packages/llama_index/selectors/types.py:76, in BaseSelector.select(self, choices, query)\r\n     74 metadatas = [_wrap_choice(choice) for choice in choices]\r\n     75 query_bundle = _wrap_query(query)\r\n---> 76 return self._select(choices=metadatas, query=query_bundle)\r\n\r\nFile ~/.conda/envs/guardrails1/lib/python3.9/site-packages/llama_index/selectors/llm_selectors.py:100, in LLMSingleSelector._select(self, choices, query)\r\n     98 # parse output\r\n     99 assert self._prompt.output_parser is not None\r\n--> 100 parse = self._prompt.output_parser.parse(prediction)\r\n    101 return _structured_output_to_selector_result(parse)\r\n\r\nFile ~/.conda/envs/guardrails1/lib/python3.9/site-packages/llama_index/output_parsers/selection.py:95, in SelectionOutputParser.parse(self, output)\r\n     92     json_obj = [json_obj]\r\n     94 if not json_obj:\r\n---> 95     raise ValueError(f\"Failed to convert output to JSON: {output!r}\")\r\n     97 json_output = self._format_output(json_obj)\r\n     98 answers = [Answer.from_dict(json_dict) for json_dict in json_output]\r\n\r\nValueError: Failed to convert output to JSON: '\\n[\\n\\nName=\"Ian Crocker\"\\n\\nAlias=\"World record\">Ian Crocker</Alias>\\n\\nName=\"100 meters butterfly butterfly butterfly</Name>\\n\\nAlias=\"Migration\">Migration</Alias>\\n\\nName=\"Country\"\\n\\nAlias=\"Country\">France</Alias>\\n\\nName=\"Gender\"><insert gender for option>\">Gender</Insert>\\n\\nName=\"Country Code\"><insert country code for option>\"\\n\\n\\nThen create the JSON using the Java Runtime Environment\\n\\njar javac.jar /web/java\\n\\nOnce imported to the web browser, create a \"Connection\" field that should display http://localhost:9000 /localhost:9000-Migration\\n\\nWhen you create a new connection (or a connection from a custom website or app), all records would be added to the \"RefreshList\" with a new \"refresh\" and \"remove\" button:\\n\\n[\\n\\n{{\\n\\nPostName=\"Ian Crocker\"\\n\\nId=\"33\u2033\\n\\nTime=\"4\"\\n\\nDateFormat=\"http://localhost:9000/RefreshList/refresh list, and this will return the results as:\\n\\n{{postName}}\"\\n\\n}}'\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8701/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8701/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    }
]