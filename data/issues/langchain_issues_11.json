[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13635",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13635/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13635/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13635/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13635",
        "id": 2003734187,
        "node_id": "I_kwDOIPDwls53bo6r",
        "number": 13635,
        "title": "Chain Type Refine Error: 1 validation error for RefineDocumentsChain prompt  extra fields not permitted ",
        "user": {
            "login": "weissenbacherpwc",
            "id": 148848330,
            "node_id": "U_kgDOCN8-yg",
            "avatar_url": "https://avatars.githubusercontent.com/u/148848330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/weissenbacherpwc",
            "html_url": "https://github.com/weissenbacherpwc",
            "followers_url": "https://api.github.com/users/weissenbacherpwc/followers",
            "following_url": "https://api.github.com/users/weissenbacherpwc/following{/other_user}",
            "gists_url": "https://api.github.com/users/weissenbacherpwc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/weissenbacherpwc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/weissenbacherpwc/subscriptions",
            "organizations_url": "https://api.github.com/users/weissenbacherpwc/orgs",
            "repos_url": "https://api.github.com/users/weissenbacherpwc/repos",
            "events_url": "https://api.github.com/users/weissenbacherpwc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/weissenbacherpwc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-21T08:36:32Z",
        "updated_at": "2023-11-21T09:33:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain                 0.0.326 \r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```\r\nfrom langchain.chains import RetrievalQA\r\nfrom langchain.memory import ConversationBufferMemory\r\nfrom langchain.prompts import PromptTemplate\r\n\r\n# This text splitter is used to create the parent documents - The big chunks\r\nparent_splitter = RecursiveCharacterTextSplitter(chunk_size=2000, chunk_overlap=400)\r\n\r\n# This text splitter is used to create the child documents - The small chunks\r\n# It should create documents smaller than the parent\r\nchild_splitter = RecursiveCharacterTextSplitter(chunk_size=400)\r\n\r\n# The vectorstore to use to index the child chunks\r\nfrom chromadb.errors import InvalidDimensionException\r\ntry:\r\n    vectorstore = Chroma(collection_name=\"split_parents\", embedding_function=bge_embeddings, persist_directory=\"chroma_db\")\r\nexcept InvalidDimensionException:\r\n    Chroma().delete_collection()\r\n    vectorstore = Chroma(collection_name=\"split_parents\", embedding_function=bge_embeddings, persist_directory=\"chroma_db\")\r\n\r\n#vectorstore = Chroma(collection_name=\"split_parents\", embedding_function=bge_embeddings) \r\n\r\n# The storage layer for the parent documents\r\nstore = InMemoryStore()\r\n\r\nbig_chunks_retriever = ParentDocumentRetriever(\r\n    vectorstore=vectorstore,\r\n    docstore=store,\r\n    child_splitter=child_splitter,\r\n    parent_splitter=parent_splitter,\r\n)\r\n\r\nbig_chunks_retriever.add_documents(documents)\r\n\r\nqa_template = \"\"\"\r\nNutze die folgenden Informationen aus dem Kontext (getrennt mit <ctx></ctx>), um die Frage zu beantworten.\r\nAntworte nur auf Deutsch, weil der Nutzer kein Englisch versteht! \\\r\nFalls du die Antwort nicht wei\u00dft, antworte mit \"Leider fehlen mir dazu die Informationen.\" \\\r\nWenn du nicht gen\u00fcgend Informationen unten findest, antworte ebenfalls mit \"Leider fehlen mir dazu die Informationen.\" \\\r\n------\r\n<ctx>\r\n{context}\r\n</ctx>\r\n------\r\n{query}\r\nAnswer:\r\n\"\"\"\r\n\r\nprompt = PromptTemplate(template=qa_template,\r\n                            input_variables=['context','history', 'question'])\r\n\r\nchain_type_kwargs={\r\n        \"verbose\": True,\r\n        \"prompt\": prompt,\r\n        \"memory\": ConversationSummaryMemory(\r\n            llm=build_llm(),\r\n            memory_key=\"history\",\r\n            input_key=\"question\",\r\n            return_messages=True)}\r\n\r\nrefine = RetrievalQA.from_chain_type(llm=build_llm(),\r\n                                 chain_type=\"refine\",\r\n                                 return_source_documents=True,\r\n                                 chain_type_kwargs=chain_type_kwargs,\r\n                                 retriever=big_chunks_retriever,\r\n                                 verbose=True)\r\n\r\nquery = \"Hi, I am Max, can you help me??\"\r\nrefine(query)\r\n```\r\n\r\n### Expected behavior\r\n\r\nHi, \r\n\r\nin the code you see how I built my RAG model with the ParentDocumentRetriever from Langchain and with Memory. At the moment I am using the RetrievalQA-Chain with the default  `chain_type=\"stuff\"`. However I want to try different chain types like \"map_reduce\" or \"refine\". But when replacing `chain_type=\"refine\"` and creating the Retrieval QA chain, I get the following Error: \r\n```\r\nValidationError: 1 validation error for RefineDocumentsChain\r\nprompt\r\n  extra fields not permitted (type=value_error.extra)\r\n```\r\n\r\nHow can I solve this?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13635/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13635/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13634",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13634/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13634/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13634/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13634",
        "id": 2003391284,
        "node_id": "PR_kwDOIPDwls5f-Tf-",
        "number": 13634,
        "title": "iMessage loader: implement message content extraction from attributed\u2026",
        "user": {
            "login": "YaySushi",
            "id": 40970649,
            "node_id": "MDQ6VXNlcjQwOTcwNjQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/40970649?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YaySushi",
            "html_url": "https://github.com/YaySushi",
            "followers_url": "https://api.github.com/users/YaySushi/followers",
            "following_url": "https://api.github.com/users/YaySushi/following{/other_user}",
            "gists_url": "https://api.github.com/users/YaySushi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/YaySushi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YaySushi/subscriptions",
            "organizations_url": "https://api.github.com/users/YaySushi/orgs",
            "repos_url": "https://api.github.com/users/YaySushi/repos",
            "events_url": "https://api.github.com/users/YaySushi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/YaySushi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5463330795,
                "node_id": "LA_kwDOIPDwls8AAAABRaPP6w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20test",
                "name": "needs test",
                "color": "E99695",
                "default": false,
                "description": "PR needs to be updated with tests"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-21T03:34:19Z",
        "updated_at": "2023-11-28T20:45:44Z",
        "closed_at": "2023-11-28T20:45:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13634",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13634",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13634.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13634.patch",
            "merged_at": "2023-11-28T20:45:43Z"
        },
        "body": "  - **Description:** We are adding functionality to extract message content from the `attributedBody` field of the database, in case the content is not in the `text` field.\r\n  - **Issue:** Closes #13326 and #10680 \r\n  - **Dependencies:** None.\r\n  - **Tag maintainer:** @eyurtsev, @hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13634/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13634/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13633",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13633/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13633/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13633/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13633",
        "id": 2003326094,
        "node_id": "PR_kwDOIPDwls5f-Fs4",
        "number": 13633,
        "title": "remove openai api key from cookbook",
        "user": {
            "login": "gyliu513",
            "id": 4461983,
            "node_id": "MDQ6VXNlcjQ0NjE5ODM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4461983?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gyliu513",
            "html_url": "https://github.com/gyliu513",
            "followers_url": "https://api.github.com/users/gyliu513/followers",
            "following_url": "https://api.github.com/users/gyliu513/following{/other_user}",
            "gists_url": "https://api.github.com/users/gyliu513/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gyliu513/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gyliu513/subscriptions",
            "organizations_url": "https://api.github.com/users/gyliu513/orgs",
            "repos_url": "https://api.github.com/users/gyliu513/repos",
            "events_url": "https://api.github.com/users/gyliu513/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gyliu513/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-21T02:21:06Z",
        "updated_at": "2023-11-22T02:08:05Z",
        "closed_at": "2023-11-22T01:25:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13633",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13633",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13633.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13633.patch",
            "merged_at": "2023-11-22T01:25:06Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13633/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13633/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13632",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13632/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13632/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13632/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13632",
        "id": 2003278993,
        "node_id": "PR_kwDOIPDwls5f970u",
        "number": 13632,
        "title": "Lint for imports",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-21T01:22:35Z",
        "updated_at": "2023-11-24T08:44:24Z",
        "closed_at": "2023-11-22T01:42:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13632",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13632",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13632.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13632.patch",
            "merged_at": "2023-11-22T01:42:56Z"
        },
        "body": "- Adds pydantic/import linting to core\r\n- Adds a check for `langchain_experimental` imports to langchain",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13632/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13632/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13631",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13631/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13631/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13631/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13631",
        "id": 2003206976,
        "node_id": "I_kwDOIPDwls53ZoNA",
        "number": 13631,
        "title": "Langchain.schema.runnable now missing from docs?",
        "user": {
            "login": "muonmax",
            "id": 94480542,
            "node_id": "U_kgDOBaGong",
            "avatar_url": "https://avatars.githubusercontent.com/u/94480542?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/muonmax",
            "html_url": "https://github.com/muonmax",
            "followers_url": "https://api.github.com/users/muonmax/followers",
            "following_url": "https://api.github.com/users/muonmax/following{/other_user}",
            "gists_url": "https://api.github.com/users/muonmax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/muonmax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/muonmax/subscriptions",
            "organizations_url": "https://api.github.com/users/muonmax/orgs",
            "repos_url": "https://api.github.com/users/muonmax/repos",
            "events_url": "https://api.github.com/users/muonmax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/muonmax/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-20T23:53:15Z",
        "updated_at": "2023-11-24T14:21:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLanchain V: 0.339\n\n### Who can help?\n\n@hwchase17\r\n@agola11 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nFollowing any example that uses a `langchain.schema.runnable` object. For example the \"[Adding memory](https://python.langchain.com/docs/expression_language/cookbook/memory)\" tutorial uses `RunnableLambda` and `RunnablePassthrough`.\r\n\r\n- I no longer see `langchain.schema` in the API docs (see image below).\r\n- Searching in the API docs also doesn't return any results when searching for `RunnablePassthrough`\r\n<img width=\"363\" alt=\"image\" src=\"https://github.com/langchain-ai/langchain/assets/94480542/1b3ded17-c669-406d-8309-4f953f42c1f6\">\r\n\r\n\n\n### Expected behavior\n\n- I don't see anything in the release notes about the `langchain.schema.runnables` being removed or relocated.\r\n- I would have expected to see them in the API docs, or at least for them to still be returned when searching for them.\r\n- Not sure if this is a documentation build issue and the modules are still importable as I have not updated my Langchain version yet. I was just using the docs as a reference and then starting getting 404 errors upon page refresh (e.g. [this](https://api.python.langchain.com/en/latest/schema/langchain.schema.messages.AIMessageChunk.html#langchain.schema.messages.AIMessageChunk) page for `AIMessageChunk` also no longer exists)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13631/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13631/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13629",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13629/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13629/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13629/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13629",
        "id": 2003181541,
        "node_id": "PR_kwDOIPDwls5f9m55",
        "number": 13629,
        "title": "BUG fix anthropic models on bedrock",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T23:26:43Z",
        "updated_at": "2023-11-22T01:40:30Z",
        "closed_at": "2023-11-22T01:40:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13629",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13629",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13629.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13629.patch",
            "merged_at": "2023-11-22T01:40:29Z"
        },
        "body": "Introduced in #13403 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13629/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13629/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13628",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13628/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13628/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13628/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13628",
        "id": 2003171128,
        "node_id": "I_kwDOIPDwls53Zfc4",
        "number": 13628,
        "title": "Potential Bug in ConversationalRetrievalChain - TypeError: can only concatenate str (not \"CTransformers\") to str | TypeError: can only concatenate str (not \"AzureChatOpenAI\") to str",
        "user": {
            "login": "abgulati",
            "id": 20061663,
            "node_id": "MDQ6VXNlcjIwMDYxNjYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20061663?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abgulati",
            "html_url": "https://github.com/abgulati",
            "followers_url": "https://api.github.com/users/abgulati/followers",
            "following_url": "https://api.github.com/users/abgulati/following{/other_user}",
            "gists_url": "https://api.github.com/users/abgulati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abgulati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abgulati/subscriptions",
            "organizations_url": "https://api.github.com/users/abgulati/orgs",
            "repos_url": "https://api.github.com/users/abgulati/repos",
            "events_url": "https://api.github.com/users/abgulati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abgulati/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-20T23:14:44Z",
        "updated_at": "2023-11-30T06:34:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain Version: 0.0.339\r\nPython version: 3.10.8\r\nWindows 10 Enterprise 21H2\r\n\r\nWhen creating a ConversationalRetrievalChain as follows:\r\n\r\nCONVERSATION_RAG_CHAIN_WITH_SUMMARY_BUFFER = ConversationalRetrievalChain(\r\ncombine_docs_chain=combine_docs_chain,\r\nmemory=summary_memory,\r\nretriever=rag_retriever,\r\nquestion_generator=question_generator_chain\r\n)\r\n\r\nWith\r\nLLM = AzureChatOpenAI(...)\r\n\r\nThe following error occurs:\r\n\"\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\om403f\\AppData\\Local\\Programs\\Python\\Python310\\lib\\threading.py\", line 1016, in _bootstrap_inner\r\n    self.run()\r\n  File \"C:\\Users\\om403f\\AppData\\Local\\Programs\\Python\\Python310\\lib\\threading.py\", line 953, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"C:\\Users\\om403f\\Documents\\Applied_Research\\Deep_Learning\\web_app\\app.py\", line 1456, in llm_task\r\n    history_rag_buffer_result = CONVERSATION_RAG_CHAIN_WITH_SUMMARY_BUFFER.invoke({'question':user_query, 'chat_history':summary_memory})\r\n  File \"C:\\Users\\om403f\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\langchain\\chains\\base.py\", line 87, in invoke\r\n    return self(\r\n  File \"C:\\Users\\om403f\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\langchain\\chains\\base.py\", line 310, in __call__\r\n    raise e\r\n  File \"C:\\Users\\om403f\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\langchain\\chains\\base.py\", line 304, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"C:\\Users\\om403f\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\langchain\\chains\\conversational_retrieval\\base.py\", line 135, in _call\r\n    chat_history_str = get_chat_history(inputs[\"chat_history\"])\r\n  File \"C:\\Users\\om403f\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\langchain\\chains\\conversational_retrieval\\base.py\", line 44, in _get_chat_history\r\n    ai = \"Assistant: \" + dialogue_turn[1]\r\nTypeError: can only concatenate str (not \"AzureChatOpenAI\") to str\r\n\"\r\n\r\n\r\n\r\nAlternately, when using CTransformers as follows:\r\n\r\nLLM = CTransformers(model=llm_model, model_type=\"llama\", config=config, streaming=True, callbacks=[StreamingStdOutCallbackHandler()])\r\n\r\nThe following error occurs:\r\n\"\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\om403f\\AppData\\Local\\Programs\\Python\\Python310\\lib\\threading.py\", line 1016, in _bootstrap_inner\r\n    self.run()\r\n  File \"C:\\Users\\om403f\\AppData\\Local\\Programs\\Python\\Python310\\lib\\threading.py\", line 953, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"C:\\Users\\om403f\\Documents\\Applied_Research\\Deep_Learning\\web_app\\app.py\", line 1456, in llm_task\r\n    history_rag_buffer_result = CONVERSATION_RAG_CHAIN_WITH_SUMMARY_BUFFER.invoke({'question':user_query, 'chat_history':summary_memory})\r\n  File \"C:\\Users\\om403f\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\langchain\\chains\\base.py\", line 87, in invoke\r\n    return self(\r\n  File \"C:\\Users\\om403f\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\langchain\\chains\\base.py\", line 310, in __call__\r\n    raise e\r\n  File \"C:\\Users\\om403f\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\langchain\\chains\\base.py\", line 304, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"C:\\Users\\om403f\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\langchain\\chains\\conversational_retrieval\\base.py\", line 135, in _call\r\n    chat_history_str = get_chat_history(inputs[\"chat_history\"])\r\n  File \"C:\\Users\\om403f\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\langchain\\chains\\conversational_retrieval\\base.py\", line 44, in _get_chat_history\r\n    ai = \"Assistant: \" + dialogue_turn[1]\r\nTypeError: can only concatenate str (not \"CTransformers\") to str\r\n\"\r\n\r\nHope this is an accurate bug report and it helps! Apologies if this is in fact a dumb report and actually an error at my end.\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n@agola11\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\nfrom langchain.schema.vectorstore import VectorStoreRetriever\r\nfrom langchain.memory import ConversationSummaryBufferMemory\r\nfrom langchain.embeddings import HuggingFaceEmbeddings\r\nfrom langchain.prompts import PromptTemplate\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.chains import LLMChainn\r\nfrom langchain.chains import StuffDocumentsChain\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.llms import CTransformers\r\n\r\nVECTOR_STORE = Chroma(persist_directory=VECTORDB_SBERT_FOLDER, embedding_function=HuggingFaceEmbeddings())\r\n\r\nLLM = CTransformers(model=llm_model, model_type=\"llama\", config=config, streaming=True, callbacks=[StreamingStdOutCallbackHandler()])\r\n\r\ndocument_prompt = PromptTemplate(\r\n    input_variables=[\"page_content\"],\r\n    template=\"{page_content}\"\r\n)\r\n\r\ndocument_variable_name = \"context\"\r\n\r\ntemp_StuffDocumentsChain_prompt = PromptTemplate.from_template(\r\n    \"Summarize this content: {context}\"\r\n)\r\n\r\nllm_chain_for_StuffDocumentsChain = LLMChain(llm=LLM, prompt=temp_StuffDocumentsChain_prompt)\r\n\r\ncombine_docs_chain = StuffDocumentsChain(\r\n    llm_chain=llm_chain_for_StuffDocumentsChain,\r\n    document_prompt=document_prompt,\r\n    document_variable_name=document_variable_name\r\n)\r\n\r\nsummary_memory = ConversationSummaryBufferMemory(llm=LLM, max_token_limit=100)\r\n\r\nretriever=VECTOR_STORE.as_retriever()\r\n \r\nrag_retriever = VectorStoreRetriever(vectorstore=VECTOR_STORE)\r\n\r\ntemp_template = (\r\n    \"\"\"\r\n    Combine the chat history and qustion into a standalone question:\r\n    Chat history: {chat_history}\r\n    question: {user_query}\r\n    \"\"\"\r\n)\r\n\r\ntemp_prompt = PromptTemplate.from_template(temp_template)\r\n\r\nquestion_generator_chain = LLMChain(llm=LLM, prompt=temp_prompt)\r\n\r\nCONVERSATION_RAG_CHAIN_WITH_SUMMARY_BUFFER = ConversationalRetrievalChain(\r\n    combine_docs_chain=combine_docs_chain,\r\n    memory=summary_memory,\r\n    retriever=rag_retriever,\r\n    question_generator=question_generator_chain\r\n)\r\n\r\nCONVERSATION_RAG_CHAIN_WITH_SUMMARY_BUFFER.invoke({'question':user_query, 'chat_history':summary_memory})\r\n\r\n### Expected behavior\r\n\r\nShould work according to code example and API specs as described in the official LangChain API docs:\r\n\r\nhttps://api.python.langchain.com/en/latest/chains/langchain.chains.conversational_retrieval.base.ConversationalRetrievalChain.html#langchain.chains.conversational_retrieval.base.ConversationalRetrievalChain",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13628/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13628/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13627",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13627/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13627/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13627/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13627",
        "id": 2003135534,
        "node_id": "PR_kwDOIPDwls5f9cz7",
        "number": 13627,
        "title": "Core refac",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714144,
                "node_id": "LA_kwDOIPDwls8AAAABc3-roA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XXL",
                "name": "size:XXL",
                "color": "5319E7",
                "default": false,
                "description": "This PR changes 1000+ lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T22:41:30Z",
        "updated_at": "2023-11-21T16:35:31Z",
        "closed_at": "2023-11-21T16:35:30Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13627",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13627",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13627.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13627.patch",
            "merged_at": "2023-11-21T16:35:30Z"
        },
        "body": "proposed changes:\r\n- remove langchain_core/schema since no clear distinction b/n schema and non-schema modules\r\n- make every module that doesn't end in -y plural\r\n- where easy have 1-2 classes per file\r\n- no more than one level of nesting",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13627/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13627/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13626",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13626/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13626/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13626/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13626",
        "id": 2003131769,
        "node_id": "PR_kwDOIPDwls5f9b98",
        "number": 13626,
        "title": "chore: add serializer for tool message",
        "user": {
            "login": "tanujtiwari-at",
            "id": 133697024,
            "node_id": "U_kgDOB_gOAA",
            "avatar_url": "https://avatars.githubusercontent.com/u/133697024?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tanujtiwari-at",
            "html_url": "https://github.com/tanujtiwari-at",
            "followers_url": "https://api.github.com/users/tanujtiwari-at/followers",
            "following_url": "https://api.github.com/users/tanujtiwari-at/following{/other_user}",
            "gists_url": "https://api.github.com/users/tanujtiwari-at/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tanujtiwari-at/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tanujtiwari-at/subscriptions",
            "organizations_url": "https://api.github.com/users/tanujtiwari-at/orgs",
            "repos_url": "https://api.github.com/users/tanujtiwari-at/repos",
            "events_url": "https://api.github.com/users/tanujtiwari-at/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tanujtiwari-at/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T22:38:27Z",
        "updated_at": "2023-11-24T08:37:02Z",
        "closed_at": "2023-11-22T02:20:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13626",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13626",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13626.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13626.patch",
            "merged_at": "2023-11-22T02:20:58Z"
        },
        "body": "**Description:**  Currently, if we pass in a ToolMessage back to the chain, it crashes with error\r\n\r\n`Got unsupported message type: `\r\n\r\nThis fixes it. \r\n\r\nTested locally\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13626/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13626/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13625",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13625/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13625/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13625/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13625",
        "id": 2003109553,
        "node_id": "PR_kwDOIPDwls5f9XHa",
        "number": 13625,
        "title": "Add template for gpt-crawler",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714144,
                "node_id": "LA_kwDOIPDwls8AAAABc3-roA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XXL",
                "name": "size:XXL",
                "color": "5319E7",
                "default": false,
                "description": "This PR changes 1000+ lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T22:17:29Z",
        "updated_at": "2023-11-21T05:32:58Z",
        "closed_at": "2023-11-21T05:32:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13625",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13625",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13625.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13625.patch",
            "merged_at": "2023-11-21T05:32:57Z"
        },
        "body": "Template for RAG using [gpt-crawler](https://github.com/BuilderIO/gpt-crawler).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13625/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13625/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13624",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13624/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13624/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13624/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13624",
        "id": 2003033612,
        "node_id": "I_kwDOIPDwls53Y94M",
        "number": 13624,
        "title": "Potential Bug in Retriever.py: Can't instantiate abstract class BaseRetriever with abstract method _get_relevant_documents",
        "user": {
            "login": "abgulati",
            "id": 20061663,
            "node_id": "MDQ6VXNlcjIwMDYxNjYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20061663?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abgulati",
            "html_url": "https://github.com/abgulati",
            "followers_url": "https://api.github.com/users/abgulati/followers",
            "following_url": "https://api.github.com/users/abgulati/following{/other_user}",
            "gists_url": "https://api.github.com/users/abgulati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abgulati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abgulati/subscriptions",
            "organizations_url": "https://api.github.com/users/abgulati/orgs",
            "repos_url": "https://api.github.com/users/abgulati/repos",
            "events_url": "https://api.github.com/users/abgulati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abgulati/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-20T21:27:06Z",
        "updated_at": "2023-11-20T23:04:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain Version: 0.0.339\r\nPython version: 3.10.8\r\nWindows 10 Enterprise 21H2\r\n\r\nWhen creating a ConversationalRetrievalChain as follows:\r\n\r\nCONVERSATION_RAG_CHAIN_WITH_SUMMARY_BUFFER = ConversationalRetrievalChain(\r\n    combine_docs_chain=combine_docs_chain,\r\n    memory=summary_memory,\r\n    retriever=rag_retriever,\r\n    question_generator=question_generator_chain\r\n)\r\n\r\nWith rag_retriever = VectorStoreRetrieverMemory(retriever=VECTOR_STORE.as_retriever())\r\n\r\nThe following error occurs:\r\n\r\n\"\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\om403f\\AppData\\Local\\Programs\\Python\\Python310\\lib\\threading.py\", line 1016, in _bootstrap_inner\r\n    self.run()\r\n  File \"C:\\Users\\om403f\\AppData\\Local\\Programs\\Python\\Python310\\lib\\threading.py\", line 953, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"C:\\Users\\om403f\\Documents\\Applied_Research\\Deep_Learning\\web_app\\app.py\", line 1438, in llm_task\r\n    CONVERSATION_RAG_CHAIN_WITH_SUMMARY_BUFFER = ConversationalRetrievalChain(\r\n  File \"C:\\Users\\om403f\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\langchain\\load\\serializable.py\", line 97, in __init__\r\n    super().__init__(**kwargs)\r\n  File \"pydantic\\main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for ConversationalRetrievalChain\r\nretriever\r\n  Can't instantiate abstract class BaseRetriever with abstract method _get_relevant_documents (type=type_error)\r\n\"\r\n\r\nName mangling may be occurring as described here: https://stackoverflow.com/questions/31457855/cant-instantiate-abstract-class-with-abstract-methods\r\n\r\nretriever.py implements the abstract method _get_relevant_documents: https://github.com/langchain-ai/langchain/blob/4eec47b19128fa168e58b9a218a9da049275f6ce/libs/langchain/langchain/schema/retriever.py#L136\r\n\r\nHope this is an accurate bug report and it helps! Apologies if this is in fact a dumb report and actually an error at my end.\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nfrom langchain.memory import ConversationSummaryBufferMemory\r\nfrom langchain.memory import VectorStoreRetrieverMemory\r\nfrom langchain.prompts import PromptTemplate\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.chains import LLMChain\r\nfrom langchain.chains import RetrievalQA\r\nfrom langchain.chains import ConversationChain\r\nfrom langchain.chains import StuffDocumentsChain\r\nfrom langchain.chains import ConversationalRetrievalChain\r\n\r\nVECTOR_STORE = Chroma(persist_directory=VECTORDB_SBERT_FOLDER, embedding_function=HuggingFaceEmbeddings())\r\nLLM = AzureChatOpenAI()\r\n\r\ndocument_prompt = PromptTemplate(\r\n    input_variables=[\"page_content\"],\r\n    template=\"{page_content}\"\r\n)\r\n\r\ndocument_variable_name = \"context\"\r\n\r\ntemp_StuffDocumentsChain_prompt = PromptTemplate.from_template(\r\n    \"Summarize this content: {context}\"\r\n)\r\n\r\nllm_chain_for_StuffDocumentsChain = LLMChain(llm=LLM, prompt=temp_StuffDocumentsChain_prompt)\r\n\r\ncombine_docs_chain = StuffDocumentsChain(\r\n    llm_chain=llm_chain_for_StuffDocumentsChain,\r\n    document_prompt=document_prompt,\r\n    document_variable_name=document_variable_name\r\n)\r\n\r\nsummary_memory = ConversationSummaryBufferMemory(llm=LLM, max_token_limit=100)\r\n\r\nretriever=VECTOR_STORE.as_retriever()\r\n\r\nrag_retriever = VectorStoreRetrieverMemory(retriever=retriever)\r\n\r\ntemp_template = (\r\n    \"\"\"\r\n    Combine the chat history and qustion into a standalone question:\r\n    Chat history: {chat_history}\r\n    question: {user_query}\r\n    \"\"\"\r\n)\r\n\r\ntemp_prompt = PromptTemplate.from_template(temp_template)\r\n\r\nquestion_generator_chain = LLMChain(llm=LLM, prompt=temp_prompt)\r\n\r\nCONVERSATION_RAG_CHAIN_WITH_SUMMARY_BUFFER = ConversationalRetrievalChain(\r\n    combine_docs_chain=combine_docs_chain,\r\n    memory=summary_memory,\r\n    retriever=rag_retriever,\r\n    question_generator=question_generator_chain\r\n)\r\n\r\n### Expected behavior\r\n\r\nExample code here works: https://api.python.langchain.com/en/latest/chains/langchain.chains.conversational_retrieval.base.ConversationalRetrievalChain.html#langchain.chains.conversational_retrieval.base.ConversationalRetrievalChain",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13624/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13624/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13623",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13623/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13623/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13623/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13623",
        "id": 2003024134,
        "node_id": "PR_kwDOIPDwls5f9EM0",
        "number": 13623,
        "title": "Add core as dep",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T21:19:49Z",
        "updated_at": "2023-11-20T22:38:11Z",
        "closed_at": "2023-11-20T22:38:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13623",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13623",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13623.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13623.patch",
            "merged_at": "2023-11-20T22:38:10Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13623/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13623/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13622",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13622/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13622/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13622/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13622",
        "id": 2003012832,
        "node_id": "I_kwDOIPDwls53Y4zg",
        "number": 13622,
        "title": "Configurable timeout for Ollama",
        "user": {
            "login": "shreyaskarnik",
            "id": 311217,
            "node_id": "MDQ6VXNlcjMxMTIxNw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/311217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shreyaskarnik",
            "html_url": "https://github.com/shreyaskarnik",
            "followers_url": "https://api.github.com/users/shreyaskarnik/followers",
            "following_url": "https://api.github.com/users/shreyaskarnik/following{/other_user}",
            "gists_url": "https://api.github.com/users/shreyaskarnik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shreyaskarnik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shreyaskarnik/subscriptions",
            "organizations_url": "https://api.github.com/users/shreyaskarnik/orgs",
            "repos_url": "https://api.github.com/users/shreyaskarnik/repos",
            "events_url": "https://api.github.com/users/shreyaskarnik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shreyaskarnik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-20T21:10:54Z",
        "updated_at": "2023-11-20T21:36:40Z",
        "closed_at": "2023-11-20T21:36:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI have been using Ollama with Langchain for various tasks, but sometimes Ollama takes too long to respond depending on my local hardware. Is it possible to add a configurable timeout to the Ollama base class so that I can adjust this setting to avoid timeouts when using agents. Currently, I am getting a `httpx` timeout error when using Ollama. \n\n### Motivation\n\nThis feature will help to leverage local LLMs on a variety of hardware and let's experiment and build with local LLMs before using any third party APIs.\n\n### Your contribution\n\nIf this is something that would be considered as a feature I am happy to add in a PR for this feature. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13622/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13622/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13621",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13621/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13621/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13621/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13621",
        "id": 2003001897,
        "node_id": "PR_kwDOIPDwls5f8_XI",
        "number": 13621,
        "title": "Add Databricks Vector Search as a new vector store",
        "user": {
            "login": "freemso",
            "id": 10937540,
            "node_id": "MDQ6VXNlcjEwOTM3NTQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/10937540?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freemso",
            "html_url": "https://github.com/freemso",
            "followers_url": "https://api.github.com/users/freemso/followers",
            "following_url": "https://api.github.com/users/freemso/following{/other_user}",
            "gists_url": "https://api.github.com/users/freemso/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freemso/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freemso/subscriptions",
            "organizations_url": "https://api.github.com/users/freemso/orgs",
            "repos_url": "https://api.github.com/users/freemso/repos",
            "events_url": "https://api.github.com/users/freemso/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freemso/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714144,
                "node_id": "LA_kwDOIPDwls8AAAABc3-roA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XXL",
                "name": "size:XXL",
                "color": "5319E7",
                "default": false,
                "description": "This PR changes 1000+ lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T21:02:33Z",
        "updated_at": "2023-11-27T19:07:27Z",
        "closed_at": "2023-11-27T19:07:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13621",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13621",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13621.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13621.patch",
            "merged_at": "2023-11-27T19:07:26Z"
        },
        "body": "**Description:**\r\nThis PR adds Databricks Vector Search as a new vector store in LangChain.\r\n\r\n- [x] Add `DatabricksVectorSearch` in `langchain/vectorstores/`\r\n- [x] Unit tests\r\n- [x] Add [`databricks-vectorsearch`](https://pypi.org/project/databricks-vectorsearch/) as a new optional dependency\r\n\r\nWe ran the following checks:\r\n- `make format` passed \u2705 \r\n- `make lint` failed but the failures were caused by other files\r\n    + Files touched by this PR passed the linter \u2705 \r\n- `make test` passed \u2705 \r\n- `make coverage` failed but the failures were caused by other files. Tests added by or related to this PR all passed\r\n    + langchain/vectorstores/databricks_vector_search.py test coverage 94% \u2705 \r\n- `make spell_check` passed \u2705 \r\n\r\nThe example notebook and updates to the [provider's documentation page](https://github.com/langchain-ai/langchain/blob/master/docs/docs/integrations/providers/databricks.md) will be added later in a separate PR.\r\n\r\n**Dependencies:**\r\nOptional dependency: [`databricks-vectorsearch`](https://pypi.org/project/databricks-vectorsearch/)\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13621/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13621/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13620",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13620/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13620/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13620/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13620",
        "id": 2002993811,
        "node_id": "PR_kwDOIPDwls5f89lI",
        "number": 13620,
        "title": "VoyageEmbeddings embed_general_texts",
        "user": {
            "login": "thomas0809",
            "id": 11373553,
            "node_id": "MDQ6VXNlcjExMzczNTUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/11373553?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thomas0809",
            "html_url": "https://github.com/thomas0809",
            "followers_url": "https://api.github.com/users/thomas0809/followers",
            "following_url": "https://api.github.com/users/thomas0809/following{/other_user}",
            "gists_url": "https://api.github.com/users/thomas0809/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thomas0809/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thomas0809/subscriptions",
            "organizations_url": "https://api.github.com/users/thomas0809/orgs",
            "repos_url": "https://api.github.com/users/thomas0809/repos",
            "events_url": "https://api.github.com/users/thomas0809/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thomas0809/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T20:57:10Z",
        "updated_at": "2023-11-22T02:33:07Z",
        "closed_at": "2023-11-22T02:33:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13620",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13620",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13620.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13620.patch",
            "merged_at": "2023-11-22T02:33:07Z"
        },
        "body": "  - **Description:** add method  embed_general_texts in VoyageEmebddings to support input_type\r\n  - **Issue:** \r\n  - **Dependencies:** \r\n  - **Tag maintainer:** \r\n  - **Twitter handle:** @Voyage_AI_\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13620/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13620/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13619",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13619/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13619/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13619/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13619",
        "id": 2002954666,
        "node_id": "PR_kwDOIPDwls5f81Bz",
        "number": 13619,
        "title": "feat: implement max marginal relevance for momento vector index",
        "user": {
            "login": "malandis",
            "id": 3690240,
            "node_id": "MDQ6VXNlcjM2OTAyNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3690240?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malandis",
            "html_url": "https://github.com/malandis",
            "followers_url": "https://api.github.com/users/malandis/followers",
            "following_url": "https://api.github.com/users/malandis/following{/other_user}",
            "gists_url": "https://api.github.com/users/malandis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malandis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malandis/subscriptions",
            "organizations_url": "https://api.github.com/users/malandis/orgs",
            "repos_url": "https://api.github.com/users/malandis/repos",
            "events_url": "https://api.github.com/users/malandis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malandis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-20T20:28:37Z",
        "updated_at": "2023-12-05T00:50:23Z",
        "closed_at": "2023-12-05T00:50:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13619",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13619",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13619.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13619.patch",
            "merged_at": "2023-12-05T00:50:23Z"
        },
        "body": "**Description**\r\n\r\nImplements `max_marginal_relevance_search` and `max_marginal_relevance_search_by_vector` for the Momento Vector Index vectorstore.\r\n\r\nAdditionally bumps the `momento` dependency in the lock file and adds logging to the implementation.\r\n\r\n**Dependencies**\r\n\r\n\u2705 updates `momento` dependency in lock file\r\n\r\n**Tag maintainer**\r\n\r\n@baskaryan \r\n\r\n**Twitter handle**\r\n\r\nPlease tag @momentohq for Momento Vector Index and @mloml for the contribution \ud83d\ude47 \r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13619/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13619/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13618",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13618/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13618/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13618/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13618",
        "id": 2002892506,
        "node_id": "PR_kwDOIPDwls5f8nMy",
        "number": 13618,
        "title": "office365 toolkit bug fixes",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T19:53:31Z",
        "updated_at": "2023-11-28T17:10:06Z",
        "closed_at": "2023-11-28T16:49:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13618",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13618",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13618.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13618.patch",
            "merged_at": "2023-11-28T16:49:25Z"
        },
        "body": "Several bug fixes:\r\n- emails: instead of `bcc` the `cc` is used.\r\n- errors in the truncation descriptions\r\n- no truncation of the `message_search`\r\nSeveral updates:\r\n- generalized UTC format \r\n- truncation limit can be changed now in _call()",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13618/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13618/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13617",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13617/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13617/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13617/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13617",
        "id": 2002864501,
        "node_id": "I_kwDOIPDwls53YUl1",
        "number": 13617,
        "title": "Issue: `pgvector` versions in `poetry.lock` are really old",
        "user": {
            "login": "orestxherija",
            "id": 9495340,
            "node_id": "MDQ6VXNlcjk0OTUzNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9495340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orestxherija",
            "html_url": "https://github.com/orestxherija",
            "followers_url": "https://api.github.com/users/orestxherija/followers",
            "following_url": "https://api.github.com/users/orestxherija/following{/other_user}",
            "gists_url": "https://api.github.com/users/orestxherija/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orestxherija/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orestxherija/subscriptions",
            "organizations_url": "https://api.github.com/users/orestxherija/orgs",
            "repos_url": "https://api.github.com/users/orestxherija/repos",
            "events_url": "https://api.github.com/users/orestxherija/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orestxherija/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-20T19:32:27Z",
        "updated_at": "2023-12-09T13:20:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nThe compatible versions for library `pgvector` listed in `poetry.lock` are really old: `\"pgvector (>=0.1.6,<0.2.0)\"`.\r\n\r\nAre we able to update them to more recent ones?\n\n### Suggestion:\n\nUpdate versions to recent ones.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13617/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13617/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13616",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13616/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13616/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13616/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13616",
        "id": 2002720506,
        "node_id": "PR_kwDOIPDwls5f8Bjx",
        "number": 13616,
        "title": "BookendAI Embeddings",
        "user": {
            "login": "stvhu-bookend",
            "id": 142813359,
            "node_id": "U_kgDOCIMorw",
            "avatar_url": "https://avatars.githubusercontent.com/u/142813359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stvhu-bookend",
            "html_url": "https://github.com/stvhu-bookend",
            "followers_url": "https://api.github.com/users/stvhu-bookend/followers",
            "following_url": "https://api.github.com/users/stvhu-bookend/following{/other_user}",
            "gists_url": "https://api.github.com/users/stvhu-bookend/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stvhu-bookend/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stvhu-bookend/subscriptions",
            "organizations_url": "https://api.github.com/users/stvhu-bookend/orgs",
            "repos_url": "https://api.github.com/users/stvhu-bookend/repos",
            "events_url": "https://api.github.com/users/stvhu-bookend/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stvhu-bookend/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-20T17:57:18Z",
        "updated_at": "2023-12-05T00:53:29Z",
        "closed_at": "2023-12-05T00:53:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13616",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13616",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13616.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13616.patch",
            "merged_at": "2023-12-05T00:53:29Z"
        },
        "body": "  - **Description:** https://bookend.ai/ langchain embeddings integration \r\n  - **Dependencies:** n/a (just using `requests`)\r\n  - **Tag maintainer:** stvhu-bookend \r\n  - **Twitter handle:** https://twitter.com/bookendai",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13616/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13616/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13615",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13615/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13615/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13615/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13615",
        "id": 2002714056,
        "node_id": "PR_kwDOIPDwls5f8AI0",
        "number": 13615,
        "title": "DOCS: update rag use case images",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T17:52:41Z",
        "updated_at": "2023-11-20T18:14:54Z",
        "closed_at": "2023-11-20T18:14:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13615",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13615",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13615.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13615.patch",
            "merged_at": "2023-11-20T18:14:53Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13615/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13615/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13614",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13614/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13614/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13614/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13614",
        "id": 2002707045,
        "node_id": "PR_kwDOIPDwls5f7-mQ",
        "number": 13614,
        "title": "Rag redis template dependency update",
        "user": {
            "login": "tylerhutcherson",
            "id": 20304844,
            "node_id": "MDQ6VXNlcjIwMzA0ODQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/20304844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tylerhutcherson",
            "html_url": "https://github.com/tylerhutcherson",
            "followers_url": "https://api.github.com/users/tylerhutcherson/followers",
            "following_url": "https://api.github.com/users/tylerhutcherson/following{/other_user}",
            "gists_url": "https://api.github.com/users/tylerhutcherson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tylerhutcherson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tylerhutcherson/subscriptions",
            "organizations_url": "https://api.github.com/users/tylerhutcherson/orgs",
            "repos_url": "https://api.github.com/users/tylerhutcherson/repos",
            "events_url": "https://api.github.com/users/tylerhutcherson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tylerhutcherson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5955630415,
                "node_id": "LA_kwDOIPDwls8AAAABYvu1Tw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20redis",
                "name": "integration: redis",
                "color": "F9D0C4",
                "default": false,
                "description": "Any integration that uses Redis"
            },
            {
                "id": 6154420538,
                "node_id": "LA_kwDOIPDwls8AAAABbtUBOg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/template",
                "name": "template",
                "color": "145FB1",
                "default": false,
                "description": ""
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T17:47:33Z",
        "updated_at": "2023-12-01T14:50:26Z",
        "closed_at": "2023-11-30T20:22:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13614",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13614",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13614.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13614.patch",
            "merged_at": "2023-11-30T20:22:13Z"
        },
        "body": "\r\n  - **Description:** Update RAG Redis template readme and dependencies.\r\n  - **Tag maintainer:** @efriis @baskaryan \r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13614/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13614/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13613",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13613/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13613/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13613/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13613",
        "id": 2002703327,
        "node_id": "PR_kwDOIPDwls5f79yD",
        "number": 13613,
        "title": "bump 339",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T17:45:02Z",
        "updated_at": "2023-11-20T17:56:44Z",
        "closed_at": "2023-11-20T17:56:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13613",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13613",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13613.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13613.patch",
            "merged_at": "2023-11-20T17:56:43Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13613/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13613/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13612",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13612/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13612/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13612/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13612",
        "id": 2002664790,
        "node_id": "PR_kwDOIPDwls5f71dq",
        "number": 13612,
        "title": "standardise metadata_field handling",
        "user": {
            "login": "anderson2805",
            "id": 7627118,
            "node_id": "MDQ6VXNlcjc2MjcxMTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7627118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anderson2805",
            "html_url": "https://github.com/anderson2805",
            "followers_url": "https://api.github.com/users/anderson2805/followers",
            "following_url": "https://api.github.com/users/anderson2805/following{/other_user}",
            "gists_url": "https://api.github.com/users/anderson2805/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anderson2805/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anderson2805/subscriptions",
            "organizations_url": "https://api.github.com/users/anderson2805/orgs",
            "repos_url": "https://api.github.com/users/anderson2805/repos",
            "events_url": "https://api.github.com/users/anderson2805/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anderson2805/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6077048506,
                "node_id": "LA_kwDOIPDwls8AAAABajhmug",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20elasticsearch",
                "name": "integration: elasticsearch",
                "color": "DAB5EC",
                "default": false,
                "description": "Related to elastic/elasticsearch integrations"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T17:18:34Z",
        "updated_at": "2023-11-28T08:51:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13612",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13612",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13612.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13612.patch",
            "merged_at": null
        },
        "body": " - **Description:** updated func max_marginal_relevance_search handling of metadata_field to be same as similarity_search_with_score. Allow flatten Opensearch mapping, where meta fields are not nested into any field.\r\n - **Issue:** #10524\r\n - **Maintainer:** @hwchase17, @baskaryan",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13612/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13612/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13611",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13611/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13611/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13611/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13611",
        "id": 2002541905,
        "node_id": "I_kwDOIPDwls53XF1R",
        "number": 13611,
        "title": "ValueError: Redis failed to connect:",
        "user": {
            "login": "abusufyanvu",
            "id": 76678681,
            "node_id": "MDQ6VXNlcjc2Njc4Njgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/76678681?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abusufyanvu",
            "html_url": "https://github.com/abusufyanvu",
            "followers_url": "https://api.github.com/users/abusufyanvu/followers",
            "following_url": "https://api.github.com/users/abusufyanvu/following{/other_user}",
            "gists_url": "https://api.github.com/users/abusufyanvu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abusufyanvu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abusufyanvu/subscriptions",
            "organizations_url": "https://api.github.com/users/abusufyanvu/orgs",
            "repos_url": "https://api.github.com/users/abusufyanvu/repos",
            "events_url": "https://api.github.com/users/abusufyanvu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abusufyanvu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5955630415,
                "node_id": "LA_kwDOIPDwls8AAAABYvu1Tw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20redis",
                "name": "integration: redis",
                "color": "F9D0C4",
                "default": false,
                "description": "Any integration that uses Redis"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T16:10:48Z",
        "updated_at": "2023-11-20T16:17:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n\r\n\r\n# Create and load Redis with documents\r\nvectorstore = RedisVectorStore.from_texts(\r\n    texts=texts,\r\n    metadatas=metadatas,\r\n    embedding=embedding,\r\n    index_name=index_name,\r\n    redis_url=redis_url\r\n)\r\n\r\n\r\nThe error i faced\r\nRedis cannot be used as a vector database without RediSearch >=2.4Please head to https://redis.io/docs/stack/search/quick_start/to know more about installing the RediSearch module within Redis Stack.\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n.\n\n### Expected behavior\n\n.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13611/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13611/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13610",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13610/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13610/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13610/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13610",
        "id": 2002454320,
        "node_id": "I_kwDOIPDwls53Wwcw",
        "number": 13610,
        "title": "Type Checking issue: CacheBackedEmbeddings.split_documents does not take a list of Documents",
        "user": {
            "login": "xcelerant",
            "id": 143944168,
            "node_id": "U_kgDOCJRp6A",
            "avatar_url": "https://avatars.githubusercontent.com/u/143944168?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xcelerant",
            "html_url": "https://github.com/xcelerant",
            "followers_url": "https://api.github.com/users/xcelerant/followers",
            "following_url": "https://api.github.com/users/xcelerant/following{/other_user}",
            "gists_url": "https://api.github.com/users/xcelerant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xcelerant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xcelerant/subscriptions",
            "organizations_url": "https://api.github.com/users/xcelerant/orgs",
            "repos_url": "https://api.github.com/users/xcelerant/repos",
            "events_url": "https://api.github.com/users/xcelerant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xcelerant/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T15:27:25Z",
        "updated_at": "2023-11-20T15:34:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI encountered an exception and a type checking notice in PyCharm while working with the following code snippet:\r\n\r\n```\r\nsplit_documents = text_splitter.split_documents(raw_documents)\r\ncached_embedder.embed_documents(**split_documents**)\r\n```\r\n\r\nThe type checking notice indicates that there is a mismatch in the expected type for a Document. According to the type definition, a Document should have properties such as page_content, type, and metadata. However, the function embed_documents seems to be designed to handle a list of strings instead of documents.\r\n\r\nTo align with the expected type for a Document, it is suggested to consider renaming the function from embed_documents to something like embed_strings or embed_texts. This change would accurately reflect the input type expected by the function and help avoid type-related issues during development.\r\n\r\nThank you for your attention to this matter.\r\n\r\n\r\n```\r\n    cached_embedder.embed_documents(split_documents)\r\n...\r\n  File \"venv/lib/python3.11/site-packages/langchain/embeddings/cache.py\", line 26, in _hash_string_to_uuid\r\n    hash_value = hashlib.sha1(input_string.encode(\"utf-8\")).hexdigest()\r\n                              ^^^^^^^^^^^^^^^^^^^\r\nAttributeError: 'Document' object has no attribute 'encode'\r\n```\r\n\r\n\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nloader = DirectoryLoader(\r\n    \"./data\",\r\n    glob=\"**/*.md\",\r\n    show_progress=True,\r\n    use_multithreading=True,\r\n    loader_cls=UnstructuredMarkdownLoader,\r\n    loader_kwargs={\"mode\": \"elements\"},\r\n)\r\nraw_documents = loader.load()\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\nsplit_documents = text_splitter.split_documents(raw_documents)\r\ncached_embedder.embed_documents(split_documents)\n\n### Expected behavior\n\nmethod should either accept a list of Documents or be renamed to embed_strings",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13610/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13610/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13608",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13608/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13608/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13608/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13608",
        "id": 2002224474,
        "node_id": "PR_kwDOIPDwls5f6VLd",
        "number": 13608,
        "title": "Added support for partial_variables to BaseStringMessagePromptTemplate",
        "user": {
            "login": "jponf",
            "id": 3852560,
            "node_id": "MDQ6VXNlcjM4NTI1NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3852560?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jponf",
            "html_url": "https://github.com/jponf",
            "followers_url": "https://api.github.com/users/jponf/followers",
            "following_url": "https://api.github.com/users/jponf/following{/other_user}",
            "gists_url": "https://api.github.com/users/jponf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jponf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jponf/subscriptions",
            "organizations_url": "https://api.github.com/users/jponf/orgs",
            "repos_url": "https://api.github.com/users/jponf/repos",
            "events_url": "https://api.github.com/users/jponf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jponf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T13:36:03Z",
        "updated_at": "2023-11-21T11:05:58Z",
        "closed_at": "2023-11-21T11:05:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13608",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13608",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13608.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13608.patch",
            "merged_at": null
        },
        "body": "**Description:** BaseStringMessagePromptTemplate.from_template was passingg the value of partial_variables into cls(...) via **kwargs, rather than passing it to PromptTemplate.from_template. \r\n**Tag maintainer:** @eyurtsev\r\n**Twitter handle:** @josep_pon\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13608/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13608/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13607",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13607/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13607/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13607/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13607",
        "id": 2002214770,
        "node_id": "I_kwDOIPDwls53V19y",
        "number": 13607,
        "title": "Issue: Validation errors for ConversationalRetrievalChain (combine_docs_chain)",
        "user": {
            "login": "0ENZO",
            "id": 53021621,
            "node_id": "MDQ6VXNlcjUzMDIxNjIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/53021621?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0ENZO",
            "html_url": "https://github.com/0ENZO",
            "followers_url": "https://api.github.com/users/0ENZO/followers",
            "following_url": "https://api.github.com/users/0ENZO/following{/other_user}",
            "gists_url": "https://api.github.com/users/0ENZO/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/0ENZO/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/0ENZO/subscriptions",
            "organizations_url": "https://api.github.com/users/0ENZO/orgs",
            "repos_url": "https://api.github.com/users/0ENZO/repos",
            "events_url": "https://api.github.com/users/0ENZO/events{/privacy}",
            "received_events_url": "https://api.github.com/users/0ENZO/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T13:30:37Z",
        "updated_at": "2023-11-20T13:40:30Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHello, I am working on a conversational chatbot, here is a snippet of the code : \r\n\r\n```\r\ngeneral_system_template = \"\"You a chatbot...\r\n\r\n---\r\n{summaries}\"\"\"\r\n\r\ngeneral_user_template = \"Question: {question}\"\r\n\r\nmessages = [\r\n    SystemMessagePromptTemplate.from_template(general_system_template),\r\n    HumanMessagePromptTemplate.from_template(general_user_template)\r\n]\r\n\r\nqa_prompt = ChatPromptTemplate(\r\n    messages=messages,\r\n    input_variables=['question', 'summaries']\r\n)\r\n\r\nq = Queue()\r\n\r\nllm_chat = ChatVertexAI(\r\n    temperature=0,\r\n    model_name=\"chat-bison\",\r\n    streaming=True,\r\n    callbacks=[QueueCallback(q)],\r\n    verbose=False\r\n)\r\n\r\nretriever = docsearch.as_retriever(\r\n    search_type=\"similarity\",\r\n    search_kwargs={\r\n        'k': 2,\r\n        'filter': {'source': {'$in': sources}}\r\n    }\r\n)\r\n\r\nllm_text = VertexAI(\r\n    temperature=0,\r\n    model_name=\"text-bison\"\r\n)\r\n\r\ncombine_docs_chain = load_qa_with_sources_chain(\r\n    llm=llm_chat,\r\n    chain_type=\"stuff\",\r\n    prompt=qa_prompt\r\n)\r\n\r\ncondense_question_template = (\r\n    \"\"\"Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question, in its original language.\r\n    Chat History: {chat_history}\r\n    Follow Up Input: {question}\"\"\"\r\n)\r\n\r\ncondense_question_prompt = PromptTemplate.from_template(condense_question_template)\r\ncondense_chain = LLMChain(\r\n    llm=llm_text,\r\n    prompt=condense_question_prompt,\r\n    verbose=True\r\n)\r\n\r\nchain = ConversationalRetrievalChain(\r\n    combine_docs_chain_=combine_docs_chain,\r\n    retriever=retriever,\r\n    question_generator=condense_chain\r\n)\r\n```\r\n\r\nWhen running the code I have the following error : \r\n```\r\npydantic.error_wrappers.ValidationError: 2 validation errors for ConversationalRetrievalChain\r\ncombine_docs_chain\r\n  field required (type=value_error.missing)\r\ncombine_docs_chain_\r\n  extra fields not permitted (type=value_error.extra)\r\n```\r\n\r\nHow could I solve this ? Is there any way to have a more detailed error ? \n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13607/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13607/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13606",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13606/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13606/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13606/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13606",
        "id": 2002142951,
        "node_id": "I_kwDOIPDwls53Vkbn",
        "number": 13606,
        "title": "Changed import of VertexAI",
        "user": {
            "login": "rolench",
            "id": 67024634,
            "node_id": "MDQ6VXNlcjY3MDI0NjM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/67024634?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rolench",
            "html_url": "https://github.com/rolench",
            "followers_url": "https://api.github.com/users/rolench/followers",
            "following_url": "https://api.github.com/users/rolench/following{/other_user}",
            "gists_url": "https://api.github.com/users/rolench/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rolench/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rolench/subscriptions",
            "organizations_url": "https://api.github.com/users/rolench/orgs",
            "repos_url": "https://api.github.com/users/rolench/repos",
            "events_url": "https://api.github.com/users/rolench/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rolench/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T12:55:25Z",
        "updated_at": "2023-11-20T13:02:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\npython = \"^3.8.10\"\r\nlangchain = \"^0.0.336\"\r\ngoogle-cloud-aiplatform = \"^1.36.3\"\n\n### Who can help?\n\n@hwchase17 @agol\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nfrom langchain.llms.vertexai import VertexAI\r\n\r\nmodel = VertexAI(\r\n            model_name=\"text-bison@001\",\r\n            temperature=0.2,\r\n            max_output_tokens=1024,\r\n            top_k=40,\r\n            top_p=0.8\r\n        )\r\n\r\nmodel.client\r\n# <vertexai.preview.language_models._PreviewTextGenerationModel at ...>\r\n\r\n# it should be <vertexai.language_models.TextGenerationModel at ...>\r\n```\n\n### Expected behavior\n\nCode reference: https://github.com/langchain-ai/langchain/blob/78a1f4b264fbdca263a4f8873b980eaadb8912a7/libs/langchain/langchain/llms/vertexai.py#L255C77-L255C77\r\n\r\nThe VertexAI API is now using vertexai.language_models.TextGenerationModel.\r\nInstead, here we are still importing it from from vertexai.preview.language_models.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13606/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13606/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13605",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13605/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13605/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13605/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13605",
        "id": 2002129643,
        "node_id": "I_kwDOIPDwls53VhLr",
        "number": 13605,
        "title": "Issue: retrieve multi index from vector store using Faiss in Langchain",
        "user": {
            "login": "WilliamBrant",
            "id": 97897241,
            "node_id": "U_kgDOBdXLGQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/97897241?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/WilliamBrant",
            "html_url": "https://github.com/WilliamBrant",
            "followers_url": "https://api.github.com/users/WilliamBrant/followers",
            "following_url": "https://api.github.com/users/WilliamBrant/following{/other_user}",
            "gists_url": "https://api.github.com/users/WilliamBrant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/WilliamBrant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/WilliamBrant/subscriptions",
            "organizations_url": "https://api.github.com/users/WilliamBrant/orgs",
            "repos_url": "https://api.github.com/users/WilliamBrant/repos",
            "events_url": "https://api.github.com/users/WilliamBrant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/WilliamBrant/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T12:47:43Z",
        "updated_at": "2023-11-21T14:58:27Z",
        "closed_at": "2023-11-21T14:58:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI've created a multi-level directory vector store using Faiss. How can I retrieve all indices within one or multiple subdirectories?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13605/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13605/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13604",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13604/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13604/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13604/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13604",
        "id": 2002022305,
        "node_id": "PR_kwDOIPDwls5f5pAz",
        "number": 13604,
        "title": "Fix broken link on Meilisearch vector-store documentation",
        "user": {
            "login": "alallema",
            "id": 16155041,
            "node_id": "MDQ6VXNlcjE2MTU1MDQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/16155041?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alallema",
            "html_url": "https://github.com/alallema",
            "followers_url": "https://api.github.com/users/alallema/followers",
            "following_url": "https://api.github.com/users/alallema/following{/other_user}",
            "gists_url": "https://api.github.com/users/alallema/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alallema/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alallema/subscriptions",
            "organizations_url": "https://api.github.com/users/alallema/orgs",
            "repos_url": "https://api.github.com/users/alallema/repos",
            "events_url": "https://api.github.com/users/alallema/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alallema/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T11:49:12Z",
        "updated_at": "2023-11-29T09:56:37Z",
        "closed_at": "2023-11-28T20:49:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13604",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13604",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13604.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13604.patch",
            "merged_at": "2023-11-28T20:49:33Z"
        },
        "body": "  - **Description:** dead link replacement \r\n  - **Issue:** no open issue\r\n\r\n**Note:**\r\nHi langchain team,\r\nSorry to open a PR for this concern but we realized that one of the links present in the documentation booklet was broken \ud83d\ude04 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13604/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13604/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13603",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13603/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13603/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13603/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13603",
        "id": 2001922288,
        "node_id": "PR_kwDOIPDwls5f5S2A",
        "number": 13603,
        "title": "Exclude Bedrock client and credentials_profile_name fields from serialisation",
        "user": {
            "login": "dqbd",
            "id": 1443449,
            "node_id": "MDQ6VXNlcjE0NDM0NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1443449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dqbd",
            "html_url": "https://github.com/dqbd",
            "followers_url": "https://api.github.com/users/dqbd/followers",
            "following_url": "https://api.github.com/users/dqbd/following{/other_user}",
            "gists_url": "https://api.github.com/users/dqbd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dqbd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dqbd/subscriptions",
            "organizations_url": "https://api.github.com/users/dqbd/orgs",
            "repos_url": "https://api.github.com/users/dqbd/repos",
            "events_url": "https://api.github.com/users/dqbd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dqbd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T10:58:18Z",
        "updated_at": "2023-11-28T21:34:47Z",
        "closed_at": "2023-11-28T21:34:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13603",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13603",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13603.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13603.patch",
            "merged_at": "2023-11-28T21:34:46Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13603/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13603/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13602",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13602/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13602/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13602/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13602",
        "id": 2001851127,
        "node_id": "I_kwDOIPDwls53UdL3",
        "number": 13602,
        "title": "Structured tools not able to pass structured data to each other",
        "user": {
            "login": "namedgraph",
            "id": 849526,
            "node_id": "MDQ6VXNlcjg0OTUyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/849526?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/namedgraph",
            "html_url": "https://github.com/namedgraph",
            "followers_url": "https://api.github.com/users/namedgraph/followers",
            "following_url": "https://api.github.com/users/namedgraph/following{/other_user}",
            "gists_url": "https://api.github.com/users/namedgraph/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/namedgraph/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/namedgraph/subscriptions",
            "organizations_url": "https://api.github.com/users/namedgraph/orgs",
            "repos_url": "https://api.github.com/users/namedgraph/repos",
            "events_url": "https://api.github.com/users/namedgraph/events{/privacy}",
            "received_events_url": "https://api.github.com/users/namedgraph/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-11-20T10:21:21Z",
        "updated_at": "2023-11-20T14:06:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain 0.0.338\r\nPython 3.11.5\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [X] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nI was trying to combine multiple structured `Tool`s, one that produces a `List` of values and another that consumes it, but couldn't get it to work. I asked the LangChain support bot whether it was possible and it said yes and produced the following example. But it does not work :)\r\n```python\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.agents import initialize_agent, AgentType\r\nfrom langchain.tools import BaseTool\r\nfrom typing import List\r\n\r\n# Define the first structured tool that returns a list of strings\r\nclass ListTool(BaseTool):\r\n    name = \"List Tool\"\r\n    description = \"Generates a list of strings.\"\r\n\r\n    def _run(self) -> List[str]:\r\n        \"\"\"Return a list of strings.\"\"\"\r\n        return [\"apple\", \"banana\", \"cherry\"]\r\n\r\ntool1 = ListTool()\r\n\r\n# Define the second structured tool that accepts a list of strings\r\nclass ProcessListTool(BaseTool):\r\n    name = \"Process List Tool\"\r\n    description = \"Processes a list of strings.\"\r\n\r\n    def _run(self, input_list: List[str]) -> str:\r\n        \"\"\"Process the list of strings.\"\"\"\r\n        # Perform the processing logic here\r\n        processed_list = [item.upper() for item in input_list]\r\n        return f\"Processed list: {', '.join(processed_list)}\"\r\n\r\ntool2 = ProcessListTool()\r\n\r\nllm = OpenAI(temperature=0)\r\nagent_executor = initialize_agent(\r\n    [tool1, tool2],\r\n    llm,\r\n    agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,\r\n    verbose=True,\r\n)\r\n\r\noutput = agent_executor.run(\"Process the list\")\r\nprint(output)  # Output: 'Processed list: APPLE, BANANA, CHERRY'\r\n```\r\nFull output:\r\n```\r\n> Entering new AgentExecutor chain...\r\nAction:\r\n\r\n{\r\n  \"action\": \"Process List Tool\",\r\n  \"action_input\": {\r\n    \"input_list\": {\r\n      \"title\": \"Input List\",\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"type\": \"string\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nObservation: Processed list: TITLE, TYPE, ITEMS\r\nThought: I have the processed list\r\nAction:\r\n\r\n{\r\n  \"action\": \"Final Answer\",\r\n  \"action_input\": \"I have processed the list and it contains the following: TITLE, TYPE, ITEMS\"\r\n}\r\n\r\n\r\n\r\n> Finished chain.\r\n```\r\n\r\n### Expected behavior\r\n\r\nExpected output:\r\n```\r\nProcessed list: APPLE, BANANA, CHERRY'\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13602/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13602/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13601",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13601/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13601/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13601/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13601",
        "id": 2001850563,
        "node_id": "I_kwDOIPDwls53UdDD",
        "number": 13601,
        "title": "Neo4j - ConfigurationError: username not supported in the URI",
        "user": {
            "login": "parth713",
            "id": 32217882,
            "node_id": "MDQ6VXNlcjMyMjE3ODgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/32217882?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/parth713",
            "html_url": "https://github.com/parth713",
            "followers_url": "https://api.github.com/users/parth713/followers",
            "following_url": "https://api.github.com/users/parth713/following{/other_user}",
            "gists_url": "https://api.github.com/users/parth713/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/parth713/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/parth713/subscriptions",
            "organizations_url": "https://api.github.com/users/parth713/orgs",
            "repos_url": "https://api.github.com/users/parth713/repos",
            "events_url": "https://api.github.com/users/parth713/events{/privacy}",
            "received_events_url": "https://api.github.com/users/parth713/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-20T10:21:02Z",
        "updated_at": "2023-11-20T10:50:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain==0.0.338\r\npython==3.8.1\r\nneo4j latest\r\n\r\nthis is the error:\r\n\r\n---------------------------------------------------------------------------\r\nConfigurationError                        Traceback (most recent call last)\r\n[/Users/m1/Desktop/LangChain/Untitled.ipynb](https://file+.vscode-resource.vscode-cdn.net/Users/m1/Desktop/LangChain/Untitled.ipynb) Cell 1 line 5\r\n      [2](vscode-notebook-cell:/Users/m1/Desktop/LangChain/Untitled.ipynb#W0sZmlsZQ%3D%3D?line=1) import os\r\n      [4](vscode-notebook-cell:/Users/m1/Desktop/LangChain/Untitled.ipynb#W0sZmlsZQ%3D%3D?line=3) uri, user, password = os.getenv(\"NEO4J_URI\"), os.getenv(\"NEO4J_USERNAME\"), os.getenv(\"NEO4J_PASSWORD\")\r\n----> [5](vscode-notebook-cell:/Users/m1/Desktop/LangChain/Untitled.ipynb#W0sZmlsZQ%3D%3D?line=4) graph = Neo4jGraph(\r\n      [6](vscode-notebook-cell:/Users/m1/Desktop/LangChain/Untitled.ipynb#W0sZmlsZQ%3D%3D?line=5)     url=uri,\r\n      [7](vscode-notebook-cell:/Users/m1/Desktop/LangChain/Untitled.ipynb#W0sZmlsZQ%3D%3D?line=6)     username=user,\r\n      [8](vscode-notebook-cell:/Users/m1/Desktop/LangChain/Untitled.ipynb#W0sZmlsZQ%3D%3D?line=7)     password=password,\r\n      [9](vscode-notebook-cell:/Users/m1/Desktop/LangChain/Untitled.ipynb#W0sZmlsZQ%3D%3D?line=8) )\r\n\r\nFile [~/Desktop/LangChain/KG_openai/lib/python3.8/site-packages/langchain/graphs/neo4j_graph.py:69](https://file+.vscode-resource.vscode-cdn.net/Users/m1/Desktop/LangChain/~/Desktop/LangChain/KG_openai/lib/python3.8/site-packages/langchain/graphs/neo4j_graph.py:69), in Neo4jGraph.__init__(self, url, username, password, database)\r\n     [66](https://file+.vscode-resource.vscode-cdn.net/Users/m1/Desktop/LangChain/~/Desktop/LangChain/KG_openai/lib/python3.8/site-packages/langchain/graphs/neo4j_graph.py:66) password = get_from_env(\"password\", \"NEO4J_PASSWORD\", password)\r\n     [67](https://file+.vscode-resource.vscode-cdn.net/Users/m1/Desktop/LangChain/~/Desktop/LangChain/KG_openai/lib/python3.8/site-packages/langchain/graphs/neo4j_graph.py:67) database = get_from_env(\"database\", \"NEO4J_DATABASE\", database)\r\n---> [69](https://file+.vscode-resource.vscode-cdn.net/Users/m1/Desktop/LangChain/~/Desktop/LangChain/KG_openai/lib/python3.8/site-packages/langchain/graphs/neo4j_graph.py:69) self._driver = neo4j.GraphDatabase.driver(url, auth=(username, password))\r\n     [70](https://file+.vscode-resource.vscode-cdn.net/Users/m1/Desktop/LangChain/~/Desktop/LangChain/KG_openai/lib/python3.8/site-packages/langchain/graphs/neo4j_graph.py:70) self._database = database\r\n     [71](https://file+.vscode-resource.vscode-cdn.net/Users/m1/Desktop/LangChain/~/Desktop/LangChain/KG_openai/lib/python3.8/site-packages/langchain/graphs/neo4j_graph.py:71) self.schema: str = \"\"\r\n\r\nFile [~/Desktop/LangChain/KG_openai/lib/python3.8/site-packages/neo4j/_sync/driver.py:190](https://file+.vscode-resource.vscode-cdn.net/Users/m1/Desktop/LangChain/~/Desktop/LangChain/KG_openai/lib/python3.8/site-packages/neo4j/_sync/driver.py:190), in GraphDatabase.driver(cls, uri, auth, **config)\r\n    [170](https://file+.vscode-resource.vscode-cdn.net/Users/m1/Desktop/LangChain/~/Desktop/LangChain/KG_openai/lib/python3.8/site-packages/neo4j/_sync/driver.py:170) @classmethod\r\n    [171](https://file+.vscode-resource.vscode-cdn.net/Users/m1/Desktop/LangChain/~/Desktop/LangChain/KG_openai/lib/python3.8/site-packages/neo4j/_sync/driver.py:171) def driver(\r\n    [172](https://file+.vscode-resource.vscode-cdn.net/Users/m1/Desktop/LangChain/~/Desktop/LangChain/KG_openai/lib/python3.8/site-packages/neo4j/_sync/driver.py:172)     cls, uri: str, *,\r\nref='~/Desktop/LangChain/KG_openai/lib/python3.8/site-packages/neo4j/_sync/driver.py:0'>0</a>;32m   (...)\r\n    [177](https://file+.vscode-resource.vscode-cdn.net/Users/m1/Desktop/LangChain/~/Desktop/LangChain/KG_openai/lib/python3.8/site-packages/neo4j/_sync/driver.py:177)     **config\r\n    [178](https://file+.vscode-resource.vscode-cdn.net/Users/m1/Desktop/LangChain/~/Desktop/LangChain/KG_openai/lib/python3.8/site-packages/neo4j/_sync/driver.py:178) ) -> Driver:\r\n...\r\n--> [486](https://file+.vscode-resource.vscode-cdn.net/Users/m1/Desktop/LangChain/~/Desktop/LangChain/KG_openai/lib/python3.8/site-packages/neo4j/api.py:486)     raise ConfigurationError(\"Username is not supported in the URI\")\r\n    [488](https://file+.vscode-resource.vscode-cdn.net/Users/m1/Desktop/LangChain/~/Desktop/LangChain/KG_openai/lib/python3.8/site-packages/neo4j/api.py:488) if parsed.password:\r\n    [489](https://file+.vscode-resource.vscode-cdn.net/Users/m1/Desktop/LangChain/~/Desktop/LangChain/KG_openai/lib/python3.8/site-packages/neo4j/api.py:489)     raise ConfigurationError(\"Password is not supported in the URI\")\r\n\r\nConfigurationError: Username is not supported in the URI\r\nOutput is truncated. View as a [scrollable element](command:cellOutput.enableScrolling?bbc3ed55-b69e-4557-b7e7-e9913806eb86) or open in a [text editor](command:workbench.action.openLargeOutput?bbc3ed55-b69e-4557-b7e7-e9913806eb86). Adjust cell output [settings](command:workbench.action.openSettings?%5B%22%40tag%3AnotebookOutputLayout%22%5D)...\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.graphs import Neo4jGraph\r\nimport os\r\n\r\nuri, user, password = os.getenv(\"NEO4J_URI\"), os.getenv(\"NEO4J_USERNAME\"), os.getenv(\"NEO4J_PASSWORD\")\r\ngraph = Neo4jGraph(\r\n    url= uri,\r\n    username=user,\r\n    password=password,\r\n)\n\n### Expected behavior\n\nThis driver formation is running fine in v264. however its giving me error in v338 version. at last in the driver stub, its parsing the url and then the username from the parsed url is being checked. If its present then its raising this above config error. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13601/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13601/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13599",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13599/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13599/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13599/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13599",
        "id": 2001666284,
        "node_id": "I_kwDOIPDwls53TwDs",
        "number": 13599,
        "title": "Issue: Filling `ConversationSummaryMemory` with existing conversation from an SQLite database ",
        "user": {
            "login": "Issaminu",
            "id": 99417396,
            "node_id": "U_kgDOBez9NA",
            "avatar_url": "https://avatars.githubusercontent.com/u/99417396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Issaminu",
            "html_url": "https://github.com/Issaminu",
            "followers_url": "https://api.github.com/users/Issaminu/followers",
            "following_url": "https://api.github.com/users/Issaminu/following{/other_user}",
            "gists_url": "https://api.github.com/users/Issaminu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Issaminu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Issaminu/subscriptions",
            "organizations_url": "https://api.github.com/users/Issaminu/orgs",
            "repos_url": "https://api.github.com/users/Issaminu/repos",
            "events_url": "https://api.github.com/users/Issaminu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Issaminu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 17,
        "created_at": "2023-11-20T08:52:20Z",
        "updated_at": "2023-11-30T03:27:24Z",
        "closed_at": "2023-11-26T16:03:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nI'd like to make `ConversationSummaryMemory` is filled with the previous questions and answers for a specific conversation from an SQLite database so I can have my agent already aware of previous conversation with the user.\r\n\r\nHere's my current code:\r\n```py\r\nimport os\r\nimport sys\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.indexes import VectorstoreIndexCreator\r\nfrom langchain.indexes.vectorstore import VectorStoreIndexWrapper\r\nfrom langchain.vectorstores.chroma import Chroma\r\nfrom langchain.memory import ConversationSummaryMemory\r\nfrom langchain.tools import Tool\r\nfrom langchain.agents.types import AgentType\r\nfrom langchain.agents import initialize_agent\r\nfrom dotenv import load_dotenv\r\n\r\nload_dotenv()\r\nOPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")\r\n\r\nquery = \" \".join(sys.argv[1:]) if len(sys.argv) > 1 else None\r\n\r\nretriever = # retriever stuff here for the `local-docs` tool\r\n\r\nllm = ChatOpenAI(temperature=0.7, model=\"gpt-3.5-turbo-1106\")\r\n\r\nmemory = ConversationSummaryMemory(\r\n    llm=llm,\r\n    memory_key=\"chat_history\",\r\n    return_messages=True,\r\n)\r\n\r\n\r\nchain = ConversationalRetrievalChain.from_llm(\r\n    llm=llm,\r\n    memory=memory,\r\n    chain_type=\"stuff\",\r\n    retriever=index.vectorstore.as_retriever(search_kwargs={\"k\": 4}),\r\n    get_chat_history=lambda h: h,\r\n    verbose=False,\r\n)\r\n\r\nsystem_message = (\r\n    \"Be helpful to your users\".\r\n)\r\ntools = [\r\n    Tool(\r\n        name=\"local-docs\",\r\n        func=chain,\r\n        description=\"Useful when you need to answer docs-related questions\",\r\n    )\r\n]\r\n\r\n\r\ndef ask(input: str) -> str:\r\n    result = \"\"\r\n    try:\r\n        result = executor({\"input\": input})\r\n    except Exception as e:\r\n        response = str(e)\r\n        if response.startswith(\"Could not parse LLM output: `\"):\r\n            response = response.removeprefix(\r\n                \"Could not parse LLM output: `\"\r\n            ).removesuffix(\"`\")\r\n            return response\r\n        else:\r\n            raise Exception(str(e))\r\n    return result\r\n\r\n\r\nchat_history = []\r\nexecutor = initialize_agent(\r\n    agent=AgentType.CHAT_CONVERSATIONAL_REACT_DESCRIPTION,\r\n    tools=tools,\r\n    llm=llm,\r\n    memory=memory,\r\n    agent_kwargs={\"system_message\": system_message},\r\n    verbose=True,\r\n    max_execution_time=30,\r\n    max_iterations=6,\r\n    handle_parsing_errors=True,\r\n    early_stopping_method=\"generate\",\r\n    stop=[\"\\nObservation:\"],\r\n)\r\n\r\nresult = ask(query)\r\nprint(result[\"output\"])\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13599/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13599/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13597",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13597/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13597/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13597/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13597",
        "id": 2001501651,
        "node_id": "I_kwDOIPDwls53TH3T",
        "number": 13597,
        "title": "add multimodal support",
        "user": {
            "login": "reddiamond1234",
            "id": 122911466,
            "node_id": "U_kgDOB1N66g",
            "avatar_url": "https://avatars.githubusercontent.com/u/122911466?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/reddiamond1234",
            "html_url": "https://github.com/reddiamond1234",
            "followers_url": "https://api.github.com/users/reddiamond1234/followers",
            "following_url": "https://api.github.com/users/reddiamond1234/following{/other_user}",
            "gists_url": "https://api.github.com/users/reddiamond1234/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/reddiamond1234/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/reddiamond1234/subscriptions",
            "organizations_url": "https://api.github.com/users/reddiamond1234/orgs",
            "repos_url": "https://api.github.com/users/reddiamond1234/repos",
            "events_url": "https://api.github.com/users/reddiamond1234/events{/privacy}",
            "received_events_url": "https://api.github.com/users/reddiamond1234/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T07:00:43Z",
        "updated_at": "2023-11-20T07:03:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nadd support for other multimodal models like Llava, Fuyu, Bakllava... This would help with RAG, where documents have non text data.\n\n### Motivation\n\nI have a lot of tables and images to proccess in PDFs when doing RAG, and right now this is not ideal.\n\n### Your contribution\n\nno time :(",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13597/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13597/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13596",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13596/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13596/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13596/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13596",
        "id": 2001474706,
        "node_id": "I_kwDOIPDwls53TBSS",
        "number": 13596,
        "title": "Issue: How to add randomness when using max_marginal_relevance_search with Qdrant",
        "user": {
            "login": "TheJerryChang",
            "id": 73481455,
            "node_id": "MDQ6VXNlcjczNDgxNDU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/73481455?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheJerryChang",
            "html_url": "https://github.com/TheJerryChang",
            "followers_url": "https://api.github.com/users/TheJerryChang/followers",
            "following_url": "https://api.github.com/users/TheJerryChang/following{/other_user}",
            "gists_url": "https://api.github.com/users/TheJerryChang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TheJerryChang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TheJerryChang/subscriptions",
            "organizations_url": "https://api.github.com/users/TheJerryChang/orgs",
            "repos_url": "https://api.github.com/users/TheJerryChang/repos",
            "events_url": "https://api.github.com/users/TheJerryChang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TheJerryChang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T06:38:24Z",
        "updated_at": "2023-11-20T06:44:07Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am using Qdrant as my vector store, and now, every time I use 'max_marginal_relevance_search' with a fix k parameter. It will always return the same documents. How to add some randomness? So it will return something different(Still within the score_threshold) each time. Here is my sample code of using 'max_marginal_relevance_search':\r\n\r\nrelated_docs = vectorstore.max_marginal_relevance_search(target_place, k=fetch_amount, score_threshold=0.5, filter=rest.Filter(must=[rest.FieldCondition(\r\n                    key='metadata.category',\r\n                    match=rest.MatchValue(value=category),\r\n                ),rest.FieldCondition(\r\n                    key='metadata.related_words',\r\n                    match=rest.MatchAny(any=related_words),\r\n                )]))\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13596/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13596/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13595",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13595/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13595/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13595/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13595",
        "id": 2001388324,
        "node_id": "PR_kwDOIPDwls5f3gZi",
        "number": 13595,
        "title": "Bagatur/cogniswitch",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T05:19:00Z",
        "updated_at": "2023-12-14T02:53:28Z",
        "closed_at": "2023-12-14T02:53:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13595",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13595",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13595.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13595.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13595/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13595/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13594",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13594/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13594/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13594/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13594",
        "id": 2001365132,
        "node_id": "PR_kwDOIPDwls5f3bVE",
        "number": 13594,
        "title": "Update mongodb_atlas.py to fix ImportError: cannot import name 'DriverInfo' from 'pymongo'",
        "user": {
            "login": "ruanwz",
            "id": 4874,
            "node_id": "MDQ6VXNlcjQ4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ruanwz",
            "html_url": "https://github.com/ruanwz",
            "followers_url": "https://api.github.com/users/ruanwz/followers",
            "following_url": "https://api.github.com/users/ruanwz/following{/other_user}",
            "gists_url": "https://api.github.com/users/ruanwz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ruanwz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ruanwz/subscriptions",
            "organizations_url": "https://api.github.com/users/ruanwz/orgs",
            "repos_url": "https://api.github.com/users/ruanwz/repos",
            "events_url": "https://api.github.com/users/ruanwz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ruanwz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T04:54:52Z",
        "updated_at": "2023-12-05T03:26:00Z",
        "closed_at": "2023-12-05T03:26:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13594",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13594",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13594.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13594.patch",
            "merged_at": null
        },
        "body": "\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** fix ImportError: cannot import name 'DriverInfo' from 'pymongo'\r\n  - **Issue:** As above\r\n  - **Dependencies:** NA\r\n  - **Tag maintainer:** @efriis @jarib \r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13594/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13594/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13593",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13593/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13593/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13593/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13593",
        "id": 2001330836,
        "node_id": "I_kwDOIPDwls53SeKU",
        "number": 13593,
        "title": "[SelfQueryRetriever] Generated Query Mismatched Timestamp Type",
        "user": {
            "login": "huantt",
            "id": 19801770,
            "node_id": "MDQ6VXNlcjE5ODAxNzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19801770?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huantt",
            "html_url": "https://github.com/huantt",
            "followers_url": "https://api.github.com/users/huantt/followers",
            "following_url": "https://api.github.com/users/huantt/following{/other_user}",
            "gists_url": "https://api.github.com/users/huantt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huantt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huantt/subscriptions",
            "organizations_url": "https://api.github.com/users/huantt/orgs",
            "repos_url": "https://api.github.com/users/huantt/repos",
            "events_url": "https://api.github.com/users/huantt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huantt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T04:16:00Z",
        "updated_at": "2023-11-20T04:23:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.266\n\n### Who can help?\n\n@eyurtsev @hwchase17 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nimport datetime\r\nimport chainlit\r\nfrom dotenv import load_dotenv\r\nfrom langchain.chains.query_constructor.base import AttributeInfo\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.docstore.document import Document  # noqa\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.retrievers import SelfQueryRetriever\r\nfrom langchain.vectorstores import Chroma\r\n\r\nchainlit.debug = True\r\n\r\nload_dotenv()\r\n\r\nllm = ChatOpenAI()\r\n\r\ndocs = [\r\n    Document(\r\n        page_content=\"A bunch of scientists bring back dinosaurs and mayhem breaks loose\",\r\n        metadata={\"released_at\": 1700190868, \"rating\": 7.7, \"genre\": \"science fiction\"},\r\n    ),\r\n    Document(\r\n        page_content=\"Leo DiCaprio gets lost in a dream within a dream within a dream within a ...\",\r\n        metadata={\"released_at\": 1700190868, \"director\": \"Christopher Nolan\", \"rating\": 8.2},\r\n    ),\r\n    Document(\r\n        page_content=\"A psychologist / detective gets lost in a series of dreams within dreams within dreams and Inception reused the idea\",\r\n        metadata={\"released_at\": 1700190868, \"director\": \"Satoshi Kon\", \"rating\": 8.6},\r\n    ),\r\n    Document(\r\n        page_content=\"A bunch of normal-sized women are supremely wholesome and some men pine after them\",\r\n        metadata={\"released_at\": 1700190868, \"director\": \"Greta Gerwig\", \"rating\": 8.3},\r\n    ),\r\n    Document(\r\n        page_content=\"Toys come alive and have a blast doing so\",\r\n        metadata={\"released_at\": 1700190868, \"genre\": \"animated\"},\r\n    ),\r\n    Document(\r\n        page_content=\"Three men walk into the Zone, three men walk out of the Zone\",\r\n        metadata={\"released_at\": 1700190868, \"director\": \"Andrei Tarkovsky\", \"genre\": \"thriller\", \"rating\": 9.9},\r\n    ),\r\n]\r\nvectorstore = Chroma.from_documents(docs, OpenAIEmbeddings())\r\n\r\nmetadata_field_info = [\r\n    AttributeInfo(\r\n        name=\"released_at\",\r\n        description=\"Time the movie was released. It's second timestamp.\",\r\n        type=\"integer\",\r\n    ),\r\n]\r\ndocument_content_description = \"Brief summary of a movie\"\r\nretriever = SelfQueryRetriever.from_llm(\r\n    llm,\r\n    vectorstore,\r\n    document_content_description,\r\n    metadata_field_info,\r\n)\r\n\r\nresult = retriever.invoke(\r\n    f\"What's a movie in this month that's all about toys, and preferably is animated. Current time is: {datetime.datetime.now().strftime('%m/%d/%Y, %H:%M:%S')}.\",\r\n)\r\n\r\nprint(result)\r\n\r\n```\n\n### Expected behavior\n\nI declared the `metadata_field_info` which includes the `released_at` field with the data type `integer`.\r\n\r\n## I expected the following:\r\n\r\nWhen my query involves the time/timerange of the release time, the query should compare using `integer` instead of `date time`.\r\n\r\n### Why I expected this:\r\n\r\n- The data type declared in `metadata_field_info` should be utilized.\r\n- In the implementations of `SelfQueryRetriever` (I tested `qdrant` and `chroma`), the accepted type in comparison operations (gte/lte) must be numeric, not a date.\r\n\r\n### Identified Reason\r\n\r\nI identified the problem due to the `\"SCHEMA[s]\"` in [langchain/chains/query_constructor/prompt.py](https://github.com/langchain-ai/langchain/blob/190952fe76d8f7bf1e661cbdaa2ba0a2dc0f5456/libs/langchain/langchain/chains/query_constructor/prompt.py#L117). \r\n\r\nThis line in prompt led the result:\r\n```\r\nMake sure that filters only use format `YYYY-MM-DD` when handling date data typed values\r\n```\r\n\r\nI guess that it works in some SQL queries such as `Postgresql`, which accepts 'YYY-MM-DD' as date query inputs.\r\n\r\nHowever, we are working with metadata in vector records, which are structured like JSON objects with key-value pairs, it may not work.\r\n\r\n### Proof of reason\r\n\r\nI tryed modifing the PROMPTs by defining my own Classes and Functions such as `load_query_constructor_chain`, `_get_prompt`, `SelfQueryRetriever`.\r\n\r\nAfter replacing the above line with the following, it worked as expected:\r\n\r\n```\r\nMake sure that filters only use timestamp in second (integer) when handling timestamp data typed values.\r\n```\r\n\r\n### Proposals\r\n- Review the above problem. If metadata fields do not support querying with the date format 'YYYY-MM-DD' as specified in the prompt, please update it.\r\n\r\n- If this prompt is specified for some use cases, please allow overriding the prompts.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13593/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13593/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13591",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13591/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13591/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13591/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13591",
        "id": 2001314760,
        "node_id": "PR_kwDOIPDwls5f3QXy",
        "number": 13591,
        "title": "Adrijanik patch 1",
        "user": {
            "login": "adrijanik",
            "id": 21140501,
            "node_id": "MDQ6VXNlcjIxMTQwNTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/21140501?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adrijanik",
            "html_url": "https://github.com/adrijanik",
            "followers_url": "https://api.github.com/users/adrijanik/followers",
            "following_url": "https://api.github.com/users/adrijanik/following{/other_user}",
            "gists_url": "https://api.github.com/users/adrijanik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adrijanik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adrijanik/subscriptions",
            "organizations_url": "https://api.github.com/users/adrijanik/orgs",
            "repos_url": "https://api.github.com/users/adrijanik/repos",
            "events_url": "https://api.github.com/users/adrijanik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adrijanik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-20T03:56:52Z",
        "updated_at": "2023-12-05T03:26:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13591",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13591",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13591.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13591.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13591/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13591/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13590",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13590/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13590/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13590/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13590",
        "id": 2001313070,
        "node_id": "I_kwDOIPDwls53SZ0u",
        "number": 13590,
        "title": "Support for Guidance",
        "user": {
            "login": "rotexhawk",
            "id": 12015105,
            "node_id": "MDQ6VXNlcjEyMDE1MTA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12015105?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rotexhawk",
            "html_url": "https://github.com/rotexhawk",
            "followers_url": "https://api.github.com/users/rotexhawk/followers",
            "following_url": "https://api.github.com/users/rotexhawk/following{/other_user}",
            "gists_url": "https://api.github.com/users/rotexhawk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rotexhawk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rotexhawk/subscriptions",
            "organizations_url": "https://api.github.com/users/rotexhawk/orgs",
            "repos_url": "https://api.github.com/users/rotexhawk/repos",
            "events_url": "https://api.github.com/users/rotexhawk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rotexhawk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T03:54:37Z",
        "updated_at": "2023-11-20T03:56:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nAbility to use guidance.\r\n\r\nhttps://github.com/guidance-ai/guidance\n\n### Motivation\n\nNot related to a problem.\n\n### Your contribution\n\nNot sure yet but I can look into it if it is something the community considers.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13590/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13590/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13589",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13589/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13589/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13589/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13589",
        "id": 2001278123,
        "node_id": "I_kwDOIPDwls53SRSr",
        "number": 13589,
        "title": "Issue: can i generate a nested dic output",
        "user": {
            "login": "xasxin",
            "id": 113810081,
            "node_id": "U_kgDOBsiaoQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/113810081?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xasxin",
            "html_url": "https://github.com/xasxin",
            "followers_url": "https://api.github.com/users/xasxin/followers",
            "following_url": "https://api.github.com/users/xasxin/following{/other_user}",
            "gists_url": "https://api.github.com/users/xasxin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xasxin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xasxin/subscriptions",
            "organizations_url": "https://api.github.com/users/xasxin/orgs",
            "repos_url": "https://api.github.com/users/xasxin/repos",
            "events_url": "https://api.github.com/users/xasxin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xasxin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T03:10:22Z",
        "updated_at": "2023-11-20T03:16:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI know I can generate a python dictionary output using StructuredOutputParser like { \"a\":1, \"b\":2, \"c\":3}. However, I would like to generate a nested dic like { \"a\":1, \"b\":2, \"c\":{\"d\":4, \"e\":5}}\r\nHow can I do it?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13589/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13589/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13588",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13588/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13588/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13588/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13588",
        "id": 2001254382,
        "node_id": "PR_kwDOIPDwls5f3DTe",
        "number": 13588,
        "title": "Fix typo in MongoDB memory docs",
        "user": {
            "login": "sijunhe",
            "id": 11987277,
            "node_id": "MDQ6VXNlcjExOTg3Mjc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/11987277?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sijunhe",
            "html_url": "https://github.com/sijunhe",
            "followers_url": "https://api.github.com/users/sijunhe/followers",
            "following_url": "https://api.github.com/users/sijunhe/following{/other_user}",
            "gists_url": "https://api.github.com/users/sijunhe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sijunhe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sijunhe/subscriptions",
            "organizations_url": "https://api.github.com/users/sijunhe/orgs",
            "repos_url": "https://api.github.com/users/sijunhe/repos",
            "events_url": "https://api.github.com/users/sijunhe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sijunhe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-20T02:42:11Z",
        "updated_at": "2023-11-20T07:09:37Z",
        "closed_at": "2023-11-20T03:13:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13588",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13588",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13588.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13588.patch",
            "merged_at": "2023-11-20T03:13:36Z"
        },
        "body": "  - **Description:** Fix typo in MongoDB memory docs\r\n  - **Tag maintainer:** @eyurtsev\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\n  - **Description:** Fix typo in MongoDB memory docs\r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** @baskaryan\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13588/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13588/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13587",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13587/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13587/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13587/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13587",
        "id": 2001146983,
        "node_id": "PR_kwDOIPDwls5f2sH7",
        "number": 13587,
        "title": "API Reference building script update",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-20T00:22:54Z",
        "updated_at": "2023-12-07T19:48:39Z",
        "closed_at": "2023-12-07T19:43:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13587",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13587",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13587.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13587.patch",
            "merged_at": "2023-12-07T19:43:43Z"
        },
        "body": "The namespaces like `langchain.agents.format_scratchpad` clogging the API Reference sidebar.\r\nThis change removes those 3-level namespaces from sidebar (this issue was discussed with @efriis )\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13587/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13587/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13585",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13585/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13585/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13585/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13585",
        "id": 2001076576,
        "node_id": "PR_kwDOIPDwls5f2ceK",
        "number": 13585,
        "title": "experimental[patch]: fixed namespace bug",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-19T22:49:11Z",
        "updated_at": "2023-11-29T00:40:28Z",
        "closed_at": "2023-11-29T00:40:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13585",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13585",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13585.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13585.patch",
            "merged_at": "2023-11-29T00:40:28Z"
        },
        "body": "It was :\r\n`from langchain.schema.prompts import BasePromptTemplate`\r\nbut because of the breaking change in the ns, it is now\r\n`from langchain.schema.prompt_template import BasePromptTemplate`\r\n\r\nThis bug prevents building the API Reference for the langchain_experimental ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13585/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13585/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13584",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13584/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13584/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13584/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13584",
        "id": 2001045763,
        "node_id": "I_kwDOIPDwls53RYkD",
        "number": 13584,
        "title": "Issue: can i access memory buffer through chain?",
        "user": {
            "login": "xasxin",
            "id": 113810081,
            "node_id": "U_kgDOBsiaoQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/113810081?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xasxin",
            "html_url": "https://github.com/xasxin",
            "followers_url": "https://api.github.com/users/xasxin/followers",
            "following_url": "https://api.github.com/users/xasxin/following{/other_user}",
            "gists_url": "https://api.github.com/users/xasxin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xasxin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xasxin/subscriptions",
            "organizations_url": "https://api.github.com/users/xasxin/orgs",
            "repos_url": "https://api.github.com/users/xasxin/repos",
            "events_url": "https://api.github.com/users/xasxin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xasxin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-19T21:31:23Z",
        "updated_at": "2023-11-19T22:11:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi, I'm using a conversationchain that contains memory. It is defined as:\r\nllm = ChatOpenAI(temperature=0.0, model=llm_model)\r\nmemory = ConversationBufferMemory()\r\nconversation = ConversationChain(\r\n    llm=llm, \r\n    memory = memory,\r\n    verbose=True\r\n)\r\nI know I can access the current memory by using \"memory.buffer\". However, I was wondering if there is a way to access memory only through ConversationChain instance \"conversation\"? \n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13584/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13584/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13583",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13583/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13583/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13583/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13583",
        "id": 2001042615,
        "node_id": "PR_kwDOIPDwls5f2Vkv",
        "number": 13583,
        "title": "fix: Make YoutubeLoader support on demand language translation",
        "user": {
            "login": "RaflyLesmana3003",
            "id": 42396310,
            "node_id": "MDQ6VXNlcjQyMzk2MzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/42396310?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RaflyLesmana3003",
            "html_url": "https://github.com/RaflyLesmana3003",
            "followers_url": "https://api.github.com/users/RaflyLesmana3003/followers",
            "following_url": "https://api.github.com/users/RaflyLesmana3003/following{/other_user}",
            "gists_url": "https://api.github.com/users/RaflyLesmana3003/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RaflyLesmana3003/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RaflyLesmana3003/subscriptions",
            "organizations_url": "https://api.github.com/users/RaflyLesmana3003/orgs",
            "repos_url": "https://api.github.com/users/RaflyLesmana3003/repos",
            "events_url": "https://api.github.com/users/RaflyLesmana3003/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RaflyLesmana3003/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-19T21:22:14Z",
        "updated_at": "2023-11-20T01:34:49Z",
        "closed_at": "2023-11-20T01:34:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13583",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13583",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13583.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13583.patch",
            "merged_at": "2023-11-20T01:34:48Z"
        },
        "body": "**Description:**\r\nEnhance the functionality of YoutubeLoader to enable the translation of available transcripts by refining the existing logic.\r\n\r\n**Issue:**\r\nEncountering a problem with YoutubeLoader (#13523) where the translation feature is not functioning as expected.\r\n\r\nTag maintainers/contributors who might be interested:\r\n@eyurtsev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13583/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13583/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13581",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13581/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13581/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13581/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13581",
        "id": 2001012352,
        "node_id": "PR_kwDOIPDwls5f2Plx",
        "number": 13581,
        "title": "fix: call _on_llm_error()",
        "user": {
            "login": "jwatte",
            "id": 481909,
            "node_id": "MDQ6VXNlcjQ4MTkwOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/481909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jwatte",
            "html_url": "https://github.com/jwatte",
            "followers_url": "https://api.github.com/users/jwatte/followers",
            "following_url": "https://api.github.com/users/jwatte/following{/other_user}",
            "gists_url": "https://api.github.com/users/jwatte/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jwatte/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jwatte/subscriptions",
            "organizations_url": "https://api.github.com/users/jwatte/orgs",
            "repos_url": "https://api.github.com/users/jwatte/repos",
            "events_url": "https://api.github.com/users/jwatte/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jwatte/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hinthornw",
                "id": 13333726,
                "node_id": "MDQ6VXNlcjEzMzMzNzI2",
                "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hinthornw",
                "html_url": "https://github.com/hinthornw",
                "followers_url": "https://api.github.com/users/hinthornw/followers",
                "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
                "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
                "organizations_url": "https://api.github.com/users/hinthornw/orgs",
                "repos_url": "https://api.github.com/users/hinthornw/repos",
                "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hinthornw/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-19T19:57:19Z",
        "updated_at": "2023-12-05T03:44:51Z",
        "closed_at": "2023-12-05T03:44:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13581",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13581",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13581.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13581.patch",
            "merged_at": "2023-12-05T03:44:50Z"
        },
        "body": "Description: There's a copy-paste typo where on_llm_error() calls _on_chain_error() instead of _on_llm_error().\r\nIssue: #13580 \r\nDependencies: None\r\nTag maintainer: @hwchase17 \r\nTwitter handle: @jwatte\r\n\r\n\"Run `make format`, `make lint` and `make test` to check this locally.\"\r\nThe test scripts don't work in a plain Ubuntu LTS 20.04 system.\r\nIt looks like the dev container pulling is stuck. Or maybe the internet is just ornery today.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13581/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13581/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13580",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13580/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13580/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13580/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13580",
        "id": 2000998966,
        "node_id": "I_kwDOIPDwls53RNI2",
        "number": 13580,
        "title": "The tracing on_llm_error() implementation calls _on_chain_error(), not _on_llm_error()",
        "user": {
            "login": "jwatte",
            "id": 481909,
            "node_id": "MDQ6VXNlcjQ4MTkwOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/481909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jwatte",
            "html_url": "https://github.com/jwatte",
            "followers_url": "https://api.github.com/users/jwatte/followers",
            "following_url": "https://api.github.com/users/jwatte/following{/other_user}",
            "gists_url": "https://api.github.com/users/jwatte/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jwatte/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jwatte/subscriptions",
            "organizations_url": "https://api.github.com/users/jwatte/orgs",
            "repos_url": "https://api.github.com/users/jwatte/repos",
            "events_url": "https://api.github.com/users/jwatte/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jwatte/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-19T19:21:07Z",
        "updated_at": "2023-11-22T00:14:24Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLinux 20.04 LTS\r\nPython 3.6\r\n\n\n### Who can help?\n\n@hwchase17 seems like this got introduced on 2023-11-16\r\n\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [X] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Attempt to use a tracer to trace an LLM error\r\n2. Note that the tracer hook for _on_chain_error is called instead\r\n\n\n### Expected behavior\n\n_on_llm_error hook should be called.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13580/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13580/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13579",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13579/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13579/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13579/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13579",
        "id": 2000989464,
        "node_id": "I_kwDOIPDwls53RK0Y",
        "number": 13579,
        "title": "Confluence loader fails to retrieve specific pages when 'pages_ids' is given",
        "user": {
            "login": "BastinFlorian",
            "id": 33825469,
            "node_id": "MDQ6VXNlcjMzODI1NDY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/33825469?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BastinFlorian",
            "html_url": "https://github.com/BastinFlorian",
            "followers_url": "https://api.github.com/users/BastinFlorian/followers",
            "following_url": "https://api.github.com/users/BastinFlorian/following{/other_user}",
            "gists_url": "https://api.github.com/users/BastinFlorian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BastinFlorian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BastinFlorian/subscriptions",
            "organizations_url": "https://api.github.com/users/BastinFlorian/orgs",
            "repos_url": "https://api.github.com/users/BastinFlorian/repos",
            "events_url": "https://api.github.com/users/BastinFlorian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BastinFlorian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-19T18:54:14Z",
        "updated_at": "2023-11-20T09:44:14Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nMac M1\n\n### Who can help?\n\n@eyurtsev \r\n\r\nHere:\r\nhttps://github.com/langchain-ai/langchain/blob/78a1f4b264fbdca263a4f8873b980eaadb8912a7/libs/langchain/langchain/document_loaders/confluence.py#L284 \r\n\r\nWe start adding the \"max_pages\" first pages to the \"docs\" list that will be the output of loader.load.\r\nSo we are sure that I cannot retrieve only one specific `page_id`.\r\n\r\n`loader.load(..., page_ids=['1234'], max_pages=N)`\r\nwill output X pages where X in [min(N, # pages in my confluence),  N + 1] \r\n\r\nIn other words, if I want only a specific page, I will always have at least 2 pages (in case max_pages = 1)\r\nSo page_ids does not work at all because space_key is mandatory. \r\n\r\nadding \u00ecf space_key and not page_ids` fix my problem but may lead to other problems (I did not check)\r\n\r\nDirty hack would be to collect the F last elements of the return list if pages where F is the number of found pages asked in page_ids\r\n\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nNo time to do but easy when reading code\n\n### Expected behavior\n\nI can retrieve only the page_ids specified",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13579/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13579/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13578",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13578/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13578/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13578/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13578",
        "id": 2000941147,
        "node_id": "I_kwDOIPDwls53Q_Bb",
        "number": 13578,
        "title": " ConversationChain failure after changing template text",
        "user": {
            "login": "nickums",
            "id": 15816213,
            "node_id": "MDQ6VXNlcjE1ODE2MjEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/15816213?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickums",
            "html_url": "https://github.com/nickums",
            "followers_url": "https://api.github.com/users/nickums/followers",
            "following_url": "https://api.github.com/users/nickums/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickums/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickums/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickums/subscriptions",
            "organizations_url": "https://api.github.com/users/nickums/orgs",
            "repos_url": "https://api.github.com/users/nickums/repos",
            "events_url": "https://api.github.com/users/nickums/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickums/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-19T16:56:45Z",
        "updated_at": "2023-11-20T13:28:40Z",
        "closed_at": "2023-11-20T13:25:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am having a wonderful time with my code, but after changing my template  it now fails  before I even get to give my input. Baffling!\r\n\r\nall the required imports are not shown here nor is all the prompt text (containing no special characters)\r\n    template = '''Your task is to extract the relationships between terms in the input text,\r\n                        Format your output as a json list. '''\r\n    prompt = ChatPromptTemplate.from_messages([\r\n                        SystemMessagePromptTemplate.from_template(template),\r\n                        HumanMessagePromptTemplate.from_template(\"{input}\"),\r\n                        MessagesPlaceholder(variable_name=\"history \"),\r\n                        ])\r\n    llm = ChatOpenAI(temperature=0.8, model_name='gpt-4-1106-preview') \r\n    memory = ConversationBufferMemory(return_messages=True)\r\n    conversation = ConversationChain(memory=memory, prompt=prompt, llm=llm)](url)\r\n\r\n  Traceback  .........\r\n conversation = ConversationChain(memory=memory, prompt=prompt, llm=llm)\r\n  File \"pydantic\\main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for ConversationChain\r\n__root__    Got unexpected prompt input variables. The prompt expects ['input', 'history '], but got ['history'] as inputs from memory, and input as the normal input key. (type=value_error)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13578/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13578/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13577",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13577/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13577/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13577/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13577",
        "id": 2000920377,
        "node_id": "PR_kwDOIPDwls5f19P2",
        "number": 13577,
        "title": "WIP: core",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-19T16:12:43Z",
        "updated_at": "2023-11-20T21:09:31Z",
        "closed_at": "2023-11-20T21:09:30Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13577",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13577",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13577.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13577.patch",
            "merged_at": "2023-11-20T21:09:30Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13577/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13577/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13576",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13576/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13576/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13576/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13576",
        "id": 2000910846,
        "node_id": "PR_kwDOIPDwls5f17RO",
        "number": 13576,
        "title": "openapi/planner.py: Deal with json in markdown output cases",
        "user": {
            "login": "arnaudgelas",
            "id": 188329,
            "node_id": "MDQ6VXNlcjE4ODMyOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/188329?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arnaudgelas",
            "html_url": "https://github.com/arnaudgelas",
            "followers_url": "https://api.github.com/users/arnaudgelas/followers",
            "following_url": "https://api.github.com/users/arnaudgelas/following{/other_user}",
            "gists_url": "https://api.github.com/users/arnaudgelas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arnaudgelas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arnaudgelas/subscriptions",
            "organizations_url": "https://api.github.com/users/arnaudgelas/orgs",
            "repos_url": "https://api.github.com/users/arnaudgelas/repos",
            "events_url": "https://api.github.com/users/arnaudgelas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arnaudgelas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-19T15:53:34Z",
        "updated_at": "2023-12-05T04:27:23Z",
        "closed_at": "2023-12-05T04:27:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13576",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13576",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13576.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13576.patch",
            "merged_at": "2023-12-05T04:27:22Z"
        },
        "body": "  - **Description:** In openapi/planner deal with json in markdown output cases\r\n  - **Issue:**  In some cases LLMs could return json in markdown which can't be loaded.  \r\n  - **Dependencies:**\r\n  - **Tag maintainer:** @eyurtsev\r\n  - **Twitter handle:** \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13576/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13576/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13574",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13574/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13574/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13574/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13574",
        "id": 2000862839,
        "node_id": "I_kwDOIPDwls53Qr53",
        "number": 13574,
        "title": "Implementing Hybrid Search (RRF) in LangChain Using OpenSearch Vector Store",
        "user": {
            "login": "younes-io",
            "id": 3153107,
            "node_id": "MDQ6VXNlcjMxNTMxMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3153107?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/younes-io",
            "html_url": "https://github.com/younes-io",
            "followers_url": "https://api.github.com/users/younes-io/followers",
            "following_url": "https://api.github.com/users/younes-io/following{/other_user}",
            "gists_url": "https://api.github.com/users/younes-io/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/younes-io/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/younes-io/subscriptions",
            "organizations_url": "https://api.github.com/users/younes-io/orgs",
            "repos_url": "https://api.github.com/users/younes-io/repos",
            "events_url": "https://api.github.com/users/younes-io/events{/privacy}",
            "received_events_url": "https://api.github.com/users/younes-io/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-19T13:59:02Z",
        "updated_at": "2023-11-19T14:10:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nThe feature request I am proposing involves the implementation of hybrid search, specifically using the Reciprocal Rank Fusion (RRF) method, in LangChain through the integration of OpenSearch's vector store.\r\nThis would enable the combination of keyword and similarity search. Currently, LangChain doesn't appear to support this functionality, even though OpenSearch has had this capability since its 2.10 release. The goal is to allow LangChain to call search pipelines using OpenSearch's vector implementation, enabling OpenSearch to handle the complexities of hybrid search.\r\n\r\n**Relevant Links**:\r\nhttps://opensearch.org/docs/latest/query-dsl/compound/hybrid\r\n\r\n\r\n\r\n### Motivation\r\n\r\nThe motivation behind this request stems from the current limitation in LangChain regarding hybrid search capabilities. As someone working on a search project currently, I find it frustrating that despite OpenSearch supporting hybrid search since version 2.10, LangChain has not yet integrated this feature.\r\n\r\n### Your contribution\r\n\r\nI would gladly help as long as I get guidance..",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13574/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13574/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13573",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13573/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13573/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13573/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13573",
        "id": 2000690855,
        "node_id": "PR_kwDOIPDwls5f1Pzv",
        "number": 13573,
        "title": "Update geodataframe.py",
        "user": {
            "login": "Hamzahmed",
            "id": 29238429,
            "node_id": "MDQ6VXNlcjI5MjM4NDI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/29238429?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Hamzahmed",
            "html_url": "https://github.com/Hamzahmed",
            "followers_url": "https://api.github.com/users/Hamzahmed/followers",
            "following_url": "https://api.github.com/users/Hamzahmed/following{/other_user}",
            "gists_url": "https://api.github.com/users/Hamzahmed/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Hamzahmed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Hamzahmed/subscriptions",
            "organizations_url": "https://api.github.com/users/Hamzahmed/orgs",
            "repos_url": "https://api.github.com/users/Hamzahmed/repos",
            "events_url": "https://api.github.com/users/Hamzahmed/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Hamzahmed/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-19T04:23:14Z",
        "updated_at": "2023-12-05T03:44:31Z",
        "closed_at": "2023-12-05T03:44:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13573",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13573",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13573.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13573.patch",
            "merged_at": "2023-12-05T03:44:31Z"
        },
        "body": "here it is validating shapely.geometry.point.Point:       if not isinstance(data_frame[page_content_column].iloc[0], gpd.GeoSeries): raise ValueError(\r\nf\"Expected data_frame[{page_content_column}] to be a GeoSeries\"         you need it to validate the geoSeries and not the shapely.geometry.point.Point\r\n\r\nif not isinstance(data_frame[page_content_column], gpd.GeoSeries):\r\n            raise ValueError(\r\n                f\"Expected data_frame[{page_content_column}] to be a GeoSeries\"\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13573/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13573/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13572",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13572/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13572/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13572/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13572",
        "id": 2000670206,
        "node_id": "PR_kwDOIPDwls5f1MAj",
        "number": 13572,
        "title": "Nasa api tool revision",
        "user": {
            "login": "matiasjacob25",
            "id": 88005863,
            "node_id": "MDQ6VXNlcjg4MDA1ODYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/88005863?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matiasjacob25",
            "html_url": "https://github.com/matiasjacob25",
            "followers_url": "https://api.github.com/users/matiasjacob25/followers",
            "following_url": "https://api.github.com/users/matiasjacob25/following{/other_user}",
            "gists_url": "https://api.github.com/users/matiasjacob25/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matiasjacob25/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matiasjacob25/subscriptions",
            "organizations_url": "https://api.github.com/users/matiasjacob25/orgs",
            "repos_url": "https://api.github.com/users/matiasjacob25/repos",
            "events_url": "https://api.github.com/users/matiasjacob25/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matiasjacob25/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-19T02:42:48Z",
        "updated_at": "2023-11-19T02:43:02Z",
        "closed_at": "2023-11-19T02:43:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13572",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13572",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13572.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13572.patch",
            "merged_at": null
        },
        "body": "- compiled feature branch components into single working component\r\n- trial ran integration tests",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13572/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13572/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13571",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13571/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13571/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13571/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13571",
        "id": 2000664042,
        "node_id": "PR_kwDOIPDwls5f1K2q",
        "number": 13571,
        "title": "MMR with Vectara",
        "user": {
            "login": "ofermend",
            "id": 1823547,
            "node_id": "MDQ6VXNlcjE4MjM1NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1823547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ofermend",
            "html_url": "https://github.com/ofermend",
            "followers_url": "https://api.github.com/users/ofermend/followers",
            "following_url": "https://api.github.com/users/ofermend/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofermend/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ofermend/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofermend/subscriptions",
            "organizations_url": "https://api.github.com/users/ofermend/orgs",
            "repos_url": "https://api.github.com/users/ofermend/repos",
            "events_url": "https://api.github.com/users/ofermend/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ofermend/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-19T02:13:28Z",
        "updated_at": "2023-12-14T21:12:36Z",
        "closed_at": "2023-12-14T21:12:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13571",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13571",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13571.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13571.patch",
            "merged_at": null
        },
        "body": "  - **Description:** Vectara implements MMR in the backend. This allows to invoke that MMR natively.\r\n  - **Tag maintainer:** @baskaryan  \r\n  - **Twitter handle:** @ofermend \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13571/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13571/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13570",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13570/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13570/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13570/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13570",
        "id": 2000616771,
        "node_id": "PR_kwDOIPDwls5f1BcL",
        "number": 13570,
        "title": "experimental[patch]: release 0.0.43",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-18T23:22:14Z",
        "updated_at": "2023-11-28T23:38:10Z",
        "closed_at": "2023-11-28T23:38:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13570",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13570",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13570.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13570.patch",
            "merged_at": "2023-11-28T23:38:09Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13570/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13570/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13569",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13569/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13569/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13569/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13569",
        "id": 2000603949,
        "node_id": "PR_kwDOIPDwls5f0_Ce",
        "number": 13569,
        "title": "update multi index templates",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-18T22:31:16Z",
        "updated_at": "2023-11-18T22:42:23Z",
        "closed_at": "2023-11-18T22:42:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13569",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13569",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13569.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13569.patch",
            "merged_at": "2023-11-18T22:42:22Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13569/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13569/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13568",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13568/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13568/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13568/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13568",
        "id": 2000601578,
        "node_id": "PR_kwDOIPDwls5f0-nP",
        "number": 13568,
        "title": "Add error rate",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-18T22:22:28Z",
        "updated_at": "2023-11-21T15:51:32Z",
        "closed_at": "2023-11-21T15:51:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13568",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13568",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13568.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13568.patch",
            "merged_at": "2023-11-21T15:51:31Z"
        },
        "body": "To the in-memory outputs. Separate it out from the outputs so it's present in the dataframe.describe() results",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13568/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13568/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13567",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13567/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13567/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13567/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13567",
        "id": 2000596810,
        "node_id": "I_kwDOIPDwls53Pq9K",
        "number": 13567,
        "title": "Upgrading to OpenAI Python 1.0+ = ImportError: Could not import openai python package.",
        "user": {
            "login": "johnsonfamily1234",
            "id": 65795972,
            "node_id": "MDQ6VXNlcjY1Nzk1OTcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/65795972?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/johnsonfamily1234",
            "html_url": "https://github.com/johnsonfamily1234",
            "followers_url": "https://api.github.com/users/johnsonfamily1234/followers",
            "following_url": "https://api.github.com/users/johnsonfamily1234/following{/other_user}",
            "gists_url": "https://api.github.com/users/johnsonfamily1234/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/johnsonfamily1234/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/johnsonfamily1234/subscriptions",
            "organizations_url": "https://api.github.com/users/johnsonfamily1234/orgs",
            "repos_url": "https://api.github.com/users/johnsonfamily1234/repos",
            "events_url": "https://api.github.com/users/johnsonfamily1234/events{/privacy}",
            "received_events_url": "https://api.github.com/users/johnsonfamily1234/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-18T22:04:33Z",
        "updated_at": "2023-11-21T00:39:08Z",
        "closed_at": "2023-11-21T00:39:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nUsing langchain 0.0.337 python, FastAPI.\r\n\r\nWhen I use openai up through 0.28.1 it works fine. Upgrading to 1.0.0 or above results in the following error (when I try to use ChatOpenAI from langchain.chat_models):\r\n\r\n\"ImportError: Could not import openai python package. Please install it with `pip install openai`.\"\r\n\r\nTrying to follow this notebook to integrate vision preview model:\r\nhttps://github.com/langchain-ai/langchain/blob/master/cookbook/openai_v1_cookbook.ipynb\r\n\r\nAny thoughts on what I might try? Thanks!\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSteps to reproduce:\r\n\r\n1. install openai (1.0.0), langchain (0.0.337) & langchain-experimental (0.0.39)\r\n2. in FastAPI route, import ChatOpenAI from langchain.chat_models\r\n3. Use ChatOpenAI as usual (working fine w/ openai <= 0.28.1\r\n\r\n`    llm = ChatOpenAI(\r\n      temperature=temperature,\r\n      streaming=True,\r\n      verbose=True,\r\n      model_name=nameCode,\r\n      max_tokens=tokens,\r\n      callbacks=[callback],\r\n      openai_api_key=relevantAiKey,\r\n    )`\n\n### Expected behavior\n\nI would expect to not get a \"failed import\" error when the package is clearly installed.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13567/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13567/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13566",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13566/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13566/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13566/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13566",
        "id": 2000596258,
        "node_id": "I_kwDOIPDwls53Pq0i",
        "number": 13566,
        "title": "from_llm_and_api_docs fails on gpt-4-1106-preview",
        "user": {
            "login": "essenciary",
            "id": 11292378,
            "node_id": "MDQ6VXNlcjExMjkyMzc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11292378?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/essenciary",
            "html_url": "https://github.com/essenciary",
            "followers_url": "https://api.github.com/users/essenciary/followers",
            "following_url": "https://api.github.com/users/essenciary/following{/other_user}",
            "gists_url": "https://api.github.com/users/essenciary/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/essenciary/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/essenciary/subscriptions",
            "organizations_url": "https://api.github.com/users/essenciary/orgs",
            "repos_url": "https://api.github.com/users/essenciary/repos",
            "events_url": "https://api.github.com/users/essenciary/events{/privacy}",
            "received_events_url": "https://api.github.com/users/essenciary/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-18T22:02:27Z",
        "updated_at": "2023-11-20T09:56:55Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n```\r\npoetry show langchain\r\n name         : langchain                                             \r\n version      : 0.0.259                                               \r\n description  : Building applications with LLMs through composability \r\n\r\ndependencies\r\n - aiohttp >=3.8.3,<4.0.0\r\n - async-timeout >=4.0.0,<5.0.0\r\n - dataclasses-json >=0.5.7,<0.6.0\r\n - langsmith >=0.0.11,<0.1.0\r\n - numexpr >=2.8.4,<3.0.0\r\n - numpy >=1,<2\r\n - openapi-schema-pydantic >=1.2,<2.0\r\n - pydantic >=1,<2\r\n - PyYAML >=5.3\r\n - requests >=2,<3\r\n - SQLAlchemy >=1.4,<3\r\n - tenacity >=8.1.0,<9.0.0\r\n ```\r\n\r\nPython: v3.10.12\r\n\r\n### Who can help?\r\n\r\n@hwchase17 @agola11 \r\nWith the current GPT-4 model, the invocation of `from_llm_and_api_docs` works as expected. However, when switching the model to the upcoming `gpt-4-1106-preview`, the function fails as the LLM, instead of returning the URL for the API call, returns a verbose response: \r\n\r\n```\r\nLLM response on_text:  To generate the API URL for the user's question \"basketball tip of the day\", we need to include the `sport` parameter with the value \"Basketball\" since the user is asking about basketball. We also need to include the `event_start` parameter with today's date to get the tip of the day. Since the user is asking for a singular \"tip\", we should set the `limit` parameter to 1. The `order` parameter should be set to \"popularity\" if not specified, as per the documentation.\r\n\r\nGiven that today is 2023-11-18, the API URL would be:\r\n\r\nhttp://<domain_name_hidden>/search/ai?date=2023-11-18&limit=1&order=popularity\r\n```\r\n\r\nThe prompt should be refined or extra logic should be added to retrieve just the URL with the upcoming GPT-4 model.\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nTry to get the upcoming GPT-4 model to return just the URL of the API call. \r\n\r\n```\r\nERROR:root:No connection adapters were found for 'To generate the API URL for the user\\'s question \"<question edited>\", we need to include the `sport` parameter with the value \"Basketball\" since the user is asking about basketball. We also need to include the `event_start` parameter with today\\'s date to get the tip of the day. The `order` parameter should be set to \"popularity\" if not specified, as per the documentation.\\n\\nGiven that today is 2023-11-18, the API URL would be:\\n\\nhttp://<domain_removed>/search/ai?date=2023-11-18&limit=1&order=popularity'\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe LLM to return just the URL and for Langchain to not error out. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13566/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13566/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13565",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13565/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13565/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13565/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13565",
        "id": 2000580109,
        "node_id": "I_kwDOIPDwls53Pm4N",
        "number": 13565,
        "title": "pydantic.error_wrappers.ValidationError: 1 validation error for RetrievalQA separators   extra fields not permitted (type=value_error.extra)",
        "user": {
            "login": "DARK-art108",
            "id": 53623244,
            "node_id": "MDQ6VXNlcjUzNjIzMjQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/53623244?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DARK-art108",
            "html_url": "https://github.com/DARK-art108",
            "followers_url": "https://api.github.com/users/DARK-art108/followers",
            "following_url": "https://api.github.com/users/DARK-art108/following{/other_user}",
            "gists_url": "https://api.github.com/users/DARK-art108/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DARK-art108/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DARK-art108/subscriptions",
            "organizations_url": "https://api.github.com/users/DARK-art108/orgs",
            "repos_url": "https://api.github.com/users/DARK-art108/repos",
            "events_url": "https://api.github.com/users/DARK-art108/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DARK-art108/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-18T21:06:02Z",
        "updated_at": "2023-11-18T21:14:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nFacing this error while executing the langchain code.\r\n```\r\npydantic.error_wrappers.ValidationError: 1 validation error for RetrievalQA\r\nseparators\r\n  extra fields not permitted (type=value_error.extra)\r\n```\r\n\r\nCode for retrivalQA\r\ndef retrieval_qa_chain(llm, prompt, retriever):\r\n    qa_chain = RetrievalQA.from_chain_type(\r\n    llm=llm,\r\n    chain_type=\"stuff\",\r\n    retriever = retriever,\r\n    verbose=True,\r\n    callbacks=[handler],\r\n    chain_type_kwargs={\"prompt\": prompt},\r\n    return_source_documents=True\r\n    )\r\n    return qa_chain\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\ndef retrieval_qa_chain(llm, prompt, retriever):\r\n    qa_chain = RetrievalQA.from_chain_type(\r\n    llm=llm,\r\n    chain_type=\"stuff\",\r\n    retriever = retriever,\r\n    verbose=True,\r\n    callbacks=[handler],\r\n    chain_type_kwargs={\"prompt\": prompt},\r\n    return_source_documents=True\r\n    )\r\n    return qa_chain\r\n```\r\n```\r\n    \r\ndef retrieval_qa_chain(llm, prompt, retriever):\r\n    qa_chain = RetrievalQA.from_chain_type(\r\n    llm=llm,\r\n    chain_type=\"stuff\",\r\n    retriever = retriever,\r\n    verbose=True,\r\n    callbacks=[handler],\r\n    chain_type_kwargs={\"prompt\": prompt},\r\n    return_source_documents=True\r\n    )\r\n    return qa_chain\r\n```\n\n### Expected behavior\n\nNeed a fix for the above error",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13565/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13565/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13564",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13564/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13564/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13564/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13564",
        "id": 2000572598,
        "node_id": "PR_kwDOIPDwls5f049m",
        "number": 13564,
        "title": "bump 338, exp 42",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-18T20:42:52Z",
        "updated_at": "2023-11-18T23:12:08Z",
        "closed_at": "2023-11-18T23:12:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13564",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13564",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13564.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13564.patch",
            "merged_at": "2023-11-18T23:12:08Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13564/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13564/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13563",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13563/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13563/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13563/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13563",
        "id": 2000522960,
        "node_id": "I_kwDOIPDwls53PY7Q",
        "number": 13563,
        "title": "Bug: Weaviate raise doc_id error using with ParentDocumentRetriever ",
        "user": {
            "login": "abhijithnair1",
            "id": 134917475,
            "node_id": "U_kgDOCAqtYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/134917475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abhijithnair1",
            "html_url": "https://github.com/abhijithnair1",
            "followers_url": "https://api.github.com/users/abhijithnair1/followers",
            "following_url": "https://api.github.com/users/abhijithnair1/following{/other_user}",
            "gists_url": "https://api.github.com/users/abhijithnair1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abhijithnair1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abhijithnair1/subscriptions",
            "organizations_url": "https://api.github.com/users/abhijithnair1/orgs",
            "repos_url": "https://api.github.com/users/abhijithnair1/repos",
            "events_url": "https://api.github.com/users/abhijithnair1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abhijithnair1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-18T18:09:56Z",
        "updated_at": "2023-11-18T18:33:42Z",
        "closed_at": "2023-11-18T18:33:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain Version: 0.0.337\r\nPython: 3.10\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\nNote: I am facing this issue with Weaviate, when I use the Chroma Vector Store it's working fine.\r\n\r\nI am trying to use \"Weaviate Vector DB\" with  ParentDocumentRetriever and I am getting this error during the pipeline:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\nCell In[13], line 1\r\n----> 1 retriever.get_relevant_documents(\"realization\")\r\n\r\nFile ~/miniconda3/envs/docs_qa/lib/python3.10/site-packages/langchain/schema/retriever.py:211, in BaseRetriever.get_relevant_documents(self, query, callbacks, tags, metadata, run_name, **kwargs)\r\n    209 except Exception as e:\r\n    210     run_manager.on_retriever_error(e)\r\n--> 211     raise e\r\n    212 else:\r\n    213     run_manager.on_retriever_end(\r\n    214         result,\r\n    215         **kwargs,\r\n    216     )\r\n\r\nFile ~/miniconda3/envs/docs_qa/lib/python3.10/site-packages/langchain/schema/retriever.py:204, in BaseRetriever.get_relevant_documents(self, query, callbacks, tags, metadata, run_name, **kwargs)\r\n    202 _kwargs = kwargs if self._expects_other_args else {}\r\n    203 if self._new_arg_supported:\r\n--> 204     result = self._get_relevant_documents(\r\n    205         query, run_manager=run_manager, **_kwargs\r\n    206     )\r\n    207 else:\r\n    208     result = self._get_relevant_documents(query, **_kwargs)\r\n\r\nFile ~/miniconda3/envs/docs_qa/lib/python3.10/site-packages/langchain/retrievers/multi_vector.py:36, in MultiVectorRetriever._get_relevant_documents(self, query, run_manager)\r\n     34 ids = []\r\n     35 for d in sub_docs:\r\n---> 36     if d.metadata[self.id_key] not in ids:\r\n     37         ids.append(d.metadata[self.id_key])\r\n     38 docs = self.docstore.mget(ids)\r\n\r\nKeyError: 'doc_id'\r\n```\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```\r\nimport weaviate\r\nfrom langchain.vectorstores.weaviate import Weaviate\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.retrievers import ParentDocumentRetriever\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\nfrom langchain.storage import RedisStore\r\nfrom langchain.schema import Document\r\nfrom langchain.storage._lc_store import create_kv_docstore\r\nfrom langchain.storage import InMemoryStore\r\nfrom langchain.vectorstores import Chroma\r\nimport redis\r\nimport os\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = \"\"\r\nclient = weaviate.Client(url=\"https://test-n5.weaviate.network\")\r\nembeddings = OpenAIEmbeddings()\r\nvectorstore = Weaviate(client=client, embedding=embeddings, index_name=\"test1\".capitalize(), text_key=\"text\", by_text=False)\r\n\r\nparent_splitter = RecursiveCharacterTextSplitter(chunk_size=50, chunk_overlap=1)\r\nchild_splitter = RecursiveCharacterTextSplitter(chunk_size=5, chunk_overlap=1)\r\nstore = InMemoryStore()\r\n\r\nretriever = ParentDocumentRetriever(\r\n    vectorstore=vectorstore,\r\n    docstore=store,\r\n    child_splitter=child_splitter,\r\n    parent_splitter=parent_splitter,\r\n    id_key=\"doc_id\"\r\n)\r\n\r\ndocs = [\r\n    \"The sun is shining brightly in the clear blue sky.\",\r\n    \"Roses are red, violets are blue, sugar is sweet, and so are you.\",\r\n    \"The quick brown fox jumps over the lazy dog.\",\r\n    \"Life is like a camera. Focus on what's important, capture the good times, develop from the negatives, and if things don't work out, take another shot.\",\r\n    \"A journey of a thousand miles begins with a single step.\",\r\n    \"The only limit to our realization of tomorrow will be our doubts of today.\",\r\n    \"Success is not final, failure is not fatal: It is the courage to continue that counts.\",\r\n    \"Happiness can be found even in the darkest of times if one only remembers to turn on the light.\"\r\n]\r\ndocs = [Document(page_content=text) for en, text in enumerate(docs)]\r\nretriever.add_documents(docs)\r\n```\r\n\r\nThe output of below line below didn't contain a ID_Key for mapping the child to parent.\r\n`vectorstore.similarity_search(\"realization\", k=4)`\r\n\r\nSo, when I tried `retriever.get_relevant_documents(\"realization\")` this returned the KeyError I mentioned.\r\n\r\n### Expected behavior\r\n\r\nThe output of `vectorstore.similarity_search(\"realization\", k=2)` should have been:\r\n\r\n```\r\n[Document(page_content='real', metadata={\"doc_id\": \"fdsfsdfsdfsdfsd\"}),\r\n Document(page_content='real'), metadata={\"doc_id\": \"rewrwetet\"}]\r\n```\r\n\r\nbut the output I got was:\r\n\r\n[Document(page_content='real'),\r\n Document(page_content='real')]\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13563/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13563/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13562",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13562/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13562/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13562/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13562",
        "id": 2000516549,
        "node_id": "I_kwDOIPDwls53PXXF",
        "number": 13562,
        "title": "BedrockRerank using newly available Cohere embedding model",
        "user": {
            "login": "austinmw",
            "id": 12224358,
            "node_id": "MDQ6VXNlcjEyMjI0MzU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12224358?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/austinmw",
            "html_url": "https://github.com/austinmw",
            "followers_url": "https://api.github.com/users/austinmw/followers",
            "following_url": "https://api.github.com/users/austinmw/following{/other_user}",
            "gists_url": "https://api.github.com/users/austinmw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/austinmw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/austinmw/subscriptions",
            "organizations_url": "https://api.github.com/users/austinmw/orgs",
            "repos_url": "https://api.github.com/users/austinmw/repos",
            "events_url": "https://api.github.com/users/austinmw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/austinmw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5959659008,
                "node_id": "LA_kwDOIPDwls8AAAABYzkuAA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20aws",
                "name": "integration: aws",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to Amazon Web Services (AWS) integrations"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-18T17:51:30Z",
        "updated_at": "2023-11-22T16:15:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nHi, the new Cohere embedding models are now available on Amazon Bedrock. How can we use them for their reranking capability (instead of just embedding via BedrockEmbedding class)\r\n\r\n### Motivation\r\n\r\nThese models perform well for reranking",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13562/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13562/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13561",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13561/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13561/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13561/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13561",
        "id": 2000493996,
        "node_id": "PR_kwDOIPDwls5f0pT2",
        "number": 13561,
        "title": "Change docs: add -U flag (upgrade) to \"pip install -U duckduckgo_search\"",
        "user": {
            "login": "deedy5",
            "id": 65482418,
            "node_id": "MDQ6VXNlcjY1NDgyNDE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/65482418?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/deedy5",
            "html_url": "https://github.com/deedy5",
            "followers_url": "https://api.github.com/users/deedy5/followers",
            "following_url": "https://api.github.com/users/deedy5/following{/other_user}",
            "gists_url": "https://api.github.com/users/deedy5/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/deedy5/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/deedy5/subscriptions",
            "organizations_url": "https://api.github.com/users/deedy5/orgs",
            "repos_url": "https://api.github.com/users/deedy5/repos",
            "events_url": "https://api.github.com/users/deedy5/events{/privacy}",
            "received_events_url": "https://api.github.com/users/deedy5/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-18T16:45:28Z",
        "updated_at": "2023-12-05T03:48:56Z",
        "closed_at": "2023-12-05T03:48:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13561",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13561",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13561.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13561.patch",
            "merged_at": null
        },
        "body": "change all the lines like `pip install duckduckgo_search` to `pip install -U duckduckgo_search`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13561/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13561/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13560",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13560/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13560/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13560/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13560",
        "id": 2000493292,
        "node_id": "I_kwDOIPDwls53PRrs",
        "number": 13560,
        "title": "Release 0.0.337 breaks MongoDBAtlasVectorSearch.from_connection_string?",
        "user": {
            "login": "bstraehle",
            "id": 50965537,
            "node_id": "MDQ6VXNlcjUwOTY1NTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/50965537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bstraehle",
            "html_url": "https://github.com/bstraehle",
            "followers_url": "https://api.github.com/users/bstraehle/followers",
            "following_url": "https://api.github.com/users/bstraehle/following{/other_user}",
            "gists_url": "https://api.github.com/users/bstraehle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bstraehle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bstraehle/subscriptions",
            "organizations_url": "https://api.github.com/users/bstraehle/orgs",
            "repos_url": "https://api.github.com/users/bstraehle/repos",
            "events_url": "https://api.github.com/users/bstraehle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bstraehle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-11-18T16:43:18Z",
        "updated_at": "2023-11-28T14:54:05Z",
        "closed_at": "2023-11-24T01:51:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHi there,\r\n\r\nI have a LangChain app at https://huggingface.co/spaces/bstraehle/openai-llm-rag/blob/main/app.py.  Using the latest release 0.0.337 produces the error below.  Pinning the library to release 0.0.336 works as expected. \r\n\r\n:blue_heart: LangChain, thanks!\r\n\r\nBernd\r\n\r\n---\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/user/app/app.py\", line 129, in invoke\r\n    db = document_retrieval_mongodb(llm, prompt)\r\n  File \"/home/user/app/app.py\", line 91, in document_retrieval_mongodb\r\n    db = MongoDBAtlasVectorSearch.from_connection_string(MONGODB_URI,\r\n  File \"/home/user/.local/lib/python3.10/site-packages/langchain/vectorstores/mongodb_atlas.py\", line 109, in from_connection_string\r\n    raise ImportError(\r\nImportError: Could not import pymongo, please install it with `pip install pymongo`.\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSteps to reproduce the behavior:\r\n\r\n1. In file https://huggingface.co/spaces/bstraehle/openai-llm-rag/blob/main/requirements.txt, unpin the langchain library (or pin it to release 0.0.337).\r\n2. Use the app at https://huggingface.co/spaces/bstraehle/openai-llm-rag with MongoDB selected to invoke `MongoDBAtlasVectorSearch.from_connection_string`, which produces the error.\n\n### Expected behavior\n\nWhen using release 0.0.337 `MongoDBAtlasVectorSearch.from_connection_string`, error \"ImportError: Could not import pymongo, please install it with `pip install pymongo`.\" should not happen.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13560/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13560/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13559",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13559/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13559/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13559/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13559",
        "id": 2000456963,
        "node_id": "PR_kwDOIPDwls5f0iI2",
        "number": 13559,
        "title": "move streaming stdout",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-18T15:03:15Z",
        "updated_at": "2023-11-18T17:24:50Z",
        "closed_at": "2023-11-18T17:24:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13559",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13559",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13559.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13559.patch",
            "merged_at": "2023-11-18T17:24:49Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13559/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13559/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13558",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13558/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13558/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13558/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13558",
        "id": 2000456203,
        "node_id": "I_kwDOIPDwls53PIoL",
        "number": 13558,
        "title": "Response taking way to long",
        "user": {
            "login": "ameen-samhan",
            "id": 51539337,
            "node_id": "MDQ6VXNlcjUxNTM5MzM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/51539337?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ameen-samhan",
            "html_url": "https://github.com/ameen-samhan",
            "followers_url": "https://api.github.com/users/ameen-samhan/followers",
            "following_url": "https://api.github.com/users/ameen-samhan/following{/other_user}",
            "gists_url": "https://api.github.com/users/ameen-samhan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ameen-samhan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ameen-samhan/subscriptions",
            "organizations_url": "https://api.github.com/users/ameen-samhan/orgs",
            "repos_url": "https://api.github.com/users/ameen-samhan/repos",
            "events_url": "https://api.github.com/users/ameen-samhan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ameen-samhan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-18T15:01:10Z",
        "updated_at": "2023-11-19T03:14:01Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Im building an embedded chatbot using langchain and openai its working fine but the issue is that the responses takes around 15-25 seconds and i tried to use the time library to know which line is taking this much\r\n`import os\r\nimport sys\r\n\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.document_loaders import TextLoader\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.indexes import VectorstoreIndexCreator\r\nfrom langchain.indexes.vectorstore import VectorStoreIndexWrapper\r\nfrom langchain.vectorstores import Chroma\r\nfrom cachetools import TTLCache\r\nimport time\r\n\r\nimport constants\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = constants.APIKEY\r\ncache = TTLCache(maxsize=100, ttl=3600)  # Example: Cache up to 100 items for 1 hour\r\n\r\nPERSIST = False\r\n\r\ntemplate_prompt = \"If the user greets you, greet back. If there is a link in the response return it as a clickable link as if it is an a tag '<a>'. If you don't know the answer, you can say, 'I don't have the information you need, I recommend contacting our support team for assistance.' Here is the user prompt: 'On the Hawsabah platform\"\r\n\r\n\r\ndef initialize_chatbot():\r\n    query = None\r\n    if len(sys.argv) > 1:\r\n        query = sys.argv[1]\r\n\r\n    if PERSIST and os.path.exists(\"persist\"):\r\n        print(\"Reusing index...\\n\")\r\n        vectorstore = Chroma(persist_directory=\"persist\", embedding_function=OpenAIEmbeddings())\r\n        index = VectorStoreIndexWrapper(vectorstore=vectorstore)\r\n    else:\r\n        loader = TextLoader(\"data/data.txt\")\r\n        if PERSIST:\r\n            index = VectorstoreIndexCreator(vectorstore_kwargs={\"persist_directory\":\"persist\"}).from_loaders([loader])\r\n        else:\r\n            index = VectorstoreIndexCreator().from_loaders([loader])\r\n\r\n    chat_chain = ConversationalRetrievalChain.from_llm(\r\n        llm=ChatOpenAI(model=\"gpt-3.5-turbo\"),\r\n        retriever=index.vectorstore.as_retriever(search_kwargs={\"k\": 1}),\r\n    )\r\n\r\n    chat_history = []\r\n\r\n    return chat_chain, chat_history\r\n\r\nMAX_CONVERSATION_HISTORY = 3  # Set the maximum number of interactions to keep in the buffer\r\n\r\ndef chatbot_response(user_prompt, chat_chain, chat_history):\r\n    # Check if the response is cached\r\n    cached_response = cache.get(user_prompt)\r\n    if cached_response:\r\n        return cached_response\r\n\r\n    # Check if the user's query is a greeting or unrelated\r\n    is_greeting = check_for_greeting(user_prompt)\r\n\r\n    # Conditionally clear the conversation history\r\n    if is_greeting:\r\n        chat_history.clear()\r\n\r\n    query_with_template = f\"{template_prompt} {user_prompt}'\"\r\n    s = time.time() \r\n    result = chat_chain({\"question\": query_with_template, \"chat_history\": chat_history})\r\n    e = time.time()\r\n\r\n    # Append the new interaction and limit the conversation buffer to the last MAX_CONVERSATION_HISTORY interactions\r\n    chat_history.append((user_prompt, result['answer']))\r\n    if len(chat_history) > MAX_CONVERSATION_HISTORY:\r\n        chat_history.pop(0)  # Remove the oldest interaction\r\n\r\n    response = result['answer']\r\n\r\n    # Cache the response for future use\r\n    cache[user_prompt] = response\r\n\r\n    print(\"Time taken by chatbot_response:\", (e - s) * 1000, \"ms\")\r\n\r\n    return response`\r\nthe line result = chat_chain({\"question\": query_with_template, \"chat_history\": chat_history}) was the one taking this long i tried to figure out how to fix this but i couldnt i also tried to implement word streaming to help make it look faster but it only worked for the davinci model. Is there a way or method to make responses faster?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13558/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13558/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13557",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13557/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13557/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13557/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13557",
        "id": 2000440136,
        "node_id": "PR_kwDOIPDwls5f0ez_",
        "number": 13557,
        "title": "migrate openai audio api",
        "user": {
            "login": "redheli",
            "id": 1667374,
            "node_id": "MDQ6VXNlcjE2NjczNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1667374?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/redheli",
            "html_url": "https://github.com/redheli",
            "followers_url": "https://api.github.com/users/redheli/followers",
            "following_url": "https://api.github.com/users/redheli/following{/other_user}",
            "gists_url": "https://api.github.com/users/redheli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/redheli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/redheli/subscriptions",
            "organizations_url": "https://api.github.com/users/redheli/orgs",
            "repos_url": "https://api.github.com/users/redheli/repos",
            "events_url": "https://api.github.com/users/redheli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/redheli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-18T14:19:07Z",
        "updated_at": "2023-12-05T04:27:55Z",
        "closed_at": "2023-12-05T04:27:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13557",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13557",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13557.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13557.patch",
            "merged_at": "2023-12-05T04:27:55Z"
        },
        "body": "for issue https://github.com/langchain-ai/langchain/issues/13162\r\nmigrate openai audio api, as [openai v1.0.0 Migration Guide](https://github.com/openai/openai-python/discussions/742) \r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13557/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13557/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13556",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13556/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13556/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13556/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13556",
        "id": 2000431479,
        "node_id": "I_kwDOIPDwls53PCl3",
        "number": 13556,
        "title": "Adding DuckDuckGo search HTTPError handling",
        "user": {
            "login": "edwardmfho",
            "id": 34835565,
            "node_id": "MDQ6VXNlcjM0ODM1NTY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/34835565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edwardmfho",
            "html_url": "https://github.com/edwardmfho",
            "followers_url": "https://api.github.com/users/edwardmfho/followers",
            "following_url": "https://api.github.com/users/edwardmfho/following{/other_user}",
            "gists_url": "https://api.github.com/users/edwardmfho/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edwardmfho/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edwardmfho/subscriptions",
            "organizations_url": "https://api.github.com/users/edwardmfho/orgs",
            "repos_url": "https://api.github.com/users/edwardmfho/repos",
            "events_url": "https://api.github.com/users/edwardmfho/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edwardmfho/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-11-18T13:58:54Z",
        "updated_at": "2023-11-18T14:44:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nBumped into HTTPError when using DuckDuckGo search wrapper in an agent, currently using `langchain==0.0.336`. \r\n\r\nHere's the snippet of the traceback as below.\r\n```\r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/utilities/duckduckgo_search.py\", line 64, in run\r\n    snippets = self.get_snippets(query)\r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/utilities/duckduckgo_search.py\", line 55, in get_snippets\r\n    for i, res in enumerate(results, 1):\r\n  File \"/path/to/venv/lib/python3.10/site-packages/duckduckgo_search/duckduckgo_search.py\", line 96, in text\r\n    for i, result in enumerate(results, start=1):\r\n  File \"/path/to/venv/lib/python3.10/site-packages/duckduckgo_search/duckduckgo_search.py\", line 148, in _text_api\r\n    resp = self._get_url(\"GET\", \"https://links.duckduckgo.com/d.js\", params=payload)\r\n  File \"/path/to/venv/lib/python3.10/site-packages/duckduckgo_search/duckduckgo_search.py\", line 55, in _get_url\r\n    raise ex\r\n  File \"/path/to/venv/lib/python3.10/site-packages/duckduckgo_search/duckduckgo_search.py\", line 48, in _get_url\r\n    raise httpx._exceptions.HTTPError(\"\")\r\nhttpx.HTTPError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/path/to/src/single_host.py\", line 179, in <module>\r\n    response = chain({\"topic\": \"Why did Sam Altman got fired by OpenAI.\", \r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/chains/base.py\", line 310, in __call__\r\n    raise e\r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/chains/base.py\", line 306, in __call__\r\n    else self._call(inputs)\r\n  File \"/path/to/src/single_host.py\", line 163, in _call\r\n    script = script_chain.run({\"topic\": inputs[\"topic\"], \"focuses\": inputs[\"focuses\"], \"keypoints\": keypoints})\r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/chains/base.py\", line 505, in run\r\n    return self(args[0], callbacks=callbacks, tags=tags, metadata=metadata)[\r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/chains/base.py\", line 310, in __call__\r\n    raise e\r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/chains/base.py\", line 306, in __call__\r\n    else self._call(inputs)\r\n  File \"/path/to/src/single_host.py\", line 117, in _call\r\n    information = agent.run(background_info_search_formatted)\r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/chains/base.py\", line 505, in run\r\n    return self(args[0], callbacks=callbacks, tags=tags, metadata=metadata)[\r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/chains/base.py\", line 310, in __call__\r\n    raise e\r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/chains/base.py\", line 304, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/agents/agent.py\", line 1245, in _call\r\n    next_step_output = self._take_next_step(\r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/agents/agent.py\", line 1095, in _take_next_step\r\n    observation = tool.run(\r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/tools/base.py\", line 344, in run\r\n    raise e\r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/tools/base.py\", line 337, in run\r\n    self._run(*tool_args, run_manager=run_manager, **tool_kwargs)\r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/tools/base.py\", line 510, in _run\r\n    self.func(\r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/tools/base.py\", line 344, in run\r\n    raise e\r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/tools/base.py\", line 337, in run\r\n    self._run(*tool_args, run_manager=run_manager, **tool_kwargs)\r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/tools/ddg_search/tool.py\", line 36, in _run\r\n    return self.api_wrapper.run(query)\r\n  File \"/path/to/venv/lib/python3.10/site-packages/langchain/utilities/duckduckgo_search.py\", line 67, in run\r\n    raise ToolException(\"DuckDuckGo Search encountered HTTPError.\")\r\n```\r\n\r\nI tried to add an error handling in the method `run()` in `langchain/utilities/duckduckgo_search.py`, something look like below:\r\n\r\n```\r\ndef run(self, query: str) -> str:\r\n        try:\r\n            snippets = self.get_snippets(query)\r\n            return \" \".join(snippets)\r\n        except httpx._exceptions.HTTPError as e:\r\n            raise ToolException(\"DuckDuckGo Search encountered HTTPError.\")\r\n```\r\n\r\nI have also added `handle_tool_error`, where it was copied from the langchain [documentation](https://python.langchain.com/docs/modules/agents/tools/custom_tools)\r\n```\r\ndef _handle_error(error: ToolException) -> str:\r\n    return (\r\n        \"The following errors occurred during tool execution:\"\r\n        + error.args[0]\r\n        + \"Please try another tool.\"\r\n    )\r\n```\r\n\r\nHowever these methods do not seems to stop and still cause the error showed in first code block above. Am I implementing this incorrectly? or should there be other mechanism to handle the error occuried? \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Adding `handle_tool_errors` and passing the `_handle_error` function into it. \r\n\r\n```\r\nnews_tool = Tool.from_function(name=\"News Search\", \r\n                   func=news_duckduckgo.run, \r\n                   description=\"News search to help you look up latest news, which help you to understand latest current affair, and being up-to-date.\",\r\n                   handle_tool_errors=_handle_error)\r\n```\r\n2. Does not seems to work, so I tried to change the DuckDuckGo Wrapper, as described above. \r\n3. HTTPError still lead to abrupt stop of Agent actions. \n\n### Expected behavior\n\nExpecting a proper error handling method, if tool fails, Agent moves on, or try n time before moving on to next step. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13556/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13556/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13555",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13555/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13555/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13555/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13555",
        "id": 2000423580,
        "node_id": "PR_kwDOIPDwls5f0bjO",
        "number": 13555,
        "title": "improve sparql-qa-chain",
        "user": {
            "login": "felixocker",
            "id": 45704090,
            "node_id": "MDQ6VXNlcjQ1NzA0MDkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/45704090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felixocker",
            "html_url": "https://github.com/felixocker",
            "followers_url": "https://api.github.com/users/felixocker/followers",
            "following_url": "https://api.github.com/users/felixocker/following{/other_user}",
            "gists_url": "https://api.github.com/users/felixocker/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felixocker/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felixocker/subscriptions",
            "organizations_url": "https://api.github.com/users/felixocker/orgs",
            "repos_url": "https://api.github.com/users/felixocker/repos",
            "events_url": "https://api.github.com/users/felixocker/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felixocker/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714130,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rkg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XL",
                "name": "size:XL",
                "color": "D4C5F9",
                "default": false,
                "description": "This PR changes 500-999 lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-18T13:38:18Z",
        "updated_at": "2023-12-01T23:39:50Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13555",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13555",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13555.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13555.patch",
            "merged_at": null
        },
        "body": "**Description:**\r\n* fixed the SPARQL queries for schema extraction - in some cases not all classes were loaded\r\n* improved the prompt for creating natural language answers from the query results\r\n* fixed the RDF example - the content was not retrieved from the graph DB due to the name not matching the one in the graph\r\n* added an OWL example with a local file - simplified, but inspired by @LorenzBuehmann's example in #8907\r\n\r\n**Issue:**\r\nloosely related to issue #8907 and the discussion within PR #11240. the issues mentioned there were resolved in #9136, but made me notice another issue where classes were missing in the extracted schema\r\n\r\n**Dependencies:**\r\nnone\r\n\r\n**Tag maintainer:**\r\n@baskaryan\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13555/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13555/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13553",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13553/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13553/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13553/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13553",
        "id": 2000411141,
        "node_id": "PR_kwDOIPDwls5f0ZKg",
        "number": 13553,
        "title": "Add embedchain retriever",
        "user": {
            "login": "taranjeet",
            "id": 4302268,
            "node_id": "MDQ6VXNlcjQzMDIyNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4302268?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/taranjeet",
            "html_url": "https://github.com/taranjeet",
            "followers_url": "https://api.github.com/users/taranjeet/followers",
            "following_url": "https://api.github.com/users/taranjeet/following{/other_user}",
            "gists_url": "https://api.github.com/users/taranjeet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/taranjeet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/taranjeet/subscriptions",
            "organizations_url": "https://api.github.com/users/taranjeet/orgs",
            "repos_url": "https://api.github.com/users/taranjeet/repos",
            "events_url": "https://api.github.com/users/taranjeet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/taranjeet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-18T12:58:42Z",
        "updated_at": "2023-11-20T06:25:15Z",
        "closed_at": "2023-11-20T01:35:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13553",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13553",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13553.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13553.patch",
            "merged_at": "2023-11-20T01:35:03Z"
        },
        "body": "**Description:**\r\n\r\nThis commit adds embedchain retriever along with tests and docs. Embedchain is a RAG framework to create data pipelines.\r\n\r\n**Twitter handle:**\r\n- [Taranjeet's twitter](https://twitter.com/taranjeetio) and [Embedchain's twitter](https://twitter.com/embedchain)\r\n\r\n**Reviewer**\r\n@hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13553/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13553/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13551",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13551/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13551/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13551/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13551",
        "id": 2000367453,
        "node_id": "I_kwDOIPDwls53Oy9d",
        "number": 13551,
        "title": "DOC: add info about how to update the template and the packages of an app created from a template",
        "user": {
            "login": "vanetreg",
            "id": 20775061,
            "node_id": "MDQ6VXNlcjIwNzc1MDYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/20775061?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vanetreg",
            "html_url": "https://github.com/vanetreg",
            "followers_url": "https://api.github.com/users/vanetreg/followers",
            "following_url": "https://api.github.com/users/vanetreg/following{/other_user}",
            "gists_url": "https://api.github.com/users/vanetreg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vanetreg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vanetreg/subscriptions",
            "organizations_url": "https://api.github.com/users/vanetreg/orgs",
            "repos_url": "https://api.github.com/users/vanetreg/repos",
            "events_url": "https://api.github.com/users/vanetreg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vanetreg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-18T10:44:59Z",
        "updated_at": "2023-11-18T11:06:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nHow to update the template and packages of an app created from a template?\r\nI checked:\r\nhttps://github.com/langchain-ai/langchain/tree/master/templates\r\nand a couple of templates' README.mds, but this info is missing and it's not obvious for us citizen devs.\r\nI supposed it should be done via langchain-cli, but there's no such option.\r\nSo pls. provide a solution and add it to docs.\n\n### Idea or request for content:\n\nHow to update the template and packages of an app created from a template?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13551/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13551/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13550",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13550/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13550/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13550/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13550",
        "id": 2000291244,
        "node_id": "PR_kwDOIPDwls5f0A3z",
        "number": 13550,
        "title": "import error fix to quickstart.mdx",
        "user": {
            "login": "salted-yu",
            "id": 61446801,
            "node_id": "MDQ6VXNlcjYxNDQ2ODAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/61446801?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/salted-yu",
            "html_url": "https://github.com/salted-yu",
            "followers_url": "https://api.github.com/users/salted-yu/followers",
            "following_url": "https://api.github.com/users/salted-yu/following{/other_user}",
            "gists_url": "https://api.github.com/users/salted-yu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/salted-yu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/salted-yu/subscriptions",
            "organizations_url": "https://api.github.com/users/salted-yu/orgs",
            "repos_url": "https://api.github.com/users/salted-yu/repos",
            "events_url": "https://api.github.com/users/salted-yu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/salted-yu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-18T07:31:43Z",
        "updated_at": "2023-11-20T02:33:50Z",
        "closed_at": "2023-11-20T02:33:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13550",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13550",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13550.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13550.patch",
            "merged_at": null
        },
        "body": "**Description**: I fixed a very small import error in the quickstart docs \r\n(from langchain.llms import OpenAI -> from langchain.llms.openai import OpenAI)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13550/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13550/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13549",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13549/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13549/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13549/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13549",
        "id": 2000206665,
        "node_id": "PR_kwDOIPDwls5fzu6P",
        "number": 13549,
        "title": "feat: load all namespaces",
        "user": {
            "login": "andstu",
            "id": 7581042,
            "node_id": "MDQ6VXNlcjc1ODEwNDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7581042?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andstu",
            "html_url": "https://github.com/andstu",
            "followers_url": "https://api.github.com/users/andstu/followers",
            "following_url": "https://api.github.com/users/andstu/following{/other_user}",
            "gists_url": "https://api.github.com/users/andstu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andstu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andstu/subscriptions",
            "organizations_url": "https://api.github.com/users/andstu/orgs",
            "repos_url": "https://api.github.com/users/andstu/repos",
            "events_url": "https://api.github.com/users/andstu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andstu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-18T04:02:59Z",
        "updated_at": "2023-11-20T01:35:18Z",
        "closed_at": "2023-11-20T01:35:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13549",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13549",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13549.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13549.patch",
            "merged_at": "2023-11-20T01:35:17Z"
        },
        "body": "  - **Description:** This change allows for the `MWDumpLoader` to load all namespaces including custom by default instead of only loading the [default namespaces](https://www.mediawiki.org/wiki/Help:Namespaces#Localisation).\r\n  - **Tag maintainer:** @hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13549/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13549/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13548",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13548/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13548/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13548/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13548",
        "id": 2000187192,
        "node_id": "I_kwDOIPDwls53OG84",
        "number": 13548,
        "title": "AIMessage in output of Qianfan with streaming enabled may lose info about 'additional_kwargs', which causes 'function_call', 'token_usage' info lost.",
        "user": {
            "login": "ruiheng",
            "id": 1283599,
            "node_id": "MDQ6VXNlcjEyODM1OTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1283599?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ruiheng",
            "html_url": "https://github.com/ruiheng",
            "followers_url": "https://api.github.com/users/ruiheng/followers",
            "following_url": "https://api.github.com/users/ruiheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/ruiheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ruiheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ruiheng/subscriptions",
            "organizations_url": "https://api.github.com/users/ruiheng/orgs",
            "repos_url": "https://api.github.com/users/ruiheng/repos",
            "events_url": "https://api.github.com/users/ruiheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ruiheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-18T03:19:52Z",
        "updated_at": "2023-11-19T14:11:55Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain: 0.0.336\r\nPython: 3.11.6\r\nOS: Microsoft Windows [Version 10.0.19045.3693]\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nShould be very easy to reproduce. Just enable streaming and use function call in chat. Info about `function_call` supposed to be in `additional_kwargs` has lost. I found this issue because I wanted to use 'function call' feature.\r\n\r\nThese is a debug output from my console. As you see, output becomes an `AIMessage` with empty `content`,  and `additional_kwargs` is empty.\r\n\r\n```\r\n[llm/end] [1:chain:AgentExecutor > 2:llm:QianfanChatEndpoint] [2.39s] Exiting LLM run with output:\r\n{\r\n  \"generations\": [\r\n    [\r\n      {\r\n        \"text\": \"\",\r\n        \"generation_info\": {\r\n          \"finish_reason\": \"stop\"\r\n        },\r\n        \"type\": \"ChatGeneration\",\r\n        \"message\": {\r\n          \"lc\": 1,\r\n          \"type\": \"constructor\",\r\n          \"id\": [\r\n            \"langchain\",\r\n            \"schema\",\r\n            \"messages\",\r\n            \"AIMessage\"\r\n          ],\r\n          \"kwargs\": {\r\n            \"content\": \"\",\r\n            \"additional_kwargs\": {}\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  ],\r\n  \"llm_output\": {\r\n    \"token_usage\": {},\r\n    \"model_name\": \"ERNIE-Bot\"\r\n  },\r\n  \"run\": null\r\n}\r\n[chain/end] [1:chain:AgentExecutor] [2.40s] Exiting Chain run with output:\r\n{\r\n  \"output\": \"\"\r\n}\r\n```\r\n\r\nA quick-and-dirty hack in `QianfanChatEndpoint` can fix the issue. Please read the following code related to `first_additional_kwargs` (which is added by me).\r\n\r\n```python\r\n    async def _agenerate(\r\n        self,\r\n        messages: List[BaseMessage],\r\n        stop: Optional[List[str]] = None,\r\n        run_manager: Optional[AsyncCallbackManagerForLLMRun] = None,\r\n        **kwargs: Any,\r\n    ) -> ChatResult:\r\n\r\n        if self.streaming:\r\n            completion = \"\"\r\n            token_usage = {}\r\n            first_additional_kwargs = None\r\n            async for chunk in self._astream(messages, stop, run_manager, **kwargs):\r\n                if first_additional_kwargs is None:\r\n                    first_additional_kwargs = chunk.message.additional_kwargs\r\n                completion += chunk.text\r\n\r\n            lc_msg = AIMessage(content=completion, additional_kwargs=first_additional_kwargs or {})\r\n            gen = ChatGeneration(\r\n                message=lc_msg,\r\n                generation_info=dict(finish_reason=\"stop\"),\r\n            )\r\n            return ChatResult(\r\n                generations=[gen],\r\n                llm_output={\"token_usage\": {}, \"model_name\": self.model},\r\n            )\r\n        params = self._convert_prompt_msg_params(messages, **kwargs)\r\n        response_payload = await self.client.ado(**params)\r\n        lc_msg = _convert_dict_to_message(response_payload)\r\n        generations = []\r\n        gen = ChatGeneration(\r\n            message=lc_msg,\r\n            generation_info={\r\n                \"finish_reason\": \"stop\",\r\n                **response_payload.get(\"body\", {}),\r\n            },\r\n        )\r\n        generations.append(gen)\r\n        token_usage = response_payload.get(\"usage\", {})\r\n        llm_output = {\"token_usage\": token_usage, \"model_name\": self.model}\r\n        return ChatResult(generations=generations, llm_output=llm_output)\r\n\r\n```\r\n\r\nSimilarly  `_generate` probably contains the same bug.\r\n\r\nThe following is the new debug output in console. As you can see, 'function call' now works. `additional_kwargs` also contains non-empty `usage`. But `token_usage` in `llm_output` is still empty.\r\n\r\n```\r\n[llm/end] [1:chain:AgentExecutor > 2:llm:QianfanChatEndpointHacked] [2.21s] Exiting LLM run with output:\r\n{\r\n  \"generations\": [\r\n    [\r\n      {\r\n        \"text\": \"\",\r\n        \"generation_info\": {\r\n          \"finish_reason\": \"stop\"\r\n        },\r\n        \"type\": \"ChatGeneration\",\r\n        \"message\": {\r\n          \"lc\": 1,\r\n          \"type\": \"constructor\",\r\n          \"id\": [\r\n            \"langchain\",\r\n            \"schema\",\r\n            \"messages\",\r\n            \"AIMessage\"\r\n          ],\r\n          \"kwargs\": {\r\n            \"content\": \"\",\r\n            \"additional_kwargs\": {\r\n              \"id\": \"as-zh6tasbjyb\",\r\n              \"object\": \"chat.completion\",\r\n              \"created\": 1700274407,\r\n              \"sentence_id\": 0,\r\n              \"is_end\": true,\r\n              \"is_truncated\": false,\r\n              \"result\": \"\",\r\n              \"need_clear_history\": false,\r\n              \"function_call\": {\r\n                \"name\": \"GetCurrentTime\",\r\n                \"arguments\": \"{}\"\r\n              },\r\n              \"search_info\": {\r\n                \"is_beset\": 0,\r\n                \"rewrite_query\": \"\",\r\n                \"search_results\": null\r\n              },\r\n              \"finish_reason\": \"function_call\",\r\n              \"usage\": {\r\n                \"prompt_tokens\": 121,\r\n                \"completion_tokens\": 0,\r\n                \"total_tokens\": 121\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  ],\r\n  \"llm_output\": {\r\n    \"token_usage\": {},\r\n    \"model_name\": \"ERNIE-Bot\"\r\n  },\r\n  \"run\": null\r\n}\r\n```\r\n\n\n### Expected behavior\n\n`additional_kwargs` should not be empty.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13548/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13548/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13547",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13547/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13547/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13547/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13547",
        "id": 2000180229,
        "node_id": "PR_kwDOIPDwls5fzpKC",
        "number": 13547,
        "title": "Implemented the option to include output from map chain in the final result of ConversationalRetrievalChain",
        "user": {
            "login": "paperraptor",
            "id": 88512829,
            "node_id": "MDQ6VXNlcjg4NTEyODI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/88512829?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paperraptor",
            "html_url": "https://github.com/paperraptor",
            "followers_url": "https://api.github.com/users/paperraptor/followers",
            "following_url": "https://api.github.com/users/paperraptor/following{/other_user}",
            "gists_url": "https://api.github.com/users/paperraptor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paperraptor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paperraptor/subscriptions",
            "organizations_url": "https://api.github.com/users/paperraptor/orgs",
            "repos_url": "https://api.github.com/users/paperraptor/repos",
            "events_url": "https://api.github.com/users/paperraptor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paperraptor/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-18T03:01:22Z",
        "updated_at": "2023-11-27T00:09:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13547",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13547",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13547.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13547.patch",
            "merged_at": null
        },
        "body": "**Description:** \r\nMapReduceDocumentChain contains a flag named \u201creturn_intermediate_steps\u201d that allows intermediate steps to be outputted along with the final result. Normally, when this flag is set to True, the final result dictionary should contain a list of intermediate results produced during the map reduce process. However, when a MapReduceDocumentChain object with \u201creturn_intermediate_steps\u201d set to True is used as a part of a ConversationalRetrievalChain object, an error will arise, making it impossible for users to obtain intermediate results of the execution of a ConversationalRetrievalChain object with map reduce.\r\n\r\nThe main cause of the issue seems to be inside  _call() of class BaseConversationalRetrievalChain, where method run() is invoked on self.combine_docs_chain. \r\n<img width=\"502\" alt=\"image\" src=\"https://github.com/langchain-ai/langchain/assets/88512829/c4f71b0d-489f-4b7f-badc-1635c03d76f0\">\r\n\r\nWhen a MapReduceDocumentChain object with \u201creturn_intermediate_steps\u201d set to True is evaluated, there will be two output keys, named \u201coutput_text\u201d and \u201cintermediate_steps\u201d, respectively. Therefore, _ _call_ _() should be used to evaluate such an object. However, inside the method _call() of class BaseConversationalRetrievalChain, it is hardcoded that run() is to be used to evaluate the object, resulting in this error\r\n<img width=\"697\" alt=\"image\" src=\"https://github.com/langchain-ai/langchain/assets/88512829/4264ade0-381c-459c-86ee-7340dc201a60\">\r\n\r\nThis PR modifies the existing code of the ConversationalRetrievalChain to verify if the map reduce document chain passed into combine_docs_chain has the return_intermediate_result flag set to True, and add the intermediate result of map reduce to the output of ConversationalRetrievalChain accordingly.\r\n\r\n **Issue:** \r\n #11209\r\n\r\n**Dependencies:**\r\nNo new dependencies have been added.\r\n\r\nI worked closely with @PitcairnHotdog on this PR\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13547/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13547/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13546",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13546/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13546/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13546/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13546",
        "id": 2000175679,
        "node_id": "I_kwDOIPDwls53OEI_",
        "number": 13546,
        "title": "Issue: When using Qianfan chat model and enabling streaming, get ValueError",
        "user": {
            "login": "TheJerryChang",
            "id": 73481455,
            "node_id": "MDQ6VXNlcjczNDgxNDU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/73481455?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheJerryChang",
            "html_url": "https://github.com/TheJerryChang",
            "followers_url": "https://api.github.com/users/TheJerryChang/followers",
            "following_url": "https://api.github.com/users/TheJerryChang/following{/other_user}",
            "gists_url": "https://api.github.com/users/TheJerryChang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TheJerryChang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TheJerryChang/subscriptions",
            "organizations_url": "https://api.github.com/users/TheJerryChang/orgs",
            "repos_url": "https://api.github.com/users/TheJerryChang/repos",
            "events_url": "https://api.github.com/users/TheJerryChang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TheJerryChang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-18T02:49:13Z",
        "updated_at": "2023-11-28T10:29:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHere is my code:\r\n\r\n\"\"\"For basic init and call\"\"\"\r\nimport os\r\nimport qianfan\r\nfrom langchain.chat_models import QianfanChatEndpoint\r\nfrom langchain.chat_models.base import HumanMessage\r\nos.environ[\"QIANFAN_AK\"] = \"myak\"\r\nos.environ[\"QIANFAN_SK\"] = \"mysk\"\r\n\r\nchat = QianfanChatEndpoint(\r\n    streaming=True,\r\n)\r\nres = chat.stream([HumanMessage(content=\"\u7ed9\u6211\u4e00\u7bc7100\u5b57\u7684\u7761\u524d\u6545\u4e8b\")], streaming=True)\r\nfor r in res:\r\n    print(\"chat resp:\", r)\r\n\r\nAnd after it prints two sentences, returns an error. The full error message is:\r\nTraceback (most recent call last):\r\n  File \"d:\\work\\qianfan_test.py\", line 13, in <module>\r\n    for r in res:\r\n  File \"C:\\Users\\a1383\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\chat_models\\base.py\", line 220, in stream\r\n    raise e\r\n  File \"C:\\Users\\a1383\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\chat_models\\base.py\", line 216, in stream\r\n    generation += chunk\r\n  File \"C:\\Users\\a1383\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\schema\\output.py\", line 94, in __add__\r\n    message=self.message + other.message,\r\n  File \"C:\\Users\\a1383\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\schema\\messages.py\", line 225, in __add__\r\n    additional_kwargs=self._merge_kwargs_dict(\r\n  File \"C:\\Users\\a1383\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\schema\\messages.py\", line 138, in _merge_kwargs_dict\r\n    raise ValueError(\r\nValueError: Additional kwargs key created already exists in this message.\r\n\r\nI am only following the official langchain documentation:https://python.langchain.com/docs/integrations/chat/baidu_qianfan_endpoint \r\nAnd it is not working. What have I done wrong?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13546/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13546/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13545",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13545/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13545/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13545/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13545",
        "id": 2000144571,
        "node_id": "PR_kwDOIPDwls5fzhpp",
        "number": 13545,
        "title": "Fix for oracle schema parsing stated on the issue #7928",
        "user": {
            "login": "Tazc54",
            "id": 45770986,
            "node_id": "MDQ6VXNlcjQ1NzcwOTg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/45770986?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Tazc54",
            "html_url": "https://github.com/Tazc54",
            "followers_url": "https://api.github.com/users/Tazc54/followers",
            "following_url": "https://api.github.com/users/Tazc54/following{/other_user}",
            "gists_url": "https://api.github.com/users/Tazc54/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Tazc54/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Tazc54/subscriptions",
            "organizations_url": "https://api.github.com/users/Tazc54/orgs",
            "repos_url": "https://api.github.com/users/Tazc54/repos",
            "events_url": "https://api.github.com/users/Tazc54/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Tazc54/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-18T01:30:51Z",
        "updated_at": "2023-11-20T01:35:28Z",
        "closed_at": "2023-11-20T01:35:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13545",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13545",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13545.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13545.patch",
            "merged_at": "2023-11-20T01:35:28Z"
        },
        "body": "  - **Description:** In this pull request, we address an issue related to assigning a schema to the SQLDatabase class when utilizing an Oracle database. The current implementation encounters a bug where, upon attempting to execute a query, the alter session parse is not appropriately defined for Oracle, leading to an error, \r\n  - **Issue:** #7928,\r\n  - **Dependencies:** No dependencies,\r\n  - **Tag maintainer:** @baskaryan,\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13545/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13545/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13544",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13544/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13544/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13544/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13544",
        "id": 2000099058,
        "node_id": "PR_kwDOIPDwls5fzX74",
        "number": 13544,
        "title": "Use random seed",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-18T00:00:50Z",
        "updated_at": "2023-11-18T00:33:33Z",
        "closed_at": "2023-11-18T00:33:32Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13544",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13544",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13544.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13544.patch",
            "merged_at": "2023-11-18T00:33:32Z"
        },
        "body": "For default eval llm",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13544/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13544/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13543",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13543/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13543/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13543/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13543",
        "id": 2000082466,
        "node_id": "PR_kwDOIPDwls5fzUZy",
        "number": 13543,
        "title": "fixed `openai_assistant` namespace",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-17T23:34:12Z",
        "updated_at": "2023-11-18T06:51:21Z",
        "closed_at": "2023-11-18T01:15:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13543",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13543",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13543.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13543.patch",
            "merged_at": "2023-11-18T01:15:34Z"
        },
        "body": "BUG: langchain.agents.openai_assistant has a reference as\r\n`from langchain_experimental.openai_assistant.base import OpenAIAssistantRunnable`\r\nshould be \r\n`from langchain.agents.openai_assistant.base import OpenAIAssistantRunnable`\r\n\r\nThis prevents building of the API Reference docs",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13543/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13543/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13542",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13542/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13542/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13542/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13542",
        "id": 2000035681,
        "node_id": "PR_kwDOIPDwls5fzKNp",
        "number": 13542,
        "title": "Add execution time",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-17T22:38:43Z",
        "updated_at": "2023-11-18T00:04:17Z",
        "closed_at": "2023-11-18T00:04:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13542",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13542",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13542.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13542.patch",
            "merged_at": "2023-11-18T00:04:16Z"
        },
        "body": "And warn instead of raising an error, since the chain API is too inconsistent.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13542/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13542/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13541",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13541/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13541/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13541/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13541",
        "id": 1999988499,
        "node_id": "PR_kwDOIPDwls5fy_1N",
        "number": 13541,
        "title": "implement the summary buffer fix without insantiating new BaseMessage\u2026",
        "user": {
            "login": "Jyumpp",
            "id": 11142390,
            "node_id": "MDQ6VXNlcjExMTQyMzkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/11142390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jyumpp",
            "html_url": "https://github.com/Jyumpp",
            "followers_url": "https://api.github.com/users/Jyumpp/followers",
            "following_url": "https://api.github.com/users/Jyumpp/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jyumpp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jyumpp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jyumpp/subscriptions",
            "organizations_url": "https://api.github.com/users/Jyumpp/orgs",
            "repos_url": "https://api.github.com/users/Jyumpp/repos",
            "events_url": "https://api.github.com/users/Jyumpp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jyumpp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-17T21:54:21Z",
        "updated_at": "2023-12-05T00:01:17Z",
        "closed_at": "2023-12-05T00:01:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13541",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13541",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13541.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13541.patch",
            "merged_at": null
        },
        "body": "**Description:** Despite this class intending to summarize just enough messages to fit within a set context size, the product of this class always contains ALL messages PLUS a summary system message at the front, ultimately making token count longer rather than shorter. This commit addresses the issue by fixing the single bug where the buffer is constantly reset to the internal message store even after messages are summarized and removed. \r\n\r\n- The error does not occur with in-memory History buffers, but instead fails when trying to access and modify an immutable database (such as a Postgres DB)\r\n- [My organization's project repo](https://github.com/UGA-Innovation-Factory/AlfredBot) contains the code that triggered this error to be discovered, as well as output Verbose=True files for the current langchain master, my initial fix, and this revised solution that doesn't replicate any extra Lists.\r\n\r\n**Issues:** Couldn't find one, misread the issue I thought was similar with my last pull request.\r\n\r\n@efriis \r\n\r\nReason for changes in diff order:\r\n- An index is stored with the moving summary buffer to represent up to which messages it represents\r\n- The buffer property only returns memory outside of the summary buffer, without a duplicate List this time\r\n- This satisfy's the need for the required member `type` for any BaseMessage constructor\r\n- Update the prune index\r\n- Clear index when clearing other members",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13541/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13541/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13540",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13540/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13540/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13540/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13540",
        "id": 1999982799,
        "node_id": "PR_kwDOIPDwls5fy-kZ",
        "number": 13540,
        "title": "updated langchain stack img to be svg",
        "user": {
            "login": "bracesproul",
            "id": 46789226,
            "node_id": "MDQ6VXNlcjQ2Nzg5MjI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/46789226?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bracesproul",
            "html_url": "https://github.com/bracesproul",
            "followers_url": "https://api.github.com/users/bracesproul/followers",
            "following_url": "https://api.github.com/users/bracesproul/following{/other_user}",
            "gists_url": "https://api.github.com/users/bracesproul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bracesproul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bracesproul/subscriptions",
            "organizations_url": "https://api.github.com/users/bracesproul/orgs",
            "repos_url": "https://api.github.com/users/bracesproul/repos",
            "events_url": "https://api.github.com/users/bracesproul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bracesproul/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-17T21:50:46Z",
        "updated_at": "2023-11-20T00:26:54Z",
        "closed_at": "2023-11-20T00:26:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13540",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13540",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13540.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13540.patch",
            "merged_at": "2023-11-20T00:26:53Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13540/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13540/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13539",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13539/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13539/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13539/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13539",
        "id": 1999979607,
        "node_id": "I_kwDOIPDwls53NURX",
        "number": 13539,
        "title": "New update broke embeddings models",
        "user": {
            "login": "Will-Holt60",
            "id": 53943880,
            "node_id": "MDQ6VXNlcjUzOTQzODgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/53943880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Will-Holt60",
            "html_url": "https://github.com/Will-Holt60",
            "followers_url": "https://api.github.com/users/Will-Holt60/followers",
            "following_url": "https://api.github.com/users/Will-Holt60/following{/other_user}",
            "gists_url": "https://api.github.com/users/Will-Holt60/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Will-Holt60/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Will-Holt60/subscriptions",
            "organizations_url": "https://api.github.com/users/Will-Holt60/orgs",
            "repos_url": "https://api.github.com/users/Will-Holt60/repos",
            "events_url": "https://api.github.com/users/Will-Holt60/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Will-Holt60/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-17T21:47:33Z",
        "updated_at": "2023-11-18T20:07:42Z",
        "closed_at": "2023-11-17T21:52:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version: 0.0.337\r\nPython version: 3.10.13\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\ndb = Chroma.from_documents(docs, AzureOpenAIEmbeddings())\n\n### Expected behavior\n\nThis worked on previous versions of LangChain using OpenAIEmbeddings(), but now I get this error\r\n\r\nBadRequestError: Error code: 400 - {'error': {'message': 'Too many inputs. The max number of inputs is 16.  We hope to increase the number of inputs per request soon. Please contact us through an Azure support request at: https://go.microsoft.com/fwlink/?linkid=2213926 for further questions.', 'type': 'invalid_request_error', 'param': None, 'code': None}}\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13539/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13539/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13538",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13538/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13538/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13538/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13538",
        "id": 1999960658,
        "node_id": "PR_kwDOIPDwls5fy5p4",
        "number": 13538,
        "title": "update OpenAI function agents' llm validation",
        "user": {
            "login": "price-deshaw",
            "id": 137956190,
            "node_id": "U_kgDOCDkLXg",
            "avatar_url": "https://avatars.githubusercontent.com/u/137956190?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/price-deshaw",
            "html_url": "https://github.com/price-deshaw",
            "followers_url": "https://api.github.com/users/price-deshaw/followers",
            "following_url": "https://api.github.com/users/price-deshaw/following{/other_user}",
            "gists_url": "https://api.github.com/users/price-deshaw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/price-deshaw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/price-deshaw/subscriptions",
            "organizations_url": "https://api.github.com/users/price-deshaw/orgs",
            "repos_url": "https://api.github.com/users/price-deshaw/repos",
            "events_url": "https://api.github.com/users/price-deshaw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/price-deshaw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-17T21:32:49Z",
        "updated_at": "2023-12-05T04:28:13Z",
        "closed_at": "2023-12-05T04:28:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13538",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13538",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13538.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13538.patch",
            "merged_at": "2023-12-05T04:28:13Z"
        },
        "body": "  - **Description:** This PR modifies the LLM validation in OpenAI function agents to check whether the LLM supports OpenAI functions based on a property (`supports_oia_functions`) instead of whether the LLM passed to the agent `isinstance` of `ChatOpenAI`. This allows classes that extend `BaseChatModel` to be passed to these agents as long as they've been integrated with the OpenAI APIs and have this property set, even if they don't extend `ChatOpenAI`. \r\n  - **Issue:** N/A\r\n  - **Dependencies:** none",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13538/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13538/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13537",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13537/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13537/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13537/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13537",
        "id": 1999922272,
        "node_id": "PR_kwDOIPDwls5fyxK_",
        "number": 13537,
        "title": "Override Keys Option",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-17T21:01:02Z",
        "updated_at": "2023-11-17T21:32:44Z",
        "closed_at": "2023-11-17T21:32:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13537",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13537",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13537.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13537.patch",
            "merged_at": "2023-11-17T21:32:43Z"
        },
        "body": "Should be able to override the global key if you want to evaluate different outputs in a single run",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13537/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13537/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13536",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13536/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13536/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13536/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13536",
        "id": 1999921377,
        "node_id": "I_kwDOIPDwls53NGDh",
        "number": 13536,
        "title": "Issue: Missing some input keys in langchain even when it's present - unclear how prompt args are treated",
        "user": {
            "login": "dickreuter",
            "id": 1256318,
            "node_id": "MDQ6VXNlcjEyNTYzMTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1256318?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dickreuter",
            "html_url": "https://github.com/dickreuter",
            "followers_url": "https://api.github.com/users/dickreuter/followers",
            "following_url": "https://api.github.com/users/dickreuter/following{/other_user}",
            "gists_url": "https://api.github.com/users/dickreuter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dickreuter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dickreuter/subscriptions",
            "organizations_url": "https://api.github.com/users/dickreuter/orgs",
            "repos_url": "https://api.github.com/users/dickreuter/repos",
            "events_url": "https://api.github.com/users/dickreuter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dickreuter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-17T21:00:10Z",
        "updated_at": "2023-11-17T21:08:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nWhy does the below code complain that extra_instructions is a missing key, even though it's learning included in input_variables=[\"context\", \"question\", \"extra_instructions\"]?\r\n\r\nAny help is greatly appreciated.\r\n\r\n\r\n    vectorstore = Chroma(\r\n        collection_name=collection_name,\r\n        persist_directory=chroma_db_directory,\r\n        embedding_function=embedding,\r\n    )\r\n    \r\n    prompt_template = \"\"\"\r\n    \r\n    {extra_instructions}\r\n    \r\n\r\n    {context}\r\n    \r\n\r\n    {question}\r\n    \r\n    Continuation:\r\n    \"\"\"\r\n    \r\n    PROMPT = PromptTemplate(\r\n        template=prompt_template,\r\n        input_variables=[\"context\", \"question\", \"extra_instructions\"],\r\n    )\r\n\r\n    qa = RetrievalQA.from_chain_type(\r\n        llm=llm,\r\n        chain_type=\"stuff\",\r\n        retriever=vectorstore.as_retriever(\r\n            search_kwargs={\"k\": 1}\r\n        ),\r\n        chain_type_kwargs={\"verbose\": True, \"prompt\": PROMPT},\r\n    )\r\n\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13536/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13536/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13535",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13535/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13535/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13535/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13535",
        "id": 1999916188,
        "node_id": "PR_kwDOIPDwls5fyv03",
        "number": 13535,
        "title": "DOCS `langchain decorators` update",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-17T20:56:10Z",
        "updated_at": "2023-11-20T16:35:28Z",
        "closed_at": "2023-11-20T01:30:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13535",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13535",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13535.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13535.patch",
            "merged_at": "2023-11-20T01:30:06Z"
        },
        "body": "added disclaimer",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13535/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13535/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13534",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13534/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13534/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13534/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13534",
        "id": 1999871825,
        "node_id": "PR_kwDOIPDwls5fymCg",
        "number": 13534,
        "title": "bump 337",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-17T20:25:31Z",
        "updated_at": "2023-11-17T20:50:53Z",
        "closed_at": "2023-11-17T20:50:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13534",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13534",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13534.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13534.patch",
            "merged_at": "2023-11-17T20:50:52Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13534/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13534/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13533",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13533/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13533/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13533/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13533",
        "id": 1999863087,
        "node_id": "I_kwDOIPDwls53M30v",
        "number": 13533,
        "title": "OpenAI Functions Extraction Chain not returning a list",
        "user": {
            "login": "osmanfatih",
            "id": 3693951,
            "node_id": "MDQ6VXNlcjM2OTM5NTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3693951?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/osmanfatih",
            "html_url": "https://github.com/osmanfatih",
            "followers_url": "https://api.github.com/users/osmanfatih/followers",
            "following_url": "https://api.github.com/users/osmanfatih/following{/other_user}",
            "gists_url": "https://api.github.com/users/osmanfatih/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/osmanfatih/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/osmanfatih/subscriptions",
            "organizations_url": "https://api.github.com/users/osmanfatih/orgs",
            "repos_url": "https://api.github.com/users/osmanfatih/repos",
            "events_url": "https://api.github.com/users/osmanfatih/events{/privacy}",
            "received_events_url": "https://api.github.com/users/osmanfatih/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-17T20:18:52Z",
        "updated_at": "2023-12-01T09:30:25Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\npython==3.10.13\r\nlangchain==0.0.336\r\npydantic==1.10.13\n\n### Who can help?\n\n@eyurtsev\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [X] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nNoticed an error with Pydantic validation when the schema contains optional lists. Here are the steps to reproduce the issue and the error that I am getting.\r\n\r\n1. A basic extraction scheme is defined using Pydantic.\r\n```python\r\nfrom pydantic import BaseModel, Field\r\nclass Properties(BaseModel):\r\n        person_names: Optional[List[str]] = Field([], description=\"The names of the people\")\r\n        person_heights: Optional[List[int]] = Field([], description=\"The heights of the people\")\r\n        person_hair_colors: Optional[List[str]] = Field([], description=\"The hair colors of the people\")\r\n```\r\n\r\n2. Extraction chain is created to extract the defined fields from a document.\r\n```python\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.chains import create_extraction_chain_pydantic\r\nllm = ChatOpenAI(\r\n                temperature=0, model=\"gpt-3.5-turbo\", request_timeout=20, max_retries=1\r\n            )\r\nchain = create_extraction_chain_pydantic(pydantic_schema=Properties, llm=llm)\r\n```\r\n\r\n3. When we run the extraction on a document, sometimes the OpenAI function call does not return the `info` field as a `list` but instead as a `dict`. That creates a validation error with Pydantic, even if the extracted fields are perfectly given in the returned dictionary.\r\n```python\r\ninp = \"\"\"Alex is 5 feet tall. Claudia is 1 feet taller Alex and jumps higher than him. Claudia is a brunette and Alex is blonde.\"\"\"\r\nresponse = chain.run(inp)\r\n```\r\n4. The error and the traceback are as follows\r\n```python\r\nFile \"pydantic/main.py\", line 549, in pydantic.main.BaseModel.parse_raw\r\nFile \"pydantic/main.py\", line 526, in pydantic.main.BaseModel.parse_obj\r\nFile \"pydantic/main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for PydanticSchema\r\ninfo\r\n  value is not a valid list (type=type_error.list)\r\n```\n\n### Expected behavior\n\nWe can make the Pydantic validation pass by maybe simply casting the `info` field into a list if it is somehow returned as a dictionary by the OpenAI function call.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13533/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13533/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13532",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13532/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13532/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13532/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13532",
        "id": 1999837560,
        "node_id": "I_kwDOIPDwls53Mxl4",
        "number": 13532,
        "title": "Output parser fails with index out of range error but doesn't give actual fail reason in case of GooglePalm",
        "user": {
            "login": "ash-ishh",
            "id": 11443110,
            "node_id": "MDQ6VXNlcjExNDQzMTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/11443110?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ash-ishh",
            "html_url": "https://github.com/ash-ishh",
            "followers_url": "https://api.github.com/users/ash-ishh/followers",
            "following_url": "https://api.github.com/users/ash-ishh/following{/other_user}",
            "gists_url": "https://api.github.com/users/ash-ishh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ash-ishh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ash-ishh/subscriptions",
            "organizations_url": "https://api.github.com/users/ash-ishh/orgs",
            "repos_url": "https://api.github.com/users/ash-ishh/repos",
            "events_url": "https://api.github.com/users/ash-ishh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ash-ishh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-17T20:02:52Z",
        "updated_at": "2023-11-17T20:09:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n- Python 3.11.5\r\n- google-ai-generativelanguage==0.3.3\r\n- langchain==0.0.336\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSteps to reproduce the issue:\r\n\r\n1. Create a simple GooglePalm llm\r\n2. Run simple chain with some medical related prompt e.g: `Tell me reasons why I am having symptoms of cold`\r\n\r\nError:\r\n```\r\n    return self.parse(result[0].text)\r\n                      ~~~~~~^^^\r\nIndexError: list index out of range\r\n```\n\n### Expected behavior\n\nThere is a proper error thrown by GooglePalm in completion object\r\n\r\n```\r\nCompletion(candidates=[],\r\n           result=None,\r\n           filters=[{'reason': <BlockedReason.SAFETY: 1>}],\r\n           safety_feedback=[{'rating': {'category': <HarmCategory.HARM_CATEGORY_MEDICAL: 5>,\r\n                                        'probability': <HarmProbability.HIGH: 4>},\r\n                             'setting': {'category': <HarmCategory.HARM_CATEGORY_MEDICAL: 5>,\r\n                                         'threshold': <HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE: 2>}}])\r\n```\r\nIf same is relayed to user it will be more useful.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13532/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13532/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13531",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13531/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13531/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13531/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13531",
        "id": 1999767379,
        "node_id": "PR_kwDOIPDwls5fyO4h",
        "number": 13531,
        "title": "Add VertexAI Chuck Norris template",
        "user": {
            "login": "wietsevenema",
            "id": 356014,
            "node_id": "MDQ6VXNlcjM1NjAxNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/356014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wietsevenema",
            "html_url": "https://github.com/wietsevenema",
            "followers_url": "https://api.github.com/users/wietsevenema/followers",
            "following_url": "https://api.github.com/users/wietsevenema/following{/other_user}",
            "gists_url": "https://api.github.com/users/wietsevenema/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wietsevenema/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wietsevenema/subscriptions",
            "organizations_url": "https://api.github.com/users/wietsevenema/orgs",
            "repos_url": "https://api.github.com/users/wietsevenema/repos",
            "events_url": "https://api.github.com/users/wietsevenema/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wietsevenema/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6154420538,
                "node_id": "LA_kwDOIPDwls8AAAABbtUBOg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/template",
                "name": "template",
                "color": "145FB1",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-17T19:18:38Z",
        "updated_at": "2023-11-17T20:28:02Z",
        "closed_at": "2023-11-17T20:27:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13531",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13531",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13531.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13531.patch",
            "merged_at": "2023-11-17T20:27:52Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13531/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13531/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13529",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13529/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13529/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13529/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13529",
        "id": 1999703007,
        "node_id": "PR_kwDOIPDwls5fyAv_",
        "number": 13529,
        "title": "fix: filtering in opensearch was not working",
        "user": {
            "login": "RomuloPaiva01",
            "id": 50186768,
            "node_id": "MDQ6VXNlcjUwMTg2NzY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/50186768?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RomuloPaiva01",
            "html_url": "https://github.com/RomuloPaiva01",
            "followers_url": "https://api.github.com/users/RomuloPaiva01/followers",
            "following_url": "https://api.github.com/users/RomuloPaiva01/following{/other_user}",
            "gists_url": "https://api.github.com/users/RomuloPaiva01/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RomuloPaiva01/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RomuloPaiva01/subscriptions",
            "organizations_url": "https://api.github.com/users/RomuloPaiva01/orgs",
            "repos_url": "https://api.github.com/users/RomuloPaiva01/repos",
            "events_url": "https://api.github.com/users/RomuloPaiva01/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RomuloPaiva01/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 6077048506,
                "node_id": "LA_kwDOIPDwls8AAAABajhmug",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20elasticsearch",
                "name": "integration: elasticsearch",
                "color": "DAB5EC",
                "default": false,
                "description": "Related to elastic/elasticsearch integrations"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-17T18:31:31Z",
        "updated_at": "2023-12-04T23:21:51Z",
        "closed_at": "2023-12-04T23:21:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13529",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13529",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13529.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13529.patch",
            "merged_at": null
        },
        "body": "- changed the filtering inside the query (boolean filtering)\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:**: I simply adjusted the boolean filtering with the proper format. \r\n  - **Issue:** the issue #\r\n  - **Dependencies:** None\r\n  - **Tag maintainer:** @baskaryan, @eyurtsev, @hwchase17\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13529/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13529/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13528",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13528/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13528/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13528/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13528",
        "id": 1999646425,
        "node_id": "PR_kwDOIPDwls5fx0S0",
        "number": 13528,
        "title": "add llm kwargs as loading parameter",
        "user": {
            "login": "curefatih",
            "id": 41006925,
            "node_id": "MDQ6VXNlcjQxMDA2OTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/41006925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/curefatih",
            "html_url": "https://github.com/curefatih",
            "followers_url": "https://api.github.com/users/curefatih/followers",
            "following_url": "https://api.github.com/users/curefatih/following{/other_user}",
            "gists_url": "https://api.github.com/users/curefatih/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/curefatih/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/curefatih/subscriptions",
            "organizations_url": "https://api.github.com/users/curefatih/orgs",
            "repos_url": "https://api.github.com/users/curefatih/repos",
            "events_url": "https://api.github.com/users/curefatih/events{/privacy}",
            "received_events_url": "https://api.github.com/users/curefatih/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-17T17:50:38Z",
        "updated_at": "2023-11-20T05:57:25Z",
        "closed_at": "2023-11-20T05:57:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13528",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13528",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13528.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13528.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n\r\n **Description:**\r\nEnables runtime parameter injection while loading serialized chains.\r\n\r\n **Issue:**\r\nCurrent approach does not supports runtime credential loading if there is multiple or conditional logic with the LLM settings while loading. \r\n\r\nFor e.g. If we have serialized object like this one \r\n```python\r\n\r\nchain_config = {\r\n    \"memory\": None,\r\n    \"verbose\": False,\r\n    \"prompt\": {\r\n        \"input_variables\": [\r\n            \"topic\"\r\n        ],\r\n        \"output_parser\": None,\r\n        \"template\": \"Tell me a joke about {topic}:\",\r\n        \"template_format\": \"f-string\",\r\n        \"_type\": \"prompt\"\r\n    },\r\n    \"llm\": {\r\n        \"model_name\": \"text-davinci-003\",\r\n        \"temperature\": 0.9,\r\n        \"max_tokens\": 256,\r\n        \"top_p\": 1,\r\n        \"frequency_penalty\": 0,\r\n        \"presence_penalty\": 0,\r\n        \"n\": 1,\r\n        \"best_of\": 1,\r\n        \"request_timeout\": None,\r\n        \"logit_bias\": {},\r\n        \"_type\": \"openai\"\r\n    },\r\n    \"output_key\": \"text\",\r\n    \"_type\": \"llm_chain\"\r\n}\r\n```\r\nand if we try to load without environment variable it raises an error because of the api key does not exists in either env variables or inside the serialized object (as expected)\r\n\r\n```python\r\nfrom langchain.chains.loading import load_chain_from_config\r\n\r\nchain = load_chain_from_config(chain_config)\r\n\r\n# Did not find openai_api_key, please add an environment variable `OPENAI_API_KEY` which contains it, or pass  `openai_api_key` as a named parameter. (type=value_error)\r\n``` \r\n\r\nand what I hgumbly propose in here is using the kwargs which is already defined in current version to add LLM parameters for using as settings like this one\r\n\r\n```python\r\nchain = load_chain_from_config(chain_config, **{\r\n  \"llm_extras\": {\r\n    \"openai\": {\r\n      \"openai_api_key\": \"<super_secret>\"\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n**Dependencies:** \r\nNo extra dependency needed.\r\n\r\n**Tag maintainer:**\r\nI don't know you are the right person to tag but @eyurtsev I will be very appreciated if there is any direction or review. Thanks in advance!\r\n\r\n **Twitter handle:**\r\nThis is not a big feature/fix bug but here it is `@cureef`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13528/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13528/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13526",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13526/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13526/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13526/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13526",
        "id": 1999617934,
        "node_id": "I_kwDOIPDwls53L7-O",
        "number": 13526,
        "title": "RAG but for fact checking",
        "user": {
            "login": "samber",
            "id": 2951285,
            "node_id": "MDQ6VXNlcjI5NTEyODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2951285?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/samber",
            "html_url": "https://github.com/samber",
            "followers_url": "https://api.github.com/users/samber/followers",
            "following_url": "https://api.github.com/users/samber/following{/other_user}",
            "gists_url": "https://api.github.com/users/samber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/samber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/samber/subscriptions",
            "organizations_url": "https://api.github.com/users/samber/orgs",
            "repos_url": "https://api.github.com/users/samber/repos",
            "events_url": "https://api.github.com/users/samber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/samber/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-17T17:31:41Z",
        "updated_at": "2023-11-18T12:25:28Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI would be very nice to be able to build something similar to RAG, but for checking an assumption quality against a knowledge base.\n\n### Motivation\n\nCurrently, RAG allows a semantic search but does not help when it comes to evaluating the quality of a user input, based on your vector db.\r\n\r\nThe point is not to fact-check the news in a newspaper (must be very hard actually...), but to evaluate truth in a random prompt.\r\n\n\n### Your contribution\n\n- prompting\r\n- PR\r\n- doc\r\n- discussions\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13526/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13526/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13525",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13525/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13525/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13525/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13525",
        "id": 1999604918,
        "node_id": "PR_kwDOIPDwls5fxrNN",
        "number": 13525,
        "title": "Introduce\u00a0search_kwargs\u00a0for Custom Parameters in BingSearchAPIWrapper",
        "user": {
            "login": "shumpei19",
            "id": 46121008,
            "node_id": "MDQ6VXNlcjQ2MTIxMDA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/46121008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shumpei19",
            "html_url": "https://github.com/shumpei19",
            "followers_url": "https://api.github.com/users/shumpei19/followers",
            "following_url": "https://api.github.com/users/shumpei19/following{/other_user}",
            "gists_url": "https://api.github.com/users/shumpei19/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shumpei19/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shumpei19/subscriptions",
            "organizations_url": "https://api.github.com/users/shumpei19/orgs",
            "repos_url": "https://api.github.com/users/shumpei19/repos",
            "events_url": "https://api.github.com/users/shumpei19/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shumpei19/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-17T17:22:28Z",
        "updated_at": "2023-11-20T01:51:02Z",
        "closed_at": "2023-11-20T01:51:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13525",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13525",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13525.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13525.patch",
            "merged_at": "2023-11-20T01:51:02Z"
        },
        "body": "Added a `search_kwargs` field to BingSearchAPIWrapper in `bing_search.py,` enabling users to include extra keyword arguments in Bing search queries. This update, like specifying language preferences, adds more customization to searches. The `search_kwargs` seamlessly merge with standard parameters in `_bing_search_results` method.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13525/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13525/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13524",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13524/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13524/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13524/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13524",
        "id": 1999518577,
        "node_id": "PR_kwDOIPDwls5fxYbY",
        "number": 13524,
        "title": "updated cohere.py to support input_type for new embedding models",
        "user": {
            "login": "joeylmartin",
            "id": 50080734,
            "node_id": "MDQ6VXNlcjUwMDgwNzM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/50080734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joeylmartin",
            "html_url": "https://github.com/joeylmartin",
            "followers_url": "https://api.github.com/users/joeylmartin/followers",
            "following_url": "https://api.github.com/users/joeylmartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/joeylmartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joeylmartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joeylmartin/subscriptions",
            "organizations_url": "https://api.github.com/users/joeylmartin/orgs",
            "repos_url": "https://api.github.com/users/joeylmartin/repos",
            "events_url": "https://api.github.com/users/joeylmartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joeylmartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-17T16:38:23Z",
        "updated_at": "2023-11-18T00:47:21Z",
        "closed_at": "2023-11-18T00:47:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13524",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13524",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13524.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13524.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** Added input_type field to Cohere API calls for embedding. Newer models require this field be specified for embedding with the value \"search_document\". Older models still work.\r\n  - **Issue:** Allows any model v2.0 > to work with Langchain.\r\n  - **Dependencies:** \r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** @jay_martz\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13524/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13524/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]