[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6193",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6193/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6193/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6193/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6193",
        "id": 1746834052,
        "node_id": "I_kwDOIWuq585oHpKE",
        "number": 6193,
        "title": "[Bug]: Weaviate Vector Store Index Invalid class name error",
        "user": {
            "login": "Sik819",
            "id": 39178157,
            "node_id": "MDQ6VXNlcjM5MTc4MTU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/39178157?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sik819",
            "html_url": "https://github.com/Sik819",
            "followers_url": "https://api.github.com/users/Sik819/followers",
            "following_url": "https://api.github.com/users/Sik819/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sik819/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sik819/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sik819/subscriptions",
            "organizations_url": "https://api.github.com/users/Sik819/orgs",
            "repos_url": "https://api.github.com/users/Sik819/repos",
            "events_url": "https://api.github.com/users/Sik819/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sik819/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-07T23:47:02Z",
        "updated_at": "2023-06-11T07:30:17Z",
        "closed_at": "2023-06-11T07:30:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\n![image](https://github.com/jerryjliu/llama_index/assets/39178157/7c507dab-5110-42a8-83e2-44fb009d4e5b)\r\n \r\nThe vectore index library seems to be suffixing _node and seems like weaviate does not allow _ in their class and property names. I tried using the WeaviateIndexDemo Notebook  which also seems to raising the error.\r\n\r\n### Version\r\n\r\nllama_index: 0.6.19 Weaviate-client: v3.19.2\r\n\r\n### Steps to Reproduce\r\n\r\n1. Initiate Weaviate Client - I am using docker (client = weaviate.Client('http://localhost:8080')\r\n2. Initiate Weaviate Vector Store - vector_store = WeaviateVectorStore(weaviate_client=client)\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6193/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6193/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6192",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6192/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6192/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6192/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6192",
        "id": 1746816181,
        "node_id": "PR_kwDOIWuq585SdoqQ",
        "number": 6192,
        "title": "fix: remove completly ref_doc_id when doc_id is empty",
        "user": {
            "login": "EmanuelCampos",
            "id": 16262455,
            "node_id": "MDQ6VXNlcjE2MjYyNDU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/16262455?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EmanuelCampos",
            "html_url": "https://github.com/EmanuelCampos",
            "followers_url": "https://api.github.com/users/EmanuelCampos/followers",
            "following_url": "https://api.github.com/users/EmanuelCampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/EmanuelCampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EmanuelCampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EmanuelCampos/subscriptions",
            "organizations_url": "https://api.github.com/users/EmanuelCampos/orgs",
            "repos_url": "https://api.github.com/users/EmanuelCampos/repos",
            "events_url": "https://api.github.com/users/EmanuelCampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EmanuelCampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-07T23:17:59Z",
        "updated_at": "2023-06-08T19:16:05Z",
        "closed_at": "2023-06-08T19:16:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6192",
            "html_url": "https://github.com/run-llama/llama_index/pull/6192",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6192.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6192.patch",
            "merged_at": "2023-06-08T19:16:05Z"
        },
        "body": "# Description\r\n\r\nDeleting the index using delete_ref_doc, was keeping only the parent ref and just deleting the docs_id, causing issues in some use cases as attached above\r\n\r\nFixes # (issue)\r\n\r\nhttps://github.com/jerryjliu/llama_index/issues/6152\r\n\r\n## Whats missing\r\n- [x] Unit tests\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Ran my own tests, will add some unit tests\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6192/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6192/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6191",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6191/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6191/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6191/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6191",
        "id": 1746627037,
        "node_id": "PR_kwDOIWuq585Sc-1m",
        "number": 6191,
        "title": "Add changelog",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-07T20:26:37Z",
        "updated_at": "2023-08-28T17:09:47Z",
        "closed_at": "2023-06-08T15:46:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6191",
            "html_url": "https://github.com/run-llama/llama_index/pull/6191",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6191.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6191.patch",
            "merged_at": "2023-06-08T15:46:40Z"
        },
        "body": "# Description\r\n\r\nWe desperately need a changelog. This PR adds that, as well as a workflow check so that every PR should (hopefully) be added to the changelog.\r\n\r\nI know it seems annoying, but it's a small thing that will GREATLY improve the usability of the repo.\r\n\r\nFuture work is adding a hook to display the changelog in our docs.\r\n\r\nNot 100% if the workflow check will work yet though.\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/6184\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] My changes generate no new warnings\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6191/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6191/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6190",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6190/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6190/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6190/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6190",
        "id": 1746485488,
        "node_id": "PR_kwDOIWuq585ScfrZ",
        "number": 6190,
        "title": "support postgres vector store",
        "user": {
            "login": "helmanofer",
            "id": 6523193,
            "node_id": "MDQ6VXNlcjY1MjMxOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6523193?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/helmanofer",
            "html_url": "https://github.com/helmanofer",
            "followers_url": "https://api.github.com/users/helmanofer/followers",
            "following_url": "https://api.github.com/users/helmanofer/following{/other_user}",
            "gists_url": "https://api.github.com/users/helmanofer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/helmanofer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/helmanofer/subscriptions",
            "organizations_url": "https://api.github.com/users/helmanofer/orgs",
            "repos_url": "https://api.github.com/users/helmanofer/repos",
            "events_url": "https://api.github.com/users/helmanofer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/helmanofer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-07T18:50:26Z",
        "updated_at": "2023-06-21T06:02:25Z",
        "closed_at": "2023-06-21T06:02:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6190",
            "html_url": "https://github.com/run-llama/llama_index/pull/6190",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6190.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6190.patch",
            "merged_at": "2023-06-21T06:02:24Z"
        },
        "body": "# Description\r\n\r\nI added support for postgres as a vector store using pgvector, sqlalchemy and psycopg2\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6190/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6190/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6188",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6188/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6188/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6188/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6188",
        "id": 1746335661,
        "node_id": "PR_kwDOIWuq585Sb-vP",
        "number": 6188,
        "title": "Chat Engine Condense Question to support Multi-Chat History",
        "user": {
            "login": "anoopshrma",
            "id": 26565263,
            "node_id": "MDQ6VXNlcjI2NTY1MjYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/26565263?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anoopshrma",
            "html_url": "https://github.com/anoopshrma",
            "followers_url": "https://api.github.com/users/anoopshrma/followers",
            "following_url": "https://api.github.com/users/anoopshrma/following{/other_user}",
            "gists_url": "https://api.github.com/users/anoopshrma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anoopshrma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anoopshrma/subscriptions",
            "organizations_url": "https://api.github.com/users/anoopshrma/orgs",
            "repos_url": "https://api.github.com/users/anoopshrma/repos",
            "events_url": "https://api.github.com/users/anoopshrma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anoopshrma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-07T17:04:14Z",
        "updated_at": "2023-06-21T06:26:39Z",
        "closed_at": "2023-06-21T06:26:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6188",
            "html_url": "https://github.com/run-llama/llama_index/pull/6188",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6188.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6188.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nAdded support to handle multi-chat history in Condense question mode in Chat Engine. Currently ChatEngine only supports single chat history which is not serving purpose for handling different users as different user will use the same chat history.\r\n\r\nCondense Question Mode will store Chat history in the form of Dict like this\r\n```\r\nchat_history  = { \"user_1\" : user_1_chat_history, \"user_2\": user_2_chat_history, \"default\" : default_chat_history}\r\n```\r\n\r\n- While using `.chat()` user can pass unique user ID to form chat history respective to that particular ID only. \r\n- If  unique ID is not passed, it will use default chat history, which is exactly how chat engine works currently. \r\n- Added changes in Resetting of chat history, User can ask to delete their chat history by passing the unique ID or delete default chat history by simply calling the `.reset()` method. \r\n- If you want to delete all the chat histories then pass `reset_all` flag as `True`, it will delete all the conversations from the Context. \r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6188/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6188/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6186",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6186/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6186/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6186/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6186",
        "id": 1746313654,
        "node_id": "I_kwDOIWuq585oFqG2",
        "number": 6186,
        "title": "[Bug]: refresh_ref_docs failed for for remote vector store and did not give any notification",
        "user": {
            "login": "hawktang",
            "id": 2004071,
            "node_id": "MDQ6VXNlcjIwMDQwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2004071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hawktang",
            "html_url": "https://github.com/hawktang",
            "followers_url": "https://api.github.com/users/hawktang/followers",
            "following_url": "https://api.github.com/users/hawktang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hawktang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hawktang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hawktang/subscriptions",
            "organizations_url": "https://api.github.com/users/hawktang/orgs",
            "repos_url": "https://api.github.com/users/hawktang/repos",
            "events_url": "https://api.github.com/users/hawktang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hawktang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-07T16:52:12Z",
        "updated_at": "2023-11-20T16:02:14Z",
        "closed_at": "2023-11-20T16:02:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nrefresh_ref_docs will always reindex all the documents because index.ref_doc_info is not implemented for vector database and get_hash always return None\r\n\r\n### Version\r\n\r\n1.16.21post1\r\n\r\n### Steps to Reproduce\r\n\r\n```python\r\n\r\n    vector_store = QdrantVectorStore(client=client, collection_name=collection_name)\r\n\r\n    documents = SimpleDirectoryReader(\r\n        path_input,\r\n        recursive=True,\r\n        filename_as_id=True,\r\n        file_metadata=file_metadata\r\n    ).load_data()\r\n    try:\r\n        client.create_collection(\r\n            collection_name=collection_name,\r\n            vectors_config=VectorParams(size=1536, distance=Distance.COSINE),\r\n        )\r\n    except Exception as e:\r\n        logger.exception(e)\r\n        # refresh_ref_docs/index.ref_doc_info is not implemented for vector database yet\r\n        logger.info(f'collection {collection_name} already exists, refreshing collection')\r\n        VectorStoreIndex.from_vector_store(\r\n            service_context=service_context,\r\n            vector_store=vector_store,\r\n        ).refresh_ref_docs(documents)\r\n    else:\r\n        storage_context = StorageContext.from_defaults(vector_store=vector_store)\r\n        VectorStoreIndex.from_documents(documents, service_context=service_context, storage_context=storage_context)\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nINFO:llama_index.token_counter.token_counter:> [insert] Total LLM token usage: 0 tokens\r\n> [insert] Total LLM token usage: 0 tokens\r\nINFO:llama_index.token_counter.token_counter:> [insert] Total embedding token usage: 626 tokens\r\n> [insert] Total embedding token usage: 626 tokens\r\nOut[9]: [True, True, True, True, True]\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6186/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6186/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6185",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6185/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6185/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6185/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6185",
        "id": 1746303077,
        "node_id": "I_kwDOIWuq585oFnhl",
        "number": 6185,
        "title": "[Question]: Injecting context to SqlDatabase, context is not stored locally",
        "user": {
            "login": "sumanthp",
            "id": 11244510,
            "node_id": "MDQ6VXNlcjExMjQ0NTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/11244510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sumanthp",
            "html_url": "https://github.com/sumanthp",
            "followers_url": "https://api.github.com/users/sumanthp/followers",
            "following_url": "https://api.github.com/users/sumanthp/following{/other_user}",
            "gists_url": "https://api.github.com/users/sumanthp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sumanthp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sumanthp/subscriptions",
            "organizations_url": "https://api.github.com/users/sumanthp/orgs",
            "repos_url": "https://api.github.com/users/sumanthp/repos",
            "events_url": "https://api.github.com/users/sumanthp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sumanthp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-07T16:45:00Z",
        "updated_at": "2023-09-14T16:12:22Z",
        "closed_at": "2023-09-14T16:12:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI am trying to inject additional context related to sql database tables and trying to store the index created locally. The index files stored do not have additional context getting stored.\r\n\r\n`def create_index(selected_tables, table_contexts, model_option, model_temperature, index_name):\r\n    storage_context = StorageContext.from_defaults(persist_dir=\"./storage\")\r\n    # Set up Azure OpenAI chat model\r\n    llm = AzureChatOpenAI(\r\n        model=model_option,\r\n        deployment_name=model_option,\r\n        temperature=model_temperature,\r\n        max_tokens=512,\r\n        openai_api_base=openai.api_base,\r\n        openai_api_key=AZURE_OPENAI_KEY,\r\n        openai_api_version=AZURE_OPENAI_API_VERSION\r\n    )\r\n    llm_predictor = LLMPredictor(llm=llm)\r\n    service_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, embed_model=st.session_state[\"embedding_llm\"])\r\n    \r\n    sql_database = SQLDatabase(st.session_state[\"engine\"], include_tables=selected_tables, view_support=True)\r\n    st.session_state.index_sql_db_map[index_name] = sql_database\r\n    if table_contexts is not None and len(table_contexts)>0:\r\n        # Retrieve additional table context text boxes input\r\n        additional_contexts = {}\r\n        for table in selected_tables:\r\n            if table in table_contexts and table_contexts[table]:\r\n                additional_contexts[table] = [Document(table_contexts[table])]\r\n\r\n        context_builder = SQLContextContainerBuilder.from_documents(\r\n            additional_contexts, \r\n            sql_database,\r\n            service_context=service_context\r\n        )\r\n        context_container = context_builder.build_context_container()\r\n        index = GPTSQLStructStoreIndex.from_documents(\r\n            [],\r\n            sql_database=sql_database,\r\n            sql_context_container=context_container,\r\n            service_context=service_context,\r\n            storage_context=storage_context\r\n        )\r\n    else:\r\n        index = GPTSQLStructStoreIndex.from_documents(\r\n            [],\r\n            sql_database=sql_database,\r\n            service_context=service_context,\r\n            storage_context=storage_context\r\n        )\r\n    storage_context.persist(persist_dir=f'./storage/streamlit_indexes/llama/'+index_name)\r\n    st.session_state.index_id_map[index_name] = index.index_id\r\n    st.session_state.index_chain_map[index_name] = initialize_chain(model_temperature, index)\r\n    return index`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6185/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6185/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6184",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6184/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6184/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6184/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6184",
        "id": 1746287627,
        "node_id": "I_kwDOIWuq585oFjwL",
        "number": 6184,
        "title": "[Feature Request]: Documentation to include release notes",
        "user": {
            "login": "sumanthp",
            "id": 11244510,
            "node_id": "MDQ6VXNlcjExMjQ0NTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/11244510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sumanthp",
            "html_url": "https://github.com/sumanthp",
            "followers_url": "https://api.github.com/users/sumanthp/followers",
            "following_url": "https://api.github.com/users/sumanthp/following{/other_user}",
            "gists_url": "https://api.github.com/users/sumanthp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sumanthp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sumanthp/subscriptions",
            "organizations_url": "https://api.github.com/users/sumanthp/orgs",
            "repos_url": "https://api.github.com/users/sumanthp/repos",
            "events_url": "https://api.github.com/users/sumanthp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sumanthp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-07T16:34:41Z",
        "updated_at": "2023-06-07T16:57:39Z",
        "closed_at": "2023-06-07T16:57:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nIt is extremely challenging to follow up with the changes in the framework. Could you please provide release notes with every new version of llama index library released.\n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6184/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6184/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6181",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6181/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6181/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6181/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6181",
        "id": 1745988997,
        "node_id": "PR_kwDOIWuq585SazgH",
        "number": 6181,
        "title": "Update terms_definitions_tutorial.md - fixed word omission",
        "user": {
            "login": "sad-mathematician",
            "id": 134358999,
            "node_id": "U_kgDOCAIn1w",
            "avatar_url": "https://avatars.githubusercontent.com/u/134358999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sad-mathematician",
            "html_url": "https://github.com/sad-mathematician",
            "followers_url": "https://api.github.com/users/sad-mathematician/followers",
            "following_url": "https://api.github.com/users/sad-mathematician/following{/other_user}",
            "gists_url": "https://api.github.com/users/sad-mathematician/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sad-mathematician/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sad-mathematician/subscriptions",
            "organizations_url": "https://api.github.com/users/sad-mathematician/orgs",
            "repos_url": "https://api.github.com/users/sad-mathematician/repos",
            "events_url": "https://api.github.com/users/sad-mathematician/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sad-mathematician/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T14:03:51Z",
        "updated_at": "2023-06-08T16:17:33Z",
        "closed_at": "2023-06-07T18:24:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6181",
            "html_url": "https://github.com/run-llama/llama_index/pull/6181",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6181.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6181.patch",
            "merged_at": "2023-06-07T18:24:24Z"
        },
        "body": "fixed word omission\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6181/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6181/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6176",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6176/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6176/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6176/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6176",
        "id": 1745776994,
        "node_id": "I_kwDOIWuq585oDnFi",
        "number": 6176,
        "title": "[Bug]: 404: Not Found for download_loader()",
        "user": {
            "login": "GregXD",
            "id": 133116162,
            "node_id": "U_kgDOB-8xAg",
            "avatar_url": "https://avatars.githubusercontent.com/u/133116162?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregXD",
            "html_url": "https://github.com/GregXD",
            "followers_url": "https://api.github.com/users/GregXD/followers",
            "following_url": "https://api.github.com/users/GregXD/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregXD/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregXD/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregXD/subscriptions",
            "organizations_url": "https://api.github.com/users/GregXD/orgs",
            "repos_url": "https://api.github.com/users/GregXD/repos",
            "events_url": "https://api.github.com/users/GregXD/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregXD/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-07T12:21:41Z",
        "updated_at": "2023-07-04T08:49:05Z",
        "closed_at": "2023-06-07T15:13:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nThe download_loader() function is showing a 404. It looks like the data_connectors.md file was removed on the main branch. This means the connectors aren't working? Maybe I just missed an update?\r\n\r\nhttps://github.com/jerryjliu/llama_index/blob/main/docs/how_to/data_connectors.md\r\n\r\n### Version\r\n\r\n0.6.8\r\n\r\n### Steps to Reproduce\r\n\r\nfrom llama_index import download_loader\r\n\r\nOpendalS3Reader = download_loader(\"OpendalS3Reader\")\r\n\r\nloader = OpendalS3Reader(\r\n    bucket='bucket',\r\n    path='path/to/data/',\r\n    access_key_id='[ACCESS_KEY_ID]',\r\n    secret_access_key='[ACCESS_KEY_SECRET]',\r\n)\r\ndocuments = loader.load_data()\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6176/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6176/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6172",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6172/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6172/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6172/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6172",
        "id": 1745697779,
        "node_id": "I_kwDOIWuq585oDTvz",
        "number": 6172,
        "title": "[Bug]: ",
        "user": {
            "login": "nithinjp1997",
            "id": 61446944,
            "node_id": "MDQ6VXNlcjYxNDQ2OTQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/61446944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nithinjp1997",
            "html_url": "https://github.com/nithinjp1997",
            "followers_url": "https://api.github.com/users/nithinjp1997/followers",
            "following_url": "https://api.github.com/users/nithinjp1997/following{/other_user}",
            "gists_url": "https://api.github.com/users/nithinjp1997/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nithinjp1997/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nithinjp1997/subscriptions",
            "organizations_url": "https://api.github.com/users/nithinjp1997/orgs",
            "repos_url": "https://api.github.com/users/nithinjp1997/repos",
            "events_url": "https://api.github.com/users/nithinjp1997/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nithinjp1997/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-07T11:38:40Z",
        "updated_at": "2023-06-08T17:22:54Z",
        "closed_at": "2023-06-08T17:22:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\n![image](https://github.com/jerryjliu/llama_index/assets/61446944/60591172-fece-498d-94ed-3d9c607a04df)\r\nEven though I am specifying the no of top-k documents to pull the retriever is still pulling only 2 documents. I even tried changing the default value inside the code still no change . Please look into this. I am using VectorStoreIndex. \n\n### Version\n\n0.6.20\n\n### Steps to Reproduce\n\nCreate an index using VectorStoreIndex.\r\nLoad it from the disk . \r\nSet the index as a retriever and pass the similarity_top_k = anything other than 2 ( because 2 is default)\r\n\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6172/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6172/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6169",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6169/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6169/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6169/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6169",
        "id": 1745673181,
        "node_id": "I_kwDOIWuq585oDNvd",
        "number": 6169,
        "title": "[Documentation]: Privacy and security page",
        "user": {
            "login": "EmanuelCampos",
            "id": 16262455,
            "node_id": "MDQ6VXNlcjE2MjYyNDU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/16262455?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EmanuelCampos",
            "html_url": "https://github.com/EmanuelCampos",
            "followers_url": "https://api.github.com/users/EmanuelCampos/followers",
            "following_url": "https://api.github.com/users/EmanuelCampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/EmanuelCampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EmanuelCampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EmanuelCampos/subscriptions",
            "organizations_url": "https://api.github.com/users/EmanuelCampos/orgs",
            "repos_url": "https://api.github.com/users/EmanuelCampos/repos",
            "events_url": "https://api.github.com/users/EmanuelCampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EmanuelCampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-07T11:24:56Z",
        "updated_at": "2023-09-14T16:12:27Z",
        "closed_at": "2023-09-14T16:12:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\r\n\r\nThere\u2019s a lot of questions mainly on the community about privacy of data\r\n\r\nA page describing how privacy of data works for non-local embeddings or LLMs calls\r\n\r\nQuotes from @logan-markewich that can be a great start:\r\n\r\n> Right, so embeddings are created, and by default the method is to send text to openai (text-ada-002) to generate embeddings\r\n\r\n> Embeddings themselves are stored locally. At query time, the query text is embedded (openai again), and the top k embeddings are retrieved (local)\r\n\r\n> Once the top k nodes are retrieved, the text from those nodes are sent (by default) to openai, to generate a natural language response\r\n\r\nAnd a observation about OpenAI privacy can be interesting, since we don\u2019t have control of what happens on their side\r\n\r\n### Documenation Link\r\n\r\nhttps://gpt-index.readthedocs.io/en/latest/",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6169/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6169/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6163",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6163/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6163/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6163/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6163",
        "id": 1745596400,
        "node_id": "I_kwDOIWuq585oC6_w",
        "number": 6163,
        "title": "[Question]: Vector index creation with LLM-A and Query with LLM-B. Loading vector without connection to API and costs for tokens.",
        "user": {
            "login": "itsergiu",
            "id": 28391561,
            "node_id": "MDQ6VXNlcjI4MzkxNTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/28391561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/itsergiu",
            "html_url": "https://github.com/itsergiu",
            "followers_url": "https://api.github.com/users/itsergiu/followers",
            "following_url": "https://api.github.com/users/itsergiu/following{/other_user}",
            "gists_url": "https://api.github.com/users/itsergiu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/itsergiu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/itsergiu/subscriptions",
            "organizations_url": "https://api.github.com/users/itsergiu/orgs",
            "repos_url": "https://api.github.com/users/itsergiu/repos",
            "events_url": "https://api.github.com/users/itsergiu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/itsergiu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-07T10:38:39Z",
        "updated_at": "2023-07-25T02:59:02Z",
        "closed_at": "2023-07-25T02:59:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nQuestion 1.\r\nWhy does the loading of already created and stored vectors require OpenAI API and cost tokens the same as for creation?\r\nHow to avoid costs for tokens every time a vector is loaded?\r\n\r\nQuestion 2.\r\nDoes LlamaIndex support other LLM integration?\r\n_Vector creation with gpt4all and query with gpt4all is possible: \r\nhttps://colab.research.google.com/drive/16QMQePkONNlDpgiltOi7oRQgmB8dU5fl?usp=sharing__\r\n\r\nHow about vector creation with gpt4all and query with OpenAI\r\n\r\nRegards,\r\nSergiu\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6163/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6163/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6152",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6152/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6152/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6152/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6152",
        "id": 1745495572,
        "node_id": "I_kwDOIWuq585oCiYU",
        "number": 6152,
        "title": "[Question]: Metadata for documents not deleting completely",
        "user": {
            "login": "Erik-M-Larsson",
            "id": 89965231,
            "node_id": "MDQ6VXNlcjg5OTY1MjMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/89965231?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Erik-M-Larsson",
            "html_url": "https://github.com/Erik-M-Larsson",
            "followers_url": "https://api.github.com/users/Erik-M-Larsson/followers",
            "following_url": "https://api.github.com/users/Erik-M-Larsson/following{/other_user}",
            "gists_url": "https://api.github.com/users/Erik-M-Larsson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Erik-M-Larsson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Erik-M-Larsson/subscriptions",
            "organizations_url": "https://api.github.com/users/Erik-M-Larsson/orgs",
            "repos_url": "https://api.github.com/users/Erik-M-Larsson/repos",
            "events_url": "https://api.github.com/users/Erik-M-Larsson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Erik-M-Larsson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-07T09:50:18Z",
        "updated_at": "2023-06-11T18:17:34Z",
        "closed_at": "2023-06-11T18:17:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nVersion 0.6.20\r\nUsing and a GPTVectorStoreIndex and \r\n`index.delete_ref_doc('doc_2', delete_from_docstore = True)` \r\nI get this in the docstore.json :\r\n\r\n![image](https://github.com/jerryjliu/llama_index/assets/89965231/8fcd4a1f-ed34-45cb-8c6a-f91c38d2d703)\r\n\r\nI still have one of the two keys corresponding to doc_2, red arrow. The blue arrow is the part that is deleted (showing for doc_1).\r\n \r\nThis makes refresh skipping  this document if it would appear again in the source documents in a later stage. What I have is a lot of source documents that can change. If one is removed I wan't to remove it from the index. And if it appears at a later time it should be added again. Today I am using `index.refresh(documents)` (I just found that there is a refresh_ref_docs but it seems to be the one refresh runs anyway). But that don't work if the metadata is not removed. \r\nIs there a good way to handle this? It would be nice if refresh had a flag to remove all the documents not sent to refresh, a bit dangerous I suppose.\r\n \r\nI suspect this to be a bug or is there a reason for this behavior? ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6152/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6152/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6139",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6139/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6139/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6139/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6139",
        "id": 1745333078,
        "node_id": "I_kwDOIWuq585oB6tW",
        "number": 6139,
        "title": "[Feature Request]: Add enhance_document feature to remove artifacts",
        "user": {
            "login": "thunderbug1",
            "id": 1395321,
            "node_id": "MDQ6VXNlcjEzOTUzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1395321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thunderbug1",
            "html_url": "https://github.com/thunderbug1",
            "followers_url": "https://api.github.com/users/thunderbug1/followers",
            "following_url": "https://api.github.com/users/thunderbug1/following{/other_user}",
            "gists_url": "https://api.github.com/users/thunderbug1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thunderbug1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thunderbug1/subscriptions",
            "organizations_url": "https://api.github.com/users/thunderbug1/orgs",
            "repos_url": "https://api.github.com/users/thunderbug1/repos",
            "events_url": "https://api.github.com/users/thunderbug1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thunderbug1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-07T08:20:27Z",
        "updated_at": "2023-09-14T16:12:33Z",
        "closed_at": "2023-09-14T16:12:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nI am using the following code to enhance the text that was parsed from pdfs. I think this could probably be integrated into the library but I am not sure where it fits in the best:\r\n\r\n```\r\ndef enhance_doc(document: Document, model):   \r\n    prompt_template = \"\"\"Your task is to clean the following text delimited by ''' so that it can be indexed for text search.\r\n                Remove editing dates, empty or duplicate lines and other formatting that does not contribute to the text content.\r\n                Do not change the text itself.\r\n                \"\"\"\r\n    text_splitter = TokenTextSplitter(chunk_size=3800, chunk_overlap=0)\r\n    texts = text_splitter.split_text(document.text)\r\n\r\n    texts_enhanced = []\r\n    for text in texts:\r\n        texts_enhanced.append(model.predict(f\"\"\"{prompt_template}'''{text}'''\"\"\"))\r\n\r\n    documents_enhanced = [Document(text_enhanced, extra_info=document.extra_info) for text_enhanced in texts_enhanced]\r\n    return documents_enhanced\r\n```\r\n\r\n### Reason\r\n\r\nText that was parsed often has artifacts like empty lines, seperators, weird characters, editing dates etc. that do not contribute to the content of the text. \r\n\r\n### Value of Feature\r\n\r\nBy using an llm to remove those unnecessary parts we can reduce document size and potentially improve pipeline output quality.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6139/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6139/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6137",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6137/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6137/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6137/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6137",
        "id": 1745314637,
        "node_id": "I_kwDOIWuq585oB2NN",
        "number": 6137,
        "title": "[Feature Request]: add history dialog to OpenAI's openai.ChatCompletion.create message parameter List for [query_engine]",
        "user": {
            "login": "mintisan",
            "id": 9136049,
            "node_id": "MDQ6VXNlcjkxMzYwNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9136049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintisan",
            "html_url": "https://github.com/mintisan",
            "followers_url": "https://api.github.com/users/mintisan/followers",
            "following_url": "https://api.github.com/users/mintisan/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintisan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintisan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintisan/subscriptions",
            "organizations_url": "https://api.github.com/users/mintisan/orgs",
            "repos_url": "https://api.github.com/users/mintisan/repos",
            "events_url": "https://api.github.com/users/mintisan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintisan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-07T08:09:19Z",
        "updated_at": "2023-09-15T16:19:11Z",
        "closed_at": "2023-09-15T16:19:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\n\r\nThe OpenAI interface has a `messages` parameter(as below), which retains the questions and answers of historical conversations. \r\n\r\nI don\u2019t know if LlamaIndex can have a switch parameter to support this mode(native way). \r\nOr how can I implement with query_engine.\r\n(chat_engine with condense is not the way, It may change the current question content, which not what I want)\r\n\r\nI didn\u2019t find it in the relevant documents.\r\n\r\n```\r\n# Note: you need to be using OpenAI Python v0.27.0 for the code below to work\r\nimport openai\r\n\r\nopenai.ChatCompletion.create(\r\n  model=\"gpt-3.5-turbo\",\r\n  messages=[\r\n        {\"role\": \"system\", \"content\": \"You are a helpful assistant.\"},\r\n        {\"role\": \"user\", \"content\": \"Who won the world series in 2020?\"},\r\n        {\"role\": \"assistant\", \"content\": \"The Los Angeles Dodgers won the World Series in 2020.\"},\r\n        {\"role\": \"user\", \"content\": \"Where was it played?\"}\r\n    ]\r\n)\r\n```\r\n\r\n\r\n\r\n### Reason\r\n\r\n(chat_engine with condense is not the way, It may change the current question content, which not what I want)\r\n\r\n\r\n### Value of Feature\r\n\r\nnative way to OpenAI, more flexible, also some people need it.\r\n\r\n## relative issues\r\n- [support single and multiturn {messages} for GPTChat API #586](https://github.com/jerryjliu/llama_index/issues/586)\r\n- [Support for complex prompt formats in the chat engine, similar to OpenAI's Chat Completions API #6047](https://github.com/jerryjliu/llama_index/issues/6047)\r\n- [memory history with llama-index #2711](https://github.com/jerryjliu/llama_index/issues/2711)\r\n- [System content message #1202](https://github.com/jerryjliu/llama_index/issues/1202)\r\n- https://github.com/jerryjliu/llama_index/blob/main/docs/examples/customization/llms/SimpleIndexDemo-ChatGPT.ipynb#L313\r\n- https://twitter.com/llama_index/status/1639418614418907136  not work",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6137/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6137/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6136",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6136/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6136/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6136/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6136",
        "id": 1745311848,
        "node_id": "PR_kwDOIWuq585SYfeb",
        "number": 6136,
        "title": "[version] bump version to 0.6.21.post1",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T08:07:36Z",
        "updated_at": "2023-06-08T06:14:48Z",
        "closed_at": "2023-06-08T06:14:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6136",
            "html_url": "https://github.com/run-llama/llama_index/pull/6136",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6136.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6136.patch",
            "merged_at": "2023-06-08T06:14:46Z"
        },
        "body": "messed up previous release 0.6.21 \r\n\r\n- Add W&B integration\r\n- Add Tair as vector store\r\n- initializing VectorStoreIndex from existing vector DB easier\r\n- docarray as a vector store\r\n- doc fixes/changes",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6136/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6136/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6133",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6133/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6133/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6133/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6133",
        "id": 1745275049,
        "node_id": "PR_kwDOIWuq585SYXd1",
        "number": 6133,
        "title": "[version] bump version to 0.6.21",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T07:46:33Z",
        "updated_at": "2023-06-07T08:05:34Z",
        "closed_at": "2023-06-07T08:05:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6133",
            "html_url": "https://github.com/run-llama/llama_index/pull/6133",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6133.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6133.patch",
            "merged_at": "2023-06-07T08:05:33Z"
        },
        "body": "# Changelog\r\n\r\n- Add W&B integration\r\n- Add Tair as vector store\r\n- initializing VectorStoreIndex from existing vector DB easier\r\n- docarray as a vector store\r\n- doc fixes/changes ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6133/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6133/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6126",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6126/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6126/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6126/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6126",
        "id": 1745015867,
        "node_id": "I_kwDOIWuq585oAtQ7",
        "number": 6126,
        "title": "[Question]: Variation in  token count for same files reading from different locations ",
        "user": {
            "login": "vishalp-simplecrm",
            "id": 115548851,
            "node_id": "U_kgDOBuMisw",
            "avatar_url": "https://avatars.githubusercontent.com/u/115548851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vishalp-simplecrm",
            "html_url": "https://github.com/vishalp-simplecrm",
            "followers_url": "https://api.github.com/users/vishalp-simplecrm/followers",
            "following_url": "https://api.github.com/users/vishalp-simplecrm/following{/other_user}",
            "gists_url": "https://api.github.com/users/vishalp-simplecrm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vishalp-simplecrm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vishalp-simplecrm/subscriptions",
            "organizations_url": "https://api.github.com/users/vishalp-simplecrm/orgs",
            "repos_url": "https://api.github.com/users/vishalp-simplecrm/repos",
            "events_url": "https://api.github.com/users/vishalp-simplecrm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vishalp-simplecrm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-07T04:35:30Z",
        "updated_at": "2023-09-14T16:12:44Z",
        "closed_at": "2023-09-14T16:12:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n\r\nDifferent Number of token count when reading file from local drive and same files reading from google drive while using vectorstore index\r\nLet me give some background\r\n\r\nI am having 5 documents for which I am creating index using vector store index for this I have tried 2 ways\r\n\r\n1 Reading Document from google drive\r\nObservation : Creation of index takes too much time and also lot many money used close to $14\r\n2 Reading from local system folder\r\nObservation: This is fast and also it takes less money as token are less which is not even $1\r\n\r\nplease Justify this\r\nReference code (reading from google drive)\r\nlogging.basicConfig(stream=sys.stdout, level=logging.INFO)\r\nlogging.getLogger().addHandler(logging.StreamHandler(stream=sys.stdout))\r\nlogging.getLogger('flask_cors').level = logging.DEBUG\r\n\r\nos.environ['OPENAI_API_KEY'] = 'my api key'\r\n\r\ndef authorize_gdocs():\r\ngoogle_oauth2_scopes = [\r\n\"https://www.googleapis.com/auth/drive.readonly\",\r\n\"https://www.googleapis.com/auth/documents.readonly\"\r\n]\r\ncred = None\r\nif os.path.exists(\"token.pickle\"):\r\nwith open(\"token.pickle\", 'rb') as token:\r\ncred = pickle.load(token)\r\nif not cred or not cred.valid:\r\nif cred and cred.expired and cred.refresh_token:\r\ncred.refresh(Request())\r\nelse:\r\nflow = InstalledAppFlow.from_client_secrets_file(\"client_secrets.json\", google_oauth2_scopes)\r\ncred = flow.run_local_server(port=0)\r\nwith open(\"token.pickle\", 'wb') as token:\r\npickle.dump(cred, token)\r\n\r\nauthorize_gdocs()\r\n#Drive_loader\r\nGoogleDriveReader = download_loader('GoogleDriveReader')\r\nfolder_id = '1LFa04mF3U300ttoej-EkWcT35sHHDZJL'\r\nloader = GoogleDriveReader()\r\ndocuments = loader.load_data(folder_id=folder_id)\r\n\r\nllm = ChatOpenAI(\r\ntemperature=0,\r\nmodel_name=\"gpt-3.5-turbo\",\r\n\r\nfrequency_penalty = 0.5,\r\nmax_tokens=500,\r\nstreaming=True,\r\n)\r\nllm_predictor = LLMPredictor(llm=llm)\r\n\r\nprompt_helper = PromptHelper(\r\nmax_input_size = 3500,\r\nnum_output = 500,\r\nmax_chunk_overlap = 20,\r\nchunk_size_limit = 700\r\n)\r\n\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper)\r\n\r\nindex = GPTVectorStoreIndex.from_documents(documents, service_context=service_context )\r\n\r\n#persisting index\r\nindex.storage_context.persist('C:\\Users\\Lenovo\\Desktop\\DocumentBot\\storage')\r\n\r\nrebuild storage context\r\nstorage_context = StorageContext.from_defaults(persist_dir=\"./storage\")\r\n\r\nload index\r\nindex = load_index_from_storage(storage_context,service_context=service_context)\r\n\r\nFlask App Code\r\napp = Flask(name)\r\n\r\n@app.route('/')\r\n@cross_origin()\r\ndef home():\r\nreturn render_template('index.html')\r\n\r\n@app.route('/query', methods=['POST'])\r\n@cross_origin()\r\ndef query():\r\nquery_engine = index.as_query_engine(similarity_top_k=3, streaming=True)\r\nprompt = request.json\r\n# prompt['prompt'] += \" Give in html format\"\r\nprint('prompt given issss:',prompt)\r\nresponse_stream = query_engine.query(prompt['prompt'])\r\n# response_stream.print_response_stream()\r\ndef generate_response():\r\nfor text in response_stream.response_gen:\r\nyield f\"data: {text}\\n\\n\"\r\n# print(text)\r\nreturn Response(stream_with_context(generate_response()), mimetype='text/event-stream')\r\n\r\nReference code while reading file from local system\r\nllm = ChatOpenAI(\r\ntemperature=0,\r\nmodel_name=\"gpt-3.5-turbo\",\r\nmax_tokens=500,\r\nstreaming=True,\r\n)\r\nllm_predictor = LLMPredictor(llm=llm)\r\n\r\nprompt_helper = PromptHelper(\r\nmax_input_size = 3500,\r\nnum_output = 500,\r\nmax_chunk_overlap = 20,\r\nchunk_size_limit = 700\r\n)\r\n\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper)\r\ndocuments = SimpleDirectoryReader('./demoDoc/').load_data()\r\nindex = GPTVectorStoreIndex.from_documents(documents, service_context=service_context )\r\nindex.storage_context.persist('./storage/')\r\nstorage_context = StorageContext.from_defaults(persist_dir='./storage/')\r\nindex = load_index_from_storage(storage_context,service_context=service_context)\r\nquery_engine = index.as_query_engine(similarity_top_k=3, streaming=True)\r\nprompt=input(\"ask here:\")\r\nresponse_stream = query_engine.query(prompt)\r\nresponse_stream.print_response_stream()",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6126/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6126/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6125",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6125/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6125/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6125/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6125",
        "id": 1744886491,
        "node_id": "I_kwDOIWuq585oANrb",
        "number": 6125,
        "title": "[Bug]: Why do I upgrade llama_index to the newest version and get RateLimitError?",
        "user": {
            "login": "dinhan92",
            "id": 86275789,
            "node_id": "MDQ6VXNlcjg2Mjc1Nzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/86275789?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dinhan92",
            "html_url": "https://github.com/dinhan92",
            "followers_url": "https://api.github.com/users/dinhan92/followers",
            "following_url": "https://api.github.com/users/dinhan92/following{/other_user}",
            "gists_url": "https://api.github.com/users/dinhan92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dinhan92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dinhan92/subscriptions",
            "organizations_url": "https://api.github.com/users/dinhan92/orgs",
            "repos_url": "https://api.github.com/users/dinhan92/repos",
            "events_url": "https://api.github.com/users/dinhan92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dinhan92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-07T01:49:49Z",
        "updated_at": "2023-06-13T03:58:45Z",
        "closed_at": "2023-06-12T08:42:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nWhy do I upgrade llama_index to the newest version and get RateLimitError?\r\n\r\nopenai.error.RateLimitError: Rate limit reached for default-gpt-3.5-turbo in organization org-PH8zdIn1RI0V7H7Aak3Lzy73 on requests per min. Limit: 3 / min. Please try again in 20s. Contact us through our help center at help.openai.com if you continue to have issues. Please add a payment method to your account to increase your rate limit. Visit https://platform.openai.com/account/billing to add a payment method.\r\n\r\n### Version\r\n\r\n0.6.20\r\n\r\n### Steps to Reproduce\r\n\r\nmax_input_size = 4096\r\nnum_outputs = 512\r\nmax_chunk_overlap = 0.02\r\nchunk_size_limit = 256\r\n\r\nprompt_helper = PromptHelper(max_input_size, num_outputs, max_chunk_overlap, chunk_size_limit=chunk_size_limit)\r\n\r\nprepend_messages = [\r\n    SystemMessagePromptTemplate.from_template(\"You are a helpful assistant that use Vietnamese in every response\")\r\n]\r\nllm_predictor = ChatGPTLLMPredictor(llm=ChatOpenAI(temperature=0, model_name=\"gpt-3.5-turbo\", streaming=True), prepend_messages = prepend_messages)\r\n\r\nservice_context = ServiceContext.from_defaults(\r\n        llm_predictor = llm_predictor,\r\n        prompt_helper = prompt_helper)\r\n\r\ndef chatbot:\r\n    storage_context = StorageContext.from_defaults(persist_dir='./storage')\r\n \r\n    index = load_index_from_storage(storage_context = storage_context,\r\n                                    \r\n                                    service_context = service_context)\r\n  \r\n    query_engine = index.as_query_engine(\r\n        streaming=True,\r\n       \r\n    )\r\n\r\n    \r\n    response = query_engine.query(input_text)\r\n\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6125/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6125/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6124",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6124/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6124/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6124/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6124",
        "id": 1744839252,
        "node_id": "PR_kwDOIWuq585SW487",
        "number": 6124,
        "title": "update sql guide",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T00:56:12Z",
        "updated_at": "2023-08-28T17:11:26Z",
        "closed_at": "2023-06-07T01:18:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6124",
            "html_url": "https://github.com/run-llama/llama_index/pull/6124",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6124.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6124.patch",
            "merged_at": "2023-06-07T01:18:14Z"
        },
        "body": "# Description\r\n\r\nThe SQL guide was a little out of date, and missing imports/links.\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/6080\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6124/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6124/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6123",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6123/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6123/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6123/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6123",
        "id": 1744656614,
        "node_id": "PR_kwDOIWuq585SWRTF",
        "number": 6123,
        "title": "fix multimodal notebook",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-06T21:44:03Z",
        "updated_at": "2023-08-28T17:11:12Z",
        "closed_at": "2023-06-06T21:48:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6123",
            "html_url": "https://github.com/run-llama/llama_index/pull/6123",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6123.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6123.patch",
            "merged_at": "2023-06-06T21:48:24Z"
        },
        "body": "# Description\r\n\r\nThe multimodal notebook was severely out of date (many broken imports and examples).\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/6116\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6123/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6123/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6122",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6122/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6122/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6122/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6122",
        "id": 1744606027,
        "node_id": "I_kwDOIWuq585n_JNL",
        "number": 6122,
        "title": "[Documentation]: SimilarityPostprocessor enhancement ",
        "user": {
            "login": "EmanuelCampos",
            "id": 16262455,
            "node_id": "MDQ6VXNlcjE2MjYyNDU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/16262455?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EmanuelCampos",
            "html_url": "https://github.com/EmanuelCampos",
            "followers_url": "https://api.github.com/users/EmanuelCampos/followers",
            "following_url": "https://api.github.com/users/EmanuelCampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/EmanuelCampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EmanuelCampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EmanuelCampos/subscriptions",
            "organizations_url": "https://api.github.com/users/EmanuelCampos/orgs",
            "repos_url": "https://api.github.com/users/EmanuelCampos/repos",
            "events_url": "https://api.github.com/users/EmanuelCampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EmanuelCampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-06T21:01:03Z",
        "updated_at": "2023-06-06T21:11:51Z",
        "closed_at": "2023-06-06T21:11:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\nnot enough information about the similarity_cutoff parameters and how it works.\n\n### Documenation Link\n\nhttps://gpt-index.readthedocs.io/en/latest/how_to/query_engine/advanced/second_stage.html#similaritypostprocessor",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6122/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6122/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6121",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6121/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6121/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6121/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6121",
        "id": 1744604256,
        "node_id": "PR_kwDOIWuq585SWF20",
        "number": 6121,
        "title": "docs: improve SimilarityPostprocessor documentation",
        "user": {
            "login": "EmanuelCampos",
            "id": 16262455,
            "node_id": "MDQ6VXNlcjE2MjYyNDU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/16262455?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EmanuelCampos",
            "html_url": "https://github.com/EmanuelCampos",
            "followers_url": "https://api.github.com/users/EmanuelCampos/followers",
            "following_url": "https://api.github.com/users/EmanuelCampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/EmanuelCampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EmanuelCampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EmanuelCampos/subscriptions",
            "organizations_url": "https://api.github.com/users/EmanuelCampos/orgs",
            "repos_url": "https://api.github.com/users/EmanuelCampos/repos",
            "events_url": "https://api.github.com/users/EmanuelCampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EmanuelCampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-06T20:59:39Z",
        "updated_at": "2023-06-06T21:09:18Z",
        "closed_at": "2023-06-06T21:09:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6121",
            "html_url": "https://github.com/run-llama/llama_index/pull/6121",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6121.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6121.patch",
            "merged_at": "2023-06-06T21:09:17Z"
        },
        "body": "# Description\r\n\r\nAn enhancement on the documentation about SimilarityPostprocessor, and how `similarity_cutoff` works.\r\n\r\n# Fix issues\r\nhttps://github.com/jerryjliu/llama_index/issues/6122\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n- [x] Documentation update\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6121/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6121/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6120",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6120/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6120/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6120/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6120",
        "id": 1744503798,
        "node_id": "I_kwDOIWuq585n-wP2",
        "number": 6120,
        "title": "GPTVectorStoreIndex gives me error - ValueError: One of documents or index_struct must be provided.",
        "user": {
            "login": "aleksandar-devedzic",
            "id": 80043893,
            "node_id": "MDQ6VXNlcjgwMDQzODkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/80043893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aleksandar-devedzic",
            "html_url": "https://github.com/aleksandar-devedzic",
            "followers_url": "https://api.github.com/users/aleksandar-devedzic/followers",
            "following_url": "https://api.github.com/users/aleksandar-devedzic/following{/other_user}",
            "gists_url": "https://api.github.com/users/aleksandar-devedzic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aleksandar-devedzic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aleksandar-devedzic/subscriptions",
            "organizations_url": "https://api.github.com/users/aleksandar-devedzic/orgs",
            "repos_url": "https://api.github.com/users/aleksandar-devedzic/repos",
            "events_url": "https://api.github.com/users/aleksandar-devedzic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aleksandar-devedzic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-06T19:58:19Z",
        "updated_at": "2023-06-06T21:12:55Z",
        "closed_at": "2023-06-06T21:12:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n\r\nI want to train LLM on custom dataset. This is my code:\r\n\r\n```\r\nfrom llama_index import SimpleDirectoryReader, GPTListIndex, GPTVectorStoreIndex, LLMPredictor, PromptHelper\r\nfrom langchain import OpenAI\r\nimport os\r\n\r\napikey = \"sk-fzDu2MtAdhPiR\"\r\nos.environ[\"OPENAI_API_KEY\"] = apikey\r\n\r\n\r\ndef createVectorIndex(path):\r\n    \r\n    max_input = 4000\r\n    tokens = 256\r\n    chunk_size = 600\r\n    max_chunk_overlap = 0.20\r\n    \r\n    prompt_helper = PromptHelper(max_input, tokens, max_chunk_overlap, chunk_size_limit = chunk_size)\r\n    \r\n    #define LLM\r\n    llm_predictor = LLMPredictor(llm=OpenAI(temperature = 0, model_name = \"text-ada-001\", max_tokens = tokens))\r\n    \r\n    #load data\r\n    data = SimpleDirectoryReader(path).load_data()\r\n\r\n    vector_index = GPTVectorStoreIndex(documents = data, \r\n                                       llm_predictor = llm_predictor, \r\n                                       prompt_helper = prompt_helper, \r\n                                       index_name=\"my_index\")\r\n    \r\n    vector_index.save_to_disc(\"vector_index.json\")\r\n    \r\n    return vector_index=\r\n\r\nvector_index = createVectorIndex(\"gpt_data\")\r\n```\r\n\r\n\r\nI am getting this error:\r\n\r\n```\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-39-de1d095ec55f> in <module>\r\n----> 1 vector_index = createVectorIndex(\"gpt_data\")\r\n\r\n<ipython-input-38-f5b73669d881> in createVectorIndex(path)\r\n     17         print(i)\r\n     18 \r\n---> 19     vector_index = GPTVectorStoreIndex(documents = data, \r\n     20                                        llm_predictor = llm_predictor,\r\n     21                                        prompt_helper = prompt_helper,\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/llama_index/indices/vector_store/base.py in __init__(self, nodes, index_struct, service_context, storage_context, use_async, store_nodes_override, **kwargs)\r\n     43         self._use_async = use_async\r\n     44         self._store_nodes_override = store_nodes_override\r\n---> 45         super().__init__(\r\n     46             nodes=nodes,\r\n     47             index_struct=index_struct,\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/llama_index/indices/base.py in __init__(self, nodes, index_struct, storage_context, service_context, **kwargs)\r\n     43         \"\"\"Initialize with parameters.\"\"\"\r\n     44         if index_struct is None and nodes is None:\r\n---> 45             raise ValueError(\"One of documents or index_struct must be provided.\")\r\n     46         if index_struct is not None and nodes is not None:\r\n     47             raise ValueError(\"Only one of documents or index_struct can be provided.\")\r\n\r\nValueError: One of documents or index_struct must be provided.\r\n```\r\n\r\n\r\nI have tried with and without index_name=\"my_index\", error is the same.\r\n\r\n\"gpt_data\" is folder with 1 txt file.\r\n\r\nThis line:\r\n\r\ndata = SimpleDirectoryReader(path).load_data()\r\nGives me this:\r\n\r\n[Document(text=\"Kimberlites are ... m thermochemica, doc_id='5bbe7a75-7817-4c00-bce1-db9256fde270', embedding=None, doc_hash='87fb32e4834c847365178498a6ce166a68df5d5547c8631df46d577616dd37e8', extra_info=None)]\r\n\r\nSo I manage to read the document, i added it to data variable, but GPTVectorStoreIndex treat it like an empty.\r\n\r\nI am using:\r\n\r\nVersion: 0.6.20\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6120/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6120/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6118",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6118/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6118/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6118/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6118",
        "id": 1744389187,
        "node_id": "I_kwDOIWuq585n-URD",
        "number": 6118,
        "title": "[Question]: what similarity score and llama embedding ",
        "user": {
            "login": "abdoelsayed2016",
            "id": 27821589,
            "node_id": "MDQ6VXNlcjI3ODIxNTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/27821589?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abdoelsayed2016",
            "html_url": "https://github.com/abdoelsayed2016",
            "followers_url": "https://api.github.com/users/abdoelsayed2016/followers",
            "following_url": "https://api.github.com/users/abdoelsayed2016/following{/other_user}",
            "gists_url": "https://api.github.com/users/abdoelsayed2016/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abdoelsayed2016/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abdoelsayed2016/subscriptions",
            "organizations_url": "https://api.github.com/users/abdoelsayed2016/orgs",
            "repos_url": "https://api.github.com/users/abdoelsayed2016/repos",
            "events_url": "https://api.github.com/users/abdoelsayed2016/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abdoelsayed2016/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-06T18:39:39Z",
        "updated_at": "2023-06-30T12:34:45Z",
        "closed_at": "2023-06-06T21:14:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI need some assistance. I've been trying to find answers in the documentation, but I couldn't locate the information I need. Firstly, I'd like to know what similarity score is being utilized in this code. Is it possible to control or switch between cosine or maximum inner product search?\r\n\r\nAdditionally, I noticed the line LangchainEmbedding(HuggingFaceEmbeddings()) in the code. Could you please clarify which model is being used for embedding here?\r\n\r\nLastly, I'm encountering an error when I attempt to pass the model name to the function for embedding using llama. Can you guide me on how to use Llama for embedding?\r\n\r\n```\r\n\r\nimport os\r\nfrom llama_index.retrievers import BaseRetriever, VectorIndexRetriever, KeywordTableSimpleRetriever\r\nfrom llama_index import ResponseSynthesizer\r\nfrom llama_index.indices.postprocessor import SimilarityPostprocessor\r\n\r\nfrom llama_index.query_engine import RetrieverQueryEngine\r\nfrom llama_index import LLMPredictor,  download_loader, GPTListIndex, ServiceContext, PromptHelper, LangchainEmbedding, GPTVectorStoreIndex\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom llama_index.embeddings.openai import OpenAIEmbedding\r\nfrom llama_index.llm_predictor import HuggingFaceLLMPredictor\r\nfrom langchain import OpenAI\r\nimport torch\r\nfrom llama_index import SimpleDirectoryReader\r\nfrom llama_index import Document\r\nfrom langchain.llms import HuggingFacePipeline\r\nfrom transformers import pipeline\r\n\r\n\r\n\r\ntext_list = [\r\n'The Nobel Prize in computer science is a yearly award given by the Royal Swedish Academy of Sciences for those who have made the most outstanding contributions for mankind in the field of physics. It is one of the five Nobel Prizes established by the 1895 will of Alfred Nobel, which are awarded for outstanding contributions in chemistry, physiology or medicine, literature, and physics. These prizes are awarded in Stockholm, Sweden. The first Nobel Prize in Physics was awarded to Wilhelm R\\u00f6ntgen in 1901.',\r\n'The Nobel Prize in Physics is a yearly award given by the Royal Swedish Academy of Sciences for those who have made the most outstanding contributions for mankind in the field of physics. It is one of the five Nobel Prizes established by the 1895 will of Alfred Nobel, which are awarded for outstanding contributions in chemistry, physiology or medicine, literature, and physics. These prizes are awarded in Stockholm, Sweden. The first Nobel Prize in Physics was awarded to Wilhelm R\\u00f6ntgen in 1901.',\r\n'The first Nobel Prize in Physics was awarded to German physicist Wilhelm Conrad R\\u00f6ntgen in 1901. R\\u00f6ntgen was recognized for his discovery of x-rays, which are a type of electromagnetic radiation.',\r\n'The first Nobel Prize in Physics was awarded to Wilhelm R\\u00f6ntgen in 1901 \\\"for his discoveries regarding X-rays\\\".',\r\n'The Nobel Prize in Physics is awarded annually by the Royal Swedish Academy of Sciences to scientists in the various fields of physics. It is one of the five Nobel Prizes established by the 1895 will of Alfred Nobel, the Swedish chemist, engineer, and industrialist. These prizes are awarded for outstanding contributions in chemistry, physics, literature, peace, and physiology or medicine. As dictated by Nobel\\'s will, the award is administered by the Nobel Foundation and awarded by a committee that consists of five members elected by the Royal Swedish Academy of Sciences.',\r\n'The first Nobel Prize in Physics was awarded in 1901 to Wilhelm Conrad R\\u00f6ntgen \\\"for his discovery of the remarkable rays subsequently named after him\\\".',\r\n]#\r\n\r\nmodel_name= \"yahma/llama-7b-hf\"\r\ntokenizer_name=\"yahma/llama-7b-hf\"\r\npipe = pipeline(\r\n     model=model_name, tokenizer=tokenizer_name,\r\n    max_length=1024, temperature=0, top_p = 1,no_repeat_ngram_size=4, early_stopping=True\r\n)\r\n\r\ndocuments = [Document(t) for t in text_list]\r\n\r\nprint(\"HuggingFaceLLMPredictor\")\r\n\r\nllm = HuggingFacePipeline(pipeline=pipe)\r\n\r\n\"\"\"HuggingFaceLLMPredictor(\r\n    max_input_size=4096, \r\n    max_new_tokens=256,\r\n    temperature=0.7,\r\n    do_sample=False,\r\n    tokenizer_name=\"yahma/llama-7b-hf\",\r\n    model_name=\"yahma/llama-7b-hf\",\r\n    device_map=\"auto\",\r\n    stopping_ids=[50278, 50279, 50277, 1, 0],\r\n    tokenizer_kwargs={\"max_length\": 4096},\r\n    # uncomment this if using CUDA to reduce memory usage\r\n    # model_kwargs={\"torch_dtype\": torch.float16}\r\n)\"\"\"\r\n\r\nembed_model = LangchainEmbedding(HuggingFaceEmbeddings())\r\n\r\n\r\nllm_predictor = LLMPredictor(llm=llm)\r\n\r\n# define prompt helper\r\n# set maximum input size\r\nmax_input_size = 4096\r\n# set number of output tokens\r\nnum_output = 2048\r\n# set maximum chunk overlap\r\nmax_chunk_overlap = 10\r\n# set chunk size limit\r\nchunk_size_limit = 1024\r\n\r\n\r\nprompt_helper = PromptHelper(max_input_size, num_output, max_chunk_overlap, chunk_size_limit=chunk_size_limit)\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper,\r\n                                               embed_model=embed_model)\r\nindex = GPTVectorStoreIndex.from_documents(\r\n        documents, service_context=service_context\r\n    )\r\nindex.storage_context.persist(persist_dir=\"./storage2\")\r\n\r\n    # configure retriever\r\nretriever = VectorIndexRetriever(\r\n        service_context=service_context,\r\n        index=index,\r\n        similarity_top_k=2,\r\n\r\n    )\r\n    # configure response synthesizer\r\nresponse_synthesizer = ResponseSynthesizer.from_args(\r\n        response_mode=\"no_text\",\r\n        service_context=service_context,\r\n        node_postprocessors=[\r\n            SimilarityPostprocessor(similarity_cutoff=0.7)\r\n        ]\r\n    )\r\n    # retriever = index.as_retriever(retriever_mode='default')\r\n\r\n    # assemble query engine\r\nquery_engine = RetrieverQueryEngine(\r\n        retriever=retriever,\r\n        response_synthesizer=response_synthesizer,\r\n    )\r\nresponse = query_engine.query(\"who got the first nobel prize in physics\")\r\n\r\nprint(response.source_nodes[0].score)\r\nprint(response.source_nodes[0].node )\r\nprint(response.source_nodes[0].node.text )\r\nprint(\"*\"*80)\r\nprint(response.source_nodes[1].score)\r\nprint(response.source_nodes[1].node )\r\nprint(response.source_nodes[1].node.text )\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6118/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6118/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6117",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6117/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6117/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6117/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6117",
        "id": 1744119650,
        "node_id": "I_kwDOIWuq585n9Sdi",
        "number": 6117,
        "title": "[Feature Request]: Please stop the frequent and unnecessary renaming of important classes (GPTSimpleVectorIndex, GPTVectorStoreIndex, VectorStoreIndex, etc.)",
        "user": {
            "login": "xjdeng",
            "id": 17135596,
            "node_id": "MDQ6VXNlcjE3MTM1NTk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/17135596?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xjdeng",
            "html_url": "https://github.com/xjdeng",
            "followers_url": "https://api.github.com/users/xjdeng/followers",
            "following_url": "https://api.github.com/users/xjdeng/following{/other_user}",
            "gists_url": "https://api.github.com/users/xjdeng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xjdeng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xjdeng/subscriptions",
            "organizations_url": "https://api.github.com/users/xjdeng/orgs",
            "repos_url": "https://api.github.com/users/xjdeng/repos",
            "events_url": "https://api.github.com/users/xjdeng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xjdeng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-06T15:35:17Z",
        "updated_at": "2023-06-06T21:14:23Z",
        "closed_at": "2023-06-06T21:14:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nCan you please decide on a single name and just stick to it?  It breaks our code every time it's renamed and it seems to be happening every few updates!\n\n### Reason\n\nI don't foresee any issues with LlamaIndex sticking with the same class names and not constantly renaming them.  Having to rewrite our code every time there's an update in order to accomodate important classes being renamed at the whim of the devs is not a practical solution, esp if it leaves important systems that rely on llamaindex in a state of limbo\n\n### Value of Feature\n\nSo we don't need to rename important classes in our code in order to get it to continue working whenever there's an update to Llamaindex",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6117/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6117/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6116",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6116/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6116/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6116/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6116",
        "id": 1744117310,
        "node_id": "I_kwDOIWuq585n9R4-",
        "number": 6116,
        "title": "Import error for Multimodall notebook example",
        "user": {
            "login": "Irene-PHAM",
            "id": 72609295,
            "node_id": "MDQ6VXNlcjcyNjA5Mjk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/72609295?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Irene-PHAM",
            "html_url": "https://github.com/Irene-PHAM",
            "followers_url": "https://api.github.com/users/Irene-PHAM/followers",
            "following_url": "https://api.github.com/users/Irene-PHAM/following{/other_user}",
            "gists_url": "https://api.github.com/users/Irene-PHAM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Irene-PHAM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Irene-PHAM/subscriptions",
            "organizations_url": "https://api.github.com/users/Irene-PHAM/orgs",
            "repos_url": "https://api.github.com/users/Irene-PHAM/repos",
            "events_url": "https://api.github.com/users/Irene-PHAM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Irene-PHAM/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-06T15:33:49Z",
        "updated_at": "2023-06-06T21:48:47Z",
        "closed_at": "2023-06-06T21:48:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi,\r\n\r\nFirst of all, thank you for the amazing library.\r\n\r\nI'm testing out the functionality with multimodal notebook, however it seems that the example is dated. The function name is not the same. Could you please help to pinpoint the exact version used in the example. Or the new notebook? \r\n\r\nHere's the notebook that i run: https://github.com/jerryjliu/llama_index/blob/main/examples/multimodal/Multimodal.ipynb\r\n\r\nMany thanks",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6116/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6116/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6115",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6115/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6115/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6115/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6115",
        "id": 1744064575,
        "node_id": "PR_kwDOIWuq585SUQSC",
        "number": 6115,
        "title": "Update PineconeIndexDemo.ipynb",
        "user": {
            "login": "SpiritedAwayLab",
            "id": 35682566,
            "node_id": "MDQ6VXNlcjM1NjgyNTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/35682566?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SpiritedAwayLab",
            "html_url": "https://github.com/SpiritedAwayLab",
            "followers_url": "https://api.github.com/users/SpiritedAwayLab/followers",
            "following_url": "https://api.github.com/users/SpiritedAwayLab/following{/other_user}",
            "gists_url": "https://api.github.com/users/SpiritedAwayLab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SpiritedAwayLab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SpiritedAwayLab/subscriptions",
            "organizations_url": "https://api.github.com/users/SpiritedAwayLab/orgs",
            "repos_url": "https://api.github.com/users/SpiritedAwayLab/repos",
            "events_url": "https://api.github.com/users/SpiritedAwayLab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SpiritedAwayLab/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-06T15:05:09Z",
        "updated_at": "2023-06-06T21:11:32Z",
        "closed_at": "2023-06-06T21:11:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6115",
            "html_url": "https://github.com/run-llama/llama_index/pull/6115",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6115.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6115.patch",
            "merged_at": "2023-06-06T21:11:32Z"
        },
        "body": "fix index name\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6115/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6115/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6111",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6111/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6111/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6111/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6111",
        "id": 1743857168,
        "node_id": "I_kwDOIWuq585n8SYQ",
        "number": 6111,
        "title": "[Question]: Is it possible to insert documents one by one into a ComposableGraph?",
        "user": {
            "login": "YasmineMh",
            "id": 42073781,
            "node_id": "MDQ6VXNlcjQyMDczNzgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/42073781?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YasmineMh",
            "html_url": "https://github.com/YasmineMh",
            "followers_url": "https://api.github.com/users/YasmineMh/followers",
            "following_url": "https://api.github.com/users/YasmineMh/following{/other_user}",
            "gists_url": "https://api.github.com/users/YasmineMh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/YasmineMh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YasmineMh/subscriptions",
            "organizations_url": "https://api.github.com/users/YasmineMh/orgs",
            "repos_url": "https://api.github.com/users/YasmineMh/repos",
            "events_url": "https://api.github.com/users/YasmineMh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/YasmineMh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-06T13:17:55Z",
        "updated_at": "2023-06-07T07:52:19Z",
        "closed_at": "2023-06-07T00:25:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nIs it possible to insert documents one by one into a ComposableGraph?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6111/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6111/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6108",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6108/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6108/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6108/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6108",
        "id": 1743794851,
        "node_id": "PR_kwDOIWuq585STVgl",
        "number": 6108,
        "title": "more robust default pdf parser",
        "user": {
            "login": "thunderbug1",
            "id": 1395321,
            "node_id": "MDQ6VXNlcjEzOTUzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1395321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thunderbug1",
            "html_url": "https://github.com/thunderbug1",
            "followers_url": "https://api.github.com/users/thunderbug1/followers",
            "following_url": "https://api.github.com/users/thunderbug1/following{/other_user}",
            "gists_url": "https://api.github.com/users/thunderbug1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thunderbug1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thunderbug1/subscriptions",
            "organizations_url": "https://api.github.com/users/thunderbug1/orgs",
            "repos_url": "https://api.github.com/users/thunderbug1/repos",
            "events_url": "https://api.github.com/users/thunderbug1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thunderbug1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-06T12:43:32Z",
        "updated_at": "2023-06-21T06:33:04Z",
        "closed_at": "2023-06-21T06:32:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6108",
            "html_url": "https://github.com/run-llama/llama_index/pull/6108",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6108.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6108.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nDue to https://github.com/py-pdf/pypdf/issues/1507 it would be good to have a more robust pdf parser.\r\nThis parser is based on pdfminer.six which produces better results.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6108/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6108/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6089",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6089/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6089/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6089/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6089",
        "id": 1743473014,
        "node_id": "I_kwDOIWuq585n60l2",
        "number": 6089,
        "title": "[Question]: how to get index from ChromaReader?",
        "user": {
            "login": "vegetax",
            "id": 38912494,
            "node_id": "MDQ6VXNlcjM4OTEyNDk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/38912494?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vegetax",
            "html_url": "https://github.com/vegetax",
            "followers_url": "https://api.github.com/users/vegetax/followers",
            "following_url": "https://api.github.com/users/vegetax/following{/other_user}",
            "gists_url": "https://api.github.com/users/vegetax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vegetax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vegetax/subscriptions",
            "organizations_url": "https://api.github.com/users/vegetax/orgs",
            "repos_url": "https://api.github.com/users/vegetax/repos",
            "events_url": "https://api.github.com/users/vegetax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vegetax/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-06T09:37:34Z",
        "updated_at": "2023-07-22T18:38:45Z",
        "closed_at": "2023-07-22T18:38:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nhow to get index from ChromaReader?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6089/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6089/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6082",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6082/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6082/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6082/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6082",
        "id": 1743360767,
        "node_id": "I_kwDOIWuq585n6ZL_",
        "number": 6082,
        "title": "[Question]: llama-index 0.6.20 A Guide to LlamaIndex + Structured Data, i got running error",
        "user": {
            "login": "zhuzhuyan93",
            "id": 71576909,
            "node_id": "MDQ6VXNlcjcxNTc2OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/71576909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhuzhuyan93",
            "html_url": "https://github.com/zhuzhuyan93",
            "followers_url": "https://api.github.com/users/zhuzhuyan93/followers",
            "following_url": "https://api.github.com/users/zhuzhuyan93/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhuzhuyan93/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhuzhuyan93/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhuzhuyan93/subscriptions",
            "organizations_url": "https://api.github.com/users/zhuzhuyan93/orgs",
            "repos_url": "https://api.github.com/users/zhuzhuyan93/repos",
            "events_url": "https://api.github.com/users/zhuzhuyan93/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhuzhuyan93/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-06T08:30:47Z",
        "updated_at": "2023-06-06T14:47:17Z",
        "closed_at": "2023-06-06T14:47:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nwhen i run into \r\n`index = SQLStructStoreIndex.from_documents(\r\n    wiki_docs, \r\n    sql_database=sql_database, \r\n    table_name=\"city_stats\",\r\n)`\r\ni got error like \"not enough values to unpack (expected 2, got 1)\", is anyone met this?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6082/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6082/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6081",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6081/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6081/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6081/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6081",
        "id": 1743360620,
        "node_id": "I_kwDOIWuq585n6ZJs",
        "number": 6081,
        "title": "[Question]: llama-index 0.6.20 A Guide to LlamaIndex + Structured Data, i got running error",
        "user": {
            "login": "zhuzhuyan93",
            "id": 71576909,
            "node_id": "MDQ6VXNlcjcxNTc2OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/71576909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhuzhuyan93",
            "html_url": "https://github.com/zhuzhuyan93",
            "followers_url": "https://api.github.com/users/zhuzhuyan93/followers",
            "following_url": "https://api.github.com/users/zhuzhuyan93/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhuzhuyan93/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhuzhuyan93/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhuzhuyan93/subscriptions",
            "organizations_url": "https://api.github.com/users/zhuzhuyan93/orgs",
            "repos_url": "https://api.github.com/users/zhuzhuyan93/repos",
            "events_url": "https://api.github.com/users/zhuzhuyan93/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhuzhuyan93/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-06T08:30:41Z",
        "updated_at": "2023-06-06T14:47:17Z",
        "closed_at": "2023-06-06T14:47:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nwhen i run into \r\n`index = SQLStructStoreIndex.from_documents(\r\n    wiki_docs, \r\n    sql_database=sql_database, \r\n    table_name=\"city_stats\",\r\n)`\r\ni got error like \"not enough values to unpack (expected 2, got 1)\", is anyone met this?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6081/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6081/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6080",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6080/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6080/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6080/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6080",
        "id": 1743360471,
        "node_id": "I_kwDOIWuq585n6ZHX",
        "number": 6080,
        "title": "[Question]: llama-index 0.6.20 A Guide to LlamaIndex + Structured Data, i got running error",
        "user": {
            "login": "zhuzhuyan93",
            "id": 71576909,
            "node_id": "MDQ6VXNlcjcxNTc2OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/71576909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhuzhuyan93",
            "html_url": "https://github.com/zhuzhuyan93",
            "followers_url": "https://api.github.com/users/zhuzhuyan93/followers",
            "following_url": "https://api.github.com/users/zhuzhuyan93/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhuzhuyan93/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhuzhuyan93/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhuzhuyan93/subscriptions",
            "organizations_url": "https://api.github.com/users/zhuzhuyan93/orgs",
            "repos_url": "https://api.github.com/users/zhuzhuyan93/repos",
            "events_url": "https://api.github.com/users/zhuzhuyan93/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhuzhuyan93/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-06T08:30:34Z",
        "updated_at": "2023-06-07T01:18:16Z",
        "closed_at": "2023-06-07T01:18:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nwhen i run into \r\n`index = SQLStructStoreIndex.from_documents(\r\n    wiki_docs, \r\n    sql_database=sql_database, \r\n    table_name=\"city_stats\",\r\n)`\r\ni got error like \"not enough values to unpack (expected 2, got 1)\", is anyone met this?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6080/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6080/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6079",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6079/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6079/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6079/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6079",
        "id": 1743327190,
        "node_id": "I_kwDOIWuq585n6Q_W",
        "number": 6079,
        "title": "[Bug]: error: subprocess-exited-with-error",
        "user": {
            "login": "yakiimoumai",
            "id": 69888779,
            "node_id": "MDQ6VXNlcjY5ODg4Nzc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/69888779?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yakiimoumai",
            "html_url": "https://github.com/yakiimoumai",
            "followers_url": "https://api.github.com/users/yakiimoumai/followers",
            "following_url": "https://api.github.com/users/yakiimoumai/following{/other_user}",
            "gists_url": "https://api.github.com/users/yakiimoumai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yakiimoumai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yakiimoumai/subscriptions",
            "organizations_url": "https://api.github.com/users/yakiimoumai/orgs",
            "repos_url": "https://api.github.com/users/yakiimoumai/repos",
            "events_url": "https://api.github.com/users/yakiimoumai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yakiimoumai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-06T08:12:50Z",
        "updated_at": "2023-07-22T18:55:26Z",
        "closed_at": "2023-07-22T18:55:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nHello,Thanks for your good application.\r\n\r\nI am connecting to a rental server via ssh. The shell is cshrc, sudo is not available.\r\nPython3 is already installed,\r\nWhen I do % python3 --version, I get Python 3.8.12,\r\nPython 3.8.12 comes up.\r\nWhen I try to install the python module llama_index with pip3, I get an error,\r\n\r\nI got an error when installing numpy and rust.\r\nI think I managed to install rust in my directory (under ~/.cargo/),\r\nHowever, I am still getting the following error, so it does not seem to be working properly.\r\n\r\n```shell\r\n% pip3 list\r\nPackage            Version\r\n------------------ ---------\r\naiohttp            3.8.4\r\naiosignal          1.3.1\r\nasync-timeout      4.0.2\r\nattrs              23.1.0\r\nblinker            1.6.2\r\ncertifi            2021.10.8\r\ncffi               1.15.0\r\nchardet            4.0.0\r\ncharset-normalizer 3.1.0\r\nclick              8.1.3\r\ncryptography       2.9.2\r\nCython             0.29.35\r\nfail2ban           0.11.2\r\nFlask              2.3.2\r\nFlask-Cors         3.0.10\r\nfrozenlist         1.3.3\r\nidna               2.10\r\nimportlib-metadata 6.6.0\r\nitsdangerous       2.1.2\r\nJinja2             3.1.2\r\nMarkupSafe         2.1.2\r\nmultidict          6.0.4\r\nnumpy              1.24.3\r\nopenai             0.27.7\r\npip                23.1.2\r\npycparser          2.21\r\npyinotify          0.9.6\r\nPyMySQL            1.0.2\r\npyOpenSSL          20.0.1\r\nPySocks            1.7.1\r\nrequests           2.25.1\r\nsetuptools         57.0.0\r\nsix                1.16.0\r\nsqlite3            0.0.0\r\ntqdm               4.65.0\r\nurllib3            1.26.7\r\nversioneer         0.28\r\nWerkzeug           2.3.4\r\nwheel              0.40.0\r\nyarl               1.9.2\r\nzipp               3.15.0\r\n```\r\n\r\n\r\n\r\n### Context for the issue:\r\n\r\nI want to install and use llama_index(https://github.com/jerryjliu/llama_index) on my rental server, but an error occurs and I cannot use it.\r\n\r\nBy the way, I am trying to see if I can control the temporary directory that pip uses,\r\nTMP=~/.var/tmp, but I am not sure if it is possible.\n\n### Version\n\nI am using llama-index 0.5.2 locally (M1 mac). But on the rental server I am trying to install the latest version\n\n### Steps to Reproduce\n\nI am connecting to a rental server via ssh. The shell is cshrc, sudo is not available.\n\n### Relevant Logs/Tracbacks\n\n```shell\n### Reproduce the code example:\r\n\r\npip3 install llama_index\r\n\r\n\r\n### Error message:\r\n\r\n\r\nBuilding wheels for collected packages: tiktoken\r\n  Building wheel for tiktoken (pyproject.toml) ... error\r\n  error: subprocess-exited-with-error\r\n\r\n  \u00d7 Building wheel for tiktoken (pyproject.toml) did not run successfully.\r\n  \u2502 exit code: 1\r\n  \u2570\u2500> [52 lines of output]\r\n      running bdist_wheel\r\n      running build\r\n      running build_py\r\n      creating build\r\n      creating build/lib.freebsd-13.0-RELEASE-p13-amd64-cpython-38\r\n      creating build/lib.freebsd-13.0-RELEASE-p13-amd64-cpython-38/tiktoken\r\n      copying tiktoken/__init__.py -> build/lib.freebsd-13.0-RELEASE-p13-amd64-cpython-38/tiktoken\r\n      copying tiktoken/core.py -> build/lib.freebsd-13.0-RELEASE-p13-amd64-cpython-38/tiktoken\r\n      copying tiktoken/load.py -> build/lib.freebsd-13.0-RELEASE-p13-amd64-cpython-38/tiktoken\r\n      copying tiktoken/model.py -> build/lib.freebsd-13.0-RELEASE-p13-amd64-cpython-38/tiktoken\r\n      copying tiktoken/registry.py -> build/lib.freebsd-13.0-RELEASE-p13-amd64-cpython-38/tiktoken\r\n      creating build/lib.freebsd-13.0-RELEASE-p13-amd64-cpython-38/tiktoken_ext\r\n      copying tiktoken_ext/openai_public.py -> build/lib.freebsd-13.0-RELEASE-p13-amd64-cpython-38/tiktoken_ext\r\n      running egg_info\r\n      writing tiktoken.egg-info/PKG-INFO\r\n      writing dependency_links to tiktoken.egg-info/dependency_links.txt\r\n      writing requirements to tiktoken.egg-info/requires.txt\r\n      writing top-level names to tiktoken.egg-info/top_level.txt\r\n      reading manifest file 'tiktoken.egg-info/SOURCES.txt'\r\n      reading manifest template 'MANIFEST.in'\r\n      warning: no files found matching 'Makefile'\r\n      adding license file 'LICENSE'\r\n      writing manifest file 'tiktoken.egg-info/SOURCES.txt'\r\n      copying tiktoken/py.typed -> build/lib.freebsd-13.0-RELEASE-p13-amd64-cpython-38/tiktoken\r\n      running build_ext\r\n      running build_rust\r\n          Updating crates.io index\r\n         Compiling target-lexicon v0.12.7\r\n         Compiling autocfg v1.1.0\r\n         Compiling proc-macro2 v1.0.59\r\n         Compiling once_cell v1.18.0\r\n         Compiling memchr v2.5.0\r\n         Compiling unicode-ident v1.0.9\r\n         Compiling quote v1.0.28\r\n         Compiling libc v0.2.145\r\n           Running `rustc --crate-name build_script_build --edition=2018 /home/myname/.cargo/registry/src/index.crates.io-6f17d22bba15001f/target-lexicon-0.12.7/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debug-assertions=off --cfg 'feature=\"default\"' -C metadata=53ac526de1a70e41 -C extra-filename=-53ac526de1a70e41 --out-dir /var/tmp/pip-install-igps7zg1/tiktoken_d0cdc0f1bd114ce3bb2a252c41e4ba11/target/release/build/target-lexicon-53ac526de1a70e41 -L dependency=/var/tmp/pip-install-igps7zg1/tiktoken_d0cdc0f1bd114ce3bb2a252c41e4ba11/target/release/deps --cap-lints allow`\r\n           ...\r\n\r\n\r\n           Building wheels for collected packages: tiktoken\r\n       Building wheel for tiktoken (pyproject.toml) ... error\r\n       error: subprocess-exited-with-error\r\n\r\n       \u00d7 Building wheel for tiktoken (pyproject.toml) did not run successfully.\r\n       \u2502 exit code: 1\r\n       \u2570\u2500> [52 lines of output]\r\n\r\n       ...\r\n       warning: build failed, waiting for other jobs to finish...\r\n      cargo rustc --lib --message-format=json-render-diagnostics --manifest-path Cargo.toml --release -v --features pyo3/extension-module --crate-type cdylib --\r\n      error: `cargo rustc --lib --message-format=json-render-diagnostics --manifest-path Cargo.toml --release -v --features pyo3/extension-module --crate-type cdylib --` failed with code 101\r\n      [end of output]\r\n\r\n  note: This error originates from a subprocess, and is likely not a problem with pip.\r\n  ERROR: Failed building wheel for tiktoken\r\nFailed to build tiktoken\r\nERROR: Could not build wheels for tiktoken, which is required to install pyproject.toml-based projects\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6079/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6079/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6070",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6070/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6070/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6070/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6070",
        "id": 1743290172,
        "node_id": "I_kwDOIWuq585n6H88",
        "number": 6070,
        "title": "[Question]: best practices for cleaning a text file before processing it with GPTVectorStoreIndex.from_documents(documents)",
        "user": {
            "login": "marco-zorzi",
            "id": 24209287,
            "node_id": "MDQ6VXNlcjI0MjA5Mjg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/24209287?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marco-zorzi",
            "html_url": "https://github.com/marco-zorzi",
            "followers_url": "https://api.github.com/users/marco-zorzi/followers",
            "following_url": "https://api.github.com/users/marco-zorzi/following{/other_user}",
            "gists_url": "https://api.github.com/users/marco-zorzi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marco-zorzi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marco-zorzi/subscriptions",
            "organizations_url": "https://api.github.com/users/marco-zorzi/orgs",
            "repos_url": "https://api.github.com/users/marco-zorzi/repos",
            "events_url": "https://api.github.com/users/marco-zorzi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marco-zorzi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-06T07:50:05Z",
        "updated_at": "2023-09-19T16:01:23Z",
        "closed_at": "2023-09-19T16:01:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nHi,\r\nI need advice on the best practices for cleaning a text file before processing it with GPTVectorStoreIndex.from_documents(documents). \r\nI would like to know if it is preferable to use a formatted text file like \r\n\r\n\"Title text. Text text, text, chapter text text.\"  (all in a single line) \r\n\r\nor \r\n\r\n\"Title\r\ntext.\r\ntext text, text.\r\nchapter\r\ntext text.\"\r\n\r\nAnd, in case of a table, how to copy it into a text file to get it interpreted correctly by GPTVectorStoreIndex?\r\n\r\nWhere can I find the guidelines for ensuring proper text formatting before to process it with GPTVectorStoreIndex to get the best result?\r\n\r\nThanks",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6070/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6070/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6065",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6065/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6065/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6065/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6065",
        "id": 1743195661,
        "node_id": "PR_kwDOIWuq585SRS9y",
        "number": 6065,
        "title": "Make initializing VectorStoreIndex from existing vector DB easier",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-06T06:45:45Z",
        "updated_at": "2023-06-07T04:29:19Z",
        "closed_at": "2023-06-07T04:29:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6065",
            "html_url": "https://github.com/run-llama/llama_index/pull/6065",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6065.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6065.patch",
            "merged_at": "2023-06-07T04:29:18Z"
        },
        "body": "# Description\r\n\r\nMake initializing VectorStoreIndex from existing vector DB easier\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6065/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6065/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6062",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6062/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6062/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6062/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6062",
        "id": 1743120731,
        "node_id": "PR_kwDOIWuq585SRCtM",
        "number": 6062,
        "title": "Suo/doc fix minor",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-06T05:38:02Z",
        "updated_at": "2023-06-06T05:38:42Z",
        "closed_at": "2023-06-06T05:38:41Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6062",
            "html_url": "https://github.com/run-llama/llama_index/pull/6062",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6062.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6062.patch",
            "merged_at": "2023-06-06T05:38:41Z"
        },
        "body": "# Description\r\n\r\nMinor docs fix\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/3203\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Documentation\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6062/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6062/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6060",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6060/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6060/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6060/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6060",
        "id": 1743008675,
        "node_id": "PR_kwDOIWuq585SQqb8",
        "number": 6060,
        "title": "Hawktang",
        "user": {
            "login": "hawktang",
            "id": 2004071,
            "node_id": "MDQ6VXNlcjIwMDQwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2004071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hawktang",
            "html_url": "https://github.com/hawktang",
            "followers_url": "https://api.github.com/users/hawktang/followers",
            "following_url": "https://api.github.com/users/hawktang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hawktang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hawktang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hawktang/subscriptions",
            "organizations_url": "https://api.github.com/users/hawktang/orgs",
            "repos_url": "https://api.github.com/users/hawktang/repos",
            "events_url": "https://api.github.com/users/hawktang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hawktang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-06T03:22:25Z",
        "updated_at": "2023-06-19T17:45:42Z",
        "closed_at": "2023-06-19T17:45:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6060",
            "html_url": "https://github.com/run-llama/llama_index/pull/6060",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6060.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6060.patch",
            "merged_at": null
        },
        "body": "# Description\r\nFor GPT4 model, the cost for prompt token and predict token are different.\r\n\r\nThis PR simply add prompt token and predict token to log.\r\n\r\nThis is no dependency for this PR \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6060/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6060/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6058",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6058/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6058/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6058/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6058",
        "id": 1742658677,
        "node_id": "I_kwDOIWuq585n3tx1",
        "number": 6058,
        "title": "Using llama index with existing postgres db and pgvector extension",
        "user": {
            "login": "alexanderfrey",
            "id": 2293509,
            "node_id": "MDQ6VXNlcjIyOTM1MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2293509?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexanderfrey",
            "html_url": "https://github.com/alexanderfrey",
            "followers_url": "https://api.github.com/users/alexanderfrey/followers",
            "following_url": "https://api.github.com/users/alexanderfrey/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexanderfrey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexanderfrey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexanderfrey/subscriptions",
            "organizations_url": "https://api.github.com/users/alexanderfrey/orgs",
            "repos_url": "https://api.github.com/users/alexanderfrey/repos",
            "events_url": "https://api.github.com/users/alexanderfrey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexanderfrey/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-05T21:35:20Z",
        "updated_at": "2023-09-23T12:09:32Z",
        "closed_at": "2023-07-22T02:22:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi,\r\n\r\nthanks for the great work ! I am a bit lost when using llama index for paragraph retrieval together with an existing postgres db and a table that already has embeddings computed. \r\n\r\nI am initiating like this:\r\n\r\n`vector_store = SupabaseVectorStore(\r\n    postgres_connection_string=\"postgresql://user:password@host:5432/defaultdb\", \r\n    collection_name='news_paragraphs',\r\n    dimension=768\r\n)`\r\n\r\nI have 2 questions:\r\n\r\n1.  How can I specify the table to use and the field that contains the embeddings ? Is it collection_name ?\r\n2. Once I did that how can I query the vector_store ? \r\n\r\nReally appreciate any help\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6058/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6058/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6056",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6056/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6056/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6056/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6056",
        "id": 1742386493,
        "node_id": "I_kwDOIWuq585n2rU9",
        "number": 6056,
        "title": "TypeError with LlamaIndexTool keyword args/uncertainty between LlamaIndexTool/IndexToolConfig usage",
        "user": {
            "login": "ahwitz",
            "id": 3514397,
            "node_id": "MDQ6VXNlcjM1MTQzOTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3514397?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ahwitz",
            "html_url": "https://github.com/ahwitz",
            "followers_url": "https://api.github.com/users/ahwitz/followers",
            "following_url": "https://api.github.com/users/ahwitz/following{/other_user}",
            "gists_url": "https://api.github.com/users/ahwitz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ahwitz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ahwitz/subscriptions",
            "organizations_url": "https://api.github.com/users/ahwitz/orgs",
            "repos_url": "https://api.github.com/users/ahwitz/repos",
            "events_url": "https://api.github.com/users/ahwitz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ahwitz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-05T18:58:15Z",
        "updated_at": "2023-07-22T02:22:02Z",
        "closed_at": "2023-07-22T02:21:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Issue encountered on both `0.6.15` and `0.6.20`.\r\n\r\nOur desired usecase is:\r\n\r\n1) Build an index that contains one document per file in one or more Github repositories.\r\n2) Prompt the LLM with a text description of a requested code change.\r\n3) Have the LLM fill out the context it needs to confidently make the code change.\r\n4) Retrieve the code it generated.\r\n\r\nWhere we're at right now:\r\n- Followed the [Chatbot SEC](https://github.com/jerryjliu/llama_index/blob/5a515c7ec0f9f3812daf2a68c2923cda0a4490f5/examples/chatbot/Chatbot_SEC.ipynb) example as possible to get one index per repository, with one ComposableGraph on top of them.\r\n- Set up LlamaIndexTool instances used by `langchain.agents.initialize_agent`, which resulted in the titular error:\r\n```\r\nThought: \r\n\r\nTo provide the new content of the file, we need to access the content of the file in the <repo-name> repository. We can use the Vector IndexToolConfig for repo <org-name>/<repo-name> to find the content of the file. Once we have the content, we can copy and paste it into the new file in the <new-repo-name> repository.\r\n\r\nAction:\r\n{\r\n  \"action\": \"Vector IndexToolConfig for repo <org-name>/<repo-name>\",\r\n  \"action_input\": {\r\n    \"title\": \"src/traffic-event-interceptor/inject/addInjected.ts\"\r\n  }\r\n}\r\n\r\nTraceback (most recent call last):\r\n  File \"index.py\", line 78, in <module>\r\n    prompt_generator.prompt_single_file_content(file_json)\r\n  File \"prompts.py\", line 142, in prompt_single_file_content\r\n    response = chat_agent.run(\"\\n\".join([\r\n  File \".venv/lib/python3.10/site-packages/langchain/chains/base.py\", line 236, in run\r\n    return self(args[0], callbacks=callbacks)[self.output_keys[0]]\r\n  File \".venv/lib/python3.10/site-packages/langchain/chains/base.py\", line 140, in __call__\r\n    raise e\r\n  File \".venv/lib/python3.10/site-packages/langchain/chains/base.py\", line 134, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \".venv/lib/python3.10/site-packages/langchain/agents/agent.py\", line 922, in _call\r\n    next_step_output = self._take_next_step(\r\n  File \".venv/lib/python3.10/site-packages/langchain/agents/agent.py\", line 800, in _take_next_step\r\n    observation = tool.run(\r\n  File \".venv/lib/python3.10/site-packages/langchain/tools/base.py\", line 255, in run\r\n    raise e\r\n  File \".venv/lib/python3.10/site-packages/langchain/tools/base.py\", line 251, in run\r\n    else self._run(*tool_args, **tool_kwargs)\r\nTypeError: LlamaIndexTool._run() got an unexpected keyword argument 'title'\r\n```\r\n- Set up IndexConfigTool instances used by `create_llama_chat_agent`, which didn't seem to parse things correctly:\r\n```\r\n> Entering new AgentExecutor chain...\r\nThought: Do I need to use a tool? Yes\r\nAction: Vector IndexToolConfig for repo <org-name>/<repo-name>\r\nAction Input: contents of addInjected.ts\r\nObservation: I'm sorry, but I cannot provide the contents of the \"addInjected.ts\" file as it is not mentioned or included in the provided context information.\r\n```\r\n\r\nThe code shell for the latter (which doesn't seem to be recognizing things correctly) would be:\r\n```py\r\nindex_configs = [] # setup from chatbot example\r\ngraph_config = IndexToolConfig(\r\n    query_engine=graph_query_engine,\r\n    name=f\"Graph Index\",\r\n    description=\"Can be used to learn more about files in other code repositories.\",\r\n    tool_kwargs={\"return_direct\": True}\r\n)\r\nconfigs = index_configs + [graph_config]\r\ntoolkit = LlamaToolkit(\r\n    index_configs=configs\r\n)\r\n\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\")\r\nllm=ChatOpenAI(temperature=0)\r\nagent_chain = create_llama_chat_agent(\r\n    toolkit,\r\n    llm,\r\n    memory=memory,\r\n    verbose=True\r\n)\r\n\r\nresponse = chat_agent.run(\"\\n\".join([\r\n    self._get_feature_request_text(),\r\n    self._get_file_list_text(),\r\n    f\"Your job is to provide a single file change for the above feature request. You have been asked to change the file at {path}.\"\r\n    # plus some more information\r\n]))\r\n```\r\n\r\nThe code shell for the former (which does seem to be recognizing things correctly, but runs into an error where `action_input` isn't passed in correctly) would be:\r\n\r\n```py\r\nindex_configs = [] # setup from chatbot example\r\ngraph_config = LlamaIndexTool(\r\n    query_engine=graph_query_engine,\r\n    name=f\"Graph Index\",\r\n    description=\"Can be used to learn more about files in other code repositories.\",\r\n    return_direct=True\r\n)\r\ntools = index_configs + [graph_config]\r\n\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\")\r\nllm=ChatOpenAI(temperature=0)\r\nagent_chain = initialize_agent(\r\n    tools,\r\n    llm=llm,\r\n    agent=\"structured-chat-zero-shot-react-description\",\r\n    memory=memory,\r\n    verbose=True\r\n)\r\n\r\nresponse = chat_agent.run(\"\\n\".join([\r\n    self._get_feature_request_text(),\r\n    self._get_file_list_text(),\r\n    f\"Your job is to provide a single file change for the above feature request. You have been asked to change the file at {path}.\"\r\n    # plus some more information\r\n]))\r\n```\r\n\r\nIt seems like the LlamaIndexTool strategy is getting us the best results from OpenAI, but we're open to either path if you've got recommendations. The two questions on our minds are:\r\n\r\n- Is the TypeError user error or an issue with parts of this codebase and LangChain evolving quickly, and is there anything we can do to move past it? I'm going to try updating a few things in my local copy as I'm expecting it's an issue with `tool_input` in [this line](https://github.com/jerryjliu/llama_index/blob/5a515c7ec0f9f3812daf2a68c2923cda0a4490f5/llama_index/langchain_helpers/agents/tools.py#L58), but any easy advice y'all have will be appreciated.\r\n- If we want to be using the `structured-chat-zero-shot-react-description` agent, are we right to be going with LlamaIndexTool/initialize_agent, or is IndexToolConfig/create_llama_chat_agent overall a more stable/intended solution from the intention of where the codebase is going?\r\n\r\nSorry for the complex usecase and question - let me know if there's any more diagnostic info I can provide!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6056/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6056/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6055",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6055/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6055/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6055/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6055",
        "id": 1742377708,
        "node_id": "PR_kwDOIWuq585SOimu",
        "number": 6055,
        "title": "add filename_as_doc_id",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T18:54:29Z",
        "updated_at": "2023-08-28T17:10:43Z",
        "closed_at": "2023-06-06T02:35:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6055",
            "html_url": "https://github.com/run-llama/llama_index/pull/6055",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6055.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6055.patch",
            "merged_at": "2023-06-06T02:35:29Z"
        },
        "body": "# Description\r\n\r\nThe `refresh()` function would be a lot easier to use if `doc_id()` was more consistent and automatic. This PR adds an option to have the `doc_id` be set to the filepath\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/5772\r\n\r\n(Also threw in some extra docs fixes for discover llamaindex)\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6055/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6055/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6054",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6054/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6054/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6054/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6054",
        "id": 1742310479,
        "node_id": "PR_kwDOIWuq585SOTb-",
        "number": 6054,
        "title": "fix form names",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T18:19:06Z",
        "updated_at": "2023-08-28T17:11:22Z",
        "closed_at": "2023-06-05T18:24:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6054",
            "html_url": "https://github.com/run-llama/llama_index/pull/6054",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6054.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6054.patch",
            "merged_at": "2023-06-05T18:24:07Z"
        },
        "body": "Small bugfix",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6054/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6054/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6053",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6053/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6053/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6053/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6053",
        "id": 1742269415,
        "node_id": "PR_kwDOIWuq585SOKET",
        "number": 6053,
        "title": "Create issue-forms",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T17:59:55Z",
        "updated_at": "2023-08-28T17:10:36Z",
        "closed_at": "2023-06-05T18:13:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6053",
            "html_url": "https://github.com/run-llama/llama_index/pull/6053",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6053.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6053.patch",
            "merged_at": "2023-06-05T18:13:58Z"
        },
        "body": "# Description\r\n\r\nThis should encourage higher-quality github issues \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nWell, I can't test this exactly until we merge it :) \r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6053/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6053/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6052",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6052/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6052/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6052/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6052",
        "id": 1742153119,
        "node_id": "PR_kwDOIWuq585SNwbo",
        "number": 6052,
        "title": "Create pull_request_template.md",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T16:43:33Z",
        "updated_at": "2023-06-05T16:44:41Z",
        "closed_at": "2023-06-05T16:44:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6052",
            "html_url": "https://github.com/run-llama/llama_index/pull/6052",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6052.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6052.patch",
            "merged_at": "2023-06-05T16:44:40Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6052/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6052/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6050",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6050/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6050/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6050/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6050",
        "id": 1742063703,
        "node_id": "PR_kwDOIWuq585SNcrF",
        "number": 6050,
        "title": "[version] bump version to 0.6.20",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T15:49:50Z",
        "updated_at": "2023-06-05T16:09:24Z",
        "closed_at": "2023-06-05T16:09:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6050",
            "html_url": "https://github.com/run-llama/llama_index/pull/6050",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6050.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6050.patch",
            "merged_at": "2023-06-05T16:09:23Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6050/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6050/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6048",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6048/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6048/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6048/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6048",
        "id": 1741916183,
        "node_id": "PR_kwDOIWuq585SM8Or",
        "number": 6048,
        "title": "fixed bug for unsorted nodes",
        "user": {
            "login": "fabiofumarola",
            "id": 1550672,
            "node_id": "MDQ6VXNlcjE1NTA2NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1550672?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fabiofumarola",
            "html_url": "https://github.com/fabiofumarola",
            "followers_url": "https://api.github.com/users/fabiofumarola/followers",
            "following_url": "https://api.github.com/users/fabiofumarola/following{/other_user}",
            "gists_url": "https://api.github.com/users/fabiofumarola/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fabiofumarola/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fabiofumarola/subscriptions",
            "organizations_url": "https://api.github.com/users/fabiofumarola/orgs",
            "repos_url": "https://api.github.com/users/fabiofumarola/repos",
            "events_url": "https://api.github.com/users/fabiofumarola/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fabiofumarola/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T14:32:11Z",
        "updated_at": "2023-06-20T20:41:29Z",
        "closed_at": "2023-06-20T20:41:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6048",
            "html_url": "https://github.com/run-llama/llama_index/pull/6048",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6048.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6048.patch",
            "merged_at": "2023-06-20T20:41:28Z"
        },
        "body": "now the nodes are sorted with respect to the right order of the nodes (ref bug #4597). Fixed with @drlux",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6048/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6048/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6047",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6047/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6047/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6047/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6047",
        "id": 1741847997,
        "node_id": "I_kwDOIWuq585n0n29",
        "number": 6047,
        "title": "Support for complex prompt formats in the chat engine, similar to OpenAI's Chat Completions API",
        "user": {
            "login": "XTZhang",
            "id": 1567340,
            "node_id": "MDQ6VXNlcjE1NjczNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1567340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/XTZhang",
            "html_url": "https://github.com/XTZhang",
            "followers_url": "https://api.github.com/users/XTZhang/followers",
            "following_url": "https://api.github.com/users/XTZhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/XTZhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/XTZhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/XTZhang/subscriptions",
            "organizations_url": "https://api.github.com/users/XTZhang/orgs",
            "repos_url": "https://api.github.com/users/XTZhang/repos",
            "events_url": "https://api.github.com/users/XTZhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/XTZhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-05T13:57:16Z",
        "updated_at": "2023-09-14T16:12:53Z",
        "closed_at": "2023-09-14T16:12:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello,\r\n\r\nI'm currently using the chat engine in LlamaIndex and I'm having some issues regarding the format of the prompts. Specifically, the current implementation doesn't seem to support the complex format used by OpenAI's Chat Completions API (https://api.openai.com/v1/chat/completions).\r\n\r\nThe OpenAI API takes a list of messages as input, each with a role (either 'system', 'user', or 'assistant') and content (the text of the message). For example:\r\n\r\njson\r\n\r\n{\r\n  \"model\": \"gpt-3.5-turbo\",\r\n  \"messages\": [{\"role\": \"user\", \"content\": \"Hello!\"}]\r\n}\r\n\r\nHowever, in the chat engine configuration (https://gpt-index.readthedocs.io/en/latest/how_to/chat_engine/usage_pattern.html), when I define the custom_prompt for CondenseQuestionChatEngine.from_defaults, it doesn't seem to support this context string format.\r\n\r\npython\r\n\r\nchat_engine = CondenseQuestionChatEngine.from_defaults(\r\n    query_engine=query_engine, \r\n    condense_question_prompt=custom_prompt,\r\n    chat_history=custom_chat_history,\r\n    verbose=True\r\n)\r\n\r\nThis limitation is inhibiting the ability to have more sophisticated interactions with the model, especially in the context of conversational AI.\r\n\r\nI would like to request that you consider adding support for this complex prompt format, similar to how it is implemented in OpenAI's Chat Completions API. It would greatly enhance the flexibility and usability of the chat engine.\r\n\r\nThank you for your consideration.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6047/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6047/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/5999",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/5999/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/5999/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/5999/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/5999",
        "id": 1741758067,
        "node_id": "I_kwDOIWuq585n0R5z",
        "number": 5999,
        "title": "response_stream.response_gen giving addition spaces when we used this to show response using react frontend",
        "user": {
            "login": "vishalp-simplecrm",
            "id": 115548851,
            "node_id": "U_kgDOBuMisw",
            "avatar_url": "https://avatars.githubusercontent.com/u/115548851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vishalp-simplecrm",
            "html_url": "https://github.com/vishalp-simplecrm",
            "followers_url": "https://api.github.com/users/vishalp-simplecrm/followers",
            "following_url": "https://api.github.com/users/vishalp-simplecrm/following{/other_user}",
            "gists_url": "https://api.github.com/users/vishalp-simplecrm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vishalp-simplecrm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vishalp-simplecrm/subscriptions",
            "organizations_url": "https://api.github.com/users/vishalp-simplecrm/orgs",
            "repos_url": "https://api.github.com/users/vishalp-simplecrm/repos",
            "events_url": "https://api.github.com/users/vishalp-simplecrm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vishalp-simplecrm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-05T13:12:27Z",
        "updated_at": "2023-09-12T16:20:31Z",
        "closed_at": "2023-09-12T16:20:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Getting Broken Words\r\ntaking unnecessary spaces within the words please resolve this issue\r\nBERT is single word given as B ERT\r\n Bidirectional as  Bid irectional\r\n\r\n![image](https://github.com/jerryjliu/llama_index/assets/115548851/ce48dbe8-7250-48bf-94d6-b193b4254249)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/5999/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/5999/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/5941",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/5941/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/5941/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/5941/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/5941",
        "id": 1741715074,
        "node_id": "I_kwDOIWuq585n0HaC",
        "number": 5941,
        "title": "Compose composable graphs",
        "user": {
            "login": "mykytamykhailenko",
            "id": 110097066,
            "node_id": "U_kgDOBo_yqg",
            "avatar_url": "https://avatars.githubusercontent.com/u/110097066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mykytamykhailenko",
            "html_url": "https://github.com/mykytamykhailenko",
            "followers_url": "https://api.github.com/users/mykytamykhailenko/followers",
            "following_url": "https://api.github.com/users/mykytamykhailenko/following{/other_user}",
            "gists_url": "https://api.github.com/users/mykytamykhailenko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mykytamykhailenko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mykytamykhailenko/subscriptions",
            "organizations_url": "https://api.github.com/users/mykytamykhailenko/orgs",
            "repos_url": "https://api.github.com/users/mykytamykhailenko/repos",
            "events_url": "https://api.github.com/users/mykytamykhailenko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mykytamykhailenko/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-05T12:50:54Z",
        "updated_at": "2023-10-25T16:02:18Z",
        "closed_at": "2023-10-25T16:02:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have a use-case where I need to compose `ComposableGraps`-s. Is it possible in LlamaIndex?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/5941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/5941/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/5834",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/5834/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/5834/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/5834/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/5834",
        "id": 1741403671,
        "node_id": "I_kwDOIWuq585ny7YX",
        "number": 5834,
        "title": "Getting Assertion error, while running query.",
        "user": {
            "login": "manaskrishnajaiswal",
            "id": 23204874,
            "node_id": "MDQ6VXNlcjIzMjA0ODc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/23204874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manaskrishnajaiswal",
            "html_url": "https://github.com/manaskrishnajaiswal",
            "followers_url": "https://api.github.com/users/manaskrishnajaiswal/followers",
            "following_url": "https://api.github.com/users/manaskrishnajaiswal/following{/other_user}",
            "gists_url": "https://api.github.com/users/manaskrishnajaiswal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manaskrishnajaiswal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manaskrishnajaiswal/subscriptions",
            "organizations_url": "https://api.github.com/users/manaskrishnajaiswal/orgs",
            "repos_url": "https://api.github.com/users/manaskrishnajaiswal/repos",
            "events_url": "https://api.github.com/users/manaskrishnajaiswal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manaskrishnajaiswal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-05T09:48:00Z",
        "updated_at": "2023-06-05T23:53:47Z",
        "closed_at": "2023-06-05T23:53:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "storage_context = StorageContext.from_defaults(\r\n        persist_dir=STORAGE_FILE_FOLDER_PATH)\r\n    print(storage_context)\r\n    # load index\r\n    index = load_index_from_storage(storage_context)\r\n    query_engine = index.as_query_engine()\r\n    response = query_engine.query(\"What did the author do growing up?\")\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\ProjectDemos\\LlamaIndexUsagePattern\\app.py\", line 69, in <module>\r\n    response = query_engine.query(\"What did the author do growing up?\")\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\llama_index\\indices\\query\\base.py\", line 23, in query\r\n    response = self._query(str_or_query_bundle)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\llama_index\\query_engine\\retriever_query_engine.py\", line 145, in _query\r\n    response = self._response_synthesizer.synthesize(\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\llama_index\\indices\\query\\response_synthesis.py\", line 178, in synthesize\r\n    response_str = self._response_builder.get_response(\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\llama_index\\indices\\response\\compact_and_refine.py\", line 50, in get_response\r\n    response = super().get_response(\r\n               ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\llama_index\\token_counter\\token_counter.py\", line 78, in wrapped_llm_predict\r\n    f_return_val = f(_self, *args, **kwargs)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\llama_index\\indices\\response\\refine.py\", line 52, in get_response\r\n    response = self._give_response_single(\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\llama_index\\indices\\response\\refine.py\", line 86, in _give_response_single\r\n    ) = self._service_context.llm_predictor.predict(\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\llama_index\\llm_predictor\\base.py\", line 227, in predict\r\n    llm_prediction = self._predict(prompt, **prompt_args)\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\llama_index\\llm_predictor\\base.py\", line 195, in _predict\r\n    llm_prediction = retry_on_exceptions_with_backoff(\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\llama_index\\utils.py\", line 177, in retry_on_exceptions_with_backoff\r\n    return lambda_fn()\r\n           ^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\llama_index\\llm_predictor\\base.py\", line 196, in <lambda>\r\n    lambda: llm_chain.predict(**full_prompt_args),\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\langchain\\chains\\llm.py\", line 213, in predict\r\n    return self(kwargs, callbacks=callbacks)[self.output_key]\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\langchain\\chains\\base.py\", line 140, in __call__\r\n    raise e\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\langchain\\chains\\base.py\", line 134, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\langchain\\chains\\llm.py\", line 69, in _call\r\n    response = self.generate([inputs], run_manager=run_manager)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\langchain\\chains\\llm.py\", line 79, in generate\r\n    return self.llm.generate_prompt(\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\langchain\\llms\\base.py\", line 134, in generate_prompt\r\n    return self.generate(prompt_strings, stop=stop, callbacks=callbacks)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\langchain\\llms\\base.py\", line 191, in generate\r\n    raise e\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\langchain\\llms\\base.py\", line 185, in generate\r\n    self._generate(prompts, stop=stop, run_manager=run_manager)\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\langchain\\llms\\openai.py\", line 300, in _generate\r\n    sub_prompts = self.get_sub_prompts(params, prompts, stop)\r\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\langchain\\llms\\openai.py\", line 386, in get_sub_prompts\r\n    params[\"max_tokens\"] = self.max_tokens_for_prompt(prompts[0])\r\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\langchain\\llms\\openai.py\", line 553, in max_tokens_for_prompt\r\n    num_tokens = self.get_num_tokens(prompt)\r\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\langchain\\base_language.py\", line 77, in get_num_tokens\r\n    return len(self.get_token_ids(text))\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\langchain\\llms\\openai.py\", line 481, in get_token_ids\r\n    enc = tiktoken.encoding_for_model(self.model_name)\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\tiktoken\\model.py\", line 75, in encoding_for_model\r\n    return get_encoding(encoding_name)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\tiktoken\\registry.py\", line 63, in get_encoding\r\n    enc = Encoding(**constructor())\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"d:\\ManasImpDOCs\\MERN Completed Projects\\llama-index\\llama-index-venv\\Lib\\site-packages\\tiktoken\\core.py\", line 47, in __init__\r\n    assert len(mergeable_ranks) + len(special_tokens) == explicit_n_vocab\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nAssertionError\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/5834/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/5834/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/5832",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/5832/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/5832/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/5832/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/5832",
        "id": 1741375148,
        "node_id": "I_kwDOIWuq585ny0as",
        "number": 5832,
        "title": "ZeroDivisionError: integer division or modulo by zero",
        "user": {
            "login": "dinhan92",
            "id": 86275789,
            "node_id": "MDQ6VXNlcjg2Mjc1Nzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/86275789?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dinhan92",
            "html_url": "https://github.com/dinhan92",
            "followers_url": "https://api.github.com/users/dinhan92/followers",
            "following_url": "https://api.github.com/users/dinhan92/following{/other_user}",
            "gists_url": "https://api.github.com/users/dinhan92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dinhan92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dinhan92/subscriptions",
            "organizations_url": "https://api.github.com/users/dinhan92/orgs",
            "repos_url": "https://api.github.com/users/dinhan92/repos",
            "events_url": "https://api.github.com/users/dinhan92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dinhan92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-05T09:30:18Z",
        "updated_at": "2023-06-13T04:00:18Z",
        "closed_at": "2023-06-12T08:45:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "My docs is in Vietnamese and I get this error:\r\nZeroDivisionError: integer division or modulo by zero\r\nWhen trying to run Compare Contrast Query:\r\n\r\ngraph = ComposableGraph.from_indices(\r\n        GPTSimpleKeywordTableIndex,\r\n        [index for _, index in report_indices.items()], \r\n        [summary for _, summary in index_summaries.items()],\r\n        max_keywords_per_chunk=50\r\n    )\r\n\r\n    decompose_transform = DecomposeQueryTransform(\r\n        llm_predictor, verbose=True\r\n    )\r\n\r\n    custom_query_engines = {}\r\n    for index in report_indices.values():\r\n        query_engine = index.as_query_engine(service_context=service_context, streaming=True)\r\n        transform_extra_info = {'index_summary': index.index_struct.summary}\r\n        tranformed_query_engine = TransformQueryEngine(query_engine, decompose_transform, transform_extra_info=transform_extra_info)\r\n        custom_query_engines[index.index_id] = tranformed_query_engine\r\n\r\n    custom_query_engines[graph.root_index.index_id] = graph.root_index.as_query_engine(\r\n        retriever_mode='simple', \r\n        response_mode='tree_summarize', \r\n        service_context=service_context,\r\n        streaming=True\r\n    )\r\n\r\n    query_engine_decompose = graph.as_query_engine(\r\n        custom_query_engines=custom_query_engines,\r\n        # streaming=True\r\n    )\r\nresponse = query_engine_decompose.query(input_text)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/5832/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/5832/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/5831",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/5831/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/5831/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/5831/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/5831",
        "id": 1741346345,
        "node_id": "PR_kwDOIWuq585SK-3q",
        "number": 5831,
        "title": "Update query_interface.md",
        "user": {
            "login": "Samshive",
            "id": 18461798,
            "node_id": "MDQ6VXNlcjE4NDYxNzk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/18461798?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Samshive",
            "html_url": "https://github.com/Samshive",
            "followers_url": "https://api.github.com/users/Samshive/followers",
            "following_url": "https://api.github.com/users/Samshive/following{/other_user}",
            "gists_url": "https://api.github.com/users/Samshive/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Samshive/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Samshive/subscriptions",
            "organizations_url": "https://api.github.com/users/Samshive/orgs",
            "repos_url": "https://api.github.com/users/Samshive/repos",
            "events_url": "https://api.github.com/users/Samshive/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Samshive/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-05T09:14:39Z",
        "updated_at": "2023-06-05T16:27:08Z",
        "closed_at": "2023-06-05T16:27:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/5831",
            "html_url": "https://github.com/run-llama/llama_index/pull/5831",
            "diff_url": "https://github.com/run-llama/llama_index/pull/5831.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/5831.patch",
            "merged_at": "2023-06-05T16:27:08Z"
        },
        "body": "Small correction to the documentation",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/5831/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/5831/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/5830",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/5830/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/5830/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/5830/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/5830",
        "id": 1741291482,
        "node_id": "I_kwDOIWuq585nyf_a",
        "number": 5830,
        "title": "[BUG] StorageContext breaks when document contains embeddings.",
        "user": {
            "login": "Olamyy",
            "id": 14059714,
            "node_id": "MDQ6VXNlcjE0MDU5NzE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/14059714?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Olamyy",
            "html_url": "https://github.com/Olamyy",
            "followers_url": "https://api.github.com/users/Olamyy/followers",
            "following_url": "https://api.github.com/users/Olamyy/following{/other_user}",
            "gists_url": "https://api.github.com/users/Olamyy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Olamyy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Olamyy/subscriptions",
            "organizations_url": "https://api.github.com/users/Olamyy/orgs",
            "repos_url": "https://api.github.com/users/Olamyy/repos",
            "events_url": "https://api.github.com/users/Olamyy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Olamyy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-05T08:46:08Z",
        "updated_at": "2023-10-30T09:37:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Description\r\nWhen an embedding is passed while creating a document, the `storage_context.persist` fails with a `TypeError: Object of type float32 is not JSON serializable` error.\r\n\r\n### Reproduction\r\n```python\r\nfrom llama_index import Document, ServiceContext, GPTVectorStoreIndex, StorageContext, LLMPredictor\r\nfrom langchain import OpenAI\r\nfrom sentence_transformers import SentenceTransformers\r\n\r\nmodel = SentenceTransformers(\"\")\r\ntext = \"This is a content\"\r\nembedding = models.encode(text)\r\ndocument = Document(text, embedding=embedding)\r\nstorage_context = StorageContext.from_defaults()\r\ndoc_index = GPTVectorStoreIndex.from_documents(documents, storage_context=storage_context)\r\nstorage_context.persist(persist_dir=\".storage/\")\r\n```\r\n\r\n### Expected Behaviour\r\nStorage context persist should work fine even with embeddings.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/5830/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/5830/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/5826",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/5826/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/5826/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/5826/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/5826",
        "id": 1741023330,
        "node_id": "PR_kwDOIWuq585SJ4rV",
        "number": 5826,
        "title": "fix supabase nb",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T05:56:55Z",
        "updated_at": "2023-06-05T06:09:47Z",
        "closed_at": "2023-06-05T06:09:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/5826",
            "html_url": "https://github.com/run-llama/llama_index/pull/5826",
            "diff_url": "https://github.com/run-llama/llama_index/pull/5826.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/5826.patch",
            "merged_at": "2023-06-05T06:09:46Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/5826/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/5826/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/5825",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/5825/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/5825/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/5825/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/5825",
        "id": 1740886542,
        "node_id": "PR_kwDOIWuq585SJaIu",
        "number": 5825,
        "title": "refine spec",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T03:57:10Z",
        "updated_at": "2023-06-05T05:48:21Z",
        "closed_at": "2023-06-05T05:48:20Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/5825",
            "html_url": "https://github.com/run-llama/llama_index/pull/5825",
            "diff_url": "https://github.com/run-llama/llama_index/pull/5825.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/5825.patch",
            "merged_at": "2023-06-05T05:48:20Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/5825/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/5825/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/5824",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/5824/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/5824/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/5824/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/5824",
        "id": 1740851705,
        "node_id": "I_kwDOIWuq585nw0n5",
        "number": 5824,
        "title": "Does chat engine support streaming response?",
        "user": {
            "login": "wenyongqd",
            "id": 46271263,
            "node_id": "MDQ6VXNlcjQ2MjcxMjYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/46271263?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wenyongqd",
            "html_url": "https://github.com/wenyongqd",
            "followers_url": "https://api.github.com/users/wenyongqd/followers",
            "following_url": "https://api.github.com/users/wenyongqd/following{/other_user}",
            "gists_url": "https://api.github.com/users/wenyongqd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wenyongqd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wenyongqd/subscriptions",
            "organizations_url": "https://api.github.com/users/wenyongqd/orgs",
            "repos_url": "https://api.github.com/users/wenyongqd/repos",
            "events_url": "https://api.github.com/users/wenyongqd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wenyongqd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-05T03:30:14Z",
        "updated_at": "2023-07-22T02:25:44Z",
        "closed_at": "2023-07-22T02:25:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Error on request:\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/werkzeug/serving.py\", line 364, in run_wsgi\r\n    execute(self.server.app)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/werkzeug/serving.py\", line 327, in execute\r\n    for data in application_iter:\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/werkzeug/wsgi.py\", line 289, in __next__\r\n    return self._next()\r\n           ^^^^^^^^^^^^\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/werkzeug/wrappers/response.py\", line 32, in _iter_encoded\r\n    for item in iterable:\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/flask/helpers.py\", line 149, in generator\r\n    yield from gen\r\n  File \"/Users/weny/VSCode/ChatFiles/chatfiles/server.py\", line 71, in generate\r\n    for data in answer.response_gen:\r\n                ^^^^^^^^^^^^^^^^^^^^\r\nAttributeError: 'Response' object has no attribute 'response_gen'\r\n\r\nI got this error when using chat engine with streaming, does it support for streaming response now?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/5824/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/5824/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/5822",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/5822/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/5822/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/5822/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/5822",
        "id": 1740744614,
        "node_id": "PR_kwDOIWuq585SI6KG",
        "number": 5822,
        "title": "Drop GPT Prefix ",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-05T01:49:56Z",
        "updated_at": "2023-06-05T07:59:06Z",
        "closed_at": "2023-06-05T07:59:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/5822",
            "html_url": "https://github.com/run-llama/llama_index/pull/5822",
            "diff_url": "https://github.com/run-llama/llama_index/pull/5822.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/5822.patch",
            "merged_at": "2023-06-05T07:59:05Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/5822/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/5822/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/5812",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/5812/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/5812/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/5812/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/5812",
        "id": 1740610100,
        "node_id": "PR_kwDOIWuq585SIdme",
        "number": 5812,
        "title": "Minor refactor & rename for JSONQueryEngine",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-04T21:19:21Z",
        "updated_at": "2023-06-04T21:24:10Z",
        "closed_at": "2023-06-04T21:24:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/5812",
            "html_url": "https://github.com/run-llama/llama_index/pull/5812",
            "diff_url": "https://github.com/run-llama/llama_index/pull/5812.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/5812.patch",
            "merged_at": "2023-06-04T21:24:09Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/5812/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/5812/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/5811",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/5811/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/5811/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/5811/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/5811",
        "id": 1740602528,
        "node_id": "PR_kwDOIWuq585SIb5r",
        "number": 5811,
        "title": "minor nb fix ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-04T21:09:38Z",
        "updated_at": "2023-06-04T21:26:19Z",
        "closed_at": "2023-06-04T21:26:19Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/5811",
            "html_url": "https://github.com/run-llama/llama_index/pull/5811",
            "diff_url": "https://github.com/run-llama/llama_index/pull/5811.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/5811.patch",
            "merged_at": "2023-06-04T21:26:18Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/5811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/5811/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/5772",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/5772/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/5772/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/5772/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/5772",
        "id": 1740523909,
        "node_id": "I_kwDOIWuq585nvkmF",
        "number": 5772,
        "title": "indices base refresh_ref_docs not working as expected",
        "user": {
            "login": "hawktang",
            "id": 2004071,
            "node_id": "MDQ6VXNlcjIwMDQwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2004071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hawktang",
            "html_url": "https://github.com/hawktang",
            "followers_url": "https://api.github.com/users/hawktang/followers",
            "following_url": "https://api.github.com/users/hawktang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hawktang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hawktang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hawktang/subscriptions",
            "organizations_url": "https://api.github.com/users/hawktang/orgs",
            "repos_url": "https://api.github.com/users/hawktang/repos",
            "events_url": "https://api.github.com/users/hawktang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hawktang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-06-04T18:35:33Z",
        "updated_at": "2023-10-31T13:09:11Z",
        "closed_at": "2023-06-06T02:35:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "version 0.16.19\r\n\r\nsame refresh_ref_docs could not be recognized as the same.\r\n\r\nFrom the the debug the hash of original file can not be found.\r\n\r\nexisting_doc_hash always return none and all file was insert again",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/5772/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/5772/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/5673",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/5673/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/5673/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/5673/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/5673",
        "id": 1740449091,
        "node_id": "PR_kwDOIWuq585SH89E",
        "number": 5673,
        "title": "[version] bump version to 0.6.19 ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-04T15:57:47Z",
        "updated_at": "2023-06-04T16:24:13Z",
        "closed_at": "2023-06-04T16:24:12Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/5673",
            "html_url": "https://github.com/run-llama/llama_index/pull/5673",
            "diff_url": "https://github.com/run-llama/llama_index/pull/5673.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/5673.patch",
            "merged_at": "2023-06-04T16:24:12Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/5673/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/5673/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4943",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4943/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4943/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4943/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4943",
        "id": 1740273143,
        "node_id": "I_kwDOIWuq585nunX3",
        "number": 4943,
        "title": "multiturn prompt and index update",
        "user": {
            "login": "noke8868",
            "id": 15937904,
            "node_id": "MDQ6VXNlcjE1OTM3OTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/15937904?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noke8868",
            "html_url": "https://github.com/noke8868",
            "followers_url": "https://api.github.com/users/noke8868/followers",
            "following_url": "https://api.github.com/users/noke8868/following{/other_user}",
            "gists_url": "https://api.github.com/users/noke8868/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noke8868/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noke8868/subscriptions",
            "organizations_url": "https://api.github.com/users/noke8868/orgs",
            "repos_url": "https://api.github.com/users/noke8868/repos",
            "events_url": "https://api.github.com/users/noke8868/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noke8868/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-04T09:52:30Z",
        "updated_at": "2023-06-06T05:53:21Z",
        "closed_at": "2023-06-06T05:53:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi \r\nthank you for your efforts for providing such good tool.\r\ni am trying to build a multiturn chatbox via Chatgpt API. i am trying to understand a generic procedure to use llama_index for this case.\r\nChatgpt requires the current input and the history as new input. \r\nmy two questions are:\r\n--should i use the new input as context_str for prompt like below?\r\n--if yes, should i also use index.insert to generate new document and new index?\r\nthank you for your help\r\n\r\n    Support_Prompt = (\r\n    \"As a product support professional, try to provide a suitable resolution to the customer's issue.\\n \"\r\n    \"\\n\"\r\n    \"\\n\"\r\n    \"{context_str}\\n\"\r\n    \"\\n\"\r\n    \"\\n\"\r\n    \"Given this information, please answer the question: {query_str}\\n\"\r\n    )\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4943/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4943/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4937",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4937/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4937/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4937/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4937",
        "id": 1740197971,
        "node_id": "PR_kwDOIWuq585SHHt_",
        "number": 4937,
        "title": "Fix typo in default text to sql prompt template",
        "user": {
            "login": "rongduan-zhu",
            "id": 5406634,
            "node_id": "MDQ6VXNlcjU0MDY2MzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5406634?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rongduan-zhu",
            "html_url": "https://github.com/rongduan-zhu",
            "followers_url": "https://api.github.com/users/rongduan-zhu/followers",
            "following_url": "https://api.github.com/users/rongduan-zhu/following{/other_user}",
            "gists_url": "https://api.github.com/users/rongduan-zhu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rongduan-zhu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rongduan-zhu/subscriptions",
            "organizations_url": "https://api.github.com/users/rongduan-zhu/orgs",
            "repos_url": "https://api.github.com/users/rongduan-zhu/repos",
            "events_url": "https://api.github.com/users/rongduan-zhu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rongduan-zhu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-04T07:09:59Z",
        "updated_at": "2023-06-04T20:13:19Z",
        "closed_at": "2023-06-04T20:13:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4937",
            "html_url": "https://github.com/run-llama/llama_index/pull/4937",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4937.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4937.patch",
            "merged_at": "2023-06-04T20:13:19Z"
        },
        "body": "Fix minor typo in the default text to SQL prompt template",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4937/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4937/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4933",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4933/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4933/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4933/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4933",
        "id": 1740131059,
        "node_id": "PR_kwDOIWuq585SG5GX",
        "number": 4933,
        "title": "Update openai.py",
        "user": {
            "login": "gitzhouxinyu1",
            "id": 5327218,
            "node_id": "MDQ6VXNlcjUzMjcyMTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5327218?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gitzhouxinyu1",
            "html_url": "https://github.com/gitzhouxinyu1",
            "followers_url": "https://api.github.com/users/gitzhouxinyu1/followers",
            "following_url": "https://api.github.com/users/gitzhouxinyu1/following{/other_user}",
            "gists_url": "https://api.github.com/users/gitzhouxinyu1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gitzhouxinyu1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gitzhouxinyu1/subscriptions",
            "organizations_url": "https://api.github.com/users/gitzhouxinyu1/orgs",
            "repos_url": "https://api.github.com/users/gitzhouxinyu1/repos",
            "events_url": "https://api.github.com/users/gitzhouxinyu1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gitzhouxinyu1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-04T04:44:13Z",
        "updated_at": "2023-07-12T19:47:02Z",
        "closed_at": "2023-07-12T19:47:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4933",
            "html_url": "https://github.com/run-llama/llama_index/pull/4933",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4933.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4933.patch",
            "merged_at": null
        },
        "body": "Update retry policy to get OpenAI Embeddings for trial accounts",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4933/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4933/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4931",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4931/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4931/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4931/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4931",
        "id": 1740057882,
        "node_id": "PR_kwDOIWuq585SGo1C",
        "number": 4931,
        "title": "Docs refactor - key components",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-04T01:52:31Z",
        "updated_at": "2023-06-04T20:51:22Z",
        "closed_at": "2023-06-04T20:51:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4931",
            "html_url": "https://github.com/run-llama/llama_index/pull/4931",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4931.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4931.patch",
            "merged_at": "2023-06-04T20:51:21Z"
        },
        "body": "### Motivation\r\n* `retriever`, `query engine`, `chat engine` are key concepts in llamaindex, but are currently hidden under query interface tab\r\n* we don\u2019t do a good job of showcasing all the modules that we have (e.g. vector index auto retriever)\r\n* no consistent structure in sections\r\n* We don\u2019t do a good job of showing the intended usage pattern for each component (we have a big usage pattern section that lumps everything together)\r\n\r\n### Proposed Change\r\n* bring `retriever`, `query engine`, `chat engine` to top level\r\n* make each section have consistent sub-sections\r\n  * concept\r\n  * usage pattern\r\n  * modules\r\n  * (optional) advanced, etc\r\n* better link between key components (e.g. connector <> index <> retriever <> query engine)\r\n* Add doc make mapping between retriever mode and retriever class explicit. \r\n\r\n<img width=\"254\" alt=\"Screen Shot 2023-06-03 at 7 01 47 PM\" src=\"https://github.com/jerryjliu/llama_index/assets/5567282/714c07f0-04f2-4afd-b4a5-e7e1ff6d0d32\">\r\n\r\n###  Future Work\r\n* data agent section",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4931/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4931/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4925",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4925/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4925/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4925/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4925",
        "id": 1739998055,
        "node_id": "PR_kwDOIWuq585SGbeu",
        "number": 4925,
        "title": "add on demand tool ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-03T23:50:50Z",
        "updated_at": "2023-06-04T15:57:02Z",
        "closed_at": "2023-06-04T15:57:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4925",
            "html_url": "https://github.com/run-llama/llama_index/pull/4925",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4925.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4925.patch",
            "merged_at": "2023-06-04T15:57:01Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4925/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4925/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4922",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4922/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4922/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4922/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4922",
        "id": 1739878048,
        "node_id": "PR_kwDOIWuq585SGAXf",
        "number": 4922,
        "title": "Fix typo in usage_pattern.md",
        "user": {
            "login": "jdcaballerov",
            "id": 743513,
            "node_id": "MDQ6VXNlcjc0MzUxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/743513?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jdcaballerov",
            "html_url": "https://github.com/jdcaballerov",
            "followers_url": "https://api.github.com/users/jdcaballerov/followers",
            "following_url": "https://api.github.com/users/jdcaballerov/following{/other_user}",
            "gists_url": "https://api.github.com/users/jdcaballerov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jdcaballerov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jdcaballerov/subscriptions",
            "organizations_url": "https://api.github.com/users/jdcaballerov/orgs",
            "repos_url": "https://api.github.com/users/jdcaballerov/repos",
            "events_url": "https://api.github.com/users/jdcaballerov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jdcaballerov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-03T20:27:01Z",
        "updated_at": "2023-06-03T20:31:24Z",
        "closed_at": "2023-06-03T20:31:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4922",
            "html_url": "https://github.com/run-llama/llama_index/pull/4922",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4922.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4922.patch",
            "merged_at": "2023-06-03T20:31:24Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4922/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4922/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4908",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4908/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4908/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4908/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4908",
        "id": 1739677430,
        "node_id": "I_kwDOIWuq585nsV72",
        "number": 4908,
        "title": "API Documentation in openapi 3.0.0 format",
        "user": {
            "login": "labbitroma",
            "id": 11629814,
            "node_id": "MDQ6VXNlcjExNjI5ODE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11629814?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/labbitroma",
            "html_url": "https://github.com/labbitroma",
            "followers_url": "https://api.github.com/users/labbitroma/followers",
            "following_url": "https://api.github.com/users/labbitroma/following{/other_user}",
            "gists_url": "https://api.github.com/users/labbitroma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/labbitroma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/labbitroma/subscriptions",
            "organizations_url": "https://api.github.com/users/labbitroma/orgs",
            "repos_url": "https://api.github.com/users/labbitroma/repos",
            "events_url": "https://api.github.com/users/labbitroma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/labbitroma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-03T16:53:49Z",
        "updated_at": "2023-09-14T16:12:58Z",
        "closed_at": "2023-09-14T16:12:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm trying to understand how well the model understands an API specification document written in OpenAPI 3.0.0 (JSON) format and how complex the questions I can ask can be. Given my input, the model replies with a sequence of calls that should lead to the final result. The difficulty of dealing with documents in the OpenAPI 3.0.0 format, in my opinion, is that the \"retriever\" mechanism, made available, for example, on LangChain is not very efficient because the definition of the endpoints is found at the beginning of the document, and the definition of the components (return types, parameters schema, classes and other resuable schemas), however, is at the end of the document, so one or two (truncated) chunks cannot simply be enough, but the query should be repeated on all the chunks, as for the \"refine\" strategy offered by LlamaIndex. However I notice that the model fails to answer simple questions like \"what is the list of all available endpoints?\", or it tends to hallucinate even if the temperature is zero, as if it doesn't have access to all parts of the document.\r\nI understand that the concept of \"retriever\" works perfectly with a knowledge base of documents, as the question can be answered simply by looking at some \"chunks\" of the documents, but in the case of API documentations, especially those written in the OpenAPI format 3.0.0, it may always be necessary to submit the entire document to the LLM before response. \r\nIn these cases, what type of index and what strategy do you recommend me to adopt, to improve the understanding of the documentation as much as possible and push the reasoning of the model to the maximum? Do you also think that OpenAPI is not a suitable format here, and maybe I should create of a more compressed format, with a custom JSON schema, or maybe an explaination of the API in plain english? \r\n\r\nThis is the main part of the code, it works good, but I feel it's not giving the model all the informations.\r\n\r\n```\r\nJSONReader = download_loader(\"JSONReader\")\r\nloader = JSONReader()\r\ndocuments = loader.load_data('./json-data/openapi-docs.json')\r\nllm_predictor = LLMPredictor(llm=OpenAI(temperature=0.0, model_name=\"gpt-3.5-turbo\", max_tokens=512))\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, chunk_size=512)\r\nindex = GPTVectorStoreIndex.from_documents(documents, service_context=service_context)\r\n\r\n#retriever = index.as_retriever()\r\n#query_engine = RetrieverQueryEngine.from_args(retriever, response_mode='refine')\r\nquery_engine = index.as_query_engine()\r\nuser_question = input('> ')\r\nwhile user_question != \"quit\":\r\n    response = query_engine.query(\"\"\"You are an API call expert virtual assistant for the XYZ project.\r\n         Your job is to compose sequences of API calls to answer the user's question.\r\n         You must answer only with the sequence of calls necessary to obtain the result.\r\n         You can only use the endpoints in the documentation, if you don't find a suitable endpoint explain which endpoint you would like to use and why.\r\n         You can only use one value with the \"explode\" parameter.\r\n\r\n        Let's begin!\r\n\r\n        Question: {user_question}\r\n        Call sequence:\"\"\".format(user_question=user_question))\r\n    print(response)\r\n    user_question = input('> ')\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4908/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4908/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4805",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4805/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4805/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4805/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4805",
        "id": 1739264099,
        "node_id": "PR_kwDOIWuq585SD1NJ",
        "number": 4805,
        "title": "refine tool interface",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-03T07:56:28Z",
        "updated_at": "2023-06-03T23:28:37Z",
        "closed_at": "2023-06-03T23:28:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4805",
            "html_url": "https://github.com/run-llama/llama_index/pull/4805",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4805.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4805.patch",
            "merged_at": "2023-06-03T23:28:36Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4805/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4805/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4803",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4803/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4803/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4803/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4803",
        "id": 1739192890,
        "node_id": "PR_kwDOIWuq585SDlfi",
        "number": 4803,
        "title": "add youtube link",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-03T05:45:05Z",
        "updated_at": "2023-06-03T05:56:07Z",
        "closed_at": "2023-06-03T05:56:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4803",
            "html_url": "https://github.com/run-llama/llama_index/pull/4803",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4803.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4803.patch",
            "merged_at": "2023-06-03T05:56:06Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4803/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4803/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4801",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4801/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4801/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4801/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4801",
        "id": 1739136872,
        "node_id": "PR_kwDOIWuq585SDY7m",
        "number": 4801,
        "title": "[version] bump version to 0.6.18",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-03T04:05:29Z",
        "updated_at": "2023-06-03T04:17:29Z",
        "closed_at": "2023-06-03T04:17:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4801",
            "html_url": "https://github.com/run-llama/llama_index/pull/4801",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4801.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4801.patch",
            "merged_at": "2023-06-03T04:17:28Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4801/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4801/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4791",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4791/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4791/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4791/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4791",
        "id": 1739040823,
        "node_id": "PR_kwDOIWuq585SDDzF",
        "number": 4791,
        "title": "Add docs for SupabaseVectorStore",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-03T01:31:41Z",
        "updated_at": "2023-06-03T01:32:02Z",
        "closed_at": "2023-06-03T01:32:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4791",
            "html_url": "https://github.com/run-llama/llama_index/pull/4791",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4791.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4791.patch",
            "merged_at": "2023-06-03T01:32:01Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4791/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4791/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4787",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4787/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4787/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4787/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4787",
        "id": 1739002819,
        "node_id": "PR_kwDOIWuq585SC7Mt",
        "number": 4787,
        "title": "Added metadata support for Redis",
        "user": {
            "login": "yuvalkarmi",
            "id": 203189,
            "node_id": "MDQ6VXNlcjIwMzE4OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/203189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuvalkarmi",
            "html_url": "https://github.com/yuvalkarmi",
            "followers_url": "https://api.github.com/users/yuvalkarmi/followers",
            "following_url": "https://api.github.com/users/yuvalkarmi/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuvalkarmi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuvalkarmi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuvalkarmi/subscriptions",
            "organizations_url": "https://api.github.com/users/yuvalkarmi/orgs",
            "repos_url": "https://api.github.com/users/yuvalkarmi/repos",
            "events_url": "https://api.github.com/users/yuvalkarmi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuvalkarmi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-03T00:45:49Z",
        "updated_at": "2023-06-05T00:24:08Z",
        "closed_at": "2023-06-04T21:20:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4787",
            "html_url": "https://github.com/run-llama/llama_index/pull/4787",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4787.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4787.patch",
            "merged_at": "2023-06-04T21:20:58Z"
        },
        "body": "This pull request adds metadata support for the Redis Vector Store.\r\n\r\n**Currently, it only supports Redis TAG fields for metadata (not full text search).**\r\n\r\n## Here's how to use it:\r\n\r\n1. When **creating** the index, make sure to declare the metadata fields (or you'll get empty results when you search later):\r\n\r\n```python\r\nvector_store = RedisVectorStore(\r\n    index_name=\"llama-index\",\r\n    redis_url=\"redis://localhost:6379\",\r\n    metadata_fields=[\"user_id\", \"favorite_color\"],\r\n)\r\n```\r\n\r\n2. When adding a document, include the metadata under the `extra_info` key:\r\n\r\n```python\r\ndocuments = SimpleDirectoryReader(\"data\").load_data()\r\n\r\nfor document in documents:\r\n    document.extra_info = {\"user_id\": \"12345\", \"favorite_color\": \"blue\"}\r\n    \r\nindex = GPTVectorStoreIndex.from_documents(\r\n    documents, service_context=service_context, storage_context=storage_context\r\n)\r\n```\r\n\r\n3. When querying, specify the metadata you want to filter by. Again, only TAG fields are currently supported.\r\n\r\n```python\r\nfrom llama_index.vector_stores.types import MetadataFilters, ExactMatchFilter\r\n\r\nquery_engine = index.as_query_engine(\r\n    service_context=service_context,\r\n    similarity_top_k=3,\r\n    filters=MetadataFilters(\r\n        filters=[\r\n            ExactMatchFilter(key=\"user_id\", value=\"12345\"),\r\n            ExactMatchFilter(key=\"favorite_color\", value=\"blue\")\r\n        ]\r\n    ),\r\n)\r\n```\r\n\r\nWould love your feedback!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4787/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4787/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4781",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4781/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4781/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4781/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4781",
        "id": 1738876457,
        "node_id": "PR_kwDOIWuq585SCfZy",
        "number": 4781,
        "title": "add discover llamaindex tutorials",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-02T22:10:43Z",
        "updated_at": "2023-08-28T17:09:46Z",
        "closed_at": "2023-06-03T01:37:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4781",
            "html_url": "https://github.com/run-llama/llama_index/pull/4781",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4781.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4781.patch",
            "merged_at": "2023-06-03T01:37:38Z"
        },
        "body": "Initial PR to add our video tutorial series to the docs\r\n\r\nWill only merge this once the latest tutorial is uploaded to youtube (and we have a link for the video lol)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4781/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4781/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4771",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4771/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4771/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4771/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4771",
        "id": 1738789362,
        "node_id": "PR_kwDOIWuq585SCMs8",
        "number": 4771,
        "title": "Removing stray imports from examples/docs",
        "user": {
            "login": "ahwitz",
            "id": 3514397,
            "node_id": "MDQ6VXNlcjM1MTQzOTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3514397?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ahwitz",
            "html_url": "https://github.com/ahwitz",
            "followers_url": "https://api.github.com/users/ahwitz/followers",
            "following_url": "https://api.github.com/users/ahwitz/following{/other_user}",
            "gists_url": "https://api.github.com/users/ahwitz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ahwitz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ahwitz/subscriptions",
            "organizations_url": "https://api.github.com/users/ahwitz/orgs",
            "repos_url": "https://api.github.com/users/ahwitz/repos",
            "events_url": "https://api.github.com/users/ahwitz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ahwitz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-02T20:28:46Z",
        "updated_at": "2023-06-02T21:37:24Z",
        "closed_at": "2023-06-02T21:37:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4771",
            "html_url": "https://github.com/run-llama/llama_index/pull/4771",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4771.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4771.patch",
            "merged_at": "2023-06-02T21:37:23Z"
        },
        "body": "Another thing I found as I was browsing around, to hopefully help keep stuff up to date. Neither removed import seems to be used anywhere in this example, and in our code that got a chatbot up and running, the imports weren't necessary.\r\n\r\nDidn't see any automated conversions from the Jupyter notebooks to the docs, but hopefully this won't get in the way if they do exist.\r\n\r\nWe're running into some issues getting a `GPTVectorStoreIndex` to actually index an entire Github repo using the LlamaHub loader, as it's only seeming to send one request over the wire and ignoring the rest of the repo, so we may be in touch with a real bug report soon. Trying to build up some good credit in advance by putting these in, sorry if they're annoying...",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4771/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4771/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4759",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4759/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4759/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4759/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4759",
        "id": 1738572979,
        "node_id": "PR_kwDOIWuq585SBc2N",
        "number": 4759,
        "title": "Supabase vectorstore (via vecs) <> Llamaindex ",
        "user": {
            "login": "ykhli",
            "id": 3489963,
            "node_id": "MDQ6VXNlcjM0ODk5NjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3489963?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ykhli",
            "html_url": "https://github.com/ykhli",
            "followers_url": "https://api.github.com/users/ykhli/followers",
            "following_url": "https://api.github.com/users/ykhli/following{/other_user}",
            "gists_url": "https://api.github.com/users/ykhli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ykhli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ykhli/subscriptions",
            "organizations_url": "https://api.github.com/users/ykhli/orgs",
            "repos_url": "https://api.github.com/users/ykhli/repos",
            "events_url": "https://api.github.com/users/ykhli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ykhli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-02T17:42:55Z",
        "updated_at": "2023-06-03T01:17:05Z",
        "closed_at": "2023-06-03T01:17:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4759",
            "html_url": "https://github.com/run-llama/llama_index/pull/4759",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4759.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4759.patch",
            "merged_at": "2023-06-03T01:17:04Z"
        },
        "body": "- Added new vector store (query, add). Delete hasn't been implemented (?)\r\n- Added new example notebook ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4759/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4759/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4757",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4757/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4757/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4757/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4757",
        "id": 1738560351,
        "node_id": "PR_kwDOIWuq585SBaEy",
        "number": 4757,
        "title": "Supabase vectorstore (via vecs) <> Llamaindex",
        "user": {
            "login": "ykhli",
            "id": 3489963,
            "node_id": "MDQ6VXNlcjM0ODk5NjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3489963?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ykhli",
            "html_url": "https://github.com/ykhli",
            "followers_url": "https://api.github.com/users/ykhli/followers",
            "following_url": "https://api.github.com/users/ykhli/following{/other_user}",
            "gists_url": "https://api.github.com/users/ykhli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ykhli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ykhli/subscriptions",
            "organizations_url": "https://api.github.com/users/ykhli/orgs",
            "repos_url": "https://api.github.com/users/ykhli/repos",
            "events_url": "https://api.github.com/users/ykhli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ykhli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-02T17:32:16Z",
        "updated_at": "2023-06-02T17:41:59Z",
        "closed_at": "2023-06-02T17:41:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4757",
            "html_url": "https://github.com/run-llama/llama_index/pull/4757",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4757.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4757.patch",
            "merged_at": null
        },
        "body": "- Added new vector store (query, add). Delete hasn't been implemented (?)\r\n- Added new example notebook ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4757/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4757/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4741",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4741/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4741/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4741/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4741",
        "id": 1738335062,
        "node_id": "PR_kwDOIWuq585SAo4y",
        "number": 4741,
        "title": "Broken link fix in custom_llms documentation",
        "user": {
            "login": "ahwitz",
            "id": 3514397,
            "node_id": "MDQ6VXNlcjM1MTQzOTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3514397?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ahwitz",
            "html_url": "https://github.com/ahwitz",
            "followers_url": "https://api.github.com/users/ahwitz/followers",
            "following_url": "https://api.github.com/users/ahwitz/following{/other_user}",
            "gists_url": "https://api.github.com/users/ahwitz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ahwitz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ahwitz/subscriptions",
            "organizations_url": "https://api.github.com/users/ahwitz/orgs",
            "repos_url": "https://api.github.com/users/ahwitz/repos",
            "events_url": "https://api.github.com/users/ahwitz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ahwitz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-02T14:44:36Z",
        "updated_at": "2023-06-02T17:28:58Z",
        "closed_at": "2023-06-02T17:28:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4741",
            "html_url": "https://github.com/run-llama/llama_index/pull/4741",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4741.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4741.patch",
            "merged_at": "2023-06-02T17:28:58Z"
        },
        "body": "Updated the second link to \"Langchain's LLM page\" (`2` on screenshot below) on the attached file to point to the same place as the first link (`1` on screenshot below). Second one was missing a directory and led to a 404.\r\n\r\n![image](https://github.com/jerryjliu/llama_index/assets/3514397/f2d358c7-2f67-4407-a7db-3f63306fad59)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4741/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4741/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4739",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4739/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4739/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4739/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4739",
        "id": 1738260126,
        "node_id": "I_kwDOIWuq585nm76e",
        "number": 4739,
        "title": "Constantly hitting RateLimitError when constructing the GPTTreeIndex index",
        "user": {
            "login": "JViggiani",
            "id": 41336980,
            "node_id": "MDQ6VXNlcjQxMzM2OTgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/41336980?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JViggiani",
            "html_url": "https://github.com/JViggiani",
            "followers_url": "https://api.github.com/users/JViggiani/followers",
            "following_url": "https://api.github.com/users/JViggiani/following{/other_user}",
            "gists_url": "https://api.github.com/users/JViggiani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JViggiani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JViggiani/subscriptions",
            "organizations_url": "https://api.github.com/users/JViggiani/orgs",
            "repos_url": "https://api.github.com/users/JViggiani/repos",
            "events_url": "https://api.github.com/users/JViggiani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JViggiani/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-02T13:59:59Z",
        "updated_at": "2023-06-07T16:37:26Z",
        "closed_at": "2023-06-07T16:37:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When building the GPTTreeIndex from documents (about 1000 pages of PDFs), once the documents are loaded and I begin index construction, it takes a very very long time and consistently hits the error. \r\n\r\nIndex construction function:\r\n\r\n```\r\ndef construct_docs_tree_indicies():\r\n    max_input_size = 4096\r\n    num_outputs = 512\r\n    max_chunk_overlap = 20\r\n    chunk_size_limit = 600\r\n\r\n    indicies = []\r\n\r\n    for item in os.scandir(docstore):\r\n        if item.is_dir():\r\n            prompt_helper = PromptHelper(max_input_size, num_outputs, max_chunk_overlap, chunk_size_limit=chunk_size_limit)\r\n\r\n            llm_predictor = LLMPredictor(llm=ChatOpenAI(temperature=0.5, model_name=\"gpt-3.5-turbo\", max_tokens=num_outputs, request_timeout=120))\r\n            service_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper)\r\n            print(f\"Reading docs from dir: {item}\")\r\n            documents = SimpleDirectoryReader(input_dir=docstore, recursive=True).load_data()\r\n            print(\"Finished reading docs from dir, constructing index\")\r\n            index = GPTTreeIndex.from_documents(\r\n                documents, service_context=service_context\r\n            )\r\n            print(\"Finished constructing index from docs\")\r\n            index.set_index_id(f\"{checksumdir.dirhash(item)}_GPTTreeIndex\")\r\n\r\n            index.storage_context.persist(persist_dir=persistdir)\r\n\r\n            indicies.append(index)\r\n\r\n    backup_index(\"docs\")\r\n\r\n    return indicies\r\n```\r\n\r\nConsole output:\r\n\r\n```\r\n(venv) PS C:\\Users\\Josh\\Desktop\\coding\\DiceMind-AI-Experiments-2> python .\\app.py\r\nGetting docs index\r\nReading docs from dir: <DirEntry 'books_pdf'>\r\nFinished reading docs from dir, constructing index\r\nRetrying langchain.chat_models.openai.ChatOpenAI.completion_with_retry.<locals>._completion_with_retry in 1.0 seconds as it raised RateLimitError: That model is currently overloaded with other requests. You can retry your request, or contact us through our help center at help.openai.com if the error persists. (Please include the request ID e34d289422303357dba40b7e38ab9109 in your message.).\r\n(repeated many many times)\r\n```\r\n\r\nMy versions are:\r\n\r\n```\r\ngpt_index==0.6.14\r\nlangchain==0.0.184\r\n```\r\n\r\nIs this a known issue, and if so, do any later versions fix this?\r\n\r\nI'm concerned about whether this error means that the index construction has internally failed, and that I should interrupt the program, or whether it will retry and continue after success. Maybe the error could be logged better to indicate that index construction _will_ continue, just after a little bit of time. \r\n\r\nCheers. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4739/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4739/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4724",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4724/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4724/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4724/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4724",
        "id": 1738056687,
        "node_id": "I_kwDOIWuq585nmKPv",
        "number": 4724,
        "title": "Request: playground for RetrieverQueryEngines an other advanced second-stage processing",
        "user": {
            "login": "JViggiani",
            "id": 41336980,
            "node_id": "MDQ6VXNlcjQxMzM2OTgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/41336980?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JViggiani",
            "html_url": "https://github.com/JViggiani",
            "followers_url": "https://api.github.com/users/JViggiani/followers",
            "following_url": "https://api.github.com/users/JViggiani/following{/other_user}",
            "gists_url": "https://api.github.com/users/JViggiani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JViggiani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JViggiani/subscriptions",
            "organizations_url": "https://api.github.com/users/JViggiani/orgs",
            "repos_url": "https://api.github.com/users/JViggiani/repos",
            "events_url": "https://api.github.com/users/JViggiani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JViggiani/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-02T11:51:10Z",
        "updated_at": "2023-06-03T10:02:15Z",
        "closed_at": "2023-06-03T10:02:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I really like the https://gpt-index.readthedocs.io/en/latest/how_to/analysis/playground.html Playground modules to be able to easily experiment which combination of indicies works best. \r\n\r\nA similarly useful thing would be a Playground for RetrieverQueryEngine - it would be good to know which combinations of ResponseSynthesizer, response mode, optimizers etc work best, from second stage processing ( https://gpt-index.readthedocs.io/en/latest/how_to/query/second_stage.html )\r\n\r\nThe advantage of this being separate would be that we don't have to rebuild the index every time we want to experiment. We can first build the optimal index, and then persist that to disk, before finding the optimal query technique. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4724/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4724/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4693",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4693/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4693/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4693/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4693",
        "id": 1737793280,
        "node_id": "I_kwDOIWuq585nlJ8A",
        "number": 4693,
        "title": "how to get embedding result or infomation(retrieve) without query llm(response synthesis)",
        "user": {
            "login": "mintisan",
            "id": 9136049,
            "node_id": "MDQ6VXNlcjkxMzYwNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9136049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintisan",
            "html_url": "https://github.com/mintisan",
            "followers_url": "https://api.github.com/users/mintisan/followers",
            "following_url": "https://api.github.com/users/mintisan/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintisan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintisan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintisan/subscriptions",
            "organizations_url": "https://api.github.com/users/mintisan/orgs",
            "repos_url": "https://api.github.com/users/mintisan/repos",
            "events_url": "https://api.github.com/users/mintisan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintisan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-02T09:14:48Z",
        "updated_at": "2023-06-02T10:02:57Z",
        "closed_at": "2023-06-02T10:02:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I just want to compare different embedding methods, like openai/faiss/deeplake or others with a lot of questions to see which one is suitable .\r\n\r\nI know how to get nodes after `response = query_engine.query(query_str)`:\r\n\r\n```\r\n    for idx, source in enumerate(response.source_nodes):\r\n        print(\"[Source] \" + str(idx) + \": \", source.source_text\r\n```\r\n\r\n\r\nBut I can't find retrieve without querying LLM in the relevant documentation or examples.\r\n\r\n- https://gpt-index.readthedocs.io/en/latest/how_to/customization/embeddings.html",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4693/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4693/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4692",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4692/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4692/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4692/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4692",
        "id": 1737776617,
        "node_id": "I_kwDOIWuq585nlF3p",
        "number": 4692,
        "title": "AttributeError: 'Response' object has no attribute 'print_response_stream'",
        "user": {
            "login": "nilevols",
            "id": 10579957,
            "node_id": "MDQ6VXNlcjEwNTc5OTU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10579957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nilevols",
            "html_url": "https://github.com/nilevols",
            "followers_url": "https://api.github.com/users/nilevols/followers",
            "following_url": "https://api.github.com/users/nilevols/following{/other_user}",
            "gists_url": "https://api.github.com/users/nilevols/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nilevols/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nilevols/subscriptions",
            "organizations_url": "https://api.github.com/users/nilevols/orgs",
            "repos_url": "https://api.github.com/users/nilevols/repos",
            "events_url": "https://api.github.com/users/nilevols/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nilevols/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-02T09:06:05Z",
        "updated_at": "2023-06-02T10:16:40Z",
        "closed_at": "2023-06-02T10:16:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Version\r\nv0.6.16.post1\r\n\r\n### Description\r\nFlowing the official document: [Demo-ChatGPT](https://gpt-index.readthedocs.io/en/v0.6.16.post1/examples/customization/llms/SimpleIndexDemo-ChatGPT.html), printing this error at `response.print_response_stream()`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4692/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4692/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4688",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4688/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4688/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4688/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4688",
        "id": 1737725862,
        "node_id": "I_kwDOIWuq585nk5em",
        "number": 4688,
        "title": "The chat agent 'llama_chat_agent' sometimes fails to correctly identify whether tools are needed",
        "user": {
            "login": "reinershir",
            "id": 6177423,
            "node_id": "MDQ6VXNlcjYxNzc0MjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6177423?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/reinershir",
            "html_url": "https://github.com/reinershir",
            "followers_url": "https://api.github.com/users/reinershir/followers",
            "following_url": "https://api.github.com/users/reinershir/following{/other_user}",
            "gists_url": "https://api.github.com/users/reinershir/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/reinershir/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/reinershir/subscriptions",
            "organizations_url": "https://api.github.com/users/reinershir/orgs",
            "repos_url": "https://api.github.com/users/reinershir/repos",
            "events_url": "https://api.github.com/users/reinershir/events{/privacy}",
            "received_events_url": "https://api.github.com/users/reinershir/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-02T08:40:42Z",
        "updated_at": "2023-06-06T05:23:54Z",
        "closed_at": "2023-06-06T05:23:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "1. Sometimes I input the content that exists in the document, but `chat_agent` judges that it doesn't need to use tools. How can I improve it so that it can accurately determine whether to use tools?\r\n\r\n\r\n2. Also, sometimes `AgentExecutor` has already obtained the correct answer during the first stage of execution, but it keeps iterating until it exceeds the maximum number of times.\r\n\r\n\r\n\r\nmy code:\r\n```python\r\nfrom llama_index import SimpleDirectoryReader, ServiceContext, GPTVectorStoreIndex, PromptHelper,StorageContext,load_index_from_storage\r\nfrom llama_index.llm_predictor.chatgpt import ChatGPTLLMPredictor\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\nimport faiss\r\nimport os\r\nfrom llama_index.langchain_helpers.agents import IndexToolConfig, LlamaIndexTool,LlamaToolkit\r\nfrom queue import Queue\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.agents import AgentType\r\nfrom langchain.docstore import InMemoryDocstore\r\nfrom langchain.vectorstores import FAISS\r\nfrom llama_index.langchain_helpers.agents import create_llama_chat_agent,create_llama_agent\r\nfrom llama_index.langchain_helpers.memory_wrapper import GPTIndexChatMemory\r\nos.environ[\"OPENAI_API_KEY\"] = 'sk-xxxx'\r\nfrom langchain.memory import ConversationBufferMemory\r\nfrom llama_index import download_loader\r\nfrom pathlib import Path\r\n\r\n\r\nembedding_size = 1536 # Dimensions of the OpenAIEmbeddings\r\nindex = faiss.IndexFlatL2(embedding_size)\r\nembedding_fn = OpenAIEmbeddings().embed_query\r\nvectorstore = FAISS(embedding_fn, index, InMemoryDocstore({}), {})\r\n\r\ndef construct_index(directory_path):\r\n    # set maximum input size\r\n    max_input_size = 4096\r\n    # set number of output tokens\r\n    num_outputs = 2000\r\n    # set maximum chunk overlap\r\n    max_chunk_overlap = 20\r\n    # set chunk size limit\r\n    chunk_size_limit = 2000 \r\n\r\n    q = Queue()\r\n\r\n    llm=ChatOpenAI(temperature=0.4, model_name=\"gpt-3.5-turbo\", verbose=True,streaming=True, callbacks=[StreamingStdOutCallbackHandler()])\r\n    llm_predictor = ChatGPTLLMPredictor(llm=llm)\r\n    prompt_helper = PromptHelper(max_input_size, num_outputs, max_chunk_overlap, chunk_size_limit=chunk_size_limit)\r\n \r\n     documents = SimpleDirectoryReader(directory_path).load_data()\r\n    service_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper) \r\n    index = GPTVectorStoreIndex.from_documents(documents,service_context=service_context)\r\n\r\n    index.storage_context.persist(\"D://storage\")\r\n\r\n    \r\n\r\n    # rebuild storage context\r\n    storage_context = StorageContext.from_defaults(persist_dir='D://storage')\r\n    # load index\r\n    index = load_index_from_storage(storage_context)\r\n    #response_mode=\"compact\",\r\n    query_engine = index.as_query_engine(similarity_top_k=30,service_context=service_context) #query_engine = index.as_query_engine(similarity_top_k=1,streaming=True,service_context=service_context)\r\n\r\n    retriever = vectorstore.as_retriever(search_kwargs=dict(k=1))\r\n    #qa = ConversationalRetrievalChain.from_llm(llm,retriever)\r\n    \r\n\r\n    # memory = GPTIndexChatMemory(\r\n    #     index=chat_history_index, \r\n    #     memory_key=\"chat_history\", \r\n    #     query_kwargs={\"response_mode\": \"compact\",\"streaming\":True,\"service_context\":service_context,\"similarity_top_k\":1}, #,\"streaming\":True\r\n    #     # return_source returns source nodes instead of querying index\r\n    #     return_source=True,\r\n    #     # return_messages returns context in message format\r\n    #     return_messages=True,\r\n    # )\r\n\r\n    #\u4f7f\u7528\u5185\u5b58\u4fdd\u5b58\u5bf9\u8bdd\u8bb0\u5f55\r\n    memory = ConversationBufferMemory(\r\n        memory_key=\"chat_history\"\r\n    )\r\n\r\n    tool_config = IndexToolConfig(\r\n        query_engine=query_engine, \r\n        name=f\"AI chat bot\",\r\n        description=f\"If it is a game-related question, please use tools to obtain information before answering.If this question is about a game and you don't know the answer, jst say 'sorry,i don't know'. Remember must respond in Chinese.\",\r\n        tool_kwargs={\"return_direct\": True}\r\n    )\r\n\r\n    tool = LlamaIndexTool.from_tool_config(tool_config)\r\n    toolkit = LlamaToolkit(\r\n        index_configs=[tool],\r\n    )\r\n\r\n\r\n    agent_chain = create_llama_chat_agent(\r\n        toolkit,\r\n        llm,\r\n        memory=memory,\r\n        verbose=True,\r\n        agent_kwargs={\"max_iterations\":3}\r\n    )\r\n    \r\n    while True: \r\n        query = input(\"What do you want to ask? \")\r\n        print(agent_chain.memory.chat_memory.messages)\r\n        response_stream = agent_chain.run(query)\r\n        \r\n        if  hasattr(response_stream,'response_gen'):\r\n                for text in response_stream.response_gen:\r\n                    print(text, end=\"\")\r\n                    #todo send to client\r\n        else:\r\n            print(response_stream)\r\n            \r\n\r\n\r\n\r\nservice_context=construct_index('D://Traning')\r\n\r\n\r\n```\r\n\r\noutput examp:\r\n```\r\n\r\n> Entering new AgentExecutor chain...\r\nThought: Do I need to use a tool? Yes\r\nAction: AI chat bot\r\nAction Input: \"How to obtain diamonds.\"Thought: Do I need to use a tool? Yes\r\nAction: AI chat bot\r\nAction Input: \"How to obtain diamonds\uff1f\"\u76ee\u524d\u94bb\u77f3\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u83b7\u5f97\uff1a\u5237\u65b0\u6bcf\u65e5\u5546\u5e97\u3001\u5b8c\u6210\u6bcf\u65e5\u4efb\u52a1\u3001\u6bcf\u65e5\u5e7f\u544a\u5956\u52b1\u3001\u53c2\u4e0e\u8d5b\u5b63\u5bf9\u6218\u5e76\u8fbe\u5230\u4e00\u5b9a\u676f\u6570\u3001\u9080\u8bf7\u65b0\u4eba\u597d\u53cb\u8fdb\u5165\u6e38\u620f\u3001\u597d\u53cb\u52a9\u529b\u3001\u96c6\u7ed3\u4ee4\u63a2\u5bfb\u5b9d\u85cf\u3002The original answer is not related to the new context. Please provide more information or clarify the question.\u94bb\u77f3\u53ef\u4ee5\u901a\u8fc7\u5b8c\u6210\u6e38\u620f\u5185\u7684\u4efb\u52a1\u3001\u6d3b\u52a8\u548c\u7ade\u6280\u573a\u6392\u540d\u7b49\u65b9\u5f0f\u83b7\u5f97\u3002\u6b64\u5916\uff0c\u53ef\u4ee5\u901a\u8fc7\u5145\u503c\u6765\u8d2d\u4e70\u94bb\u77f3\uff0c\u4ee5\u4fbf\u66f4\r\n\u5feb\u5730\u63d0\u5347\u81ea\u8eab\u5b9e\u529b\u548c\u83b7\u53d6\u66f4\u591a\u7684\u82f1\u96c4\u548c\u88c5\u5907\u3002\u4f46\u662f\uff0c\u5efa\u8bae\u73a9\u5bb6\u5728\u6e38\u620f\u4e2d\u5145\u5206\u5229\u7528\u5404\u79cd\u673a\u4f1a\u83b7\u5f97\u94bb\u77f3\uff0c\u4ee5\u907f\u514d\u8fc7\u5ea6\u4f9d\u8d56\u5145\u503c\uff0c\u4ece\u800c\u4fdd\u8bc1\u6e38\u620f\u7684\u516c\u5e73\u6027\u548c\u53ef\u6301\u7eed\u6027\u3002The game in question is called \" Potato Hero\" and it is a card battle game. The diamond in the game can be obtained through completing in-game tasks, activities, and arena rankings. Additionally, players can purchase diamonds through recharging. However, it is recommended that players take advantage of various opportunities to obtain diamonds in the game to ensure fairness and sustainability.The additional context is not relevant to the original question about how to obtain diamonds \r\nin \" Potato Hero\". Therefore, the original answer still stands:\r\n\r\nThe diamond in the game can be obtained through completing in-game tasks, activities, and arena rankings. Additionally, players can purchase diamonds through recharging. However, it is recommended that players take advantage of various opportunities to obtain diamonds in the game to ensure fairness and sustainability.The context provided is not relevant to the question about how to obtain diamonds in \" Potato Hero\". \r\nTherefore, the original answer still stands:\r\n\r\nThe diamond in the game can be obtained through completing in-game tasks, activities, and arena rankings. Additionally, players can purchase diamonds through recharging. However, it is recommended that players take advantage of various opportunities to obtain diamonds in the game to ensure fairness and sustainability.\r\nObservation: The context provided is not relevant to the question about how to obtain diamonds in \" Potato Hero\". Therefore, the original answer still stands:\r\n\r\nThe diamond in the game can be obtained through completing in-game tasks, activities, and arena rankings. Additionally, players can purchase diamonds through recharging. However, it is recommended that players take advantage of various opportunities to obtain diamonds in the game to ensure fairness and sustainability.\r\nThought:Do I need to use a tool? No\r\nAI: In \" Potato Hero\", diamonds can be obtained through completing in-game tasks, activities, and arena rankings. Additionally, players can purchase diamonds through recharging. However, it is recommended that players take advantage of various opportunities to obtain diamonds in the game to ensure fairness and sustainability.Do I need to use a tool? No\r\nAI: In \" Potato Hero\", diamonds can be obtained through completing in-game tasks, activities, and arena rankings. Additionally, players can purchase diamonds through recharging. However, it is recommended that players take advantage of various opportunities to obtain diamonds in the game to ensure fairness and sustainability.\r\n\r\n> Finished chain.\r\nIn \" Potato Hero\", diamonds can be obtained through completing in-game tasks, activities, and arena rankings. Additionally, players can purchase diamonds through recharging. However, it is recommended that players take advantage of various opportunities to obtain diamonds in the game to ensure fairness and sustainability.\r\nWhat do you want to ask?\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4688/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4688/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4684",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4684/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4684/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4684/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4684",
        "id": 1737622524,
        "node_id": "PR_kwDOIWuq585R-Lpj",
        "number": 4684,
        "title": "tool spec",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-02T07:33:32Z",
        "updated_at": "2023-06-03T03:47:39Z",
        "closed_at": "2023-06-03T03:47:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4684",
            "html_url": "https://github.com/run-llama/llama_index/pull/4684",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4684.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4684.patch",
            "merged_at": "2023-06-03T03:47:38Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4684/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4684/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4683",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4683/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4683/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4683/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4683",
        "id": 1737602037,
        "node_id": "PR_kwDOIWuq585R-HRu",
        "number": 4683,
        "title": "WIP: llamaindex <> pgvector (new PR -> https://github.com/jerryjliu/llama_index/pull/4759)",
        "user": {
            "login": "ykhli",
            "id": 3489963,
            "node_id": "MDQ6VXNlcjM0ODk5NjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3489963?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ykhli",
            "html_url": "https://github.com/ykhli",
            "followers_url": "https://api.github.com/users/ykhli/followers",
            "following_url": "https://api.github.com/users/ykhli/following{/other_user}",
            "gists_url": "https://api.github.com/users/ykhli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ykhli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ykhli/subscriptions",
            "organizations_url": "https://api.github.com/users/ykhli/orgs",
            "repos_url": "https://api.github.com/users/ykhli/repos",
            "events_url": "https://api.github.com/users/ykhli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ykhli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-02T07:16:43Z",
        "updated_at": "2023-06-02T17:46:47Z",
        "closed_at": "2023-06-02T17:28:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4683",
            "html_url": "https://github.com/run-llama/llama_index/pull/4683",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4683.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4683.patch",
            "merged_at": null
        },
        "body": "New PR is here https://github.com/jerryjliu/llama_index/pull/4759\r\n\r\nTODOs\r\n- add an example notebook\r\n- update docstrings\r\n- delete function (if vecs has this implemented?)\r\n- revert a few formatting",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4683/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4683/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4667",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4667/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4667/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4667/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4667",
        "id": 1737366896,
        "node_id": "I_kwDOIWuq585njh1w",
        "number": 4667,
        "title": "can prompt_tokens_count and prediction_tokens_count be statics separately",
        "user": {
            "login": "hawktang",
            "id": 2004071,
            "node_id": "MDQ6VXNlcjIwMDQwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2004071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hawktang",
            "html_url": "https://github.com/hawktang",
            "followers_url": "https://api.github.com/users/hawktang/followers",
            "following_url": "https://api.github.com/users/hawktang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hawktang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hawktang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hawktang/subscriptions",
            "organizations_url": "https://api.github.com/users/hawktang/orgs",
            "repos_url": "https://api.github.com/users/hawktang/repos",
            "events_url": "https://api.github.com/users/hawktang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hawktang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-02T02:38:25Z",
        "updated_at": "2023-07-22T02:20:14Z",
        "closed_at": "2023-07-22T02:20:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "version 0.6.16post1\r\ncan prompt_tokens_count and prediction_tokens_count be statics separately as GPT4 has different price for can prompt_tokens_count and prediction_tokens_count.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4667/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4667/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4666",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4666/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4666/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4666/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4666",
        "id": 1737365772,
        "node_id": "I_kwDOIWuq585njhkM",
        "number": 4666,
        "title": "query without index with vector database with node info",
        "user": {
            "login": "hawktang",
            "id": 2004071,
            "node_id": "MDQ6VXNlcjIwMDQwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2004071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hawktang",
            "html_url": "https://github.com/hawktang",
            "followers_url": "https://api.github.com/users/hawktang/followers",
            "following_url": "https://api.github.com/users/hawktang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hawktang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hawktang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hawktang/subscriptions",
            "organizations_url": "https://api.github.com/users/hawktang/orgs",
            "repos_url": "https://api.github.com/users/hawktang/repos",
            "events_url": "https://api.github.com/users/hawktang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hawktang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-02T02:36:26Z",
        "updated_at": "2023-07-13T20:22:54Z",
        "closed_at": "2023-06-07T19:58:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "version 0.6.16post1\r\n\r\nIs possible to remove index in the constructor for query when using vector database like qdrant.\r\n\r\nWhen there is node info and extra info in vector database, there seem not need for doc store and index store.\r\n\r\nBy this, the index and query process can be decoupled, make query side much slim.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4666/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4666/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4665",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4665/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4665/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4665/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4665",
        "id": 1737313178,
        "node_id": "PR_kwDOIWuq585R9JLx",
        "number": 4665,
        "title": "Logan/fix doc customization link",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-02T01:19:05Z",
        "updated_at": "2023-06-02T01:35:04Z",
        "closed_at": "2023-06-02T01:35:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4665",
            "html_url": "https://github.com/run-llama/llama_index/pull/4665",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4665.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4665.patch",
            "merged_at": "2023-06-02T01:35:03Z"
        },
        "body": "Add lint to custom_documents.md",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4665/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4665/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4664",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4664/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4664/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4664/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4664",
        "id": 1737268865,
        "node_id": "PR_kwDOIWuq585R8_yC",
        "number": 4664,
        "title": "Guideline error correcting query engine",
        "user": {
            "login": "hongyishi",
            "id": 7098202,
            "node_id": "MDQ6VXNlcjcwOTgyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7098202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hongyishi",
            "html_url": "https://github.com/hongyishi",
            "followers_url": "https://api.github.com/users/hongyishi/followers",
            "following_url": "https://api.github.com/users/hongyishi/following{/other_user}",
            "gists_url": "https://api.github.com/users/hongyishi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hongyishi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hongyishi/subscriptions",
            "organizations_url": "https://api.github.com/users/hongyishi/orgs",
            "repos_url": "https://api.github.com/users/hongyishi/repos",
            "events_url": "https://api.github.com/users/hongyishi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hongyishi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-02T00:13:00Z",
        "updated_at": "2023-06-09T17:03:53Z",
        "closed_at": "2023-06-09T17:03:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4664",
            "html_url": "https://github.com/run-llama/llama_index/pull/4664",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4664.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4664.patch",
            "merged_at": "2023-06-09T17:03:52Z"
        },
        "body": "### Summary\r\nThis builds on the previous PR that added a simple retry query engine. In the original retry query engine, if the evaluator returns false, the query is rerun with the original query engine but with the addition of the negative counterexample. In the new version, we use a guideline evaluator that provides feedback on the answer. The query transformer will synthesize a new query that combines the original response, the feedback given, and optionally also rewrites the original query based on the given feedback. This is fed back into the query engine until a satisfactory answer is given or max_retries is hit.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4664/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4664/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4649",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4649/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4649/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4649/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4649",
        "id": 1737176223,
        "node_id": "PR_kwDOIWuq585R8rgo",
        "number": 4649,
        "title": "supabase vecs",
        "user": {
            "login": "Zanyar261",
            "id": 119423242,
            "node_id": "U_kgDOBx5BCg",
            "avatar_url": "https://avatars.githubusercontent.com/u/119423242?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Zanyar261",
            "html_url": "https://github.com/Zanyar261",
            "followers_url": "https://api.github.com/users/Zanyar261/followers",
            "following_url": "https://api.github.com/users/Zanyar261/following{/other_user}",
            "gists_url": "https://api.github.com/users/Zanyar261/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Zanyar261/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Zanyar261/subscriptions",
            "organizations_url": "https://api.github.com/users/Zanyar261/orgs",
            "repos_url": "https://api.github.com/users/Zanyar261/repos",
            "events_url": "https://api.github.com/users/Zanyar261/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Zanyar261/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-01T22:17:53Z",
        "updated_at": "2023-06-03T00:54:48Z",
        "closed_at": "2023-06-03T00:54:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4649",
            "html_url": "https://github.com/run-llama/llama_index/pull/4649",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4649.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4649.patch",
            "merged_at": null
        },
        "body": "This is my first ever commit on something that isn't on my own project. Please pick me apart and tell me everything that is wrong with it (if you have the time).  Did it because of this tweet: https://twitter.com/kiwicopple/status/1664377669935349760 if you need context.\r\nNot sure if it will work but I think it will make it easier",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4649/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4649/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4647",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4647/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4647/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4647/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4647",
        "id": 1737172127,
        "node_id": "PR_kwDOIWuq585R8ql9",
        "number": 4647,
        "title": "add better hf predictor description",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-01T22:13:40Z",
        "updated_at": "2023-06-01T22:25:50Z",
        "closed_at": "2023-06-01T22:25:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4647",
            "html_url": "https://github.com/run-llama/llama_index/pull/4647",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4647.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4647.patch",
            "merged_at": "2023-06-01T22:25:49Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4647/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4647/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4642",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4642/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4642/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4642/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4642",
        "id": 1737140733,
        "node_id": "I_kwDOIWuq585niqn9",
        "number": 4642,
        "title": "Make multiple documents / indexes with PDFReader from llamahub",
        "user": {
            "login": "Michasx",
            "id": 62339592,
            "node_id": "MDQ6VXNlcjYyMzM5NTky",
            "avatar_url": "https://avatars.githubusercontent.com/u/62339592?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Michasx",
            "html_url": "https://github.com/Michasx",
            "followers_url": "https://api.github.com/users/Michasx/followers",
            "following_url": "https://api.github.com/users/Michasx/following{/other_user}",
            "gists_url": "https://api.github.com/users/Michasx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Michasx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Michasx/subscriptions",
            "organizations_url": "https://api.github.com/users/Michasx/orgs",
            "repos_url": "https://api.github.com/users/Michasx/repos",
            "events_url": "https://api.github.com/users/Michasx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Michasx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-01T21:46:13Z",
        "updated_at": "2023-06-05T02:09:52Z",
        "closed_at": "2023-06-05T02:09:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, I try to use llama hub and get data from pdf by PDFReader(), but then I realize that I can make only one pdf with this (I have 6 diffrent), becouse I need to use file=Path(). I try making 2 index and use GPTListIndex but this didn't work. Does anyone solve that problem before?\r\n\r\nPS: sorry for any mistake or stupid sentences, I'm new in this XD\r\n\r\n![image](https://github.com/jerryjliu/llama_index/assets/62339592/0d65a48a-5fc1-446b-bc61-1ef22b9a3c01)\r\n\r\n![image](https://github.com/jerryjliu/llama_index/assets/62339592/1738adef-e166-4111-b7b4-4851c1d0759a)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4642/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4642/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4631",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4631/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4631/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4631/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4631",
        "id": 1736803444,
        "node_id": "PR_kwDOIWuq585R7ZHa",
        "number": 4631,
        "title": "Update data_connectors.md to rename psychic",
        "user": {
            "login": "jasonwcfan",
            "id": 14931371,
            "node_id": "MDQ6VXNlcjE0OTMxMzcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/14931371?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasonwcfan",
            "html_url": "https://github.com/jasonwcfan",
            "followers_url": "https://api.github.com/users/jasonwcfan/followers",
            "following_url": "https://api.github.com/users/jasonwcfan/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasonwcfan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasonwcfan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasonwcfan/subscriptions",
            "organizations_url": "https://api.github.com/users/jasonwcfan/orgs",
            "repos_url": "https://api.github.com/users/jasonwcfan/repos",
            "events_url": "https://api.github.com/users/jasonwcfan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasonwcfan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-01T17:51:08Z",
        "updated_at": "2023-06-01T23:43:36Z",
        "closed_at": "2023-06-01T23:43:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4631",
            "html_url": "https://github.com/run-llama/llama_index/pull/4631",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4631.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4631.patch",
            "merged_at": "2023-06-01T23:43:36Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4631/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4631/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4626",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4626/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4626/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4626/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4626",
        "id": 1736616030,
        "node_id": "PR_kwDOIWuq585R6vii",
        "number": 4626,
        "title": "add tokenizer outputs to remove, fix device",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-01T15:54:04Z",
        "updated_at": "2023-08-28T17:09:55Z",
        "closed_at": "2023-06-01T16:58:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4626",
            "html_url": "https://github.com/run-llama/llama_index/pull/4626",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4626.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4626.patch",
            "merged_at": "2023-06-01T16:58:48Z"
        },
        "body": "Huggingface raises a value error now if a model is passed unused kwargs (very annoying tbh)\r\n\r\nThis fixes that, as well as fixes the device that the inputs move to.\r\n\r\nThis also removes temperature and do_sample in favor of more general generate_kwargs",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4626/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4626/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4624",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4624/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4624/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4624/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/4624",
        "id": 1736566894,
        "node_id": "PR_kwDOIWuq585R6k0j",
        "number": 4624,
        "title": "remove old kwarg from service_context docs",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-01T15:25:31Z",
        "updated_at": "2023-08-28T17:10:03Z",
        "closed_at": "2023-06-01T15:31:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/4624",
            "html_url": "https://github.com/run-llama/llama_index/pull/4624",
            "diff_url": "https://github.com/run-llama/llama_index/pull/4624.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/4624.patch",
            "merged_at": "2023-06-01T15:31:04Z"
        },
        "body": "Discovered in https://github.com/jerryjliu/llama_index/issues/4620",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4624/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4624/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4622",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4622/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4622/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4622/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4622",
        "id": 1736540549,
        "node_id": "I_kwDOIWuq585ngYGF",
        "number": 4622,
        "title": "How to return streaming response and some other json data to frontend?",
        "user": {
            "login": "chatgptguru",
            "id": 95582366,
            "node_id": "U_kgDOBbJ4ng",
            "avatar_url": "https://avatars.githubusercontent.com/u/95582366?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chatgptguru",
            "html_url": "https://github.com/chatgptguru",
            "followers_url": "https://api.github.com/users/chatgptguru/followers",
            "following_url": "https://api.github.com/users/chatgptguru/following{/other_user}",
            "gists_url": "https://api.github.com/users/chatgptguru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chatgptguru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chatgptguru/subscriptions",
            "organizations_url": "https://api.github.com/users/chatgptguru/orgs",
            "repos_url": "https://api.github.com/users/chatgptguru/repos",
            "events_url": "https://api.github.com/users/chatgptguru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chatgptguru/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-01T15:10:09Z",
        "updated_at": "2023-07-07T21:48:46Z",
        "closed_at": "2023-06-06T05:05:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, I am using latest version of llama-index, and by setting streaming=True, I am able to get streaming object in python backend.\r\nI am using python, flask for backend, and now I want to return streaming response and other json data to my react frontend.\r\nAny guide to return streaming response and other json data together, and guide to use that data in frontend?\r\nPlease help me :) ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4622/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4622/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4620",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4620/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4620/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4620/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4620",
        "id": 1736468948,
        "node_id": "I_kwDOIWuq585ngGnU",
        "number": 4620,
        "title": "Global ServiceContext Issue",
        "user": {
            "login": "ashutoshsinha25",
            "id": 51746938,
            "node_id": "MDQ6VXNlcjUxNzQ2OTM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/51746938?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ashutoshsinha25",
            "html_url": "https://github.com/ashutoshsinha25",
            "followers_url": "https://api.github.com/users/ashutoshsinha25/followers",
            "following_url": "https://api.github.com/users/ashutoshsinha25/following{/other_user}",
            "gists_url": "https://api.github.com/users/ashutoshsinha25/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ashutoshsinha25/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ashutoshsinha25/subscriptions",
            "organizations_url": "https://api.github.com/users/ashutoshsinha25/orgs",
            "repos_url": "https://api.github.com/users/ashutoshsinha25/repos",
            "events_url": "https://api.github.com/users/ashutoshsinha25/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ashutoshsinha25/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-01T14:36:25Z",
        "updated_at": "2023-07-22T02:25:56Z",
        "closed_at": "2023-07-22T02:25:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/jerryjliu/llama_index/blob/7c5488af848a40c1cef690805bc7de98b8dd7156/docs/how_to/customization/service_context.md \r\n\r\nfrom this service_context.md, when im following the global serviceContext code, it is giving two error.\r\n\r\n1. ServiceContext.from_defaults --> if i add is_global=True it throws : TypeError: from_defaults() got an unexpected keyword argument 'is_global' \r\n2. set_global_service_context --> when im importing this from from llama_index import set_global_service_context, it is giving cannot import name 'set_global_service_context' from 'llama_index' \r\n\r\nim just following whatever  code is there in the page. Can someone help/suggest what should be done here ? ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4620/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4620/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/4616",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/4616/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/4616/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/4616/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/4616",
        "id": 1736331733,
        "node_id": "I_kwDOIWuq585nflHV",
        "number": 4616,
        "title": "In the Q & A system, we need to use the website address  http://www.xxx.com\uff08which  is  my  actually  website\uff09 \uff0cno such as website address  like  http://www.examples.com.",
        "user": {
            "login": "pythonmanGo",
            "id": 32951840,
            "node_id": "MDQ6VXNlcjMyOTUxODQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/32951840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pythonmanGo",
            "html_url": "https://github.com/pythonmanGo",
            "followers_url": "https://api.github.com/users/pythonmanGo/followers",
            "following_url": "https://api.github.com/users/pythonmanGo/following{/other_user}",
            "gists_url": "https://api.github.com/users/pythonmanGo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pythonmanGo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pythonmanGo/subscriptions",
            "organizations_url": "https://api.github.com/users/pythonmanGo/orgs",
            "repos_url": "https://api.github.com/users/pythonmanGo/repos",
            "events_url": "https://api.github.com/users/pythonmanGo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pythonmanGo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-01T13:27:20Z",
        "updated_at": "2023-06-06T00:55:44Z",
        "closed_at": "2023-06-06T00:55:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "In the Q & A system, we need to use the website address. Now when users ask questions, http://example.com and other systems such as Hu compiled.\r\n\r\nHow to formulate the address of the official website in a question and answer to http://www.xxx.com.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/4616/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/4616/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    }
]