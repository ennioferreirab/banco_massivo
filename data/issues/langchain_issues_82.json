[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5837",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5837/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5837/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5837/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5837",
        "id": 1745994607,
        "node_id": "PR_kwDOIPDwls5Sa0t7",
        "number": 5837,
        "title": "Add additional VertexAI Params",
        "user": {
            "login": "thehappydinoa",
            "id": 30162978,
            "node_id": "MDQ6VXNlcjMwMTYyOTc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/30162978?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thehappydinoa",
            "html_url": "https://github.com/thehappydinoa",
            "followers_url": "https://api.github.com/users/thehappydinoa/followers",
            "following_url": "https://api.github.com/users/thehappydinoa/following{/other_user}",
            "gists_url": "https://api.github.com/users/thehappydinoa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thehappydinoa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thehappydinoa/subscriptions",
            "organizations_url": "https://api.github.com/users/thehappydinoa/orgs",
            "repos_url": "https://api.github.com/users/thehappydinoa/repos",
            "events_url": "https://api.github.com/users/thehappydinoa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thehappydinoa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T14:06:43Z",
        "updated_at": "2023-06-08T02:20:37Z",
        "closed_at": "2023-06-08T02:20:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5837",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5837",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5837.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5837.patch",
            "merged_at": "2023-06-08T02:20:37Z"
        },
        "body": "## Changes\r\n\r\n- Added the `stop` param to the `_VertexAICommon` class so it can be set at llm initialization\r\n\r\n## Example Usage\r\n\r\n```python\r\nVertexAI(\r\n    # ...\r\n    temperature=0.15,\r\n    max_output_tokens=128,\r\n    top_p=1,\r\n    top_k=40,\r\n    stop=[\"\\n```\"],\r\n)\r\n```\r\n\r\n## Possible Reviewers\r\n\r\n- @hwchase17 \r\n- @agola11",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5837/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5837/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5836",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5836/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5836/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5836/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5836",
        "id": 1745991826,
        "node_id": "PR_kwDOIPDwls5Sa0HI",
        "number": 5836,
        "title": "Add support for the endpoint URL in DynamoDBChatMesasgeHistory",
        "user": {
            "login": "rubms",
            "id": 16479016,
            "node_id": "MDQ6VXNlcjE2NDc5MDE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16479016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rubms",
            "html_url": "https://github.com/rubms",
            "followers_url": "https://api.github.com/users/rubms/followers",
            "following_url": "https://api.github.com/users/rubms/following{/other_user}",
            "gists_url": "https://api.github.com/users/rubms/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rubms/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rubms/subscriptions",
            "organizations_url": "https://api.github.com/users/rubms/orgs",
            "repos_url": "https://api.github.com/users/rubms/repos",
            "events_url": "https://api.github.com/users/rubms/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rubms/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T14:05:14Z",
        "updated_at": "2023-06-09T06:21:12Z",
        "closed_at": "2023-06-09T06:21:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5836",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5836",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5836.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5836.patch",
            "merged_at": "2023-06-09T06:21:11Z"
        },
        "body": "This PR adds the possibility of specifying the endpoint URL to AWS in the DynamoDBChatMessageHistory, so that it is possible to target not only the AWS cloud services, but also a local installation.\r\n\r\nSpecifying the endpoint URL, which is normally not done when addressing the cloud services, is very helpful when targeting a local instance (like [Localstack](https://localstack.cloud/)) when running local tests.\r\n\r\nFixes #5835\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested: @dev2049\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5836/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5836/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5835",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5835/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5835/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5835/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5835",
        "id": 1745984951,
        "node_id": "I_kwDOIPDwls5oEZ23",
        "number": 5835,
        "title": "Support for the AWS endpoint URL in the DynamoDBChatMessageHistory",
        "user": {
            "login": "rubms",
            "id": 16479016,
            "node_id": "MDQ6VXNlcjE2NDc5MDE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16479016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rubms",
            "html_url": "https://github.com/rubms",
            "followers_url": "https://api.github.com/users/rubms/followers",
            "following_url": "https://api.github.com/users/rubms/following{/other_user}",
            "gists_url": "https://api.github.com/users/rubms/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rubms/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rubms/subscriptions",
            "organizations_url": "https://api.github.com/users/rubms/orgs",
            "repos_url": "https://api.github.com/users/rubms/repos",
            "events_url": "https://api.github.com/users/rubms/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rubms/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T14:01:56Z",
        "updated_at": "2023-06-09T06:21:13Z",
        "closed_at": "2023-06-09T06:21:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nI propose having the possibility of specifying the endpoint URL to AWS in the DynamoDBChatMessageHistory, so that it is possible to target not only the AWS cloud services, but also a local installation. \r\n\r\n### Motivation\r\n\r\nSpecifying the endpoint URL, which is normally not done when addressing the cloud services, is very helpful when targeting a local instance (like [Localstack](https://localstack.cloud/)) when running local tests. \r\n\r\n### Your contribution\r\n\r\nI am providing this PR for the implementation: https://github.com/hwchase17/langchain/pull/5836/files",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5835/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5835/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5834",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5834/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5834/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5834/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5834",
        "id": 1745981002,
        "node_id": "I_kwDOIPDwls5oEY5K",
        "number": 5834,
        "title": "using MongoDBChatMessageHistory with agent and  RetrievalQA throws value is not a valid dict  error",
        "user": {
            "login": "ali-faiz-brainx",
            "id": 75253642,
            "node_id": "MDQ6VXNlcjc1MjUzNjQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/75253642?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ali-faiz-brainx",
            "html_url": "https://github.com/ali-faiz-brainx",
            "followers_url": "https://api.github.com/users/ali-faiz-brainx/followers",
            "following_url": "https://api.github.com/users/ali-faiz-brainx/following{/other_user}",
            "gists_url": "https://api.github.com/users/ali-faiz-brainx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ali-faiz-brainx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ali-faiz-brainx/subscriptions",
            "organizations_url": "https://api.github.com/users/ali-faiz-brainx/orgs",
            "repos_url": "https://api.github.com/users/ali-faiz-brainx/repos",
            "events_url": "https://api.github.com/users/ali-faiz-brainx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ali-faiz-brainx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-07T13:59:57Z",
        "updated_at": "2023-10-04T09:56:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI want to develop a chatbot that answer questions to user based on the Pinecone vectors. And I want to save the chat history in MongoDB. The history part works well with buffer memory but gives value is not a valid dict error with MongoDB memory.\r\n\r\nHere is the Code I'm using\r\n\r\n```\r\ndef run_openai_llm_chain(vectorstore, query):\r\n  # chat completion llm\r\n  llm = ChatOpenAI()\r\n\r\n  conversational_memory = ConversationBufferMemory(\r\n      memory_key='chat_history',\r\n      return_messages=True,\r\n      # output_key=\"answer\"\r\n  )\r\n\r\n  mongo_history = MongoDBChatMessageHistory(\r\n        connection_string=\"mongodb+srv://alifaiz:database@cluster0.eq70b.mongodb.net\", \r\n        session_id=\"new_session\"\r\n  )\r\n  \r\n  qa = RetrievalQA.from_chain_type(\r\n    llm=llm, \r\n    chain_type='stuff',\r\n    retriever=vectorstore.as_retriever(),\r\n    # memory=mongo_history\r\n  )\r\n\r\n  tools = [\r\n      Tool.from_function(\r\n          func=qa.run,\r\n          name=\"Reader\",\r\n          description=\"useful for when we need to answer question from context\"\r\n      )\r\n  ]\r\n\r\n  agent = initialize_agent(\r\n      tools,\r\n      llm,\r\n      agent=AgentType.CHAT_CONVERSATIONAL_REACT_DESCRIPTION,\r\n      verbose=True,\r\n      memory=mongo_history\r\n  )\r\n\r\n  answer = agent.run(input=query)\r\n\r\n  return answer\r\n ```\r\n\r\n\r\nError:\r\n```\r\nValidationError: 1 validation error for AgentExecutor\r\nmemory\r\n  value is not a valid dict (type=type_error.dict)\r\n```\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [X] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [x] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSteps to reproduce the issue:\r\n1. Use MongoDB as a memory in agents.\n\n### Expected behavior\n\nChat history should be saved in my database.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5834/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5834/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5833",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5833/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5833/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5833/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5833",
        "id": 1745974115,
        "node_id": "I_kwDOIPDwls5oEXNj",
        "number": 5833,
        "title": "langchain-server: ModuleNotFoundError: No module named 'langchain.cli'",
        "user": {
            "login": "firezym",
            "id": 3654421,
            "node_id": "MDQ6VXNlcjM2NTQ0MjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3654421?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/firezym",
            "html_url": "https://github.com/firezym",
            "followers_url": "https://api.github.com/users/firezym/followers",
            "following_url": "https://api.github.com/users/firezym/following{/other_user}",
            "gists_url": "https://api.github.com/users/firezym/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/firezym/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/firezym/subscriptions",
            "organizations_url": "https://api.github.com/users/firezym/orgs",
            "repos_url": "https://api.github.com/users/firezym/repos",
            "events_url": "https://api.github.com/users/firezym/events{/privacy}",
            "received_events_url": "https://api.github.com/users/firezym/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-07T13:56:35Z",
        "updated_at": "2023-06-13T15:37:09Z",
        "closed_at": "2023-06-13T15:37:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nWSL Ubuntu 20.04\r\n\r\nlangchain                     0.0.192\r\nlangchainplus-sdk             0.0.4\r\n\r\n\r\n### Who can help?\r\n\r\n@agola11 \r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [x] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nI did as instructed in the link\r\nhttps://python.langchain.com/en/latest/tracing/local_installation.html\r\n\r\n```shell\r\npip install langchain --upgrade\r\nlangchain-server\r\n```\r\n\r\n### Expected behavior\r\n\r\n\u276f langchain-server\r\nTraceback (most recent call last):\r\n  File \"/home/usr/miniconda3/envs/dev/bin/langchain-server\", line 5, in <module>\r\n    from langchain.server import main\r\n  File \"/home/usr/miniconda3/envs/dev/lib/python3.11/site-packages/langchain/server.py\", line 5, in <module>\r\n    from langchain.cli.main import get_docker_compose_command\r\nModuleNotFoundError: No module named 'langchain.cli'",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5833/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5833/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5832",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5832/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5832/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5832/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5832",
        "id": 1745925719,
        "node_id": "PR_kwDOIPDwls5Salyc",
        "number": 5832,
        "title": "Update microsoft loader example with docx2txt dependency",
        "user": {
            "login": "duarteocarmo",
            "id": 26342344,
            "node_id": "MDQ6VXNlcjI2MzQyMzQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/26342344?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duarteocarmo",
            "html_url": "https://github.com/duarteocarmo",
            "followers_url": "https://api.github.com/users/duarteocarmo/followers",
            "following_url": "https://api.github.com/users/duarteocarmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/duarteocarmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duarteocarmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duarteocarmo/subscriptions",
            "organizations_url": "https://api.github.com/users/duarteocarmo/orgs",
            "repos_url": "https://api.github.com/users/duarteocarmo/repos",
            "events_url": "https://api.github.com/users/duarteocarmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duarteocarmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T13:33:46Z",
        "updated_at": "2023-06-08T02:21:49Z",
        "closed_at": "2023-06-08T02:21:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5832",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5832",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5832.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5832.patch",
            "merged_at": "2023-06-08T02:21:49Z"
        },
        "body": "@eyurtsev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5832/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5832/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5831",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5831/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5831/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5831/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5831",
        "id": 1745892602,
        "node_id": "PR_kwDOIPDwls5SaeZe",
        "number": 5831,
        "title": "Update openai embeddings notebook with correct embedding model in section 2",
        "user": {
            "login": "daidoji",
            "id": 452431,
            "node_id": "MDQ6VXNlcjQ1MjQzMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/452431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daidoji",
            "html_url": "https://github.com/daidoji",
            "followers_url": "https://api.github.com/users/daidoji/followers",
            "following_url": "https://api.github.com/users/daidoji/following{/other_user}",
            "gists_url": "https://api.github.com/users/daidoji/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daidoji/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daidoji/subscriptions",
            "organizations_url": "https://api.github.com/users/daidoji/orgs",
            "repos_url": "https://api.github.com/users/daidoji/repos",
            "events_url": "https://api.github.com/users/daidoji/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daidoji/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-07T13:21:00Z",
        "updated_at": "2023-08-11T02:02:10Z",
        "closed_at": "2023-08-11T02:02:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5831",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5831",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5831.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5831.patch",
            "merged_at": "2023-08-11T02:02:10Z"
        },
        "body": "In second section it looks like a copy/paste from the first section and doesn't include the specific embedding model mentioned in the example so I added it for clarity.\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes Didn't open an issue as this was a small change to the docs.\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n@hwchase17\r\n@agola11",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5831/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5831/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5830",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5830/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5830/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5830/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5830",
        "id": 1745869360,
        "node_id": "PR_kwDOIPDwls5SaZQf",
        "number": 5830,
        "title": "Update openai.ipynb embedding to reflect model named in example",
        "user": {
            "login": "daidoji",
            "id": 452431,
            "node_id": "MDQ6VXNlcjQ1MjQzMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/452431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daidoji",
            "html_url": "https://github.com/daidoji",
            "followers_url": "https://api.github.com/users/daidoji/followers",
            "following_url": "https://api.github.com/users/daidoji/following{/other_user}",
            "gists_url": "https://api.github.com/users/daidoji/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daidoji/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daidoji/subscriptions",
            "organizations_url": "https://api.github.com/users/daidoji/orgs",
            "repos_url": "https://api.github.com/users/daidoji/repos",
            "events_url": "https://api.github.com/users/daidoji/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daidoji/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T13:10:55Z",
        "updated_at": "2023-06-07T13:15:26Z",
        "closed_at": "2023-06-07T13:15:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5830",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5830",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5830.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5830.patch",
            "merged_at": null
        },
        "body": "There were two sections showing how to call different embedding models with openai.  However, the second section was just a copy/paste from the first and didn't include the model name as intended I think.\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes (didn't open an issue because this is a small change)\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n@hwchase17\r\n@agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n@hwchase17\r\n@agola11",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5830/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5830/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5829",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5829/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5829/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5829/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5829",
        "id": 1745839229,
        "node_id": "I_kwDOIPDwls5oD2R9",
        "number": 5829,
        "title": " reduce with long text",
        "user": {
            "login": "nezhazheng",
            "id": 1982475,
            "node_id": "MDQ6VXNlcjE5ODI0NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1982475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nezhazheng",
            "html_url": "https://github.com/nezhazheng",
            "followers_url": "https://api.github.com/users/nezhazheng/followers",
            "following_url": "https://api.github.com/users/nezhazheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/nezhazheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nezhazheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nezhazheng/subscriptions",
            "organizations_url": "https://api.github.com/users/nezhazheng/orgs",
            "repos_url": "https://api.github.com/users/nezhazheng/repos",
            "events_url": "https://api.github.com/users/nezhazheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nezhazheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-07T12:55:30Z",
        "updated_at": "2023-09-13T16:06:23Z",
        "closed_at": "2023-09-13T16:06:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI have a large text that I want to summarize using the load_summarize_chain map_reduce type. However, I found that the text is still too large after the reduce stage, exceeding the token limit. How can I generally solve this problem?\r\n\r\nError message:\r\nA single document was so long it could not be combined with another document, we cannot handle this.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5829/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5829/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5826",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5826/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5826/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5826/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5826",
        "id": 1745762876,
        "node_id": "I_kwDOIPDwls5oDjo8",
        "number": 5826,
        "title": "SQLalchemy MovedIn20Warning error when writing app tests that includes langchain",
        "user": {
            "login": "tonilopezmr",
            "id": 5845622,
            "node_id": "MDQ6VXNlcjU4NDU2MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5845622?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tonilopezmr",
            "html_url": "https://github.com/tonilopezmr",
            "followers_url": "https://api.github.com/users/tonilopezmr/followers",
            "following_url": "https://api.github.com/users/tonilopezmr/following{/other_user}",
            "gists_url": "https://api.github.com/users/tonilopezmr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tonilopezmr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tonilopezmr/subscriptions",
            "organizations_url": "https://api.github.com/users/tonilopezmr/orgs",
            "repos_url": "https://api.github.com/users/tonilopezmr/repos",
            "events_url": "https://api.github.com/users/tonilopezmr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tonilopezmr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-07T12:13:16Z",
        "updated_at": "2023-09-13T16:06:27Z",
        "closed_at": "2023-09-13T16:06:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nWhen running `nox test` there is a warning about SQLalchemy MovedIn20Warning deprecated, here is the error:\r\n\r\nHappening in `langchain = \"^0.0.183\"`\r\n\r\n```\r\n.nox/test/lib/python3.10/site-packages/langchain/__init__.py:7: in <module>\r\n    from langchain.cache import BaseCache\r\n.nox/test/lib/python3.10/site-packages/langchain/cache.py:35: in <module>\r\n    from langchain.vectorstores.redis import Redis as RedisVectorstore\r\n.nox/test/lib/python3.10/site-packages/langchain/vectorstores/__init__.py:2: in <module>\r\n    from langchain.vectorstores.analyticdb import AnalyticDB\r\n.nox/test/lib/python3.10/site-packages/langchain/vectorstores/analyticdb.py:20: in <module>\r\n    Base = declarative_base()  # type: Any\r\n<string>:2: in declarative_base\r\n    ???\r\n.nox/test/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py:388: in warned\r\n    _warn_with_version(message, version, wtype, stacklevel=3)\r\n.nox/test/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py:52: in _warn_with_version\r\n    _warnings_warn(warn, stacklevel=stacklevel + 1)\r\n.nox/test/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py:1897: in _warnings_warn\r\n    warnings.warn(message, stacklevel=stacklevel + 1)\r\nE   sqlalchemy.exc.MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\r\n```\r\n\r\nI have to deactivate warnings to be able to run my tests.\n\n### Who can help?\n\n@vowelparrot \r\n\r\nWhen running `nox test` there is a warning about SQLalchemy MovedIn20Warning deprecated, here is the error:\r\n\r\nHappening in `langchain = \"^0.0.183\"`\r\n\r\n```\r\n.nox/test/lib/python3.10/site-packages/langchain/__init__.py:7: in <module>\r\n    from langchain.cache import BaseCache\r\n.nox/test/lib/python3.10/site-packages/langchain/cache.py:35: in <module>\r\n    from langchain.vectorstores.redis import Redis as RedisVectorstore\r\n.nox/test/lib/python3.10/site-packages/langchain/vectorstores/__init__.py:2: in <module>\r\n    from langchain.vectorstores.analyticdb import AnalyticDB\r\n.nox/test/lib/python3.10/site-packages/langchain/vectorstores/analyticdb.py:20: in <module>\r\n    Base = declarative_base()  # type: Any\r\n<string>:2: in declarative_base\r\n    ???\r\n.nox/test/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py:388: in warned\r\n    _warn_with_version(message, version, wtype, stacklevel=3)\r\n.nox/test/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py:52: in _warn_with_version\r\n    _warnings_warn(warn, stacklevel=stacklevel + 1)\r\n.nox/test/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py:1897: in _warnings_warn\r\n    warnings.warn(message, stacklevel=stacklevel + 1)\r\nE   sqlalchemy.exc.MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\r\n```\r\n\r\nI have to deactivate warnings to be able to run my tests.\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nlangchain = \"^0.0.183\"\r\n\r\ncreate a test that loads langchain in your app, this are the langchain imports used:\r\n\r\n```\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.document_loaders import PyPDFLoader\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\nfrom langchain.vectorstores import Pinecone\r\n```\r\n\r\nWhen running `nox test` which runs pytest:\r\n\r\n```\r\n@session()\r\ndef test(s: Session) -> None:\r\n    s.install(\".\", \"pytest\", \"pytest-cov\")\r\n    s.run(\r\n        \"python\",\r\n        \"-m\",\r\n        \"pytest\",\r\n        \"--cov=fact\",\r\n        \"--cov-report=html\",\r\n        \"--cov-report=term\",\r\n        \"tests\",\r\n        *s.posargs,\r\n    )\r\n```\r\n\r\nthat has to throw the warning and test will fail.\r\n\r\n\n\n### Expected behavior\n\nIt shouldn't throw any warning.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5826/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5826/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5825",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5825/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5825/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5825/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5825",
        "id": 1745664387,
        "node_id": "PR_kwDOIPDwls5SZsPq",
        "number": 5825,
        "title": "Create snowflake Loader",
        "user": {
            "login": "sergiolrinditex",
            "id": 119440106,
            "node_id": "U_kgDOBx6C6g",
            "avatar_url": "https://avatars.githubusercontent.com/u/119440106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sergiolrinditex",
            "html_url": "https://github.com/sergiolrinditex",
            "followers_url": "https://api.github.com/users/sergiolrinditex/followers",
            "following_url": "https://api.github.com/users/sergiolrinditex/following{/other_user}",
            "gists_url": "https://api.github.com/users/sergiolrinditex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sergiolrinditex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sergiolrinditex/subscriptions",
            "organizations_url": "https://api.github.com/users/sergiolrinditex/orgs",
            "repos_url": "https://api.github.com/users/sergiolrinditex/repos",
            "events_url": "https://api.github.com/users/sergiolrinditex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sergiolrinditex/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-07T11:19:15Z",
        "updated_at": "2023-06-10T20:05:06Z",
        "closed_at": "2023-06-09T05:03:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5825",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5825",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5825.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5825.patch",
            "merged_at": "2023-06-09T05:03:00Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5825/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5825/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5824",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5824/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5824/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5824/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5824",
        "id": 1745475416,
        "node_id": "I_kwDOIPDwls5oCddY",
        "number": 5824,
        "title": "Support integer/float comparators for WeaviateTranslator",
        "user": {
            "login": "Yanterra",
            "id": 12778725,
            "node_id": "MDQ6VXNlcjEyNzc4NzI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12778725?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Yanterra",
            "html_url": "https://github.com/Yanterra",
            "followers_url": "https://api.github.com/users/Yanterra/followers",
            "following_url": "https://api.github.com/users/Yanterra/following{/other_user}",
            "gists_url": "https://api.github.com/users/Yanterra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Yanterra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Yanterra/subscriptions",
            "organizations_url": "https://api.github.com/users/Yanterra/orgs",
            "repos_url": "https://api.github.com/users/Yanterra/repos",
            "events_url": "https://api.github.com/users/Yanterra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Yanterra/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-07T09:38:21Z",
        "updated_at": "2023-09-13T16:06:31Z",
        "closed_at": "2023-09-13T16:06:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThe WeaviateTranslator Class should allow for Comparators like GTE, GT, LT or LTE when using number/float attributes in Weaviate.\n\n### Motivation\n\nCurrently, when using the [SelfQueryRetriever with Weaviate](https://python.langchain.com/en/latest/modules/indexes/retrievers/examples/weaviate_self_query.html), only Equal filters are allowed. For PineCone, this limitation does not exist.\r\n\r\nThe result is, that effectively Self-Query with Weaviate only works with Text attributes and not with number attributes, where e.g.  GreaterThan filters are useful. This is reflected in the [WeaviateTranslator class](https://github.com/hwchase17/langchain/blob/master/langchain/retrievers/self_query/weaviate.py), where \"valueText\" is hard-coded instead of dynamically adapted to the current path/attribute.\r\n\r\nWhen initializing the SelfQueryRetriever, a list of used attributes + types is defined, so information, if an attribute is a text or number field, exists and could be forwarded to the WeaviateTranslator.\n\n### Your contribution\n\nI have adapted the WeaviateTranslator Class locally to work with the list of AttributeInfo, which is defined for the SelfQueryRetriever. For each attribute, it looks up the type in AttributeInfo and chooses \"valueText\" or \"valueNumber\" accordingly. This would allow for the usage of all available comparators.\r\n\r\nIf this feature is wanted, I could submit a PR.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5824/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5824/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5823",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5823/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5823/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5823/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5823",
        "id": 1745456809,
        "node_id": "PR_kwDOIPDwls5SY-il",
        "number": 5823,
        "title": "add ocr_languages param for ConfluenceLoader.load()",
        "user": {
            "login": "blankbro",
            "id": 31715758,
            "node_id": "MDQ6VXNlcjMxNzE1NzU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/31715758?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blankbro",
            "html_url": "https://github.com/blankbro",
            "followers_url": "https://api.github.com/users/blankbro/followers",
            "following_url": "https://api.github.com/users/blankbro/following{/other_user}",
            "gists_url": "https://api.github.com/users/blankbro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blankbro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blankbro/subscriptions",
            "organizations_url": "https://api.github.com/users/blankbro/orgs",
            "repos_url": "https://api.github.com/users/blankbro/repos",
            "events_url": "https://api.github.com/users/blankbro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blankbro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-07T09:27:46Z",
        "updated_at": "2023-06-10T23:51:04Z",
        "closed_at": "2023-06-10T23:51:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5823",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5823",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5823.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5823.patch",
            "merged_at": "2023-06-10T23:51:04Z"
        },
        "body": " @eyurtsev\r\n\r\n\u5f53Confluence\u6587\u6863\u5185\u5bb9\u4e2d\u5305\u542b\u9644\u4ef6\uff0c\u4e14\u9644\u4ef6\u5185\u5bb9\u4e3a\u975e\u82f1\u6587\u65f6\uff0c\u63d0\u53d6\u51fa\u6765\u7684\u6587\u672c\u662f\u4e71\u7801\u7684\u3002\r\nWhen the content of the document contains attachments, and the content of the attachments is not in English, the extracted text is garbled.\r\n\r\n\u8fd9\u4e3b\u8981\u662f\u56e0\u4e3a\u6ca1\u6709\u4e3apytesseract\u4f20\u9012lang\u53c2\u6570\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53ea\u652f\u6301\u82f1\u6587\u3002\r\nThis is mainly because lang parameter is not passed to pytesseract, and only English is supported by default.\r\n\r\n\u6240\u4ee5\u6211\u7ed9ConfluenceLoader.load()\u6dfb\u52a0\u4e86ocr_languages\u53c2\u6570\uff0c\u4ee5\u4fbf\u652f\u6301\u591a\u79cd\u8bed\u8a00\u3002\r\nSo I added the ocr_languages parameter to ConfluenceLoader.load () to support multiple languages.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5823/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5823/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5822",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5822/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5822/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5822/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5822",
        "id": 1745358828,
        "node_id": "I_kwDOIPDwls5oCA_s",
        "number": 5822,
        "title": "skip openai params when embedding",
        "user": {
            "login": "warjiang",
            "id": 6478745,
            "node_id": "MDQ6VXNlcjY0Nzg3NDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6478745?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/warjiang",
            "html_url": "https://github.com/warjiang",
            "followers_url": "https://api.github.com/users/warjiang/followers",
            "following_url": "https://api.github.com/users/warjiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/warjiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/warjiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/warjiang/subscriptions",
            "organizations_url": "https://api.github.com/users/warjiang/orgs",
            "repos_url": "https://api.github.com/users/warjiang/repos",
            "events_url": "https://api.github.com/users/warjiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/warjiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T08:36:23Z",
        "updated_at": "2023-06-07T14:32:59Z",
        "closed_at": "2023-06-07T14:32:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain@0.0.192\r\nI upgrade my langchain lib by execute pip install -U langchain, and the verion is 0.0.192\u3002But i found that openai.api_base not working. I use azure openai service as openai backend, the openai.api_base is very import for me. I hava compared tag/0.0.192 and tag/0.0.191, and figure out that:\r\n![image](https://github.com/hwchase17/langchain/assets/6478745/cfa96128-da8a-4339-a92c-5e9031953763)\r\nopenai params is moved inside _invocation_params function\uff0cand used in some openai invoke:\r\n![image](https://github.com/hwchase17/langchain/assets/6478745/e81e41e2-0ac0-4658-9d0d-57d2b347e026)\r\n![image](https://github.com/hwchase17/langchain/assets/6478745/b5f4b9f5-5535-4026-9817-b1046751907a)\r\nbut still some case not covered like:\r\n![image](https://github.com/hwchase17/langchain/assets/6478745/2c907b5d-81f7-4bf2-9e46-8ab409f99e60)\r\n\r\n\n\n### Who can help?\n\n@hwchase17 i have debug langchain and make a pr, plz review the pr:https://github.com/hwchase17/langchain/pull/5821, thanks\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. pip install -U langchain\r\n2. exeucte code next:  \r\n```python\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\ndef main():\r\n    embeddings = OpenAIEmbeddings(\r\n        openai_api_key=\"OPENAI_API_KEY\", openai_api_base=\"OPENAI_API_BASE\",\r\n    )\r\n    text = \"This is a test document.\"\r\n    query_result = embeddings.embed_query(text)\r\n    print(query_result)\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\n\n### Expected behavior\n\nsame effect as langchain@0.0.191\uff0c ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5822/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5822/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5821",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5821/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5821/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5821/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5821",
        "id": 1745348855,
        "node_id": "PR_kwDOIPDwls5SYnZ3",
        "number": 5821,
        "title": "fix: fullfill openai params when embedding",
        "user": {
            "login": "warjiang",
            "id": 6478745,
            "node_id": "MDQ6VXNlcjY0Nzg3NDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6478745?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/warjiang",
            "html_url": "https://github.com/warjiang",
            "followers_url": "https://api.github.com/users/warjiang/followers",
            "following_url": "https://api.github.com/users/warjiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/warjiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/warjiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/warjiang/subscriptions",
            "organizations_url": "https://api.github.com/users/warjiang/orgs",
            "repos_url": "https://api.github.com/users/warjiang/repos",
            "events_url": "https://api.github.com/users/warjiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/warjiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T08:30:23Z",
        "updated_at": "2023-06-07T14:32:58Z",
        "closed_at": "2023-06-07T14:32:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5821",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5821",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5821.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5821.patch",
            "merged_at": "2023-06-07T14:32:58Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes #5822 \r\nI upgrade my langchain lib by execute `pip install -U langchain`, and the verion is 0.0.192\u3002But i found that openai.api_base not working. I use azure openai service as openai backend, the openai.api_base is very import for me. I hava compared tag/0.0.192 and tag/0.0.191, and figure out that:\r\n![image](https://github.com/hwchase17/langchain/assets/6478745/e183fdb2-8224-45c9-b3b4-26d62823999a)\r\nopenai params is moved inside `_invocation_params` function\uff0cand used in some openai invoke:\r\n![image](https://github.com/hwchase17/langchain/assets/6478745/5a55a048-5fa9-4bf4-aaef-3902226bec5e)\r\n![image](https://github.com/hwchase17/langchain/assets/6478745/85b8cebc-eeb8-4538-a525-814719c8f8df)\r\nbut still some case not covered like:\r\n![image](https://github.com/hwchase17/langchain/assets/6478745/e0297620-f2b2-4f4f-98bd-d0ed19022dac)\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n@hwchase17 \r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5821/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5821/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5820",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5820/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5820/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5820/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5820",
        "id": 1745282711,
        "node_id": "I_kwDOIPDwls5oBuaX",
        "number": 5820,
        "title": "Issue: RateLimitError: The server had an error while processing your request. Sorry about that!",
        "user": {
            "login": "mykytamykhailenko",
            "id": 110097066,
            "node_id": "U_kgDOBo_yqg",
            "avatar_url": "https://avatars.githubusercontent.com/u/110097066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mykytamykhailenko",
            "html_url": "https://github.com/mykytamykhailenko",
            "followers_url": "https://api.github.com/users/mykytamykhailenko/followers",
            "following_url": "https://api.github.com/users/mykytamykhailenko/following{/other_user}",
            "gists_url": "https://api.github.com/users/mykytamykhailenko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mykytamykhailenko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mykytamykhailenko/subscriptions",
            "organizations_url": "https://api.github.com/users/mykytamykhailenko/orgs",
            "repos_url": "https://api.github.com/users/mykytamykhailenko/repos",
            "events_url": "https://api.github.com/users/mykytamykhailenko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mykytamykhailenko/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-06-07T07:51:10Z",
        "updated_at": "2023-12-08T16:02:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI have encountered the following error:\r\n`RateLimitError: The server had an error while processing your request. Sorry about that!`\r\nThis is the call stack:\r\n```---------------------------------------------------------------------------\r\nRateLimitError                            Traceback (most recent call last)\r\n[<ipython-input-28-74b7a6f0668a>](https://localhost:8080/#) in <cell line: 55>()\r\n     54 \r\n     55 for sku, docs in documents.items():\r\n---> 56   summaries[sku] = summary_chain(docs)\r\n\r\n24 frames\r\n[/usr/local/lib/python3.10/dist-packages/langchain/chains/base.py](https://localhost:8080/#) in __call__(self, inputs, return_only_outputs, callbacks, include_run_info)\r\n    143         except (KeyboardInterrupt, Exception) as e:\r\n    144             run_manager.on_chain_error(e)\r\n--> 145             raise e\r\n    146         run_manager.on_chain_end(outputs)\r\n    147         final_outputs: Dict[str, Any] = self.prep_outputs(\r\n\r\n[/usr/local/lib/python3.10/dist-packages/langchain/chains/base.py](https://localhost:8080/#) in __call__(self, inputs, return_only_outputs, callbacks, include_run_info)\r\n    137         try:\r\n    138             outputs = (\r\n--> 139                 self._call(inputs, run_manager=run_manager)\r\n    140                 if new_arg_supported\r\n    141                 else self._call(inputs)\r\n\r\n[/usr/local/lib/python3.10/dist-packages/langchain/chains/combine_documents/base.py](https://localhost:8080/#) in _call(self, inputs, run_manager)\r\n     82         # Other keys are assumed to be needed for LLM prediction\r\n     83         other_keys = {k: v for k, v in inputs.items() if k != self.input_key}\r\n---> 84         output, extra_return_dict = self.combine_docs(\r\n     85             docs, callbacks=_run_manager.get_child(), **other_keys\r\n     86         )\r\n\r\n[/usr/local/lib/python3.10/dist-packages/langchain/chains/combine_documents/map_reduce.py](https://localhost:8080/#) in combine_docs(self, docs, token_max, callbacks, **kwargs)\r\n    142         This reducing can be done recursively if needed (if there are many documents).\r\n    143         \"\"\"\r\n--> 144         results = self.llm_chain.apply(\r\n    145             # FYI - this is parallelized and so it is fast.\r\n    146             [{self.document_variable_name: d.page_content, **kwargs} for d in docs],\r\n\r\n[/usr/local/lib/python3.10/dist-packages/langchain/chains/llm.py](https://localhost:8080/#) in apply(self, input_list, callbacks)\r\n    155         except (KeyboardInterrupt, Exception) as e:\r\n    156             run_manager.on_chain_error(e)\r\n--> 157             raise e\r\n    158         outputs = self.create_outputs(response)\r\n    159         run_manager.on_chain_end({\"outputs\": outputs})\r\n\r\n[/usr/local/lib/python3.10/dist-packages/langchain/chains/llm.py](https://localhost:8080/#) in apply(self, input_list, callbacks)\r\n    152         )\r\n    153         try:\r\n--> 154             response = self.generate(input_list, run_manager=run_manager)\r\n    155         except (KeyboardInterrupt, Exception) as e:\r\n    156             run_manager.on_chain_error(e)\r\n\r\n[/usr/local/lib/python3.10/dist-packages/langchain/chains/llm.py](https://localhost:8080/#) in generate(self, input_list, run_manager)\r\n     77         \"\"\"Generate LLM result from inputs.\"\"\"\r\n     78         prompts, stop = self.prep_prompts(input_list, run_manager=run_manager)\r\n---> 79         return self.llm.generate_prompt(\r\n     80             prompts, stop, callbacks=run_manager.get_child() if run_manager else None\r\n     81         )\r\n\r\n[/usr/local/lib/python3.10/dist-packages/langchain/llms/base.py](https://localhost:8080/#) in generate_prompt(self, prompts, stop, callbacks)\r\n    133     ) -> LLMResult:\r\n    134         prompt_strings = [p.to_string() for p in prompts]\r\n--> 135         return self.generate(prompt_strings, stop=stop, callbacks=callbacks)\r\n    136 \r\n    137     async def agenerate_prompt(\r\n\r\n[/usr/local/lib/python3.10/dist-packages/langchain/llms/base.py](https://localhost:8080/#) in generate(self, prompts, stop, callbacks)\r\n    190             except (KeyboardInterrupt, Exception) as e:\r\n    191                 run_manager.on_llm_error(e)\r\n--> 192                 raise e\r\n    193             run_manager.on_llm_end(output)\r\n    194             if run_manager:\r\n\r\n[/usr/local/lib/python3.10/dist-packages/langchain/llms/base.py](https://localhost:8080/#) in generate(self, prompts, stop, callbacks)\r\n    184             try:\r\n    185                 output = (\r\n--> 186                     self._generate(prompts, stop=stop, run_manager=run_manager)\r\n    187                     if new_arg_supported\r\n    188                     else self._generate(prompts, stop=stop)\r\n\r\n[/usr/local/lib/python3.10/dist-packages/langchain/llms/openai.py](https://localhost:8080/#) in _generate(self, prompts, stop, run_manager)\r\n    315                 choices.extend(response[\"choices\"])\r\n    316             else:\r\n--> 317                 response = completion_with_retry(self, prompt=_prompts, **params)\r\n    318                 choices.extend(response[\"choices\"])\r\n    319             if not self.streaming:\r\n\r\n[/usr/local/lib/python3.10/dist-packages/langchain/llms/openai.py](https://localhost:8080/#) in completion_with_retry(llm, **kwargs)\r\n    104         return llm.client.create(**kwargs)\r\n    105 \r\n--> 106     return _completion_with_retry(**kwargs)\r\n    107 \r\n    108 \r\n\r\n[/usr/local/lib/python3.10/dist-packages/tenacity/__init__.py](https://localhost:8080/#) in wrapped_f(*args, **kw)\r\n    287         @functools.wraps(f)\r\n    288         def wrapped_f(*args: t.Any, **kw: t.Any) -> t.Any:\r\n--> 289             return self(f, *args, **kw)\r\n    290 \r\n    291         def retry_with(*args: t.Any, **kwargs: t.Any) -> WrappedFn:\r\n\r\n[/usr/local/lib/python3.10/dist-packages/tenacity/__init__.py](https://localhost:8080/#) in __call__(self, fn, *args, **kwargs)\r\n    377         retry_state = RetryCallState(retry_object=self, fn=fn, args=args, kwargs=kwargs)\r\n    378         while True:\r\n--> 379             do = self.iter(retry_state=retry_state)\r\n    380             if isinstance(do, DoAttempt):\r\n    381                 try:\r\n\r\n[/usr/local/lib/python3.10/dist-packages/tenacity/__init__.py](https://localhost:8080/#) in iter(self, retry_state)\r\n    323             retry_exc = self.retry_error_cls(fut)\r\n    324             if self.reraise:\r\n--> 325                 raise retry_exc.reraise()\r\n    326             raise retry_exc from fut.exception()\r\n    327 \r\n\r\n[/usr/local/lib/python3.10/dist-packages/tenacity/__init__.py](https://localhost:8080/#) in reraise(self)\r\n    156     def reraise(self) -> t.NoReturn:\r\n    157         if self.last_attempt.failed:\r\n--> 158             raise self.last_attempt.result()\r\n    159         raise self\r\n    160 \r\n\r\n[/usr/lib/python3.10/concurrent/futures/_base.py](https://localhost:8080/#) in result(self, timeout)\r\n    449                     raise CancelledError()\r\n    450                 elif self._state == FINISHED:\r\n--> 451                     return self.__get_result()\r\n    452 \r\n    453                 self._condition.wait(timeout)\r\n\r\n[/usr/lib/python3.10/concurrent/futures/_base.py](https://localhost:8080/#) in __get_result(self)\r\n    401         if self._exception:\r\n    402             try:\r\n--> 403                 raise self._exception\r\n    404             finally:\r\n    405                 # Break a reference cycle with the exception in self._exception\r\n\r\n[/usr/local/lib/python3.10/dist-packages/tenacity/__init__.py](https://localhost:8080/#) in __call__(self, fn, *args, **kwargs)\r\n    380             if isinstance(do, DoAttempt):\r\n    381                 try:\r\n--> 382                     result = fn(*args, **kwargs)\r\n    383                 except BaseException:  # noqa: B902\r\n    384                     retry_state.set_exception(sys.exc_info())  # type: ignore[arg-type]\r\n\r\n[/usr/local/lib/python3.10/dist-packages/langchain/llms/openai.py](https://localhost:8080/#) in _completion_with_retry(**kwargs)\r\n    102     @retry_decorator\r\n    103     def _completion_with_retry(**kwargs: Any) -> Any:\r\n--> 104         return llm.client.create(**kwargs)\r\n    105 \r\n    106     return _completion_with_retry(**kwargs)\r\n\r\n[/usr/local/lib/python3.10/dist-packages/openai/api_resources/completion.py](https://localhost:8080/#) in create(cls, *args, **kwargs)\r\n     23         while True:\r\n     24             try:\r\n---> 25                 return super().create(*args, **kwargs)\r\n     26             except TryAgain as e:\r\n     27                 if timeout is not None and time.time() > start + timeout:\r\n\r\n[/usr/local/lib/python3.10/dist-packages/openai/api_resources/abstract/engine_api_resource.py](https://localhost:8080/#) in create(cls, api_key, api_base, api_type, request_id, api_version, organization, **params)\r\n    151         )\r\n    152 \r\n--> 153         response, _, api_key = requestor.request(\r\n    154             \"post\",\r\n    155             url,\r\n\r\n[/usr/local/lib/python3.10/dist-packages/openai/api_requestor.py](https://localhost:8080/#) in request(self, method, url, params, headers, files, stream, request_id, request_timeout)\r\n    296             request_timeout=request_timeout,\r\n    297         )\r\n--> 298         resp, got_stream = self._interpret_response(result, stream)\r\n    299         return resp, got_stream, self.api_key\r\n    300 \r\n\r\n[/usr/local/lib/python3.10/dist-packages/openai/api_requestor.py](https://localhost:8080/#) in _interpret_response(self, result, stream)\r\n    698         else:\r\n    699             return (\r\n--> 700                 self._interpret_response_line(\r\n    701                     result.content.decode(\"utf-8\"),\r\n    702                     result.status_code,\r\n\r\n[/usr/local/lib/python3.10/dist-packages/openai/api_requestor.py](https://localhost:8080/#) in _interpret_response_line(self, rbody, rcode, rheaders, stream)\r\n    761         stream_error = stream and \"error\" in resp.data\r\n    762         if stream_error or not 200 <= rcode < 300:\r\n--> 763             raise self.handle_error_response(\r\n    764                 rbody, rcode, resp.data, rheaders, stream_error=stream_error\r\n    765             )\r\n\r\n\r\n```\n\n### Suggestion:\n\nLangChain should handle `RateLimitError` in any case.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5820/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5820/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5819",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5819/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5819/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5819/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5819",
        "id": 1745264416,
        "node_id": "I_kwDOIPDwls5oBp8g",
        "number": 5819,
        "title": "Issue: cannot using cuBLAS to accelerate",
        "user": {
            "login": "yixliu1",
            "id": 49300332,
            "node_id": "MDQ6VXNlcjQ5MzAwMzMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/49300332?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yixliu1",
            "html_url": "https://github.com/yixliu1",
            "followers_url": "https://api.github.com/users/yixliu1/followers",
            "following_url": "https://api.github.com/users/yixliu1/following{/other_user}",
            "gists_url": "https://api.github.com/users/yixliu1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yixliu1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yixliu1/subscriptions",
            "organizations_url": "https://api.github.com/users/yixliu1/orgs",
            "repos_url": "https://api.github.com/users/yixliu1/repos",
            "events_url": "https://api.github.com/users/yixliu1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yixliu1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-07T07:40:36Z",
        "updated_at": "2023-09-13T16:06:37Z",
        "closed_at": "2023-09-13T16:06:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nso I am successfully use CPU version of LLama,\r\nHowever, when I want to use cuBLAS to accelerate, BLAS = 0 in model properties.\r\nMy process is as following:\r\n1. Since I am using HPC, I firstly load CUDA tookit by `module load`.\r\n2. Set environment variable LLAMA_CUBLAS=1\r\n3. Reinstall llama-cpp by `CMAKE_ARGS=\"-DLLAMA_CUBLAS=on\" FORCE_CMAKE=1 pip install --upgrade --force-reinstall llama-cpp-python`\r\n4. Run as what the documentation said.\r\n\r\nHere is what I got:\r\n![image](https://github.com/hwchase17/langchain/assets/49300332/7a1c07a0-39f5-4603-ac0c-ec9215354126)\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5819/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5819/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5818",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5818/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5818/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5818/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5818",
        "id": 1745230568,
        "node_id": "PR_kwDOIPDwls5SYNxO",
        "number": 5818,
        "title": "Implement saving and loading of RetrievalQA chain",
        "user": {
            "login": "liangz1",
            "id": 7851093,
            "node_id": "MDQ6VXNlcjc4NTEwOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7851093?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liangz1",
            "html_url": "https://github.com/liangz1",
            "followers_url": "https://api.github.com/users/liangz1/followers",
            "following_url": "https://api.github.com/users/liangz1/following{/other_user}",
            "gists_url": "https://api.github.com/users/liangz1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liangz1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liangz1/subscriptions",
            "organizations_url": "https://api.github.com/users/liangz1/orgs",
            "repos_url": "https://api.github.com/users/liangz1/repos",
            "events_url": "https://api.github.com/users/liangz1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liangz1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T07:21:07Z",
        "updated_at": "2023-06-08T04:07:13Z",
        "closed_at": "2023-06-08T04:07:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5818",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5818",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5818.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5818.patch",
            "merged_at": "2023-06-08T04:07:13Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes #3983\r\nMimicing what we do for saving and loading VectorDBQA chain, I added the logic for RetrievalQA chain.\r\nAlso added a unit test. I did not find how we test other chains for their saving and loading functionality, so I just added a file with one test case. Let me know if there are recommended ways to test it.\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n@dev2049\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5818/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5818/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5817",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5817/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5817/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5817/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5817",
        "id": 1745229585,
        "node_id": "I_kwDOIPDwls5oBhcR",
        "number": 5817,
        "title": "how to clear VectorStoreRetrieverMemory?",
        "user": {
            "login": "dengxian-xreal",
            "id": 134575521,
            "node_id": "U_kgDOCAV1oQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/134575521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dengxian-xreal",
            "html_url": "https://github.com/dengxian-xreal",
            "followers_url": "https://api.github.com/users/dengxian-xreal/followers",
            "following_url": "https://api.github.com/users/dengxian-xreal/following{/other_user}",
            "gists_url": "https://api.github.com/users/dengxian-xreal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dengxian-xreal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dengxian-xreal/subscriptions",
            "organizations_url": "https://api.github.com/users/dengxian-xreal/orgs",
            "repos_url": "https://api.github.com/users/dengxian-xreal/repos",
            "events_url": "https://api.github.com/users/dengxian-xreal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dengxian-xreal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-07T07:20:29Z",
        "updated_at": "2023-06-08T02:57:48Z",
        "closed_at": "2023-06-08T02:57:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n\r\npython: 3.9\r\nlangchain: 0.0.190\r\nMacOS 13.2.1 (22D68)\r\n\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n\r\n### Information\r\n\r\nI use **CombinedMemory** which contains **VectorStoreRetrieverMemory** and **ConversationBufferMemory** in my app. It seems that ConversationBufferMemory is easy to clear, but when I use this CombinedMemory in a chain, it will automatically store the context to the vector database, and I can't clear its chat_history unless I create a new database, but that's very time-consuming.\r\nI initially tried various methods to clear the memory, including clearing the CombinedMemory and clearing them separately.\r\nBut I looked at the clear method in VectorStoreRetrieverMemory, and it didn't do anything.\r\n![image](https://github.com/hwchase17/langchain/assets/134575521/da3cdad1-e888-45e3-ae43-ff40e0bb0290)\r\nIt is worth noting that I am using this vectordatabase in order to be able to retrieve a certain code repository. If there are other alternative methods that can successfully clear session history without affecting the vector database, then that would be even better!\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [x] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [X] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n1. insert 2 files to the vector database\r\n2. ask a question related to them(get the right answer)\r\n3. delete the file and update the database\r\n4. ask the same question\r\n5. Technically speaking, it cannot provide the correct answer, but now it can infer based on chat history.\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nI would like to add that the reason why I don't think the problem lies in updating the database is because when I skip the second step and only add files, delete files, update the database and then ask questions, it behaves as expected and does not give me the correct answer.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5817/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5817/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5816",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5816/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5816/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5816/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5816",
        "id": 1745171377,
        "node_id": "I_kwDOIPDwls5oBTOx",
        "number": 5816,
        "title": "Issue: OpenAIEmbeddings class about Azure Openai usage example error",
        "user": {
            "login": "Magicen0722",
            "id": 66616125,
            "node_id": "MDQ6VXNlcjY2NjE2MTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/66616125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Magicen0722",
            "html_url": "https://github.com/Magicen0722",
            "followers_url": "https://api.github.com/users/Magicen0722/followers",
            "following_url": "https://api.github.com/users/Magicen0722/following{/other_user}",
            "gists_url": "https://api.github.com/users/Magicen0722/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Magicen0722/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Magicen0722/subscriptions",
            "organizations_url": "https://api.github.com/users/Magicen0722/orgs",
            "repos_url": "https://api.github.com/users/Magicen0722/repos",
            "events_url": "https://api.github.com/users/Magicen0722/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Magicen0722/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-07T06:52:58Z",
        "updated_at": "2023-07-19T10:10:33Z",
        "closed_at": "2023-07-19T10:10:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/hwchase17/langchain/blob/b3ae6bcd3f42ec85ee65eb29c922ab22a17a0210/langchain/embeddings/openai.py#L100\r\nI was profoundly misled by it when using it, the parameters used in the use case depicted in the example have been renamed to openai_api_base, which seems to be an exact bug, the correct example:\r\n```\r\nimport os\r\nos.environ[\"OPENAI_API_TYPE\"] = \"azure\"\r\nos.environ[\"OPENAI_API_BASE\"] = \"https://<your-endpoint.openai.azure.com/\"\r\nos.environ[\"OPENAI_API_KEY\"] = \"your AzureOpenAI key\"\r\nos.environ[\"OPENAI_API_VERSION\"] = \"2023-03-15-preview\"\r\nos.environ[\"OPENAI_PROXY\"] = \"http://your-corporate-proxy:8080\"\r\n\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nembeddings = OpenAIEmbeddings(\r\n    deployment=\"your-embeddings-deployment-name\",\r\n    model=\"your-embeddings-model-name\",\r\n    openai_api_base=\"https://your-endpoint.openai.azure.com/\",\r\n    openai_api_type=\"azure\",\r\n)\r\ntext = \"This is a test query.\"\r\nquery_result = embeddings.embed_query(text)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5816/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5816/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5815",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5815/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5815/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5815/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5815",
        "id": 1745168525,
        "node_id": "PR_kwDOIPDwls5SX_8S",
        "number": 5815,
        "title": "FIX: backslash escaped",
        "user": {
            "login": "ugfly1210",
            "id": 30715202,
            "node_id": "MDQ6VXNlcjMwNzE1MjAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/30715202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ugfly1210",
            "html_url": "https://github.com/ugfly1210",
            "followers_url": "https://api.github.com/users/ugfly1210/followers",
            "following_url": "https://api.github.com/users/ugfly1210/following{/other_user}",
            "gists_url": "https://api.github.com/users/ugfly1210/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ugfly1210/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ugfly1210/subscriptions",
            "organizations_url": "https://api.github.com/users/ugfly1210/orgs",
            "repos_url": "https://api.github.com/users/ugfly1210/repos",
            "events_url": "https://api.github.com/users/ugfly1210/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ugfly1210/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-07T06:51:20Z",
        "updated_at": "2023-06-08T01:49:13Z",
        "closed_at": "2023-06-07T23:01:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5815",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5815",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5815.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5815.patch",
            "merged_at": "2023-06-07T23:01:08Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nLatexTextSplitter needs to use \"\\n\\\\\\chapter\" when separators are escaped, such as \"\\n\\\\\\chapter\", otherwise it will report an error: (re.error: bad escape \\c at position 1 (line 2, column 1))\r\n\r\n\r\nFixes # (issue)\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\nre.error: bad escape \\c at position 1 (line 2, column 1)\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\n@hwchase17  @dev2049 \r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5815/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5814",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5814/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5814/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5814/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5814",
        "id": 1745133013,
        "node_id": "PR_kwDOIPDwls5SX4YJ",
        "number": 5814,
        "title": "docs: add Shale Protocol integration guide",
        "user": {
            "login": "renning22",
            "id": 4597657,
            "node_id": "MDQ6VXNlcjQ1OTc2NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4597657?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/renning22",
            "html_url": "https://github.com/renning22",
            "followers_url": "https://api.github.com/users/renning22/followers",
            "following_url": "https://api.github.com/users/renning22/following{/other_user}",
            "gists_url": "https://api.github.com/users/renning22/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/renning22/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/renning22/subscriptions",
            "organizations_url": "https://api.github.com/users/renning22/orgs",
            "repos_url": "https://api.github.com/users/renning22/repos",
            "events_url": "https://api.github.com/users/renning22/events{/privacy}",
            "received_events_url": "https://api.github.com/users/renning22/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T06:26:55Z",
        "updated_at": "2023-06-08T02:25:59Z",
        "closed_at": "2023-06-08T02:25:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5814",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5814",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5814.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5814.patch",
            "merged_at": "2023-06-08T02:25:59Z"
        },
        "body": "This PR adds documentation for Shale Protocol's integration with LangChain.\r\n\r\n[Shale Protocol](https://shaleprotocol.com) provides forever-free production-ready inference APIs to the open-source community. We have global data centers and plan to support all major open LLMs (estimated ~1,000 by 2025).\r\n\r\nThe team consists of software and ML engineers, AI researchers, designers, and operators across North America and Asia. Combined together, the team has 50+ years experience in machine learning, cloud infrastructure, software engineering and product development. Team members have worked at places like Google and Microsoft.\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5814/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5814/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5812",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5812/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5812/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5812/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5812",
        "id": 1745041511,
        "node_id": "PR_kwDOIPDwls5SXkgK",
        "number": 5812,
        "title": "bump ver to 192",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T05:02:35Z",
        "updated_at": "2023-06-07T05:23:12Z",
        "closed_at": "2023-06-07T05:23:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5812",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5812",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5812.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5812.patch",
            "merged_at": "2023-06-07T05:23:11Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5812/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5812/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5811",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5811/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5811/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5811/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5811",
        "id": 1745037726,
        "node_id": "PR_kwDOIPDwls5SXjqH",
        "number": 5811,
        "title": "rm docs mongo",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T04:59:33Z",
        "updated_at": "2023-06-07T05:22:45Z",
        "closed_at": "2023-06-07T05:22:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5811",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5811",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5811.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5811.patch",
            "merged_at": "2023-06-07T05:22:44Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5811/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5810",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5810/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5810/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5810/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5810",
        "id": 1745029099,
        "node_id": "PR_kwDOIPDwls5SXhvu",
        "number": 5810,
        "title": "Add in the async methods and link the run id",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T04:50:57Z",
        "updated_at": "2023-06-07T15:27:45Z",
        "closed_at": "2023-06-07T15:27:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5810",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5810",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5810.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5810.patch",
            "merged_at": "2023-06-07T15:27:44Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5810/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5810/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5809",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5809/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5809/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5809/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5809",
        "id": 1745012637,
        "node_id": "PR_kwDOIPDwls5SXeQE",
        "number": 5809,
        "title": "Add DeepInfra embeddings integration with tests and examples, better exception handling for Deep Infra LLM.",
        "user": {
            "login": "yessenzhar",
            "id": 8552242,
            "node_id": "MDQ6VXNlcjg1NTIyNDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8552242?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yessenzhar",
            "html_url": "https://github.com/yessenzhar",
            "followers_url": "https://api.github.com/users/yessenzhar/followers",
            "following_url": "https://api.github.com/users/yessenzhar/following{/other_user}",
            "gists_url": "https://api.github.com/users/yessenzhar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yessenzhar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yessenzhar/subscriptions",
            "organizations_url": "https://api.github.com/users/yessenzhar/orgs",
            "repos_url": "https://api.github.com/users/yessenzhar/repos",
            "events_url": "https://api.github.com/users/yessenzhar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yessenzhar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T04:31:30Z",
        "updated_at": "2023-06-07T17:52:39Z",
        "closed_at": "2023-06-07T17:52:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5809",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5809",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5809.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5809.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n@hwchase17\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n   - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5809/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5809/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5808",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5808/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5808/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5808/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5808",
        "id": 1744980578,
        "node_id": "PR_kwDOIPDwls5SXXQt",
        "number": 5808,
        "title": "fixed faiss integ tests",
        "user": {
            "login": "bnassivet",
            "id": 42321180,
            "node_id": "MDQ6VXNlcjQyMzIxMTgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/42321180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bnassivet",
            "html_url": "https://github.com/bnassivet",
            "followers_url": "https://api.github.com/users/bnassivet/followers",
            "following_url": "https://api.github.com/users/bnassivet/following{/other_user}",
            "gists_url": "https://api.github.com/users/bnassivet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bnassivet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bnassivet/subscriptions",
            "organizations_url": "https://api.github.com/users/bnassivet/orgs",
            "repos_url": "https://api.github.com/users/bnassivet/repos",
            "events_url": "https://api.github.com/users/bnassivet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bnassivet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T03:53:20Z",
        "updated_at": "2023-06-07T05:07:28Z",
        "closed_at": "2023-06-07T05:07:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5808",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5808",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5808.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5808.patch",
            "merged_at": "2023-06-07T05:07:27Z"
        },
        "body": "Fixes # 5807\r\n\r\nRealigned tests with implementation.\r\nAlso reinforced folder unicity for the test_faiss_local_save_load test using date-time suffix\r\n\r\n#### Before submitting\r\n\r\n- Integration test updated\r\n- formatting and linting ok (locally) \r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n  @hwchase17 - project lead\r\n  VectorStores / Retrievers / Memory\r\n  -@dev2049\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5808/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5808/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5807",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5807/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5807/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5807/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5807",
        "id": 1744977363,
        "node_id": "I_kwDOIPDwls5oAj3T",
        "number": 5807,
        "title": "Issue: Integration tests fail for faiss vector store",
        "user": {
            "login": "bnassivet",
            "id": 42321180,
            "node_id": "MDQ6VXNlcjQyMzIxMTgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/42321180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bnassivet",
            "html_url": "https://github.com/bnassivet",
            "followers_url": "https://api.github.com/users/bnassivet/followers",
            "following_url": "https://api.github.com/users/bnassivet/following{/other_user}",
            "gists_url": "https://api.github.com/users/bnassivet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bnassivet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bnassivet/subscriptions",
            "organizations_url": "https://api.github.com/users/bnassivet/orgs",
            "repos_url": "https://api.github.com/users/bnassivet/repos",
            "events_url": "https://api.github.com/users/bnassivet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bnassivet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T03:49:08Z",
        "updated_at": "2023-06-19T00:25:50Z",
        "closed_at": "2023-06-19T00:25:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nIntegration tests for faiss vector store fail when run. \r\nIt appears that the tests are not in sync with the module implementation.\r\n\r\ncommand: poetry run pytest tests/integration_tests/vectorstores/test_faiss.py \r\n\r\nResults summary:\r\n\r\n======================================================= short test summary info =======================================================\r\nFAILED tests/integration_tests/vectorstores/test_faiss.py::test_faiss_local_save_load - FileExistsError: [Errno 17] File exists: '/var/folders/nm/q080zph50yz4mcc7_vcvdcy00000gp/T/tmpt6hov952'\r\nFAILED tests/integration_tests/vectorstores/test_faiss.py::test_faiss_similarity_search_with_relevance_scores - TypeError: __init__() got an unexpected keyword argument 'normalize_score_fn'\r\nFAILED tests/integration_tests/vectorstores/test_faiss.py::test_faiss_invalid_normalize_fn - TypeError: __init__() got an unexpected keyword argument 'normalize_score_fn'\r\nFAILED tests/integration_tests/vectorstores/test_faiss.py::test_missing_normalize_score_fn - Failed: DID NOT RAISE <class 'ValueError'>\r\n=============================================== 4 failed, 6 passed, 2 warnings in 0.70s ===============================================\n\n### Suggestion:\n\nCorrect tests/integration_tests/vectorstores/test_faiss.py to be in sync with langchain.vectorstores.faiss ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5807/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5807/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5806",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5806/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5806/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5806/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5806",
        "id": 1744965008,
        "node_id": "PR_kwDOIPDwls5SXT8A",
        "number": 5806,
        "title": "Update adding_memory.ipynb",
        "user": {
            "login": "ASwitlyk",
            "id": 7741426,
            "node_id": "MDQ6VXNlcjc3NDE0MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7741426?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ASwitlyk",
            "html_url": "https://github.com/ASwitlyk",
            "followers_url": "https://api.github.com/users/ASwitlyk/followers",
            "following_url": "https://api.github.com/users/ASwitlyk/following{/other_user}",
            "gists_url": "https://api.github.com/users/ASwitlyk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ASwitlyk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ASwitlyk/subscriptions",
            "organizations_url": "https://api.github.com/users/ASwitlyk/orgs",
            "repos_url": "https://api.github.com/users/ASwitlyk/repos",
            "events_url": "https://api.github.com/users/ASwitlyk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ASwitlyk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T03:30:42Z",
        "updated_at": "2023-06-07T05:10:54Z",
        "closed_at": "2023-06-07T05:10:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5806",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5806",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5806.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5806.patch",
            "merged_at": "2023-06-07T05:10:54Z"
        },
        "body": "just change \"to\" to \"too\" so it matches the above prompt\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5806/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5806/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5805",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5805/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5805/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5805/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5805",
        "id": 1744942400,
        "node_id": "PR_kwDOIPDwls5SXPAr",
        "number": 5805,
        "title": "add doc about reusing MongoDBAtlasVectorSearch",
        "user": {
            "login": "Pliman",
            "id": 3078105,
            "node_id": "MDQ6VXNlcjMwNzgxMDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3078105?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Pliman",
            "html_url": "https://github.com/Pliman",
            "followers_url": "https://api.github.com/users/Pliman/followers",
            "following_url": "https://api.github.com/users/Pliman/following{/other_user}",
            "gists_url": "https://api.github.com/users/Pliman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Pliman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Pliman/subscriptions",
            "organizations_url": "https://api.github.com/users/Pliman/orgs",
            "repos_url": "https://api.github.com/users/Pliman/repos",
            "events_url": "https://api.github.com/users/Pliman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Pliman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T03:02:46Z",
        "updated_at": "2023-06-07T06:16:57Z",
        "closed_at": "2023-06-07T05:10:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5805",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5805",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5805.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5805.patch",
            "merged_at": "2023-06-07T05:10:36Z"
        },
        "body": "DOC: add doc about reusing MongoDBAtlasVectorSearch\r\n\r\n#### Who can review?\r\n\r\nAnyone authorized.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5805/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5805/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5804",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5804/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5804/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5804/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5804",
        "id": 1744936280,
        "node_id": "PR_kwDOIPDwls5SXNse",
        "number": 5804,
        "title": "split up batch llm calls into separate runs",
        "user": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-07T02:55:05Z",
        "updated_at": "2023-07-06T09:58:50Z",
        "closed_at": "2023-06-25T04:03:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5804",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5804",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5804.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5804.patch",
            "merged_at": "2023-06-25T04:03:31Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5804/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5804/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5803",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5803/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5803/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5803/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5803",
        "id": 1744890796,
        "node_id": "I_kwDOIPDwls5oAOus",
        "number": 5803,
        "title": "Issue: JSON agent tool \"json_spec_list_keys\" does not error when access non existing list",
        "user": {
            "login": "nai-kon",
            "id": 25865392,
            "node_id": "MDQ6VXNlcjI1ODY1Mzky",
            "avatar_url": "https://avatars.githubusercontent.com/u/25865392?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nai-kon",
            "html_url": "https://github.com/nai-kon",
            "followers_url": "https://api.github.com/users/nai-kon/followers",
            "following_url": "https://api.github.com/users/nai-kon/following{/other_user}",
            "gists_url": "https://api.github.com/users/nai-kon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nai-kon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nai-kon/subscriptions",
            "organizations_url": "https://api.github.com/users/nai-kon/orgs",
            "repos_url": "https://api.github.com/users/nai-kon/repos",
            "events_url": "https://api.github.com/users/nai-kon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nai-kon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-07T01:54:03Z",
        "updated_at": "2023-09-13T16:06:41Z",
        "closed_at": "2023-09-13T16:06:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\n`json_spec_list_keys` works with not exists list index `[0]` and no error occurs. \r\nHere is a a simple example.\r\n\r\n```python\r\n# [test.json]\r\n#\r\n# {\r\n#   \"name\": \"Andrew Lee\",\r\n#   \"assets\": {\"cash\": 10000, \"stock\": 5000}\r\n# }\r\n\r\njson_spec = JsonSpec.from_file(pathlib.Path(\"test.json\"))\r\n\r\nprint(json_spec.keys('data[\"assets\"]'))  # => ['cash', 'stock']\r\nprint(json_spec.value('data[\"assets\"]')) # => {'cash': 10000, 'stock': 5000}\r\n\r\nprint(json_spec.keys('data[\"assets\"][0]')) # => ['cash', 'stock']\r\nprint(json_spec.value('data[\"assets\"][0]')) # => KeyError(0)\r\n\r\nprint(json_spec.keys('data[\"assets\"][1]')) # => KeyError(1)\r\nprint(json_spec.value('data[\"assets\"][1]')) # => KeyError(1)\r\n```\r\n\r\n`json_spec_list_keys` does not error on non existing [0], but `json_spec_get_value` errors at [0].\r\nThis makes the LLM confuse like below and endless error happens.\r\n\r\n```\r\nAction: json_spec_list_keys\r\nAction Input: data\r\nObservation: ['name', 'assets']\r\nThought: I should look at the keys under each value to see if there is a total key\r\nAction: json_spec_list_keys\r\nAction Input: data[\"assets\"][0]\r\nObservation: ['cash', 'stock']\r\nThought: I should look at the values of the keys to see if they contain what I am looking for\r\nAction: json_spec_get_value\r\nAction Input: data[\"assets\"][0]\r\nObservation: KeyError(0)\r\nThought: I should look at the next value\r\nAction: json_spec_list_keys\r\nAction Input: data[\"assets\"][1]\r\nObservation: KeyError(1)\r\n...\r\n```\r\n\r\n### Suggestion:\r\n\r\n`json_spec_list_keys` should raise key-error exception when accessing a non-existent index [0] like `json_spec_get_value` does.\r\n\r\n### Who can help?\r\n@vowelparrot",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5803/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5803/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5802",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5802/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5802/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5802/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5802",
        "id": 1744868110,
        "node_id": "PR_kwDOIPDwls5SW_If",
        "number": 5802,
        "title": "Add UTF-8 json ouput support while langchain.debug is set to True.",
        "user": {
            "login": "boxcounter",
            "id": 4317474,
            "node_id": "MDQ6VXNlcjQzMTc0NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4317474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boxcounter",
            "html_url": "https://github.com/boxcounter",
            "followers_url": "https://api.github.com/users/boxcounter/followers",
            "following_url": "https://api.github.com/users/boxcounter/following{/other_user}",
            "gists_url": "https://api.github.com/users/boxcounter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/boxcounter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/boxcounter/subscriptions",
            "organizations_url": "https://api.github.com/users/boxcounter/orgs",
            "repos_url": "https://api.github.com/users/boxcounter/repos",
            "events_url": "https://api.github.com/users/boxcounter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/boxcounter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T01:27:51Z",
        "updated_at": "2023-06-07T04:56:33Z",
        "closed_at": "2023-06-07T04:56:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5802",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5802",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5802.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5802.patch",
            "merged_at": "2023-06-07T04:56:33Z"
        },
        "body": "Before:\r\n<img width=\"984\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/4317474/2b0807b4-a1d6-4df2-87cc-92b1c8e10534\">\r\n\r\nAfter:\r\n<img width=\"992\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/4317474/128c2c7d-2ed5-4c95-954d-b0964c83526a\">\r\n\r\n\r\nThanks in advance.\r\n\r\n @agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5802/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5802/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5801",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5801/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5801/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5801/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5801",
        "id": 1744859177,
        "node_id": "PR_kwDOIPDwls5SW9NU",
        "number": 5801,
        "title": "Rm extraneous args to the trace group helper",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T01:17:46Z",
        "updated_at": "2023-06-07T20:09:30Z",
        "closed_at": "2023-06-07T20:09:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5801",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5801",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5801.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5801.patch",
            "merged_at": "2023-06-07T20:09:29Z"
        },
        "body": "These are being ignored",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5801/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5801/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5800",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5800/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5800/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5800/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5800",
        "id": 1744795702,
        "node_id": "PR_kwDOIPDwls5SWv36",
        "number": 5800,
        "title": "[Docs][Hotfix] Fix broken links",
        "user": {
            "login": "kouroshHakha",
            "id": 31483498,
            "node_id": "MDQ6VXNlcjMxNDgzNDk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/31483498?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kouroshHakha",
            "html_url": "https://github.com/kouroshHakha",
            "followers_url": "https://api.github.com/users/kouroshHakha/followers",
            "following_url": "https://api.github.com/users/kouroshHakha/following{/other_user}",
            "gists_url": "https://api.github.com/users/kouroshHakha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kouroshHakha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kouroshHakha/subscriptions",
            "organizations_url": "https://api.github.com/users/kouroshHakha/orgs",
            "repos_url": "https://api.github.com/users/kouroshHakha/repos",
            "events_url": "https://api.github.com/users/kouroshHakha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kouroshHakha/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-07T00:01:11Z",
        "updated_at": "2023-06-07T00:17:16Z",
        "closed_at": "2023-06-07T00:17:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5800",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5800",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5800.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5800.patch",
            "merged_at": "2023-06-07T00:17:16Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nSome links were broken from the previous merge. This PR fixes them. Tested locally. \r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5800/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5800/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5799",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5799/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5799/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5799/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5799",
        "id": 1744793878,
        "node_id": "I_kwDOIPDwls5n_3EW",
        "number": 5799,
        "title": "Utilizing langchain library for SQL database querying with GIS functionality",
        "user": {
            "login": "vlasvlasvlas",
            "id": 4071796,
            "node_id": "MDQ6VXNlcjQwNzE3OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4071796?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vlasvlasvlas",
            "html_url": "https://github.com/vlasvlasvlas",
            "followers_url": "https://api.github.com/users/vlasvlasvlas/followers",
            "following_url": "https://api.github.com/users/vlasvlasvlas/following{/other_user}",
            "gists_url": "https://api.github.com/users/vlasvlasvlas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vlasvlasvlas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vlasvlasvlas/subscriptions",
            "organizations_url": "https://api.github.com/users/vlasvlasvlas/orgs",
            "repos_url": "https://api.github.com/users/vlasvlasvlas/repos",
            "events_url": "https://api.github.com/users/vlasvlasvlas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vlasvlasvlas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 19,
        "created_at": "2023-06-07T00:00:19Z",
        "updated_at": "2023-11-28T17:57:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nHi!\r\n\r\nIt's possible to integrate the langchain library with a SQL database, enabling the execution of SQL queries with spatial analysis capabilities? \r\n\r\nSpecifically, I'd like to leverage GIS functions to perform spatial operations such as distance calculations, point-in-polygon queries, and other spatial analysis tasks.\r\n\r\nIf the langchain library supports such functionality, it would greatly enhance the capabilities of our project by enabling us to process and analyze spatial data directly within our SQL database.\r\n\r\nI appreciate any guidance or information you can provide on this topic. \r\n\n\n### Motivation\n\nBy leveraging GIS functions within the langchain library, we can unlock the power of spatial analysis directly within our SQL database combined with LLM.\r\nThis integration creates a multitude of possibilities for executing intricate spatial operations, including proximity analysis, overlay analysis, and spatial clustering via user prompts.\n\n### Your contribution\n\n-  I can provide insights into the best practices, optimal approaches, and efficient query design for performing various spatial operations within the SQL database.\r\n\r\n-  I can offer troubleshooting assistance and support to address any issues or challenges that may arise during the integration of the langchain library. I can provide guidance on resolving errors, improving performance, and ensuring the accuracy of spatial analysis results.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5799/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5799/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5798",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5798/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5798/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5798/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5798",
        "id": 1744712875,
        "node_id": "PR_kwDOIPDwls5SWdna",
        "number": 5798,
        "title": "LOTR: Lord of the Retrievers. A retriever that merge several retrievers together applying document_formatters to them.",
        "user": {
            "login": "GMartin-dev",
            "id": 1821407,
            "node_id": "MDQ6VXNlcjE4MjE0MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1821407?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GMartin-dev",
            "html_url": "https://github.com/GMartin-dev",
            "followers_url": "https://api.github.com/users/GMartin-dev/followers",
            "following_url": "https://api.github.com/users/GMartin-dev/following{/other_user}",
            "gists_url": "https://api.github.com/users/GMartin-dev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GMartin-dev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GMartin-dev/subscriptions",
            "organizations_url": "https://api.github.com/users/GMartin-dev/orgs",
            "repos_url": "https://api.github.com/users/GMartin-dev/repos",
            "events_url": "https://api.github.com/users/GMartin-dev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GMartin-dev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-06-06T22:31:47Z",
        "updated_at": "2023-06-19T07:46:52Z",
        "closed_at": "2023-06-10T15:41:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5798",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5798",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5798.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5798.patch",
            "merged_at": "2023-06-10T15:41:02Z"
        },
        "body": "\"One Retriever to merge them all, One Retriever to expose them, One Retriever to bring them all and in and process them with Document formatters.\"\r\n\r\nHi @dev2049! Here bothering people again!\r\n\r\nI'm using this simple idea to deal with merging the output of several retrievers into one.\r\nI'm aware of DocumentCompressorPipeline and ContextualCompressionRetriever but I don't think they allow us to do something like this. Also I was getting in trouble to get the pipeline working too. Please correct me if i'm wrong.\r\n\r\nThis allow to do some sort of \"retrieval\" preprocessing and then using the retrieval with the curated results anywhere you could use a retriever.\r\nMy use case is to generate diff indexes with diff embeddings and sources for a more colorful results then filtering them with one or many document formatters.\r\n\r\nI saw some people looking for something like this, here:\r\nhttps://github.com/hwchase17/langchain/issues/3991\r\nand something similar here:\r\nhttps://github.com/hwchase17/langchain/issues/5555\r\n\r\nThis is just a proposal I know I'm missing tests , etc. If you think this is a worth it idea I can work on tests and anything you want to change.\r\nLet me know!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5798/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5798/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5796",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5796/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5796/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5796/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5796",
        "id": 1744561290,
        "node_id": "PR_kwDOIPDwls5SV8Oc",
        "number": 5796,
        "title": "Revise DATABRICKS_API_TOKEN as DATABRICKS_TOKEN",
        "user": {
            "login": "gengliangwang",
            "id": 1097932,
            "node_id": "MDQ6VXNlcjEwOTc5MzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1097932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gengliangwang",
            "html_url": "https://github.com/gengliangwang",
            "followers_url": "https://api.github.com/users/gengliangwang/followers",
            "following_url": "https://api.github.com/users/gengliangwang/following{/other_user}",
            "gists_url": "https://api.github.com/users/gengliangwang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gengliangwang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gengliangwang/subscriptions",
            "organizations_url": "https://api.github.com/users/gengliangwang/orgs",
            "repos_url": "https://api.github.com/users/gengliangwang/repos",
            "events_url": "https://api.github.com/users/gengliangwang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gengliangwang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-06T20:35:37Z",
        "updated_at": "2023-06-06T21:22:50Z",
        "closed_at": "2023-06-06T21:22:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5796",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5796",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5796.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5796.patch",
            "merged_at": "2023-06-06T21:22:50Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\nIn the [Databricks integration](https://python.langchain.com/en/latest/integrations/databricks.html) and [Databricks LLM](https://python.langchain.com/en/latest/modules/models/llms/integrations/databricks.html), we suggestted users to set the ENV variable `DATABRICKS_API_TOKEN`. \r\nHowever, this is inconsistent with the other Databricks library. To make it consistent, this PR changes the variable from `DATABRICKS_API_TOKEN` to `DATABRICKS_TOKEN`\r\n\r\nAfter changes, there is no more `DATABRICKS_API_TOKEN` in the doc\r\n```\r\n$ git grep DATABRICKS_API_TOKEN|wc -l\r\n0\r\n\r\n$ git grep DATABRICKS_TOKEN|wc -l\r\n8\r\n```\r\ncc @hwchase17 @dev2049 @mengxr since you have reviewed the previous PRs. \r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5796/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5796/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5795",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5795/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5795/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5795/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5795",
        "id": 1744520207,
        "node_id": "I_kwDOIPDwls5n-0QP",
        "number": 5795,
        "title": "Getting Import Error Basemodel",
        "user": {
            "login": "alijavaidistar",
            "id": 131304144,
            "node_id": "U_kgDOB9OK0A",
            "avatar_url": "https://avatars.githubusercontent.com/u/131304144?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alijavaidistar",
            "html_url": "https://github.com/alijavaidistar",
            "followers_url": "https://api.github.com/users/alijavaidistar/followers",
            "following_url": "https://api.github.com/users/alijavaidistar/following{/other_user}",
            "gists_url": "https://api.github.com/users/alijavaidistar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alijavaidistar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alijavaidistar/subscriptions",
            "organizations_url": "https://api.github.com/users/alijavaidistar/orgs",
            "repos_url": "https://api.github.com/users/alijavaidistar/repos",
            "events_url": "https://api.github.com/users/alijavaidistar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alijavaidistar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-06T20:07:52Z",
        "updated_at": "2023-09-18T16:09:09Z",
        "closed_at": "2023-09-18T16:09:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHello,\r\n\r\nI am getting an error in import\r\n\r\n\r\n\r\nHere are my import statements:\r\nfrom llama_index import SimpleDirectoryReader, GPTListIndex, readers, GPTSimpleVectorIndex, LLMPredictor, PromptHelper\r\nfrom langchain import OpenAI\r\nimport sys\r\nimport os\r\nfrom IPython.display import Markdown, display\r\n\r\nHere is the error:\r\nfrom langchain.schema import BaseLanguageModel\r\nImportError: cannot import name 'BaseLanguageModel' from 'langchain.schema' (C:\\Users\\ali\\PycharmProjects\\GeoAnalyticsFeatures\\venv\\lib\\site-packages\\langchain\\schema.py)\r\n\r\nWhat I have tried:\r\nupgrade PIP\r\nupgrade lama\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nHello,\r\n\r\nI am getting an error in import\r\n\r\n\r\n\r\nHere are my import statements:\r\nfrom llama_index import SimpleDirectoryReader, GPTListIndex, readers, GPTSimpleVectorIndex, LLMPredictor, PromptHelper\r\nfrom langchain import OpenAI\r\nimport sys\r\nimport os\r\nfrom IPython.display import Markdown, display\r\n\r\nHere is the error:\r\nfrom langchain.schema import BaseLanguageModel\r\nImportError: cannot import name 'BaseLanguageModel' from 'langchain.schema' (C:\\Users\\ali\\PycharmProjects\\GeoAnalyticsFeatures\\venv\\lib\\site-packages\\langchain\\schema.py)\r\n\r\nWhat I have tried:\r\nupgrade PIP\r\nupgrade lama\n\n### Expected behavior\n\nHello,\r\n\r\nI have followed all the instructions in the comments above but still coming the same issue:\r\n\r\nHere are my import statements:\r\nfrom llama_index import SimpleDirectoryReader, GPTListIndex, readers, GPTSimpleVectorIndex, LLMPredictor, PromptHelper\r\nfrom langchain import OpenAI\r\nimport sys\r\nimport os\r\nfrom IPython.display import Markdown, display\r\n\r\nHere is the error:\r\nfrom langchain.schema import BaseLanguageModel\r\nImportError: cannot import name 'BaseLanguageModel' from 'langchain.schema' (C:\\Users\\ali\\PycharmProjects\\GeoAnalyticsFeatures\\venv\\lib\\site-packages\\langchain\\schema.py)\r\n\r\nWhat I have tried:\r\nupgrade PIP\r\nupgrade lama",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5795/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5795/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5794",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5794/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5794/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5794/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5794",
        "id": 1744498109,
        "node_id": "PR_kwDOIPDwls5SVuHV",
        "number": 5794,
        "title": "fixing from_documents method of the MongoDB Atlas vector store",
        "user": {
            "login": "P-E-B",
            "id": 38215315,
            "node_id": "MDQ6VXNlcjM4MjE1MzE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/38215315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/P-E-B",
            "html_url": "https://github.com/P-E-B",
            "followers_url": "https://api.github.com/users/P-E-B/followers",
            "following_url": "https://api.github.com/users/P-E-B/following{/other_user}",
            "gists_url": "https://api.github.com/users/P-E-B/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/P-E-B/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/P-E-B/subscriptions",
            "organizations_url": "https://api.github.com/users/P-E-B/orgs",
            "repos_url": "https://api.github.com/users/P-E-B/repos",
            "events_url": "https://api.github.com/users/P-E-B/events{/privacy}",
            "received_events_url": "https://api.github.com/users/P-E-B/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-06T19:55:00Z",
        "updated_at": "2023-06-06T21:22:23Z",
        "closed_at": "2023-06-06T21:22:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5794",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5794",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5794.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5794.patch",
            "merged_at": "2023-06-06T21:22:23Z"
        },
        "body": "FIxed a bug in from_documents method --> Collection objects do not implement truth value testing or bool().\r\n@dev2049 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5794/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5794/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5793",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5793/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5793/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5793/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5793",
        "id": 1744495609,
        "node_id": "PR_kwDOIPDwls5SVtib",
        "number": 5793,
        "title": "Fix exporting GCP Vertex Matching Engine from vectorstores",
        "user": {
            "login": "mjmammoth",
            "id": 78297942,
            "node_id": "MDQ6VXNlcjc4Mjk3OTQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/78297942?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mjmammoth",
            "html_url": "https://github.com/mjmammoth",
            "followers_url": "https://api.github.com/users/mjmammoth/followers",
            "following_url": "https://api.github.com/users/mjmammoth/following{/other_user}",
            "gists_url": "https://api.github.com/users/mjmammoth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mjmammoth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mjmammoth/subscriptions",
            "organizations_url": "https://api.github.com/users/mjmammoth/orgs",
            "repos_url": "https://api.github.com/users/mjmammoth/repos",
            "events_url": "https://api.github.com/users/mjmammoth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mjmammoth/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-06T19:53:59Z",
        "updated_at": "2023-06-08T02:45:34Z",
        "closed_at": "2023-06-08T02:45:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5793",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5793",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5793.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5793.patch",
            "merged_at": "2023-06-08T02:45:34Z"
        },
        "body": "The Vertex Matching Engine docs include [the line](https://github.com/hwchase17/langchain/blob/b177a29d3f942eeccf85814f0f628c32509b9b6a/docs/modules/indexes/vectorstores/examples/matchingengine.ipynb?short_path=54ebfde#L32) `from langchain.vectorstores import MatchingEngine` which doesn't work as it wasn't added to the vectorestores module exports.\r\n\r\n\r\n\r\n  - @dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5793/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5793/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5792",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5792/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5792/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5792/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5792",
        "id": 1744334274,
        "node_id": "PR_kwDOIPDwls5SVKFX",
        "number": 5792,
        "title": "WIP: openai settings",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-06T17:59:33Z",
        "updated_at": "2023-07-18T08:48:16Z",
        "closed_at": "2023-06-07T04:57:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5792",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5792",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5792.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5792.patch",
            "merged_at": "2023-06-07T04:57:58Z"
        },
        "body": "[] need to test more\r\n[] make sure they arent saved when serializing\r\n[] do for embeddings",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5792/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5792/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5791",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5791/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5791/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5791/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5791",
        "id": 1744309218,
        "node_id": "I_kwDOIPDwls5n-Avi",
        "number": 5791,
        "title": "Enable the use of Unstructured loaders with Google drive loader",
        "user": {
            "login": "MthwRobinson",
            "id": 1635179,
            "node_id": "MDQ6VXNlcjE2MzUxNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1635179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MthwRobinson",
            "html_url": "https://github.com/MthwRobinson",
            "followers_url": "https://api.github.com/users/MthwRobinson/followers",
            "following_url": "https://api.github.com/users/MthwRobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/MthwRobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MthwRobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MthwRobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/MthwRobinson/orgs",
            "repos_url": "https://api.github.com/users/MthwRobinson/repos",
            "events_url": "https://api.github.com/users/MthwRobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MthwRobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-06T17:42:09Z",
        "updated_at": "2023-11-06T14:57:07Z",
        "closed_at": "2023-10-30T16:18:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThe goal of this issue is to enable the use of Unstructured loaders in conjunction with the Google drive loader.\n\n### Motivation\n\nThis would enable the use of the GoogleDriveLoader with document types other than the standard Google Drive documents/spreadsheets/presentations.\n\n### Your contribution\n\nI can create a PR for this issue as soon as I have bandwidth. If another community member picks this up first, I'd be happy to review.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5791/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5791/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5789",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5789/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5789/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5789/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5789",
        "id": 1744200456,
        "node_id": "PR_kwDOIPDwls5SUs7_",
        "number": 5789,
        "title": "added support for different types in ResponseSchema class",
        "user": {
            "login": "MassimilianoBiancucci",
            "id": 25853906,
            "node_id": "MDQ6VXNlcjI1ODUzOTA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/25853906?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MassimilianoBiancucci",
            "html_url": "https://github.com/MassimilianoBiancucci",
            "followers_url": "https://api.github.com/users/MassimilianoBiancucci/followers",
            "following_url": "https://api.github.com/users/MassimilianoBiancucci/following{/other_user}",
            "gists_url": "https://api.github.com/users/MassimilianoBiancucci/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MassimilianoBiancucci/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MassimilianoBiancucci/subscriptions",
            "organizations_url": "https://api.github.com/users/MassimilianoBiancucci/orgs",
            "repos_url": "https://api.github.com/users/MassimilianoBiancucci/repos",
            "events_url": "https://api.github.com/users/MassimilianoBiancucci/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MassimilianoBiancucci/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-06T16:26:26Z",
        "updated_at": "2023-06-07T05:00:49Z",
        "closed_at": "2023-06-07T05:00:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5789",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5789",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5789.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5789.patch",
            "merged_at": "2023-06-07T05:00:48Z"
        },
        "body": "I added support for specifing different types with ResponseSchema objects:\r\n\r\n## before\r\n`\r\nextracted_info = ResponseSchema(name=\"extracted_info\", description=\"List of extracted information\")\r\n`\r\ngenerate the following doc: ```json\\n{\\n\\t\\\"extracted_info\\\": string // List of extracted information}```\r\nThis brings GPT to create a JSON with only one string in the specified field even if you requested a List in the description.\r\n\r\n## now\r\n`extracted_info = ResponseSchema(name=\"extracted_info\", type=\"List[string]\", description=\"List of extracted information\")\r\n`\r\ngenerate the following doc: ```json\\n{\\n\\t\\\"extracted_info\\\": List[string] // List of extracted information}```\r\nThis way the model responds better to the prompt generating an array of strings.\r\n\r\nTag maintainers/contributors who might be interested:\r\n  Agents / Tools / Toolkits\r\n  @vowelparrot\r\n\r\nDon't know who can be interested, I suppose this is a tool, so I tagged you vowelparrot,\r\nanyway, it's a minor change, and shouldn't impact any other part of the framework.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5789/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5789/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5788",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5788/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5788/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5788/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5788",
        "id": 1744062702,
        "node_id": "I_kwDOIPDwls5n9Eju",
        "number": 5788,
        "title": "Not only print HumanInputRun tool query to console, but also export query as a string variable",
        "user": {
            "login": "MeowLake",
            "id": 131841916,
            "node_id": "U_kgDOB9u_fA",
            "avatar_url": "https://avatars.githubusercontent.com/u/131841916?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MeowLake",
            "html_url": "https://github.com/MeowLake",
            "followers_url": "https://api.github.com/users/MeowLake/followers",
            "following_url": "https://api.github.com/users/MeowLake/following{/other_user}",
            "gists_url": "https://api.github.com/users/MeowLake/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MeowLake/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MeowLake/subscriptions",
            "organizations_url": "https://api.github.com/users/MeowLake/orgs",
            "repos_url": "https://api.github.com/users/MeowLake/repos",
            "events_url": "https://api.github.com/users/MeowLake/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MeowLake/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-06T15:04:18Z",
        "updated_at": "2023-09-12T16:09:48Z",
        "closed_at": "2023-09-12T16:09:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nNow when the `HumanInputRun` is run, it goes through three steps in order:\r\n\r\n1. print out the query that is to be clarified to console\r\n2. call input function to get user input\r\n3. return the user input to the downstream\r\n\r\nHopefully the query in 1st step can be exported as a string **variable** like the LLM response. The flow like this:\r\n\r\nWithout tool:\r\n\r\n```\r\nuser_input <- user input\r\n\r\nresponse <- llm.run(user_input)\r\n```\r\n\r\nWith tool:\r\n\r\n```\r\nuser_input <- user input\r\n\r\nresponse <- humantool(user_input)\r\n\r\nadditional_info <- user input\r\n\r\nresponse <- llm.run(additional_info)\r\n```\n\n### Motivation\n\nBecause the HumanInputRun tool only prints the query to the console, looks like it can only be used with a console. It would be more flexible if the query can be exported as a variable and pass it to the user, then the user inputs the additional info as step 2 does.\n\n### Your contribution\n\nCurrently, I still don't have a solution to it. Any suggestions?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5788/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5788/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5787",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5787/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5787/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5787/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5787",
        "id": 1744057044,
        "node_id": "I_kwDOIPDwls5n9DLU",
        "number": 5787,
        "title": "Capture agent observations for further processing",
        "user": {
            "login": "KBB99",
            "id": 19329998,
            "node_id": "MDQ6VXNlcjE5MzI5OTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/19329998?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KBB99",
            "html_url": "https://github.com/KBB99",
            "followers_url": "https://api.github.com/users/KBB99/followers",
            "following_url": "https://api.github.com/users/KBB99/following{/other_user}",
            "gists_url": "https://api.github.com/users/KBB99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KBB99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KBB99/subscriptions",
            "organizations_url": "https://api.github.com/users/KBB99/orgs",
            "repos_url": "https://api.github.com/users/KBB99/repos",
            "events_url": "https://api.github.com/users/KBB99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KBB99/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-06T15:01:23Z",
        "updated_at": "2023-08-05T08:12:41Z",
        "closed_at": "2023-07-05T17:28:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI would like a way to capture observations in the same way you can capture new llm tokens using the callback's on_llm_new_token.\n\n### Motivation\n\nI've written a basic self-improving agent. I get it to \"self-improve\" by feeding the entire previous chain output to a meta agent that then refines the base agent's prompt. I accomplish this by appending all the tokens using the callback on_llm_new_token. However I realized it is not capturing observations as they are not llm generated tokens. How can I capture the observation as well?\n\n### Your contribution\n\nI've written an article detailing the process I've created for the self-improving agent along with the code [here](https://medium.com/p/d31204e1c375). Once I figure out how to also capture the agent observations I will add the solution to the documentation under a header such as \"Agent observability - capture the entire agent chain\"",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5787/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5787/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5786",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5786/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5786/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5786/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5786",
        "id": 1744047727,
        "node_id": "PR_kwDOIPDwls5SUMrA",
        "number": 5786,
        "title": "Log Anthropic Token Usage",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-06T14:56:50Z",
        "updated_at": "2023-06-08T19:44:47Z",
        "closed_at": "2023-06-08T19:44:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5786",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5786",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5786.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5786.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5786/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5786/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5785",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5785/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5785/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5785/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5785",
        "id": 1744027285,
        "node_id": "I_kwDOIPDwls5n876V",
        "number": 5785,
        "title": "Issue: How to do the recursivley summarization with the summarize_chain?",
        "user": {
            "login": "nicolasH1027",
            "id": 50087006,
            "node_id": "MDQ6VXNlcjUwMDg3MDA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/50087006?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nicolasH1027",
            "html_url": "https://github.com/nicolasH1027",
            "followers_url": "https://api.github.com/users/nicolasH1027/followers",
            "following_url": "https://api.github.com/users/nicolasH1027/following{/other_user}",
            "gists_url": "https://api.github.com/users/nicolasH1027/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nicolasH1027/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nicolasH1027/subscriptions",
            "organizations_url": "https://api.github.com/users/nicolasH1027/orgs",
            "repos_url": "https://api.github.com/users/nicolasH1027/repos",
            "events_url": "https://api.github.com/users/nicolasH1027/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nicolasH1027/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-06T14:45:51Z",
        "updated_at": "2023-10-12T16:09:08Z",
        "closed_at": "2023-10-12T16:09:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nFor the code of class`MapReduceDocumentsChain`, there is a comment in `combine_docs` saying that\r\n        \r\n        \"\"\"Combine documents in a map reduce manner.\r\n\r\n        Combine by mapping first chain over all documents, then reducing the results.\r\n        This reducing can be done recursively if needed (if there are many documents).\r\n        \"\"\"\r\n\r\nMy questioin is how to build the recursively manner? I didn't see any specific API that allow me to implement it? Do I need to build this functionality by myself? Suppose I have a book-length document to summarize.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5785/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5785/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5784",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5784/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5784/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5784/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5784",
        "id": 1744021037,
        "node_id": "PR_kwDOIPDwls5SUG_M",
        "number": 5784,
        "title": "fix ver 191",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-06T14:42:28Z",
        "updated_at": "2023-06-06T16:17:25Z",
        "closed_at": "2023-06-06T16:17:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5784",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5784",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5784.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5784.patch",
            "merged_at": "2023-06-06T16:17:24Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5784/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5784/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5783",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5783/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5783/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5783/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5783",
        "id": 1743977975,
        "node_id": "PR_kwDOIPDwls5ST9k1",
        "number": 5783,
        "title": "Set Falsey",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-06T14:20:19Z",
        "updated_at": "2023-06-06T16:26:39Z",
        "closed_at": "2023-06-06T16:26:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5783",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5783",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5783.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5783.patch",
            "merged_at": "2023-06-06T16:26:38Z"
        },
        "body": "Seems natural to try to disable logging by setting `MY_VAR=false` rather than unsetting (especially once you've already set it in the background)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5783/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5783/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5782",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5782/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5782/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5782/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5782",
        "id": 1743854003,
        "node_id": "PR_kwDOIPDwls5STidq",
        "number": 5782,
        "title": "Attribute support for html tags",
        "user": {
            "login": "Xmaster6y",
            "id": 66315201,
            "node_id": "MDQ6VXNlcjY2MzE1MjAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/66315201?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Xmaster6y",
            "html_url": "https://github.com/Xmaster6y",
            "followers_url": "https://api.github.com/users/Xmaster6y/followers",
            "following_url": "https://api.github.com/users/Xmaster6y/following{/other_user}",
            "gists_url": "https://api.github.com/users/Xmaster6y/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Xmaster6y/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Xmaster6y/subscriptions",
            "organizations_url": "https://api.github.com/users/Xmaster6y/orgs",
            "repos_url": "https://api.github.com/users/Xmaster6y/repos",
            "events_url": "https://api.github.com/users/Xmaster6y/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Xmaster6y/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-06T13:16:09Z",
        "updated_at": "2023-06-06T16:27:37Z",
        "closed_at": "2023-06-06T16:27:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5782",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5782",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5782.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5782.patch",
            "merged_at": "2023-06-06T16:27:37Z"
        },
        "body": "# What does this PR do?\r\n\r\nChange the HTML tags so that a tag with attributes can be found.\r\n\r\n## Before submitting\r\n\r\n- [x] Tests added\r\n- [x] CI/CD validated\r\n\r\n### Who can review?\r\n\r\nAnyone in the community is free to review the PR once the tests have passed. Feel free to tag\r\nmembers/contributors who may be interested in your PR.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5782/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5782/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5781",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5781/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5781/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5781/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5781",
        "id": 1743817550,
        "node_id": "PR_kwDOIPDwls5STadG",
        "number": 5781,
        "title": "qdrant vector store - search with relevancy scores",
        "user": {
            "login": "bnassivet",
            "id": 42321180,
            "node_id": "MDQ6VXNlcjQyMzIxMTgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/42321180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bnassivet",
            "html_url": "https://github.com/bnassivet",
            "followers_url": "https://api.github.com/users/bnassivet/followers",
            "following_url": "https://api.github.com/users/bnassivet/following{/other_user}",
            "gists_url": "https://api.github.com/users/bnassivet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bnassivet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bnassivet/subscriptions",
            "organizations_url": "https://api.github.com/users/bnassivet/orgs",
            "repos_url": "https://api.github.com/users/bnassivet/repos",
            "events_url": "https://api.github.com/users/bnassivet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bnassivet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-06T12:56:43Z",
        "updated_at": "2023-06-09T14:07:57Z",
        "closed_at": "2023-06-08T02:26:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5781",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5781",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5781.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5781.patch",
            "merged_at": "2023-06-08T02:26:40Z"
        },
        "body": "Implementation of similarity_search_with_relevance_scores for quadrant vector store.\r\nAs implemented the method is also compatible with other capacities such as filtering.\r\n\r\nIntegration tests updated.\r\n\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5781/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5781/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5780",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5780/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5780/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5780/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5780",
        "id": 1743774112,
        "node_id": "PR_kwDOIPDwls5STRDr",
        "number": 5780,
        "title": "Feature/add acreom loader",
        "user": {
            "login": "inferense",
            "id": 49389495,
            "node_id": "MDQ6VXNlcjQ5Mzg5NDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/49389495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/inferense",
            "html_url": "https://github.com/inferense",
            "followers_url": "https://api.github.com/users/inferense/followers",
            "following_url": "https://api.github.com/users/inferense/following{/other_user}",
            "gists_url": "https://api.github.com/users/inferense/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/inferense/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/inferense/subscriptions",
            "organizations_url": "https://api.github.com/users/inferense/orgs",
            "repos_url": "https://api.github.com/users/inferense/repos",
            "events_url": "https://api.github.com/users/inferense/events{/privacy}",
            "received_events_url": "https://api.github.com/users/inferense/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-06T12:31:10Z",
        "updated_at": "2023-06-15T18:53:04Z",
        "closed_at": "2023-06-15T18:53:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5780",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5780",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5780.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5780.patch",
            "merged_at": "2023-06-15T18:53:00Z"
        },
        "body": "adding new loader for [acreom](https://acreom.com) vaults. It's based on the Obsidian loader with some additional text processing for acreom specific markdown elements.\r\n\r\n @eyurtsev please take a look!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5780/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5780/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5779",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5779/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5779/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5779/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5779",
        "id": 1743725820,
        "node_id": "I_kwDOIPDwls5n7yT8",
        "number": 5779,
        "title": "[Feature] Implementation of OpenAI's Edit Models",
        "user": {
            "login": "guangchen811",
            "id": 103159823,
            "node_id": "U_kgDOBiYYDw",
            "avatar_url": "https://avatars.githubusercontent.com/u/103159823?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guangchen811",
            "html_url": "https://github.com/guangchen811",
            "followers_url": "https://api.github.com/users/guangchen811/followers",
            "following_url": "https://api.github.com/users/guangchen811/following{/other_user}",
            "gists_url": "https://api.github.com/users/guangchen811/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guangchen811/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guangchen811/subscriptions",
            "organizations_url": "https://api.github.com/users/guangchen811/orgs",
            "repos_url": "https://api.github.com/users/guangchen811/repos",
            "events_url": "https://api.github.com/users/guangchen811/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guangchen811/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-06T12:07:22Z",
        "updated_at": "2023-09-12T16:09:53Z",
        "closed_at": "2023-09-12T16:09:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nRegarding issue #4999, the `code-davinci-002` model has been deprecated, so we can no longer use it with langchain.llm.OpenAI. Additionally, OpenAI also released the API called [edit models](https://platform.openai.com/docs/api-reference/edits), which includes `text-davinc-edit-001` and `code-davinci-edit-001`.\r\n\r\nI'm curious to know if there are any plans to integrate these edit models into the existing LLMs and Chat Models. If this integration has already been implemented, kindly let me know, as I might have missed the update.\n\n### Motivation\n\nThis feature allows for convenient utilization of OpenAI's edit models, such as `text-davinc-edit-001` and `code-davinci-edit-001`.\n\n### Your contribution\n\nIf this feature is valuable and requires implementation, I'm willing to assist or collaborate with the community in its implementation. However, please note that I may not have the ability to implement it independently.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5779/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5779/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5778",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5778/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5778/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5778/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5778",
        "id": 1743647076,
        "node_id": "PR_kwDOIPDwls5SS1MN",
        "number": 5778,
        "title": "fix: OpenAI and AzureChatOpenAI variables conflict",
        "user": {
            "login": "NickLucche",
            "id": 10706289,
            "node_id": "MDQ6VXNlcjEwNzA2Mjg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/10706289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NickLucche",
            "html_url": "https://github.com/NickLucche",
            "followers_url": "https://api.github.com/users/NickLucche/followers",
            "following_url": "https://api.github.com/users/NickLucche/following{/other_user}",
            "gists_url": "https://api.github.com/users/NickLucche/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NickLucche/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NickLucche/subscriptions",
            "organizations_url": "https://api.github.com/users/NickLucche/orgs",
            "repos_url": "https://api.github.com/users/NickLucche/repos",
            "events_url": "https://api.github.com/users/NickLucche/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NickLucche/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-06T11:16:57Z",
        "updated_at": "2023-06-08T02:27:49Z",
        "closed_at": "2023-06-08T02:27:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5778",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5778",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5778.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5778.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\nFixes #5422.\r\nIssue arises when using ChatOpenAI/OpenAI (llm) and AzureChatOpenAI one after another, as the latter modifies some default `openai` vars such as `openai.api_base` which end up raising an error when calling openai services.\r\n\r\nProposed solution is to read the default values and store them. As the `openai` module can easily be imported and changed before `langchain` come into context, my proposal is to run (once) the import in a fresh sub-process, get the default variables we need, and then caching the result. \r\nAlternatively one can hard-code these values like so \r\n```python\r\n  openai.api_type = \"open_ai\"\r\n  openai.api_base = \"https://api.openai.com/v1\"\r\n  openai.api_version = None\r\n```\r\nBut they might change if OpenAI decides so.\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\nNot sure how to add tests as it requires making the request and hence having keys and endpoint setup for azure. Is there any dry-run code infrastructure I can leverage to do so..? \r\n\r\n#### Who can review?\r\n\r\n@vowelparrot (apologies if the tag is misplaced, I am not sure who to add for this). \r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5778/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5778/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5777",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5777/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5777/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5777/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5777",
        "id": 1743435408,
        "node_id": "PR_kwDOIPDwls5SSGwg",
        "number": 5777,
        "title": "fix: too many values to unpack (expected 2)",
        "user": {
            "login": "gazedreamily",
            "id": 82332499,
            "node_id": "MDQ6VXNlcjgyMzMyNDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/82332499?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gazedreamily",
            "html_url": "https://github.com/gazedreamily",
            "followers_url": "https://api.github.com/users/gazedreamily/followers",
            "following_url": "https://api.github.com/users/gazedreamily/following{/other_user}",
            "gists_url": "https://api.github.com/users/gazedreamily/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gazedreamily/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gazedreamily/subscriptions",
            "organizations_url": "https://api.github.com/users/gazedreamily/orgs",
            "repos_url": "https://api.github.com/users/gazedreamily/repos",
            "events_url": "https://api.github.com/users/gazedreamily/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gazedreamily/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-06T09:13:15Z",
        "updated_at": "2023-09-15T15:24:06Z",
        "closed_at": "2023-09-15T15:24:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5777",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5777",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5777.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5777.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5777/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5777/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5776",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5776/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5776/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5776/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5776",
        "id": 1743428019,
        "node_id": "PR_kwDOIPDwls5SSFJU",
        "number": 5776,
        "title": "fix intermediate step over length",
        "user": {
            "login": "samantha0-ops",
            "id": 44936161,
            "node_id": "MDQ6VXNlcjQ0OTM2MTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/44936161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/samantha0-ops",
            "html_url": "https://github.com/samantha0-ops",
            "followers_url": "https://api.github.com/users/samantha0-ops/followers",
            "following_url": "https://api.github.com/users/samantha0-ops/following{/other_user}",
            "gists_url": "https://api.github.com/users/samantha0-ops/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/samantha0-ops/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/samantha0-ops/subscriptions",
            "organizations_url": "https://api.github.com/users/samantha0-ops/orgs",
            "repos_url": "https://api.github.com/users/samantha0-ops/repos",
            "events_url": "https://api.github.com/users/samantha0-ops/events{/privacy}",
            "received_events_url": "https://api.github.com/users/samantha0-ops/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-06T09:09:01Z",
        "updated_at": "2023-08-11T02:15:30Z",
        "closed_at": "2023-08-11T02:15:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5776",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5776",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5776.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5776.patch",
            "merged_at": null
        },
        "body": "<!--\r\nfix the problem of agent_scratchpad over length\r\n-->\r\nfix the problem of agent_scratchpad over length, during using 'CONVERSATIONAL_REACT_DESCRIPTION' agent. \r\nThis problem is caused by the simple concatenation of intermediate_steps in Function '_construct_scratchpad', so I changed this to ignore the earliest intermediate_steps.\r\n\r\nNote: This fix add two parameters in Agent class:\r\n - scratchpad_max_size: the max size of constructed agent_scratchpad.\r\n - length_function: the length function used to count the length of agent_scratchpad.\r\n\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n   @hwchase17 - project lead\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5776/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5776/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5775",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5775/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5775/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5775/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5775",
        "id": 1743279348,
        "node_id": "I_kwDOIPDwls5n6FT0",
        "number": 5775,
        "title": "ConversationalRetrievalChain is not robust to default conversation memory configurations.",
        "user": {
            "login": "startakovsky",
            "id": 689723,
            "node_id": "MDQ6VXNlcjY4OTcyMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/689723?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/startakovsky",
            "html_url": "https://github.com/startakovsky",
            "followers_url": "https://api.github.com/users/startakovsky/followers",
            "following_url": "https://api.github.com/users/startakovsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/startakovsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/startakovsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/startakovsky/subscriptions",
            "organizations_url": "https://api.github.com/users/startakovsky/orgs",
            "repos_url": "https://api.github.com/users/startakovsky/repos",
            "events_url": "https://api.github.com/users/startakovsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/startakovsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-06T07:42:49Z",
        "updated_at": "2023-09-20T16:08:51Z",
        "closed_at": "2023-09-20T16:08:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain 0.0.184\r\nPython 3.11.3\r\nMac OS Ventura 13.3.1\n\n### Who can help?\n\n@hwchase17 @agola11 \r\n\r\nI was reading [this](https://python.langchain.com/en/latest/modules/chains/index_examples/chat_vector_db.html?highlight=conversationalretriever) and changed one part of the code to `return_messages=False` when instantiating ConversationBufferMemory.\r\n\r\nWe have two lines of code below that ask a question. The first line is `qa({'question': \"what is a?\"})`. From the error below it seems that messages should be a list. If this is the case, shouldn't it be documented, and perhaps the default keyword argument for `return_messages` should be `True` instead of `False` in `ConversationBufferMemory`, `ConversationBufferWindowMemory` and any other relevant memory intended to be used in `Conversation`. This also would've been circumvented entirely if the docstring for these memory classes contained helpful information about the parameters and what to expect. \r\n\r\nI also suppose a good solve for this would be to just change the default kwargs for all conversation memory to `memory_key=\"chat_history\"` and `return_messages=True`.\r\n\r\n\r\n```python\r\nimport langchain\r\nlangchain.__version__\r\n```\r\n\r\n    '0.0.184'\r\n\r\n\r\n```python\r\nfrom langchain.vectorstores import FAISS\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.memory import ConversationBufferMemory\r\n\r\nchars = ['a', 'b', 'c', 'd', '1', '2', '3']\r\ntexts = [4*c for c in chars]\r\nmetadatas = [{'title': c, 'source': f'source_{c}'} for c in chars]\r\n\r\nvs = FAISS.from_texts(texts, embedding=OpenAIEmbeddings(), metadatas=metadatas)\r\nretriever = vs.as_retriever(search_kwargs=dict(k=5))\r\n\r\nmemory = ConversationBufferMemory(memory_key='chat_history', return_messages=False)\r\nqa = ConversationalRetrievalChain.from_llm(OpenAI(), retriever, memory=memory)\r\nprint(qa({'question': \"what is a?\"}))\r\nprint(qa({'question': \"what is b?\"}))\r\n```\r\n\r\n    {'question': 'what is a?', 'chat_history': '', 'answer': ' a is aaaaa.'}\r\n\r\n\r\n\r\n    ---------------------------------------------------------------------------\r\n\r\n    ValueError                                Traceback (most recent call last)\r\n\r\n    Cell In[2], line 17\r\n         15 qa = ConversationalRetrievalChain.from_llm(OpenAI(), retriever, memory=memory)\r\n         16 print(qa({'question': \"what is a?\"}))\r\n    ---> 17 print(qa({'question': \"what is b?\"}))\r\n\r\n\r\n    File ~/code/langchain/langchain/chains/base.py:140, in Chain.__call__(self, inputs, return_only_outputs, callbacks)\r\n        138 except (KeyboardInterrupt, Exception) as e:\r\n        139     run_manager.on_chain_error(e)\r\n    --> 140     raise e\r\n        141 run_manager.on_chain_end(outputs)\r\n        142 return self.prep_outputs(inputs, outputs, return_only_outputs)\r\n\r\n\r\n    File ~/code/langchain/langchain/chains/base.py:134, in Chain.__call__(self, inputs, return_only_outputs, callbacks)\r\n        128 run_manager = callback_manager.on_chain_start(\r\n        129     {\"name\": self.__class__.__name__},\r\n        130     inputs,\r\n        131 )\r\n        132 try:\r\n        133     outputs = (\r\n    --> 134         self._call(inputs, run_manager=run_manager)\r\n        135         if new_arg_supported\r\n        136         else self._call(inputs)\r\n        137     )\r\n        138 except (KeyboardInterrupt, Exception) as e:\r\n        139     run_manager.on_chain_error(e)\r\n\r\n\r\n    File ~/code/langchain/langchain/chains/conversational_retrieval/base.py:100, in BaseConversationalRetrievalChain._call(self, inputs, run_manager)\r\n         98 question = inputs[\"question\"]\r\n         99 get_chat_history = self.get_chat_history or _get_chat_history\r\n    --> 100 chat_history_str = get_chat_history(inputs[\"chat_history\"])\r\n        102 if chat_history_str:\r\n        103     callbacks = _run_manager.get_child()\r\n\r\n\r\n    File ~/code/langchain/langchain/chains/conversational_retrieval/base.py:45, in _get_chat_history(chat_history)\r\n         43         buffer += \"\\n\" + \"\\n\".join([human, ai])\r\n         44     else:\r\n    ---> 45         raise ValueError(\r\n         46             f\"Unsupported chat history format: {type(dialogue_turn)}.\"\r\n         47             f\" Full chat history: {chat_history} \"\r\n         48         )\r\n         49 return buffer\r\n\r\n\r\n    ValueError: Unsupported chat history format: <class 'str'>. Full chat history: Human: what is a?\r\n    AI:  a is aaaaa. \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [X] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nfrom langchain.vectorstores import FAISS\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.memory import ConversationBufferMemory\r\n\r\nchars = ['a', 'b', 'c', 'd', '1', '2', '3']\r\ntexts = [4*c for c in chars]\r\nmetadatas = [{'title': c, 'source': f'source_{c}'} for c in chars]\r\n\r\nvs = FAISS.from_texts(texts, embedding=OpenAIEmbeddings(), metadatas=metadatas)\r\nretriever = vs.as_retriever(search_kwargs=dict(k=5))\r\n\r\nmemory = ConversationBufferMemory(memory_key='chat_history', return_messages=False)\r\nqa = ConversationalRetrievalChain.from_llm(OpenAI(), retriever, memory=memory)\r\nprint(qa({'question': \"what is a?\"}))\r\nprint(qa({'question': \"what is b?\"}))\r\n```\n\n### Expected behavior\n\nIn this code I would've expected it to be error free, but it has an error when executing the second call of the `qa` object asking `\"what is b?\"`. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5775/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5775/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5774",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5774/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5774/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5774/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5774",
        "id": 1743139375,
        "node_id": "I_kwDOIPDwls5n5jIv",
        "number": 5774,
        "title": "Dynamic loading of tools and custom tools",
        "user": {
            "login": "skye0402",
            "id": 36907475,
            "node_id": "MDQ6VXNlcjM2OTA3NDc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/36907475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skye0402",
            "html_url": "https://github.com/skye0402",
            "followers_url": "https://api.github.com/users/skye0402/followers",
            "following_url": "https://api.github.com/users/skye0402/following{/other_user}",
            "gists_url": "https://api.github.com/users/skye0402/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skye0402/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skye0402/subscriptions",
            "organizations_url": "https://api.github.com/users/skye0402/orgs",
            "repos_url": "https://api.github.com/users/skye0402/repos",
            "events_url": "https://api.github.com/users/skye0402/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skye0402/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-06T05:57:15Z",
        "updated_at": "2023-09-19T18:34:06Z",
        "closed_at": "2023-09-12T16:09:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nMaybe I didn't get the idea: Some tools can be loaded like 'google-search' other tools can't be loaded like duckduckgo-search by the load_tools: langchain/agents/load_tools.py\r\nE.g. specified in _EXTRA_OPTIONAL_TOOLS.\r\nAs for custom tools they can't be loaded at all it seems in that way. It would be great to register custom tools so that they can be loaded by load_tools as well.\r\n\r\nI've done something like this for the moment, so I have Class-Names for my own tools and the lower-case would be standard:\r\n\r\n```\r\n        standard_tools = []\r\n        for toolStr in tool_names:\r\n            if toolStr[0].islower():\r\n                standard_tools.append(toolStr)\r\n        self.tools = load_tools(standard_tools, **tool_kwargs)\r\n        for toolStr in tool_names:\r\n            if toolStr[0].isupper():\r\n                toolClass = globals()[toolStr]\r\n                toolObject = toolClass()            \r\n                self.tools.append(copy.deepcopy(toolObject))\r\n```\r\n\r\n### Motivation\r\n\r\nWhen assigning agents a set of tools it's very handy to do it through a list.\r\n\r\n### Your contribution\r\n\r\nI'm not familiar enough with the architecture of langchain so I'd better not. But I'm happy to test it.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5774/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5774/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5773",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5773/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5773/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5773/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5773",
        "id": 1743131616,
        "node_id": "I_kwDOIPDwls5n5hPg",
        "number": 5773,
        "title": "Issue: Source code issues",
        "user": {
            "login": "wang-yao-lgtm",
            "id": 80564982,
            "node_id": "MDQ6VXNlcjgwNTY0OTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/80564982?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wang-yao-lgtm",
            "html_url": "https://github.com/wang-yao-lgtm",
            "followers_url": "https://api.github.com/users/wang-yao-lgtm/followers",
            "following_url": "https://api.github.com/users/wang-yao-lgtm/following{/other_user}",
            "gists_url": "https://api.github.com/users/wang-yao-lgtm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wang-yao-lgtm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wang-yao-lgtm/subscriptions",
            "organizations_url": "https://api.github.com/users/wang-yao-lgtm/orgs",
            "repos_url": "https://api.github.com/users/wang-yao-lgtm/repos",
            "events_url": "https://api.github.com/users/wang-yao-lgtm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wang-yao-lgtm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-06T05:49:53Z",
        "updated_at": "2023-06-06T06:04:21Z",
        "closed_at": "2023-06-06T06:04:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nwhen i read your code \uff0ci had something don\u2018t understand\uff0chttps://github.com/hwchase17/langchain/blob/master/langchain/agents/loading.py#L80\uff0c\r\nin here \":=\" is not a python syntax\uff0chow could it run in python(when i run langchain,it run well !)\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5773/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5773/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5772",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5772/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5772/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5772/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5772",
        "id": 1743096370,
        "node_id": "PR_kwDOIPDwls5SQ9aW",
        "number": 5772,
        "title": "YoutubeAudioLoader and updates to OpenAIWhisperParser",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-06T05:12:37Z",
        "updated_at": "2023-06-06T22:15:09Z",
        "closed_at": "2023-06-06T22:15:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5772",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5772",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5772.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5772.patch",
            "merged_at": "2023-06-06T22:15:09Z"
        },
        "body": "This introduces the `YoutubeAudioLoader`, which will load blobs from a YouTube url and write them. Blobs are then parsed by `OpenAIWhisperParser()`, as show in this [PR](https://github.com/hwchase17/langchain/pull/5580), but we extend the parser to split audio such that each chuck meets the 25MB OpenAI size limit. As shown in the notebook, this enables a very simple UX:\r\n\r\n```\r\n# Transcribe the video to text\r\nloader = GenericLoader(YoutubeAudioLoader([url],save_dir),OpenAIWhisperParser())\r\ndocs = loader.load()\r\n``` \r\n\r\nTested on full set of Karpathy lecture videos:\r\n\r\n```\r\n# Karpathy lecture videos\r\nurls = [\"https://youtu.be/VMj-3S1tku0\"\r\n        \"https://youtu.be/PaCmpygFfXo\",\r\n        \"https://youtu.be/TCH_1BHY58I\",\r\n        \"https://youtu.be/P6sfmUTpUmc\",\r\n        \"https://youtu.be/q8SA3rM6ckI\",\r\n        \"https://youtu.be/t3YJ5hKiMQ0\",\r\n        \"https://youtu.be/kCc8FmEb1nY\"]\r\n\r\n# Directory to save audio files \r\nsave_dir = \"~/Downloads/YouTube\"\r\n \r\n# Transcribe the videos to text\r\nloader = GenericLoader(YoutubeAudioLoader(urls,save_dir),OpenAIWhisperParser())\r\ndocs = loader.load()\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5772/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5772/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5771",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5771/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5771/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5771/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5771",
        "id": 1743094118,
        "node_id": "I_kwDOIPDwls5n5YFm",
        "number": 5771,
        "title": "I am a professional UX & UI designer and I want to contribute to this project.",
        "user": {
            "login": "vuxdesign",
            "id": 134898218,
            "node_id": "U_kgDOCApiKg",
            "avatar_url": "https://avatars.githubusercontent.com/u/134898218?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vuxdesign",
            "html_url": "https://github.com/vuxdesign",
            "followers_url": "https://api.github.com/users/vuxdesign/followers",
            "following_url": "https://api.github.com/users/vuxdesign/following{/other_user}",
            "gists_url": "https://api.github.com/users/vuxdesign/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vuxdesign/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vuxdesign/subscriptions",
            "organizations_url": "https://api.github.com/users/vuxdesign/orgs",
            "repos_url": "https://api.github.com/users/vuxdesign/repos",
            "events_url": "https://api.github.com/users/vuxdesign/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vuxdesign/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-06T05:10:07Z",
        "updated_at": "2023-09-13T16:06:53Z",
        "closed_at": "2023-09-13T16:06:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nVux.design - How can I be part of this project? \n\n### Motivation\n\nVux.design - How can I be part of this project? \n\n### Your contribution\n\nVux.design - How can I be part of this project? ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5771/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5771/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5770",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5770/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5770/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5770/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5770",
        "id": 1743078641,
        "node_id": "I_kwDOIPDwls5n5UTx",
        "number": 5770,
        "title": "ML flow call backs fails at missing keys",
        "user": {
            "login": "yureikami",
            "id": 127286701,
            "node_id": "U_kgDOB5Y9rQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/127286701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yureikami",
            "html_url": "https://github.com/yureikami",
            "followers_url": "https://api.github.com/users/yureikami/followers",
            "following_url": "https://api.github.com/users/yureikami/following{/other_user}",
            "gists_url": "https://api.github.com/users/yureikami/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yureikami/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yureikami/subscriptions",
            "organizations_url": "https://api.github.com/users/yureikami/orgs",
            "repos_url": "https://api.github.com/users/yureikami/repos",
            "events_url": "https://api.github.com/users/yureikami/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yureikami/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-06T04:53:33Z",
        "updated_at": "2023-10-09T16:07:22Z",
        "closed_at": "2023-10-09T16:07:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version 0.0.191 , python version 3.9.15 \r\n\n\n### Who can help?\n\n@agola\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [X] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfollowing the notebook given at  https://python.langchain.com/en/latest/integrations/mlflow_tracking.html?highlight=mlflow\r\n\r\nI just changed the chain from LLM chain to retrieval chain and OpenAI to Azure Open AI\r\n\r\ni continuously faced the error KeyError: \"None of [Index(['step', 'prompt', 'name'], dtype='object')] are in the [columns]\"\r\n\r\nBut some data is getting logged into ML_flow experiments. like chain_1_start and chain_2_start and their ends respectively.\n\n### Expected behavior\n\nTo have the necessary data in the ML flow experiment logs and should work without throwing any error.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5770/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5770/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5769",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5769/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5769/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5769/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5769",
        "id": 1743074959,
        "node_id": "PR_kwDOIPDwls5SQ4tR",
        "number": 5769,
        "title": "Fix IndexError when input_list is Empty in prep_prompts",
        "user": {
            "login": "sgroenjes",
            "id": 25276771,
            "node_id": "MDQ6VXNlcjI1Mjc2Nzcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25276771?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sgroenjes",
            "html_url": "https://github.com/sgroenjes",
            "followers_url": "https://api.github.com/users/sgroenjes/followers",
            "following_url": "https://api.github.com/users/sgroenjes/following{/other_user}",
            "gists_url": "https://api.github.com/users/sgroenjes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sgroenjes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sgroenjes/subscriptions",
            "organizations_url": "https://api.github.com/users/sgroenjes/orgs",
            "repos_url": "https://api.github.com/users/sgroenjes/repos",
            "events_url": "https://api.github.com/users/sgroenjes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sgroenjes/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-06T04:49:03Z",
        "updated_at": "2023-08-11T05:50:48Z",
        "closed_at": "2023-08-11T05:50:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5769",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5769",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5769.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5769.patch",
            "merged_at": "2023-08-11T05:50:40Z"
        },
        "body": "This MR corrects the IndexError arising in prep_prompts method when no documents are returned from a similarity search.\r\n\r\nFixes #1733 \r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n  @hwchase17 - project lead\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5769/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5769/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5768",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5768/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5768/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5768/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5768",
        "id": 1743069873,
        "node_id": "PR_kwDOIPDwls5SQ3pu",
        "number": 5768,
        "title": "fix(langchain): fix reading a list of dict from json file",
        "user": {
            "login": "wheynelau",
            "id": 90563815,
            "node_id": "MDQ6VXNlcjkwNTYzODE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/90563815?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wheynelau",
            "html_url": "https://github.com/wheynelau",
            "followers_url": "https://api.github.com/users/wheynelau/followers",
            "following_url": "https://api.github.com/users/wheynelau/following{/other_user}",
            "gists_url": "https://api.github.com/users/wheynelau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wheynelau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wheynelau/subscriptions",
            "organizations_url": "https://api.github.com/users/wheynelau/orgs",
            "repos_url": "https://api.github.com/users/wheynelau/repos",
            "events_url": "https://api.github.com/users/wheynelau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wheynelau/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-06T04:41:19Z",
        "updated_at": "2023-08-11T06:42:18Z",
        "closed_at": "2023-08-11T06:42:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5768",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5768",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5768.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5768.patch",
            "merged_at": null
        },
        "body": "This commit allows a list of dictionaries to be read from a json file.\r\n\r\nResolves #5706 \r\n\r\nNo additional tests implemented as I'm not very familiar with the tests yet, can suggest creating a list of dictionaries then asserting the values\r\n\r\n\r\n  - @vowelparrot\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5768/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5768/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5767",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5767/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5767/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5767/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5767",
        "id": 1743048083,
        "node_id": "I_kwDOIPDwls5n5M2T",
        "number": 5767,
        "title": "Observability Feature Request: Metrics, Data Monitoring, and Graph Visualization",
        "user": {
            "login": "naman-modi",
            "id": 38180263,
            "node_id": "MDQ6VXNlcjM4MTgwMjYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/38180263?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naman-modi",
            "html_url": "https://github.com/naman-modi",
            "followers_url": "https://api.github.com/users/naman-modi/followers",
            "following_url": "https://api.github.com/users/naman-modi/following{/other_user}",
            "gists_url": "https://api.github.com/users/naman-modi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/naman-modi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/naman-modi/subscriptions",
            "organizations_url": "https://api.github.com/users/naman-modi/orgs",
            "repos_url": "https://api.github.com/users/naman-modi/repos",
            "events_url": "https://api.github.com/users/naman-modi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/naman-modi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-06T04:09:20Z",
        "updated_at": "2023-06-25T08:41:58Z",
        "closed_at": "2023-06-25T08:41:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI would like to propose the addition of an **observability feature** to LangChain, enabling developers to monitor and analyze their applications more effectively. This feature aims to provide metrics, data tracking, and graph visualization capabilities to enhance observability.\r\n\r\nKey aspects of the proposed feature include:\r\n\r\n- **Metrics Tracking**: Capture time taken by LLM model to handle request, errors, number of tokens, and costing indication for the particular LLM.\r\n- **Data Tracking**: Log and store prompt, request, and response data for each LangChain interaction.\r\n- **Graph Visualization**: Generate basic graphs over time, depicting metrics such as request duration, error occurrences, token count, and cost.\r\n\r\nThis feature request aims to improve the development and debugging experience by providing developers with better insights into the performance, behavior, and cost implications of their LangChain applications.\r\n\r\n\n\n### Motivation\n\nLast week, while I was creating an application using OpenAI's GPT 3.5 APIs to develop a chat-based solution for answering SEO-related queries, I encountered a significant challenge. During the launch, I realized that I had no means to monitor the responses suggested by the language model (GPT, in my case). Additionally, I had no insights into its performance, such as speed or token usage. To check the token count, I had to repeatedly log in to the OpenAI dashboard, which was time-consuming and cumbersome.\r\n\r\nIt was frustrating not having a clear picture of user interactions and the effectiveness of the system's responses. I realised that I needed a way to understand the system's performance in handling different types of queries and identify areas that required improvement.\r\n\r\nI strongly believe that incorporating an observability feature in LangChain would be immensely valuable. It would empower developers like me to track user interactions, analyze the quality of responses, and measure the performance of the underlying LLM requests. Having these capabilities would not only provide insights into user behavior but also enable us to continuously improve the system's accuracy, response time, and overall user experience.\r\n\n\n### Your contribution\n\nYes, I am planning to raise a PR along with a couple of my friends to add an observability feature to Langchain.\r\n\r\nI would be more than happy to take suggestions from the community, on what we could add to make it more usable!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5767/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5767/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5766",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5766/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5766/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5766/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5766",
        "id": 1743026524,
        "node_id": "PR_kwDOIPDwls5SQuUp",
        "number": 5766,
        "title": "bump ver 191",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-06T03:43:29Z",
        "updated_at": "2023-06-06T03:54:09Z",
        "closed_at": "2023-06-06T03:54:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5766",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5766",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5766.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5766.patch",
            "merged_at": "2023-06-06T03:54:08Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5766/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5766/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5765",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5765/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5765/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5765/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5765",
        "id": 1743014465,
        "node_id": "PR_kwDOIPDwls5SQrsX",
        "number": 5765,
        "title": "feature: add `split_wrap_text` method to Recursive/CharacterTextSplitter",
        "user": {
            "login": "Yossef-Dawoad",
            "id": 62189386,
            "node_id": "MDQ6VXNlcjYyMTg5Mzg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/62189386?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Yossef-Dawoad",
            "html_url": "https://github.com/Yossef-Dawoad",
            "followers_url": "https://api.github.com/users/Yossef-Dawoad/followers",
            "following_url": "https://api.github.com/users/Yossef-Dawoad/following{/other_user}",
            "gists_url": "https://api.github.com/users/Yossef-Dawoad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Yossef-Dawoad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Yossef-Dawoad/subscriptions",
            "organizations_url": "https://api.github.com/users/Yossef-Dawoad/orgs",
            "repos_url": "https://api.github.com/users/Yossef-Dawoad/repos",
            "events_url": "https://api.github.com/users/Yossef-Dawoad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Yossef-Dawoad/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-06T03:28:44Z",
        "updated_at": "2023-06-11T20:44:39Z",
        "closed_at": "2023-06-11T20:44:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5765",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5765",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5765.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5765.patch",
            "merged_at": null
        },
        "body": "This method allows adding a `prefix` and a `suffix` to each split text.\r\nThis is useful for wrapping the text with special characters, tokens or formatting tags.\r\n\r\n- This method implemented in `CharacterTextSplitter` and `RecursiveCharacterTextSplitter`\r\n- The method `split_wrap_text` calls the existing `split_text` method internally and then adds the prefix and suffix\r\n to each element of the output list.\r\n- The method has an optional parameters for the prefix and suffix, which default to empty strings.\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested: @eyurtsev, @vowelparrot\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5765/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5765/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5764",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5764/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5764/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5764/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5764",
        "id": 1742981017,
        "node_id": "PR_kwDOIPDwls5SQkV0",
        "number": 5764,
        "title": "Wheynelau/json double quote",
        "user": {
            "login": "wheynelau",
            "id": 90563815,
            "node_id": "MDQ6VXNlcjkwNTYzODE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/90563815?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wheynelau",
            "html_url": "https://github.com/wheynelau",
            "followers_url": "https://api.github.com/users/wheynelau/followers",
            "following_url": "https://api.github.com/users/wheynelau/following{/other_user}",
            "gists_url": "https://api.github.com/users/wheynelau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wheynelau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wheynelau/subscriptions",
            "organizations_url": "https://api.github.com/users/wheynelau/orgs",
            "repos_url": "https://api.github.com/users/wheynelau/repos",
            "events_url": "https://api.github.com/users/wheynelau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wheynelau/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5463330795,
                "node_id": "LA_kwDOIPDwls8AAAABRaPP6w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20test",
                "name": "needs test",
                "color": "E99695",
                "default": false,
                "description": "PR needs to be updated with tests"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-06T02:54:15Z",
        "updated_at": "2023-08-11T06:39:58Z",
        "closed_at": "2023-08-11T06:39:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5764",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5764",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5764.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5764.patch",
            "merged_at": null
        },
        "body": "In the \"langchain/tools/json/tool.py\" file, fixed the _parse_input function to properly handle single quotes. I've added a second .replace() to replace the single quotes. This is a workaround I can suggest.\r\n\r\nResolves issue #5759 \r\n\r\nTest:\r\n1. Added different orderings of quotes in test_json.py\r\n2. Was unable to run poetry but tested in notebook\r\n\r\n\r\n  - @vowelparrot\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5764/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5764/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5763",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5763/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5763/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5763/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5763",
        "id": 1742972131,
        "node_id": "I_kwDOIPDwls5n46Tj",
        "number": 5763,
        "title": "Improving Custom Agent Speed?",
        "user": {
            "login": "Radvian",
            "id": 58669855,
            "node_id": "MDQ6VXNlcjU4NjY5ODU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/58669855?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Radvian",
            "html_url": "https://github.com/Radvian",
            "followers_url": "https://api.github.com/users/Radvian/followers",
            "following_url": "https://api.github.com/users/Radvian/following{/other_user}",
            "gists_url": "https://api.github.com/users/Radvian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Radvian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Radvian/subscriptions",
            "organizations_url": "https://api.github.com/users/Radvian/orgs",
            "repos_url": "https://api.github.com/users/Radvian/repos",
            "events_url": "https://api.github.com/users/Radvian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Radvian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-06T02:44:39Z",
        "updated_at": "2023-11-08T16:08:55Z",
        "closed_at": "2023-11-08T16:08:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Discussed in https://github.com/hwchase17/langchain/discussions/5730\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **Radvian** June  5, 2023</sup>\r\n\r\nHello, not sure if I should ask this in Discussion or Issue, so apologies beforehand.\r\n\r\nI'm doing a passion project in which I try to create a knowledge base for a website, and create a Conversational Retrieval QA Chain so we can ask questions about the knowledge base. \r\n\r\nThis is very much akin to this: https://python.langchain.com/en/latest/modules/chains/index_examples/chat_vector_db.html \r\n\r\nAnd I have no problem to implement it. \r\n\r\nNow, I want to go to the next step. Instead of creating a chain, I want to create an agent.\r\n\r\nI want to do something like this:\r\n- First, always ask the user for their name.\r\n- If the user asks a particular question that is not in the knowledge base, don't reply with \"I don't know\", but search Wikipedia about it\r\n- If the user asks about X, send an image link (from google search images) of 'X' item\r\n- and few other custom tools\r\n\r\nAnd, I also don't have any problem in creating tools and combining them into a unified agent.\r\n\r\nHowever, my problem is this (and this is expected): the agent performs slower, much slower than if I just use the chain.\r\n\r\nIf I only use Retrieval QA Chain, and enables _streaming_, it can start typing the output in less than 5 seconds.\r\n\r\nIf I use the complete agent, with a few custom tools, it starts to type the answer / output within 10-20 seconds.\r\n\r\nI know this is to be expected, since the agent needs to think about which tools to use. But any ideas on how to make this faster? In the end, I want to deploy this whole project in a streamlit and wants this to perform like a 'functional' chatbot, with almost-instant reply, and not having to wait 10-20 seconds before the 'agent' starts typing.\r\n\r\nAny ideas are welcome, apologies if this is a stupid question. Thank you!</div>",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5763/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5763/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5762",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5762/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5762/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5762/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5762",
        "id": 1742958845,
        "node_id": "PR_kwDOIPDwls5SQfYq",
        "number": 5762,
        "title": "fix(langchain): fix _parse_input function",
        "user": {
            "login": "wheynelau",
            "id": 90563815,
            "node_id": "MDQ6VXNlcjkwNTYzODE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/90563815?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wheynelau",
            "html_url": "https://github.com/wheynelau",
            "followers_url": "https://api.github.com/users/wheynelau/followers",
            "following_url": "https://api.github.com/users/wheynelau/following{/other_user}",
            "gists_url": "https://api.github.com/users/wheynelau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wheynelau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wheynelau/subscriptions",
            "organizations_url": "https://api.github.com/users/wheynelau/orgs",
            "repos_url": "https://api.github.com/users/wheynelau/repos",
            "events_url": "https://api.github.com/users/wheynelau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wheynelau/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-06T02:35:31Z",
        "updated_at": "2023-06-06T02:35:54Z",
        "closed_at": "2023-06-06T02:35:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5762",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5762",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5762.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5762.patch",
            "merged_at": null
        },
        "body": "In the \"langchain/tools/json/tool.py\" file, fixed the _parse_input function to properly handle single quotes.\r\n\r\nResolves issue #5759.\r\n\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. I've added some tests but I couldn't get poetry to work, still troubleshooting\r\n\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5762/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5762/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5761",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5761/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5761/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5761/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5761",
        "id": 1742918681,
        "node_id": "PR_kwDOIPDwls5SQWVW",
        "number": 5761,
        "title": "Update tutorials.md",
        "user": {
            "login": "edrickdch",
            "id": 36369935,
            "node_id": "MDQ6VXNlcjM2MzY5OTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/36369935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edrickdch",
            "html_url": "https://github.com/edrickdch",
            "followers_url": "https://api.github.com/users/edrickdch/followers",
            "following_url": "https://api.github.com/users/edrickdch/following{/other_user}",
            "gists_url": "https://api.github.com/users/edrickdch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edrickdch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edrickdch/subscriptions",
            "organizations_url": "https://api.github.com/users/edrickdch/orgs",
            "repos_url": "https://api.github.com/users/edrickdch/repos",
            "events_url": "https://api.github.com/users/edrickdch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edrickdch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-06T02:00:49Z",
        "updated_at": "2023-06-06T03:37:11Z",
        "closed_at": "2023-06-06T03:37:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5761",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5761",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5761.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5761.patch",
            "merged_at": "2023-06-06T03:37:11Z"
        },
        "body": "# Added an overview of LangChain modules\r\n\r\nAimed at introducing newcomers to LangChain's main modules :)\r\n\r\nTwitter handle is @edrick_dch \r\n\r\n## Who can review?\r\n\r\n@eyurtsev \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5761/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5761/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5760",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5760/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5760/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5760/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5760",
        "id": 1742895996,
        "node_id": "I_kwDOIPDwls5n4nt8",
        "number": 5760,
        "title": "Modify ElasticKnnSearch to return Document object",
        "user": {
            "login": "jeffvestal",
            "id": 53237856,
            "node_id": "MDQ6VXNlcjUzMjM3ODU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/53237856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffvestal",
            "html_url": "https://github.com/jeffvestal",
            "followers_url": "https://api.github.com/users/jeffvestal/followers",
            "following_url": "https://api.github.com/users/jeffvestal/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffvestal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffvestal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffvestal/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffvestal/orgs",
            "repos_url": "https://api.github.com/users/jeffvestal/repos",
            "events_url": "https://api.github.com/users/jeffvestal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffvestal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jeffvestal",
            "id": 53237856,
            "node_id": "MDQ6VXNlcjUzMjM3ODU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/53237856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffvestal",
            "html_url": "https://github.com/jeffvestal",
            "followers_url": "https://api.github.com/users/jeffvestal/followers",
            "following_url": "https://api.github.com/users/jeffvestal/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffvestal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffvestal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffvestal/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffvestal/orgs",
            "repos_url": "https://api.github.com/users/jeffvestal/repos",
            "events_url": "https://api.github.com/users/jeffvestal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffvestal/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jeffvestal",
                "id": 53237856,
                "node_id": "MDQ6VXNlcjUzMjM3ODU2",
                "avatar_url": "https://avatars.githubusercontent.com/u/53237856?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jeffvestal",
                "html_url": "https://github.com/jeffvestal",
                "followers_url": "https://api.github.com/users/jeffvestal/followers",
                "following_url": "https://api.github.com/users/jeffvestal/following{/other_user}",
                "gists_url": "https://api.github.com/users/jeffvestal/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jeffvestal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jeffvestal/subscriptions",
                "organizations_url": "https://api.github.com/users/jeffvestal/orgs",
                "repos_url": "https://api.github.com/users/jeffvestal/repos",
                "events_url": "https://api.github.com/users/jeffvestal/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jeffvestal/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-06T01:24:07Z",
        "updated_at": "2023-09-12T16:10:09Z",
        "closed_at": "2023-09-12T16:10:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWhen performing knnSearch or hybridKnnSearch return `Document` object\n\n### Motivation\n\nCurrently the return a `dict` object. It would be more useful to return [langchain.schema.Document](https://github.com/hwchase17/langchain/blob/d5b160821641df77df447e6dfce21b58fbb13d75/langchain/schema.py#LL266C10-L266C10)\n\n### Your contribution\n\nI will make the canges",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5760/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5760/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5759",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5759/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5759/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5759/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5759",
        "id": 1742877157,
        "node_id": "I_kwDOIPDwls5n4jHl",
        "number": 5759,
        "title": "Issue: Json Agent tool fails when dict key is surrounded by single quotes",
        "user": {
            "login": "nai-kon",
            "id": 25865392,
            "node_id": "MDQ6VXNlcjI1ODY1Mzky",
            "avatar_url": "https://avatars.githubusercontent.com/u/25865392?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nai-kon",
            "html_url": "https://github.com/nai-kon",
            "followers_url": "https://api.github.com/users/nai-kon/followers",
            "following_url": "https://api.github.com/users/nai-kon/following{/other_user}",
            "gists_url": "https://api.github.com/users/nai-kon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nai-kon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nai-kon/subscriptions",
            "organizations_url": "https://api.github.com/users/nai-kon/orgs",
            "repos_url": "https://api.github.com/users/nai-kon/repos",
            "events_url": "https://api.github.com/users/nai-kon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nai-kon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-06T00:59:00Z",
        "updated_at": "2023-09-12T16:10:14Z",
        "closed_at": "2023-09-12T16:10:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nThe Json Agent tools (json_spec_list_keys, json_spec_get_value) fails when dict key of Action Input is surrounded by single quotes.\r\nIt only accepts double quotes. Here is a simple example.\r\n\r\n```python\r\nimport pathlib\r\nfrom langchain.tools.json.tool import JsonSpec\r\n\r\n# [test.json]\r\n#\r\n# {\r\n#   \"name\": \"Andrew Lee\",\r\n#   \"number\": 1234\r\n# }\r\njson_spec = JsonSpec.from_file(pathlib.Path(\"test.json\"))\r\n\r\nprint(json_spec.keys(\"data\"))  #  => ['name', 'number']\r\nprint(json_spec.value('data[\"name\"]')) # => Andrew Lee\r\nprint(json_spec.value(\"data['name']\")) # => KeyError(\"'name'\")\r\n```\r\n\r\nTo make matters worse, the json_spec_list_keys returns keys with **single quote** at Observation.\r\nSo the LLM follow it to Action input and endless error happens like below.\r\n \r\n ```\r\nAction: json_spec_list_keys\r\nAction Input: data\r\nObservation: ['name', 'number']\r\nThought: I should look at the values associated with the \"name\" key\r\nAction: json_spec_get_value\r\nAction Input: \"data['name']\"\r\nObservation: KeyError(\"'name'\")\r\n```\r\n\r\n### Suggestion:\r\n\r\nThe Json Agent tools (json_spec_list_keys, json_spec_get_value)  should accept both single/double quotes for dict key like general python dict access.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5759/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5759/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5758",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5758/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5758/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5758/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5758",
        "id": 1742804542,
        "node_id": "PR_kwDOIPDwls5SP942",
        "number": 5758,
        "title": "Harrison/youtube multi language",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T23:26:18Z",
        "updated_at": "2023-06-05T23:38:09Z",
        "closed_at": "2023-06-05T23:38:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5758",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5758",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5758.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5758.patch",
            "merged_at": "2023-06-05T23:38:08Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5758/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5758/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5757",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5757/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5757/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5757/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5757",
        "id": 1742803136,
        "node_id": "PR_kwDOIPDwls5SP9oD",
        "number": 5757,
        "title": "cohere retries",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T23:24:10Z",
        "updated_at": "2023-06-05T23:28:59Z",
        "closed_at": "2023-06-05T23:28:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5757",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5757",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5757.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5757.patch",
            "merged_at": "2023-06-05T23:28:58Z"
        },
        "body": "\u2026719)\r\n\r\nA minor update to retry Cohore API call in case of errors using tenacity as it is done for OpenAI LLMs.\r\n\r\n#### Who can review?\r\n\r\n@hwchase17, @agola11 \r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5757/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5757/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5756",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5756/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5756/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5756/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5756",
        "id": 1742656975,
        "node_id": "I_kwDOIPDwls5n3tXP",
        "number": 5756,
        "title": "DOC: PrompTemplate format with docs",
        "user": {
            "login": "austinmw",
            "id": 12224358,
            "node_id": "MDQ6VXNlcjEyMjI0MzU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12224358?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/austinmw",
            "html_url": "https://github.com/austinmw",
            "followers_url": "https://api.github.com/users/austinmw/followers",
            "following_url": "https://api.github.com/users/austinmw/following{/other_user}",
            "gists_url": "https://api.github.com/users/austinmw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/austinmw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/austinmw/subscriptions",
            "organizations_url": "https://api.github.com/users/austinmw/orgs",
            "repos_url": "https://api.github.com/users/austinmw/repos",
            "events_url": "https://api.github.com/users/austinmw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/austinmw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-06-05T21:33:49Z",
        "updated_at": "2023-11-07T16:26:16Z",
        "closed_at": "2023-11-07T16:26:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nHi, how can I see what my final prompt looks like when retrieving docs? For example, I'm not quite sure how this will end up looking:\r\n\r\n```python\r\nprompt_template = \"\"\"Answer based on context:\\n\\n{context}\\n\\n{question}\"\"\"\r\n\r\nPROMPT = PromptTemplate(template=prompt_template, input_variables=[\"context\", \"question\"])\r\n\r\nqa = RetrievalQA.from_chain_type(\r\n  llm=sm_llm,\r\n  chain_type=\"stuff\",\r\n  retriever=docsearch.as_retriever(),\r\n  chain_type_kwargs={\"prompt\": PROMPT},\r\n)\r\n\r\nresult = qa.run(question)\r\n```\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5756/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5756/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5754",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5754/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5754/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5754/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5754",
        "id": 1742627463,
        "node_id": "PR_kwDOIPDwls5SPaUe",
        "number": 5754,
        "title": "Batching added for ChromaDB Similarity Search",
        "user": {
            "login": "berkedilekoglu",
            "id": 19657350,
            "node_id": "MDQ6VXNlcjE5NjU3MzUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19657350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/berkedilekoglu",
            "html_url": "https://github.com/berkedilekoglu",
            "followers_url": "https://api.github.com/users/berkedilekoglu/followers",
            "following_url": "https://api.github.com/users/berkedilekoglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/berkedilekoglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/berkedilekoglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/berkedilekoglu/subscriptions",
            "organizations_url": "https://api.github.com/users/berkedilekoglu/orgs",
            "repos_url": "https://api.github.com/users/berkedilekoglu/repos",
            "events_url": "https://api.github.com/users/berkedilekoglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/berkedilekoglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-05T21:09:07Z",
        "updated_at": "2023-09-19T18:24:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5754",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5754",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5754.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5754.patch",
            "merged_at": null
        },
        "body": "ChromaDB supports batching queries for efficient searching. Currently, the APIs used for OpenAI also support batching, so I have added batching functions for OpenAI embeddings. However, the batching implementation may vary depending on the device or API used for HuggingFace, so I haven't made any additions for that. Therefore, the functions check the embedding being used.\r\n\r\n**_Current Situation:_**\r\nSince there is no batching, each query is sent and processed individually.\r\n\r\n**_Test Case:_**\r\nI have a query set consisting of 1500 questions. In the current situation, when I retrieve the answers without batching, it takes 8.5 minutes to process all 1500 questions.\r\n\r\n**_With Batching:_**\r\nChromaDB already has a query function that supports batching. Utilizing that, I have added `similarity_search_by_batch` and `similarity_search_with_score_by_batch` functions in addition to `similarity_search` and `similarity_search_with_score` functions. Since the output types of the functions will change, I didn't want to write them within the same function. If you want, we can also update it that way.\r\n\r\n**_Test Case:_**\r\n\r\n**_After Implementing Batching:_**\r\n\r\nwhen I retrieve the answers with a batch size of 256, all 1500 questions are processed in 12 seconds. When using a batch size of 512, the answers are returned in 6 seconds.\r\n\r\n_It is also important for decreasing request number for OpenAI API._ \r\n\r\nAdditionally, I updated the `_results_to_docs_and_scores` function to `_results_to_docs_and_scores_for_batches`. Now the function works appropriately for batching and returns the results. Since the returned value has changed from `List[Tuple[Document, float]]` to `List[List[Tuple[Document, float]]],` I have written a separate function for handling this conversion.\r\n\r\nmy twitter: [berkedilekoglu](https://twitter.com/berkedilekoglu)\r\n\r\n\r\n_**TEST AND DOCUMENTS**_\r\n\r\nI think it will be necessary to add test cases for these functions, but I would greatly appreciate your help since I haven't written tests before :)\r\n\r\nIf you're okay with these changes, I can add the necessary examples to the documentation!\r\n\r\nThank you very much!\r\nBerke\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049, @hwchase17\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5754/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5754/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5753",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5753/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5753/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5753/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5753",
        "id": 1742618818,
        "node_id": "PR_kwDOIPDwls5SPYY1",
        "number": 5753,
        "title": "docs: updated `ecosystem/dependents`",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T21:03:29Z",
        "updated_at": "2023-06-05T23:15:30Z",
        "closed_at": "2023-06-05T23:09:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5753",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5753",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5753.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5753.patch",
            "merged_at": "2023-06-05T23:09:55Z"
        },
        "body": "updated `ecosystem/dependents` data (it was updated 2+ weeks ago)\r\n\r\n#### Who can review?\r\n\r\n@hwchase17 \r\n@eyurtsev\r\n@dev2049\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5753/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5753/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5752",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5752/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5752/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5752/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5752",
        "id": 1742566794,
        "node_id": "PR_kwDOIPDwls5SPM1O",
        "number": 5752,
        "title": "docs: `ecosystem/integrations` update 5",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T20:27:35Z",
        "updated_at": "2023-06-05T23:15:17Z",
        "closed_at": "2023-06-05T23:08:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5752",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5752",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5752.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5752.patch",
            "merged_at": "2023-06-05T23:08:56Z"
        },
        "body": "- added missed integration to `docs/ecosystem/integrations/`\r\n- updated notebooks to consistent format: changed titles, file names; added descriptions\r\n\r\n#### Who can review?\r\n @hwchase17 \r\n @dev2049 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5752/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5752/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5751",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5751/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5751/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5751/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5751",
        "id": 1742503303,
        "node_id": "PR_kwDOIPDwls5SO-Xu",
        "number": 5751,
        "title": "Removes unnecessary backslash escaping for backticks in python",
        "user": {
            "login": "spazm",
            "id": 92896,
            "node_id": "MDQ6VXNlcjkyODk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/92896?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/spazm",
            "html_url": "https://github.com/spazm",
            "followers_url": "https://api.github.com/users/spazm/followers",
            "following_url": "https://api.github.com/users/spazm/following{/other_user}",
            "gists_url": "https://api.github.com/users/spazm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/spazm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/spazm/subscriptions",
            "organizations_url": "https://api.github.com/users/spazm/orgs",
            "repos_url": "https://api.github.com/users/spazm/repos",
            "events_url": "https://api.github.com/users/spazm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/spazm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T19:54:53Z",
        "updated_at": "2023-06-09T02:48:44Z",
        "closed_at": "2023-06-05T20:30:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5751",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5751",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5751.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5751.patch",
            "merged_at": "2023-06-05T20:30:11Z"
        },
        "body": "Fixed python deprecation warning:\r\n    DeprecationWarning: invalid escape sequence '`'\r\n    \r\n   backticks (`) do not have special meaning in python strings and should not be escaped. \r\n\r\n-- @spazm on twitter\r\n\r\n### Who can review:\r\n\r\n@nfcampos ported this change from javascript, @hwchase17 wrote the original STRUCTURED_FORMAT_INSTRUCTIONS, \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5751/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5751/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5750",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5750/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5750/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5750/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5750",
        "id": 1742470563,
        "node_id": "PR_kwDOIPDwls5SO2-A",
        "number": 5750,
        "title": "Base RunEvaluator Chain",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T19:36:36Z",
        "updated_at": "2023-06-06T23:42:16Z",
        "closed_at": "2023-06-06T23:42:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5750",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5750",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5750.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5750.patch",
            "merged_at": "2023-06-06T23:42:15Z"
        },
        "body": "Clean up a bit and only implement the QA and reference free implementations from https://github.com/hwchase17/langchain/pull/5618",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5750/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5750/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5749",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5749/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5749/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5749/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5749",
        "id": 1742446474,
        "node_id": "PR_kwDOIPDwls5SOxgg",
        "number": 5749,
        "title": "Add class attribute \"return_generated_question\" to class \"BaseConversationalRetrievalChain\"",
        "user": {
            "login": "felpigeon",
            "id": 16495090,
            "node_id": "MDQ6VXNlcjE2NDk1MDkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/16495090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/felpigeon",
            "html_url": "https://github.com/felpigeon",
            "followers_url": "https://api.github.com/users/felpigeon/followers",
            "following_url": "https://api.github.com/users/felpigeon/following{/other_user}",
            "gists_url": "https://api.github.com/users/felpigeon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/felpigeon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/felpigeon/subscriptions",
            "organizations_url": "https://api.github.com/users/felpigeon/orgs",
            "repos_url": "https://api.github.com/users/felpigeon/repos",
            "events_url": "https://api.github.com/users/felpigeon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/felpigeon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T19:23:03Z",
        "updated_at": "2023-06-05T23:10:12Z",
        "closed_at": "2023-06-05T23:10:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5749",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5749",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5749.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5749.patch",
            "merged_at": "2023-06-05T23:10:12Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\nAdding a class attribute \"return_generated_question\" to class \"BaseConversationalRetrievalChain\". If set to `True`, the chain's output has a key \"generated_question\" with the question generated by the sub-chain `question_generator` as the value. This way the generated question can be logged.\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n@dev2049 @vowelparrot",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5749/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5749/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5748",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5748/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5748/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5748/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5748",
        "id": 1742421560,
        "node_id": "I_kwDOIPDwls5n2z44",
        "number": 5748,
        "title": "Pinecone.from_documents() does not create the index if it does not exist",
        "user": {
            "login": "jeromemassot",
            "id": 20254310,
            "node_id": "MDQ6VXNlcjIwMjU0MzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/20254310?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeromemassot",
            "html_url": "https://github.com/jeromemassot",
            "followers_url": "https://api.github.com/users/jeromemassot/followers",
            "following_url": "https://api.github.com/users/jeromemassot/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeromemassot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeromemassot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeromemassot/subscriptions",
            "organizations_url": "https://api.github.com/users/jeromemassot/orgs",
            "repos_url": "https://api.github.com/users/jeromemassot/repos",
            "events_url": "https://api.github.com/users/jeromemassot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeromemassot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-05T19:12:00Z",
        "updated_at": "2023-12-09T13:10:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain == 0.0.190\r\nGoogle Colab\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\ndocsearch = Pinecone.from_documents(chunks, embeddings, index_name=index_name)\r\ncalls from_text which returns\r\nValueError: No active indexes found in your Pinecone project, are you sure you're using the right API key and environment?\r\nif the index does not exist.\r\n\r\n``\r\nif index_name in indexes:\r\n            index = pinecone.Index(index_name)\r\n        elif len(indexes) == 0:\r\n            raise ValueError(\r\n                \"No active indexes found in your Pinecone project, \"\r\n                \"are you sure you're using the right API key and environment?\"\r\n            )\r\n``\n\n### Expected behavior\n\nThe method should create the index if it does not exist.\r\nThis is the expected behavior from the documentation and the official examples.\r\n\r\nCreating a new index if it does not exist is the only recommended behavior as it implies that the dimension of the index is always consistent with the dimension of the embedding model used.\r\n\r\nThanks\r\n\r\nBest regards\r\n\r\nJerome",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5748/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5748/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5746",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5746/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5746/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5746/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5746",
        "id": 1742322810,
        "node_id": "PR_kwDOIPDwls5SOWPW",
        "number": 5746,
        "title": "base implementation for azureml foundational model",
        "user": {
            "login": "prakharg-msft",
            "id": 75808410,
            "node_id": "MDQ6VXNlcjc1ODA4NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/75808410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prakharg-msft",
            "html_url": "https://github.com/prakharg-msft",
            "followers_url": "https://api.github.com/users/prakharg-msft/followers",
            "following_url": "https://api.github.com/users/prakharg-msft/following{/other_user}",
            "gists_url": "https://api.github.com/users/prakharg-msft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prakharg-msft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prakharg-msft/subscriptions",
            "organizations_url": "https://api.github.com/users/prakharg-msft/orgs",
            "repos_url": "https://api.github.com/users/prakharg-msft/repos",
            "events_url": "https://api.github.com/users/prakharg-msft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prakharg-msft/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T18:24:55Z",
        "updated_at": "2023-06-05T18:26:10Z",
        "closed_at": "2023-06-05T18:26:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5746",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5746",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5746.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5746.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5746/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5746/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5745",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5745/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5745/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5745/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5745",
        "id": 1742236400,
        "node_id": "PR_kwDOIPDwls5SOCzd",
        "number": 5745,
        "title": "Fix a typo in the documentation for the Slack document loader",
        "user": {
            "login": "georgegeddes",
            "id": 10374429,
            "node_id": "MDQ6VXNlcjEwMzc0NDI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/10374429?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/georgegeddes",
            "html_url": "https://github.com/georgegeddes",
            "followers_url": "https://api.github.com/users/georgegeddes/followers",
            "following_url": "https://api.github.com/users/georgegeddes/following{/other_user}",
            "gists_url": "https://api.github.com/users/georgegeddes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/georgegeddes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/georgegeddes/subscriptions",
            "organizations_url": "https://api.github.com/users/georgegeddes/orgs",
            "repos_url": "https://api.github.com/users/georgegeddes/repos",
            "events_url": "https://api.github.com/users/georgegeddes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/georgegeddes/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T17:38:53Z",
        "updated_at": "2023-06-05T20:30:25Z",
        "closed_at": "2023-06-05T20:30:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5745",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5745",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5745.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5745.patch",
            "merged_at": "2023-06-05T20:30:24Z"
        },
        "body": "Fixes a typo I noticed while reading the docs.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5745/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5745/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5744",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5744/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5744/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5744/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5744",
        "id": 1742141160,
        "node_id": "PR_kwDOIPDwls5SNt3b",
        "number": 5744,
        "title": "json parser for when 3 backtiks are missing",
        "user": {
            "login": "voulkon",
            "id": 54834800,
            "node_id": "MDQ6VXNlcjU0ODM0ODAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/54834800?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/voulkon",
            "html_url": "https://github.com/voulkon",
            "followers_url": "https://api.github.com/users/voulkon/followers",
            "following_url": "https://api.github.com/users/voulkon/following{/other_user}",
            "gists_url": "https://api.github.com/users/voulkon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/voulkon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/voulkon/subscriptions",
            "organizations_url": "https://api.github.com/users/voulkon/orgs",
            "repos_url": "https://api.github.com/users/voulkon/repos",
            "events_url": "https://api.github.com/users/voulkon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/voulkon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-05T16:34:13Z",
        "updated_at": "2023-09-29T16:27:03Z",
        "closed_at": "2023-09-29T16:27:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5744",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5744",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5744.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5744.patch",
            "merged_at": null
        },
        "body": "Fixes #3455 and #2276.\r\n\r\nThe parse_json_markdown function expects a JSON string within triple backticks.\r\n\r\nHowever, even though it's instructed this way, LLM's responses sometimes come with fewer that 3 backticks (as also described in the issue 3455.\r\n\r\nYou can try using this string as input to test:\r\n\r\njson_string = '\\n\\nRESPONSE\\n--------------------\\n```json\\n{\\n    \"action\": \"Current Search\",\\n    \"action_input\": \"Atividades de lazer em Recife\"\\n}\\n``'\r\n\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n@vowelparrot\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5744/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5744/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5743",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5743/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5743/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5743/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5743",
        "id": 1742132249,
        "node_id": "PR_kwDOIPDwls5SNr8n",
        "number": 5743,
        "title": "Addresses GPT4All wrapper model_type attribute issues  #5720.",
        "user": {
            "login": "bwv988",
            "id": 2035075,
            "node_id": "MDQ6VXNlcjIwMzUwNzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2035075?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bwv988",
            "html_url": "https://github.com/bwv988",
            "followers_url": "https://api.github.com/users/bwv988/followers",
            "following_url": "https://api.github.com/users/bwv988/following{/other_user}",
            "gists_url": "https://api.github.com/users/bwv988/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bwv988/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bwv988/subscriptions",
            "organizations_url": "https://api.github.com/users/bwv988/orgs",
            "repos_url": "https://api.github.com/users/bwv988/repos",
            "events_url": "https://api.github.com/users/bwv988/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bwv988/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T16:27:35Z",
        "updated_at": "2023-06-05T19:45:30Z",
        "closed_at": "2023-06-05T19:45:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5743",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5743",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5743.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5743.patch",
            "merged_at": "2023-06-05T19:45:30Z"
        },
        "body": "Fixes #5720.\r\n\r\nA more in-depth discussion is in my comment here: https://github.com/hwchase17/langchain/issues/5720#issuecomment-1577047018\r\n\r\nIn a nutshell, there has been a subtle change in the latest version of GPT4Alls Python bindings. The change I submitted yesterday is compatible with this version, however, this version is as of yet unreleased and thus the code change breaks Langchain's wrapper under the currently released version of GPT4All.\r\n\r\nThis pull request proposes a backwards-compatible solution.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5743/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5743/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5742",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5742/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5742/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5742/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5742",
        "id": 1742071366,
        "node_id": "PR_kwDOIPDwls5SNeXh",
        "number": 5742,
        "title": "Zep Hybrid Search",
        "user": {
            "login": "danielchalef",
            "id": 131175,
            "node_id": "MDQ6VXNlcjEzMTE3NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/131175?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danielchalef",
            "html_url": "https://github.com/danielchalef",
            "followers_url": "https://api.github.com/users/danielchalef/followers",
            "following_url": "https://api.github.com/users/danielchalef/following{/other_user}",
            "gists_url": "https://api.github.com/users/danielchalef/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danielchalef/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danielchalef/subscriptions",
            "organizations_url": "https://api.github.com/users/danielchalef/orgs",
            "repos_url": "https://api.github.com/users/danielchalef/repos",
            "events_url": "https://api.github.com/users/danielchalef/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danielchalef/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-05T15:54:59Z",
        "updated_at": "2023-06-06T04:34:33Z",
        "closed_at": "2023-06-05T19:59:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5742",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5742",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5742.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5742.patch",
            "merged_at": "2023-06-05T19:59:28Z"
        },
        "body": "Zep now supports persisting custom metadata with messages and hybrid search across both message embeddings and structured metadata. This PR implements custom metadata and enhancements to the `ZepChatMessageHistory` and `ZepRetriever` classes to implement this support.\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5742/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5742/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5741",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5741/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5741/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5741/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5741",
        "id": 1742067857,
        "node_id": "I_kwDOIPDwls5n1diR",
        "number": 5741,
        "title": "DOC: SageMaker JumpStart Embeddings",
        "user": {
            "login": "austinmw",
            "id": 12224358,
            "node_id": "MDQ6VXNlcjEyMjI0MzU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12224358?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/austinmw",
            "html_url": "https://github.com/austinmw",
            "followers_url": "https://api.github.com/users/austinmw/followers",
            "following_url": "https://api.github.com/users/austinmw/following{/other_user}",
            "gists_url": "https://api.github.com/users/austinmw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/austinmw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/austinmw/subscriptions",
            "organizations_url": "https://api.github.com/users/austinmw/orgs",
            "repos_url": "https://api.github.com/users/austinmw/repos",
            "events_url": "https://api.github.com/users/austinmw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/austinmw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-05T15:52:39Z",
        "updated_at": "2023-09-11T16:58:07Z",
        "closed_at": "2023-09-11T16:58:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nI saw in a recent notebook demo that a custom `SagemakerEndpointEmbeddingsJumpStart` class was needed to deploy a SageMaker JumpStart text embedding model. I couldn't find any langchain docs for this.\r\n\r\n```python\r\nfrom langchain.embeddings.sagemaker_endpoint import EmbeddingsContentHandler\r\n\r\nclass SagemakerEndpointEmbeddingsJumpStart(SagemakerEndpointEmbeddings):\r\n    def embed_documents(self, texts: List[str], chunk_size: int = 5) -> List[List[float]]:\r\n        \"\"\"Compute doc embeddings using a SageMaker Inference Endpoint.\r\n\r\n        Args:\r\n            texts: The list of texts to embed.\r\n            chunk_size: The chunk size defines how many input texts will\r\n                be grouped together as request. If None, will use the\r\n                chunk size specified by the class.\r\n\r\n        Returns:\r\n            List of embeddings, one for each text.\r\n        \"\"\"\r\n        results = []\r\n        _chunk_size = len(texts) if chunk_size > len(texts) else chunk_size\r\n\r\n        for i in range(0, len(texts), _chunk_size):\r\n            #print(f\"input:\", texts[i : i + _chunk_size])\r\n            response = self._embedding_func(texts[i : i + _chunk_size])\r\n            results.extend(response)\r\n        return results\r\n\r\n\r\nclass ContentHandler(EmbeddingsContentHandler):\r\n    content_type = \"application/json\"\r\n    accepts = \"application/json\"\r\n\r\n    def transform_input(self, prompt: str, model_kwargs={}) -> bytes:\r\n        input_str = json.dumps({\"text_inputs\": prompt, **model_kwargs})\r\n        return input_str.encode(\"utf-8\")\r\n\r\n    def transform_output(self, output: bytes) -> str:\r\n        response_json = json.loads(output.read().decode(\"utf-8\"))\r\n        embeddings = response_json[\"embedding\"]\r\n        return embeddings\r\n\r\n\r\ncontent_handler = ContentHandler()\r\n\r\nembeddings = SagemakerEndpointEmbeddingsJumpStart(\r\n    endpoint_name=_MODEL_CONFIG_[\"huggingface-textembedding-gpt-j-6b\"][\"endpoint_name\"],\r\n    region_name=aws_region,\r\n    content_handler=content_handler,\r\n)\r\n```\r\n\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5741/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5741/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5740",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5740/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5740/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5740/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5740",
        "id": 1742023144,
        "node_id": "I_kwDOIPDwls5n1Sno",
        "number": 5740,
        "title": "Issue: TypeError: issubclass() arg 1 must be a class",
        "user": {
            "login": "GurnaikLall",
            "id": 110835671,
            "node_id": "U_kgDOBps31w",
            "avatar_url": "https://avatars.githubusercontent.com/u/110835671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GurnaikLall",
            "html_url": "https://github.com/GurnaikLall",
            "followers_url": "https://api.github.com/users/GurnaikLall/followers",
            "following_url": "https://api.github.com/users/GurnaikLall/following{/other_user}",
            "gists_url": "https://api.github.com/users/GurnaikLall/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GurnaikLall/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GurnaikLall/subscriptions",
            "organizations_url": "https://api.github.com/users/GurnaikLall/orgs",
            "repos_url": "https://api.github.com/users/GurnaikLall/repos",
            "events_url": "https://api.github.com/users/GurnaikLall/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GurnaikLall/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-06-05T15:24:37Z",
        "updated_at": "2023-11-29T15:01:38Z",
        "closed_at": "2023-06-07T10:00:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nGetting the following error\r\n\r\nTypeError: issubclass() arg 1 must be a class\r\n\r\nwhen i execute:\r\n\r\nfrom langchain.embeddings import HuggingFaceEmbeddings\r\n#from transformers import pipeline\r\n\r\n#Download model from Hugging face\r\nmodel_name = \"sentence-transformers/all-mpnet-base-v2\"\r\nhf_embed = HuggingFaceEmbeddings(model_name=model_name)\r\n\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5740/reactions",
            "total_count": 7,
            "+1": 7,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5740/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5738",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5738/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5738/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5738/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5738",
        "id": 1741994527,
        "node_id": "PR_kwDOIPDwls5SNNgC",
        "number": 5738,
        "title": "Persistence layer arrangment",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T15:11:51Z",
        "updated_at": "2023-07-26T16:56:49Z",
        "closed_at": "2023-07-26T16:56:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5738",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5738",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5738.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5738.patch",
            "merged_at": null
        },
        "body": "An option for persistence layer that can cache intermediate artifacts\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5738/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5738/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5737",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5737/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5737/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5737/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5737",
        "id": 1741972225,
        "node_id": "PR_kwDOIPDwls5SNIf4",
        "number": 5737,
        "title": "Add tests for QdrantTranslator",
        "user": {
            "login": "kacperlukawski",
            "id": 2649301,
            "node_id": "MDQ6VXNlcjI2NDkzMDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2649301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kacperlukawski",
            "html_url": "https://github.com/kacperlukawski",
            "followers_url": "https://api.github.com/users/kacperlukawski/followers",
            "following_url": "https://api.github.com/users/kacperlukawski/following{/other_user}",
            "gists_url": "https://api.github.com/users/kacperlukawski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kacperlukawski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kacperlukawski/subscriptions",
            "organizations_url": "https://api.github.com/users/kacperlukawski/orgs",
            "repos_url": "https://api.github.com/users/kacperlukawski/repos",
            "events_url": "https://api.github.com/users/kacperlukawski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kacperlukawski/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-05T15:02:10Z",
        "updated_at": "2023-09-29T16:27:37Z",
        "closed_at": "2023-09-29T16:27:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5737",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5737",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5737.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5737.patch",
            "merged_at": null
        },
        "body": "This is just a simple suite of unit tests for #5567 \r\n\r\n#### Who can review?\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5737/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5737/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5734",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5734/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5734/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5734/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5734",
        "id": 1741915767,
        "node_id": "I_kwDOIPDwls5n04Z3",
        "number": 5734,
        "title": "add_user_message() fails. called with List instead of a string.",
        "user": {
            "login": "rdhillbb",
            "id": 17669783,
            "node_id": "MDQ6VXNlcjE3NjY5Nzgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/17669783?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rdhillbb",
            "html_url": "https://github.com/rdhillbb",
            "followers_url": "https://api.github.com/users/rdhillbb/followers",
            "following_url": "https://api.github.com/users/rdhillbb/following{/other_user}",
            "gists_url": "https://api.github.com/users/rdhillbb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rdhillbb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rdhillbb/subscriptions",
            "organizations_url": "https://api.github.com/users/rdhillbb/orgs",
            "repos_url": "https://api.github.com/users/rdhillbb/repos",
            "events_url": "https://api.github.com/users/rdhillbb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rdhillbb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-05T14:32:00Z",
        "updated_at": "2023-09-13T03:54:38Z",
        "closed_at": "2023-09-13T03:52:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHere is the error call stack. The code is attached to this submission.\r\nI did a workaround to prevent the crash. However, this is not the correct fix.\r\nHacked FIX\r\ndef add_user_message(self, message: str) -> None:\r\n        \"\"\"Add a user message to the store\"\"\"\r\n        print(type(message))\r\n        **if isinstance(message, list):\r\n           message = message[0].content**\r\n        self.add_message(HumanMessage(content=message))\r\n\r\n---------------------------- Call Stack Error --------------------\r\nException has occurred: ValidationError       (note: full exception trace is shown but execution is paused at: _run_module_as_main)\r\n1 validation error for HumanMessage\r\ncontent\r\n  str type expected (type=type_error.str)\r\n  File \"/Users/randolphhill/anaconda3/envs/version2/lib/python3.10/site-packages/pydantic/main.py\", line 341, in pydantic.main.BaseModel.__init__\r\n    raise validation_error\r\n  File \"/Users/randolphhill/anaconda3/envs/version2/lib/python3.10/site-packages/langchain/schema.py\", line 254, in add_user_message\r\n    self.add_message(HumanMessage(content=message))\r\n  File \"/Users/randolphhill/anaconda3/envs/version2/lib/python3.10/site-packages/langchain/memory/chat_memory.py\", line 35, in save_context\r\n    self.chat_memory.add_user_message(input_str)\r\n  File \"/Users/randolphhill/anaconda3/envs/version2/lib/python3.10/site-packages/langchain/chains/base.py\", line 191, in prep_outputs\r\n    self.memory.save_context(inputs, outputs)\r\n  File \"/Users/randolphhill/anaconda3/envs/version2/lib/python3.10/site-packages/langchain/chains/base.py\", line 142, in __call__\r\n    return self.prep_outputs(inputs, outputs, return_only_outputs)\r\n  File \"/Users/randolphhill/gepetto/code/mpv1/version1/geppetto/maincontroller.py\", line 96, in <module>\r\n    eaes = agent(messages)\r\n  File \"/Users/randolphhill/anaconda3/envs/version2/lib/python3.10/runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/Users/randolphhill/anaconda3/envs/version2/lib/python3.10/runpy.py\", line 196, in _run_module_as_main (Current frame)\r\n    return _run_code(code, main_globals, None,\r\npydantic.error_wrappers.ValidationError: 1 validation error for HumanMessage\r\ncontent\r\n  str type expected (type=type_error.str)\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain import SerpAPIWrapper\r\n#from typing import Union\r\nfrom langchain.agents import load_tools\r\nfrom langchain.agents import initialize_agent\r\nfrom langchain.agents import Tool\r\nfrom langchain.chains.conversation.memory import ConversationBufferWindowMemory\r\nfrom langchain.prompts.prompt import PromptTemplate\r\nfrom langchain.tools import DuckDuckGoSearchRun\r\nfrom langchain.schema import (\r\n    SystemMessage,\r\n    HumanMessage,\r\n)\r\n#Build Prompt\r\nEXAMPLES = [\r\n\"Question: Is there a Thai restaurant in San Francisco?\\nThought: I need to search for Thai restaurants in San Francisco.\\nservation: Yes, there are several Thai restaurants located in San Francisco. Here are five examples: 1. Lers Ros Thai, 2. Kin Khao, 3. Farmhouse Kitchen Thai Cuisine, 4. Marnee Thai, 5. Osha Thai Restaurant.\\nAction: Finished\"\r\n]\r\n\r\nSUFFIX = \"\"\"\\nQuestion: {input}\r\n{agent_scratchpad}\"\"\"\r\nTEST_PROMPT = PromptTemplate.from_examples(\r\n  EXAMPLES, SUFFIX, [\"input\", \"agent_scratchpad\"]\r\n)\r\n#print(TEST_PROMPT)\r\n\r\n\r\n\r\n\r\n\r\n\r\nmessages = [\r\n    SystemMessage(content=\"You are a virtual librarian who stores search results, pdf and txt files. if a message cannot save, provide a file name based on the content of the message. File extension txt.\"),\r\n#  AIMessage(content=\"I'm great thank you. How can I help you?\"),\r\n   HumanMessage(content=\"List 5 Thai resturants located in San Francisco that existed before September 2021.\")\r\n]\r\n\r\ndef ingestFile(filename:str):\r\n    return f\"{filename}ingested file cabinate middle drawer\"\r\n\r\ndef saveText(msg:str):\r\n    print(\"\\nSEARCH RESULTS FILER !!!!\\n\",msg,\"\\n\")\r\n    try:\r\n        with open(\"/tmp/file_name.txt\", 'w') as file:\r\n            file.write(msg)\r\n        #print(f\"Successfully written\")\r\n        return f\"{msg}Information saved to thai.txt\"\r\n    except Exception as e:\r\n        print(f\"An error occurred: {e}\")\r\n\r\n#serpapi = SerpAPIWrapper()\r\nserpapi = DuckDuckGoSearchRun()\r\nsearch = Tool(\r\n       name=\"Search\",\r\n       func=serpapi.run,\r\n       description=\"Use to search for current events\"\r\n)\r\nsave = Tool(\r\n     name=\"Save Text\",\r\n     func= saveText,\r\n     description=\"used to save results of human request. File name will be created\"\r\n)\r\n#tool_names = [\"serpapi\"]\r\n#tools = load_tools(tool_names,search_filer)\r\ningestFile = Tool(\r\n        name=\"Ingest-Save file\",\r\n        func= ingestFile,\r\n        description=\"Used to store/ingest file in virtual file cabinet\"\r\n)\r\ntools = [search,save,ingestFile]\r\ntype(tools)\r\n\r\n\r\n    \r\nchat = ChatOpenAI(\r\n    #openai_api_key=OPENAI_API_KEY,\r\n    temperature=0,\r\n    #model='gpt-3.5-turbo'\r\n    #prompt=TEST_PROMPT,\r\n    model='gpt-4'\r\n)\r\nmemory = ConversationBufferWindowMemory(\r\n    memory_key='chat_history',\r\n    k=20,\r\n    return_messages=True\r\n)\r\n\r\nagent = initialize_agent(tools, chat,\r\n                          #iagent=\"zero-shot-react-description\",\r\n                          agent='chat-conversational-react-description',\r\n                          max_interations=5,\r\n                          #output_parser=output_parser,\r\n                          verbose=True,\r\n                          max_iterations=3,\r\n                          early_stopping_method='generate',\r\n                          memory=memory)\r\neaes = agent(messages)\r\n#res =agent(O\"List 5 Thai resturants in San Franciso.\")\r\n#res = agent(messages)\r\nprint(res['output'])\r\nres =agent(\"What time is it in London\")\r\nprint(res['output'])\r\nres =agent(\"Save the last  TWO LAST ANSWERS PROVIDEDi. Format answer First Answer: Second Answer:\")\r\nprint(\"RESULTS OF LAST TWO\\n\",res['output'])\r\nprint(\"\\n\")\r\nres =agent(\"Ingest the file nih.pdf\")\r\nprint(res['output'])\r\nres=agent(\"your state is now set to ready to analyze data\")\r\nprint(res['output'])\r\nres=agent(\"What is your current state\")\r\nprint(res['output'])\n\n### Expected behavior\n\nNot to crash and return with message saved.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5734/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5734/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5733",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5733/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5733/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5733/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5733",
        "id": 1741897933,
        "node_id": "PR_kwDOIPDwls5SM4PY",
        "number": 5733,
        "title": "nc/load",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-05T14:22:45Z",
        "updated_at": "2023-06-11T22:51:29Z",
        "closed_at": "2023-06-11T22:51:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5733",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5733",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5733.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5733.patch",
            "merged_at": "2023-06-11T22:51:28Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5733/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5733/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5731",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5731/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5731/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5731/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5731",
        "id": 1741874056,
        "node_id": "PR_kwDOIPDwls5SMzB5",
        "number": 5731,
        "title": "Error in documentation: Chroma constructor",
        "user": {
            "login": "gbrian",
            "id": 767180,
            "node_id": "MDQ6VXNlcjc2NzE4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/767180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gbrian",
            "html_url": "https://github.com/gbrian",
            "followers_url": "https://api.github.com/users/gbrian/followers",
            "following_url": "https://api.github.com/users/gbrian/following{/other_user}",
            "gists_url": "https://api.github.com/users/gbrian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gbrian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gbrian/subscriptions",
            "organizations_url": "https://api.github.com/users/gbrian/orgs",
            "repos_url": "https://api.github.com/users/gbrian/repos",
            "events_url": "https://api.github.com/users/gbrian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gbrian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T14:09:26Z",
        "updated_at": "2023-06-05T20:30:58Z",
        "closed_at": "2023-06-05T20:30:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5731",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5731",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5731.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5731.patch",
            "merged_at": "2023-06-05T20:30:58Z"
        },
        "body": "Chroma(\"langchain_store\", embeddings.embed_query) must be Chroma(\"langchain_store\", embeddings)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5731/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5731/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5729",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5729/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5729/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5729/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5729",
        "id": 1741774247,
        "node_id": "I_kwDOIPDwls5n0V2n",
        "number": 5729,
        "title": "AttributeError: 'GPT4All' object has no attribute 'model_type'",
        "user": {
            "login": "bernarde01",
            "id": 38493683,
            "node_id": "MDQ6VXNlcjM4NDkzNjgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/38493683?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bernarde01",
            "html_url": "https://github.com/bernarde01",
            "followers_url": "https://api.github.com/users/bernarde01/followers",
            "following_url": "https://api.github.com/users/bernarde01/following{/other_user}",
            "gists_url": "https://api.github.com/users/bernarde01/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bernarde01/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bernarde01/subscriptions",
            "organizations_url": "https://api.github.com/users/bernarde01/orgs",
            "repos_url": "https://api.github.com/users/bernarde01/repos",
            "events_url": "https://api.github.com/users/bernarde01/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bernarde01/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-05T13:20:31Z",
        "updated_at": "2023-09-18T16:09:19Z",
        "closed_at": "2023-09-18T16:09:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nrun on docker image with continuumio/miniconda3 on linux\r\nlangchain-0.0.190 installed\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [x] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nFollow the steps here: https://python.langchain.com/en/latest/modules/models/llms/integrations/gpt4all.html\r\n\r\n```\r\n%pip install gpt4all > /dev/null\r\nfrom langchain import PromptTemplate, LLMChain\r\nfrom langchain.llms import GPT4All\r\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\n\r\ntemplate = \"\"\"Question: {question}\r\n\r\nAnswer: Let's think step by step.\"\"\"\r\n\r\nprompt = PromptTemplate(template=template, input_variables=[\"question\"])\r\n\r\nlocal_path = './models/ggml-gpt4all-l13b-snoozy.bin'  # replace with your desired local file path\r\n\r\nimport requests\r\n\r\nfrom pathlib import Path\r\nfrom tqdm import tqdm\r\n\r\nPath(local_path).parent.mkdir(parents=True, exist_ok=True)\r\n\r\n# Example model. Check https://github.com/nomic-ai/gpt4all for the latest models.\r\nurl = 'http://gpt4all.io/models/ggml-gpt4all-l13b-snoozy.bin'\r\n\r\n# send a GET request to the URL to download the file. Stream since it's large\r\nresponse = requests.get(url, stream=True)\r\n\r\n# open the file in binary mode and write the contents of the response to it in chunks\r\n# This is a large file, so be prepared to wait.\r\nwith open(local_path, 'wb') as f:\r\n    for chunk in tqdm(response.iter_content(chunk_size=8192)):\r\n        if chunk:\r\n            f.write(chunk)\r\n\r\n# Callbacks support token-wise streaming\r\ncallbacks = [StreamingStdOutCallbackHandler()]\r\n# Verbose is required to pass to the callback manager\r\nllm = GPT4All(model=local_path, callbacks=callbacks, verbose=True)\r\n```\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nThe expected behavior: code returns a GPT4All object.\r\n\r\nThe following error was produced:\r\n```\r\nAttributeError                            Traceback (most recent call last)\r\nCell In[9], line 4\r\n      2 callbacks = [StreamingStdOutCallbackHandler()]\r\n      3 # Verbose is required to pass to the callback manager\r\n----> 4 llm = GPT4All(model=local_path, callbacks=callbacks, verbose=True)\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/pydantic/main.py:339, in pydantic.main.BaseModel.__init__()\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/pydantic/main.py:1102, in pydantic.main.validate_model()\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/langchain/llms/gpt4all.py:156, in GPT4All.validate_environment(cls, values)\r\n    153 if values[\"n_threads\"] is not None:\r\n    154     # set n_threads\r\n    155     values[\"client\"].model.set_thread_count(values[\"n_threads\"])\r\n--> 156 values[\"backend\"] = values[\"client\"].model_type\r\n    158 return values\r\n\r\nAttributeError: 'GPT4All' object has no attribute 'model_type'\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5729/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5729/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5728",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5728/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5728/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5728/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5728",
        "id": 1741763135,
        "node_id": "PR_kwDOIPDwls5SMakk",
        "number": 5728,
        "title": "Strips whitespace and \\n from loc before filtering urls from sitemap",
        "user": {
            "login": "ShelbyJenkins",
            "id": 47464908,
            "node_id": "MDQ6VXNlcjQ3NDY0OTA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47464908?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShelbyJenkins",
            "html_url": "https://github.com/ShelbyJenkins",
            "followers_url": "https://api.github.com/users/ShelbyJenkins/followers",
            "following_url": "https://api.github.com/users/ShelbyJenkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShelbyJenkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShelbyJenkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShelbyJenkins/subscriptions",
            "organizations_url": "https://api.github.com/users/ShelbyJenkins/orgs",
            "repos_url": "https://api.github.com/users/ShelbyJenkins/repos",
            "events_url": "https://api.github.com/users/ShelbyJenkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShelbyJenkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T13:15:09Z",
        "updated_at": "2023-06-05T23:33:56Z",
        "closed_at": "2023-06-05T23:33:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5728",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5728",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5728.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5728.patch",
            "merged_at": "2023-06-05T23:33:56Z"
        },
        "body": "Fixes #5699 \r\n\r\n\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n@woodworker @LeSphax @johannhartmann \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5728/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5728/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5727",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5727/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5727/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5727/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5727",
        "id": 1741743546,
        "node_id": "PR_kwDOIPDwls5SMWSr",
        "number": 5727,
        "title": "Add Hologres data warehouse as vectorstore",
        "user": {
            "login": "zcgeng",
            "id": 13724617,
            "node_id": "MDQ6VXNlcjEzNzI0NjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/13724617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zcgeng",
            "html_url": "https://github.com/zcgeng",
            "followers_url": "https://api.github.com/users/zcgeng/followers",
            "following_url": "https://api.github.com/users/zcgeng/following{/other_user}",
            "gists_url": "https://api.github.com/users/zcgeng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zcgeng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zcgeng/subscriptions",
            "organizations_url": "https://api.github.com/users/zcgeng/orgs",
            "repos_url": "https://api.github.com/users/zcgeng/repos",
            "events_url": "https://api.github.com/users/zcgeng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zcgeng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-05T13:05:12Z",
        "updated_at": "2023-06-11T20:36:56Z",
        "closed_at": "2023-06-11T20:36:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5727",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5727",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5727.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5727.patch",
            "merged_at": "2023-06-11T20:36:56Z"
        },
        "body": "Hi,\r\n\r\nThis PR adds a new vector store: [Hologres](https://www.alibabacloud.com/help/en/hologres/latest/introduction)\r\n\r\nHologres is a product of the Alibaba Cloud Computing platform. It's a fast cloud-native data warehouse that also supports high-performance vector searching.\r\nThe example use case of Hologres is already accepted by openai-cookbook. We are actively integrating our product with outstanding open-source works and we believe langchain is a great work that has a bright future. We would appreciate it if this PR can be reviewed and accepted.\r\n\r\nWe followed the contribution guidelines, and added unit tests and a notebook example.\r\nThe code has passed the format and lint checks.\r\n\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n\r\n  - \r\n\r\n -->\r\n  VectorStores / Retrievers / Memory\r\n@dev2049\r\n\r\n\r\n---\r\nBest,\r\nChanggeng\r\nDeveloper of Hologres",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5727/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5727/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5726",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5726/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5726/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5726/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5726",
        "id": 1741740806,
        "node_id": "I_kwDOIPDwls5n0NsG",
        "number": 5726,
        "title": "Issue: Correctness of generated SQL queries",
        "user": {
            "login": "saswat0",
            "id": 32325136,
            "node_id": "MDQ6VXNlcjMyMzI1MTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/32325136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saswat0",
            "html_url": "https://github.com/saswat0",
            "followers_url": "https://api.github.com/users/saswat0/followers",
            "following_url": "https://api.github.com/users/saswat0/following{/other_user}",
            "gists_url": "https://api.github.com/users/saswat0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saswat0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saswat0/subscriptions",
            "organizations_url": "https://api.github.com/users/saswat0/orgs",
            "repos_url": "https://api.github.com/users/saswat0/repos",
            "events_url": "https://api.github.com/users/saswat0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saswat0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-05T13:04:04Z",
        "updated_at": "2023-10-05T16:09:31Z",
        "closed_at": "2023-10-05T16:09:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI have a huge database hosted in BigQuery. The recommended approach to querying this via natural language is using agents. However, this diminishes the control I have over the intermediate steps, and that leads to many problems.\r\n- The generated query isn't correct, and this cannot be reinforced at any intermediate step\r\n- Clauses like \"ORDER BY\" brings _NULL_ to the top, and no amount of prompt engineering can retrieve the top non-null value\r\n\r\nAre there any workarounds for this? Or is there any other approach recommended for handling databases of this scale?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5726/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5726/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    }
]