[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7588",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7588/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7588/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7588/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7588",
        "id": 1886656494,
        "node_id": "PR_kwDOIWuq585Z0rY-",
        "number": 7588,
        "title": "Remove newlines from OpenAI embeddings again",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-07T22:53:22Z",
        "updated_at": "2023-09-07T23:32:50Z",
        "closed_at": "2023-09-07T23:32:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7588",
            "html_url": "https://github.com/run-llama/llama_index/pull/7588",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7588.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7588.patch",
            "merged_at": "2023-09-07T23:32:50Z"
        },
        "body": "# Description\r\n\r\nSome initial testing is showing that this change was actually hurting embeddings and retrieval. Removing newlines seems like the right thing to do, at least right now.\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7588/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7588/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7587",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7587/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7587/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7587/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7587",
        "id": 1886607948,
        "node_id": "I_kwDOIWuq585wc1pM",
        "number": 7587,
        "title": "[Feature Request]: LLMs without function calling (e.g. Llama 2) doesn't work out of the box with JSON Query Engine",
        "user": {
            "login": "weilintuye95",
            "id": 12366468,
            "node_id": "MDQ6VXNlcjEyMzY2NDY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12366468?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/weilintuye95",
            "html_url": "https://github.com/weilintuye95",
            "followers_url": "https://api.github.com/users/weilintuye95/followers",
            "following_url": "https://api.github.com/users/weilintuye95/following{/other_user}",
            "gists_url": "https://api.github.com/users/weilintuye95/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/weilintuye95/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/weilintuye95/subscriptions",
            "organizations_url": "https://api.github.com/users/weilintuye95/orgs",
            "repos_url": "https://api.github.com/users/weilintuye95/repos",
            "events_url": "https://api.github.com/users/weilintuye95/events{/privacy}",
            "received_events_url": "https://api.github.com/users/weilintuye95/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-07T21:56:38Z",
        "updated_at": "2023-11-22T18:56:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nCreate a thin wrapper around [`json_path_response_str`](https://github.com/jerryjliu/llama_index/blob/644c034a249fa359181f8ebe988b8c2b93401814/llama_index/indices/struct_store/json_query.py#L105) to either:\r\n1) help user parse the .predict() output to extract the json path \r\n2) or raise a less cryptic error about the LLM output being wrongly formatted.\r\n\r\nThe fix could also go within the function `default_output_processor`: https://github.com/jerryjliu/llama_index/blob/644c034a249fa359181f8ebe988b8c2b93401814/llama_index/indices/struct_store/json_query.py#L48 #\r\n\r\n### Reason\r\n\r\nI'm getting an error trying to use Llama 2 + JSON Query Engine (running the example here with pretty much everything the same except service_context where I use my Llama 2 pipeline https://gpt-index.readthedocs.io/en/latest/examples/query_engine/json_query_engine.html).\r\nThe error looks something like `Exception: Parse error at 1:4 near token` which hints that there is some parsing issue somewhere.\r\n\r\nLooking at the source code, it's because Llama 2 doesn't have function calling and [this line](https://github.com/jerryjliu/llama_index/blob/644c034a249fa359181f8ebe988b8c2b93401814/llama_index/indices/struct_store/json_query.py#L105) uses the LLM to create json_path_response_str (which should be a jsonpath query). \r\n\r\nWithout function calling, Llama 2 is returning a long string, which means Llama Index will error out with a not-too-useful exception. Users need to be aware of this issue before they realize that it can be tackled by creating new output_processor to make their LLM output concise (even this doesn't always work)\r\n\r\n### Value of Feature\r\n\r\nMake it clearer for users to troubleshoot their errors when using JSON Query Engine or just help them deal with the issue directly (maybe regex?)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7587/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7587/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7586",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7586/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7586/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7586/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7586",
        "id": 1886550052,
        "node_id": "PR_kwDOIWuq585Z0UV5",
        "number": 7586,
        "title": "Improve usability of `NodeWithScore`",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-07T20:52:31Z",
        "updated_at": "2023-09-07T23:05:19Z",
        "closed_at": "2023-09-07T23:05:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7586",
            "html_url": "https://github.com/run-llama/llama_index/pull/7586",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7586.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7586.patch",
            "merged_at": "2023-09-07T23:05:18Z"
        },
        "body": "# Description\r\n\r\n1. Add pass passthrough methods to access underlying `BaseNode`\r\n```\r\nnode.text / node.get_text() / node.get_content()\r\nnode.node_id / node.id_\r\nnode.embedding / node.get_embedding()\r\nnode.metadata \r\n```\r\n\r\n\r\n\r\n3. Make default `__str__` prettier (for BaseNode, NodeWithScore, Document)\r\n\r\n```python\r\nfor node in response.source_nodes:\r\n    print(node)\r\n```\r\n\r\n```\r\nNode ID: 5f589d5f-8509-45d9-93b2-bfeccb2eb245\r\nText: That seemed unnatural to me, and on this point the rest of the\r\nworld is coming around to my way of thinking, but at the time it\r\ncaused a lot of friction.Toward the end of the year I spent much of my\r\ntime surreptitiously working on On Lisp, which I had by this time\r\ngotten a contract to publish.The good part was that I got paid huge\r\namounts of mon...\r\nScore:  0.818\r\n\r\nNode ID: c7a2031d-f37e-4136-b3af-5caa53506e03\r\nText: There, right on the wall, was something you could make that\r\nwould last.Paintings didn't become obsolete.Some of the best ones were\r\nhundreds of years old.And moreover this was something you could make a\r\nliving doing.Not as easily as you could by writing software, of\r\ncourse, but I thought if you were really industrious and lived really\r\ncheaply, it...\r\nScore:  0.818\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7586/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7586/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7585",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7585/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7585/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7585/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7585",
        "id": 1886523833,
        "node_id": "PR_kwDOIWuq585Z0OtG",
        "number": 7585,
        "title": "Fix query_wrapper_prompt in llm predictor",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-07T20:28:29Z",
        "updated_at": "2023-09-07T20:59:18Z",
        "closed_at": "2023-09-07T20:59:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7585",
            "html_url": "https://github.com/run-llama/llama_index/pull/7585",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7585.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7585.patch",
            "merged_at": "2023-09-07T20:59:17Z"
        },
        "body": "# Description\r\n\r\nSmall bug fix for an un-declared variable in LLM Predictor\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7585/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7585/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7584",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7584/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7584/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7584/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7584",
        "id": 1886514766,
        "node_id": "PR_kwDOIWuq585Z0MvT",
        "number": 7584,
        "title": "Elasticsearch: update documentation to include filtering / overriding query example",
        "user": {
            "login": "joemcelroy",
            "id": 49480,
            "node_id": "MDQ6VXNlcjQ5NDgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/49480?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joemcelroy",
            "html_url": "https://github.com/joemcelroy",
            "followers_url": "https://api.github.com/users/joemcelroy/followers",
            "following_url": "https://api.github.com/users/joemcelroy/following{/other_user}",
            "gists_url": "https://api.github.com/users/joemcelroy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joemcelroy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joemcelroy/subscriptions",
            "organizations_url": "https://api.github.com/users/joemcelroy/orgs",
            "repos_url": "https://api.github.com/users/joemcelroy/repos",
            "events_url": "https://api.github.com/users/joemcelroy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joemcelroy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-07T20:20:39Z",
        "updated_at": "2023-09-07T21:22:40Z",
        "closed_at": "2023-09-07T21:22:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7584",
            "html_url": "https://github.com/run-llama/llama_index/pull/7584",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7584.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7584.patch",
            "merged_at": "2023-09-07T21:22:40Z"
        },
        "body": "Updates Elasticsearch documentation to include how to apply custom elasticsearch filtering and using the custom_query to override the default query retriever. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7584/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7584/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7583",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7583/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7583/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7583/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7583",
        "id": 1886272858,
        "node_id": "I_kwDOIWuq585wbj1a",
        "number": 7583,
        "title": "[Question]: nl2graphquery.",
        "user": {
            "login": "yashdeepyds",
            "id": 31975772,
            "node_id": "MDQ6VXNlcjMxOTc1Nzcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/31975772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yashdeepyds",
            "html_url": "https://github.com/yashdeepyds",
            "followers_url": "https://api.github.com/users/yashdeepyds/followers",
            "following_url": "https://api.github.com/users/yashdeepyds/following{/other_user}",
            "gists_url": "https://api.github.com/users/yashdeepyds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yashdeepyds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yashdeepyds/subscriptions",
            "organizations_url": "https://api.github.com/users/yashdeepyds/orgs",
            "repos_url": "https://api.github.com/users/yashdeepyds/repos",
            "events_url": "https://api.github.com/users/yashdeepyds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yashdeepyds/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-07T16:57:01Z",
        "updated_at": "2023-10-24T06:31:14Z",
        "closed_at": "2023-10-24T06:31:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n@wey-gu \r\nWhile using the nl2graphquery i am getting this error. For the context i havent index anything but this nl2graphquery suppose to give the answer from the knowledge graph itself or do I need to index some document for reference. Please help to find the solution\r\n\r\nParam: {}Error message: Error found in optimization stage: IndexNotFound: No valid index found\r\nThanks. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7583/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7583/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7582",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7582/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7582/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7582/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7582",
        "id": 1885925560,
        "node_id": "I_kwDOIWuq585waPC4",
        "number": 7582,
        "title": "[Bug]: SubQuery Engine parsing error",
        "user": {
            "login": "ddealwis09",
            "id": 115846150,
            "node_id": "U_kgDOBuesBg",
            "avatar_url": "https://avatars.githubusercontent.com/u/115846150?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ddealwis09",
            "html_url": "https://github.com/ddealwis09",
            "followers_url": "https://api.github.com/users/ddealwis09/followers",
            "following_url": "https://api.github.com/users/ddealwis09/following{/other_user}",
            "gists_url": "https://api.github.com/users/ddealwis09/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ddealwis09/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ddealwis09/subscriptions",
            "organizations_url": "https://api.github.com/users/ddealwis09/orgs",
            "repos_url": "https://api.github.com/users/ddealwis09/repos",
            "events_url": "https://api.github.com/users/ddealwis09/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ddealwis09/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-07T13:41:39Z",
        "updated_at": "2023-09-07T15:31:25Z",
        "closed_at": "2023-09-07T15:31:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI am getting a parsing error when using the SubQuestionQueryEngine.\r\n\r\nllama_index.output_parsers.base.OutputParserException: Got invalid JSON object. Error: Extra data: line 11 column 1 (char 247) while scanning for the next token\r\nfound character '`' that cannot start any token\r\n  in \"<unicode string>\", line 11, column 1:\r\n    ```\r\n    ^. Got JSON string: [\r\n    {\r\n        \"sub_question\": \"What are the research methods used in Iran\",\r\n        \"tool_name\": \"iran_research\"\r\n    },\r\n    {\r\n        \"sub_question\": \"What are the research methods used in Poland\",\r\n        \"tool_name\": \"poland_research\"\r\n    }\r\n]\r\n```\n\n### Version\n\n0.8.21\n\n### Steps to Reproduce\n\nfunction used to generate error:\r\n\r\ndef compare_contrast(doc1:Document, doc1name: str, doc1desc:str, \r\n                     doc2: Document, doc2name: str, doc2desc: str, \r\n                     query: str):\r\n    \"\"\"\r\n    desc: \r\n        generates compare and contrast response\r\n\r\n    args: \r\n        doc1: a file upload from st.file_uploader()\r\n        doc1name: a name for doc1\r\n        doc1desc: a short description of doc1\r\n        doc2: a file upload from st.file_uploader() \r\n        doc2name: a name for doc2\r\n        docdesc2: a short description of doc2\r\n        query: a user query\r\n\r\n    return: \r\n        a compare and contrast agent response based on user query\r\n    \"\"\"\r\n    #Azure embeddings\r\n    embedding_llm = LangchainEmbedding(\r\n                    OpenAIEmbeddings(\r\n                        model=\"text-embedding-ada-002\",\r\n                        deployment=\"text-embedding-ada-002\",\r\n                    ),\r\n                    embed_batch_size=1,\r\n                )\r\n\r\n    embeddings = OpenAIEmbeddings(deployment=\"text-embedding-ada-002\", \r\n                                  engine=\"text-embedding-ada-002\", \r\n                                  chunk_size=1)\r\n\r\n    # Completion model\r\n    llm_completion = AzureOpenAI(\r\n        model=\"gpt-35-turbo1\",\r\n        engine=\"text-davinci-003\"\r\n    )\r\n        \r\n    # Chat Model\r\n    llm_chat = AzureChatOpenAI(deployment_name=\"gpt-35-turbo1\", \r\n                                temperature=0, \r\n                                openai_api_version=\"2023-03-15-preview\") \r\n\r\n    llm_completion = AzureOpenAI(deployment_name=\"gpt-35-turbo1\", \r\n                                    model_name=\"text-davinci-003\")\r\n    \r\n    #llm_predictor = LLMPredictor(llm=llm_completion)\r\n\r\n    # service context\r\n    service_context = ServiceContext.from_defaults(llm=llm_completion,\r\n                                                    embed_model=embedding_llm) \r\n                                                    \r\n    # create documents\r\n    doc1 = create_document(doc1)\r\n    doc2 = create_document(doc2) \r\n\r\n    # indexes for each documnet\r\n    doc1_index = VectorStoreIndex.from_documents(documents=doc1, service_context=service_context)\r\n    doc2_index = VectorStoreIndex.from_documents(documents=doc2, service_context=service_context)\r\n\r\n    # query engines for each document\r\n    doc1_engine = doc1_index.as_query_engine(similarity_top_k=5)\r\n    doc2_engine = doc2_index.as_query_engine(similarity_top_k=5)\r\n\r\n    # tools\r\n    query_engine_tools = [\r\n        QueryEngineTool(\r\n            query_engine=doc1_engine,\r\n            metadata=ToolMetadata(\r\n                name=doc1name,\r\n                description=doc1desc,\r\n            ),\r\n        ),\r\n        QueryEngineTool(\r\n            query_engine=doc2_engine,\r\n            metadata=ToolMetadata(\r\n                name=doc2name,\r\n                description=doc2desc,\r\n            ),\r\n        ),\r\n    ]\r\n\r\n    # subquery engine\r\n    s_engine = SubQuestionQueryEngine.from_defaults(query_engine_tools=query_engine_tools, \r\n                                                    service_context=service_context)\r\n\r\n    # # response\r\n    response = s_engine.query(query)\r\n\r\n    return response.response\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7582/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7582/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7581",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7581/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7581/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7581/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7581",
        "id": 1885647241,
        "node_id": "I_kwDOIWuq585wZLGJ",
        "number": 7581,
        "title": "[Question]: Is it possible to answer the question based on the selected document?",
        "user": {
            "login": "iriye",
            "id": 47598555,
            "node_id": "MDQ6VXNlcjQ3NTk4NTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/47598555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iriye",
            "html_url": "https://github.com/iriye",
            "followers_url": "https://api.github.com/users/iriye/followers",
            "following_url": "https://api.github.com/users/iriye/following{/other_user}",
            "gists_url": "https://api.github.com/users/iriye/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iriye/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iriye/subscriptions",
            "organizations_url": "https://api.github.com/users/iriye/orgs",
            "repos_url": "https://api.github.com/users/iriye/repos",
            "events_url": "https://api.github.com/users/iriye/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iriye/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-07T10:50:16Z",
        "updated_at": "2023-09-22T15:38:15Z",
        "closed_at": "2023-09-22T15:38:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nWhen create VectorStore using multiple documents that change from year to year keys same all documents but value change each year, for example old in first document 20 second 21, how to answer question based on spesific document?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7581/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7581/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7580",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7580/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7580/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7580/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7580",
        "id": 1885283665,
        "node_id": "I_kwDOIWuq585wXyVR",
        "number": 7580,
        "title": "[Question]: \"How can I create separate lists for each line in the documents from json file instead of having the entire JSON content in a single text using a JsonReader?\"",
        "user": {
            "login": "iriye",
            "id": 47598555,
            "node_id": "MDQ6VXNlcjQ3NTk4NTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/47598555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iriye",
            "html_url": "https://github.com/iriye",
            "followers_url": "https://api.github.com/users/iriye/followers",
            "following_url": "https://api.github.com/users/iriye/following{/other_user}",
            "gists_url": "https://api.github.com/users/iriye/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iriye/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iriye/subscriptions",
            "organizations_url": "https://api.github.com/users/iriye/orgs",
            "repos_url": "https://api.github.com/users/iriye/repos",
            "events_url": "https://api.github.com/users/iriye/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iriye/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-07T07:30:18Z",
        "updated_at": "2023-09-22T15:36:08Z",
        "closed_at": "2023-09-22T15:36:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nExample json files :json file like this\r\n\"parameters\": [\r\n{\r\n\"name\": \"latitude\",\r\n\"in\": \"query\",\r\n\"description\": \"Latitude component of location.\",\r\n\"required\": true,\r\n\"type\": \"number\",\r\n\"format\": \"double\"\r\n},\r\n{\r\n\"name\": \"longitude\",\r\n\"in\": \"query\",\r\n\"description\": \"Longitude component of location.\",\r\n\"required\": true,\r\n\"type\": \"number\",\r\n\"format\": \"double\"\r\n}\r\n],\r\n\r\nI create  Document from this json file using llamaindex JsonReader  like this ;\r\n\r\n[Document(id_='2ce42bf7-090b-41d3-b514-6ca4029f2da5', embedding=None, metadata={}, excluded_embed_metadata_keys=[], excluded_llm_metadata_keys=[], relationships={}, hash='ee70384c03fcdcc1ff9e7b7872fcb5799ec98cdb1dba38b2a14b1a2309a49dca', text=\"['name\": \"latitude\",\r\n\"in\": \"query\",\r\n\"description\": \"Latitude component of location.\",\r\n\"required\": true,\r\n\"type\": \"number\",\r\n\"format\": \"double\" \u2018]\", start_char_idx=None, end_char_idx=None, text_template='{metadata_str}\\n\\n{content}', metadata_template='{key}: {value}', metadata_seperator='\\n'), Document(id_='86f2bded-8f64-42e4-8fe1-4ec27ed969ad', embedding=None, metadata={}, excluded_embed_metadata_keys=[], excluded_llm_metadata_keys=[], relationships={}, hash='a339925ab38da38d7c7720fe0539bdfd59f784750bb9899947c7edd5abe143ac', text=\"[\"name\": \"longitude\",\r\n\"in\": \"query\",\r\n\"description\": \"Longitude component of location.\",\r\n\"required\": true,\r\n\"type\": \"number\",\r\n\"format\": \"double\"]\", start_char_idx=None, end_char_idx=None, text_template='{metadata_str}\\n\\n{content}', metadata_template='{key}: {value}', metadata_seperator='\\n')]\r\n\r\nJsonReader create Document object all squence one text value, I want to each row of json file seperate Document ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7580/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7580/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7579",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7579/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7579/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7579/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7579",
        "id": 1885190783,
        "node_id": "I_kwDOIWuq585wXbp_",
        "number": 7579,
        "title": "[Question]: How to seperate each line documents object list created JsonReder?",
        "user": {
            "login": "iriye",
            "id": 47598555,
            "node_id": "MDQ6VXNlcjQ3NTk4NTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/47598555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iriye",
            "html_url": "https://github.com/iriye",
            "followers_url": "https://api.github.com/users/iriye/followers",
            "following_url": "https://api.github.com/users/iriye/following{/other_user}",
            "gists_url": "https://api.github.com/users/iriye/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iriye/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iriye/subscriptions",
            "organizations_url": "https://api.github.com/users/iriye/orgs",
            "repos_url": "https://api.github.com/users/iriye/repos",
            "events_url": "https://api.github.com/users/iriye/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iriye/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-07T06:20:28Z",
        "updated_at": "2023-09-07T17:41:00Z",
        "closed_at": "2023-09-07T17:41:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n\"How can I create separate lists for each line in the documents from json file  instead of having the entire JSON content in a single text using a JsonReader?\"\r\n\r\n Example json files :json file like this \r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"latitude\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Latitude component of location.\",\r\n            \"required\": true,\r\n            \"type\": \"number\",\r\n            \"format\": \"double\"\r\n          },\r\n          {\r\n            \"name\": \"longitude\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Longitude component of location.\",\r\n            \"required\": true,\r\n            \"type\": \"number\",\r\n            \"format\": \"double\"\r\n          }\r\n        ],\r\n ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7579/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7579/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7578",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7578/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7578/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7578/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7578",
        "id": 1885013549,
        "node_id": "I_kwDOIWuq585wWwYt",
        "number": 7578,
        "title": "How to use LinearAdapterEmbeddingModel in langchain ",
        "user": {
            "login": "pribadihcr",
            "id": 13068286,
            "node_id": "MDQ6VXNlcjEzMDY4Mjg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13068286?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pribadihcr",
            "html_url": "https://github.com/pribadihcr",
            "followers_url": "https://api.github.com/users/pribadihcr/followers",
            "following_url": "https://api.github.com/users/pribadihcr/following{/other_user}",
            "gists_url": "https://api.github.com/users/pribadihcr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pribadihcr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pribadihcr/subscriptions",
            "organizations_url": "https://api.github.com/users/pribadihcr/orgs",
            "repos_url": "https://api.github.com/users/pribadihcr/repos",
            "events_url": "https://api.github.com/users/pribadihcr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pribadihcr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-07T02:32:08Z",
        "updated_at": "2023-09-07T03:31:28Z",
        "closed_at": "2023-09-07T03:31:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi, I was finetuned the embedding linear adapter. \r\nHow to use LinearAdapterEmbeddingModel in langchain ? Thanks",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7578/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7578/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7577",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7577/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7577/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7577/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7577",
        "id": 1884940555,
        "node_id": "PR_kwDOIWuq585Zu3VA",
        "number": 7577,
        "title": "Clean up vector store interface to use `BaseNode` instead of `NodeWithEmbedding`",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-07T01:00:59Z",
        "updated_at": "2023-09-08T00:07:17Z",
        "closed_at": "2023-09-08T00:07:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7577",
            "html_url": "https://github.com/run-llama/llama_index/pull/7577",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7577.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7577.patch",
            "merged_at": "2023-09-08T00:07:16Z"
        },
        "body": "# Description\r\n\r\nClean up vector store interface to use `BaseNode` instead of `NodeWithEmbedding`\r\n\r\n```\r\nclass VectorStore(Protocol):\r\n    ...\r\n\r\n    def add(\r\n        self,\r\n        nodes: List[BaseNode],\r\n    ) -> List[str]:\r\n        \"\"\"Add nodes with embedding to vector store.\"\"\"\r\n        ...\r\n\r\n```\r\nEmbeddings are now always stored in the `BaseNode` object in a consistent way.\r\n\r\n# Impact\r\nThis should be a no-op change. Minimally impacting users who are directly operating on `VectorStore` and constructing their own `NodeWithEmbedding` objects.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7577/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7577/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7576",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7576/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7576/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7576/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7576",
        "id": 1884808569,
        "node_id": "PR_kwDOIWuq585ZubiQ",
        "number": 7576,
        "title": "inherit prompt helper from global context",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-06T21:53:08Z",
        "updated_at": "2023-09-06T22:42:14Z",
        "closed_at": "2023-09-06T22:42:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7576",
            "html_url": "https://github.com/run-llama/llama_index/pull/7576",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7576.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7576.patch",
            "merged_at": "2023-09-06T22:42:13Z"
        },
        "body": "# Description\r\n\r\nAny changes to the prompt helper were not being respected in the global service context\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7576/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7576/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7575",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7575/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7575/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7575/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7575",
        "id": 1884781115,
        "node_id": "I_kwDOIWuq585wV3o7",
        "number": 7575,
        "title": "[Question]: Persisting (and loading) index from Neo4j",
        "user": {
            "login": "kylemassimilian",
            "id": 31603204,
            "node_id": "MDQ6VXNlcjMxNjAzMjA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/31603204?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kylemassimilian",
            "html_url": "https://github.com/kylemassimilian",
            "followers_url": "https://api.github.com/users/kylemassimilian/followers",
            "following_url": "https://api.github.com/users/kylemassimilian/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylemassimilian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kylemassimilian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylemassimilian/subscriptions",
            "organizations_url": "https://api.github.com/users/kylemassimilian/orgs",
            "repos_url": "https://api.github.com/users/kylemassimilian/repos",
            "events_url": "https://api.github.com/users/kylemassimilian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kylemassimilian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-06T21:28:03Z",
        "updated_at": "2023-10-24T06:31:12Z",
        "closed_at": "2023-10-24T06:31:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI assume you do not have to persist an index after building it using Neo4J... but how do you load the index in? \r\n\r\n```\r\n`def build_neo4j():\r\n    llm = OpenAI(model=\"gpt-3.5-turbo\", temperature=0.1)\r\n    service_context = ServiceContext.from_defaults(llm=llm)\r\n    documents = SimpleDirectoryReader(\"Data - demo\").load_data()\r\n    \r\n\r\n    graph_store = Neo4jGraphStore(\r\n        username=username,\r\n        password=password,\r\n        url=url,\r\n        database=database,\r\n    )\r\n    storage_context = StorageContext.from_defaults(graph_store=graph_store)\r\n    index = KnowledgeGraphIndex.from_documents(documents, storage_context, max_tiplets_per_chunk=2, show_progress=True)\r\n`\r\n```\r\n\r\nTY",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7575/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7575/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7574",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7574/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7574/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7574/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7574",
        "id": 1884723689,
        "node_id": "PR_kwDOIWuq585ZuI8Y",
        "number": 7574,
        "title": "Add SEC Insights to app_showcase.md",
        "user": {
            "login": "sourabhdesai",
            "id": 3005241,
            "node_id": "MDQ6VXNlcjMwMDUyNDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3005241?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sourabhdesai",
            "html_url": "https://github.com/sourabhdesai",
            "followers_url": "https://api.github.com/users/sourabhdesai/followers",
            "following_url": "https://api.github.com/users/sourabhdesai/following{/other_user}",
            "gists_url": "https://api.github.com/users/sourabhdesai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sourabhdesai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sourabhdesai/subscriptions",
            "organizations_url": "https://api.github.com/users/sourabhdesai/orgs",
            "repos_url": "https://api.github.com/users/sourabhdesai/repos",
            "events_url": "https://api.github.com/users/sourabhdesai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sourabhdesai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-06T20:42:27Z",
        "updated_at": "2023-09-08T00:17:53Z",
        "closed_at": "2023-09-08T00:17:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7574",
            "html_url": "https://github.com/run-llama/llama_index/pull/7574",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7574.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7574.patch",
            "merged_at": "2023-09-08T00:17:53Z"
        },
        "body": "# Description\r\n\r\nAdd SEC Insights to app_showcase.md\r\n\r\n## Type of Change\r\n\r\nDocs update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7574/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7574/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7573",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7573/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7573/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7573/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7573",
        "id": 1884573548,
        "node_id": "I_kwDOIWuq585wVE9s",
        "number": 7573,
        "title": "[Bug]: No existing llama_index.graph_stores.simple found at ixdocs1/kg_demo_index\\graph_store.json. Initializing a new graph_store from scratch",
        "user": {
            "login": "kylemassimilian",
            "id": 31603204,
            "node_id": "MDQ6VXNlcjMxNjAzMjA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/31603204?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kylemassimilian",
            "html_url": "https://github.com/kylemassimilian",
            "followers_url": "https://api.github.com/users/kylemassimilian/followers",
            "following_url": "https://api.github.com/users/kylemassimilian/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylemassimilian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kylemassimilian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylemassimilian/subscriptions",
            "organizations_url": "https://api.github.com/users/kylemassimilian/orgs",
            "repos_url": "https://api.github.com/users/kylemassimilian/repos",
            "events_url": "https://api.github.com/users/kylemassimilian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kylemassimilian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-06T18:52:17Z",
        "updated_at": "2023-09-26T02:37:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nI am trying to use a graph store in the retrieval + query phase of my script, but every time I call my query function, I get the following message:\r\n\r\n```\r\n`WARNING:llama_index.graph_stores.simple:No existing llama_index.graph_stores.simple found at ixdocs1/kg_demo_index\\graph_store.json. Initializing a new graph_store from scratch.\r\nNo existing llama_index.graph_stores.simple found at ixdocs1/kg_demo_index\\graph_store.json. Initializing a new graph_store from scratch.\r\nINFO:llama_index.indices.loading:Loading indices with ids: ['demo_kg_index']\r\nLoading indices with ids: ['demo_kg_index']\r\nWARNING:llama_index.indices.knowledge_graph.base:Upgrading previously saved KG index to new storage format.\r\nUpgrading previously saved KG index to new storage format.`\r\n```\r\nthen I receive a message saying to keywords were found, which is puzzling since my nodes have metadata with keywords, and my queries are using exact keywords that are mentioned in my sample docs:\r\n\r\n```\r\n`Querying query engine...\r\nIndex was not constructed with embeddings, skipping embedding usage...                                                                                                    rning' instead\r\nINFO:llama_index.indices.knowledge_graph.retrievers:> No relationships found, returning nodes found by keywords.\r\n> No relationships found, returning nodes found by keywords.\r\nINFO:llama_index.indices.knowledge_graph.retrievers:> No nodes found by keywords, returning empty response.\r\n> No nodes found by keywords, returning empty response.`\r\n```\r\n\r\nI opened my graph_store.json in the s3 bucket and can see it does exist. How can I fix this? Is this an issue with integrating w/ s3?\r\n\r\n\r\n\r\n\r\n### Version\r\n\r\n0.8.21\r\n\r\n### Steps to Reproduce\r\n\r\n```\r\n`def extract_metadata():\r\n    llm = OpenAI(model=\"gpt-3.5-turbo\", temperature=0.1)\r\n    documents = SimpleDirectoryReader(\"Data - demo\").load_data()\r\n\r\n    text_splitter = TokenTextSplitter(separator=\" \", chunk_size=1024, chunk_overlap=128)\r\n    \r\n    metadata_extractor = MetadataExtractor(\r\n      extractors=[\r\n            TitleExtractor(nodes=5, llm=llm),\r\n            QuestionsAnsweredExtractor(questions=3, llm=llm),\r\n            #EntityExtractor(prediction_threshold=0.5, label_entities=False, device=\"cpu\"),\r\n            #SummaryExtractor(summaries=[\"prev\", \"self\"], llm=llm),\r\n            KeywordExtractor(keywords=4, llm=llm),\r\n            #DateExtractor()\r\n            #CustomExtractor()\r\n      ])\r\n      \r\n    node_parser = SimpleNodeParser(\r\n      text_splitter=text_splitter, metadata_extractor=metadata_extractor)\r\n    \r\n    nodes = node_parser.get_nodes_from_documents(documents)\r\n    \r\n    #for node in nodes:\r\n    print(nodes[0].metadata)\r\n    \r\n    # Create a vector store\r\n    service_context = ServiceContext.from_defaults(llm=llm)\r\n\r\n    vector_index = VectorStoreIndex(nodes, service_context=service_context, show_progress=True)\r\n    \r\n    kg_index = KnowledgeGraphIndex(nodes, max_tiplets_per_chunk=2, service_context=service_context,\r\n                                                 show_progress=True)\r\n    \r\n    return kg_index, vector_index\r\n\r\n\r\ndef store_index(kg_index, vector_index):\r\n    \r\n    kg_index.set_index_id(\"demo_kg_index\")\r\n\r\n    kg_index.storage_context.persist(kg_demo_persist_dir, fs=s3)\r\n\r\n    vector_index.set_index_id(\"demo_vector_index\")\r\n\r\n    vector_index.storage_context.persist(vector_demo_persist_dir, fs=s3)\r\n    \r\n    print(\"Demo indices saved to S3 bucket.\")\r\n\r\ndef query_index(query):\r\n       graph_storage_context = StorageContext.from_defaults(persist_dir=kg_demo_persist_dir, fs=s3)\r\n       kg_index = load_index_from_storage(graph_storage_context, \"demo_kg_index\")\r\n       \r\n       vector_storage_context = StorageContext.from_defaults(persist_dir=vector_demo_persist_dir, fs=s3)\r\n       vector_index = load_index_from_storage(vector_storage_context, \"demo_vector_index\")\r\n       vector_retriever = VectorIndexRetriever(index=vector_index)\r\n       kg_retriever = KGTableRetriever(index=kg_index, \r\n                                        retriever_mode=\"keyword\", include_text=False)\r\n       custom_retriever = CustomRetriever(vector_retriever, kg_retriever)\r\n\r\n       service_context = ServiceContext.from_defaults(llm=llm, chunk_size=512)\r\n       \r\n       reponse_synthesizer = get_response_synthesizer(\r\n        service_context=service_context,\r\n        response_mode=\"tree_summarize\")\r\n       \r\n       custom_query_engine = RetrieverQueryEngine(\r\n        retriever=custom_retriever, response_synthesizer=reponse_synthesizer\r\n    )\r\n       kg_query_engine = kg_index.as_query_engine(respone_mode=\"tree_summarize\", include_text=False, retrieve_mode='keyword')\r\n\r\n       vector_query_engine = vector_index.as_query_engine()\r\n\r\n       print(\"Querying query engine...\")\r\n       start_time = time.time()\r\n       \r\n       response = kg_query_engine.query(query)\r\n       #sources = [source_node.node.metadata[\"file_name\"] for source_node in response.source_nodes]\r\n       source_text = [source_nodes.node.get_text() for source_nodes in response.source_nodes]\r\n       \r\n       end_time = time.time()\r\n       execution_time = end_time - start_time\r\n       print(\"Query Time:\", execution_time)\r\n       return response, source_text\r\n\r\n`\r\n```\r\n\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7573/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7573/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7572",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7572/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7572/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7572/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7572",
        "id": 1884392382,
        "node_id": "I_kwDOIWuq585wUYu-",
        "number": 7572,
        "title": "[Question]: How to extract Document Title and Keyword Metadata",
        "user": {
            "login": "kylemassimilian",
            "id": 31603204,
            "node_id": "MDQ6VXNlcjMxNjAzMjA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/31603204?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kylemassimilian",
            "html_url": "https://github.com/kylemassimilian",
            "followers_url": "https://api.github.com/users/kylemassimilian/followers",
            "following_url": "https://api.github.com/users/kylemassimilian/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylemassimilian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kylemassimilian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylemassimilian/subscriptions",
            "organizations_url": "https://api.github.com/users/kylemassimilian/orgs",
            "repos_url": "https://api.github.com/users/kylemassimilian/repos",
            "events_url": "https://api.github.com/users/kylemassimilian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kylemassimilian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-06T16:47:50Z",
        "updated_at": "2023-09-22T15:37:06Z",
        "closed_at": "2023-09-22T15:37:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI'm trying to extract additional metadata from a test set of 10 documents because it has improved my responses on a smaller set of docs. Is there any way to speed up this process or prevent a timeout by extracting in batches? It's very slow, and I would like to do this on thousands of files. \r\n\r\n```\r\n`def extract_metadata():\r\n    llm = OpenAI(model=\"gpt-3.5-turbo\", temperature=0.1)\r\n    documents = SimpleDirectoryReader(\"Data\").load_data()\r\n\r\n    # Useful when dealing w/large docs. Allows for more efficient processing. Also ensures the splitting process respects\r\n    # token boundaries. \r\n    text_splitter = TokenTextSplitter(separator=\" \", chunk_size=1024, chunk_overlap=128)\r\n    \r\n    \r\n    metadata_extractor = MetadataExtractor(\r\n      extractors=[\r\n            TitleExtractor(nodes=5, llm=llm),\r\n            #QuestionsAnsweredExtractor(questions=3, llm=llm),\r\n            #EntityExtractor(prediction_threshold=0.5, label_entities=False, device=\"cpu\"),\r\n            #SummaryExtractor(summaries=[\"prev\", \"self\"], llm=llm),\r\n            KeywordExtractor(keywords=2, llm=llm),\r\n            #DateExtractor()\r\n            #CustomExtractor()\r\n      ])\r\n      \r\n    node_parser = SimpleNodeParser(\r\n      text_splitter=text_splitter, metadata_extractor=metadata_extractor)\r\n    \r\n    nodes = node_parser.get_nodes_from_documents(documents)\r\n    \r\n    #for node in nodes:\r\n    print(nodes[0].metadata)\r\n    \r\n    # Create a vector store\r\n    service_context = ServiceContext.from_defaults(llm=llm)\r\n\r\n    vector_index = VectorStoreIndex(nodes, service_context=service_context, show_progress=True)\r\n    \r\n    kg_index = KnowledgeGraphIndex(nodes, max_tiplets_per_chunk=4, service_context=service_context,\r\n                                                 show_progress=True)\r\n    \r\n    return kg_index, vector_index`\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n```\r\n`WARNING:llama_index.llms.openai_utils:Retrying llama_index.llms.openai_utils.completion_with_retry.<locals>._completion_with_retry in 4.0 seconds as it raised Timeout: Request timed out: HTTPSConnectionPool(host='api.openai.com', port=443): Read timed out. (read timeout=600).\r\nRetrying llama_index.llms.openai_utils.completion_with_retry.<locals>._completion_with_retry in 4.0 seconds as it raised Timeout: Request timed out: HTTPSConnectionPool(host='api.openai.com', port=443): Read timed out. (read timeout=600).`\r\n````WARNING:llama_index.llms.openai_utils:Retrying llama_index.llms.openai_utils.completion_with_retry.<locals>._completion_with_retry in 4.0 seconds as it raised Timeout: Request timed out: HTTPSConnectionPool(host='api.openai.com', port=443): Read timed out. (read timeout=600).\r\nRetrying llama_index.llms.openai_utils.completion_with_retry.<locals>._completion_with_retry in 4.0 seconds as it raised Timeout: Request timed out: HTTPSConnectionPool(host='api.openai.com', port=443): Read timed out. (read timeout=600).`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7572/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7572/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7571",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7571/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7571/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7571/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7571",
        "id": 1884368833,
        "node_id": "PR_kwDOIWuq585Zs7W7",
        "number": 7571,
        "title": "Add max_tokens param in Anyscale LLM to control output",
        "user": {
            "login": "kylehh",
            "id": 24217337,
            "node_id": "MDQ6VXNlcjI0MjE3MzM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/24217337?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kylehh",
            "html_url": "https://github.com/kylehh",
            "followers_url": "https://api.github.com/users/kylehh/followers",
            "following_url": "https://api.github.com/users/kylehh/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylehh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kylehh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylehh/subscriptions",
            "organizations_url": "https://api.github.com/users/kylehh/orgs",
            "repos_url": "https://api.github.com/users/kylehh/repos",
            "events_url": "https://api.github.com/users/kylehh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kylehh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-06T16:31:27Z",
        "updated_at": "2023-09-06T23:25:52Z",
        "closed_at": "2023-09-06T22:26:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7571",
            "html_url": "https://github.com/run-llama/llama_index/pull/7571",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7571.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7571.patch",
            "merged_at": "2023-09-06T22:26:15Z"
        },
        "body": "# Description\r\n\r\nAdd max_tokens param in the Anyscale LLM \r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7571/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7571/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7570",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7570/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7570/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7570/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7570",
        "id": 1884210819,
        "node_id": "PR_kwDOIWuq585ZsY3j",
        "number": 7570,
        "title": "Fix elastic search reader",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-06T15:01:27Z",
        "updated_at": "2023-09-06T15:16:28Z",
        "closed_at": "2023-09-06T15:16:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7570",
            "html_url": "https://github.com/run-llama/llama_index/pull/7570",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7570.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7570.patch",
            "merged_at": "2023-09-06T15:16:27Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7570/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7570/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7569",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7569/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7569/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7569/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7569",
        "id": 1883971636,
        "node_id": "I_kwDOIWuq585wSyA0",
        "number": 7569,
        "title": "[Question]: How to split or seperate nodes Doucment data?",
        "user": {
            "login": "iriye",
            "id": 47598555,
            "node_id": "MDQ6VXNlcjQ3NTk4NTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/47598555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iriye",
            "html_url": "https://github.com/iriye",
            "followers_url": "https://api.github.com/users/iriye/followers",
            "following_url": "https://api.github.com/users/iriye/following{/other_user}",
            "gists_url": "https://api.github.com/users/iriye/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iriye/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iriye/subscriptions",
            "organizations_url": "https://api.github.com/users/iriye/orgs",
            "repos_url": "https://api.github.com/users/iriye/repos",
            "events_url": "https://api.github.com/users/iriye/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iriye/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-06T13:01:44Z",
        "updated_at": "2023-09-07T17:42:35Z",
        "closed_at": "2023-09-07T17:42:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nJSONReader = download_loader(\"JSONReader\")\r\nloader = JSONReader()\r\nindex = VectorStoreIndex.from_documents(documents, service_context=service_context)\r\n when I use this code documents prompt size very big, How to split documents text i or how to seperate nodes?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7569/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7569/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7568",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7568/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7568/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7568/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7568",
        "id": 1883597407,
        "node_id": "PR_kwDOIWuq585ZqTEb",
        "number": 7568,
        "title": "Fix misspelling in llama_2_llama_cpp.ipynb",
        "user": {
            "login": "ValMobYKang",
            "id": 115156261,
            "node_id": "U_kgDOBt0lJQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/115156261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ValMobYKang",
            "html_url": "https://github.com/ValMobYKang",
            "followers_url": "https://api.github.com/users/ValMobYKang/followers",
            "following_url": "https://api.github.com/users/ValMobYKang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ValMobYKang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ValMobYKang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ValMobYKang/subscriptions",
            "organizations_url": "https://api.github.com/users/ValMobYKang/orgs",
            "repos_url": "https://api.github.com/users/ValMobYKang/repos",
            "events_url": "https://api.github.com/users/ValMobYKang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ValMobYKang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-06T09:16:09Z",
        "updated_at": "2023-09-06T15:01:02Z",
        "closed_at": "2023-09-06T15:01:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7568",
            "html_url": "https://github.com/run-llama/llama_index/pull/7568",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7568.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7568.patch",
            "merged_at": "2023-09-06T15:01:02Z"
        },
        "body": "# Description\r\n\r\njust a small misspelling of a word.\r\nIn `llama_2_llama_cpp.ipynb`, `startiing point`->`starting point`. \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Basic English knowledge. \r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have made corresponding changes to the documentation\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7568/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7568/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7567",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7567/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7567/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7567/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7567",
        "id": 1883551121,
        "node_id": "PR_kwDOIWuq585ZqJDF",
        "number": 7567,
        "title": "[version] bump version to 0.8.21",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-06T08:48:13Z",
        "updated_at": "2023-09-06T14:53:02Z",
        "closed_at": "2023-09-06T14:53:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7567",
            "html_url": "https://github.com/run-llama/llama_index/pull/7567",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7567.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7567.patch",
            "merged_at": "2023-09-06T14:53:01Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7567/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7567/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7566",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7566/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7566/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7566/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7566",
        "id": 1883419607,
        "node_id": "I_kwDOIWuq585wQrPX",
        "number": 7566,
        "title": "[Question]: \"How to create a document for VectorStoreIndex for comparative use using multiple JSON files containing information about employees over the years?\"",
        "user": {
            "login": "iriye",
            "id": 47598555,
            "node_id": "MDQ6VXNlcjQ3NTk4NTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/47598555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iriye",
            "html_url": "https://github.com/iriye",
            "followers_url": "https://api.github.com/users/iriye/followers",
            "following_url": "https://api.github.com/users/iriye/following{/other_user}",
            "gists_url": "https://api.github.com/users/iriye/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iriye/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iriye/subscriptions",
            "organizations_url": "https://api.github.com/users/iriye/orgs",
            "repos_url": "https://api.github.com/users/iriye/repos",
            "events_url": "https://api.github.com/users/iriye/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iriye/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-06T07:28:40Z",
        "updated_at": "2023-09-07T17:43:55Z",
        "closed_at": "2023-09-07T17:43:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n\"How to create a document for VectorStoreIndex for comparative use using multiple JSON files containing information about employees over the years?\"\r\nfor example files:  2019_employee.json, 2020_employee.json, 2021_employee.json etc.\r\n\r\nHow to add seperately documents object?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7566/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7566/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7565",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7565/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7565/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7565/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7565",
        "id": 1883401934,
        "node_id": "PR_kwDOIWuq585Zpo0Q",
        "number": 7565,
        "title": "add embedding adapter fine-tuning engine + guide",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-06T07:17:11Z",
        "updated_at": "2023-09-06T08:46:29Z",
        "closed_at": "2023-09-06T08:46:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7565",
            "html_url": "https://github.com/run-llama/llama_index/pull/7565",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7565.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7565.patch",
            "merged_at": "2023-09-06T08:46:28Z"
        },
        "body": "# Description\r\n\r\nThis feature adds an linear adapter finetuning engine. This trains a linear layer on top of query embeddings, while keeping the document embeddings frozen.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7565/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7565/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7564",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7564/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7564/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7564/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7564",
        "id": 1883302249,
        "node_id": "PR_kwDOIWuq585ZpTPR",
        "number": 7564,
        "title": "[SimpleVectorStore] Support metadata filters",
        "user": {
            "login": "ahoenselaar",
            "id": 3757431,
            "node_id": "MDQ6VXNlcjM3NTc0MzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3757431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ahoenselaar",
            "html_url": "https://github.com/ahoenselaar",
            "followers_url": "https://api.github.com/users/ahoenselaar/followers",
            "following_url": "https://api.github.com/users/ahoenselaar/following{/other_user}",
            "gists_url": "https://api.github.com/users/ahoenselaar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ahoenselaar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ahoenselaar/subscriptions",
            "organizations_url": "https://api.github.com/users/ahoenselaar/orgs",
            "repos_url": "https://api.github.com/users/ahoenselaar/repos",
            "events_url": "https://api.github.com/users/ahoenselaar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ahoenselaar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-06T06:06:20Z",
        "updated_at": "2023-09-17T18:10:14Z",
        "closed_at": "2023-09-17T18:10:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7564",
            "html_url": "https://github.com/run-llama/llama_index/pull/7564",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7564.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7564.patch",
            "merged_at": "2023-09-17T18:10:13Z"
        },
        "body": "# Description\r\n\r\nAdds the ability to filter on metadata to `SimpleVectorStore`.\r\n* Persists a node ID to metadata mapping in `SimpleVectorStoreData`.\r\n* Applies metadata filters and node ID restrictions before performing the top-k query.\r\n\r\nFixes #6948 \r\n\r\n## Type of Change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [X] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [X] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n\r\nTests in `test_compose_vector.py` are failing now, likely because of assumptions about how the node in the query response in represented in a string.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7564/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7564/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7563",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7563/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7563/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7563/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7563",
        "id": 1883231213,
        "node_id": "I_kwDOIWuq585wP9Pt",
        "number": 7563,
        "title": "[Question]: \"How should we create a vector store when there are multiple JSON files, and how should we create the 'documents' to be used for comparing the data within these JSON files?\"",
        "user": {
            "login": "iriye",
            "id": 47598555,
            "node_id": "MDQ6VXNlcjQ3NTk4NTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/47598555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iriye",
            "html_url": "https://github.com/iriye",
            "followers_url": "https://api.github.com/users/iriye/followers",
            "following_url": "https://api.github.com/users/iriye/following{/other_user}",
            "gists_url": "https://api.github.com/users/iriye/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iriye/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iriye/subscriptions",
            "organizations_url": "https://api.github.com/users/iriye/orgs",
            "repos_url": "https://api.github.com/users/iriye/repos",
            "events_url": "https://api.github.com/users/iriye/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iriye/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-06T05:10:41Z",
        "updated_at": "2023-09-07T17:42:54Z",
        "closed_at": "2023-09-07T17:42:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n\"How should we create a VectorStoreIndex when there are multiple JSON files, and how should we create the 'documents' to be used for comparing the data within these JSON files?\"\r\nexample code here:\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7563/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7563/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7562",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7562/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7562/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7562/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7562",
        "id": 1882661989,
        "node_id": "PR_kwDOIWuq585ZnGLD",
        "number": 7562,
        "title": "quick changelog update",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-05T20:19:38Z",
        "updated_at": "2023-09-05T20:19:55Z",
        "closed_at": "2023-09-05T20:19:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7562",
            "html_url": "https://github.com/run-llama/llama_index/pull/7562",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7562.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7562.patch",
            "merged_at": "2023-09-05T20:19:55Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7562/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7562/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7561",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7561/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7561/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7561/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7561",
        "id": 1882392874,
        "node_id": "PR_kwDOIWuq585ZmL3U",
        "number": 7561,
        "title": "Fix refine streaming",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-05T16:54:31Z",
        "updated_at": "2023-09-06T05:01:29Z",
        "closed_at": "2023-09-06T05:01:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7561",
            "html_url": "https://github.com/run-llama/llama_index/pull/7561",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7561.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7561.patch",
            "merged_at": "2023-09-06T05:01:28Z"
        },
        "body": "# Description\r\n\r\nWhen generators are passed to a prompt, pydantic will complain. This happens right now if you set top k to 4 and streaming=True in a query engine.\r\n\r\nThis solution delays converting the generator to a string until the template is formatted.\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7551\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Tested in a notebook\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7561/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7561/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7560",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7560/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7560/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7560/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7560",
        "id": 1882117285,
        "node_id": "PR_kwDOIWuq585ZlP1w",
        "number": 7560,
        "title": "Add google colab support for notebooks",
        "user": {
            "login": "ravi03071991",
            "id": 12198101,
            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "html_url": "https://github.com/ravi03071991",
            "followers_url": "https://api.github.com/users/ravi03071991/followers",
            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
            "repos_url": "https://api.github.com/users/ravi03071991/repos",
            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-09-05T14:37:59Z",
        "updated_at": "2023-10-26T06:50:18Z",
        "closed_at": "2023-10-26T06:50:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7560",
            "html_url": "https://github.com/run-llama/llama_index/pull/7560",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7560.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7560.patch",
            "merged_at": "2023-10-26T06:50:18Z"
        },
        "body": "# Description\r\n\r\nPR adds support to open the notebooks in Google Colab so that it would be easier for developers to run through the notebooks.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [X] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7560/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7560/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7559",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7559/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7559/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7559/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7559",
        "id": 1881937978,
        "node_id": "PR_kwDOIWuq585ZkpRR",
        "number": 7559,
        "title": "[doc] Adding Portkey observability to the One-click Observability doc",
        "user": {
            "login": "vrushankportkey",
            "id": 134934501,
            "node_id": "U_kgDOCArv5Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/134934501?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vrushankportkey",
            "html_url": "https://github.com/vrushankportkey",
            "followers_url": "https://api.github.com/users/vrushankportkey/followers",
            "following_url": "https://api.github.com/users/vrushankportkey/following{/other_user}",
            "gists_url": "https://api.github.com/users/vrushankportkey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vrushankportkey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vrushankportkey/subscriptions",
            "organizations_url": "https://api.github.com/users/vrushankportkey/orgs",
            "repos_url": "https://api.github.com/users/vrushankportkey/repos",
            "events_url": "https://api.github.com/users/vrushankportkey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vrushankportkey/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-05T13:02:18Z",
        "updated_at": "2023-09-14T18:08:35Z",
        "closed_at": "2023-09-14T18:07:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7559",
            "html_url": "https://github.com/run-llama/llama_index/pull/7559",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7559.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7559.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nPortkey natively provides [one-click observability](https://portkey.ai/features/observability) with its Llamaindex integration - users can log all requests, trace prompt chains, and append metadata to each request for further segmentation. Added relevant snippet in the One-click Observability doc for that. \r\n\r\nAlso fixed a small bug in the existing [Portkey explainer notebook](https://gpt-index.readthedocs.io/en/latest/examples/llm/portkey.html) and added a new Colab link.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Passed formatting/linting changes. No other tests relevant.\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n\r\nTagging @jerryjliu as you had made the initial commit for the one-click observability doc.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7559/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7559/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7558",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7558/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7558/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7558/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7558",
        "id": 1881839301,
        "node_id": "I_kwDOIWuq585wKpbF",
        "number": 7558,
        "title": "[Question]: How do you change the LLM of an existing index or query engine?",
        "user": {
            "login": "marco-ve",
            "id": 6614947,
            "node_id": "MDQ6VXNlcjY2MTQ5NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6614947?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marco-ve",
            "html_url": "https://github.com/marco-ve",
            "followers_url": "https://api.github.com/users/marco-ve/followers",
            "following_url": "https://api.github.com/users/marco-ve/following{/other_user}",
            "gists_url": "https://api.github.com/users/marco-ve/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marco-ve/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marco-ve/subscriptions",
            "organizations_url": "https://api.github.com/users/marco-ve/orgs",
            "repos_url": "https://api.github.com/users/marco-ve/repos",
            "events_url": "https://api.github.com/users/marco-ve/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marco-ve/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-05T12:03:49Z",
        "updated_at": "2023-09-05T12:41:41Z",
        "closed_at": "2023-09-05T12:41:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nAs far as I can see the LLM is specified in the service context, which is passed to the index upon construction, which in turn is passed into the query engine.\r\n\r\nHow, then, does one swap, e.g., gpt-3.5 for gpt-4 after the index or engine has been created, without having to re-build the index from scratch (which involves re-embedding documents, costing either compute or money)?\r\n\r\nSince the embedding model is separate from the llm used for generation, I feel like this should be trivial, yet I was unable to find anything in the docs on how to do this. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7558/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7558/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7557",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7557/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7557/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7557/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7557",
        "id": 1881723211,
        "node_id": "PR_kwDOIWuq585Zj6YA",
        "number": 7557,
        "title": "Typo: Small errors in docs and unit test of Rungpt.",
        "user": {
            "login": "selmiss",
            "id": 90488417,
            "node_id": "MDQ6VXNlcjkwNDg4NDE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/90488417?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/selmiss",
            "html_url": "https://github.com/selmiss",
            "followers_url": "https://api.github.com/users/selmiss/followers",
            "following_url": "https://api.github.com/users/selmiss/following{/other_user}",
            "gists_url": "https://api.github.com/users/selmiss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/selmiss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/selmiss/subscriptions",
            "organizations_url": "https://api.github.com/users/selmiss/orgs",
            "repos_url": "https://api.github.com/users/selmiss/repos",
            "events_url": "https://api.github.com/users/selmiss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/selmiss/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-05T10:54:36Z",
        "updated_at": "2023-09-05T14:32:37Z",
        "closed_at": "2023-09-05T14:32:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7557",
            "html_url": "https://github.com/run-llama/llama_index/pull/7557",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7557.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7557.patch",
            "merged_at": "2023-09-05T14:32:37Z"
        },
        "body": "# Description\r\n\r\nFix two points in examples of rungpt. The first is that the package 'jina' had been included in rungpt package, so we only need to install the 'rungpt' package. Another is a small bug when it creates an instance of class RunGptLLM. \r\nIn addition, to fit some models those don't have the necessary white space in their tokens between words when using the step generate mode, a '_space_handler' function has been added for this.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7557/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7557/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7556",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7556/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7556/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7556/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7556",
        "id": 1881535029,
        "node_id": "PR_kwDOIWuq585ZjRmK",
        "number": 7556,
        "title": "Added similarity_top_k argument to VectorIndexAutoRetriever",
        "user": {
            "login": "apthagowda97",
            "id": 24203502,
            "node_id": "MDQ6VXNlcjI0MjAzNTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/24203502?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apthagowda97",
            "html_url": "https://github.com/apthagowda97",
            "followers_url": "https://api.github.com/users/apthagowda97/followers",
            "following_url": "https://api.github.com/users/apthagowda97/following{/other_user}",
            "gists_url": "https://api.github.com/users/apthagowda97/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apthagowda97/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apthagowda97/subscriptions",
            "organizations_url": "https://api.github.com/users/apthagowda97/orgs",
            "repos_url": "https://api.github.com/users/apthagowda97/repos",
            "events_url": "https://api.github.com/users/apthagowda97/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apthagowda97/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-05T09:03:49Z",
        "updated_at": "2023-09-06T05:29:49Z",
        "closed_at": "2023-09-05T15:44:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7556",
            "html_url": "https://github.com/run-llama/llama_index/pull/7556",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7556.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7556.patch",
            "merged_at": "2023-09-05T15:44:42Z"
        },
        "body": "# Description\r\n\r\n`VectorIndexAutoRetriever` was missing `similarity_top_k`.\r\n\r\nIt had `query_spec.top_k`  which can be set as shown below\r\n\r\n````\r\nnodes = retriever.retrieve(\r\n    \"Tell me about a celebrity from the United States, set top k to 10\"\r\n)\r\n````\r\nand `max_top_k` which sets the maximum number of top-k results that the retriever can return.\r\n\r\nBut if the `query_spec.top_k` is not given it was using default top_k of 2 irrespective of `max_top_k`.\r\n\r\nNow, I have added a new argument called `similarity_top_k` which can be set in the VectorIndexAutoRetriever. And the overall top_k will be the min of `similarity_top_k` and `query_spec.top_k` with `max_top_k` limit. \r\n\r\nFixes #7518\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7556/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7556/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7555",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7555/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7555/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7555/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7555",
        "id": 1881508734,
        "node_id": "I_kwDOIWuq585wJYt-",
        "number": 7555,
        "title": "[Feature Request]: Please reduce constant rewriting of llama-index",
        "user": {
            "login": "bespaloff",
            "id": 12160343,
            "node_id": "MDQ6VXNlcjEyMTYwMzQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/12160343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bespaloff",
            "html_url": "https://github.com/bespaloff",
            "followers_url": "https://api.github.com/users/bespaloff/followers",
            "following_url": "https://api.github.com/users/bespaloff/following{/other_user}",
            "gists_url": "https://api.github.com/users/bespaloff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bespaloff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bespaloff/subscriptions",
            "organizations_url": "https://api.github.com/users/bespaloff/orgs",
            "repos_url": "https://api.github.com/users/bespaloff/repos",
            "events_url": "https://api.github.com/users/bespaloff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bespaloff/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-05T08:48:52Z",
        "updated_at": "2023-09-12T02:00:19Z",
        "closed_at": "2023-09-12T02:00:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nDear Jerry, \r\n\r\nFirst of all let me express my great appreciation to the work done by you and your team.\r\nI find this project as absolutely genius and I think it will face a great future.\r\n\r\nThe only thing I can wish is that from version to version (including minor!) there would be MUCH less changes of classes and APIs.\n\n### Reason\n\nMore and more often we are facing need of full rewrite of the code or even reindex data when we need upgrade version in a month or so. \n\n### Value of Feature\n\nWell, llama_index should be mature in order to be more widely used in production.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7555/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7555/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7554",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7554/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7554/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7554/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7554",
        "id": 1881275069,
        "node_id": "PR_kwDOIWuq585ZiZir",
        "number": 7554,
        "title": "Fix attribute error for slack reader",
        "user": {
            "login": "aaalexlit",
            "id": 116374290,
            "node_id": "U_kgDOBu-7Eg",
            "avatar_url": "https://avatars.githubusercontent.com/u/116374290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaalexlit",
            "html_url": "https://github.com/aaalexlit",
            "followers_url": "https://api.github.com/users/aaalexlit/followers",
            "following_url": "https://api.github.com/users/aaalexlit/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaalexlit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaalexlit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaalexlit/subscriptions",
            "organizations_url": "https://api.github.com/users/aaalexlit/orgs",
            "repos_url": "https://api.github.com/users/aaalexlit/repos",
            "events_url": "https://api.github.com/users/aaalexlit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaalexlit/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-05T06:20:01Z",
        "updated_at": "2023-09-05T14:39:40Z",
        "closed_at": "2023-09-05T14:39:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7554",
            "html_url": "https://github.com/run-llama/llama_index/pull/7554",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7554.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7554.patch",
            "merged_at": "2023-09-05T14:39:40Z"
        },
        "body": "# Description\r\n\r\nThis reference wasn't updated since the latest change and broke the reader with: AttributeError: 'SlackReader' object has no attribute 'client'. Did you mean: '_client'?\r\n\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7554/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7554/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7553",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7553/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7553/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7553/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7553",
        "id": 1881249789,
        "node_id": "I_kwDOIWuq585wIZf9",
        "number": 7553,
        "title": "[Question]: How can we access the data inside a Document object?",
        "user": {
            "login": "iriye",
            "id": 47598555,
            "node_id": "MDQ6VXNlcjQ3NTk4NTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/47598555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iriye",
            "html_url": "https://github.com/iriye",
            "followers_url": "https://api.github.com/users/iriye/followers",
            "following_url": "https://api.github.com/users/iriye/following{/other_user}",
            "gists_url": "https://api.github.com/users/iriye/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iriye/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iriye/subscriptions",
            "organizations_url": "https://api.github.com/users/iriye/orgs",
            "repos_url": "https://api.github.com/users/iriye/repos",
            "events_url": "https://api.github.com/users/iriye/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iriye/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-05T05:57:16Z",
        "updated_at": "2023-09-05T15:46:27Z",
        "closed_at": "2023-09-05T15:46:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHow can we access the data inside a Document type  data?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7553/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7553/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7552",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7552/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7552/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7552/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7552",
        "id": 1881195106,
        "node_id": "PR_kwDOIWuq585ZiIik",
        "number": 7552,
        "title": "[doc] correct typo in node_postprocessors doc",
        "user": {
            "login": "tonyz0x0",
            "id": 29159357,
            "node_id": "MDQ6VXNlcjI5MTU5MzU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/29159357?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tonyz0x0",
            "html_url": "https://github.com/tonyz0x0",
            "followers_url": "https://api.github.com/users/tonyz0x0/followers",
            "following_url": "https://api.github.com/users/tonyz0x0/following{/other_user}",
            "gists_url": "https://api.github.com/users/tonyz0x0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tonyz0x0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tonyz0x0/subscriptions",
            "organizations_url": "https://api.github.com/users/tonyz0x0/orgs",
            "repos_url": "https://api.github.com/users/tonyz0x0/repos",
            "events_url": "https://api.github.com/users/tonyz0x0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tonyz0x0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-05T05:01:56Z",
        "updated_at": "2023-09-05T14:31:14Z",
        "closed_at": "2023-09-05T14:31:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7552",
            "html_url": "https://github.com/run-llama/llama_index/pull/7552",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7552.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7552.patch",
            "merged_at": "2023-09-05T14:31:14Z"
        },
        "body": "# Description\r\n\r\nCorrect a copy/paste typo in node_postprocessors doc.\r\n\r\n## Type of Change\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7552/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7552/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7551",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7551/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7551/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7551/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7551",
        "id": 1881159941,
        "node_id": "I_kwDOIWuq585wIDkF",
        "number": 7551,
        "title": "[Bug]: validation error for SelectorPromptTemplate kwargs -> existing_answer",
        "user": {
            "login": "gajavelli",
            "id": 5496552,
            "node_id": "MDQ6VXNlcjU0OTY1NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5496552?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gajavelli",
            "html_url": "https://github.com/gajavelli",
            "followers_url": "https://api.github.com/users/gajavelli/followers",
            "following_url": "https://api.github.com/users/gajavelli/following{/other_user}",
            "gists_url": "https://api.github.com/users/gajavelli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gajavelli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gajavelli/subscriptions",
            "organizations_url": "https://api.github.com/users/gajavelli/orgs",
            "repos_url": "https://api.github.com/users/gajavelli/repos",
            "events_url": "https://api.github.com/users/gajavelli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gajavelli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-05T04:24:30Z",
        "updated_at": "2023-09-05T17:57:01Z",
        "closed_at": "2023-09-05T17:56:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\n![image](https://github.com/jerryjliu/llama_index/assets/5496552/6fe3b17a-7e70-422f-8681-da61779501f0)\r\n\n\n### Version\n\n0.8.13\n\n### Steps to Reproduce\n\n   #Predictor\r\n    llm_streaming_predictor = LLMPredictor(\r\n        llm=ChatOpenAI(temperature=0, model_name=\"gpt-3.5-turbo\", streaming=True)\r\n    )\r\n    Model_Used=\"gpt-3.5-turbo\"\r\n   #service context\r\n    service_streaming_context = ServiceContext.from_defaults(\r\n        llm_predictor=llm_streaming_predictor\r\n    )\r\n\r\n    # Configure query engine to use streaming\r\n    query_engine = final_index.as_query_engine(service_context=service_streaming_context,\r\n        streaming=True\r\n    )\r\n    def response_streamExt(query_engine, query ):\r\n        streaming_response = query_engine.query(query)\r\n        for text in streaming_response.response_gen:\r\n            yield text\r\n    # flask response\r\n    return Response(response_streamExt(query_engine, query), mimetype=\"text/event-stream\")\n\n### Relevant Logs/Tracbacks\n\n```shell\nTraceback (most recent call last):\r\n  File \"D:\\working\\srvless\\generic_api\\generic_runtime\\Lib\\site-packages\\werkzeug\\wsgi.py\", line 462, in __next__\r\n    return self._next()\r\n  File \"D:\\working\\srvless\\generic_api\\generic_runtime\\Lib\\site-packages\\werkzeug\\wrappers\\response.py\", line 50, in _iter_encoded\r\n    for item in iterable:\r\n  File \"D:\\working\\srvless\\generic_api\\generative_service.py\", line 311, in response_streamExt\r\n    streaming_response = query_engine.query(query)\r\n  File \"D:\\working\\srvless\\generic_api\\generic_runtime\\Lib\\site-packages\\llama_index\\indices\\query\\base.py\", line 23, in query\r\n    response = self._query(str_or_query_bundle)\r\n  File \"D:\\working\\srvless\\generic_api\\generic_runtime\\Lib\\site-packages\\llama_index\\query_engine\\retriever_query_engine.py\", line 171, in _query\r\n    response = self._response_synthesizer.synthesize(\r\n  File \"D:\\working\\srvless\\generic_api\\generic_runtime\\Lib\\site-packages\\llama_index\\response_synthesizers\\base.py\", line 125, in synthesize\r\n    response_str = self.get_response(\r\n  File \"D:\\working\\srvless\\generic_api\\generic_runtime\\Lib\\site-packages\\llama_index\\response_synthesizers\\compact_and_refine.py\", line 34, in get_response\r\n    response = super().get_response(\r\n  File \"D:\\working\\srvless\\generic_api\\generic_runtime\\Lib\\site-packages\\llama_index\\response_synthesizers\\refine.py\", line 125, in get_response\r\n    response = self._refine_response_single(\r\n  File \"D:\\working\\srvless\\generic_api\\generic_runtime\\Lib\\site-packages\\llama_index\\response_synthesizers\\refine.py\", line 243, in _refine_response_single\r\n    refine_template = self._refine_template.partial_format(\r\n  File \"D:\\working\\srvless\\generic_api\\generic_runtime\\Lib\\site-packages\\llama_index\\prompts\\base.py\", line 206, in partial_format\r\n    return SelectorPromptTemplate(\r\n  File \"D:\\working\\srvless\\generic_api\\generic_runtime\\Lib\\site-packages\\llama_index\\prompts\\base.py\", line 178, in __init__\r\n    super().__init__(\r\n  File \"D:\\working\\srvless\\generic_api\\generic_runtime\\Lib\\site-packages\\pydantic\\v1\\main.py\", line 341, in __init__\r\n    raise validation_error\r\npydantic.v1.error_wrappers.ValidationError: 1 validation error for SelectorPromptTemplate\r\nkwargs -> existing_answer\r\n  str type expected (type=type_error.str)\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7551/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7551/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7550",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7550/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7550/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7550/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7550",
        "id": 1881142423,
        "node_id": "I_kwDOIWuq585wH_SX",
        "number": 7550,
        "title": "[Question]: ngql error",
        "user": {
            "login": "yashdeepyds",
            "id": 31975772,
            "node_id": "MDQ6VXNlcjMxOTc1Nzcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/31975772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yashdeepyds",
            "html_url": "https://github.com/yashdeepyds",
            "followers_url": "https://api.github.com/users/yashdeepyds/followers",
            "following_url": "https://api.github.com/users/yashdeepyds/following{/other_user}",
            "gists_url": "https://api.github.com/users/yashdeepyds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yashdeepyds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yashdeepyds/subscriptions",
            "organizations_url": "https://api.github.com/users/yashdeepyds/orgs",
            "repos_url": "https://api.github.com/users/yashdeepyds/repos",
            "events_url": "https://api.github.com/users/yashdeepyds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yashdeepyds/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-05T03:58:58Z",
        "updated_at": "2023-10-24T06:31:11Z",
        "closed_at": "2023-10-24T06:31:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n@wey-gu \r\nQuestion \r\n%ngql INSERT VERTEX table(name) VALUES 'abc':('abc');\r\n%ngql INSERT VERTEX column(name) VALUES 'column_xyz':('xyz');\r\n%ngql CREATE EDGE IF NOT EXISTS has_column(has_column STRING);\r\n%ngql INSERT EDGE has_column() VALUES \"abc\"->\"column_xyz\": ();\r\nUsageError: unrecognized arguments: ->\"column_xyz\": ();\r\n\r\nI had tried with multiple syntaxes can you please provide me a solution related to this.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7550/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7550/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7549",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7549/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7549/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7549/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7549",
        "id": 1881045021,
        "node_id": "I_kwDOIWuq585wHngd",
        "number": 7549,
        "title": "[Question]: Can metadata be given a value so that they can be distinguished when indexing from URLs?",
        "user": {
            "login": "Ma-Fukudama",
            "id": 76037787,
            "node_id": "MDQ6VXNlcjc2MDM3Nzg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/76037787?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ma-Fukudama",
            "html_url": "https://github.com/Ma-Fukudama",
            "followers_url": "https://api.github.com/users/Ma-Fukudama/followers",
            "following_url": "https://api.github.com/users/Ma-Fukudama/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ma-Fukudama/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ma-Fukudama/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ma-Fukudama/subscriptions",
            "organizations_url": "https://api.github.com/users/Ma-Fukudama/orgs",
            "repos_url": "https://api.github.com/users/Ma-Fukudama/repos",
            "events_url": "https://api.github.com/users/Ma-Fukudama/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ma-Fukudama/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 21,
        "created_at": "2023-09-05T01:49:19Z",
        "updated_at": "2023-10-24T06:31:06Z",
        "closed_at": "2023-10-24T06:31:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am creating indexes from files using SimpleDirectoryReader and from URLs using SimpleWebPageReader.\r\nThe file name is registered in the metadata from the file, but it is not registered from the URL.\r\nIn the future, when deleting data in the index, I think that it will be deleted from the node ID, but since the URL has only the node ID in doctor.json, I can not distinguish it.\r\nIs there a way to register the URL like a file name when creating an index from the URL?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7549/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7549/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7548",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7548/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7548/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7548/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7548",
        "id": 1880939455,
        "node_id": "I_kwDOIWuq585wHNu_",
        "number": 7548,
        "title": "[Question]: Adding new summary to existing DocumentSummaryIndex",
        "user": {
            "login": "adas-cpp",
            "id": 104375228,
            "node_id": "U_kgDOBjijvA",
            "avatar_url": "https://avatars.githubusercontent.com/u/104375228?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adas-cpp",
            "html_url": "https://github.com/adas-cpp",
            "followers_url": "https://api.github.com/users/adas-cpp/followers",
            "following_url": "https://api.github.com/users/adas-cpp/following{/other_user}",
            "gists_url": "https://api.github.com/users/adas-cpp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adas-cpp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adas-cpp/subscriptions",
            "organizations_url": "https://api.github.com/users/adas-cpp/orgs",
            "repos_url": "https://api.github.com/users/adas-cpp/repos",
            "events_url": "https://api.github.com/users/adas-cpp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adas-cpp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-04T22:57:32Z",
        "updated_at": "2023-10-24T06:31:03Z",
        "closed_at": "2023-10-24T06:31:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n[Question]: Hi, I am using the DocumentSummaryIndex functionality. Once I create a DocumentSummaryIndex, how can I add more documents to it? It says that I can add nodes using the _insert, or _add_nodes_to_index function. I tried using that but it doesn;t seem to work as it doesn't insert the text of each node. It just inserts the summary and the list of questions as 1 node. Can you please give me an example of how to 1. get a new summary for a document without creating a new DocumentSummaryIndex and 2. How to add that summary and all the corresponding nodes to an existing Index. Thank you. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7548/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7548/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7547",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7547/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7547/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7547/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7547",
        "id": 1880597972,
        "node_id": "I_kwDOIWuq585wF6XU",
        "number": 7547,
        "title": "[Question]: GGUF model support?",
        "user": {
            "login": "llermaly",
            "id": 8575569,
            "node_id": "MDQ6VXNlcjg1NzU1Njk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8575569?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/llermaly",
            "html_url": "https://github.com/llermaly",
            "followers_url": "https://api.github.com/users/llermaly/followers",
            "following_url": "https://api.github.com/users/llermaly/following{/other_user}",
            "gists_url": "https://api.github.com/users/llermaly/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/llermaly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/llermaly/subscriptions",
            "organizations_url": "https://api.github.com/users/llermaly/orgs",
            "repos_url": "https://api.github.com/users/llermaly/repos",
            "events_url": "https://api.github.com/users/llermaly/events{/privacy}",
            "received_events_url": "https://api.github.com/users/llermaly/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-04T16:24:31Z",
        "updated_at": "2023-09-10T21:13:14Z",
        "closed_at": "2023-09-10T21:13:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nThe new version of llama.cpp throws an error because now will only support GGUF based models. The workaround is to downgrade llama.cpp-python. \r\n\r\nWill llama_index support GGUF models any time soon? I couldn't find any discussion about this.\r\n\r\nhttps://www.reddit.com/r/LocalLLaMA/comments/15xycn2/llamacpp_gguf_merged/\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7547/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7547/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7546",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7546/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7546/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7546/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7546",
        "id": 1880576727,
        "node_id": "I_kwDOIWuq585wF1LX",
        "number": 7546,
        "title": "[Feature Request]: Adding an actual System prompt",
        "user": {
            "login": "yasergsi",
            "id": 83631208,
            "node_id": "MDQ6VXNlcjgzNjMxMjA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/83631208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yasergsi",
            "html_url": "https://github.com/yasergsi",
            "followers_url": "https://api.github.com/users/yasergsi/followers",
            "following_url": "https://api.github.com/users/yasergsi/following{/other_user}",
            "gists_url": "https://api.github.com/users/yasergsi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yasergsi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yasergsi/subscriptions",
            "organizations_url": "https://api.github.com/users/yasergsi/orgs",
            "repos_url": "https://api.github.com/users/yasergsi/repos",
            "events_url": "https://api.github.com/users/yasergsi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yasergsi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-09-04T16:12:02Z",
        "updated_at": "2023-09-05T04:02:21Z",
        "closed_at": "2023-09-05T04:01:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nCurrently the `system_prompt` is taken as a parameter in the `llama_index.llm_predictor.base.LLMPredictor` Class but when llama-Index queries the OpenAI API it just adds this system prompt just before the User query i.e. the role defined is `user` when querying the OpenAI API whereas there should be a separate role i.e. `SYSTEM` with the `content` as the defined custom System prompt.\r\n\r\nI am trying to use this as I am implementing Query Engine. Also I think the System Prompt should be a parameter while creating Query Engine using low level coding i.e. by utilizing the class `RetrieverQueryEngine`\r\n\r\n### Reason\r\n\r\nNot sure what is stopping Llama-index from doing this (it should be pretty simple), the current implementation of system prompt is a buggy way of doing it.\r\n\r\n### Value of Feature\r\n\r\nThis will be of immense value since GPT gives more importance to system prompts. In the current implementation the instructions in the system prompt is not given too much priority since it is part of user query.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7546/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7546/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7545",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7545/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7545/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7545/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7545",
        "id": 1880546367,
        "node_id": "PR_kwDOIWuq585Zf8uA",
        "number": 7545,
        "title": "add link to node references nb",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-04T15:52:43Z",
        "updated_at": "2023-09-04T16:25:05Z",
        "closed_at": "2023-09-04T16:25:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7545",
            "html_url": "https://github.com/run-llama/llama_index/pull/7545",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7545.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7545.patch",
            "merged_at": "2023-09-04T16:25:04Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7545/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7545/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7544",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7544/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7544/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7544/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7544",
        "id": 1880538064,
        "node_id": "I_kwDOIWuq585wFrvQ",
        "number": 7544,
        "title": "[Question]: Retrieving Top-K Unique Documents Instead of Top-K Nodes with VectorIndexRetriever",
        "user": {
            "login": "kevon217",
            "id": 13077896,
            "node_id": "MDQ6VXNlcjEzMDc3ODk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13077896?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevon217",
            "html_url": "https://github.com/kevon217",
            "followers_url": "https://api.github.com/users/kevon217/followers",
            "following_url": "https://api.github.com/users/kevon217/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevon217/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevon217/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevon217/subscriptions",
            "organizations_url": "https://api.github.com/users/kevon217/orgs",
            "repos_url": "https://api.github.com/users/kevon217/repos",
            "events_url": "https://api.github.com/users/kevon217/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevon217/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-04T15:47:46Z",
        "updated_at": "2023-09-04T22:08:43Z",
        "closed_at": "2023-09-04T22:08:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n**Description:**\r\nI'm currently using the RetrieverQueryEngine with a VectorIndexRetriever (chromadb) for document retrieval. I have a specific requirement: I want the top_k results to be a list of top_k unique documents, rather than top_k nodes.\r\n\r\n**Context**:\r\nSimilarity Calculations: I understand that the similarity is calculated at the node level.\r\nMultiple Hits: In my pipeline, multiple hits against the same document shouldn't count towards the top_k retrieved list.\r\nPostprocessing: I could do node postprocessing, but then I'd have to increase my top_k to get a sufficient number of unique documents.\r\n\r\n**Questions:**\r\nIs there a built-in parameter to fetch results at the document level that I might be overlooking?\r\nIf not, would achieving this require customization at the VectorStore level?\r\nAre there any recommendations for a workaround, perhaps at the post-processing level, that doesn't involve increasing the top_k?\r\n\r\nAny insight would be much appreciated!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7544/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7544/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7543",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7543/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7543/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7543/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7543",
        "id": 1880385209,
        "node_id": "PR_kwDOIWuq585ZfZNR",
        "number": 7543,
        "title": "Elasticsearch vector store support",
        "user": {
            "login": "joemcelroy",
            "id": 49480,
            "node_id": "MDQ6VXNlcjQ5NDgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/49480?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joemcelroy",
            "html_url": "https://github.com/joemcelroy",
            "followers_url": "https://api.github.com/users/joemcelroy/followers",
            "following_url": "https://api.github.com/users/joemcelroy/following{/other_user}",
            "gists_url": "https://api.github.com/users/joemcelroy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joemcelroy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joemcelroy/subscriptions",
            "organizations_url": "https://api.github.com/users/joemcelroy/orgs",
            "repos_url": "https://api.github.com/users/joemcelroy/repos",
            "events_url": "https://api.github.com/users/joemcelroy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joemcelroy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5804135704,
                "node_id": "LA_kwDOIWuq588AAAABWfQVGA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/vector%20store",
                "name": "vector store",
                "color": "4AE220",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-09-04T14:15:53Z",
        "updated_at": "2023-09-07T20:31:52Z",
        "closed_at": "2023-09-06T22:53:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7543",
            "html_url": "https://github.com/run-llama/llama_index/pull/7543",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7543.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7543.patch",
            "merged_at": "2023-09-06T22:53:35Z"
        },
        "body": "# Description\r\n\r\nThis adds Elasticsearch support to llama-index. With this change, you are able to store / query / delete nodes within Elasticsearch index.\r\n\r\nSupports: \r\n- vector, text and hybrid search\r\n- metadata + Exact match metadata filtering\r\n- es_filters for more complex filtering\r\n- query escape hatch for when you need to customise the query\r\n\r\nAdded integration tests.\r\n\r\nIn progress:\r\n- [x] documentation\r\n- [x] e2e notebook \r\n\r\nFixes # https://github.com/jerryjliu/llama_index/issues/6441\r\n\r\n## Type of Change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7543/reactions",
            "total_count": 4,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 2,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7543/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7542",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7542/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7542/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7542/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7542",
        "id": 1880182065,
        "node_id": "I_kwDOIWuq585wEU0x",
        "number": 7542,
        "title": "[Question]: chat_engine with flask: how to deal with multiple chats at the same time",
        "user": {
            "login": "Iwannabanana",
            "id": 54763176,
            "node_id": "MDQ6VXNlcjU0NzYzMTc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/54763176?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Iwannabanana",
            "html_url": "https://github.com/Iwannabanana",
            "followers_url": "https://api.github.com/users/Iwannabanana/followers",
            "following_url": "https://api.github.com/users/Iwannabanana/following{/other_user}",
            "gists_url": "https://api.github.com/users/Iwannabanana/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Iwannabanana/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Iwannabanana/subscriptions",
            "organizations_url": "https://api.github.com/users/Iwannabanana/orgs",
            "repos_url": "https://api.github.com/users/Iwannabanana/repos",
            "events_url": "https://api.github.com/users/Iwannabanana/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Iwannabanana/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-04T12:31:07Z",
        "updated_at": "2023-09-05T01:20:05Z",
        "closed_at": "2023-09-05T01:20:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHello, I am a beginner python developer and just got messed up by the question below, any help is appreciated:\r\n\r\n`import necessary flask and llama_index modules `\r\n`app = Flask(__name__)`\r\n`service_context = ServiceContext.from_defaults(llm=OpenAI(model='gpt-4'))`\r\n`storage_content = StorageContext.from_defaults(persist_dir=\"./storage_content\")`\r\n`new_index_ = load_index_from_storage(storage_content)`\r\n`chat_engine = new_index.as_chat_engine(similarity_top_k=4,chat_mode='openai',verbose=True)`\r\n`@app.route('/', methods=['GET','POST'])`\r\n`def peixun_2_demo_5_why():`\r\n`    if request.method == 'POST':`\r\n`        question = request.form['question']`\r\n`        response = chat_engine.chat(question)`\r\n`        return render_tempaltes('index.html', ans =response)`\r\n\r\nWith reference to the code above, if there are multple user interfacing my flask API at the same time, what the code does is simply putting all the chat history together in one giant history log and generate answer from there. If there a method to separate differenct chat **channel** for each user? Many thanks.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7542/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7542/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7541",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7541/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7541/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7541/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7541",
        "id": 1880136142,
        "node_id": "PR_kwDOIWuq585Zeh4-",
        "number": 7541,
        "title": "Add neo4j vector store",
        "user": {
            "login": "tomasonjo",
            "id": 19948365,
            "node_id": "MDQ6VXNlcjE5OTQ4MzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/19948365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomasonjo",
            "html_url": "https://github.com/tomasonjo",
            "followers_url": "https://api.github.com/users/tomasonjo/followers",
            "following_url": "https://api.github.com/users/tomasonjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomasonjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomasonjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomasonjo/subscriptions",
            "organizations_url": "https://api.github.com/users/tomasonjo/orgs",
            "repos_url": "https://api.github.com/users/tomasonjo/repos",
            "events_url": "https://api.github.com/users/tomasonjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomasonjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-04T12:04:47Z",
        "updated_at": "2023-09-04T18:10:24Z",
        "closed_at": "2023-09-04T18:07:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7541",
            "html_url": "https://github.com/run-llama/llama_index/pull/7541",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7541.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7541.patch",
            "merged_at": "2023-09-04T18:07:15Z"
        },
        "body": "Let me know if there are any tests or documentation that we can add",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7541/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7541/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7540",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7540/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7540/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7540/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7540",
        "id": 1879830282,
        "node_id": "PR_kwDOIWuq585Zde5G",
        "number": 7540,
        "title": "[version] bump version to 0.8.20",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-04T09:01:55Z",
        "updated_at": "2023-09-04T16:24:47Z",
        "closed_at": "2023-09-04T16:24:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7540",
            "html_url": "https://github.com/run-llama/llama_index/pull/7540",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7540.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7540.patch",
            "merged_at": "2023-09-04T16:24:46Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7540/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7540/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7539",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7539/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7539/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7539/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7539",
        "id": 1879577799,
        "node_id": "PR_kwDOIWuq585Zcouq",
        "number": 7539,
        "title": "support Epsilla vector store;",
        "user": {
            "login": "ricki-epsilla",
            "id": 132831962,
            "node_id": "U_kgDOB-ra2g",
            "avatar_url": "https://avatars.githubusercontent.com/u/132831962?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ricki-epsilla",
            "html_url": "https://github.com/ricki-epsilla",
            "followers_url": "https://api.github.com/users/ricki-epsilla/followers",
            "following_url": "https://api.github.com/users/ricki-epsilla/following{/other_user}",
            "gists_url": "https://api.github.com/users/ricki-epsilla/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ricki-epsilla/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ricki-epsilla/subscriptions",
            "organizations_url": "https://api.github.com/users/ricki-epsilla/orgs",
            "repos_url": "https://api.github.com/users/ricki-epsilla/repos",
            "events_url": "https://api.github.com/users/ricki-epsilla/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ricki-epsilla/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5804135704,
                "node_id": "LA_kwDOIWuq588AAAABWfQVGA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/vector%20store",
                "name": "vector store",
                "color": "4AE220",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-04T06:11:42Z",
        "updated_at": "2023-09-05T20:18:17Z",
        "closed_at": "2023-09-05T20:18:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7539",
            "html_url": "https://github.com/run-llama/llama_index/pull/7539",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7539.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7539.patch",
            "merged_at": "2023-09-05T20:18:17Z"
        },
        "body": "# Description\r\n\r\nThis PR support [Epsilla](https://epsilla-inc.gitbook.io/epsilladb/quick-start) vector database as a `VectorStore`.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7539/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7539/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7538",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7538/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7538/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7538/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7538",
        "id": 1879572610,
        "node_id": "PR_kwDOIWuq585Zcnoo",
        "number": 7538,
        "title": "Update MongoDBAtlasVectorSearch.ipynb",
        "user": {
            "login": "siddydutta",
            "id": 29818092,
            "node_id": "MDQ6VXNlcjI5ODE4MDky",
            "avatar_url": "https://avatars.githubusercontent.com/u/29818092?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/siddydutta",
            "html_url": "https://github.com/siddydutta",
            "followers_url": "https://api.github.com/users/siddydutta/followers",
            "following_url": "https://api.github.com/users/siddydutta/following{/other_user}",
            "gists_url": "https://api.github.com/users/siddydutta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/siddydutta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/siddydutta/subscriptions",
            "organizations_url": "https://api.github.com/users/siddydutta/orgs",
            "repos_url": "https://api.github.com/users/siddydutta/repos",
            "events_url": "https://api.github.com/users/siddydutta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/siddydutta/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-04T06:07:10Z",
        "updated_at": "2023-09-04T15:19:09Z",
        "closed_at": "2023-09-04T15:19:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7538",
            "html_url": "https://github.com/run-llama/llama_index/pull/7538",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7538.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7538.patch",
            "merged_at": "2023-09-04T15:19:09Z"
        },
        "body": "# Description\r\n\r\nAdded a small note on using MongoDB Atlas as a vector store.\r\n\r\n## Type of Change\r\n\r\n\ud83d\udcc4 Improve code quality & documentation",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7538/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7538/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7537",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7537/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7537/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7537/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7537",
        "id": 1879563098,
        "node_id": "PR_kwDOIWuq585ZcloV",
        "number": 7537,
        "title": "upgrade recursive retriever node reference notebook",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-04T05:58:21Z",
        "updated_at": "2023-09-04T09:00:36Z",
        "closed_at": "2023-09-04T09:00:35Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7537",
            "html_url": "https://github.com/run-llama/llama_index/pull/7537",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7537.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7537.patch",
            "merged_at": "2023-09-04T09:00:35Z"
        },
        "body": "We've expanded the recursive retriever + node references notebook by quite a bit\r\n- try out both smaller chunks as references, and also metadata as refernces\r\n- try running evaluations (hit rate and MRR) ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7537/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7537/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7536",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7536/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7536/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7536/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7536",
        "id": 1879558138,
        "node_id": "I_kwDOIWuq585wB8f6",
        "number": 7536,
        "title": "[Question]: Can I use a chat engine with streamlit?",
        "user": {
            "login": "Ma-Fukudama",
            "id": 76037787,
            "node_id": "MDQ6VXNlcjc2MDM3Nzg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/76037787?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ma-Fukudama",
            "html_url": "https://github.com/Ma-Fukudama",
            "followers_url": "https://api.github.com/users/Ma-Fukudama/followers",
            "following_url": "https://api.github.com/users/Ma-Fukudama/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ma-Fukudama/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ma-Fukudama/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ma-Fukudama/subscriptions",
            "organizations_url": "https://api.github.com/users/Ma-Fukudama/orgs",
            "repos_url": "https://api.github.com/users/Ma-Fukudama/repos",
            "events_url": "https://api.github.com/users/Ma-Fukudama/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ma-Fukudama/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-09-04T05:53:24Z",
        "updated_at": "2023-10-24T06:30:59Z",
        "closed_at": "2023-10-24T06:30:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nCurrently, the system uses a query engine to create answers, but I would like to create answers that also reflect the contents of the conversation history.\r\nI'm thinking of using a chat engine for that, but is it possible to use a chat engine with streamlit?\r\nThere is no such usage in the usage pattern of llamaindex, so I don't know how to set it up.\r\n\r\nThe following is what I am currently creating with the query engine.\r\n\r\n```\r\nimport os, sys, json, site, time, logging, openai\r\nfrom dotenv import load_dotenv\r\nimport streamlit as st\r\nfrom streamlit_chat import message\r\n# site.addsitedir('/home/doyukai/.local/lib/python3.11/site-packages')\r\nimport tiktoken\r\nfrom llama_index import (\r\n    download_loader,\r\n    LLMPredictor,\r\n    VectorStoreIndex,\r\n    ServiceContext,\r\n    QuestionAnswerPrompt,\r\n    StorageContext,\r\n    load_index_from_storage,\r\n    SimpleDirectoryReader,\r\n    ListIndex\r\n)\r\nfrom langchain import OpenAI\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom llama_index.indices.list.base import ListRetrieverMode\r\nload_dotenv()\r\n\r\nopenai.api_key = os.environ[\"OPENAI_API_KEY\"] \r\n\r\nload_dotenv()\r\n# \u30ed\u30b0\u30ec\u30d9\u30eb\u306e\u8a2d\u5b9a\r\nlogging.basicConfig(stream=sys.stdout, level=logging.DEBUG, force=True)\r\n\r\n\r\nclass QAResponseGenerator:\r\n    def __init__(self, selected_model):\r\n        self.llm_predictor = LLMPredictor(llm=OpenAI(temperature=1, model_name=\"gpt-3.5-turbo-0613\"))\r\n        self.QA_PROMPT_TMPL = (\r\n            \"\u4e0b\u8a18\u306e\u60c5\u5831\u304c\u4e0e\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002 \\n\"\r\n            \"---------------------\\n\"\r\n            \"{context_str}\"\r\n            \"\\n---------------------\\n\"\r\n            \"\u3053\u306e\u60c5\u5831\u3092\u53c2\u7167\u3057\u3066\u3067\u304d\u308b\u3060\u3051\u8a73\u3057\u304f\u6b21\u306e\u8cea\u554f\u306b\u7b54\u3048\u3066\u304f\u3060\u3055\u3044: {query_str}\\n\"\r\n            \"\u56de\u7b54\u306b\u306f\u5f15\u7528\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8ffd\u8a18\u3057\u3066\u304f\u3060\u3055\u3044\\n\"\r\n            \"URL\u306e\u5834\u5408\u306f\u30ea\u30f3\u30af\u5148\u3092\u8ffd\u8a18\u3057\u3066\u304f\u3060\u3055\u3044\"\r\n        )\r\n        self.service_context = ServiceContext.from_defaults(llm_predictor=self.llm_predictor)\r\n\r\n    def generate(self, question):\r\n        start = time.time()  \r\n        storage_context = StorageContext.from_defaults(persist_dir=\"\uff5e/index\")\r\n        index = load_index_from_storage(storage_context)\r\n        elapsed_time = time.time() - start\r\n        print(\"load_elapsed_time:{0}\".format(elapsed_time) + \"[sec]\")\r\n        start = time.time()\r\n        engine = index.as_query_engine(text_qa_template=QuestionAnswerPrompt(self.QA_PROMPT_TMPL), retriever_mode=ListRetrieverMode.EMBEDDING, similarity_top_k=1, vector_store_query_mode=\"default\")\r\n        result = engine.query(question)\r\n        elapsed_time = time.time() - start\r\n        print(\"query_time:{0}\".format(elapsed_time) + \"[sec]\")\r\n        return result.response.replace(\"\\n\", \"\"), result.get_formatted_sources(1000)\r\n\r\n\r\n\r\ndef display_chat(chat_history):\r\n    for i, chat in enumerate(reversed(chat_history)):\r\n        if \"user\" in chat:\r\n            message(chat[\"user\"], is_user=True, key=str(i)) \r\n        else:\r\n            message(chat[\"bot\"], key=\"bot_\"+str(i))\r\n\r\ndef main():\r\n    question = st.text_input(\"Your question\")\r\n\r\n    # \u30e1\u30a4\u30f3\u306e\u753b\u9762\u306b\u8cea\u554f\u9001\u4fe1\u30dc\u30bf\u30f3\u3092\u8a2d\u5b9a\r\n    submit_question = st.button(\"\u8cea\u554f\")\r\n    clear_chat = st.button(\"\u5c65\u6b74\u6d88\u53bb\")\r\n\r\n    # \u30c1\u30e3\u30c3\u30c8\u5c65\u6b74\u3092\u4fdd\u5b58\r\n    if \"chat_history\" not in st.session_state:\r\n        st.session_state[\"chat_history\"] = []\r\n\r\n    if clear_chat:\r\n        st.session_state[\"chat_history\"] = []\r\n\r\n    # pdf_reader = PDFReader()\r\n    response_generator = QAResponseGenerator(\"gpt-3.5-turbo-0613\")\r\n    # \u30dc\u30bf\u30f3\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u5834\u5408\u306e\u51e6\u7406\r\n    if submit_question:\r\n        if question:  # \u8cea\u554f\u304c\u5165\u529b\u3055\u308c\u3066\u3044\u308b\u5834\u5408\r\n            response, source = response_generator.generate(question)\r\n            # if choice == \"\u8868\u793a\u3059\u308b\":\r\n            #     response += f\"\\n\\n\u53c2\u7167\u3057\u305f\u60c5\u5831\u306f\u6b21\u306e\u901a\u308a\u3067\u3059:\\n{source}\"\r\n\r\n            # \u8cea\u554f\u3068\u5fdc\u7b54\u3092\u30c1\u30e3\u30c3\u30c8\u5c65\u6b74\u306b\u8ffd\u52a0\r\n            st.session_state[\"chat_history\"].append({\"user\": question})\r\n            st.session_state[\"chat_history\"].append({\"bot\": response})\r\n\r\n    display_chat(st.session_state[\"chat_history\"])\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7536/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7536/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7535",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7535/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7535/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7535/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7535",
        "id": 1879465767,
        "node_id": "I_kwDOIWuq585wBl8n",
        "number": 7535,
        "title": "[Question]: How to add OR metadata filter for RedisVectorStore retriever?",
        "user": {
            "login": "dhruv2512",
            "id": 45820090,
            "node_id": "MDQ6VXNlcjQ1ODIwMDkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/45820090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhruv2512",
            "html_url": "https://github.com/dhruv2512",
            "followers_url": "https://api.github.com/users/dhruv2512/followers",
            "following_url": "https://api.github.com/users/dhruv2512/following{/other_user}",
            "gists_url": "https://api.github.com/users/dhruv2512/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dhruv2512/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dhruv2512/subscriptions",
            "organizations_url": "https://api.github.com/users/dhruv2512/orgs",
            "repos_url": "https://api.github.com/users/dhruv2512/repos",
            "events_url": "https://api.github.com/users/dhruv2512/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dhruv2512/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-09-04T04:02:58Z",
        "updated_at": "2023-10-24T06:30:56Z",
        "closed_at": "2023-10-24T06:30:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHow can I add OR filter for the RedisVectorStore retriever?\r\nI know currently only exact match is supported. But is there any workaround for this?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7535/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7535/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7534",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7534/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7534/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7534/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7534",
        "id": 1879421849,
        "node_id": "PR_kwDOIWuq585ZcHTw",
        "number": 7534,
        "title": "Make (some) vector stores serializable",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-04T03:00:35Z",
        "updated_at": "2023-09-04T22:08:24Z",
        "closed_at": "2023-09-04T22:08:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7534",
            "html_url": "https://github.com/run-llama/llama_index/pull/7534",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7534.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7534.patch",
            "merged_at": "2023-09-04T22:08:24Z"
        },
        "body": "# Description\r\n\r\nPicked a few vector stores to make a POC for how they can be serialized.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Tested in notebooks (weaviate, pinecone, PostgreSQL)\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7534/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7534/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7533",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7533/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7533/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7533/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7533",
        "id": 1879361921,
        "node_id": "PR_kwDOIWuq585Zb6cn",
        "number": 7533,
        "title": "fix: minor change on the documentation",
        "user": {
            "login": "noble-varghese",
            "id": 109506617,
            "node_id": "U_kgDOBobwOQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/109506617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noble-varghese",
            "html_url": "https://github.com/noble-varghese",
            "followers_url": "https://api.github.com/users/noble-varghese/followers",
            "following_url": "https://api.github.com/users/noble-varghese/following{/other_user}",
            "gists_url": "https://api.github.com/users/noble-varghese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noble-varghese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noble-varghese/subscriptions",
            "organizations_url": "https://api.github.com/users/noble-varghese/orgs",
            "repos_url": "https://api.github.com/users/noble-varghese/repos",
            "events_url": "https://api.github.com/users/noble-varghese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noble-varghese/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-04T01:43:29Z",
        "updated_at": "2023-09-04T02:58:16Z",
        "closed_at": "2023-09-04T02:58:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7533",
            "html_url": "https://github.com/run-llama/llama_index/pull/7533",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7533.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7533.patch",
            "merged_at": "2023-09-04T02:58:16Z"
        },
        "body": "# Description\r\n\r\nOn the [usage pattern page](https://gpt-index.readthedocs.io/en/latest/end_to_end_tutorials/usage_pattern.html) in the docs, Parsing the response starts with a 5 even though it is the 6th section. Also, it is not listed at the top table of contents.\r\n\r\nFixes #7512 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7533/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7533/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7532",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7532/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7532/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7532/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7532",
        "id": 1879259212,
        "node_id": "PR_kwDOIWuq585ZbkSk",
        "number": 7532,
        "title": "define node_id as a setter, update docs",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-03T22:45:06Z",
        "updated_at": "2023-09-04T05:15:07Z",
        "closed_at": "2023-09-04T05:15:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7532",
            "html_url": "https://github.com/run-llama/llama_index/pull/7532",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7532.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7532.patch",
            "merged_at": "2023-09-04T05:15:06Z"
        },
        "body": "slightly cleaner UX imo to set node_id as opposed to `id_`. Also this wasn't documented in the docs, so i updated both the Node and documents section ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7532/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7532/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7531",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7531/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7531/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7531/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7531",
        "id": 1879248527,
        "node_id": "PR_kwDOIWuq585ZbiWc",
        "number": 7531,
        "title": "rename list index to summary index part 2",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-03T22:01:40Z",
        "updated_at": "2023-09-03T22:32:30Z",
        "closed_at": "2023-09-03T22:32:30Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7531",
            "html_url": "https://github.com/run-llama/llama_index/pull/7531",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7531.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7531.patch",
            "merged_at": "2023-09-03T22:32:30Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7531/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7531/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7530",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7530/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7530/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7530/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7530",
        "id": 1879239896,
        "node_id": "PR_kwDOIWuq585Zbgx8",
        "number": 7530,
        "title": "[version] bump version to 0.8.19",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-03T21:27:40Z",
        "updated_at": "2023-09-03T22:45:54Z",
        "closed_at": "2023-09-03T22:45:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7530",
            "html_url": "https://github.com/run-llama/llama_index/pull/7530",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7530.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7530.patch",
            "merged_at": "2023-09-03T22:45:53Z"
        },
        "body": "include the summaryindex changes",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7530/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7530/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7529",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7529/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7529/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7529/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7529",
        "id": 1879230922,
        "node_id": "I_kwDOIWuq585wAsnK",
        "number": 7529,
        "title": "Router Query Engine Streaming",
        "user": {
            "login": "yuvansharma",
            "id": 79559370,
            "node_id": "MDQ6VXNlcjc5NTU5Mzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/79559370?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuvansharma",
            "html_url": "https://github.com/yuvansharma",
            "followers_url": "https://api.github.com/users/yuvansharma/followers",
            "following_url": "https://api.github.com/users/yuvansharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuvansharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuvansharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuvansharma/subscriptions",
            "organizations_url": "https://api.github.com/users/yuvansharma/orgs",
            "repos_url": "https://api.github.com/users/yuvansharma/repos",
            "events_url": "https://api.github.com/users/yuvansharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuvansharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-03T20:54:59Z",
        "updated_at": "2023-09-04T15:06:04Z",
        "closed_at": "2023-09-04T15:06:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nIs there a way to use streaming with the router query engine? And if not, would it be possible to make a feature request for it?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7529/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7529/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7528",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7528/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7528/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7528/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7528",
        "id": 1879203138,
        "node_id": "PR_kwDOIWuq585ZbZ95",
        "number": 7528,
        "title": "bugfix: fix ServiceContext reference",
        "user": {
            "login": "kadereub",
            "id": 31546506,
            "node_id": "MDQ6VXNlcjMxNTQ2NTA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/31546506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kadereub",
            "html_url": "https://github.com/kadereub",
            "followers_url": "https://api.github.com/users/kadereub/followers",
            "following_url": "https://api.github.com/users/kadereub/following{/other_user}",
            "gists_url": "https://api.github.com/users/kadereub/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kadereub/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kadereub/subscriptions",
            "organizations_url": "https://api.github.com/users/kadereub/orgs",
            "repos_url": "https://api.github.com/users/kadereub/repos",
            "events_url": "https://api.github.com/users/kadereub/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kadereub/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-03T19:10:31Z",
        "updated_at": "2023-09-03T21:07:33Z",
        "closed_at": "2023-09-03T21:07:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7528",
            "html_url": "https://github.com/run-llama/llama_index/pull/7528",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7528.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7528.patch",
            "merged_at": "2023-09-03T21:07:33Z"
        },
        "body": "# Description\r\n\r\nMinor fix to documentation usage example of embedding model.\r\n\r\n## Type of Change\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nIt's a minor fix to the documentation code example.\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have made corresponding changes to the documentation\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7528/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7528/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7527",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7527/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7527/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7527/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7527",
        "id": 1878987720,
        "node_id": "PR_kwDOIWuq585ZaxnM",
        "number": 7527,
        "title": "[version] bump version to 0.8.18",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-03T08:15:27Z",
        "updated_at": "2023-09-03T15:43:30Z",
        "closed_at": "2023-09-03T15:43:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7527",
            "html_url": "https://github.com/run-llama/llama_index/pull/7527",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7527.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7527.patch",
            "merged_at": "2023-09-03T15:43:29Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7527/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7527/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7526",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7526/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7526/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7526/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7526",
        "id": 1878976466,
        "node_id": "PR_kwDOIWuq585ZavfO",
        "number": 7526,
        "title": "Add agent finetuning guide",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-03T07:35:49Z",
        "updated_at": "2023-09-03T08:13:43Z",
        "closed_at": "2023-09-03T08:13:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7526",
            "html_url": "https://github.com/run-llama/llama_index/pull/7526",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7526.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7526.patch",
            "merged_at": "2023-09-03T08:13:42Z"
        },
        "body": "- finetune a gpt-3.5-turbo react agent on gpt-4 outputs, for better chain of thought prompting\r\n- show that it actually reasons better in qualitative samples ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7526/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7526/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7525",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7525/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7525/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7525/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7525",
        "id": 1878935615,
        "node_id": "I_kwDOIWuq585v_kg_",
        "number": 7525,
        "title": "[Question]: index.as_query_engine() ",
        "user": {
            "login": "axz91",
            "id": 100378946,
            "node_id": "U_kgDOBfupQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/100378946?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axz91",
            "html_url": "https://github.com/axz91",
            "followers_url": "https://api.github.com/users/axz91/followers",
            "following_url": "https://api.github.com/users/axz91/following{/other_user}",
            "gists_url": "https://api.github.com/users/axz91/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axz91/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axz91/subscriptions",
            "organizations_url": "https://api.github.com/users/axz91/orgs",
            "repos_url": "https://api.github.com/users/axz91/repos",
            "events_url": "https://api.github.com/users/axz91/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axz91/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-03T04:58:04Z",
        "updated_at": "2023-09-04T15:08:37Z",
        "closed_at": "2023-09-04T15:08:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nhow to integrate more promting in my index.as_query_engine(), such as:\r\n\r\nmessages = [\r\n    ChatMessage(\r\n        role=MessageRole.USER,\r\n        content=\"Hello, my name is zihao, major in artificial intelligence.\",\r\n    ),\r\n    ChatMessage(role=MessageRole.ASSISTANT, content=\"Hello, what can I do for you?\"),\r\n    ChatMessage(\r\n        role=MessageRole.USER, content=\"Could you tell me what is my name and major?\"\r\n    ),\r\n]",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7525/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7525/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7524",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7524/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7524/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7524/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7524",
        "id": 1878748941,
        "node_id": "PR_kwDOIWuq585ZaEf7",
        "number": 7524,
        "title": "[version] bump version to 0.8.17",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-02T16:04:22Z",
        "updated_at": "2023-09-02T19:25:39Z",
        "closed_at": "2023-09-02T19:25:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7524",
            "html_url": "https://github.com/run-llama/llama_index/pull/7524",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7524.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7524.patch",
            "merged_at": "2023-09-02T19:25:38Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7524/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7524/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7523",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7523/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7523/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7523/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7523",
        "id": 1878562640,
        "node_id": "PR_kwDOIWuq585ZZdar",
        "number": 7523,
        "title": "Fixed ValidationError: 2 validation errors for StructuredRefineResponse answer",
        "user": {
            "login": "Shubham-Jain-09",
            "id": 43717508,
            "node_id": "MDQ6VXNlcjQzNzE3NTA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/43717508?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Shubham-Jain-09",
            "html_url": "https://github.com/Shubham-Jain-09",
            "followers_url": "https://api.github.com/users/Shubham-Jain-09/followers",
            "following_url": "https://api.github.com/users/Shubham-Jain-09/following{/other_user}",
            "gists_url": "https://api.github.com/users/Shubham-Jain-09/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Shubham-Jain-09/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Shubham-Jain-09/subscriptions",
            "organizations_url": "https://api.github.com/users/Shubham-Jain-09/orgs",
            "repos_url": "https://api.github.com/users/Shubham-Jain-09/repos",
            "events_url": "https://api.github.com/users/Shubham-Jain-09/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Shubham-Jain-09/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-02T10:04:16Z",
        "updated_at": "2023-09-05T14:57:27Z",
        "closed_at": "2023-09-05T14:57:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7523",
            "html_url": "https://github.com/run-llama/llama_index/pull/7523",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7523.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7523.patch",
            "merged_at": "2023-09-05T14:57:26Z"
        },
        "body": "Bug Description\r\nWhile using response synthesizer in below way -:\r\nresponse_synthesizer = get_response_synthesizer(service_context=service_context, refine_template=DEFAULT_REFINE_PROMPT, structured_answer_filtering=True, use_async=True, verbose=True)\r\n\r\nwhere I am passing structured_answer_filtering=True I am getting below error for few queries for others it works -:\r\n\r\nValidationError: 2 validation errors for StructuredRefineResponse answer field required (type=value_error.missing) query_satisfied field required (type=value_error.missing)\r\n\r\nit gets answer from few nodes but in later chunks it is not getting required field like query satisfied, so we should have flag, when this error comes whatever response has been generated that should be given, because it is failing due to some reason in after few nodes traversing, ideally it should have found at least some context.\r\n\r\nI am not much aware about the behind the scene functionality of structured_answer_filtering param, but keeping it True gives meaningful response for few queries for others the error is given.\r\n\r\nAnd if I do not use this the answer which I get is not meaningful, so need to see if there is a fix I can do to it.\r\n\r\nSteps to Reproduce\r\nPass structured_answer_filtering param as True, and for few queries where data retrieved is large than this issue occurs since it stops in between, and some required params which pydantic is expecting like query_satisfied is not given.\r\n\r\nRelevant Logs/Tracbacks\r\nFile \"pydantic/main.py\", line 549, in pydantic.main.BaseModel.parse_raw\r\n  File \"pydantic/main.py\", line 526, in pydantic.main.BaseModel.parse_obj\r\n  File \"pydantic/main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 2 validation errors for StructuredRefineResponse\r\nanswer\r\n  field required (type=value_error.missing)\r\nquery_satisfied\r\n  field required (type=value_error.missing)\r\n\r\nOpen issue -: https://github.com/jerryjliu/llama_index/issues/7521",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7523/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7523/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7522",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7522/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7522/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7522/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7522",
        "id": 1878480046,
        "node_id": "PR_kwDOIWuq585ZZSQY",
        "number": 7522,
        "title": "add node references to recursive retrieval",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-02T08:10:40Z",
        "updated_at": "2023-09-02T16:02:51Z",
        "closed_at": "2023-09-02T16:02:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7522",
            "html_url": "https://github.com/run-llama/llama_index/pull/7522",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7522.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7522.patch",
            "merged_at": "2023-09-02T16:02:50Z"
        },
        "body": "you could *technically* define this by defining a retrieval that returns a single node but that would be way too complicated.\r\n\r\nthis allows us to fetch bigger nodes given a retrieved smaller node \r\n\r\nwill iterate on notebook more ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7522/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7522/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7521",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7521/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7521/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7521/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7521",
        "id": 1878459359,
        "node_id": "I_kwDOIWuq585v9wPf",
        "number": 7521,
        "title": "[Bug]: ValidationError: 2 validation errors for StructuredRefineResponse answer",
        "user": {
            "login": "Shubham-Jain-09",
            "id": 43717508,
            "node_id": "MDQ6VXNlcjQzNzE3NTA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/43717508?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Shubham-Jain-09",
            "html_url": "https://github.com/Shubham-Jain-09",
            "followers_url": "https://api.github.com/users/Shubham-Jain-09/followers",
            "following_url": "https://api.github.com/users/Shubham-Jain-09/following{/other_user}",
            "gists_url": "https://api.github.com/users/Shubham-Jain-09/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Shubham-Jain-09/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Shubham-Jain-09/subscriptions",
            "organizations_url": "https://api.github.com/users/Shubham-Jain-09/orgs",
            "repos_url": "https://api.github.com/users/Shubham-Jain-09/repos",
            "events_url": "https://api.github.com/users/Shubham-Jain-09/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Shubham-Jain-09/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-09-02T07:23:39Z",
        "updated_at": "2023-09-05T15:07:31Z",
        "closed_at": "2023-09-05T15:07:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhile using response synthesizer in below way -:\r\n`response_synthesizer = get_response_synthesizer(service_context=service_context, refine_template=DEFAULT_REFINE_PROMPT, structured_answer_filtering=True, use_async=True, verbose=True)`\r\n\r\nwhere I am passing structured_answer_filtering=True I am getting below error for few queries for others it works -:\r\n\r\nValidationError: 2 validation errors for StructuredRefineResponse answer field required (type=value_error.missing) query_satisfied field required (type=value_error.missing)\r\n\r\n\r\nit gets answer from few nodes but in later chunks it is not getting required field like query satisfied, so we should have flag, when this error comes whatever response has been generated that should be given, because it is failing due to some reason in after few nodes traversing, ideally it should have found at least some context.\r\n\r\nI am not much aware about the behind the scene functionality of structured_answer_filtering param, but keeping it True gives meaningful response for few queries for others the error is given.\r\n\r\nAnd if I do not use this the answer which I get is not meaningful, so need to see if there is a fix I can do to it.\n\n### Version\n\n0.8.14\n\n### Steps to Reproduce\n\nPass structured_answer_filtering param as True, and for few queries where data retrieved is large than this issue occurs since it stops in between, and some required params which pydantic is expecting like query_satisfied is not given.\n\n### Relevant Logs/Tracbacks\n\n```shell\nFile \"pydantic/main.py\", line 549, in pydantic.main.BaseModel.parse_raw\r\n  File \"pydantic/main.py\", line 526, in pydantic.main.BaseModel.parse_obj\r\n  File \"pydantic/main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 2 validation errors for StructuredRefineResponse\r\nanswer\r\n  field required (type=value_error.missing)\r\nquery_satisfied\r\n  field required (type=value_error.missing)\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7521/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7521/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7520",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7520/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7520/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7520/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7520",
        "id": 1878311234,
        "node_id": "I_kwDOIWuq585v9MFC",
        "number": 7520,
        "title": "[Question]: LanceDBVectorStore issue",
        "user": {
            "login": "axz91",
            "id": 100378946,
            "node_id": "U_kgDOBfupQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/100378946?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axz91",
            "html_url": "https://github.com/axz91",
            "followers_url": "https://api.github.com/users/axz91/followers",
            "following_url": "https://api.github.com/users/axz91/following{/other_user}",
            "gists_url": "https://api.github.com/users/axz91/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axz91/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axz91/subscriptions",
            "organizations_url": "https://api.github.com/users/axz91/orgs",
            "repos_url": "https://api.github.com/users/axz91/repos",
            "events_url": "https://api.github.com/users/axz91/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axz91/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-02T03:25:55Z",
        "updated_at": "2023-10-24T06:30:54Z",
        "closed_at": "2023-10-24T06:30:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nFile c:\\Python311\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3653, in Index.get_loc(self, key)\r\n3652 try:\r\n-> 3653 return self._engine.get_loc(casted_key)\r\n3654 except KeyError as err:\r\n\r\nFile c:\\Python311\\Lib\\site-packages\\pandas_libs\\index.pyx:147, in pandas._libs.index.IndexEngine.get_loc()\r\n\r\nFile c:\\Python311\\Lib\\site-packages\\pandas_libs\\index.pyx:176, in pandas._libs.index.IndexEngine.get_loc()\r\n\r\nFile pandas_libs\\hashtable_class_helper.pxi:7080, in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n\r\nFile pandas_libs\\hashtable_class_helper.pxi:7088, in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n\r\nKeyError: 'score'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nKeyError Traceback (most recent call last)\r\nCell In[34], line 1\r\n----> 1 response = query_engine.query(\"What is p53?\")\r\n2 print(response)\r\n\r\nFile c:\\Python311\\Lib\\site-packages\\llama_index\\indices\\query\\base.py:23, in BaseQueryEngine.query(self, str_or_query_bundle)\r\n...\r\n3658 # InvalidIndexError. Otherwise we fall through and re-raise\r\n3659 # the TypeError.\r\n3660 self._check_indexing_error(key)\r\nmay i know why has this issue when dong indexretive",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7520/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7520/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7519",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7519/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7519/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7519/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7519",
        "id": 1878176036,
        "node_id": "I_kwDOIWuq585v8rEk",
        "number": 7519,
        "title": "[Bug]: response_synthesizer doesn't work with AzureOpenAI",
        "user": {
            "login": "randywreed",
            "id": 5059871,
            "node_id": "MDQ6VXNlcjUwNTk4NzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5059871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/randywreed",
            "html_url": "https://github.com/randywreed",
            "followers_url": "https://api.github.com/users/randywreed/followers",
            "following_url": "https://api.github.com/users/randywreed/following{/other_user}",
            "gists_url": "https://api.github.com/users/randywreed/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/randywreed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/randywreed/subscriptions",
            "organizations_url": "https://api.github.com/users/randywreed/orgs",
            "repos_url": "https://api.github.com/users/randywreed/repos",
            "events_url": "https://api.github.com/users/randywreed/events{/privacy}",
            "received_events_url": "https://api.github.com/users/randywreed/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-01T23:41:11Z",
        "updated_at": "2023-09-02T13:58:35Z",
        "closed_at": "2023-09-02T13:58:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhen using AzureOpenAI if you try to use a response_synthesizer it generates the following error:  \r\n```\r\n\"name\": \"InvalidRequestError\",\r\n\t\"message\": \"Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.chat_completion.ChatCompletion'>\",\r\n```\n\n### Version\n\n0.8.16\n\n### Steps to Reproduce\n\nThis code produces the error.\r\n```\r\n\r\nfrom llama_index import VectorStoreIndex, download_loader,ServiceContext,LLMPredictor,get_response_synthesizer,global_service_context\r\nfrom llama_index.vector_stores import ChromaVectorStore\r\nfrom llama_index.storage import StorageContext\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom llama_index.embeddings import LangchainEmbedding\r\nfrom llama_index.indices.document_summary import DocumentSummaryIndex\r\nfrom langchain.chat_models import AzureChatOpenAI\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom llama_index.llms import AzureOpenAI\r\nimport os\r\nimport openai\r\nopenai.api_type=os.getenv(\"OPENAI_API_TYPE\")\r\nopenai.api_base=os.getenv(\"OPENAI_API_BASE\")\r\nopenai.api_version=os.getenv(\"OPENAI_API_VERSION\")\r\nopenai.api_key=os.getenv(\"OPENAI_API_KEY\")\r\n\r\nllm=AzureChatOpenAI(deployment_name=\"test\",openai_api_base=openai.api_base,openai_api_key=openai.api_key,openai_api_version=openai.api_version,openai_api_type=openai.api_type)\r\ndef llama_index_website_loader(url):\r\n    from llama_index import GPTVectorStoreIndex, download_loader\r\n\r\n    BeautifulSoupWebReader = download_loader(\"BeautifulSoupWebReader\")\r\n\r\n    loader = BeautifulSoupWebReader()\r\n    documents = loader.load_data(urls=[url])\r\n    return documents\r\ndef store_test(documents):\r\n    llm=AzureOpenAI(engine=\"test\",model=\"gpt-35-turbo\")\r\n    sc=ServiceContext.from_defaults(llm=llm,embed_model=embed_model,chunk_size=200)\r\n    \r\n    index = VectorStoreIndex.from_documents(documents, service_context=sc)\r\n    return index\r\ndocuments=llama_index_website_loader(website_url)   \r\nindex=store_test(documents)\r\nfrom llama_index.schema import Node, NodeWithScore\r\nfrom llama_index.response_synthesizers import get_response_synthesizer\r\nresponse_synthesizer = get_response_synthesizer(response_mode='compact')\r\nquery_engine = index.as_query_engine(response_synthesizer=response_synthesizer)\r\nresponse = query_engine.query(\"what is this text about?\")\r\n```\r\nIf I don't use the response_sythesizer in the query, it executes without error:\r\n```\r\nquery=\"what is this article about?\"\r\nquery_engine=index.as_query_engine()\r\nanswer=query_engine.query(query)\r\n```\r\n\r\n\n\n### Relevant Logs/Tracbacks\n\n```shell\nInvalidRequestError                       Traceback (most recent call last)\r\nCell In[82], line 2\r\n      1 query_engine = index.as_query_engine(response_synthesizer=response_synthesizer)\r\n----> 2 response = query_engine.query(\"what is this text about?\")\r\n\r\nFile ~/article_analysis/venv_article_analysis/lib64/python3.9/site-packages/llama_index/indices/query/base.py:23, in BaseQueryEngine.query(self, str_or_query_bundle)\r\n     21 if isinstance(str_or_query_bundle, str):\r\n     22     str_or_query_bundle = QueryBundle(str_or_query_bundle)\r\n---> 23 response = self._query(str_or_query_bundle)\r\n     24 return response\r\n\r\nFile ~/article_analysis/venv_article_analysis/lib64/python3.9/site-packages/llama_index/query_engine/retriever_query_engine.py:171, in RetrieverQueryEngine._query(self, query_bundle)\r\n    165         nodes = self.retrieve(query_bundle)\r\n    167         retrieve_event.on_end(\r\n    168             payload={EventPayload.NODES: nodes},\r\n    169         )\r\n--> 171     response = self._response_synthesizer.synthesize(\r\n    172         query=query_bundle,\r\n    173         nodes=nodes,\r\n    174     )\r\n    176     query_event.on_end(payload={EventPayload.RESPONSE: response})\r\n    178 return response\r\n\r\nFile ~/article_analysis/venv_article_analysis/lib64/python3.9/site-packages/llama_index/response_synthesizers/base.py:125, in BaseSynthesizer.synthesize(self, query, nodes, additional_source_nodes)\r\n...\r\n     87         )\r\n     88 else:\r\n     89     if model is None and engine is None:\r\n\r\nInvalidRequestError: Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.chat_completion.ChatCompletion'\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7519/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7519/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7518",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7518/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7518/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7518/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7518",
        "id": 1878078312,
        "node_id": "I_kwDOIWuq585v8TNo",
        "number": 7518,
        "title": "[Question]:  max_top_k in VectorIndexAutoRetriever is not working and its setting to default 2?",
        "user": {
            "login": "apthagowda97",
            "id": 24203502,
            "node_id": "MDQ6VXNlcjI0MjAzNTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/24203502?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apthagowda97",
            "html_url": "https://github.com/apthagowda97",
            "followers_url": "https://api.github.com/users/apthagowda97/followers",
            "following_url": "https://api.github.com/users/apthagowda97/following{/other_user}",
            "gists_url": "https://api.github.com/users/apthagowda97/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apthagowda97/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apthagowda97/subscriptions",
            "organizations_url": "https://api.github.com/users/apthagowda97/orgs",
            "repos_url": "https://api.github.com/users/apthagowda97/repos",
            "events_url": "https://api.github.com/users/apthagowda97/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apthagowda97/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-09-01T21:46:59Z",
        "updated_at": "2023-09-05T15:44:43Z",
        "closed_at": "2023-09-05T15:44:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nFrom the [API Reference ](https://gpt-index.readthedocs.io/en/latest/api_reference/query/retrievers/vector_store.html) documentation I can see the `max_top_k` parameter which can be set to control the top k doc to fetch.\r\n\r\nIt internally takes the min of the `query_spec.top_k` and `max_top_k` as shown below.\r\n\r\n```\r\nif query_spec.top_k is None:\r\n    similarity_top_k = DEFAULT_SIMILARITY_TOP_K\r\nelse:\r\n    similarity_top_k = min(query_spec.top_k, self._max_top_k)\r\n```\r\n\r\nAs I am not setting the `query_spec.top_k` its setting to the default value of 2. \r\nHow can I set the `query_spec.top_k` ?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7518/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7518/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7517",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7517/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7517/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7517/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7517",
        "id": 1877802406,
        "node_id": "PR_kwDOIWuq585ZXAnd",
        "number": 7517,
        "title": "Allow langchain splitter in simple node parser",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-01T17:35:02Z",
        "updated_at": "2023-09-01T20:05:06Z",
        "closed_at": "2023-09-01T20:05:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7517",
            "html_url": "https://github.com/run-llama/llama_index/pull/7517",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7517.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7517.patch",
            "merged_at": "2023-09-01T20:05:05Z"
        },
        "body": "# Description\r\n\r\nAllows the use of langchain splitters in SimpleNodeParser\r\n\r\n(Note: This will not work when using to/from dict however)\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7506\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Tested in terminal\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7517/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7517/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7516",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7516/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7516/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7516/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7516",
        "id": 1877794069,
        "node_id": "PR_kwDOIWuq585ZW-2h",
        "number": 7516,
        "title": "Fix #7515 [Optimization] Speed up the function inside VectorIndexRetriever class",
        "user": {
            "login": "A-baoYang",
            "id": 9716977,
            "node_id": "MDQ6VXNlcjk3MTY5Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9716977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/A-baoYang",
            "html_url": "https://github.com/A-baoYang",
            "followers_url": "https://api.github.com/users/A-baoYang/followers",
            "following_url": "https://api.github.com/users/A-baoYang/following{/other_user}",
            "gists_url": "https://api.github.com/users/A-baoYang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/A-baoYang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/A-baoYang/subscriptions",
            "organizations_url": "https://api.github.com/users/A-baoYang/orgs",
            "repos_url": "https://api.github.com/users/A-baoYang/repos",
            "events_url": "https://api.github.com/users/A-baoYang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/A-baoYang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-01T17:27:45Z",
        "updated_at": "2023-11-07T16:09:22Z",
        "closed_at": "2023-11-07T16:09:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7516",
            "html_url": "https://github.com/run-llama/llama_index/pull/7516",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7516.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7516.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nRevise to\r\n```python\r\nif (not self._vector_store.stores_text) or (\r\n    isinstance(query_result.nodes[i], (ImageNode, IndexNode))\r\n):\r\n```\r\nsolution as the same in https://github.com/jerryjliu/llama_index/commit/51bec97118c10dbc2fd7e98e3181a69de5b3e302\r\n\r\nafter revising the code, it became fast and almost finished in 1 second:\r\n\r\n![image](https://github.com/jerryjliu/llama_index/assets/9716977/4beb188f-d36c-4b31-b0c1-1c3e9b90d494)\r\n\r\n\r\nFixes #7515 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] My changes generate no new warnings\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7516/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7516/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7515",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7515/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7515/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7515/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7515",
        "id": 1877769483,
        "node_id": "I_kwDOIWuq585v7H0L",
        "number": 7515,
        "title": "[Optimization]: Speed up the function inside `VectorIndexRetriever` class (`_build_node_list_from_query_result`)",
        "user": {
            "login": "A-baoYang",
            "id": 9716977,
            "node_id": "MDQ6VXNlcjk3MTY5Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9716977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/A-baoYang",
            "html_url": "https://github.com/A-baoYang",
            "followers_url": "https://api.github.com/users/A-baoYang/followers",
            "following_url": "https://api.github.com/users/A-baoYang/following{/other_user}",
            "gists_url": "https://api.github.com/users/A-baoYang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/A-baoYang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/A-baoYang/subscriptions",
            "organizations_url": "https://api.github.com/users/A-baoYang/orgs",
            "repos_url": "https://api.github.com/users/A-baoYang/repos",
            "events_url": "https://api.github.com/users/A-baoYang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/A-baoYang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-01T17:06:52Z",
        "updated_at": "2023-12-08T16:01:28Z",
        "closed_at": "2023-12-08T16:01:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\n### System Info\r\n- OS: `Darwin CFH00509436 22.4.0 Darwin Kernel Version 22.4.0: Mon Mar  6 21:00:17 PST 2023; root:xnu-8796.101.5~3/RELEASE_X86_64 x86_64`\r\n- Python version: `3.8.12`\r\n- package version: `llama-index==0.8.12`\r\n\r\n### Situation\r\n- Slow when running `query_engine.query()` and found out the bottleneck in `VectorIndexRetriever._build_node_list_from_query_result`\r\n- Need 30 seconds when running `self._docstore.docs` (it'll load all the articles from database or local index directory)\r\n\r\n<img width=\"1157\" alt=\"image\" src=\"https://github.com/jerryjliu/llama_index/assets/9716977/9f0c454d-2d15-414b-89cb-fcf1aef7e179\">\r\n\r\n### Solution\r\nRevise to \r\n```\r\nif (not self._vector_store.stores_text) or (\r\n    isinstance(query_result.nodes[i], (ImageNode, IndexNode))\r\n):\r\n```\r\nsolution as the same in https://github.com/jerryjliu/llama_index/pull/3435/commits/51bec97118c10dbc2fd7e98e3181a69de5b3e302\r\n\r\nafter revising the code, it became fast and almost finished in 1 second:\r\n\r\n<img width=\"1164\" alt=\"image\" src=\"https://github.com/jerryjliu/llama_index/assets/9716977/4aeab853-5661-41c9-82ec-15f19fe64e49\">\r\n\r\n\r\n### Version\r\n\r\n0.8.12\r\n\r\n### Steps to Reproduce\r\n\r\n```python\r\nquery_engine = RetrieverQueryEngine.from_args(\r\n    retriever=retriever,\r\n    response_synthesizer=response_synthesizer,\r\n    response_mode=\"simple_summarize\",\r\n    text_qa_template=my_template,\r\n    service_context=service_context,\r\n    streaming=True,\r\n)\r\nquery_engine.query(\"some text...\")\r\n```\r\n\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n##### Before\r\n\r\nSlow when running `query_engine.query()` and found out the bottleneck in `VectorIndexRetriever._build_node_list_from_query_result`\r\n\r\n<img width=\"1157\" alt=\"image\" src=\"https://github.com/jerryjliu/llama_index/assets/9716977/9f0c454d-2d15-414b-89cb-fcf1aef7e179\">\r\n\r\n##### After \r\n\r\nBecame fast and almost finished in 1 second\r\n\r\n<img width=\"1164\" alt=\"image\" src=\"https://github.com/jerryjliu/llama_index/assets/9716977/4aeab853-5661-41c9-82ec-15f19fe64e49\">\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7515/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7515/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7514",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7514/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7514/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7514/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7514",
        "id": 1877688916,
        "node_id": "I_kwDOIWuq585v60JU",
        "number": 7514,
        "title": "[Bug]: query engine with ChatPromptTemplate can result with Exception if using PandasExcelReader",
        "user": {
            "login": "BackendForge",
            "id": 136912086,
            "node_id": "U_kgDOCCkc1g",
            "avatar_url": "https://avatars.githubusercontent.com/u/136912086?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BackendForge",
            "html_url": "https://github.com/BackendForge",
            "followers_url": "https://api.github.com/users/BackendForge/followers",
            "following_url": "https://api.github.com/users/BackendForge/following{/other_user}",
            "gists_url": "https://api.github.com/users/BackendForge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BackendForge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BackendForge/subscriptions",
            "organizations_url": "https://api.github.com/users/BackendForge/orgs",
            "repos_url": "https://api.github.com/users/BackendForge/repos",
            "events_url": "https://api.github.com/users/BackendForge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BackendForge/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-01T16:10:12Z",
        "updated_at": "2023-09-01T20:18:05Z",
        "closed_at": "2023-09-01T20:18:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nException during query synchronous stream execution, using data from **.xls**/**.xlsx** file, where file reader is:\r\n\r\n```py\r\nPandasExcelReader = download_loader(\"PandasExcelReader\")\r\nxls_loader = PandasExcelReader(pandas_config={\"header\": 0})\r\n```\r\n\r\nquery engine set on streaming:\r\n\r\n```py\r\nself._query_engine = self._index.as_query_engine(\r\n                streaming=True, similarity_top_k=4\r\n            )\r\n```\r\n\r\nexception after running: `self._query_engine.query(chat_prompt)`\r\nwhen chat_prompt is not type string.\r\n\r\n```py\r\nchat_prompt = ChatPromptTemplate(message_templates=[chat_message]).format()\r\n# where:\r\nchat_message = ChatMessage()\r\nchat_message.content = prompt\r\n```\r\n\r\n**prompt** is **string**\r\n\r\n**BIG BRAIN REQUIRED**\r\n\r\nI tried to find root cause but have not yet.\r\nI found 2x HOT FIX for this issue:\r\n\r\nHOT FIX NR 1.\r\n```py\r\n    # can use chat_prompt as ChatPromptTemplate\r\n    chat_prompt: ChatPromptTemplate\r\n    return self._query_engine.query(chat_prompt)    \r\n    # if this FIX is implemented:\r\n    # .../python3.8/site-packages/llama_index/prompts/base.py L177, add:\r\n    # if 'existing_answer' in kwargs:\r\n    #   kwargs['existing_answer'] = str(kwargs['existing_answer'])\r\n```\r\n\r\nHOT FIX NR 2.\r\n```py\r\n    prompt = \"any string\"\r\n    return self._query_engine.query(prompt)\r\n```\n\n### Version\n\n0.8.16\n\n### Steps to Reproduce\n\n```py\r\n    # FIX REQUIRED: /opt/conda/lib/python3.8/site-packages/llama_index/prompts/base.py L177, add:\r\n    # if 'existing_answer' in kwargs:\r\n    #   kwargs['existing_answer'] = str(kwargs['existing_answer'])\r\n\r\nfrom llama_index import (\r\n    VectorStoreIndex,\r\n    SimpleDirectoryReader,\r\n    Document,\r\n    ServiceContext,\r\n    LangchainEmbedding,\r\n    download_loader,\r\n    set_global_service_context,\r\n)\r\nfrom llama_index.llms import LlamaCPP, ChatMessage\r\nfrom llama_index.llms.llama_utils import messages_to_prompt, completion_to_prompt\r\nfrom llama_index.prompts import ChatPromptTemplate\r\nfrom llama_index.readers.base import BaseReader\r\n\r\nfrom typing import Any, ClassVar, Dict, Type\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\n\r\nPandasExcelReader = download_loader(\"PandasExcelReader\")\r\nxls_loader = PandasExcelReader(pandas_config={\"header\": 0})\r\n\r\nADDITIONAL_FILE_READER_CLS: Dict[str, Type[BaseReader]] = {\r\n    \".xls\": xls_loader,\r\n    \".xlsx\": xls_loader,\r\n}\r\n\r\n\r\nmodel = LlamaCPP(\r\n                model_url = \"https://huggingface.co/TheBloke/Llama-2-13B-chat-GGML/resolve/main/llama-2-13b-chat.ggmlv3.q4_0.bin\",\r\n                temperature=0,\r\n                max_new_tokens=256,\r\n                context_window=3900,\r\n                generate_kwargs={},\r\n                model_kwargs={\r\n                    \"n_gpu_layers\": -1\r\n                },\r\n                messages_to_prompt=messages_to_prompt,\r\n                completion_to_prompt=completion_to_prompt,\r\n                verbose=True,\r\n            )\r\n\r\nfile_additional_supported_suffixes=ADDITIONAL_FILE_READER_CLS\r\ndocuments = SimpleDirectoryReader(\r\n                input_dir=path,\r\n                file_extractor=file_additional_supported_suffixes,\r\n            ).load_data()\r\n\r\nLLM_SYSTEM_PROMPT = \"\"\r\nembed_model_kwargs = {\"device\": \"cuda\"}\r\nembedding_model_name = \"intfloat/multilingual-e5-large\" \r\nembed_model = LangchainEmbedding(\r\n            HuggingFaceEmbeddings(\r\n                model_name=embedding_model_name, model_kwargs=embed_model_kwargs\r\n            )\r\n        )\r\nServiceContext.from_defaults(\r\n                llm=model,\r\n                system_prompt=LLM_SYSTEM_PROMPT,\r\n                embed_model=embed_model,\r\n            )\r\nindex = VectorStoreIndex.from_documents(\r\n                        documents, service_context=ctx\r\n                    )\r\nquery_engine = index.as_query_engine(\r\n                streaming=True, similarity_top_k=4\r\n            )\r\n\r\ndef query(prompt):\r\n    chat_message = ChatMessage()\r\n    chat_message.content = prompt\r\n    chat_prompt = ChatPromptTemplate(message_templates=[chat_message]).format()\r\n    return self._query_engine.query(chat_prompt)\r\n\r\nquery(\"something\")\r\n```\n\n### Relevant Logs/Tracbacks\n\n```shell\nreturn self._query_engine.query(chat_prompt)\r\n   File \"/opt/conda/lib/python3.8/site-packages/llama_index/indices/query/base.py\", line 23, in query\r\n    response = self._query(str_or_query_bundle)\r\n  File \"/opt/conda/lib/python3.8/site-packages/llama_index/query_engine/retriever_query_engine.py\", line 171, in _query\r\n    response = self._response_synthesizer.synthesize(\r\n  File \"/opt/conda/lib/python3.8/site-packages/llama_index/response_synthesizers/base.py\", line 125, in synthesize\r\n    response_str = self.get_response(\r\n  File \"/opt/conda/lib/python3.8/site-packages/llama_index/response_synthesizers/compact_and_refine.py\", line 34, in get_response\r\n    response = super().get_response(\r\n  File \"/opt/conda/lib/python3.8/site-packages/llama_index/response_synthesizers/refine.py\", line 125, in get_response\r\n    response = self._refine_response_single(\r\n  File \"/opt/conda/lib/python3.8/site-packages/llama_index/response_synthesizers/refine.py\", line 243, in _refine_response_single\r\n    refine_template = self._refine_template.partial_format(\r\n  File \"/opt/conda/lib/python3.8/site-packages/llama_index/prompts/base.py\", line 206, in partial_format\r\n    return SelectorPromptTemplate(\r\n  File \"/opt/conda/lib/python3.8/site-packages/llama_index/prompts/base.py\", line 178, in __init__\r\n    super().__init__(\r\n  File \"pydantic/main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for SelectorPromptTemplate\r\nkwargs -> existing_answer\r\n  str type expected (type=type_error.str)\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7514/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7514/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7513",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7513/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7513/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7513/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7513",
        "id": 1877678941,
        "node_id": "PR_kwDOIWuq585ZWlfA",
        "number": 7513,
        "title": "Improve error logs for text splitters",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-01T16:05:13Z",
        "updated_at": "2023-09-01T17:22:37Z",
        "closed_at": "2023-09-01T17:22:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7513",
            "html_url": "https://github.com/run-llama/llama_index/pull/7513",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7513.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7513.patch",
            "merged_at": "2023-09-01T17:22:36Z"
        },
        "body": "# Description\r\n\r\nIf the metadata is too large, the effective chunk size will be negative, leading to a confusing maximum recursion error. This PR simply adds better error logging with more helpful advice on how to fix the problem.\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7505\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7513/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7513/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7512",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7512/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7512/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7512/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7512",
        "id": 1877668121,
        "node_id": "I_kwDOIWuq585v6vEZ",
        "number": 7512,
        "title": "[Documentation]: Fix Parsing the response numbering",
        "user": {
            "login": "connorjoleary",
            "id": 6591862,
            "node_id": "MDQ6VXNlcjY1OTE4NjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6591862?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/connorjoleary",
            "html_url": "https://github.com/connorjoleary",
            "followers_url": "https://api.github.com/users/connorjoleary/followers",
            "following_url": "https://api.github.com/users/connorjoleary/following{/other_user}",
            "gists_url": "https://api.github.com/users/connorjoleary/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/connorjoleary/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/connorjoleary/subscriptions",
            "organizations_url": "https://api.github.com/users/connorjoleary/orgs",
            "repos_url": "https://api.github.com/users/connorjoleary/repos",
            "events_url": "https://api.github.com/users/connorjoleary/events{/privacy}",
            "received_events_url": "https://api.github.com/users/connorjoleary/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-01T15:56:53Z",
        "updated_at": "2023-09-04T02:58:17Z",
        "closed_at": "2023-09-04T02:58:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\nOn the [usage pattern page](https://gpt-index.readthedocs.io/en/latest/end_to_end_tutorials/usage_pattern.html) in the docs, `Parsing the response` starts with a 5 even though it is the 6th section. Also, it is not listed at the top table of contents.\n\n### Documenation Link\n\nhttps://gpt-index.readthedocs.io/en/latest/end_to_end_tutorials/usage_pattern.html",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7512/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7512/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7511",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7511/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7511/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7511/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7511",
        "id": 1877663878,
        "node_id": "I_kwDOIWuq585v6uCG",
        "number": 7511,
        "title": "[Question]: How I can use correctly node_parser ?",
        "user": {
            "login": "xrtechspot",
            "id": 122171547,
            "node_id": "U_kgDOB0gwmw",
            "avatar_url": "https://avatars.githubusercontent.com/u/122171547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xrtechspot",
            "html_url": "https://github.com/xrtechspot",
            "followers_url": "https://api.github.com/users/xrtechspot/followers",
            "following_url": "https://api.github.com/users/xrtechspot/following{/other_user}",
            "gists_url": "https://api.github.com/users/xrtechspot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xrtechspot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xrtechspot/subscriptions",
            "organizations_url": "https://api.github.com/users/xrtechspot/orgs",
            "repos_url": "https://api.github.com/users/xrtechspot/repos",
            "events_url": "https://api.github.com/users/xrtechspot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xrtechspot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-09-01T15:53:33Z",
        "updated_at": "2023-10-24T06:30:52Z",
        "closed_at": "2023-10-24T06:30:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHello, \r\nI'm new to Llamaindex, try to use node_parser  to control chunk size of a pdf document.\r\n\r\nWhen I run this script I get below error:\r\nAttributeError: 'TextNode' object has no attribute 'get_doc_id'. Did you mean: 'ref_doc_id'\r\n \r\nWhat I'm doing wrong? What documents should contain as input ?\r\nThank you\r\n\r\ndocuments = []  \r\nfile_name = Path(file_path).name\r\n\r\nwith open(file_path, \"rb\") as pdf_file:\r\n    pdf_reader = PyPDF2.PdfReader(pdf_file)\r\n    for i, page in enumerate(pdf_reader.pages):\r\n        text = page.extract_text()\r\n        if text:\r\n            # Adding metadata to each Document object\r\n            metadata = {\r\n                'page_label': str(i + 1),\r\n                'file_name': file_name\r\n            }\r\n            doc = Document(text=text, doc_id=f\"page_{i}\", metadata=metadata)\r\n            documents.append(doc)\r\n\r\ntext_splitter = TokenTextSplitter(\r\n    separator=\"\\n\",\r\n    chunk_size=512,\r\n    chunk_overlap=128\r\n)\r\nnode_parser = SimpleNodeParser.from_defaults(text_splitter=text_splitter)\r\nnodes = node_parser.get_nodes_from_documents(documents)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7511/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7511/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7510",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7510/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7510/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7510/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7510",
        "id": 1877530290,
        "node_id": "PR_kwDOIWuq585ZWFIY",
        "number": 7510,
        "title": "[version] bump version to 0.8.16",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-01T14:27:57Z",
        "updated_at": "2023-09-01T14:56:12Z",
        "closed_at": "2023-09-01T14:56:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7510",
            "html_url": "https://github.com/run-llama/llama_index/pull/7510",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7510.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7510.patch",
            "merged_at": "2023-09-01T14:56:11Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7510/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7510/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7509",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7509/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7509/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7509/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7509",
        "id": 1877514938,
        "node_id": "I_kwDOIWuq585v6Jq6",
        "number": 7509,
        "title": "[Question]: PDFReader how to specify chunk size ?",
        "user": {
            "login": "xrtechspot",
            "id": 122171547,
            "node_id": "U_kgDOB0gwmw",
            "avatar_url": "https://avatars.githubusercontent.com/u/122171547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xrtechspot",
            "html_url": "https://github.com/xrtechspot",
            "followers_url": "https://api.github.com/users/xrtechspot/followers",
            "following_url": "https://api.github.com/users/xrtechspot/following{/other_user}",
            "gists_url": "https://api.github.com/users/xrtechspot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xrtechspot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xrtechspot/subscriptions",
            "organizations_url": "https://api.github.com/users/xrtechspot/orgs",
            "repos_url": "https://api.github.com/users/xrtechspot/repos",
            "events_url": "https://api.github.com/users/xrtechspot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xrtechspot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-01T14:19:00Z",
        "updated_at": "2023-10-24T06:30:49Z",
        "closed_at": "2023-10-24T06:30:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHere is a way to specify in loader chunk size tu use?\r\n\r\nPDFReader = download_loader(\"PDFReader\")\r\nloader = PDFReader()\r\nchunks = loader.load_data(file=Path(file_path))\r\n\r\nThank you",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7509/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7509/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7508",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7508/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7508/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7508/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7508",
        "id": 1877467497,
        "node_id": "PR_kwDOIWuq585ZV3Z1",
        "number": 7508,
        "title": "feat: Portkey integration with Llama_index",
        "user": {
            "login": "noble-varghese",
            "id": 109506617,
            "node_id": "U_kgDOBobwOQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/109506617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noble-varghese",
            "html_url": "https://github.com/noble-varghese",
            "followers_url": "https://api.github.com/users/noble-varghese/followers",
            "following_url": "https://api.github.com/users/noble-varghese/following{/other_user}",
            "gists_url": "https://api.github.com/users/noble-varghese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noble-varghese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noble-varghese/subscriptions",
            "organizations_url": "https://api.github.com/users/noble-varghese/orgs",
            "repos_url": "https://api.github.com/users/noble-varghese/repos",
            "events_url": "https://api.github.com/users/noble-varghese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noble-varghese/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-01T13:51:08Z",
        "updated_at": "2023-09-04T03:32:51Z",
        "closed_at": "2023-09-04T03:23:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7508",
            "html_url": "https://github.com/run-llama/llama_index/pull/7508",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7508.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7508.patch",
            "merged_at": "2023-09-04T03:23:18Z"
        },
        "body": "# Description\r\n\r\nThis pull request introduces the Portkey integration to the Llama_index repository, enhancing its production capabilities. Portkey offers a comprehensive set of tools and features to optimize the performance and reliability of AI applications.\r\n\r\n### Key Features of Portkey's Integration with Llamaindex:\r\n1. **AI Gateway**:\r\n    - **Automated Fallbacks & Retries**: Ensure your application remains functional even if a primary service fails.\r\n    - **Load Balancing**: Efficiently distribute incoming requests among multiple models.\r\n    - **Semantic Caching**: Reduce costs and latency by intelligently caching results.\r\n2. **Observability**:\r\n    - **Logging**: Keep track of all requests for monitoring and debugging.\r\n    - **Requests Tracing**: Understand the journey of each request for optimization.\r\n    - **Custom Tags**: Segment and categorize requests for better insights.\r\n\r\n### Changes Made:\r\nIncorporated a new LLM (Large Language Model) within the LLMs folder, which inherits from the existing CustomLLM class. This new LLM is responsible for integrating and utilizing Portkey's enhanced production capabilities while maintaining consistency with the repository's coding standards.\r\n\r\n### Dependencies:\r\nThis integration introduces one external library called \"Rubeus,\" which is added to the list of dependencies. Rubeus is an integral part of Portkey and contributes to its internal functioning.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7508/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7508/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7507",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7507/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7507/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7507/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7507",
        "id": 1877166196,
        "node_id": "I_kwDOIWuq585v40h0",
        "number": 7507,
        "title": "[Feature Request]: Add native support for Amazon Bedrock embeddings and LLM models",
        "user": {
            "login": "xrtechspot",
            "id": 122171547,
            "node_id": "U_kgDOB0gwmw",
            "avatar_url": "https://avatars.githubusercontent.com/u/122171547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xrtechspot",
            "html_url": "https://github.com/xrtechspot",
            "followers_url": "https://api.github.com/users/xrtechspot/followers",
            "following_url": "https://api.github.com/users/xrtechspot/following{/other_user}",
            "gists_url": "https://api.github.com/users/xrtechspot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xrtechspot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xrtechspot/subscriptions",
            "organizations_url": "https://api.github.com/users/xrtechspot/orgs",
            "repos_url": "https://api.github.com/users/xrtechspot/repos",
            "events_url": "https://api.github.com/users/xrtechspot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xrtechspot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 6129428377,
                "node_id": "LA_kwDOIWuq588AAAABbVenmQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/request%20contribution%20board",
                "name": "request contribution board",
                "color": "D93F0B",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-01T10:26:40Z",
        "updated_at": "2023-10-30T20:26:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nIt is possible to add native support for Amazon Bedrock embeddings and LLM models (https://aws.amazon.com/bedrock/), to ramain in Llamaindex ecosystem and not use Langchain for this ?\r\n\r\nhttps://python.langchain.com/docs/integrations/providers/bedrock\r\n\r\nThank you\n\n### Reason\n\nUse Llamaindex ecosystem and not load other libraries \n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7507/reactions",
            "total_count": 11,
            "+1": 11,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7507/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7506",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7506/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7506/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7506/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7506",
        "id": 1877157488,
        "node_id": "I_kwDOIWuq585v4yZw",
        "number": 7506,
        "title": "[Bug]: Not able to load langchain text splitters in SimpleNodeParser",
        "user": {
            "login": "dhruv2512",
            "id": 45820090,
            "node_id": "MDQ6VXNlcjQ1ODIwMDkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/45820090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhruv2512",
            "html_url": "https://github.com/dhruv2512",
            "followers_url": "https://api.github.com/users/dhruv2512/followers",
            "following_url": "https://api.github.com/users/dhruv2512/following{/other_user}",
            "gists_url": "https://api.github.com/users/dhruv2512/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dhruv2512/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dhruv2512/subscriptions",
            "organizations_url": "https://api.github.com/users/dhruv2512/orgs",
            "repos_url": "https://api.github.com/users/dhruv2512/repos",
            "events_url": "https://api.github.com/users/dhruv2512/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dhruv2512/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-09-01T10:20:37Z",
        "updated_at": "2023-09-03T12:37:29Z",
        "closed_at": "2023-09-01T20:05:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhen I try to use Langchain's RecursiveCharacterTextSplitter in SimpleNodeParser, it gives me the below error:\r\n\r\nValidationError: 1 validation error for SimpleNodeParser\r\ntext_splitter\r\n  value is not a valid dict (type=type_error.dict)\n\n### Version\n\n0.7.13\n\n### Steps to Reproduce\n\nLoad RecursiveCharacterTextSplitter into SimpleNodeParser\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7506/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7506/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7505",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7505/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7505/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7505/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7505",
        "id": 1877075114,
        "node_id": "I_kwDOIWuq585v4eSq",
        "number": 7505,
        "title": "[Bug]: `RecursionError: maximum recursion depth exceeded while calling a Python object` for `HierarchicalNodeParser`",
        "user": {
            "login": "Whisht",
            "id": 16497652,
            "node_id": "MDQ6VXNlcjE2NDk3NjUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16497652?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Whisht",
            "html_url": "https://github.com/Whisht",
            "followers_url": "https://api.github.com/users/Whisht/followers",
            "following_url": "https://api.github.com/users/Whisht/following{/other_user}",
            "gists_url": "https://api.github.com/users/Whisht/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Whisht/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Whisht/subscriptions",
            "organizations_url": "https://api.github.com/users/Whisht/orgs",
            "repos_url": "https://api.github.com/users/Whisht/repos",
            "events_url": "https://api.github.com/users/Whisht/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Whisht/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-01T09:26:44Z",
        "updated_at": "2023-09-04T01:13:53Z",
        "closed_at": "2023-09-01T17:22:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nAfter installing llama-index following [install from the source](https://gpt-index.readthedocs.io/en/stable/getting_started/installation.html) with `pip install -r requirements.txt`. I tried to parse some Chinese documents with metadata to nodes using HierarchicalNodeParser, and it hints at the RecursionError.\r\n\r\n### Version\r\n\r\n0.8.13\r\n\r\n### Steps to Reproduce\r\n\r\nHere are the minimal codes required for reproduction.\r\n\r\n```python\r\nfrom llama_index.node_parser import HierarchicalNodeParser\r\nfrom llama_index import Document\r\n\r\ndocs = [\r\n    {\r\n        \"title\": \"\u4f0a\u62c9\u514b\u901a\u8baf\",\r\n        \"text\": \"\u4f0a\u62c9\u514b\u901a\u8baf\\n\\n\u672c\u6761\u76ee\u662f\u6709\u5173\u4f0a\u62c9\u514b\u7684\u901a\u8baf\u72b6\u51b5\u3002\\n\\n2001\u5e74\u524d\u7684\u4f0a\u62c9\u514b\u901a\u8baf\uff0c\u53ef\u4ee5\u8bf4\u662f\u4e00\u7a77\u4e8c\u767d\uff0c\u4e3b\u8981\u7684\u4ea4\u6362\u673a\u662f\u4f7f\u7528\u56fd\u5185\u7684\u4e24\u5bb6\u5927\u901a\u8baf\u5546\u3002\\n\\n2003\u5e74\u7684\u4f0a\u62c9\u514b\u6218\u4e89\u4e25\u91cd\u7834\u574f\u4e86\u5305\u62ec\u56fd\u9645\u901a\u8baf\u5728\u5185\u7684\u7535\u8baf\u4e1a\u3002\u7f8e\u56fd\u56fd\u9645\u5f00\u53d1\u7f72\u4e3a\u6b64\u4fee\u7406\u4e86\u4ea4\u6362\u5bb9\u91cf\uff0c\u5e76\u4e14\u5efa\u7acb\u4e86\u4e00\u4e2a\u79fb\u52a8\u548c\u536b\u661f\u901a\u8baf\u5de5\u5177\u3002\u76ee\u524d\u6709\u7ebf\u901a\u8baf\u5df2\u7ecf\u8d85\u8fc7\u4e86\u6218\u524d\u7684\u6c34\u5e73\u3002\\n\\n\\n\u57282003\u5e74\u671f\u95f4\u906d\u53d7\u7834\u574f\u7684\u4ea4\u6362\u673a\u548c\u5e72\u7ebf\u5df2\u7ecf\u4fee\u590d\uff0c\u4f46\u662f\u4ecd\u7136\u5b58\u5728\u88ab\u7834\u574f\u7684\u95ee\u9898\u3002\u4ea4\u6362\u5bb9\u91cf\u6b63\u5728\u63d0\u9ad8\u51c6\u5165\u3002\u79fb\u52a8\u901a\u8baf\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u5e76\u4e14\u4e00\u4e2a\u5927\u57ce\u5e02\u4e3a\u4e2d\u5fc3\u5efa\u7acb\u4e86\u4e09\u4e2aGSM\u7f51\u7edc\uff0c\u5168\u56fd\u8303\u56f4\u7684\u8fde\u901a\u6027\u5f97\u5230\u4e86\u5b8c\u5584\u3002\u76ee\u524d\u6709870\u4e07\u7684\u79fb\u52a8\u901a\u8baf\u7528\u6237\u3002\\n\\n\u56fd\u9645\u957f\u9014\u4ee3\u7801\uff1a964\\n\\n\u536b\u661f\u57fa\u7ad9\uff1a2\uff081\u4e2a\u5728\u5927\u897f\u6d0b\uff0c1\u4e2a\u5728\u5370\u5ea6\u6d0b\uff09\\n\\n1\u4e2a\u5168\u7403\u536b\u661f\u901a\u8baf\u7cfb\u7edf\u5728\u5927\u897f\u6d0b\u5730\u533a\u30021\u4e2a\u963f\u62c9\u4f2f\u901a\u8baf\u536b\u661f\uff08\u4e0d\u8d77\u4f5c\u7528\uff09\\n\\n\u540c\u8f74\u7535\u7f06\u548c\u5fae\u6ce2\u65e0\u7ebf\u7535\u4e2d\u7ee7\u4e0e\u7ea6\u65e6\u3001\u79d1\u5a01\u7279\u3001\u53d9\u5229\u4e9a\u3001 \u571f\u8033\u5176\u8fde\u63a5\u3002\u5c3d\u7ba1\u65b0\u5efa\u4e86\u536b\u661f\u7f51\u5173\uff0c\u4f46\u662f\u5df4\u683c\u8fbe\u4ee5\u5916\u7684\u56fd\u9645\u7535\u8bdd\u8fd8\u7ecf\u5e38\u51fa\u95ee\u9898\u3002\\n\\n\u4e0d\u53d7\u7ba1\u5236\u7684\u5a92\u4f53\u7ecf\u8fc717\u4e2a\u6708\u7684\u589e\u957f\uff0c\u5728\u4f0a\u62c9\u514b\u5883\u5185\u5df2\u7ecf\u6709\u4e86\u5927\u7ea680\u4e2a\u7535\u53f0\uff082004\u5e74\uff09\u3002\\n\\n\u7535\u89c6\u53f0: 21(2004\u5e74)\\n\\n\u56e0\u7279\u7f51\u56fd\u5bb6\u4ee3\u7801:.iq\\n\\n\u4e92\u8054\u7f51\u670d\u52a1\u5546:5(2006\u5e74)\\n\\n\u7f51\u6c11:36,000(2005\u5e74)\\n\",\r\n        \"summarization\": \"\u4f0a\u62c9\u514b\u901a\u8baf\u57282003\u5e74\u6218\u4e89\u540e\u5f97\u5230\u91cd\u5efa\uff0c\u6709\u7ebf\u901a\u8baf\u8d85\u8fc7\u6218\u524d\u6c34\u5e73\uff0c\u79fb\u52a8\u901a\u8baf\u5e7f\u6cdb\u4f7f\u7528\uff0c\u62e5\u6709870\u4e07\u7528\u6237\u3002\u56fd\u9645\u957f\u9014\u4ee3\u7801\u4e3a964\uff0c\u4e0e\u5468\u8fb9\u56fd\u5bb6\u8fde\u63a5\u3002\u5883\u5185\u5a92\u4f53\u589e\u957f\uff0c\u62e5\u6709\u591a\u4e2a\u7535\u53f0\u548c\u7535\u89c6\u53f0\u3002\",\r\n    },\r\n    {\r\n        \"title\": \"\u590f\u5c0f\u6b63\",\r\n        \"text\": \"\u590f\u5c0f\u6b63\\n\\n\u300a\u590f\u5c0f\u6b63\u300b\u4e3a\u4e2d\u56fd\u73b0\u5b58\u6700\u65e9\u7684\u79d1\u5b66\u6587\u732e\u4e4b\u4e00\uff0c\u4e5f\u662f\u4e2d\u56fd\u73b0\u5b58\u6700\u65e9\u7684\u4e00\u90e8\u519c\u4e8b\u5386\u4e66\uff0c\u539f\u4e3a\u300a\u5927\u6234\u793c\u8bb0\u300b\u4e2d\u7684\u7b2c47\u7bc7\u3002\\n\\n\u590f\u5c0f\u6b63\u539f\u6587\u6536\u5165\u300a\u5927\u6234\u793c\u8bb0\u300b\u4e2d\uff0c\u5728\u5510\u5b8b\u65f6\u671f\u6563\u4f5a\uff08\u800c\u5927\u6234\u793c\u8bb0\u4ea6\u6709\u4e00\u534a\u540c\u65f6\u6563\u4f5a\uff09\u3002\u73b0\u5b58\u7684\u300a\u590f\u5c0f\u6b63\u300b\u4e3a\u5b8b\u671d\u5085\u5d27\u537f\u8457\u300a\u590f\u5c0f\u6b63\u4f20\u300b\u628a\u5f53\u65f6\u6240\u85cf\u4e4b\u4e24\u4e2a\u7248\u672c\u300a\u590f\u5c0f\u6b63\u300b\u6587\u7a3f\u6c47\u96c6\u800c\u6210\u3002\u4f46\u56e0\u7ecf\u6587\u4e0e\u4f20\u6587\uff08\u4ee5\u81ea\u5df1\u7684\u6587\u5b57\u89e3\u91ca\uff09\u5728\u7bc7\u7ae0\u4e2d\u6df7\u96c6\u800c\u6ca1\u6709\u8bf4\u660e\u4e4b\u5173\u7cfb\uff0c\u300a\u590f\u5c0f\u6b63\u4f20\u300b\u4e2d\u4e0d\u5c3d\u662f\u539f\u6765\u4e4b\u5168\u90e8\u7bc7\u7ae0\u3002\\n\\n\u56e0\u539f\u7a3f\u6563\u4f5a\u4e0e\u6210\u5f62\u4e4b\u95ee\u9898\uff0c\u6210\u7a3f\u5e74\u4ee3\u4e89\u8bba\u5f88\u5927\uff0c\u4f46\u4e00\u822c\u8ba4\u4e3a\u6700\u8fdf\u6210\u4e66\u5728\u6625\u79cb\u65f6\u671f\uff1b\u636e\u897f\u6c49\u65f6\u671f\u7684\u300a\u53f2\u8bb0\u2027\u590f\u672c\u7eaa\u300b\u8f7d\uff1a\u300c\u592a\u53f2\u516c\u66f0\uff1a\u5b54\u5b50\u6b63\u590f\u65f6\uff0c\u5b66\u8005\u591a\u4f20\u300a\u590f\u5c0f\u6b63\u300b-{\u4e91}-\u300d\u3002\u6545\u4eba\u4eec\u8ba4\u4e3a\u662f\u5b54\u4e18\u53ca\u5176\u95e8\u751f\u8003\u5bdf\u540e\u6240\u8bb0\u8f7d\u4e0b\u7684\u519c\u4e8b\u5386\u4e66\uff0c\u6240\u6536\u5f55\u4e4b\u6709\u5173\u590f\u671d\u7684\u4e5f\u591a\u662f\u7269\u5019\u7b49\u6587\u5316\u8baf\u606f\u3002\\n\\n\u4e66\u4e2d\u9664\u4e8c\u6708\u3001\u5341\u4e00\u4e0e\u5341\u4e8c\u6708\u5916\uff0c\u6bcf\u6708\u8f7d\u6709\u786e\u5b9a\u5b63\u8282\u7684\u661f\u8c61\uff08\u4e3b\u8981\u662f\u62f1\u6781\u661f\u8c61\u4e0e\u9ec4\u9053\u661f\u8c61\uff09\u4ee5\u6307\u5bfc\u52a1\u519c\u751f\u4ea7\uff0c\u53e6\u5916\u4ea6\u6709\u8bb0\u8f7d\u5f53\u6708\u690d\u7269\u4e4b\u751f\u957f\u5f62\u6001\u3001\u52a8\u7269\u4e4b\u6d3b\u52a8\u4e60\u6027\u4e0e\u796d\u7940(\u4ea6\u4e3a\u7269\u5019\u5b66\u4e4b\u91cd\u8981\u5178\u7c4d)\u3002\\n\\n\u7531\u4e8e\u5185\u5bb9\u6d89\u53ca\u661f\u8c61\u4e0e\u519c\u4e1a\u8d56\u4ee5\u4f7f\u7528\u4e4b\u5386\u6cd5\u7684\u5173\u7cfb\uff0c\u5bf9\u53e4\u4ee3\u5929\u8c61\u4e0e\u5148\u79e6\u5386\u6cd5\u7814\u7a76\u4e5f\u6709\u76f8\u5f53\u91cd\u8981\u4e4b\u53c2\u8003\u4ef7\u503c\u3002\\n\\n\",\r\n        \"summarization\": \"\u300a\u590f\u5c0f\u6b63\u300b\u662f\u4e2d\u56fd\u73b0\u5b58\u6700\u65e9\u7684\u79d1\u5b66\u6587\u732e\u4e4b\u4e00\uff0c\u539f\u4e3a\u300a\u5927\u6234\u793c\u8bb0\u300b\u7684\u7b2c47\u7bc7\uff0c\u73b0\u5b58\u7248\u672c\u7531\u5b8b\u671d\u5085\u5d27\u537f\u7f16\u64b0\u3002\u4e66\u4e2d\u8bb0\u5f55\u4e86\u5404\u6708\u4efd\u7684\u661f\u8c61\u3001\u690d\u7269\u751f\u957f\u5f62\u6001\u3001\u52a8\u7269\u6d3b\u52a8\u4e60\u6027\u548c\u796d\u7940\uff0c\u5bf9\u53e4\u4ee3\u5929\u8c61\u548c\u5148\u79e6\u5386\u6cd5\u7814\u7a76\u5177\u6709\u91cd\u8981\u53c2\u8003\u4ef7\u503c\u3002\",\r\n    },\r\n]\r\ndocs = [\r\n    Document(\r\n        text=doc[\"text\"],\r\n        metadata={\"title\": doc[\"title\"], \"summarization\": doc[\"summarization\"]},\r\n    )\r\n    for doc in docs\r\n]\r\nparser = HierarchicalNodeParser.from_defaults()\r\nnodes = parser.get_nodes_from_documents(docs)\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"~/mambaforge/envs/llama-index/lib/python3.11/site-packages/IPython/core/interactiveshell.py\", line 3460, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-95-74f27d5bd0bf>\", line 23, in <module>\r\n    parser.get_nodes_from_documents(docs)\r\n  File \"~/github/llama_index/llama_index/node_parser/hierarchical.py\", line 210, in get_nodes_from_documents\r\n    nodes_from_doc = self._recursively_get_nodes_from_nodes([doc], 0)\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"~/github/llama_index/llama_index/node_parser/hierarchical.py\", line 178, in _recursively_get_nodes_from_nodes\r\n    sub_sub_nodes = self._recursively_get_nodes_from_nodes(\r\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"~/github/llama_index/llama_index/node_parser/hierarchical.py\", line 178, in _recursively_get_nodes_from_nodes\r\n    sub_sub_nodes = self._recursively_get_nodes_from_nodes(\r\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"~/github/llama_index/llama_index/node_parser/hierarchical.py\", line 160, in _recursively_get_nodes_from_nodes\r\n    cur_sub_nodes = get_nodes_from_document(\r\n                    ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"~/github/llama_index/llama_index/node_parser/node_utils.py\", line 107, in get_nodes_from_document\r\n    return get_nodes_from_node(\r\n           ^^^^^^^^^^^^^^^^^^^^\r\n  File \"~/github/llama_index/llama_index/node_parser/node_utils.py\", line 126, in get_nodes_from_node\r\n    text_splits = text_splitter.split_text_metadata_aware(\r\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"~/github/llama_index/llama_index/text_splitter/sentence_splitter.py\", line 128, in split_text_metadata_aware\r\n    return self._split_text(text, chunk_size=effective_chunk_size)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"~/github/llama_index/llama_index/text_splitter/sentence_splitter.py\", line 145, in _split_text\r\n    splits = self._split(text, chunk_size)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"~/github/llama_index/llama_index/text_splitter/sentence_splitter.py\", line 185, in _split\r\n    ns = self._split(split, chunk_size=chunk_size)\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"~/github/llama_index/llama_index/text_splitter/sentence_splitter.py\", line 185, in _split\r\n    ns = self._split(split, chunk_size=chunk_size)\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"~/github/llama_index/llama_index/text_splitter/sentence_splitter.py\", line 185, in _split\r\n    ns = self._split(split, chunk_size=chunk_size)\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  [Previous line repeated 2965 more times]\r\n  File \"~/github/llama_index/llama_index/text_splitter/sentence_splitter.py\", line 166, in _split\r\n    splits = split_fn(text)\r\n             ^^^^^^^^^^^^^^\r\n  File \"~/mambaforge/envs/llama-index/lib/python3.11/site-packages/nltk/tokenize/__init__.py\", line 107, in sent_tokenize\r\n    return tokenizer.tokenize(text)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"~/mambaforge/envs/llama-index/lib/python3.11/site-packages/nltk/tokenize/punkt.py\", line 1281, in tokenize\r\n    return list(self.sentences_from_text(text, realign_boundaries))\r\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"~/mambaforge/envs/llama-index/lib/python3.11/site-packages/nltk/tokenize/punkt.py\", line 1341, in sentences_from_text\r\n    return [text[s:e] for s, e in self.span_tokenize(text, realign_boundaries)]\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"~/mambaforge/envs/llama-index/lib/python3.11/site-packages/nltk/tokenize/punkt.py\", line 1341, in <listcomp>\r\n    return [text[s:e] for s, e in self.span_tokenize(text, realign_boundaries)]\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"~/mambaforge/envs/llama-index/lib/python3.11/site-packages/nltk/tokenize/punkt.py\", line 1329, in span_tokenize\r\n    for sentence in slices:\r\n  File \"~/mambaforge/envs/llama-index/lib/python3.11/site-packages/nltk/tokenize/punkt.py\", line 1459, in _realign_boundaries\r\n    for sentence1, sentence2 in _pair_iter(slices):\r\n  File \"~/mambaforge/envs/llama-index/lib/python3.11/site-packages/nltk/tokenize/punkt.py\", line 321, in _pair_iter\r\n    prev = next(iterator)\r\n           ^^^^^^^^^^^^^^\r\n  File \"~/mambaforge/envs/llama-index/lib/python3.11/site-packages/nltk/tokenize/punkt.py\", line 1431, in _slices_from_text\r\n    for match, context in self._match_potential_end_contexts(text):\r\n  File \"~/mambaforge/envs/llama-index/lib/python3.11/site-packages/nltk/tokenize/punkt.py\", line 1393, in _match_potential_end_contexts\r\n    previous_slice = slice(0, 0)\r\n                     ^^^^^^^^^^^\r\nRecursionError: maximum recursion depth exceeded while calling a Python object\r\n```\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7505/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7505/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7504",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7504/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7504/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7504/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7504",
        "id": 1876915941,
        "node_id": "PR_kwDOIWuq585ZT_J5",
        "number": 7504,
        "title": "fix marvin link ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-01T07:40:06Z",
        "updated_at": "2023-09-01T14:23:39Z",
        "closed_at": "2023-09-01T14:23:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7504",
            "html_url": "https://github.com/run-llama/llama_index/pull/7504",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7504.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7504.patch",
            "merged_at": "2023-09-01T14:23:38Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7504/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7504/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7503",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7503/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7503/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7503/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7503",
        "id": 1876785295,
        "node_id": "PR_kwDOIWuq585ZTjie",
        "number": 7503,
        "title": "updated_pinecone_nodes_received",
        "user": {
            "login": "siddhant01",
            "id": 31789669,
            "node_id": "MDQ6VXNlcjMxNzg5NjY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/31789669?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/siddhant01",
            "html_url": "https://github.com/siddhant01",
            "followers_url": "https://api.github.com/users/siddhant01/followers",
            "following_url": "https://api.github.com/users/siddhant01/following{/other_user}",
            "gists_url": "https://api.github.com/users/siddhant01/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/siddhant01/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/siddhant01/subscriptions",
            "organizations_url": "https://api.github.com/users/siddhant01/orgs",
            "repos_url": "https://api.github.com/users/siddhant01/repos",
            "events_url": "https://api.github.com/users/siddhant01/events{/privacy}",
            "received_events_url": "https://api.github.com/users/siddhant01/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-01T05:48:59Z",
        "updated_at": "2023-09-04T20:56:44Z",
        "closed_at": "2023-09-04T20:56:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7503",
            "html_url": "https://github.com/run-llama/llama_index/pull/7503",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7503.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7503.patch",
            "merged_at": "2023-09-04T20:56:44Z"
        },
        "body": "# Description\r\nhave added embedding to the TextNode, and have used the precomputed embeddings that were used for storing in the pinecone.\r\n\r\nFixes # (issue)\r\nit helps in removing redundant call to get the embedding by using the embedding that were generated for storing in the pinecone vector store.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\nafter these changes, we now have node.node.embedding from Pinecone assigned with embeddings and is no more none\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [X] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7503/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7503/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7502",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7502/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7502/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7502/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7502",
        "id": 1876534163,
        "node_id": "PR_kwDOIWuq585ZStDR",
        "number": 7502,
        "title": "Move pydantic version compatibility logic into bridge file",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-01T01:15:09Z",
        "updated_at": "2023-09-01T07:35:38Z",
        "closed_at": "2023-09-01T07:35:37Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7502",
            "html_url": "https://github.com/run-llama/llama_index/pull/7502",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7502.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7502.patch",
            "merged_at": "2023-09-01T07:35:37Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7502/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7502/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7501",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7501/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7501/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7501/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7501",
        "id": 1876440770,
        "node_id": "PR_kwDOIWuq585ZSY1r",
        "number": 7501,
        "title": "Postgres hybrid search (gitpeppy changes)",
        "user": {
            "login": "sourabhdesai",
            "id": 3005241,
            "node_id": "MDQ6VXNlcjMwMDUyNDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3005241?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sourabhdesai",
            "html_url": "https://github.com/sourabhdesai",
            "followers_url": "https://api.github.com/users/sourabhdesai/followers",
            "following_url": "https://api.github.com/users/sourabhdesai/following{/other_user}",
            "gists_url": "https://api.github.com/users/sourabhdesai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sourabhdesai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sourabhdesai/subscriptions",
            "organizations_url": "https://api.github.com/users/sourabhdesai/orgs",
            "repos_url": "https://api.github.com/users/sourabhdesai/repos",
            "events_url": "https://api.github.com/users/sourabhdesai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sourabhdesai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-31T23:35:57Z",
        "updated_at": "2023-09-04T05:16:50Z",
        "closed_at": "2023-09-04T05:16:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7501",
            "html_url": "https://github.com/run-llama/llama_index/pull/7501",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7501.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7501.patch",
            "merged_at": "2023-09-04T05:16:49Z"
        },
        "body": "# Description\r\n\r\n[Original PR](https://github.com/gitpeppy/llama_index/tree/hybrid_postgres_poc) from @gitpeppy for hybrid search in postgres vector db integration.\r\n\r\nAdditional changes\r\n* Fix bugs in test code\r\n  * previously some tests were always running in async instead of async/sync versions\r\n  * previously example vector embeddings were all co-linear, so had the same cosine distance, and tests were only passing because initial insertion ordering\r\n* Fix keyword search SQL to properly use `ts_query` in the where clause\r\n* update notebook & changelog.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7501/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7501/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7500",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7500/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7500/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7500/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7500",
        "id": 1876422861,
        "node_id": "I_kwDOIWuq585v1_DN",
        "number": 7500,
        "title": "[Bug]: Creating a knowledge graphs triggers Azure OpenAI's content policy",
        "user": {
            "login": "Jegama",
            "id": 12228031,
            "node_id": "MDQ6VXNlcjEyMjI4MDMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12228031?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jegama",
            "html_url": "https://github.com/Jegama",
            "followers_url": "https://api.github.com/users/Jegama/followers",
            "following_url": "https://api.github.com/users/Jegama/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jegama/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jegama/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jegama/subscriptions",
            "organizations_url": "https://api.github.com/users/Jegama/orgs",
            "repos_url": "https://api.github.com/users/Jegama/repos",
            "events_url": "https://api.github.com/users/Jegama/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jegama/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-08-31T23:07:55Z",
        "updated_at": "2023-10-10T18:40:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI want to create a vector index and a knowledge graph. The vector index works fine. However, when I want to create the knowledge graph, it triggers Azure OpenAI's content policy. Why is that?\r\n\r\nI'm using `from llama_index.llms import AzureOpenAI` as the LLM. Why does it trigger it with the knowledge graph and not the vector index?\n\n### Version\n\n0.8.7\n\n### Steps to Reproduce\n\n\r\n```\r\ndocuments_ = []\r\n\r\nfor file in tqdm(all_page_ids):\r\n    cleaned, table_dict, urls, last_mod, report_url, title, valid = confluence_helper.process_page(file)\r\n\r\n    if not valid:\r\n        continue\r\n    \r\n    titles.append(title)\r\n    documents = TextLoader('temp/temp.txt', encoding='utf-8').load()\r\n    for doc in documents:\r\n        nodes = confluence_helper.process_metadata(doc, last_mod, report_url, title, table_dict, node_parser)\r\n        librarian_vector_index.insert_nodes(nodes)\r\n        documents_.extend(nodes)\r\n\r\nlibrarian_vector_index.storage_context.persist(persist_dir='librarian_vector_index')\r\n\r\nlibrarian_graph_index = KnowledgeGraphIndex(documents_, max_triplets_per_chunk=5, include_embeddings=True, storage_context=storage_context)\r\n```\r\n\n\n### Relevant Logs/Tracbacks\n\n```shell\nTraceback (most recent call last):\r\n  File \"C:\\Users\\jmancilla\\OneDrive - Roku Inc\\Dev\\uxr-librarian\\generate_index.py\", line 101, in <module>\r\n    print(f'\\nGraph index populated in {(time.time() - start)/60:.3f} minutes')\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\llama_index\\indices\\knowledge_graph\\base.py\", line 85, in __init__\r\n    super().__init__(\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\llama_index\\indices\\base.py\", line 71, in __init__\r\n    index_struct = self.build_index_from_nodes(nodes)\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\llama_index\\indices\\base.py\", line 171, in build_index_from_nodes\r\n    return self._build_index_from_nodes(nodes)\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\llama_index\\indices\\knowledge_graph\\base.py\", line 171, in _build_index_from_nodes\r\n    triplets = self._extract_triplets(\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\llama_index\\indices\\knowledge_graph\\base.py\", line 122, in _extract_triplets\r\n    return self._llm_extract_triplets(text)\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\llama_index\\indices\\knowledge_graph\\base.py\", line 126, in _llm_extract_triplets\r\n    response = self._service_context.llm_predictor.predict(\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\llama_index\\llm_predictor\\base.py\", line 105, in predict\r\n    chat_response = self._llm.chat(messages)\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\llama_index\\llms\\base.py\", line 140, in wrapped_llm_chat\r\n    f_return_val = f(_self, messages, **kwargs)\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\llama_index\\llms\\openai.py\", line 106, in chat\r\n    return chat_fn(messages, **kwargs)\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\llama_index\\llms\\openai.py\", line 163, in _chat\r\n    response = completion_with_retry(\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\llama_index\\llms\\openai_utils.py\", line 138, in completion_with_retry\r\n    return _completion_with_retry(**kwargs)\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\tenacity\\__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\tenacity\\__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\tenacity\\__init__.py\", line 314, in iter\r\n    return fut.result()\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\concurrent\\futures\\_base.py\", line 451, in result\r\n    return self.__get_result()\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\concurrent\\futures\\_base.py\", line 403, in __get_result\r\n    raise self._exception\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\tenacity\\__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\llama_index\\llms\\openai_utils.py\", line 136, in _completion_with_retry\r\n    return client.create(**kwargs)\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\openai\\api_resources\\chat_completion.py\", line 25, in create\r\n    return super().create(*args, **kwargs)\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\openai\\api_resources\\abstract\\engine_api_resource.py\", line 153, in create\r\n    response, _, api_key = requestor.request(\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\openai\\api_requestor.py\", line 298, in request\r\n    resp, got_stream = self._interpret_response(result, stream)\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\openai\\api_requestor.py\", line 700, in _interpret_response\r\n    self._interpret_response_line(\r\n  File \"C:\\Users\\jmancilla\\Anaconda3\\envs\\librarian\\lib\\site-packages\\openai\\api_requestor.py\", line 765, in _interpret_response_line\r\n    raise self.handle_error_response(\r\nopenai.error.InvalidRequestError: The response was filtered due to the prompt triggering Azure OpenAI\u2019s content management policy. Please modify your prompt and retry. To learn more about our content filtering policies please read our documentation: https://go.microsoft.com/fwlink/?linkid=2198766\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7500/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7500/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7499",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7499/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7499/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7499/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7499",
        "id": 1876415001,
        "node_id": "PR_kwDOIWuq585ZSTiV",
        "number": 7499,
        "title": "fix simple web page reader",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-31T22:56:56Z",
        "updated_at": "2023-09-01T00:07:02Z",
        "closed_at": "2023-09-01T00:07:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7499",
            "html_url": "https://github.com/run-llama/llama_index/pull/7499",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7499.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7499.patch",
            "merged_at": "2023-09-01T00:07:01Z"
        },
        "body": "# Description\r\n\r\nSmall fix to ensure metadata is not `None` in `SimpleWebPageReader`\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7496\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7499/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7499/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7498",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7498/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7498/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7498/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7498",
        "id": 1876409276,
        "node_id": "PR_kwDOIWuq585ZSSUm",
        "number": 7498,
        "title": "Make (some) loaders serializable",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-31T22:48:29Z",
        "updated_at": "2023-09-01T15:50:11Z",
        "closed_at": "2023-09-01T15:50:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7498",
            "html_url": "https://github.com/run-llama/llama_index/pull/7498",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7498.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7498.patch",
            "merged_at": "2023-09-01T15:50:10Z"
        },
        "body": "# Description\r\n\r\nThis PR adds some serialization to some of the more popular loaders in llama-index.\r\n\r\nA follow-up would be converting some llama-hub loaders to be the same, once the new base class is merged in.\r\n\r\nIn addition, there is a new class that can help represent loaders and the inputs intended for them.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7498/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7498/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7497",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7497/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7497/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7497/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7497",
        "id": 1876380739,
        "node_id": "PR_kwDOIWuq585ZSMPi",
        "number": 7497,
        "title": "Anyscale integration with LlamaIndex through LangChain ",
        "user": {
            "login": "kylehh",
            "id": 24217337,
            "node_id": "MDQ6VXNlcjI0MjE3MzM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/24217337?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kylehh",
            "html_url": "https://github.com/kylehh",
            "followers_url": "https://api.github.com/users/kylehh/followers",
            "following_url": "https://api.github.com/users/kylehh/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylehh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kylehh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylehh/subscriptions",
            "organizations_url": "https://api.github.com/users/kylehh/orgs",
            "repos_url": "https://api.github.com/users/kylehh/repos",
            "events_url": "https://api.github.com/users/kylehh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kylehh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5870194649,
                "node_id": "LA_kwDOIWuq588AAAABXeQP2Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/llm",
                "name": "llm",
                "color": "799557",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-31T22:13:29Z",
        "updated_at": "2023-09-07T18:38:51Z",
        "closed_at": "2023-09-06T05:08:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7497",
            "html_url": "https://github.com/run-llama/llama_index/pull/7497",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7497.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7497.patch",
            "merged_at": "2023-09-06T05:08:43Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7497/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7497/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7496",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7496/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7496/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7496/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7496",
        "id": 1876263022,
        "node_id": "I_kwDOIWuq585v1YBu",
        "number": 7496,
        "title": "[Bug]: SimpleWebPageReader metadata cannot be None",
        "user": {
            "login": "piotrm0",
            "id": 421701,
            "node_id": "MDQ6VXNlcjQyMTcwMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/piotrm0",
            "html_url": "https://github.com/piotrm0",
            "followers_url": "https://api.github.com/users/piotrm0/followers",
            "following_url": "https://api.github.com/users/piotrm0/following{/other_user}",
            "gists_url": "https://api.github.com/users/piotrm0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/piotrm0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/piotrm0/subscriptions",
            "organizations_url": "https://api.github.com/users/piotrm0/orgs",
            "repos_url": "https://api.github.com/users/piotrm0/repos",
            "events_url": "https://api.github.com/users/piotrm0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/piotrm0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 17,
        "created_at": "2023-08-31T20:34:05Z",
        "updated_at": "2023-09-01T00:07:02Z",
        "closed_at": "2023-09-01T00:07:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nSimpleWebPageReader will have \"None\" as metadata if metadata_fn is not provided leading to pydantic validation error.\r\n\r\n### Version\r\n\r\n0.8.15\r\n\r\n### Steps to Reproduce\r\n\r\nUse `SimpleWebPageReader` without specifying `metadata_fn`:\r\n\r\n```python\r\nfrom llama_index import SimpleWebPageReader\r\ndocuments = SimpleWebPageReader(\r\n    html_to_text=True\r\n).load_data([\"http://paulgraham.com/worked.html\"])\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```\r\n\u2502 /opt/homebrew/Caskroom/miniconda/base/envs/py38_trulens/lib/python3.8/site-packages/llama_index/ \u2502\r\n\u2502 readers/web.py:65 in load_data                                                                   \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    62 \u2502   \u2502   \u2502   if self._metadata_fn is not None:                                              \u2502\r\n\u2502    63 \u2502   \u2502   \u2502   \u2502   metadata = self._metadata_fn(url)                                          \u2502\r\n\u2502    64 \u2502   \u2502   \u2502                                                                                  \u2502\r\n\u2502 \u2771  65 \u2502   \u2502   \u2502   documents.append(Document(text=response, metadata=metadata))                   \u2502\r\n\u2502    66 \u2502   \u2502                                                                                      \u2502\r\n\u2502    67 \u2502   \u2502   return documents                                                                   \u2502\r\n\u2502    68                                                                                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 in pydantic.main.BaseModel.__init__:341                                                          \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nValidationError: 1 validation error for Document\r\nextra_info\r\n  none is not an allowed value (type=type_error.none.not_allowed)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7496/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7496/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7495",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7495/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7495/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7495/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7495",
        "id": 1876170005,
        "node_id": "PR_kwDOIWuq585ZReHU",
        "number": 7495,
        "title": "[version] 0.8.15",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-31T19:24:32Z",
        "updated_at": "2023-08-31T19:25:27Z",
        "closed_at": "2023-08-31T19:25:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7495",
            "html_url": "https://github.com/run-llama/llama_index/pull/7495",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7495.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7495.patch",
            "merged_at": "2023-08-31T19:25:26Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7495/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7495/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7494",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7494/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7494/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7494/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7494",
        "id": 1876023584,
        "node_id": "PR_kwDOIWuq585ZQ999",
        "number": 7494,
        "title": "Make default top_k calculation faster",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-31T17:57:33Z",
        "updated_at": "2023-08-31T19:22:48Z",
        "closed_at": "2023-08-31T19:22:47Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7494",
            "html_url": "https://github.com/run-llama/llama_index/pull/7494",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7494.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7494.patch",
            "merged_at": "2023-08-31T19:22:47Z"
        },
        "body": "Running `python bench_simple_vector_store.py` \r\n\r\nBefore\r\n```\r\nBenchmarking SimpleVectorStore\r\n---------------------------\r\nAdding 10 vectors took 1.3828277587890625e-05 seconds\r\nQuerying store of 10 vectors with default mode took 0.0025229454040527344 seconds\r\nAdding 50 vectors took 5.4836273193359375e-05 seconds\r\nQuerying store of 50 vectors with default mode took 0.01211094856262207 seconds\r\nAdding 100 vectors took 9.274482727050781e-05 seconds\r\nQuerying store of 100 vectors with default mode took 0.02292323112487793 seconds\r\nAdding 500 vectors took 0.00044608116149902344 seconds\r\nQuerying store of 500 vectors with default mode took 0.11435413360595703 seconds\r\nAdding 1000 vectors took 0.0010182857513427734 seconds\r\nQuerying store of 1000 vectors with default mode took 0.2347888946533203 seconds\r\nAdding 10000 vectors took 0.008826971054077148 seconds\r\nQuerying store of 10000 vectors with default mode took 2.2964768409729004 seconds\r\n```\r\n\r\nAfter\r\n```\r\nBenchmarking SimpleVectorStore\r\n---------------------------\r\nAdding 10 vectors took 1.5974044799804688e-05 seconds\r\nQuerying store of 10 vectors with default mode took 0.0007221698760986328 seconds\r\nAdding 50 vectors took 4.506111145019531e-05 seconds\r\nQuerying store of 50 vectors with default mode took 0.0030128955841064453 seconds\r\nAdding 100 vectors took 8.7738037109375e-05 seconds\r\nQuerying store of 100 vectors with default mode took 0.005853176116943359 seconds\r\nAdding 500 vectors took 0.0006880760192871094 seconds\r\nQuerying store of 500 vectors with default mode took 0.030952930450439453 seconds\r\nAdding 1000 vectors took 0.0008981227874755859 seconds\r\nQuerying store of 1000 vectors with default mode took 0.05759096145629883 seconds\r\nAdding 10000 vectors took 0.00973820686340332 seconds\r\nQuerying store of 10000 vectors with default mode took 0.5656261444091797 seconds\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7494/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7494/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7493",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7493/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7493/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7493/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7493",
        "id": 1875928879,
        "node_id": "PR_kwDOIWuq585ZQohy",
        "number": 7493,
        "title": "Fix graph visualization and empty response",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-31T17:09:51Z",
        "updated_at": "2023-09-01T04:26:53Z",
        "closed_at": "2023-09-01T04:26:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7493",
            "html_url": "https://github.com/run-llama/llama_index/pull/7493",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7493.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7493.patch",
            "merged_at": "2023-09-01T04:26:52Z"
        },
        "body": "# Description\r\n\r\nThe KG index was having a few weird issues\r\n- Confusing error when no nodes are found\r\n- Visualization seemed broken\r\n\r\nThis PR attempts to fix both. The visualization seemed to be an issue with how we parse the rel_map\r\n\r\nThe error with no nodes retrieved is more specific to how our response synthesis works, but inserting a node explaining that no relationships are found seems to be a better UX.\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7470\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x]  Tested Base KGIndex notebook\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# TODO\r\n\r\n- [x] Test Simple KG\r\n- [x] Test Neo4j\r\n- [x] Test Kuzu\r\n- [x] Test Falkordb\r\n- [x] Test Nebula\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7493/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7493/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7492",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7492/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7492/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7492/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7492",
        "id": 1875840583,
        "node_id": "I_kwDOIWuq585vzw5H",
        "number": 7492,
        "title": "[Bug]: creating storage_context with fsspec on azure blob container returns HttpResponseError",
        "user": {
            "login": "emilio-gagliardi",
            "id": 26722095,
            "node_id": "MDQ6VXNlcjI2NzIyMDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/26722095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/emilio-gagliardi",
            "html_url": "https://github.com/emilio-gagliardi",
            "followers_url": "https://api.github.com/users/emilio-gagliardi/followers",
            "following_url": "https://api.github.com/users/emilio-gagliardi/following{/other_user}",
            "gists_url": "https://api.github.com/users/emilio-gagliardi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/emilio-gagliardi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/emilio-gagliardi/subscriptions",
            "organizations_url": "https://api.github.com/users/emilio-gagliardi/orgs",
            "repos_url": "https://api.github.com/users/emilio-gagliardi/repos",
            "events_url": "https://api.github.com/users/emilio-gagliardi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/emilio-gagliardi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-08-31T16:09:24Z",
        "updated_at": "2023-12-07T16:02:34Z",
        "closed_at": "2023-12-07T16:02:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI was able to persist an index to an azure blob container using an fsspec instance but was unable to load the index using the exact same information.\r\n`fs = fsspec.filesystem(\"abfs\", account_name=\"account_name\", account_key=\"account_key\")`\r\n`AZURE_CONTAINER = \"report-stores\"`\r\n`sentence_index.storage_context.persist(persist_dir=f'{AZURE_CONTAINER}', fs=fs)`\r\nproduced the following:\r\n['report-stores/docstore.json', 'report-stores/graph_store.json', 'report-stores/index_store.json', 'report-stores/vector_store.json']\r\nhowever, trying to use the exact same fsspec instance to create a storage_context generated a URI error (no resource)\r\n`sc = StorageContext.from_defaults(persist_dir=f'{AZURE_CONTAINER}', fs=fs)`\r\nHttpResponseError: The requested URI does not represent any resource on the server.\r\nSo I'm unable to load the index.\n\n### Version\n\n0.8.13\n\n### Steps to Reproduce\n\n1. create an fsspec instance to a container and blob\r\n2. persist an index using the fsspec instance\r\n3. create a storage_context using the same fsspec instance\n\n### Relevant Logs/Tracbacks\n\n```shell\n\u2502 C:\\anaconda3\\envs\\kedro_workbench_venv\\lib\\site-packages\\adlfs\\spec.py:1107 in _container_exists \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 C:\\anaconda3\\envs\\kedro_workbench_venv\\lib\\site-packages\\azure\\core\\tracing\\decorator_async.py:7 \u2502\r\n\u2502 7 in wrapper_use_tracer                                                                          \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 C:\\anaconda3\\envs\\kedro_workbench_venv\\lib\\site-packages\\azure\\storage\\blob\\aio\\_container_clien \u2502\r\n\u2502 t_async.py:400 in get_container_properties                                                       \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 C:\\anaconda3\\envs\\kedro_workbench_venv\\lib\\site-packages\\azure\\storage\\blob\\_shared\\response_han \u2502\r\n\u2502 dlers.py:189 in process_storage_error                                                            \u2502\r\n\u2502 in <module>:1\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7492/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7492/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7491",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7491/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7491/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7491/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7491",
        "id": 1875780132,
        "node_id": "PR_kwDOIWuq585ZQIAr",
        "number": 7491,
        "title": "update vector dim for PGVectorStore",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-31T15:36:35Z",
        "updated_at": "2023-08-31T16:06:49Z",
        "closed_at": "2023-08-31T16:06:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7491",
            "html_url": "https://github.com/run-llama/llama_index/pull/7491",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7491.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7491.patch",
            "merged_at": "2023-08-31T16:06:48Z"
        },
        "body": "# Description\r\n\r\nThis update allows the `embed_dim` for `PGVectorStore` to be configurable\r\n\r\n```python\r\nvector_store = PGVectorStore.from_params(..., embed_dim=1536)\r\n...\r\nvector_store = PGVectorStore(..., embed_dim=1536)\r\n```\r\n\r\nIf a user uses an embedding model larger than the previous hardcoded dim of 1536, there will be an error.\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7490\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7491/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7491/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7490",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7490/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7490/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7490/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7490",
        "id": 1875577424,
        "node_id": "I_kwDOIWuq585vywpQ",
        "number": 7490,
        "title": "[Bug]: PGVECTOR sqlalchemy.exc.StatementError: (builtins.ValueError) expected 1536 dimensions, not 4096",
        "user": {
            "login": "GenAIHub",
            "id": 140960845,
            "node_id": "U_kgDOCGbkTQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/140960845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GenAIHub",
            "html_url": "https://github.com/GenAIHub",
            "followers_url": "https://api.github.com/users/GenAIHub/followers",
            "following_url": "https://api.github.com/users/GenAIHub/following{/other_user}",
            "gists_url": "https://api.github.com/users/GenAIHub/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GenAIHub/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GenAIHub/subscriptions",
            "organizations_url": "https://api.github.com/users/GenAIHub/orgs",
            "repos_url": "https://api.github.com/users/GenAIHub/repos",
            "events_url": "https://api.github.com/users/GenAIHub/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GenAIHub/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-31T13:49:07Z",
        "updated_at": "2023-09-01T11:04:01Z",
        "closed_at": "2023-08-31T16:06:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nUsing other embeddings model with different then 1536 dimensions that OpenAI embedding model have, will get an error when I create the index.\r\n\r\nValueError: expected 1536 dimensions, not 4096\n\n### Version\n\n0.8.13\n\n### Steps to Reproduce\n\nembed_model_config = LangchainEmbedding(\r\n        BedrockEmbeddings(\r\n            credentials_profile_name=credentials_profile_name,\r\n            region_name=region_name,\r\n            model_id=embedding_model\r\n        )\r\n    )\r\n\t\r\n\r\nservice_context = ServiceContext.from_defaults(\r\n        embed_model=embed_model_config,\r\n        chunk_size=chunk_size,\r\n    )\r\n\r\n\r\nstorage_context = StorageContext.from_defaults(\r\n\tvector_store=vector_store\r\n)\r\n\r\nindex = VectorStoreIndex.from_documents(pages,\r\n\t\t\t\t\t\t\t\t\t\tstorage_context=storage_context,\r\n\t\t\t\t\t\t\t\t\t\tservice_context=service_context,\r\n\t\t\t\t\t\t\t\t\t\t)\n\n### Relevant Logs/Tracbacks\n\n```shell\nTraceback (most recent call last):\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1810, in _execute_context\r\n    context = constructor(\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/engine/default.py\", line 1486, in _init_compiled\r\n    d_param = {\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/engine/default.py\", line 1487, in <dictcomp>\r\n    key: flattened_processors[key](compiled_params[key])\r\n  File \"/home/user/.local/lib/python3.10/site-packages/pgvector/sqlalchemy/__init__.py\", line 21, in process\r\n    return to_db(value, self.dim)\r\n  File \"/home/user/.local/lib/python3.10/site-packages/pgvector/utils/__init__.py\", line 35, in to_db\r\n    raise ValueError('expected %d dimensions, not %d' % (dim, len(value)))\r\nValueError: expected 1536 dimensions, not 4096\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/mnt/d/test/insert.py\", line 131, in <module>\r\n    main()\r\n  File \"/mnt/d/test/insert.py\", line 124, in main\r\n    index = VectorStoreIndex.from_documents(pages,\r\n  File \"/home/user/.local/lib/python3.10/site-packages/llama_index/indices/base.py\", line 102, in from_documents\r\n    return cls(\r\n  File \"/home/user/.local/lib/python3.10/site-packages/llama_index/indices/vector_store/base.py\", line 46, in __init__\r\n    super().__init__(\r\n  File \"/home/user/.local/lib/python3.10/site-packages/llama_index/indices/base.py\", line 71, in __init__\r\n    index_struct = self.build_index_from_nodes(nodes)\r\n  File \"/home/user/.local/lib/python3.10/site-packages/llama_index/indices/vector_store/base.py\", line 241, in build_index_from_nodes\r\n    return self._build_index_from_nodes(nodes)\r\n  File \"/home/user/.local/lib/python3.10/site-packages/llama_index/indices/vector_store/base.py\", line 229, in _build_index_from_nodes\r\n    self._add_nodes_to_index(\r\n  File \"/home/user/.local/lib/python3.10/site-packages/llama_index/indices/vector_store/base.py\", line 202, in _add_nodes_to_index\r\n    new_ids = self._vector_store.add(embedding_results)\r\n  File \"/home/user/.local/lib/python3.10/site-packages/llama_index/vector_stores/postgres.py\", line 147, in add\r\n    session.commit()\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/orm/session.py\", line 1923, in commit\r\n    trans.commit(_to_root=True)\r\n  File \"<string>\", line 2, in commit\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/orm/state_changes.py\", line 139, in _go\r\n    ret_value = fn(self, *arg, **kw)\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/orm/session.py\", line 1239, in commit\r\n    self._prepare_impl()\r\n  File \"<string>\", line 2, in _prepare_impl\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/orm/state_changes.py\", line 139, in _go\r\n    ret_value = fn(self, *arg, **kw)\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/orm/session.py\", line 1214, in _prepare_impl\r\n    self.session.flush()\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/orm/session.py\", line 4179, in flush\r\n    self._flush(objects)\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/orm/session.py\", line 4314, in _flush\r\n    with util.safe_reraise():\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py\", line 147, in __exit__\r\n    raise exc_value.with_traceback(exc_tb)\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/orm/session.py\", line 4275, in _flush\r\n    flush_context.execute()\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/orm/unitofwork.py\", line 466, in execute\r\n    rec.execute(self)\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/orm/unitofwork.py\", line 642, in execute\r\n    util.preloaded.orm_persistence.save_obj(\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/orm/persistence.py\", line 93, in save_obj\r\n    _emit_insert_statements(\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/orm/persistence.py\", line 1136, in _emit_insert_statements\r\n    result = connection.execute(\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1412, in execute\r\n    return meth(\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/sql/elements.py\", line 515, in _execute_on_connection\r\n    return connection._execute_clauseelement(\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1635, in _execute_clauseelement\r\n    ret = self._execute_context(\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1816, in _execute_context\r\n    self._handle_dbapi_exception(\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 2339, in _handle_dbapi_exception\r\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1810, in _execute_context\r\n    context = constructor(\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/engine/default.py\", line 1486, in _init_compiled\r\n    d_param = {\r\n  File \"/home/user/.local/lib/python3.10/site-packages/sqlalchemy/engine/default.py\", line 1487, in <dictcomp>\r\n    key: flattened_processors[key](compiled_params[key])\r\n  File \"/home/user/.local/lib/python3.10/site-packages/pgvector/sqlalchemy/__init__.py\", line 21, in process\r\n    return to_db(value, self.dim)\r\n  File \"/home/user/.local/lib/python3.10/site-packages/pgvector/utils/__init__.py\", line 35, in to_db\r\n    raise ValueError('expected %d dimensions, not %d' % (dim, len(value)))\r\nsqlalchemy.exc.StatementError: (builtins.ValueError) expected 1536 dimensions, not 4096\r\n[SQL: INSERT INTO data_bd_embeddings (text, metadata_, node_id, embedding) SELECT p0::VARCHAR, p1::JSON, p2::VARCHAR, p3::VECTOR(1536) FROM (VALUES (%(text)s, %(metadata_)s, %(node_id)s, %(embedding)s)) AS imp_sen(p0, p1, p2, p3, sen_counter) ORDER BY sen_counter RETURNING data_bd_embeddings.id, data_bd_embeddings.id AS id__1]\r\n[parameters: [{'metadata_': {'page_label': '1', 'file_name': '100KB.pdf', '_node_content': '{\"id_\": \"2d5b3a86-a3d0-4aa9-b930-b75d6ce7c4a5\", \"embedding\": null, \"meta ... (53070 characters truncated) ... .Praesent pell entesque lacus eros, nec auctor neque semper eget.Sed vehicula \\nornare efficitur.', 'node_id': '2d5b3a86-a3d0-4aa9-b930-b75d6ce7c4a5'}, {'metadata_': {'page_label': '1', 'file_name': '100KB.pdf', '_node_content': '{\"id_\": \"957b4421-8e49-4047-9a0a-0b0f3e6a45ef\", \"embedding\": null, \"meta ... (53160 characters truncated) ... corper et euismod eget, facilisis sed nibh.Vestibulum fermentum augue a lacus mattis condimentum.', 'node_id': '957b4421-8e49-4047-9a0a-0b0f3e6a45ef'}, {'metadata_': {'page_label': '1', 'file_name': '100KB.pdf', '_node_content': '{\"id_\": \"e7011450-42e1-4ee7-925e-492b50e342ac\", \"embedding\": null, \"meta ... (51954 characters truncated) ... n \\nsuscipit sed, volutpat id nisl.Orci varius natoque penatibus et magnis dis parturient montes,', 'node_id': 'e7011450-42e1-4ee7-925e-492b50e342ac'}, {'metadata_': {'page_label': '2', 'file_name': '100KB.pdf', '_node_content': '{\"id_\": \"46a3799f-99ca-439b-a754-f4e5bee32829\", \"embedding\": null, \"meta ... (52590 characters truncated) ... \\neu lacus eu, eleifend malesuada lorem. Praesent quis justo ligula. Cras quam risus, ultricies .', 'node_id': '46a3799f-99ca-439b-a754-f4e5bee32829'}]]\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7490/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7490/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7489",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7489/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7489/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7489/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7489",
        "id": 1874906473,
        "node_id": "I_kwDOIWuq585vwM1p",
        "number": 7489,
        "title": "[Question]: How to use custom model with VectorStoreIndex?",
        "user": {
            "login": "barvhaim",
            "id": 16198896,
            "node_id": "MDQ6VXNlcjE2MTk4ODk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16198896?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/barvhaim",
            "html_url": "https://github.com/barvhaim",
            "followers_url": "https://api.github.com/users/barvhaim/followers",
            "following_url": "https://api.github.com/users/barvhaim/following{/other_user}",
            "gists_url": "https://api.github.com/users/barvhaim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/barvhaim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/barvhaim/subscriptions",
            "organizations_url": "https://api.github.com/users/barvhaim/orgs",
            "repos_url": "https://api.github.com/users/barvhaim/repos",
            "events_url": "https://api.github.com/users/barvhaim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/barvhaim/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-31T07:01:09Z",
        "updated_at": "2023-10-24T06:30:48Z",
        "closed_at": "2023-10-24T06:30:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nWhen I'm trying to use llama-index `VectorStoreIndex.from_documents` without OpenAI it will download and use a default llama-2 model (llama-2-13b-chat.ggmlv3.q4_0.bin) as mentioned in `https://gpt-index.readthedocs.io/en/stable/examples/llm/llama_2_llama_cpp.html`.\r\n\r\nI managed to load different model and use it with constructing `LlamaCPP` object as mentioned in doc, but how can I use it with  `VectorStoreIndex.from_documents`? was not clear from the documentation\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7489/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7489/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    }
]