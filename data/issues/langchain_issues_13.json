[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13411",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13411/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13411/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13411/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13411",
        "id": 1995289924,
        "node_id": "I_kwDOIPDwls527bVE",
        "number": 13411,
        "title": "IDE Support - Python Package - langchain.llms",
        "user": {
            "login": "juftin",
            "id": 49741340,
            "node_id": "MDQ6VXNlcjQ5NzQxMzQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/49741340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juftin",
            "html_url": "https://github.com/juftin",
            "followers_url": "https://api.github.com/users/juftin/followers",
            "following_url": "https://api.github.com/users/juftin/following{/other_user}",
            "gists_url": "https://api.github.com/users/juftin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juftin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juftin/subscriptions",
            "organizations_url": "https://api.github.com/users/juftin/orgs",
            "repos_url": "https://api.github.com/users/juftin/repos",
            "events_url": "https://api.github.com/users/juftin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juftin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-15T18:14:01Z",
        "updated_at": "2023-11-15T18:14:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nAdd IDE auto-complete to `langchain.llm` module\r\n\r\nCurrently, IntelliJ-based IDEs (PyCharm) interpret an LLM model to be `typing.Any`. Below is an example for the `GPT4All` package\r\n\r\n![image](https://github.com/langchain-ai/langchain/assets/49741340/27d699a7-d8d3-44f0-bb32-96d798a63a37)\r\n\n\n### Motivation\n\nNot having auto-complete on a `LLM` class can be a bit frustrating as a Python developer who works on an IntelliJ product. I've been performing a more direct import of the LLM models to handle this instead:\r\n\r\n```python\r\nfrom langchain.llms.gpt4all import GPT4All\r\n```\r\n\r\nAdding support for the `langchain.llms` API would improve the developer experience with the top level `langchain.llms` API\n\n### Your contribution\n\nThe existing implementation uses a lazy-loading technique implemented in #11237 to speed up imports. Maintaining this performance is important for whatever solution is implemented. I believe this can be achieved with some imports behind an `if TYPE_CHECKING` block. If the below `Proposed Implementation` is acceptable I'd be happy to open a PR to add this functionality. \r\n\r\n<details><summary>Current Implementation</summary>\r\n<p>\r\n\r\n `langchain.llms.__init__.py` (abbreviated)\r\n\r\n```python\r\nfrom typing import Any, Callable, Dict, Type\r\n\r\nfrom langchain.llms.base import BaseLLM\r\n\r\n\r\ndef _import_anthropic() -> Any:\r\n    from langchain.llms.anthropic import Anthropic\r\n\r\n    return Anthropic\r\n\r\ndef _import_gpt4all() -> Any:\r\n    from langchain.llms.gpt4all import GPT4All\r\n\r\n    return GPT4All\r\n    \r\ndef __getattr__(name: str) -> Any:\r\n    if name == \"Anthropic\":\r\n        return _import_anthropic()\r\n    elif name == \"GPT4All\":\r\n        return _import_gpt4all()\r\n    else:\r\n        raise AttributeError(f\"Could not find: {name}\")\r\n        \r\n__all__ = [\r\n    \"Anthropic\",\r\n    \"GPT4All\",\r\n]\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n<details><summary>Proposed Implementation</summary>\r\n<p>\r\n\r\n `langchain.llms.__init__.py` (abbreviated)\r\n\r\n```python\r\nfrom typing import Any, Callable, Dict, Type, TYPE_CHECKING\r\n\r\nfrom langchain.llms.base import BaseLLM\r\n\r\n\r\nif TYPE_CHECKING:\r\n    from langchain.llms.anthropic import Anthropic\r\n    from langchain.llms.gpt4all import GPT4All\r\n\r\n\r\ndef _import_anthropic() -> \"Anthropic\":\r\n    from langchain.llms.anthropic import Anthropic\r\n\r\n    return Anthropic\r\n\r\ndef _import_gpt4all() -> \"GPT4All\":\r\n    from langchain.llms.gpt4all import GPT4All\r\n\r\n    return GPT4All\r\n    \r\ndef __getattr__(name: str) -> \"BaseLLM\":\r\n    if name == \"Anthropic\":\r\n        return _import_anthropic()\r\n    elif name == \"GPT4All\":\r\n        return _import_gpt4all()\r\n    else:\r\n        raise AttributeError(f\"Could not find: {name}\")\r\n        \r\n__all__ = [\r\n    \"Anthropic\",\r\n    \"GPT4All\",\r\n]\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n<details><summary>IntelliJ Screenshot</summary>\r\n<p>\r\n\r\nHere's a screenshot after implementing the above `Proposed Implementation`\r\n\r\n<img width=\"588\" alt=\"image\" src=\"https://github.com/langchain-ai/langchain/assets/49741340/1647f3b5-238e-4137-8fa4-f30a2234fdb0\">\r\n\r\n</p>\r\n</details> ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13411/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13411/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13410",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13410/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13410/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13410/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13410",
        "id": 1995270190,
        "node_id": "I_kwDOIPDwls527Wgu",
        "number": 13410,
        "title": "Missing required arguments; Expected either ('model' and 'prompt') or ('model', 'prompt' and 'stream')",
        "user": {
            "login": "rockman25",
            "id": 3652537,
            "node_id": "MDQ6VXNlcjM2NTI1Mzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3652537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rockman25",
            "html_url": "https://github.com/rockman25",
            "followers_url": "https://api.github.com/users/rockman25/followers",
            "following_url": "https://api.github.com/users/rockman25/following{/other_user}",
            "gists_url": "https://api.github.com/users/rockman25/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rockman25/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rockman25/subscriptions",
            "organizations_url": "https://api.github.com/users/rockman25/orgs",
            "repos_url": "https://api.github.com/users/rockman25/repos",
            "events_url": "https://api.github.com/users/rockman25/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rockman25/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-11-15T18:00:46Z",
        "updated_at": "2023-11-27T11:55:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain = 0.0.335\r\nopenai = 1.2.4\r\npython = 3.11\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [x] My own modified scripts\n\n### Related Components\n\n- [x] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nModified example code (https://python.langchain.com/docs/integrations/llms/azure_openai) from langchain to access AzureOpenAI inferencing endpoint\r\n\r\n```\r\nimport os\r\n\r\nos.environ[\"OPENAI_API_TYPE\"] = \"azure\"\r\nos.environ[\"OPENAI_API_VERSION\"] = \"2023-05-15\"\r\nos.environ[\"OPENAI_API_BASE\"] = \"...\"\r\nos.environ[\"OPENAI_API_KEY\"] = \"...\"\r\n\r\n# Import Azure OpenAI\r\nfrom langchain.llms import AzureOpenAI\r\n\r\n# Create an instance of Azure OpenAI\r\n# Replace the deployment name with your own\r\nllm = AzureOpenAI(\r\n    deployment_name=\"td2\",\r\n    model_name=\"text-davinci-002\",\r\n)\r\n\r\n# Run the LLM\r\nllm(\"Tell me a joke\")\r\n```\r\n\r\nI get the following error:\r\nTypeError: Missing required arguments; Expected either ('model' and 'prompt') or ('model', 'prompt' and 'stream') arguments to be given\r\n\r\nIf I modify the last line as follows:\r\n`llm(\"Tell me a joke\", model=\"text-davinci-002\") `\r\ni get a different error: \r\nCompletions.create() got an unexpected keyword argument 'engine'\r\n\r\nIt appears to be passing all keywords to the create method, the first of which is 'engine', and it appears that and other kws are being added by the code.\n\n### Expected behavior\n\nI expect the model to return a response, such as is shown in the example. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13410/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13410/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13409",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13409/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13409/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13409/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13409",
        "id": 1995268049,
        "node_id": "I_kwDOIPDwls527V_R",
        "number": 13409,
        "title": "Persistent client open file handles",
        "user": {
            "login": "priamai",
            "id": 57333254,
            "node_id": "MDQ6VXNlcjU3MzMzMjU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/57333254?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/priamai",
            "html_url": "https://github.com/priamai",
            "followers_url": "https://api.github.com/users/priamai/followers",
            "following_url": "https://api.github.com/users/priamai/following{/other_user}",
            "gists_url": "https://api.github.com/users/priamai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/priamai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/priamai/subscriptions",
            "organizations_url": "https://api.github.com/users/priamai/orgs",
            "repos_url": "https://api.github.com/users/priamai/repos",
            "events_url": "https://api.github.com/users/priamai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/priamai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-15T17:59:14Z",
        "updated_at": "2023-11-15T18:04:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nName: langchain\r\nVersion: 0.0.327\r\n\r\nName: chromadb\r\nVersion: 0.4.8\r\nSummary: Chroma.\n\n### Who can help?\n\n@hwchase17 I believe the chromadb don't close the file handle during persistence making it difficult to use it on cloud services like Modal Labs. What about adding a close method or similar to make sure this doesn't happen?\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI am using ModalLabs with a simple example:\r\n\r\n```\r\n@stub.function(volumes={CHROMA_DIR: stub.volume})\r\ndef test_chroma():\r\n    import chromadb\r\n    from importlib.metadata import version\r\n    print(\"ChromaDB: %s\" % version('chromadb'))\r\n\r\n    # Initialize ChromaDB client\r\n    client = chromadb.PersistentClient(path=SENTENCE_DIR.as_posix())\r\n\r\n    # Create the collection\r\n    neo_collection = client.create_collection(name=\"neo\")\r\n    # Adding raw documents\r\n    neo_collection.add(\r\n         documents=[\"I know kung fu.\", \"There is no spoon.\"], ids=[\"quote_1\", \"quote_2\"]\r\n     )\r\n\r\n    # Counting items in a collection\r\n    item_count = neo_collection.count()\r\n    print(f\"Count of items in collection: {item_count}\")\r\n    stub.volume.commit()\r\n```\r\n\r\n\r\nError:\r\n\r\n`grpclib.exceptions.GRPCError: (<Status.FAILED_PRECONDITION: 9>, 'there are open files preventing the operation', None)\r\n`\r\n\n\n### Expected behavior\n\nThere shouldn't be any open file handles.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13409/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13409/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13408",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13408/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13408/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13408/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13408",
        "id": 1995227388,
        "node_id": "PR_kwDOIPDwls5fiwrR",
        "number": 13408,
        "title": "RunnableLambda: create afunc instance from func when not provided",
        "user": {
            "login": "nbondoux",
            "id": 3329961,
            "node_id": "MDQ6VXNlcjMzMjk5NjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3329961?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nbondoux",
            "html_url": "https://github.com/nbondoux",
            "followers_url": "https://api.github.com/users/nbondoux/followers",
            "following_url": "https://api.github.com/users/nbondoux/following{/other_user}",
            "gists_url": "https://api.github.com/users/nbondoux/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nbondoux/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nbondoux/subscriptions",
            "organizations_url": "https://api.github.com/users/nbondoux/orgs",
            "repos_url": "https://api.github.com/users/nbondoux/repos",
            "events_url": "https://api.github.com/users/nbondoux/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nbondoux/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-11-15T17:30:20Z",
        "updated_at": "2023-11-28T11:24:40Z",
        "closed_at": "2023-11-28T11:18:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13408",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13408",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13408.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13408.patch",
            "merged_at": "2023-11-28T11:18:26Z"
        },
        "body": "Fixes #13407.\r\n\r\nThis workaround consists in letting the RunnableLambda create its self.afunc from its self.func when self.afunc is not provided; the change has no dependency.\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13408/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13408/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13407",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13407/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13407/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13407/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13407",
        "id": 1995223902,
        "node_id": "I_kwDOIPDwls527LNe",
        "number": 13407,
        "title": "RunnableLambda: returned runnable called synchronously when using ainvoke",
        "user": {
            "login": "nbondoux",
            "id": 3329961,
            "node_id": "MDQ6VXNlcjMzMjk5NjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3329961?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nbondoux",
            "html_url": "https://github.com/nbondoux",
            "followers_url": "https://api.github.com/users/nbondoux/followers",
            "following_url": "https://api.github.com/users/nbondoux/following{/other_user}",
            "gists_url": "https://api.github.com/users/nbondoux/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nbondoux/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nbondoux/subscriptions",
            "organizations_url": "https://api.github.com/users/nbondoux/orgs",
            "repos_url": "https://api.github.com/users/nbondoux/repos",
            "events_url": "https://api.github.com/users/nbondoux/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nbondoux/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-15T17:27:49Z",
        "updated_at": "2023-11-28T11:18:27Z",
        "closed_at": "2023-11-28T11:18:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain on master branch\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [X] Async\n\n### Reproduction\n\n```\r\nfrom langchain.schema.runnable import RunnableLambda\r\n\r\nimport asyncio\r\n\r\n\r\ndef idchain_sync(__input):\r\n    print(f'sync chain call: {__input}')\r\n    return __input\r\n\r\nasync def idchain_async(__input):\r\n    print(f'async chain call: {__input}')\r\n    return __input\r\n\r\nidchain = RunnableLambda(func=idchain_sync,afunc=idchain_async)\r\n\r\n\r\n\r\n\r\ndef func(__input):\r\n    return idchain\r\n\r\n\r\nasyncio.run(RunnableLambda(func).ainvoke('toto'))\r\n#printss 'sync chain call: toto' instead of 'async chain call: toto'                                                                                                                                                  \r\n\r\n```\r\n\n\n### Expected behavior\n\nLCEL's route can cause chains to be silently run synchronously, while the user uses ainvoke...\r\n\r\nWhen calling a RunnableLambda A returning a chain B with ainvoke, we would expect the new chain B to be called with ainvoke;\r\nHowever, if the function provided to RunnableLambda A is not async, then the chain B will be called with invoke, silently causing all the rest of the chain to be called synchronously.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13407/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13407/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13406",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13406/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13406/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13406/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13406",
        "id": 1995196688,
        "node_id": "I_kwDOIPDwls527EkQ",
        "number": 13406,
        "title": "Issue: Need Help - Implement ChatOpenAI into my LangChain Research",
        "user": {
            "login": "ZinanYang1995",
            "id": 149815088,
            "node_id": "U_kgDOCO3_MA",
            "avatar_url": "https://avatars.githubusercontent.com/u/149815088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZinanYang1995",
            "html_url": "https://github.com/ZinanYang1995",
            "followers_url": "https://api.github.com/users/ZinanYang1995/followers",
            "following_url": "https://api.github.com/users/ZinanYang1995/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZinanYang1995/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZinanYang1995/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZinanYang1995/subscriptions",
            "organizations_url": "https://api.github.com/users/ZinanYang1995/orgs",
            "repos_url": "https://api.github.com/users/ZinanYang1995/repos",
            "events_url": "https://api.github.com/users/ZinanYang1995/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZinanYang1995/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-15T17:12:08Z",
        "updated_at": "2023-11-28T21:44:27Z",
        "closed_at": "2023-11-28T21:44:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi there, \r\n\r\nI am doing a research on creating a PDF reader AI which can answer users' questions based on the PDF uploaded and the prompt user entered. I got it so far with using the OpenAI package but now want's to make it more advance by using ChatOpenAI with the LangChain Schema package (SystemMessage, HumanMessage, and AIMessage). I am kinda lost on where I should start and make the adjustments. Could you help me on that? \r\n\r\nBelow is my code so far: \r\n## Imports\r\nimport streamlit as st\r\nimport os\r\nfrom apikey import apikey\r\nimport pickle\r\nfrom PyPDF2 import PdfReader\r\nfrom streamlit_extras.add_vertical_space import add_vertical_space\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.vectorstores import FAISS\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chains.question_answering import load_qa_chain\r\nfrom langchain.callbacks import get_openai_callback\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.schema import (SystemMessage, HumanMessage, AIMessage)\r\n\r\nos.environ['OPENAI_API_KEY'] = apikey\r\n\r\n## User Interface\r\n# Side Bar\r\nwith st.sidebar:\r\n    st.title('\ud83d\ude80 Zi-GPT Version 2.0')\r\n    st.markdown('''\r\n    ## About\r\n    This app is an LLM-powered chatbot built using:\r\n    - [Streamlit](https://streamlit.io/)\r\n    - [LangChain](https://python.langchain.com/)\r\n    - [OpenAI](https://platform.openai.com/docs/models) LLM model\r\n \r\n    ''')\r\n    add_vertical_space(5)\r\n    st.write('Made with \u2764\ufe0f by Zi')\r\n\r\n# Main Page\r\ndef main():\r\n    st.header(\"Zi's PDF Helper: Chat with PDF\")\r\n\r\n    # upload a PDF file\r\n    pdf = st.file_uploader(\"Please upload your PDF here\", type='pdf')\r\n    # st.write(pdf)\r\n\r\n    # read PDF\r\n    if pdf is not None: \r\n        pdf_reader = PdfReader(pdf)\r\n        \r\n        # split document into chunks\r\n        # also can use text split: good for PDFs that do not contains charts and visuals\r\n        sections = []\r\n        for page in pdf_reader.pages:\r\n            # Split the page text by paragraphs (assuming two newlines indicate a new paragraph)\r\n            page_sections = page.extract_text().split('\\n\\n')\r\n            sections.extend(page_sections)\r\n\r\n        chunks = sections\r\n        # st.write(chunks)\r\n\r\n        # embeddings\r\n        file_name = pdf.name[:-4]\r\n        # comvert into pickle file\r\n        # wb: open in binary mode\r\n        # rb: read the file\r\n        # Note: only create new vectors for new files updated\r\n        if os.path.exists(f\"{file_name}.pkl\"):\r\n            with open(f\"{file_name}.pkl\", \"rb\") as f:\r\n                VectorStore = pickle.load(f)\r\n            st.write('Embeddings Loaded from the Disk')\r\n        else:\r\n            embeddings = OpenAIEmbeddings(model=\"text-embedding-ada-002\")\r\n            VectorStore = FAISS.from_texts(chunks,embedding=embeddings)\r\n            with open(f\"{file_name}.pkl\", \"wb\") as f:\r\n                pickle.dump(VectorStore, f)\r\n            st.write('Embeddings Computation Completed')\r\n        \r\n        # Create chat history\r\n        if pdf:\r\n            # generate chat history\r\n            chat_history_file = f\"{pdf.name}_chat_history.pkl\"\r\n\r\n            # load history if exist\r\n            if os.path.exists(chat_history_file):\r\n                with open(chat_history_file, \"rb\") as f:\r\n                    chat_history  = pickle.load(f)\r\n            else:\r\n                chat_history = []\r\n             \r\n        # Initialize chat_history in session_state if not present\r\n        if 'chat_history' not in st.session_state:\r\n            st.session_state.chat_history = []\r\n        \r\n        # Check if 'prompt' is in session state\r\n        if 'last_input' not in st.session_state:\r\n            st.session_state.last_input = ''\r\n        \r\n        # User Input\r\n        current_prompt = st.session_state.get('user_input', '')\r\n\r\n        prompt_placeholder = st.empty()\r\n        prompt = prompt_placeholder.text_area(\"Ask questions about your PDF:\", value=current_prompt, placeholder=\"Send a message\", key=\"user_input\")\r\n        submit_button = st.button(\"Submit\")\r\n\r\n        if submit_button and prompt:\r\n            # Update the last input in session state\r\n            st.session_state.last_input = prompt\r\n\r\n            docs = VectorStore.similarity_search(query=prompt, k=3)\r\n\r\n            #llm = OpenAI(temperature=0.9, model_name='gpt-3.5-turbo')\r\n            chat = ChatOpenAI(model='gpt-3.5-turbo', temperature=0.7)\r\n            chain = load_qa_chain(llm=chat, chain_type=\"stuff\")\r\n            with get_openai_callback() as cb:\r\n                response = chain.run(input_documents=docs, question=prompt)\r\n                print(cb)\r\n            # st.write(response)\r\n            # st.write(docs)\r\n\r\n            # Add to chat history\r\n            st.session_state.chat_history.append((prompt, response))\r\n\r\n            # Save chat history\r\n            with open(chat_history_file, \"wb\") as f:\r\n                pickle.dump(st.session_state.chat_history, f)\r\n            \r\n            # Clear the input after processing\r\n            prompt_placeholder.text_area(\"Ask questions about your PDF:\", value='', placeholder=\"Send a message\", key=\"pdf_prompt\") \r\n            \r\n        # Display the entire chat \r\n        chat_content = \"\"\r\n        for user_msg, bot_resp in st.session_state.chat_history:\r\n            chat_content += f\"<div style='background-color: #222222; color: white; padding: 10px;'>**You:** {user_msg}</div>\"\r\n            chat_content += f\"<div style='background-color: #333333; color: white; padding: 10px;'>**Zi GPT:** {bot_resp}</div>\"\r\n        st.markdown(chat_content, unsafe_allow_html=True)\r\n\r\nif __name__ == '__main__':\r\n    main()\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13406/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13406/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13405",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13405/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13405/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13405/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13405",
        "id": 1995125044,
        "node_id": "PR_kwDOIPDwls5fiaM5",
        "number": 13405,
        "title": "Passthrough kwargs in runnable lambda",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-15T16:29:08Z",
        "updated_at": "2023-11-15T20:32:07Z",
        "closed_at": "2023-11-15T19:45:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13405",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13405",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13405.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13405.patch",
            "merged_at": "2023-11-15T19:45:16Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13405/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13405/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13404",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13404/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13404/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13404/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13404",
        "id": 1995109707,
        "node_id": "PR_kwDOIPDwls5fiW3h",
        "number": 13404,
        "title": "add azure ai data document loader",
        "user": {
            "login": "samuel100",
            "id": 9161628,
            "node_id": "MDQ6VXNlcjkxNjE2Mjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9161628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/samuel100",
            "html_url": "https://github.com/samuel100",
            "followers_url": "https://api.github.com/users/samuel100/followers",
            "following_url": "https://api.github.com/users/samuel100/following{/other_user}",
            "gists_url": "https://api.github.com/users/samuel100/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/samuel100/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/samuel100/subscriptions",
            "organizations_url": "https://api.github.com/users/samuel100/orgs",
            "repos_url": "https://api.github.com/users/samuel100/repos",
            "events_url": "https://api.github.com/users/samuel100/events{/privacy}",
            "received_events_url": "https://api.github.com/users/samuel100/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-15T16:20:11Z",
        "updated_at": "2023-12-02T03:30:53Z",
        "closed_at": "2023-12-02T03:25:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13404",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13404",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13404.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13404.patch",
            "merged_at": "2023-12-02T03:25:55Z"
        },
        "body": "This PR adds an \"Azure AI data\" document loader, which allows Azure AI users to load their registered data assets as a document object in langchain. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13404/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13404/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13403",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13403/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13403/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13403/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13403",
        "id": 1995055424,
        "node_id": "PR_kwDOIPDwls5fiKy3",
        "number": 13403,
        "title": "Add llama2-13b-chat-v1 support to `chat_models.BedrockChat`",
        "user": {
            "login": "WouterDurnez",
            "id": 25830509,
            "node_id": "MDQ6VXNlcjI1ODMwNTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/25830509?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/WouterDurnez",
            "html_url": "https://github.com/WouterDurnez",
            "followers_url": "https://api.github.com/users/WouterDurnez/followers",
            "following_url": "https://api.github.com/users/WouterDurnez/following{/other_user}",
            "gists_url": "https://api.github.com/users/WouterDurnez/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/WouterDurnez/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/WouterDurnez/subscriptions",
            "organizations_url": "https://api.github.com/users/WouterDurnez/orgs",
            "repos_url": "https://api.github.com/users/WouterDurnez/repos",
            "events_url": "https://api.github.com/users/WouterDurnez/events{/privacy}",
            "received_events_url": "https://api.github.com/users/WouterDurnez/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-15T15:54:35Z",
        "updated_at": "2023-11-21T21:43:40Z",
        "closed_at": "2023-11-20T02:44:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13403",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13403",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13403.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13403.patch",
            "merged_at": "2023-11-20T02:44:59Z"
        },
        "body": "Hi \ud83d\udc4b We are working with Llama2 on Bedrock, and would like to add it to Langchain. We saw a [pull request](https://github.com/langchain-ai/langchain/pull/13322) to add it to the `llm.Bedrock` class, but since it concerns a chat model, we would like to add it to `BedrockChat` as well.\r\n\r\n  - **Description:** Add support for Llama2 to `BedrockChat` in `chat_models`  \r\n  - **Issue:** the issue # it fixes (if applicable) [#13316](https://github.com/langchain-ai/langchain/issues/13316)\r\n  - **Dependencies:** any dependencies required for this change `None`\r\n  - **Tag maintainer:** /\r\n  - **Twitter handle:** `@SimonBockaert @WouterDurnez`\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13403/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13403/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13401",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13401/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13401/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13401/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13401",
        "id": 1995034469,
        "node_id": "PR_kwDOIPDwls5fiGOV",
        "number": 13401,
        "title": "WebResearchRetriever error handling in urls with connection error",
        "user": {
            "login": "pedro-inf-custodio",
            "id": 113921389,
            "node_id": "U_kgDOBspNbQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/113921389?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pedro-inf-custodio",
            "html_url": "https://github.com/pedro-inf-custodio",
            "followers_url": "https://api.github.com/users/pedro-inf-custodio/followers",
            "following_url": "https://api.github.com/users/pedro-inf-custodio/following{/other_user}",
            "gists_url": "https://api.github.com/users/pedro-inf-custodio/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pedro-inf-custodio/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pedro-inf-custodio/subscriptions",
            "organizations_url": "https://api.github.com/users/pedro-inf-custodio/orgs",
            "repos_url": "https://api.github.com/users/pedro-inf-custodio/repos",
            "events_url": "https://api.github.com/users/pedro-inf-custodio/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pedro-inf-custodio/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-15T15:43:55Z",
        "updated_at": "2023-11-17T22:02:26Z",
        "closed_at": "2023-11-17T22:02:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13401",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13401",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13401.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13401.patch",
            "merged_at": "2023-11-17T22:02:26Z"
        },
        "body": "  - **Description:** Added a method `fetch_valid_documents` to `WebResearchRetriever` class that will test the connection for every url in `new_urls` and remove those that raise a `ConnectionError`.\r\n  - **Issue:** [Previous PR](https://github.com/langchain-ai/langchain/pull/13353),\r\n  - **Dependencies:** None,\r\n  - **Tag maintainer:** @efriis \r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13401/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13401/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13400",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13400/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13400/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13400/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13400",
        "id": 1994956885,
        "node_id": "I_kwDOIPDwls526KBV",
        "number": 13400,
        "title": "Add support for multimodal embeddings from Google Vertex AI",
        "user": {
            "login": "SDonkelaarGDD",
            "id": 108683649,
            "node_id": "U_kgDOBnphgQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/108683649?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SDonkelaarGDD",
            "html_url": "https://github.com/SDonkelaarGDD",
            "followers_url": "https://api.github.com/users/SDonkelaarGDD/followers",
            "following_url": "https://api.github.com/users/SDonkelaarGDD/following{/other_user}",
            "gists_url": "https://api.github.com/users/SDonkelaarGDD/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SDonkelaarGDD/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SDonkelaarGDD/subscriptions",
            "organizations_url": "https://api.github.com/users/SDonkelaarGDD/orgs",
            "repos_url": "https://api.github.com/users/SDonkelaarGDD/repos",
            "events_url": "https://api.github.com/users/SDonkelaarGDD/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SDonkelaarGDD/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-15T15:02:35Z",
        "updated_at": "2023-11-17T09:36:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nCurrently no support for multi-modal embeddings from VertexAI exists. However, I did stumble upon this experimental implementation of [GoogleVertexAIMultimodalEmbeddings](https://js.langchain.com/docs/modules/data_connection/experimental/multimodal_embeddings/google_vertex_ai) in LangChain for Javascript. Hence, I think this would also be a very nice feature to implement in the Python version of LangChain.\r\n\n\n### Motivation\n\nUsing multi-modal embeddings could positively affect applications that rely on information of different modalities. One example could be product search in a web catalogue. Since more cloud providers are making [endpoints for multi-modal embeddings](https://cloud.google.com/vertex-ai/docs/generative-ai/embeddings/get-multimodal-embeddings) available, it makes sense to incorporate these into LangChain as well. The embeddings of these endpoints could be stored in vector stores and hence be used in downstream applications that are built using LangChain.\n\n### Your contribution\n\nI can contribute to this feature.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13400/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13400/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13399",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13399/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13399/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13399/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13399",
        "id": 1994955954,
        "node_id": "PR_kwDOIPDwls5fh1C-",
        "number": 13399,
        "title": "Update PlanAndExecute agent to include intermediate steps",
        "user": {
            "login": "adrijanik",
            "id": 21140501,
            "node_id": "MDQ6VXNlcjIxMTQwNTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/21140501?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adrijanik",
            "html_url": "https://github.com/adrijanik",
            "followers_url": "https://api.github.com/users/adrijanik/followers",
            "following_url": "https://api.github.com/users/adrijanik/following{/other_user}",
            "gists_url": "https://api.github.com/users/adrijanik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adrijanik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adrijanik/subscriptions",
            "organizations_url": "https://api.github.com/users/adrijanik/orgs",
            "repos_url": "https://api.github.com/users/adrijanik/repos",
            "events_url": "https://api.github.com/users/adrijanik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adrijanik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-15T15:02:04Z",
        "updated_at": "2023-11-29T03:40:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13399",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13399",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13399.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13399.patch",
            "merged_at": null
        },
        "body": "  - **Description:** update PlanAndExecute agent to include intermediate steps. \r\n  - **Issue:** [issue 4485](https://github.com/langchain-ai/langchain/issues/4485).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13399/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13399/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13398",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13398/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13398/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13398/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13398",
        "id": 1994918113,
        "node_id": "I_kwDOIPDwls526Ajh",
        "number": 13398,
        "title": "ElasticSearch allow for multiple vector_query_fields than default text & make it a kwarg in search functions ",
        "user": {
            "login": "DJ2695",
            "id": 35080988,
            "node_id": "MDQ6VXNlcjM1MDgwOTg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/35080988?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DJ2695",
            "html_url": "https://github.com/DJ2695",
            "followers_url": "https://api.github.com/users/DJ2695/followers",
            "following_url": "https://api.github.com/users/DJ2695/following{/other_user}",
            "gists_url": "https://api.github.com/users/DJ2695/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DJ2695/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DJ2695/subscriptions",
            "organizations_url": "https://api.github.com/users/DJ2695/orgs",
            "repos_url": "https://api.github.com/users/DJ2695/repos",
            "events_url": "https://api.github.com/users/DJ2695/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DJ2695/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6077048506,
                "node_id": "LA_kwDOIPDwls8AAAABajhmug",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20elasticsearch",
                "name": "integration: elasticsearch",
                "color": "DAB5EC",
                "default": false,
                "description": "Related to elastic/elasticsearch integrations"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-15T14:42:10Z",
        "updated_at": "2023-11-24T15:12:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nElastic supports natively to have multiple DenseVectors in a document, which can be selected during query time / search. The langchain vector search  interface enables to pass additional keyword args. But at the moment, the implementation of _search in the ElasticSearch implementation does not consider the `vector_query_field` variable, which could be passed through the kwargs. Furthermore, there should be a solution, to allow a document to have multiple text fields that get passed as a queryable vector, not just the standard text field.\n\n### Motivation\n\nIf you have multiple vector fields in one index, this feature could simplify the query of the right one, like it's natively allowed in Elastic. In the current implementation one would need to add additional vector fields in the metadata and change the `vector_query_field` of ElasticSearchStore the whole class every time before you call the search. This is not a clean solution and I would vote for a more generic and clean solution.\n\n### Your contribution\n\nI could help by implementing this issue, although I need to state that I am not an expert in Elastic. I saw this issue when we tried to use an existing index in Elastic to add and retrieve Documents within the Langchain Framework. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13398/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13398/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13397",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13397/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13397/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13397/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13397",
        "id": 1994907050,
        "node_id": "I_kwDOIPDwls52592q",
        "number": 13397,
        "title": "Missing escape in `llms.utils.enforce_stop_tokens()`",
        "user": {
            "login": "morganveyret",
            "id": 114978051,
            "node_id": "U_kgDOBtptAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/114978051?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/morganveyret",
            "html_url": "https://github.com/morganveyret",
            "followers_url": "https://api.github.com/users/morganveyret/followers",
            "following_url": "https://api.github.com/users/morganveyret/following{/other_user}",
            "gists_url": "https://api.github.com/users/morganveyret/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/morganveyret/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/morganveyret/subscriptions",
            "organizations_url": "https://api.github.com/users/morganveyret/orgs",
            "repos_url": "https://api.github.com/users/morganveyret/repos",
            "events_url": "https://api.github.com/users/morganveyret/events{/privacy}",
            "received_events_url": "https://api.github.com/users/morganveyret/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-15T14:36:39Z",
        "updated_at": "2023-11-17T22:09:17Z",
        "closed_at": "2023-11-17T22:09:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nNot relevant.\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n@agola11\r\n\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nUse any LLM relying on stop words with special regex characters.\r\n\r\nFor example instanciate a `HuggingFacePipeline` LLM instance with [openchat](https://huggingface.co/openchat/openchat_3.5) model. This model uses `<|end_of_turn|>` stop words.\r\n\r\nSince the `llms.utils.enforce_stop_tokens()` function doesn't escape the provided stop words strings the `|` chars are interpreted as part of the regex instead of the stop word. So in this case any single `<` chars in the output would trigger the\r\nsplit.\r\n\r\n### Expected behavior\r\n\r\nStop words should be escaped with `re.escape()` so the split only happens on the complete words.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13397/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13397/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13396",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13396/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13396/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13396/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13396",
        "id": 1994881252,
        "node_id": "PR_kwDOIPDwls5fhkmk",
        "number": 13396,
        "title": "fix: OpenAPISpec.parse_obj unlimited recursion",
        "user": {
            "login": "happyxhw",
            "id": 44490504,
            "node_id": "MDQ6VXNlcjQ0NDkwNTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/44490504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/happyxhw",
            "html_url": "https://github.com/happyxhw",
            "followers_url": "https://api.github.com/users/happyxhw/followers",
            "following_url": "https://api.github.com/users/happyxhw/following{/other_user}",
            "gists_url": "https://api.github.com/users/happyxhw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/happyxhw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/happyxhw/subscriptions",
            "organizations_url": "https://api.github.com/users/happyxhw/orgs",
            "repos_url": "https://api.github.com/users/happyxhw/repos",
            "events_url": "https://api.github.com/users/happyxhw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/happyxhw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-15T14:24:14Z",
        "updated_at": "2023-11-29T01:12:29Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13396",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13396",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13396.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13396.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** fix OpenAPISpec.parse_obj unlimited recursion, when parse openapi spec with field not exist, the  recursion can not stop\r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** none,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13396/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13396/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13395",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13395/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13395/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13395/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13395",
        "id": 1994871196,
        "node_id": "PR_kwDOIPDwls5fhia7",
        "number": 13395,
        "title": "Make pirate-speak-configurable template not require env vars for alte\u2026",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-15T14:18:57Z",
        "updated_at": "2023-11-15T22:38:04Z",
        "closed_at": "2023-11-15T22:38:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13395",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13395",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13395.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13395.patch",
            "merged_at": "2023-11-15T22:38:03Z"
        },
        "body": "\u2026rnative LLMs until used\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13395/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13395/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13393",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13393/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13393/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13393/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13393",
        "id": 1994769118,
        "node_id": "I_kwDOIPDwls525cLe",
        "number": 13393,
        "title": "[Enhancement] Timestamp supported Message and/or Memory",
        "user": {
            "login": "52cs",
            "id": 96275757,
            "node_id": "U_kgDOBb0NLQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/96275757?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/52cs",
            "html_url": "https://github.com/52cs",
            "followers_url": "https://api.github.com/users/52cs/followers",
            "following_url": "https://api.github.com/users/52cs/following{/other_user}",
            "gists_url": "https://api.github.com/users/52cs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/52cs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/52cs/subscriptions",
            "organizations_url": "https://api.github.com/users/52cs/orgs",
            "repos_url": "https://api.github.com/users/52cs/repos",
            "events_url": "https://api.github.com/users/52cs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/52cs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-15T13:21:24Z",
        "updated_at": "2023-11-15T13:40:39Z",
        "closed_at": "2023-11-15T13:40:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nMake `Message` and/or `Memory` to support `Timestamp`\n\n### Motivation\n\nTo provide context and clarity regarding the timing of conversation. This can be helpful for reference and coordination, especially when discussing time-sensitive topics.\r\n\r\nI noticed that [one agent in opengpts](https://opengpts-example-vz4y4ooboq-uc.a.run.app/) has supported this feature.\n\n### Your contribution\n\nI have not made a clear outline of adding the `Timestamps` feature.\r\n\r\nThe following is some possible ways to support it for discussion:\r\n\r\nProposal 1: Add `Timestamps` to `Message Schema`. This way every `Memory Entity` should support `Timestamps`.\r\n\r\nProposal 2: Create a new `TimestampedMemory`. This way has a better backward compatibility.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13393/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13393/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13392",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13392/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13392/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13392/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13392",
        "id": 1994663297,
        "node_id": "PR_kwDOIPDwls5fg1Ji",
        "number": 13392,
        "title": "TextGen api endpoint update",
        "user": {
            "login": "madhurish",
            "id": 33370824,
            "node_id": "MDQ6VXNlcjMzMzcwODI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/33370824?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/madhurish",
            "html_url": "https://github.com/madhurish",
            "followers_url": "https://api.github.com/users/madhurish/followers",
            "following_url": "https://api.github.com/users/madhurish/following{/other_user}",
            "gists_url": "https://api.github.com/users/madhurish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/madhurish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/madhurish/subscriptions",
            "organizations_url": "https://api.github.com/users/madhurish/orgs",
            "repos_url": "https://api.github.com/users/madhurish/repos",
            "events_url": "https://api.github.com/users/madhurish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/madhurish/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-15T12:14:59Z",
        "updated_at": "2023-11-23T03:40:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13392",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13392",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13392.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13392.patch",
            "merged_at": null
        },
        "body": "\r\n  - **Description:** The end point that TextGen exposes is different to the one that the current version of langchain makes a call to\r\n  - **Issue:** Failure when using TextGen to get LLM response\r\n  - **Tag maintainer:** @hwchase17\r\n@agola11\r\n \r\nAny guidance you can provide would be greatly appreciated.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13392/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13392/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13391",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13391/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13391/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13391/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13391",
        "id": 1994466938,
        "node_id": "I_kwDOIPDwls524SZ6",
        "number": 13391,
        "title": "Doc2txtLoader not working for web paths",
        "user": {
            "login": "BCrawleytvs",
            "id": 115239804,
            "node_id": "U_kgDOBt5rfA",
            "avatar_url": "https://avatars.githubusercontent.com/u/115239804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BCrawleytvs",
            "html_url": "https://github.com/BCrawleytvs",
            "followers_url": "https://api.github.com/users/BCrawleytvs/followers",
            "following_url": "https://api.github.com/users/BCrawleytvs/following{/other_user}",
            "gists_url": "https://api.github.com/users/BCrawleytvs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BCrawleytvs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BCrawleytvs/subscriptions",
            "organizations_url": "https://api.github.com/users/BCrawleytvs/orgs",
            "repos_url": "https://api.github.com/users/BCrawleytvs/repos",
            "events_url": "https://api.github.com/users/BCrawleytvs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BCrawleytvs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-15T10:15:47Z",
        "updated_at": "2023-11-15T10:23:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nWindows 11, Langchain 0.0327, Python 3.10.\r\n\r\nThe Doc2txtLoader does not work for web paths, as a PermissionError occurs  when self.tempfile attempts to write content to the tempfile:\r\n\r\n\r\n        if not os.path.isfile(self.file_path) and self._is_valid_url(self.file_path):\r\n            r = requests.get(self.file_path)\r\n\r\n            if r.status_code != 200:\r\n                raise ValueError(\r\n                    \"Check the url of your file; returned status code %s\"\r\n                    % r.status_code\r\n                )\r\n\r\n            self.web_path = self.file_path\r\n            self.temp_file = tempfile.NamedTemporaryFile()\r\n            **self.temp_file.write(r.content)**\r\n            self.file_path = self.temp_file.name\r\n        elif not os.path.isfile(self.file_path):\r\n            raise ValueError(\"File path %s is not a valid file or url\" % self.file_path)\r\n\r\nIt produces a Permission Error: _[Errno 13] Permission denied:_ as the file is already open, and will be deleted on close.\r\n\r\nI can work around this by replacing this section of the code with the following:\r\n\r\n        if not os.path.isfile(self.file_path) and self._is_valid_url(self.file_path):\r\n            self.temp_dir = tempfile.TemporaryDirectory()\r\n            _, suffix = os.path.splitext(self.file_path)\r\n            temp_pdf = os.path.join(self.temp_dir.name, f\"tmp{suffix}\")\r\n            self.web_path = self.file_path\r\n            if not self._is_s3_url(self.file_path):\r\n                r = requests.get(self.file_path, headers=self.headers)\r\n                if r.status_code != 200:\r\n                    raise ValueError(\r\n                        \"Check the url of your file; returned status code %s\"\r\n                        % r.status_code\r\n                    )\r\n\r\n                with open(temp_pdf, mode=\"wb\") as f:\r\n                    f.write(r.content)\r\n                self.file_path = str(temp_pdf)\r\n        elif not os.path.isfile(self.file_path):\r\n            raise ValueError(\"File path %s is not a valid file or url\" % self.file_path)\r\n\r\nThis is the method that works for the PDF loader. \r\n\r\nThe workaround is fine for now but will cause a problem if I need to update the langchain version any time in the future.\r\n\n\n### Who can help?\n\n@hwchase17 @eyurtsev \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.document_loaders import Docx2txtLoader\r\nloader = Docx2txtLoader(\"https://file-examples.com/wp-content/storage/2017/02/file-sample_100kB.docx\")\r\ndoc = loader.load()[0]\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.2\\plugins\\python-ce\\helpers\\pydev\\pydevconsole.py\", line 364, in runcode\r\n    coro = func()\r\n  File \"<input>\", line 3, in <module>\r\n  File \"C:\\Users\\crawleyb\\PycharmProjects\\SharepointGPT\\venv\\lib\\site-packages\\langchain\\document_loaders\\word_document.py\", line 55, in load\r\n    return [\r\n  File \"C:\\Users\\crawleyb\\PycharmProjects\\SharepointGPT\\venv\\lib\\site-packages\\docx2txt\\docx2txt.py\", line 76, in process\r\n    zipf = zipfile.ZipFile(docx)\r\n  File \"C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\\lib\\zipfile.py\", line 1251, in __init__\r\n    self.fp = io.open(file, filemode)\r\nPermissionError: [Errno 13] Permission denied: 'C:\\\\Users\\\\\n\n### Expected behavior\n\nThe DocumentLoader should be able to get the contents of the docx file, loader.load()[0] should return a Document object.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13391/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13391/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13390",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13390/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13390/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13390/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13390",
        "id": 1994439783,
        "node_id": "I_kwDOIPDwls524Lxn",
        "number": 13390,
        "title": "DOC: Clarify how to handle runs and linked calls with run_managers",
        "user": {
            "login": "ben-howt",
            "id": 58532441,
            "node_id": "MDQ6VXNlcjU4NTMyNDQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/58532441?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ben-howt",
            "html_url": "https://github.com/ben-howt",
            "followers_url": "https://api.github.com/users/ben-howt/followers",
            "following_url": "https://api.github.com/users/ben-howt/following{/other_user}",
            "gists_url": "https://api.github.com/users/ben-howt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ben-howt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ben-howt/subscriptions",
            "organizations_url": "https://api.github.com/users/ben-howt/orgs",
            "repos_url": "https://api.github.com/users/ben-howt/repos",
            "events_url": "https://api.github.com/users/ben-howt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ben-howt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-15T09:59:55Z",
        "updated_at": "2023-11-15T11:37:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nI'm trying to work through the streaming parameters around run_manager and callbacks.\r\n\r\nHere's a minimal setup of what I'm trying to establish\r\n\r\n```\r\nclass MyTool(BaseTool)\r\n    name: \"my_extra_tool\"\r\n\r\n    async def _arun(self, query: str, run_manager: Optional[AsyncCallbackManagerForToolRun] = None) -> str:\r\n        \"\"\"Use the tool asynchronously.\"\"\"\r\n        nested_manager = run_manager.get_child() # run_manager doesn't have an `on_llm_start` method, only supports `on_tool_end` / `on_tool_error` and `on_text` (which has no callback in LangchainTracer\r\n        llm_run_manager = await nested_manager.on_llm_start({\"llm\": self.llm, \"name\": self.name+\"_substep\"}, prompts=[query]) # need to give\r\n        # do_stuff, results in main_response\r\n        main_response = \"<gets created in the tool, might be part of streaming output in the future>\"\r\n        await llm_run_manager[0].on_llm_new_token(main_response) # can't use llm_run_manager directly as it's a list\r\n        await llm_run_manager[0].on_llm_end(response=main_response)\r\n```\r\n\r\nI'm seeing that on_llm_new_token callback is being called in my custom callback handler, but I don't see the response in Langsmith.\r\n\r\nThe docs aren't fully clear on how to make sure these run_ids should be propagated.\r\n\n\n### Idea or request for content:\n\nIt would be fantastic to have a detailed example of how to correctly nest runs with arbitrary tools.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13390/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13390/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13389",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13389/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13389/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13389/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13389",
        "id": 1994425347,
        "node_id": "PR_kwDOIPDwls5fgBLf",
        "number": 13389,
        "title": "Feature: Add iFlyTek Spark LLM chat model support",
        "user": {
            "login": "vsxd",
            "id": 28803103,
            "node_id": "MDQ6VXNlcjI4ODAzMTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/28803103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vsxd",
            "html_url": "https://github.com/vsxd",
            "followers_url": "https://api.github.com/users/vsxd/followers",
            "following_url": "https://api.github.com/users/vsxd/following{/other_user}",
            "gists_url": "https://api.github.com/users/vsxd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vsxd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vsxd/subscriptions",
            "organizations_url": "https://api.github.com/users/vsxd/orgs",
            "repos_url": "https://api.github.com/users/vsxd/repos",
            "events_url": "https://api.github.com/users/vsxd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vsxd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714130,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rkg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XL",
                "name": "size:XL",
                "color": "D4C5F9",
                "default": false,
                "description": "This PR changes 500-999 lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-11-15T09:51:35Z",
        "updated_at": "2023-12-14T02:41:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13389",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13389",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13389.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13389.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n\r\n  - **Description:** This PR enables LangChain to access the iFlyTek's Spark LLM via the chat_models wrapper.\r\n  - **Dependencies:** websocket-client ^1.6.1\r\n  - **Tag maintainer:** @baskaryan \r\n\r\n### SparkLLM chat model usage\r\n\r\nGet SparkLLM's app_id, api_key and api_secret from [iFlyTek SparkLLM API Console](https://console.xfyun.cn/services/bm3) (for more info, see [iFlyTek SparkLLM Intro](https://xinghuo.xfyun.cn/sparkapi) ), then  set environment variables `IFLYTEK_SPARK_APP_ID`, `IFLYTEK_SPARK_API_KEY` and `IFLYTEK_SPARK_API_SECRET` or pass parameters when using it like the demo below:\r\n\r\n```python3\r\nfrom langchain.chat_models.sparkllm import ChatSparkLLM\r\n\r\nclient = ChatSparkLLM(\r\n    spark_app_id=\"<app_id>\",\r\n    spark_api_key=\"<api_key>\",\r\n    spark_api_secret=\"<api_secret>\"\r\n)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13389/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13389/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13388",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13388/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13388/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13388/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13388",
        "id": 1994363408,
        "node_id": "PR_kwDOIPDwls5ffzxr",
        "number": 13388,
        "title": "DeepLake Backwards compatibility fix",
        "user": {
            "login": "adolkhan",
            "id": 54854336,
            "node_id": "MDQ6VXNlcjU0ODU0MzM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/54854336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adolkhan",
            "html_url": "https://github.com/adolkhan",
            "followers_url": "https://api.github.com/users/adolkhan/followers",
            "following_url": "https://api.github.com/users/adolkhan/following{/other_user}",
            "gists_url": "https://api.github.com/users/adolkhan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adolkhan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adolkhan/subscriptions",
            "organizations_url": "https://api.github.com/users/adolkhan/orgs",
            "repos_url": "https://api.github.com/users/adolkhan/repos",
            "events_url": "https://api.github.com/users/adolkhan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adolkhan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-15T09:15:08Z",
        "updated_at": "2023-11-20T05:46:02Z",
        "closed_at": "2023-11-20T05:46:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13388",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13388",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13388.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13388.patch",
            "merged_at": "2023-11-20T05:46:01Z"
        },
        "body": "- **Description:** during search with DeepLake some people are facing backwards compatibility issues, this PR fixes it by making search accessible for the older datasets\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13388/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13388/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13387",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13387/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13387/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13387/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13387",
        "id": 1994353668,
        "node_id": "I_kwDOIPDwls5232wE",
        "number": 13387,
        "title": "MySQL : SQL Query generated contains enclosing single quotes leading to SQL Alchemy giving Programming Error, 1064",
        "user": {
            "login": "anujmehta",
            "id": 66487,
            "node_id": "MDQ6VXNlcjY2NDg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/66487?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anujmehta",
            "html_url": "https://github.com/anujmehta",
            "followers_url": "https://api.github.com/users/anujmehta/followers",
            "following_url": "https://api.github.com/users/anujmehta/following{/other_user}",
            "gists_url": "https://api.github.com/users/anujmehta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anujmehta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anujmehta/subscriptions",
            "organizations_url": "https://api.github.com/users/anujmehta/orgs",
            "repos_url": "https://api.github.com/users/anujmehta/repos",
            "events_url": "https://api.github.com/users/anujmehta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anujmehta/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-15T09:09:20Z",
        "updated_at": "2023-11-15T09:51:03Z",
        "closed_at": "2023-11-15T09:44:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version: 0.0.321\r\nPython: 3.10\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI am using Langchain to generate and execute SQL queries for MySql database.\r\nThe SQL Query generated is enclosed in single quotes\r\n\r\nGenerate SQL Query: **'**\"SELECT * FROM EMPLOYEE WHERE ID = 123\"**'**\r\nExpected SQL Query: \"SELECT * FROM EMPLOYEE WHERE ID = 123\"\r\n\r\nHence though the query is correct, sql alchemy is unable to execute query and gives Programming error\r\n(pymysql.err.ProgrammingError) (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use \n\n### Expected behavior\n\nExpected SQL Query should be without enclosing single quotes.\r\n\r\nI did some debugging as looks like we get single quotes while invoking predict method of LLM - https://github.com/langchain-ai/langchain/blob/master/libs/experimental/langchain_experimental/sql/base.py#L156",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13387/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13387/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13386",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13386/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13386/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13386/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13386",
        "id": 1994205803,
        "node_id": "PR_kwDOIPDwls5ffRq0",
        "number": 13386,
        "title": "Updated clarifai-grpc with Clarifai python SDK functions (#1)",
        "user": {
            "login": "mogith-pn",
            "id": 143642606,
            "node_id": "U_kgDOCI_P7g",
            "avatar_url": "https://avatars.githubusercontent.com/u/143642606?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mogith-pn",
            "html_url": "https://github.com/mogith-pn",
            "followers_url": "https://api.github.com/users/mogith-pn/followers",
            "following_url": "https://api.github.com/users/mogith-pn/following{/other_user}",
            "gists_url": "https://api.github.com/users/mogith-pn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mogith-pn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mogith-pn/subscriptions",
            "organizations_url": "https://api.github.com/users/mogith-pn/orgs",
            "repos_url": "https://api.github.com/users/mogith-pn/repos",
            "events_url": "https://api.github.com/users/mogith-pn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mogith-pn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714130,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rkg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XL",
                "name": "size:XL",
                "color": "D4C5F9",
                "default": false,
                "description": "This PR changes 500-999 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-15T07:27:43Z",
        "updated_at": "2023-11-21T17:27:31Z",
        "closed_at": "2023-11-21T17:27:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13386",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13386",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13386.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13386.patch",
            "merged_at": null
        },
        "body": "Description :\r\n1. Updated the functions with new clarifai python SDK.\r\n2. Enabled initialisation of clarifai class with model URL.\r\n3. Updated docs with new functions examples. \r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13386/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13386/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13385",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13385/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13385/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13385/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13385",
        "id": 1994121327,
        "node_id": "PR_kwDOIPDwls5fe_Ln",
        "number": 13385,
        "title": "Multi-modal RAG template",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-15T06:18:07Z",
        "updated_at": "2023-11-15T23:13:04Z",
        "closed_at": "2023-11-15T23:13:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13385",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13385",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13385.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13385.patch",
            "merged_at": null
        },
        "body": "Template that follow recipe for multi-modal RAG using multi-vector retriever as shown in recent [cookbook](https://github.com/langchain-ai/langchain/blob/master/cookbook/Multi_modal_RAG.ipynb).\r\n\r\nApplies RAG on [this blog post](https://cloudedjudgement.substack.com/p/clouded-judgement-111023).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13385/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13385/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13383",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13383/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13383/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13383/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13383",
        "id": 1993997381,
        "node_id": "I_kwDOIPDwls522fxF",
        "number": 13383,
        "title": "Issue: <error faq() takes 1 positional argument but 2 were given>",
        "user": {
            "login": "zhangleinice",
            "id": 33247284,
            "node_id": "MDQ6VXNlcjMzMjQ3Mjg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/33247284?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhangleinice",
            "html_url": "https://github.com/zhangleinice",
            "followers_url": "https://api.github.com/users/zhangleinice/followers",
            "following_url": "https://api.github.com/users/zhangleinice/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhangleinice/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhangleinice/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhangleinice/subscriptions",
            "organizations_url": "https://api.github.com/users/zhangleinice/orgs",
            "repos_url": "https://api.github.com/users/zhangleinice/repos",
            "events_url": "https://api.github.com/users/zhangleinice/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhangleinice/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-11-15T04:05:00Z",
        "updated_at": "2023-11-15T08:11:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\n```\r\nopenai.proxy = {\r\n            \"http\": \"http://127.0.0.1:7890\",\r\n            \"https\": \"http://127.0.0.1:7890\"\r\n        }\r\n\r\ncallback = AsyncIteratorCallbackHandler()\r\n\r\nllm = OpenAI(\r\n    openai_api_key= os.environ[\"OPENAI_API_KEY\"],\r\n    temperature=0, \r\n    streaming=True, \r\n    callbacks=[callback]\r\n)\r\nembeddings = OpenAIEmbeddings()\r\n\r\n# faq\r\nloader = TextLoader(\"static/faq/ecommerce_faq.txt\")\r\ndocuments = loader.load()\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\ntexts = text_splitter.split_documents(documents)\r\n\r\ndocsearch = Chroma.from_documents(texts, embeddings)\r\n\r\nfaq_chain = RetrievalQA.from_chain_type(\r\n    llm, \r\n    chain_type=\"stuff\", \r\n    retriever=docsearch.as_retriever(),\r\n)\r\n\r\n@tool(\"FAQ\")\r\ndef faq(input) -> str:\r\n    \"\"\"\"useful for when you need to answer questions about shopping policies, like return policy, shipping policy, etc.\"\"\"\r\n    print('faq input', input)\r\n    return faq_chain.acall(input)\r\n\r\ntools = [faq]\r\n\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\n\r\nconversation_agent = initialize_agent(\r\n    tools, \r\n    llm, \r\n    agent=\"conversational-react-description\", \r\n    memory=memory, \r\n    verbose=True,\r\n)\r\n    \r\n async def wait_done(fn, event):\r\n    try:\r\n        await fn\r\n    except Exception as e:\r\n        print('error', e)\r\n        # event.set()\r\n    finally:\r\n        event.set()\r\n\r\n\r\nasync def call_openai(question):\r\n\r\n    # chain = faq(question)\r\n    chain = conversation_agent.acall(question)\r\n\r\n    coroutine = wait_done(chain, callback.done)\r\n\r\n    task = asyncio.create_task(coroutine)\r\n\r\n    async for token in callback.aiter():\r\n        # print('token', token)\r\n        yield f\"{token}\"\r\n\r\n    await task\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/\")\r\nasync def homepage():\r\n    return FileResponse('static/index.html')\r\n\r\n@app.post(\"/ask\")\r\ndef ask(body: dict):\r\n    return StreamingResponse(call_openai(body['question']), media_type=\"text/event-stream\")\r\n\r\nif __name__ == \"__main__\":\r\n   uvicorn.run(host=\"127.0.0.1\", port=8888, app=app)\r\n```\r\n\r\nRuntimeWarning: Enable tracemalloc to get the object allocation traceback\r\n\r\nThought: Do I need to use a tool? No\r\nAI: \u4f60\u597d\uff01\u5f88\u9ad8\u5174\u8ba4\u8bc6\u4f60\uff01\r\n\r\n> Finished chain.\r\nINFO:     127.0.0.1:65193 - \"POST /ask HTTP/1.1\" 200 OK\r\nconversation_agent <coroutine object Chain.acall at 0x1326b78a0>\r\ncoroutine <async_generator object AsyncIteratorCallbackHandler.aiter at 0x133b49340>\r\n\r\n\r\n> Entering new AgentExecutor chain...\r\n\r\nThought: Do I need to use a tool? Yes\r\nAction: FAQ\r\nAction Input: \u5982\u4f55\u66f4\u6539\u5e10\u6237\u4fe1\u606ferror faq() takes 1 positional argument but 2 were given\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13383/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13383/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13382",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13382/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13382/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13382/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13382",
        "id": 1993967484,
        "node_id": "I_kwDOIPDwls522Yd8",
        "number": 13382,
        "title": "Custom Tool Output",
        "user": {
            "login": "projectssimm",
            "id": 43559168,
            "node_id": "MDQ6VXNlcjQzNTU5MTY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/43559168?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/projectssimm",
            "html_url": "https://github.com/projectssimm",
            "followers_url": "https://api.github.com/users/projectssimm/followers",
            "following_url": "https://api.github.com/users/projectssimm/following{/other_user}",
            "gists_url": "https://api.github.com/users/projectssimm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/projectssimm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/projectssimm/subscriptions",
            "organizations_url": "https://api.github.com/users/projectssimm/orgs",
            "repos_url": "https://api.github.com/users/projectssimm/repos",
            "events_url": "https://api.github.com/users/projectssimm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/projectssimm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-15T03:27:22Z",
        "updated_at": "2023-11-15T03:57:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi guys,\r\n\r\nHere is the situation, I have 3 tools to use one by one. But, the outputs of which are not in the same types. Say:\r\n\r\nTool 1: output normally, and can be further thought by GPT in the chain,\r\nTool 2: output specially, which means the output should not be thought further by GPT again, because in that way the output format and data will be not correctly,\r\nTool 3: output normally, like Tool 1.\r\n\r\nIn this way, I found it hard to get the correct answer for myself. If all the tools are set to return_direct=False, the answer to Tool 2 will not be right, and if I set return_dircect=True, the chain of Tools 1->2->3 would be lost...\r\n\r\nWhat should I do?\r\n\r\nAny help will be highly appreciated.\r\nBest\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13382/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13382/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13381",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13381/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13381/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13381/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13381",
        "id": 1993952712,
        "node_id": "PR_kwDOIPDwls5febAP",
        "number": 13381,
        "title": "Minor redis improvements",
        "user": {
            "login": "tylerhutcherson",
            "id": 20304844,
            "node_id": "MDQ6VXNlcjIwMzA0ODQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/20304844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tylerhutcherson",
            "html_url": "https://github.com/tylerhutcherson",
            "followers_url": "https://api.github.com/users/tylerhutcherson/followers",
            "following_url": "https://api.github.com/users/tylerhutcherson/following{/other_user}",
            "gists_url": "https://api.github.com/users/tylerhutcherson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tylerhutcherson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tylerhutcherson/subscriptions",
            "organizations_url": "https://api.github.com/users/tylerhutcherson/orgs",
            "repos_url": "https://api.github.com/users/tylerhutcherson/repos",
            "events_url": "https://api.github.com/users/tylerhutcherson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tylerhutcherson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5955630415,
                "node_id": "LA_kwDOIPDwls8AAAABYvu1Tw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20redis",
                "name": "integration: redis",
                "color": "F9D0C4",
                "default": false,
                "description": "Any integration that uses Redis"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-15T03:14:18Z",
        "updated_at": "2023-11-20T18:07:42Z",
        "closed_at": "2023-11-20T03:15:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13381",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13381",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13381.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13381.patch",
            "merged_at": "2023-11-20T03:15:45Z"
        },
        "body": "  - **Description:**\r\n      - Fixes a `key_prefix` bug where passing it in on `Redis.from_existing(...)` did not work properly. Updates doc strings accordingly.\r\n      - Updates Redis filter classes logic with best practices on typing, string formatting, and handling \"empty\" filters.\r\n      - Fixes a bug that would prevent multiple tag filters from being applied together in some scenarios.\r\n      - Added a whole new filter unit testing module. Also updated code formatting for a number of modules that were failing the `make` commands.\r\n  - **Issue:** N/A\r\n  - **Dependencies:** N/A\r\n  - **Tag maintainer:** @baskaryan \r\n  - **Twitter handle:** @tchutch94\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13381/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13381/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13380",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13380/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13380/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13380/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13380",
        "id": 1993916716,
        "node_id": "PR_kwDOIPDwls5feTUy",
        "number": 13380,
        "title": "docs: install nit",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-15T02:32:09Z",
        "updated_at": "2023-11-15T18:27:01Z",
        "closed_at": "2023-11-15T18:27:00Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13380",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13380",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13380.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13380.patch",
            "merged_at": "2023-11-15T18:27:00Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13380/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13380/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13379",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13379/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13379/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13379/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13379",
        "id": 1993906368,
        "node_id": "PR_kwDOIPDwls5feRFo",
        "number": 13379,
        "title": "docs integration cards site",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-15T02:20:50Z",
        "updated_at": "2023-11-15T16:38:53Z",
        "closed_at": "2023-11-15T03:49:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13379",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13379",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13379.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13379.patch",
            "merged_at": "2023-11-15T03:49:18Z"
        },
        "body": "The `Integrations` site is hidden now.\r\nI've added it into the `More` menu.\r\nThe name is `Integration Cards` otherwise, it is confused with the `Integrations` menu. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13379/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13379/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13378",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13378/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13378/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13378/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13378",
        "id": 1993882444,
        "node_id": "PR_kwDOIPDwls5feL0H",
        "number": 13378,
        "title": "api doc newlines",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-15T01:59:06Z",
        "updated_at": "2023-11-20T16:38:24Z",
        "closed_at": "2023-11-15T03:16:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13378",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13378",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13378.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13378.patch",
            "merged_at": "2023-11-15T03:16:31Z"
        },
        "body": "cc @leo-gan \r\n\r\nDeploying at https://api.python.langchain.com/en/erick-api-doc-newlines-/api_reference.html (will take a bit)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13378/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13378/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13377",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13377/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13377/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13377/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13377",
        "id": 1993858995,
        "node_id": "PR_kwDOIPDwls5feGxl",
        "number": 13377,
        "title": "Set openai_api_type to be passed as values to leverage azure openai's default",
        "user": {
            "login": "kevinco26",
            "id": 6841066,
            "node_id": "MDQ6VXNlcjY4NDEwNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6841066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinco26",
            "html_url": "https://github.com/kevinco26",
            "followers_url": "https://api.github.com/users/kevinco26/followers",
            "following_url": "https://api.github.com/users/kevinco26/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinco26/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinco26/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinco26/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinco26/orgs",
            "repos_url": "https://api.github.com/users/kevinco26/repos",
            "events_url": "https://api.github.com/users/kevinco26/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinco26/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-15T01:33:47Z",
        "updated_at": "2023-11-16T21:38:59Z",
        "closed_at": "2023-11-15T03:48:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13377",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13377",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13377.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13377.patch",
            "merged_at": null
        },
        "body": "  - **Description:** \r\nRecently, this was introduced: https://github.com/langchain-ai/langchain/pull/10707\r\n\r\nHowever, the changes are not taking effect unless you create the AzureOpenAIEmbeddings class with parameter openai_api_type=\"azure\".. In the code it's already getting set by default if openAI version > 1 but it's never getting accessed when the embed_documents is actually happening because it was never surfaced up\r\n  - **Issue:** Not so much an issue but leveraging existing default code of api type of azure when used.\r\n  - **Twitter handle:** @kevin_neum",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13377/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13377/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13376",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13376/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13376/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13376/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13376",
        "id": 1993750120,
        "node_id": "PR_kwDOIPDwls5fdvP_",
        "number": 13376,
        "title": "corrected handling of response in _generate/_agenerate",
        "user": {
            "login": "trevdoz",
            "id": 34779611,
            "node_id": "MDQ6VXNlcjM0Nzc5NjEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/34779611?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trevdoz",
            "html_url": "https://github.com/trevdoz",
            "followers_url": "https://api.github.com/users/trevdoz/followers",
            "following_url": "https://api.github.com/users/trevdoz/following{/other_user}",
            "gists_url": "https://api.github.com/users/trevdoz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trevdoz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trevdoz/subscriptions",
            "organizations_url": "https://api.github.com/users/trevdoz/orgs",
            "repos_url": "https://api.github.com/users/trevdoz/repos",
            "events_url": "https://api.github.com/users/trevdoz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trevdoz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-14T23:28:40Z",
        "updated_at": "2023-11-16T12:19:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13376",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13376",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13376.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13376.patch",
            "merged_at": null
        },
        "body": " - **Description:** corrects handling of Prediction object returned from the predict method of the PredictionServiceClient in _generate/_agenerate method of the VertexAIModelGarden class\r\n  - **Issue:** #13370,\r\n  - **Dependencies:** None",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13376/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13376/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13375",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13375/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13375/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13375/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13375",
        "id": 1993744148,
        "node_id": "PR_kwDOIPDwls5fdt4v",
        "number": 13375,
        "title": "`Yi` model from `01.ai` , example",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T23:24:21Z",
        "updated_at": "2023-11-15T01:37:53Z",
        "closed_at": "2023-11-15T01:10:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13375",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13375",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13375.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13375.patch",
            "merged_at": "2023-11-15T01:10:53Z"
        },
        "body": "Added an example with new soa `Yi` model to `HuggingFace-hub` notebook",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13375/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13375/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13374",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13374/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13374/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13374/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13374",
        "id": 1993731540,
        "node_id": "PR_kwDOIPDwls5fdrGu",
        "number": 13374,
        "title": "Updated VertexAIModelGarden class generate method vertexai.py to align with VertexAI API",
        "user": {
            "login": "trevdoz",
            "id": 34779611,
            "node_id": "MDQ6VXNlcjM0Nzc5NjEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/34779611?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trevdoz",
            "html_url": "https://github.com/trevdoz",
            "followers_url": "https://api.github.com/users/trevdoz/followers",
            "following_url": "https://api.github.com/users/trevdoz/following{/other_user}",
            "gists_url": "https://api.github.com/users/trevdoz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trevdoz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trevdoz/subscriptions",
            "organizations_url": "https://api.github.com/users/trevdoz/orgs",
            "repos_url": "https://api.github.com/users/trevdoz/repos",
            "events_url": "https://api.github.com/users/trevdoz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trevdoz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T23:12:32Z",
        "updated_at": "2023-11-14T23:13:00Z",
        "closed_at": "2023-11-14T23:12:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13374",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13374",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13374.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13374.patch",
            "merged_at": null
        },
        "body": "Replace this entire comment with:\r\n  - **Description:** corrects handling of Prediction object returned from the predict method of the PredictionServiceClient in _generate method of the VertexAIModelGarden class\r\n  - **Issue:** #13370,\r\n  - **Dependencies:** None",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13374/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13374/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13373",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13373/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13373/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13373/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13373",
        "id": 1993717007,
        "node_id": "PR_kwDOIPDwls5fdn3k",
        "number": 13373,
        "title": "fix cli release",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T22:59:02Z",
        "updated_at": "2023-11-14T23:08:36Z",
        "closed_at": "2023-11-14T23:08:35Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13373",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13373",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13373.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13373.patch",
            "merged_at": "2023-11-14T23:08:35Z"
        },
        "body": "My thought is that the ==version would prevent pip from finding the package on regular [pypi.org](http://pypi.org/), so it would look at [test.pypi.org](http://test.pypi.org/) for that. Otherwise it'll pull package from [pypi.org](http://pypi.org/) (e.g. sub deps)\r\n\r\nRight now, the cli release is failing because it's going to test.pypi.org by default, so it finds this incorrect FASTAPI package instead of the real one: https://test.pypi.org/project/FASTAPI/",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13373/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13373/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13372",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13372/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13372/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13372/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13372",
        "id": 1993684985,
        "node_id": "PR_kwDOIPDwls5fdg2z",
        "number": 13372,
        "title": "callback refactor",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T22:30:10Z",
        "updated_at": "2023-11-16T16:25:11Z",
        "closed_at": "2023-11-16T16:25:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13372",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13372",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13372.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13372.patch",
            "merged_at": "2023-11-16T16:25:10Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13372/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13372/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13371",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13371/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13371/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13371/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13371",
        "id": 1993654028,
        "node_id": "PR_kwDOIPDwls5fdZ7j",
        "number": 13371,
        "title": "fmt",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-14T22:09:24Z",
        "updated_at": "2023-11-15T20:43:58Z",
        "closed_at": "2023-11-14T22:17:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13371",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13371",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13371.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13371.patch",
            "merged_at": "2023-11-14T22:17:44Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13371/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13371/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13370",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13370/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13370/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13370/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13370",
        "id": 1993638093,
        "node_id": "I_kwDOIPDwls521IDN",
        "number": 13370,
        "title": "VertexAIModelGarden _generate method not in sync with VertexAI API",
        "user": {
            "login": "trevdoz",
            "id": 34779611,
            "node_id": "MDQ6VXNlcjM0Nzc5NjEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/34779611?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trevdoz",
            "html_url": "https://github.com/trevdoz",
            "followers_url": "https://api.github.com/users/trevdoz/followers",
            "following_url": "https://api.github.com/users/trevdoz/following{/other_user}",
            "gists_url": "https://api.github.com/users/trevdoz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trevdoz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trevdoz/subscriptions",
            "organizations_url": "https://api.github.com/users/trevdoz/orgs",
            "repos_url": "https://api.github.com/users/trevdoz/repos",
            "events_url": "https://api.github.com/users/trevdoz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trevdoz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-11-14T21:55:57Z",
        "updated_at": "2023-12-04T15:53:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version: \r\nPlatform: WSL for Windows (Linux 983G3J3 5.15.90.1-microsoft-standard-WSL2)\r\nPython version: 3.10.6\n\n### Who can help?\n\n@agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1a. Create a project in GCP and deploy an open source model from Vertex AI Model Garden (follow the provided Colab notebook to deploy to an endpoint)\r\n1b. Instantiate a VertexAIModelGarden object \r\n```python\r\nllm = VertexAIModelGarden(project=PROJECT_ID, endpoint_id=ENDPOINT_ID)\r\n```\r\n2. Create a prompt string\r\n```python\r\nprompt = \"This is an example prompt\"\r\n```\r\n3. Call the generate method on the VertexAIModelGarden object\r\n```python\r\nllm.generate([prompt])\r\n```\r\n4. The following error will be produced:\r\n```python\r\n../python3.10/site-packages/langchain/llms/vertexai.py\", line 452, in <listcomp>\r\n    [Generation(text=prediction[self.result_arg]) for prediction in result]\r\nTypeError: string indices must be integers\r\n```\n\n### Expected behavior\n\nExpecting the generate method to return an LLMResult object that contains the model's response in the 'generations' property\r\n\r\nIn order to align with Vertex AI api the _generate method should iterate through response.predictions and set text property of Generation object to the iterator variable since response.predictions is a list data type that contains the output strings.\r\n```python\r\nfor result in response.predictions:\r\n            generations.append(\r\n                [Generation(text=result)]\r\n            )\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13370/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13370/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13369",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13369/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13369/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13369/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13369",
        "id": 1993605403,
        "node_id": "PR_kwDOIPDwls5fdPTU",
        "number": 13369,
        "title": "Fix the bedrock documentation",
        "user": {
            "login": "prakass1",
            "id": 6094960,
            "node_id": "MDQ6VXNlcjYwOTQ5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6094960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prakass1",
            "html_url": "https://github.com/prakass1",
            "followers_url": "https://api.github.com/users/prakass1/followers",
            "following_url": "https://api.github.com/users/prakass1/following{/other_user}",
            "gists_url": "https://api.github.com/users/prakass1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prakass1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prakass1/subscriptions",
            "organizations_url": "https://api.github.com/users/prakass1/orgs",
            "repos_url": "https://api.github.com/users/prakass1/repos",
            "events_url": "https://api.github.com/users/prakass1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prakass1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-14T21:29:55Z",
        "updated_at": "2023-11-15T03:00:53Z",
        "closed_at": "2023-11-15T03:00:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13369",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13369",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13369.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13369.patch",
            "merged_at": null
        },
        "body": "  - **Description:** As I was working through bedrock llm for RetreivalQAChain I noticed that the imports were wrong and is corrected for documentation.\r\n  - **Issue:** As mentioned in the documentation for langchain. The import says from `langchain.llms import Bedrock` which should rather be `from langchain.llms.bedrock import Bedrock`\r\n  - **Dependencies:** None\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13369/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13369/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13368",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13368/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13368/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13368/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13368",
        "id": 1993528820,
        "node_id": "I_kwDOIPDwls520tX0",
        "number": 13368,
        "title": "module 'openai' has no attribute 'error'",
        "user": {
            "login": "ryanpeach",
            "id": 14838729,
            "node_id": "MDQ6VXNlcjE0ODM4NzI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14838729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanpeach",
            "html_url": "https://github.com/ryanpeach",
            "followers_url": "https://api.github.com/users/ryanpeach/followers",
            "following_url": "https://api.github.com/users/ryanpeach/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryanpeach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryanpeach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryanpeach/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanpeach/orgs",
            "repos_url": "https://api.github.com/users/ryanpeach/repos",
            "events_url": "https://api.github.com/users/ryanpeach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryanpeach/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-11-14T20:37:27Z",
        "updated_at": "2023-11-30T16:59:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nopenai==1.2.4\r\nlangchain==0.0.325\r\nllama_index==0.8.69\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\n/usr/local/lib/python3.10/site-packages/llama_index/indices/base.py:102: in from_documents\r\n    return cls(\r\n/usr/local/lib/python3.10/site-packages/llama_index/indices/vector_store/base.py:49: in __init__\r\n    super().__init__(\r\n/usr/local/lib/python3.10/site-packages/llama_index/indices/base.py:71: in __init__\r\n    index_struct = self.build_index_from_nodes(nodes)\r\n/usr/local/lib/python3.10/site-packages/llama_index/indices/vector_store/base.py:254: in build_index_from_nodes\r\n    return self._build_index_from_nodes(nodes, **insert_kwargs)\r\n/usr/local/lib/python3.10/site-packages/llama_index/indices/vector_store/base.py:235: in _build_index_from_nodes\r\n    self._add_nodes_to_index(\r\n/usr/local/lib/python3.10/site-packages/llama_index/indices/vector_store/base.py:188: in _add_nodes_to_index\r\n    nodes = self._get_node_with_embedding(nodes, show_progress)\r\n/usr/local/lib/python3.10/site-packages/llama_index/indices/vector_store/base.py:100: in _get_node_with_embedding\r\n    id_to_embed_map = embed_nodes(\r\n/usr/local/lib/python3.10/site-packages/llama_index/indices/utils.py:137: in embed_nodes\r\n    new_embeddings = embed_model.get_text_embedding_batch(\r\n/usr/local/lib/python3.10/site-packages/llama_index/embeddings/base.py:250: in get_text_embedding_batch\r\n    embeddings = self._get_text_embeddings(cur_batch)\r\n/usr/local/lib/python3.10/site-packages/llama_index/embeddings/langchain.py:82: in _get_text_embeddings\r\n    return self._langchain_embedding.embed_documents(texts)\r\n/usr/local/lib/python3.10/site-packages/langchain/embeddings/openai.py:490: in embed_documents\r\n    return self._get_len_safe_embeddings(texts, engine=self.deployment)\r\n/usr/local/lib/python3.10/site-packages/langchain/embeddings/openai.py:374: in _get_len_safe_embeddings\r\n    response = embed_with_retry(\r\n/usr/local/lib/python3.10/site-packages/langchain/embeddings/openai.py:100: in embed_with_retry\r\n    retry_decorator = _create_retry_decorator(embeddings)\r\n/usr/local/lib/python3.10/site-packages/langchain/embeddings/openai.py:47: in _create_retry_decorator\r\n    retry_if_exception_type(openai.error.Timeout)\r\nE   AttributeError: module 'openai' has no attribute 'error'\r\n```\n\n### Expected behavior\n\nI suppose it should run, I'll provide some reproducible code here in a minute.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13368/reactions",
            "total_count": 9,
            "+1": 7,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13368/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13367",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13367/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13367/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13367/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13367",
        "id": 1993497679,
        "node_id": "PR_kwDOIPDwls5fc3lu",
        "number": 13367,
        "title": "Add limit_to_domains to APIChain based tools",
        "user": {
            "login": "fielding",
            "id": 454023,
            "node_id": "MDQ6VXNlcjQ1NDAyMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/454023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fielding",
            "html_url": "https://github.com/fielding",
            "followers_url": "https://api.github.com/users/fielding/followers",
            "following_url": "https://api.github.com/users/fielding/following{/other_user}",
            "gists_url": "https://api.github.com/users/fielding/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fielding/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fielding/subscriptions",
            "organizations_url": "https://api.github.com/users/fielding/orgs",
            "repos_url": "https://api.github.com/users/fielding/repos",
            "events_url": "https://api.github.com/users/fielding/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fielding/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-14T20:15:54Z",
        "updated_at": "2023-11-15T03:07:17Z",
        "closed_at": "2023-11-15T03:07:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13367",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13367",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13367.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13367.patch",
            "merged_at": "2023-11-15T03:07:16Z"
        },
        "body": "  - **Description:**  Adds `limit_to_domains` param to the APIChain based tools  (open_meteo, TMDB, podcast_docs, and news_api)\r\n  - **Issue:** I didn't open an issue, but after upgrading to 0.0.328 using these tools would throw an error.\r\n  - **Dependencies:** N/A\r\n  - **Tag maintainer:** @baskaryan \r\n  \r\n  \r\n **Note**: I included the trailing / simply because the docs here did https://github.com/langchain-ai/langchain/blob/fc886cc3039c2479bb13287f48fcbdb097a44c70/docs/docs/use_cases/apis.ipynb#L246 , but I checked the code and it is using `urlparse`. SoI followed the docs since it comes down to stylee.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13367/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13367/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13366",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13366/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13366/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13366/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13366",
        "id": 1993466947,
        "node_id": "PR_kwDOIPDwls5fcwxt",
        "number": 13366,
        "title": "Bedrock cohere embedding support",
        "user": {
            "login": "celmore25",
            "id": 39035319,
            "node_id": "MDQ6VXNlcjM5MDM1MzE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/39035319?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/celmore25",
            "html_url": "https://github.com/celmore25",
            "followers_url": "https://api.github.com/users/celmore25/followers",
            "following_url": "https://api.github.com/users/celmore25/following{/other_user}",
            "gists_url": "https://api.github.com/users/celmore25/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/celmore25/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/celmore25/subscriptions",
            "organizations_url": "https://api.github.com/users/celmore25/orgs",
            "repos_url": "https://api.github.com/users/celmore25/repos",
            "events_url": "https://api.github.com/users/celmore25/events{/privacy}",
            "received_events_url": "https://api.github.com/users/celmore25/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-11-14T19:58:24Z",
        "updated_at": "2023-11-15T19:12:43Z",
        "closed_at": "2023-11-15T18:19:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13366",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13366",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13366.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13366.patch",
            "merged_at": "2023-11-15T18:19:13Z"
        },
        "body": "  - **Description:** adding cohere embedding support to bedrock embedding class\r\n  - **Issue:** N/A\r\n  - **Dependencies:** None\r\n  - **Tag maintainer:** @3coins \r\n  - **Twitter handle:** celmore25\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13366/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13366/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13365",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13365/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13365/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13365/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13365",
        "id": 1993436169,
        "node_id": "I_kwDOIPDwls520WwJ",
        "number": 13365,
        "title": "PGVector don't have indices what kills postgres in production",
        "user": {
            "login": "theromis",
            "id": 3720229,
            "node_id": "MDQ6VXNlcjM3MjAyMjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3720229?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theromis",
            "html_url": "https://github.com/theromis",
            "followers_url": "https://api.github.com/users/theromis/followers",
            "following_url": "https://api.github.com/users/theromis/following{/other_user}",
            "gists_url": "https://api.github.com/users/theromis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/theromis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/theromis/subscriptions",
            "organizations_url": "https://api.github.com/users/theromis/orgs",
            "repos_url": "https://api.github.com/users/theromis/repos",
            "events_url": "https://api.github.com/users/theromis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/theromis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T19:38:34Z",
        "updated_at": "2023-11-14T19:39:02Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nafter getting million embedding records in postgres, everything became ridiculously slow and postgres cpu usage went to 100%\r\nfix was simple:\r\n```\r\nCREATE INDEX CONCURRENTLY langchain_pg_embedding_collection_id ON langchain_pg_embedding(collection_id);\r\nCREATE INDEX CONCURRENTLY langchain_pg_collection_name ON langchain_pg_collection(name);\r\n```\r\nI think it's important to include index creation in basic setup.\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nJust run PGVector, and it will create tables without indices.\n\n### Expected behavior\n\nShould create indices",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13365/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13365/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13364",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13364/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13364/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13364/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13364",
        "id": 1993421929,
        "node_id": "PR_kwDOIPDwls5fcm6q",
        "number": 13364,
        "title": "Update `rag-timescale-conversation` to dependencies without CVEs.",
        "user": {
            "login": "obi1kenobi",
            "id": 2348618,
            "node_id": "MDQ6VXNlcjIzNDg2MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2348618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/obi1kenobi",
            "html_url": "https://github.com/obi1kenobi",
            "followers_url": "https://api.github.com/users/obi1kenobi/followers",
            "following_url": "https://api.github.com/users/obi1kenobi/following{/other_user}",
            "gists_url": "https://api.github.com/users/obi1kenobi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/obi1kenobi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/obi1kenobi/subscriptions",
            "organizations_url": "https://api.github.com/users/obi1kenobi/orgs",
            "repos_url": "https://api.github.com/users/obi1kenobi/repos",
            "events_url": "https://api.github.com/users/obi1kenobi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/obi1kenobi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T19:28:43Z",
        "updated_at": "2023-11-15T03:05:13Z",
        "closed_at": "2023-11-15T03:05:12Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13364",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13364",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13364.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13364.patch",
            "merged_at": "2023-11-15T03:05:12Z"
        },
        "body": "Just `poetry lock` and moving `langchain` to the latest version, in case folks copy this template.\n\nThis resolves some vulnerable dependency alerts GitHub code scanning was flagging.\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13364/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13364/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13363",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13363/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13363/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13363/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13363",
        "id": 1993385175,
        "node_id": "PR_kwDOIPDwls5fceww",
        "number": 13363,
        "title": "Bump pyarrow from 13.0.0 to 14.0.1 in /libs/langchain",
        "user": {
            "login": "dependabot[bot]",
            "id": 49699333,
            "node_id": "MDM6Qm90NDk2OTkzMzM=",
            "avatar_url": "https://avatars.githubusercontent.com/in/29110?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dependabot%5Bbot%5D",
            "html_url": "https://github.com/apps/dependabot",
            "followers_url": "https://api.github.com/users/dependabot%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dependabot%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/dependabot%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/dependabot%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dependabot%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 6138352923,
                "node_id": "LA_kwDOIPDwls8AAAABbd_VGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/dependencies",
                "name": "dependencies",
                "color": "0366d6",
                "default": false,
                "description": "Pull requests that update a dependency file"
            },
            {
                "id": 6209043855,
                "node_id": "LA_kwDOIPDwls8AAAABchZ9jw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/python",
                "name": "python",
                "color": "2b67c6",
                "default": false,
                "description": "Pull requests that update Python code"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T19:07:27Z",
        "updated_at": "2023-11-14T19:23:54Z",
        "closed_at": "2023-11-14T19:23:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13363",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13363",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13363.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13363.patch",
            "merged_at": "2023-11-14T19:23:53Z"
        },
        "body": "Bumps [pyarrow](https://github.com/apache/arrow) from 13.0.0 to 14.0.1.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/apache/arrow/commit/ba537483618196f50c67a90a473039e4d5dc35e0\"><code>ba53748</code></a> MINOR: [Release] Update versions for 14.0.1</li>\n<li><a href=\"https://github.com/apache/arrow/commit/529f3768fa4fce80781cd1a3cbdcf3a826281b14\"><code>529f376</code></a> MINOR: [Release] Update .deb/.rpm changelogs for 14.0.1</li>\n<li><a href=\"https://github.com/apache/arrow/commit/b84bbcac64e184a2b58661385506cff23006cc10\"><code>b84bbca</code></a> MINOR: [Release] Update CHANGELOG.md for 14.0.1</li>\n<li><a href=\"https://github.com/apache/arrow/commit/f14170976372436ec1d03a724d8d3f3925484ecf\"><code>f141709</code></a> <a href=\"https://redirect.github.com/apache/arrow/issues/38607\">GH-38607</a>: [Python] Disable PyExtensionType autoload (<a href=\"https://redirect.github.com/apache/arrow/issues/38608\">#38608</a>)</li>\n<li><a href=\"https://github.com/apache/arrow/commit/5a37e741987e4cba41dfdad2331a308c95b62083\"><code>5a37e74</code></a> <a href=\"https://redirect.github.com/apache/arrow/issues/38431\">GH-38431</a>: [Python][CI] Update fs.type_name checks for s3fs tests (<a href=\"https://redirect.github.com/apache/arrow/issues/38455\">#38455</a>)</li>\n<li><a href=\"https://github.com/apache/arrow/commit/2dcee3f82c6cf54b53a64729fd81840efa583244\"><code>2dcee3f</code></a> MINOR: [Release] Update versions for 14.0.0</li>\n<li><a href=\"https://github.com/apache/arrow/commit/297428cbf2fc84a224654eb0b336614e6543d1aa\"><code>297428c</code></a> MINOR: [Release] Update .deb/.rpm changelogs for 14.0.0</li>\n<li><a href=\"https://github.com/apache/arrow/commit/3e9734f8830797fe09b883f00d349116d95c51f9\"><code>3e9734f</code></a> MINOR: [Release] Update CHANGELOG.md for 14.0.0</li>\n<li><a href=\"https://github.com/apache/arrow/commit/9f90995c8cee0d9906349f421f2445ab9adcb7ac\"><code>9f90995</code></a> <a href=\"https://redirect.github.com/apache/arrow/issues/38332\">GH-38332</a>: [CI][Release] Resolve symlinks in RAT lint (<a href=\"https://redirect.github.com/apache/arrow/issues/38337\">#38337</a>)</li>\n<li><a href=\"https://github.com/apache/arrow/commit/bd61239a32c94e37b9510071c0ffacad455798c0\"><code>bd61239</code></a> <a href=\"https://redirect.github.com/apache/arrow/issues/35531\">GH-35531</a>: [Python] C Data Interface PyCapsule Protocol (<a href=\"https://redirect.github.com/apache/arrow/issues/37797\">#37797</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/apache/arrow/compare/go/v13.0.0...go/v14.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pyarrow&package-manager=pip&previous-version=13.0.0&new-version=14.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/langchain-ai/langchain/network/alerts).\n\n</details>",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13363/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13363/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13362",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13362/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13362/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13362/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13362",
        "id": 1993378373,
        "node_id": "PR_kwDOIPDwls5fcdPo",
        "number": 13362,
        "title": "Update `templates/rag-self-query` with newer dependencies without CVEs.",
        "user": {
            "login": "obi1kenobi",
            "id": 2348618,
            "node_id": "MDQ6VXNlcjIzNDg2MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2348618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/obi1kenobi",
            "html_url": "https://github.com/obi1kenobi",
            "followers_url": "https://api.github.com/users/obi1kenobi/followers",
            "following_url": "https://api.github.com/users/obi1kenobi/following{/other_user}",
            "gists_url": "https://api.github.com/users/obi1kenobi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/obi1kenobi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/obi1kenobi/subscriptions",
            "organizations_url": "https://api.github.com/users/obi1kenobi/orgs",
            "repos_url": "https://api.github.com/users/obi1kenobi/repos",
            "events_url": "https://api.github.com/users/obi1kenobi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/obi1kenobi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T19:03:53Z",
        "updated_at": "2023-11-15T03:06:19Z",
        "closed_at": "2023-11-15T03:06:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13362",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13362",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13362.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13362.patch",
            "merged_at": "2023-11-15T03:06:18Z"
        },
        "body": "The `langchain` repo was being flagged for using vulnerable dependencies, some of which were in this template's lockfile. Updating to newer versions should fix that.\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13362/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13362/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13361",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13361/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13361/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13361/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13361",
        "id": 1993370326,
        "node_id": "I_kwDOIPDwls520GrW",
        "number": 13361,
        "title": "CosmosDBHistoryMessage",
        "user": {
            "login": "PrasenjitGiri",
            "id": 1888535,
            "node_id": "MDQ6VXNlcjE4ODg1MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1888535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PrasenjitGiri",
            "html_url": "https://github.com/PrasenjitGiri",
            "followers_url": "https://api.github.com/users/PrasenjitGiri/followers",
            "following_url": "https://api.github.com/users/PrasenjitGiri/following{/other_user}",
            "gists_url": "https://api.github.com/users/PrasenjitGiri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PrasenjitGiri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PrasenjitGiri/subscriptions",
            "organizations_url": "https://api.github.com/users/PrasenjitGiri/orgs",
            "repos_url": "https://api.github.com/users/PrasenjitGiri/repos",
            "events_url": "https://api.github.com/users/PrasenjitGiri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PrasenjitGiri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-14T18:58:13Z",
        "updated_at": "2023-11-14T19:55:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nCosmosDBHistory messages are wiping out the session of each run. \r\nNeed the library to not recreate the object for the same session or else this cannot be used as chatbot which is stateless\r\n\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [X] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n`import os\r\nfrom time import perf_counter\r\n\r\nfrom langchain.chat_models import AzureChatOpenAI\r\nfrom langchain.memory.chat_message_histories import CosmosDBChatMessageHistory\r\nfrom langchain.schema import (\r\n    SystemMessage,\r\n    HumanMessage\r\n)\r\n\r\nfrom logger_setup import logger\r\n\r\n\r\n\r\nllm = AzureChatOpenAI(\r\n    deployment_name=os.getenv('OPENAI_GPT4_DEPLOYMENT_NAME'),\r\n    model=os.getenv('OPENAI_GPT4_MODEL_NAME')\r\n)\r\n\r\n\r\n\r\ncosmos_history = CosmosDBChatMessageHistory(\r\n    cosmos_endpoint=os.getenv('AZ_COSMOS_ENDPOINT'),\r\n    cosmos_database=os.getenv('AZ_COSMOS_DATABASE'),\r\n    cosmos_container=os.getenv('AZ_COSMOS_CONTAINER'),\r\n    session_id='1234',\r\n    user_id='user001',\r\n    connection_string=os.getenv('AZ_COSMOS_CS')\r\n)\r\n\r\n\r\n# cosmos_history.prepare_cosmos()\r\n\r\n\r\nsys_msg = SystemMessage(content='You are a helpful bot that can run various SQL queries')\r\n# cosmos_history.add_message(sys_msg)\r\n\r\nhuman_msg = HumanMessage(content='Can you tell me how things are done in database')\r\ncosmos_history.add_message(human_msg)\r\n\r\n\r\n\r\nmessages = []\r\n\r\nmessages.append(sys_msg)\r\nmessages.append(human_msg)\r\n\r\nstart_time = perf_counter()\r\nresponse = llm.predict_messages(messages=messages)\r\nend_time = perf_counter()\r\n\r\nlogger.info('Total time taken %d s', (end_time - start_time))\r\n\r\nprint(response)\r\n\r\nmessages.append(response)\r\n\r\ncosmos_history.add_message(response)\r\n\r\n`\r\n\r\n### Expected behavior\r\n\r\nNeed this to save it for each subsequent web service calls with the same session id\r\n\r\n\r\nAlso this code does not retrieve data \r\ntry:\r\n    logger.info(f\"Reading item with session_id: {self.session_id}, user_id: {self.user_id}\")\r\n    item = self._container.read_item(\r\n        item=self.session_id,\r\n        partition_key=self.user_id\r\n    )\r\nexcept CosmosHttpResponseError as ex:\r\n    logger.error(f\"Error reading item from CosmosDB: {ex}\")\r\n    return\r\n\r\n\r\nBut using sql does\r\nquery = f\"SELECT * FROM c WHERE c.id = '{self.session_id}' AND c.user_id = '{self.user_id}'\"\r\nitems = list(self._container.query_items(query, enable_cross_partition_query=True))\r\n\r\nif items:\r\n    item = items[0]\r\n    # Continue with reading the item\r\nelse:\r\n    logger.info(\"Item not found in CosmosDB\")\r\n    return\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13361/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13361/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13360",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13360/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13360/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13360/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13360",
        "id": 1993321369,
        "node_id": "PR_kwDOIPDwls5fcQnc",
        "number": 13360,
        "title": "more cli interactivity, bugfix",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-14T18:31:48Z",
        "updated_at": "2023-11-14T22:49:45Z",
        "closed_at": "2023-11-14T22:49:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13360",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13360",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13360.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13360.patch",
            "merged_at": "2023-11-14T22:49:44Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13360/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13360/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13359",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13359/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13359/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13359/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13359",
        "id": 1993261292,
        "node_id": "PR_kwDOIPDwls5fcDiI",
        "number": 13359,
        "title": "cli 0.0.17",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T17:55:05Z",
        "updated_at": "2023-11-14T17:56:19Z",
        "closed_at": "2023-11-14T17:56:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13359",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13359",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13359.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13359.patch",
            "merged_at": "2023-11-14T17:56:18Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13359/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13359/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13358",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13358/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13358/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13358/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13358",
        "id": 1993245921,
        "node_id": "PR_kwDOIPDwls5fcAMy",
        "number": 13358,
        "title": "Add some properties to NotionDBLoader",
        "user": {
            "login": "kenta-takeuchi",
            "id": 49678973,
            "node_id": "MDQ6VXNlcjQ5Njc4OTcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/49678973?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kenta-takeuchi",
            "html_url": "https://github.com/kenta-takeuchi",
            "followers_url": "https://api.github.com/users/kenta-takeuchi/followers",
            "following_url": "https://api.github.com/users/kenta-takeuchi/following{/other_user}",
            "gists_url": "https://api.github.com/users/kenta-takeuchi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kenta-takeuchi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kenta-takeuchi/subscriptions",
            "organizations_url": "https://api.github.com/users/kenta-takeuchi/orgs",
            "repos_url": "https://api.github.com/users/kenta-takeuchi/repos",
            "events_url": "https://api.github.com/users/kenta-takeuchi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kenta-takeuchi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-14T17:46:08Z",
        "updated_at": "2023-11-15T20:33:05Z",
        "closed_at": "2023-11-15T04:31:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13358",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13358",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13358.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13358.patch",
            "merged_at": "2023-11-15T04:31:12Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n\r\nfix #13356\r\n\r\nAdd supports following properties for metadata to NotionDBLoader.\r\n\r\n- `checkbox`\r\n- `email`\r\n- `number`\r\n- `select`\r\n\r\nThere are no relevant tests for this code to be updated.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13358/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13358/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13357",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13357/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13357/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13357/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13357",
        "id": 1993219817,
        "node_id": "PR_kwDOIPDwls5fb6jv",
        "number": 13357,
        "title": "Bagatur/rm return direct error",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T17:31:10Z",
        "updated_at": "2023-11-15T22:00:24Z",
        "closed_at": "2023-11-15T22:00:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13357",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13357",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13357.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13357.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13357/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13357/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13356",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13356/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13356/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13356/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13356",
        "id": 1993198924,
        "node_id": "I_kwDOIPDwls52zc1M",
        "number": 13356,
        "title": "Issue: Notion DB loader for doesn't supports some properties ",
        "user": {
            "login": "kenta-takeuchi",
            "id": 49678973,
            "node_id": "MDQ6VXNlcjQ5Njc4OTcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/49678973?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kenta-takeuchi",
            "html_url": "https://github.com/kenta-takeuchi",
            "followers_url": "https://api.github.com/users/kenta-takeuchi/followers",
            "following_url": "https://api.github.com/users/kenta-takeuchi/following{/other_user}",
            "gists_url": "https://api.github.com/users/kenta-takeuchi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kenta-takeuchi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kenta-takeuchi/subscriptions",
            "organizations_url": "https://api.github.com/users/kenta-takeuchi/orgs",
            "repos_url": "https://api.github.com/users/kenta-takeuchi/repos",
            "events_url": "https://api.github.com/users/kenta-takeuchi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kenta-takeuchi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-14T17:20:22Z",
        "updated_at": "2023-11-15T04:31:13Z",
        "closed_at": "2023-11-15T04:31:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nnotion page properties\r\nhttps://developers.notion.com/reference/page-property-values\r\n\r\nCurrent version Notion DB loader for  doesn't supports following properties for metadata\r\n\r\n- `checkbox`\r\n- `email`\r\n- `number`\r\n- `select`\r\n\r\n### Suggestion:\r\n\r\nI would like to make a PR to fix this issue if it's okay.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13356/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13356/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13355",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13355/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13355/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13355/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13355",
        "id": 1993157924,
        "node_id": "PR_kwDOIPDwls5fbtAa",
        "number": 13355,
        "title": "Fix latest message index",
        "user": {
            "login": "billytrend-cohere",
            "id": 144115527,
            "node_id": "U_kgDOCJcHRw",
            "avatar_url": "https://avatars.githubusercontent.com/u/144115527?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/billytrend-cohere",
            "html_url": "https://github.com/billytrend-cohere",
            "followers_url": "https://api.github.com/users/billytrend-cohere/followers",
            "following_url": "https://api.github.com/users/billytrend-cohere/following{/other_user}",
            "gists_url": "https://api.github.com/users/billytrend-cohere/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/billytrend-cohere/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/billytrend-cohere/subscriptions",
            "organizations_url": "https://api.github.com/users/billytrend-cohere/orgs",
            "repos_url": "https://api.github.com/users/billytrend-cohere/repos",
            "events_url": "https://api.github.com/users/billytrend-cohere/events{/privacy}",
            "received_events_url": "https://api.github.com/users/billytrend-cohere/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T16:57:27Z",
        "updated_at": "2023-11-14T17:23:26Z",
        "closed_at": "2023-11-14T17:23:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13355",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13355",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13355.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13355.patch",
            "merged_at": "2023-11-14T17:23:25Z"
        },
        "body": "There is a bug which caused the earliest message rather than the latest message being sent",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13355/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13355/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13353",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13353/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13353/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13353/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13353",
        "id": 1993121484,
        "node_id": "PR_kwDOIPDwls5fblPF",
        "number": 13353,
        "title": "AsyncHtmlLoader update due to fetching errors in not available webpages",
        "user": {
            "login": "pedro-inf-custodio",
            "id": 113921389,
            "node_id": "U_kgDOBspNbQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/113921389?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pedro-inf-custodio",
            "html_url": "https://github.com/pedro-inf-custodio",
            "followers_url": "https://api.github.com/users/pedro-inf-custodio/followers",
            "following_url": "https://api.github.com/users/pedro-inf-custodio/following{/other_user}",
            "gists_url": "https://api.github.com/users/pedro-inf-custodio/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pedro-inf-custodio/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pedro-inf-custodio/subscriptions",
            "organizations_url": "https://api.github.com/users/pedro-inf-custodio/orgs",
            "repos_url": "https://api.github.com/users/pedro-inf-custodio/repos",
            "events_url": "https://api.github.com/users/pedro-inf-custodio/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pedro-inf-custodio/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-14T16:37:48Z",
        "updated_at": "2023-11-15T04:27:03Z",
        "closed_at": "2023-11-15T04:27:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13353",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13353",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13353.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13353.patch",
            "merged_at": null
        },
        "body": "  - **Description:** When running the `qa_chain` with the `WebResearchRetriever` class as a retriever, the code would throw an error even with other possible/valid sources. This would happen when there was no access/connection to an URL.\r\n  - **Issue:** None,\r\n  - **Dependencies:** None,\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13353/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13353/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13352",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13352/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13352/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13352/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13352",
        "id": 1993038152,
        "node_id": "PR_kwDOIPDwls5fbTEq",
        "number": 13352,
        "title": "Pass filters and other search_kwargs through retrieval chain at query time (#9195)",
        "user": {
            "login": "christopherwerner",
            "id": 149627707,
            "node_id": "U_kgDOCOsjOw",
            "avatar_url": "https://avatars.githubusercontent.com/u/149627707?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christopherwerner",
            "html_url": "https://github.com/christopherwerner",
            "followers_url": "https://api.github.com/users/christopherwerner/followers",
            "following_url": "https://api.github.com/users/christopherwerner/following{/other_user}",
            "gists_url": "https://api.github.com/users/christopherwerner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christopherwerner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christopherwerner/subscriptions",
            "organizations_url": "https://api.github.com/users/christopherwerner/orgs",
            "repos_url": "https://api.github.com/users/christopherwerner/repos",
            "events_url": "https://api.github.com/users/christopherwerner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christopherwerner/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-14T15:56:12Z",
        "updated_at": "2023-12-09T20:56:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13352",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13352",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13352.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13352.patch",
            "merged_at": null
        },
        "body": "**Description:**\r\n\r\nAdds the ability to pass filters and other search_kwargs to a vector store when *calling* a conversational retriever . (#9195)\r\n\r\nExisting functionality allows setting the search_kwargs only when *constructing* the retriever - which limits the ability to create a single retriever then alter filters during chat sessions.\r\n\r\nMy use case (backed by the others in the Issue) is to be able to ingest documents into a vector database with different 'tags', then during a long-running RAG0-based chat session, specify the tags to filter ingested documents on with each question.\r\n\r\nThe existing support for search_kwargs is still useful - args like 'k', the number of results, are likely to be definitely determined at construction time. Hence this fix *merges* the search_kwargs provided with the query with any that were set during construction. That is: query-time values *override* construction-time values, but only those with the same key. Hence you can set 'k', 'score_threshold', etc, during construction, then pass in a custom 'filter' with the query. \r\n\r\nQuery-time search_kwargs are provided in the `inputs` parameter, but are not listed in the input_keys, since they are not mandatory. This preserves compatibility, and makes sense, given the search_kwargs, very much are inputs.\r\n\r\nThe documentation is updated with an example on the vector_db_qa.mdx page.\r\n\r\n\r\nDetails on the rationale behind this PR:\r\n\r\n1. Many of the vector store implementations take \u201cfilter\u201d as a parameter in their similarity_search (chroma, elastic, pgvector, open_search), and some, like weaviate, take more complex kwargs, accepting in them \u201cwhere_filter\u201d.\r\n We need a way to pass down arguments for these parameters from the original __call__ method on the base chain, in such a way as they get to - and only to - the vector stores that can use them.\r\n\r\n2. The generic VectorStoreRetriever has a search_kwargs field (Pydantic) that is intended to hold just this sort of parameter, and passes it into similarty_search() (and other search methods). But is limited in that it can only be set when the VectorRetriever is constructed.  \r\n\r\n3. The abstract BaseRetriever._get_relevant_documents doesn\u2019t take extra args, but BaseRetriever allows for the concrete implementations in different retrievers to have extra args (which only just slightly freaks me out as an old OO Java programmer :)). BaseRetriever detects this and sets _expects_other_args to True which causes it to pass on kwargs from its get_relevant_documents() method to the specific retrievers _get_relevant_documents implementation. \r\n\r\nSo\u2026 to get our filter down where it\u2019s needed, we need to get it in a more dynamic search_kwargs dictionary, and get that merged with the one passed in from VectorStoreRetriever, without interfering with the base retriever.\r\n\r\nFor this we need one change to VectoreStoreRetriever:\r\n- add a search_kwargs dictionary to its _get_relevant_documents method\r\n- merge that with the base search kwargs (dictionary update - to override, treating the construction-time search_kwargs as defaults\r\n\r\nWe have to change one more class though, to get the search_kwargs into the get_relevant_documents incoming kwargs parameter: we can do that in ConversationalRetrievalChain._get_docs which currently does not call it with any kwargs. But  _get_docs just happens to get the inputs dictionary from which history and question are taken, which is passed in from the original __call__. Hence we:\r\n- Modifiy ConversationalRetrievalChain._get_docs to retrieve the search_kwargs, if there are any, from the inputs[] list and add them to the kwargs going into get_relevant_documents\r\n\r\nSo, we can put search_kwargs in inputs- because they are just as much inputs as the question and chat_history, then we can extract them in _get_docs and pass them into  get_relevant_documents, and we get them where they need to go with only two changes.\r\n\r\nThe modifications needed for base retrievers is slightly different, but similar enough.\r\n\r\n**Issue:**\r\nPassing filter through ConversationalRetrievalChain to the underlying vector store  #9195\r\n\r\n\r\n**Tag maintainer:** @baskaryan ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13352/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13352/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13351",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13351/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13351/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13351/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13351",
        "id": 1993012205,
        "node_id": "I_kwDOIPDwls52yvPt",
        "number": 13351,
        "title": "Ability to suppress warning when supplying a \"not default parameter\" to OpenAI Chat Models",
        "user": {
            "login": "alberduris",
            "id": 7073086,
            "node_id": "MDQ6VXNlcjcwNzMwODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7073086?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alberduris",
            "html_url": "https://github.com/alberduris",
            "followers_url": "https://api.github.com/users/alberduris/followers",
            "following_url": "https://api.github.com/users/alberduris/following{/other_user}",
            "gists_url": "https://api.github.com/users/alberduris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alberduris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alberduris/subscriptions",
            "organizations_url": "https://api.github.com/users/alberduris/orgs",
            "repos_url": "https://api.github.com/users/alberduris/repos",
            "events_url": "https://api.github.com/users/alberduris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alberduris/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T15:43:35Z",
        "updated_at": "2023-11-14T15:43:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nSupplying a not default parameter to a model is not something that will require always showing a warning. It should be easy to suppress that specific warning. \r\n\r\n### Motivation\r\n\r\nThe logging gets full of those warnings just because you are supplying not default parameters such as \"top_p\", \"frequency_penalty\" or \"presence_penalty\". ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13351/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13351/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13350",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13350/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13350/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13350/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13350",
        "id": 1992890310,
        "node_id": "PR_kwDOIPDwls5fayuF",
        "number": 13350,
        "title": "Bump all libraries to the latest `ruff` version.",
        "user": {
            "login": "obi1kenobi",
            "id": 2348618,
            "node_id": "MDQ6VXNlcjIzNDg2MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2348618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/obi1kenobi",
            "html_url": "https://github.com/obi1kenobi",
            "followers_url": "https://api.github.com/users/obi1kenobi/followers",
            "following_url": "https://api.github.com/users/obi1kenobi/following{/other_user}",
            "gists_url": "https://api.github.com/users/obi1kenobi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/obi1kenobi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/obi1kenobi/subscriptions",
            "organizations_url": "https://api.github.com/users/obi1kenobi/orgs",
            "repos_url": "https://api.github.com/users/obi1kenobi/repos",
            "events_url": "https://api.github.com/users/obi1kenobi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/obi1kenobi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T14:43:25Z",
        "updated_at": "2023-11-14T21:00:22Z",
        "closed_at": "2023-11-14T21:00:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13350",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13350",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13350.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13350.patch",
            "merged_at": "2023-11-14T21:00:21Z"
        },
        "body": "This version of `ruff` is the one we'll be using to lint the docs and cookbooks (#12677), so I'm making it used everywhere else too.\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13350/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13350/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13349",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13349/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13349/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13349/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13349",
        "id": 1992791286,
        "node_id": "I_kwDOIPDwls52x5T2",
        "number": 13349,
        "title": "Issue: <Please write a comprehensive title after the 'Issue: ' prefix>",
        "user": {
            "login": "Saulti23",
            "id": 68811412,
            "node_id": "MDQ6VXNlcjY4ODExNDEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/68811412?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Saulti23",
            "html_url": "https://github.com/Saulti23",
            "followers_url": "https://api.github.com/users/Saulti23/followers",
            "following_url": "https://api.github.com/users/Saulti23/following{/other_user}",
            "gists_url": "https://api.github.com/users/Saulti23/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Saulti23/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Saulti23/subscriptions",
            "organizations_url": "https://api.github.com/users/Saulti23/orgs",
            "repos_url": "https://api.github.com/users/Saulti23/repos",
            "events_url": "https://api.github.com/users/Saulti23/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Saulti23/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-14T13:53:39Z",
        "updated_at": "2023-11-14T14:32:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI have my code and for the first section of it I am inputting a memory key based in the session_id as a UUID\r\nI am receiving the following error: Any idea what the issue is?\r\n\r\n> Traceback (most recent call last):\r\n>   File \"/Users/habuhassan004/Desktop/VIK/10x-csv-chat/llm.py\", line 62, in <module>\r\n>     print(chat_csv(session_id,None,'Hi how are you?'))\r\n>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n>   File \"/Users/habuhassan004/Desktop/VIK/10x-csv-chat/llm.py\", line 37, in chat_csv\r\n>     response = conversation({\"question\": question})\r\n>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n>   File \"/Users/habuhassan004/Desktop/VIK/10x-csv-chat/venv/lib/python3.11/site-packages/langchain/chains/base.py\", line 286, in __call__\r\n>     inputs = self.prep_inputs(inputs)\r\n>              ^^^^^^^^^^^^^^^^^^^^^^^^\r\n>   File \"/Users/habuhassan004/Desktop/VIK/10x-csv-chat/venv/lib/python3.11/site-packages/langchain/chains/base.py\", line 443, in prep_inputs\r\n>     self._validate_inputs(inputs)\r\n>   File \"/Users/habuhassan004/Desktop/VIK/10x-csv-chat/venv/lib/python3.11/site-packages/langchain/chains/base.py\", line 195, in _validate_inputs\r\n>     raise ValueError(f\"Missing some input keys: {missing_keys}\")\r\n> ValueError: Missing some input keys: {'session_id'}\r\n\r\nhere is the input:\r\n`session_id = uuid.uuid4()\r\nprint(chat_csv(session_id,None,'Hi how are you?'))`\r\n\r\nHere is the code:\r\n```\r\ndef chat_csv(\r\n    session_id: UUID = None,\r\n    file_path: str = None,\r\n    question: str = None\r\n):\r\n    # session_id = str(session_id)\r\n    memory = ConversationBufferMemory(\r\n        memory_key=str(session_id),\r\n        return_messages=True\r\n    )\r\n    if file_path == None:\r\n        template = \"\"\"You are a nice chatbot having a conversation with a human.\r\n            Previous conversation:\r\n            {session_id}\r\n\r\n            New human question: {question}\r\n            Response:\"\"\"\r\n        prompt = PromptTemplate.from_template(template)\r\n        conversation = LLMChain(\r\n            llm=OpenAI(temperature=0),\r\n            prompt=prompt,\r\n            verbose=False,\r\n            memory=memory\r\n        )\r\n        response = conversation({\"question\": question})\r\n```\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13349/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13349/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13347",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13347/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13347/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13347/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13347",
        "id": 1992568356,
        "node_id": "PR_kwDOIPDwls5fZsuz",
        "number": 13347,
        "title": "Fix lintand errors",
        "user": {
            "login": "AnasKhan0607",
            "id": 76663779,
            "node_id": "MDQ6VXNlcjc2NjYzNzc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/76663779?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AnasKhan0607",
            "html_url": "https://github.com/AnasKhan0607",
            "followers_url": "https://api.github.com/users/AnasKhan0607/followers",
            "following_url": "https://api.github.com/users/AnasKhan0607/following{/other_user}",
            "gists_url": "https://api.github.com/users/AnasKhan0607/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AnasKhan0607/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AnasKhan0607/subscriptions",
            "organizations_url": "https://api.github.com/users/AnasKhan0607/orgs",
            "repos_url": "https://api.github.com/users/AnasKhan0607/repos",
            "events_url": "https://api.github.com/users/AnasKhan0607/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AnasKhan0607/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T11:37:51Z",
        "updated_at": "2023-11-14T11:39:04Z",
        "closed_at": "2023-11-14T11:38:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13347",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13347",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13347.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13347.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13347/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13347/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13346",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13346/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13346/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13346/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13346",
        "id": 1992565123,
        "node_id": "PR_kwDOIPDwls5fZsBb",
        "number": 13346,
        "title": "Make it easier to subclass RunnableEach",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T11:35:38Z",
        "updated_at": "2023-11-15T13:12:58Z",
        "closed_at": "2023-11-15T13:12:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13346",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13346",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13346.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13346.patch",
            "merged_at": "2023-11-15T13:12:57Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13346/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13346/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13344",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13344/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13344/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13344/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13344",
        "id": 1992514531,
        "node_id": "I_kwDOIPDwls52w1vj",
        "number": 13344,
        "title": "Issue: <Please write a comprehensive title after the 'Issue: ' prefix>",
        "user": {
            "login": "zhangleinice",
            "id": 33247284,
            "node_id": "MDQ6VXNlcjMzMjQ3Mjg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/33247284?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhangleinice",
            "html_url": "https://github.com/zhangleinice",
            "followers_url": "https://api.github.com/users/zhangleinice/followers",
            "following_url": "https://api.github.com/users/zhangleinice/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhangleinice/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhangleinice/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhangleinice/subscriptions",
            "organizations_url": "https://api.github.com/users/zhangleinice/orgs",
            "repos_url": "https://api.github.com/users/zhangleinice/repos",
            "events_url": "https://api.github.com/users/zhangleinice/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhangleinice/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-14T11:02:21Z",
        "updated_at": "2023-11-14T11:29:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n```\r\nllm = ChatOpenAI(\r\n    openai_api_key= os.environ[\"OPENAI_API_KEY\"],\r\n    temperature=0, \r\n    streaming=True, \r\n    callbacks=[AsyncIteratorCallbackHandler()]\r\n)\r\nembeddings = OpenAIEmbeddings()\r\n\r\nloader = TextLoader(\"static/faq/ecommerce_faq.txt\")\r\ndocuments = loader.load()\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\ntexts = text_splitter.split_documents(documents)\r\n\r\ndocsearch = Chroma.from_documents(texts, embeddings)\r\n\r\nfaq_chain = RetrievalQA.from_chain_type(\r\n    llm, \r\n    chain_type=\"stuff\", \r\n    retriever=docsearch.as_retriever(),\r\n)\r\n\r\nasync def call_openai(question):\r\n\r\n    callback = AsyncIteratorCallbackHandler()\r\n\r\n    # coroutine = wait_done(model.agenerate(messages=[[HumanMessage(content=question)]]), callback.done)\r\n\r\n    coroutine = wait_done(faq_chain.arun(question), callback.done)\r\n\r\n    task = asyncio.create_task(coroutine)\r\n\r\n    async for token in callback.aiter():\r\n        print('token', token)\r\n        yield f\"data: {token}\\n\\n\"\r\n\r\n    await task\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/\")\r\nasync def homepage():\r\n    return FileResponse('static/index.html')\r\n\r\n@app.post(\"/ask\")\r\ndef ask(body: dict):\r\n    return StreamingResponse(call_openai(body['question']), media_type=\"text/event-stream\")\r\n\r\nif __name__ == \"__main__\":\r\n   uvicorn.run(host=\"127.0.0.1\", port=8888, app=app)\r\n\r\n```\r\nI can run it normally using model.agenerate, but it cannot run after using faq_chain.arun. what is the reason for this?\r\n\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13344/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13344/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13343",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13343/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13343/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13343/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13343",
        "id": 1992482519,
        "node_id": "I_kwDOIPDwls52wt7X",
        "number": 13343,
        "title": "autoawq for vllm",
        "user": {
            "login": "drewskidang",
            "id": 120294157,
            "node_id": "U_kgDOByuLDQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/120294157?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/drewskidang",
            "html_url": "https://github.com/drewskidang",
            "followers_url": "https://api.github.com/users/drewskidang/followers",
            "following_url": "https://api.github.com/users/drewskidang/following{/other_user}",
            "gists_url": "https://api.github.com/users/drewskidang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/drewskidang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/drewskidang/subscriptions",
            "organizations_url": "https://api.github.com/users/drewskidang/orgs",
            "repos_url": "https://api.github.com/users/drewskidang/repos",
            "events_url": "https://api.github.com/users/drewskidang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/drewskidang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-14T10:47:09Z",
        "updated_at": "2023-11-26T19:17:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nIs there a way to autoawq support for vllm, Im 'setting quantization to 'awq' but its not working\n\n### Motivation\n\nfaster inference\n\n### Your contribution\n\nN/A",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13343/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13343/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13342",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13342/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13342/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13342/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13342",
        "id": 1992439429,
        "node_id": "I_kwDOIPDwls52wjaF",
        "number": 13342,
        "title": "PowerPoint loader crashing",
        "user": {
            "login": "Ricu",
            "id": 856534,
            "node_id": "MDQ6VXNlcjg1NjUzNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856534?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ricu",
            "html_url": "https://github.com/Ricu",
            "followers_url": "https://api.github.com/users/Ricu/followers",
            "following_url": "https://api.github.com/users/Ricu/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ricu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ricu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ricu/subscriptions",
            "organizations_url": "https://api.github.com/users/Ricu/orgs",
            "repos_url": "https://api.github.com/users/Ricu/repos",
            "events_url": "https://api.github.com/users/Ricu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ricu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-11-14T10:24:09Z",
        "updated_at": "2023-11-19T15:48:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain Version: 0.0.335\r\nPlatform: Windows 10\r\nPython Version = 3.11.3\r\nIDE: VS Code\r\n\r\n### Who can help?\r\n\r\n@eyurtsev \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nMWE:\r\nA PowerPoint presentation named \"test.pptx\" in the same folder as the script. Content is a title slide with sample text.\r\n\r\n```python\r\nfrom langchain.document_loaders import UnstructuredPowerPointLoader\r\ndef ingest_docs():\r\n  loader= UnstructuredPowerPointLoader('test.pptx')\r\n  docs = loader.load()\r\n  return docs\r\n```\r\n\r\nI get a problem in 2/3 tested environments:\r\n\r\n1. Running the above MWE with `ingest_docs()` in a simple python script will yield no problem. The content of the PowerPoint (text on the title slide) is displayed.\r\n2. Running the above MWE in a Jupyter Notebook with `ingest_docs()` will cause the cell to run indefinetely. Trying to interrupt the kernel results in: `Interrupting the kernel timed out`. A fix is to restart the kernel.\r\n3. Running the MWE in Streamlit (see code below) will result the spawned server to die immediately. (The cmd Window simply closes)\r\n```python\r\nimport streamlit as st\r\nfrom langchain.document_loaders import UnstructuredPowerPointLoader\r\ndef ingest_docs():\r\n  [as above]\r\n\r\nst.write(ingest_docs())\r\n```\r\n\r\n### Expected behavior\r\n\r\nI expect the MWE to work the same in the Notebook and Streamlit environments just as in the simple Python script.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13342/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13342/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13340",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13340/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13340/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13340/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13340",
        "id": 1992311627,
        "node_id": "I_kwDOIPDwls52wENL",
        "number": 13340,
        "title": "Why no constructor (init function) in Langchain while pydantics are everywhere?",
        "user": {
            "login": "npuichigo",
            "id": 11533479,
            "node_id": "MDQ6VXNlcjExNTMzNDc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11533479?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/npuichigo",
            "html_url": "https://github.com/npuichigo",
            "followers_url": "https://api.github.com/users/npuichigo/followers",
            "following_url": "https://api.github.com/users/npuichigo/following{/other_user}",
            "gists_url": "https://api.github.com/users/npuichigo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/npuichigo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/npuichigo/subscriptions",
            "organizations_url": "https://api.github.com/users/npuichigo/orgs",
            "repos_url": "https://api.github.com/users/npuichigo/repos",
            "events_url": "https://api.github.com/users/npuichigo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/npuichigo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-14T09:14:09Z",
        "updated_at": "2023-11-14T09:24:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi all. Can anyone help to answer why there's no init function (constructor) for classes in LangChain, while Pydantic occurs everywhere. It seems hard for IDEs to jump to related codes. Is that one kind of anti-pattern of Python programming?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13340/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13340/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13338",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13338/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13338/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13338/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13338",
        "id": 1992217707,
        "node_id": "PR_kwDOIPDwls5fYgif",
        "number": 13338,
        "title": "add more powerfull clean html function",
        "user": {
            "login": "Nghiauet",
            "id": 63385521,
            "node_id": "MDQ6VXNlcjYzMzg1NTIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/63385521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nghiauet",
            "html_url": "https://github.com/Nghiauet",
            "followers_url": "https://api.github.com/users/Nghiauet/followers",
            "following_url": "https://api.github.com/users/Nghiauet/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nghiauet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nghiauet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nghiauet/subscriptions",
            "organizations_url": "https://api.github.com/users/Nghiauet/orgs",
            "repos_url": "https://api.github.com/users/Nghiauet/repos",
            "events_url": "https://api.github.com/users/Nghiauet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nghiauet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T08:20:44Z",
        "updated_at": "2023-12-05T11:00:19Z",
        "closed_at": "2023-12-05T11:00:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13338",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13338",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13338.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13338.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** I add a function to scape html the default transform function can't scape my webside data and this worked function , \r\n  - **Issue:** Can't scape webside data my webside [\"https://www.presight.io/privacy-policy.html\"]# it fixed\r\n  - **Dependencies:** BeautifulSoup,NavigableString from bs4 and re,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** Yes\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13338/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13338/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13336",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13336/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13336/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13336/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13336",
        "id": 1992202637,
        "node_id": "I_kwDOIPDwls52vpmN",
        "number": 13336,
        "title": "DOC: Wrong documentation link",
        "user": {
            "login": "mrddter",
            "id": 22306926,
            "node_id": "MDQ6VXNlcjIyMzA2OTI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/22306926?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrddter",
            "html_url": "https://github.com/mrddter",
            "followers_url": "https://api.github.com/users/mrddter/followers",
            "following_url": "https://api.github.com/users/mrddter/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrddter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrddter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrddter/subscriptions",
            "organizations_url": "https://api.github.com/users/mrddter/orgs",
            "repos_url": "https://api.github.com/users/mrddter/repos",
            "events_url": "https://api.github.com/users/mrddter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrddter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T08:10:40Z",
        "updated_at": "2023-11-14T08:11:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\r\n\r\nHi all, on main website [langchain.com](https://www.langchain.com/), above the folder, to the right of hero section both boxes (python and js) point to the [python docs](https://python.langchain.com/docs/get_started/introduction). \r\n\r\n### Idea or request for content:\r\n\r\nIt's better and clearer if each block points to the related lang. Of course, it's not urgent or critical :)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13336/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13336/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13335",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13335/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13335/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13335/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13335",
        "id": 1992177377,
        "node_id": "PR_kwDOIPDwls5fYYHu",
        "number": 13335,
        "title": "docs: Install langsmith from conda-forge",
        "user": {
            "login": "pavelzw",
            "id": 29506042,
            "node_id": "MDQ6VXNlcjI5NTA2MDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/29506042?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pavelzw",
            "html_url": "https://github.com/pavelzw",
            "followers_url": "https://api.github.com/users/pavelzw/followers",
            "following_url": "https://api.github.com/users/pavelzw/following{/other_user}",
            "gists_url": "https://api.github.com/users/pavelzw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pavelzw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pavelzw/subscriptions",
            "organizations_url": "https://api.github.com/users/pavelzw/orgs",
            "repos_url": "https://api.github.com/users/pavelzw/repos",
            "events_url": "https://api.github.com/users/pavelzw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pavelzw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-14T07:52:00Z",
        "updated_at": "2023-11-29T08:25:15Z",
        "closed_at": "2023-11-29T03:44:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13335",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13335",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13335.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13335.patch",
            "merged_at": "2023-11-29T03:44:03Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n\r\nlangsmith is available on conda-forge as well and also a dependency of the package so it gets installed either way by conda https://github.com/conda-forge/langchain-feedstock/blob/306ed13308c051716ced37a28962a0ac80a9aa7f/recipe/meta.yaml#L43",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13335/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13335/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13334",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13334/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13334/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13334/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13334",
        "id": 1992174212,
        "node_id": "I_kwDOIPDwls52viqE",
        "number": 13334,
        "title": "Add POST API Functionality to LangChain",
        "user": {
            "login": "mwzkhalil",
            "id": 77918472,
            "node_id": "MDQ6VXNlcjc3OTE4NDcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/77918472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mwzkhalil",
            "html_url": "https://github.com/mwzkhalil",
            "followers_url": "https://api.github.com/users/mwzkhalil/followers",
            "following_url": "https://api.github.com/users/mwzkhalil/following{/other_user}",
            "gists_url": "https://api.github.com/users/mwzkhalil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mwzkhalil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mwzkhalil/subscriptions",
            "organizations_url": "https://api.github.com/users/mwzkhalil/orgs",
            "repos_url": "https://api.github.com/users/mwzkhalil/repos",
            "events_url": "https://api.github.com/users/mwzkhalil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mwzkhalil/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-14T07:49:34Z",
        "updated_at": "2023-11-15T11:59:16Z",
        "closed_at": "2023-11-15T11:59:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nLangChain supports GET functions, but there is no support for POST functions. This feature request proposes the addition of POST API functionality to enhance the capabilities of LangChain.\n\n### Motivation\n\nThe motivation behind this feature request is to extend the capabilities of LangChain to handle not only GET requests but also POST requests. \n\n### Your contribution\n\nI am willing to contribute to the development of this feature. I will carefully follow the contributing guidelines and provide a pull request to implement the POST API functionality.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13334/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13334/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13333",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13333/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13333/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13333/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13333",
        "id": 1992069370,
        "node_id": "I_kwDOIPDwls52vJD6",
        "number": 13333,
        "title": "Issue: <How to do streaming response from Ollama??>",
        "user": {
            "login": "shawsa-artc",
            "id": 136055061,
            "node_id": "U_kgDOCBwJFQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/136055061?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shawsa-artc",
            "html_url": "https://github.com/shawsa-artc",
            "followers_url": "https://api.github.com/users/shawsa-artc/followers",
            "following_url": "https://api.github.com/users/shawsa-artc/following{/other_user}",
            "gists_url": "https://api.github.com/users/shawsa-artc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shawsa-artc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shawsa-artc/subscriptions",
            "organizations_url": "https://api.github.com/users/shawsa-artc/orgs",
            "repos_url": "https://api.github.com/users/shawsa-artc/repos",
            "events_url": "https://api.github.com/users/shawsa-artc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shawsa-artc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-14T06:21:20Z",
        "updated_at": "2023-11-15T11:30:03Z",
        "closed_at": "2023-11-15T11:30:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI couldnt find any documentation on this , please help\r\n\r\nHow can i stream the response from Ollama ?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13333/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13333/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13332",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13332/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13332/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13332/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13332",
        "id": 1992011242,
        "node_id": "I_kwDOIPDwls52u63q",
        "number": 13332,
        "title": "Reduce embeddings size",
        "user": {
            "login": "Mohit0928",
            "id": 50593567,
            "node_id": "MDQ6VXNlcjUwNTkzNTY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/50593567?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mohit0928",
            "html_url": "https://github.com/Mohit0928",
            "followers_url": "https://api.github.com/users/Mohit0928/followers",
            "following_url": "https://api.github.com/users/Mohit0928/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mohit0928/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mohit0928/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mohit0928/subscriptions",
            "organizations_url": "https://api.github.com/users/Mohit0928/orgs",
            "repos_url": "https://api.github.com/users/Mohit0928/repos",
            "events_url": "https://api.github.com/users/Mohit0928/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mohit0928/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 6077048506,
                "node_id": "LA_kwDOIPDwls8AAAABajhmug",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20elasticsearch",
                "name": "integration: elasticsearch",
                "color": "DAB5EC",
                "default": false,
                "description": "Related to elastic/elasticsearch integrations"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-14T05:19:21Z",
        "updated_at": "2023-11-14T05:26:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nI'm trying to replicate [this example](https://python.langchain.com/docs/integrations/vectorstores/elasticsearch#basic-example) of langchain. I'm using ElasticSearch as the database to store the embedding. In the given example I have replaced `embeddings = OpenAIEmbeddings()` with `embeddings = OllamaEmbeddings(model=\"llama2\")` which one can import `from langchain.embeddings import OllamaEmbeddings`. I'm running `Ollama` locally. But, I'm running into below error:\r\n```\r\nraise HTTP_EXCEPTIONS.get(status_code, TransportError)(\r\nelasticsearch.exceptions.RequestError: RequestError(400, 'mapper_parsing_exception', 'The number of dimensions for field [vector] should be in the range [1, 2048] but was [4096]')\r\n```\r\nThe Ollama model always create the embedding of size `4096` even when I set the chunk size of `500`. Is there any way to reduce the size of embedding? or is there anyway to store larger size embeddings in `ElasticSearch`\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13332/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13332/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13331",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13331/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13331/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13331/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13331",
        "id": 1991970953,
        "node_id": "PR_kwDOIPDwls5fXr8L",
        "number": 13331,
        "title": "Adding langchain vectorstore for SurrealDB",
        "user": {
            "login": "lalanikarim",
            "id": 1296705,
            "node_id": "MDQ6VXNlcjEyOTY3MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1296705?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lalanikarim",
            "html_url": "https://github.com/lalanikarim",
            "followers_url": "https://api.github.com/users/lalanikarim/followers",
            "following_url": "https://api.github.com/users/lalanikarim/following{/other_user}",
            "gists_url": "https://api.github.com/users/lalanikarim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lalanikarim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lalanikarim/subscriptions",
            "organizations_url": "https://api.github.com/users/lalanikarim/orgs",
            "repos_url": "https://api.github.com/users/lalanikarim/repos",
            "events_url": "https://api.github.com/users/lalanikarim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lalanikarim/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714130,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rkg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XL",
                "name": "size:XL",
                "color": "D4C5F9",
                "default": false,
                "description": "This PR changes 500-999 lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-11-14T04:33:09Z",
        "updated_at": "2023-12-14T13:40:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13331",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13331",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13331.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13331.patch",
            "merged_at": null
        },
        "body": "**Description:** Vectorstore implementation around [SurrealDB](https://www.surrealdb.com)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13331/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 3,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13331/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13330",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13330/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13330/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13330/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13330",
        "id": 1991966467,
        "node_id": "PR_kwDOIPDwls5fXq7h",
        "number": 13330,
        "title": "Adds OllamaFunctions wrapper",
        "user": {
            "login": "jacoblee93",
            "id": 6952323,
            "node_id": "MDQ6VXNlcjY5NTIzMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6952323?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacoblee93",
            "html_url": "https://github.com/jacoblee93",
            "followers_url": "https://api.github.com/users/jacoblee93/followers",
            "following_url": "https://api.github.com/users/jacoblee93/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacoblee93/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacoblee93/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacoblee93/subscriptions",
            "organizations_url": "https://api.github.com/users/jacoblee93/orgs",
            "repos_url": "https://api.github.com/users/jacoblee93/repos",
            "events_url": "https://api.github.com/users/jacoblee93/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacoblee93/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714130,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rkg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XL",
                "name": "size:XL",
                "color": "D4C5F9",
                "default": false,
                "description": "This PR changes 500-999 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-14T04:28:56Z",
        "updated_at": "2023-12-01T14:54:00Z",
        "closed_at": "2023-12-01T00:13:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13330",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13330",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13330.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13330.patch",
            "merged_at": "2023-12-01T00:13:57Z"
        },
        "body": "CC @baskaryan @hwchase17 @jmorganca \r\n\r\nHaving a bit of trouble importing `langchain_experimental` from a notebook, will figure it out tomorrow\r\n\r\n~Ah and also is blocked by #13226~",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13330/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13330/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13329",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13329/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13329/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13329/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13329",
        "id": 1991962266,
        "node_id": "PR_kwDOIPDwls5fXqBl",
        "number": 13329,
        "title": "arxiv retrieval agent improvement",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T04:23:01Z",
        "updated_at": "2023-11-14T04:54:04Z",
        "closed_at": "2023-11-14T04:54:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13329",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13329",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13329.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13329.patch",
            "merged_at": "2023-11-14T04:54:03Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13329/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13329/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13328",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13328/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13328/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13328/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13328",
        "id": 1991961956,
        "node_id": "PR_kwDOIPDwls5fXp9d",
        "number": 13328,
        "title": "Add missing doc key to metadata field in AzureSearch Vectorstore",
        "user": {
            "login": "finnless",
            "id": 6785029,
            "node_id": "MDQ6VXNlcjY3ODUwMjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6785029?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/finnless",
            "html_url": "https://github.com/finnless",
            "followers_url": "https://api.github.com/users/finnless/followers",
            "following_url": "https://api.github.com/users/finnless/following{/other_user}",
            "gists_url": "https://api.github.com/users/finnless/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/finnless/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/finnless/subscriptions",
            "organizations_url": "https://api.github.com/users/finnless/orgs",
            "repos_url": "https://api.github.com/users/finnless/repos",
            "events_url": "https://api.github.com/users/finnless/events{/privacy}",
            "received_events_url": "https://api.github.com/users/finnless/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-14T04:22:34Z",
        "updated_at": "2023-12-05T03:53:28Z",
        "closed_at": "2023-12-05T03:53:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13328",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13328",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13328.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13328.patch",
            "merged_at": "2023-12-05T03:53:27Z"
        },
        "body": "  - **Description:** Adds doc key to metadata field when adding document to Azure Search.\r\n  - **Issue:** -,\r\n  - **Dependencies:** -,\r\n  - **Tag maintainer:** @eyurtsev,\r\n  - **Twitter handle:** @finnless\r\n\r\nRight now the document key with the name FIELDS_ID is not included in the FIELDS_METADATA field, and therefore is not included in the Document returned from a query. This is really annoying if you want to be able to modify that item in the vectorstore.\r\n\r\nOther's thoughts on this are welcome.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13328/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13328/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13327",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13327/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13327/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13327/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13327",
        "id": 1991954639,
        "node_id": "PR_kwDOIPDwls5fXoZJ",
        "number": 13327,
        "title": "add more reasonable arxiv retriever",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T04:12:19Z",
        "updated_at": "2023-11-14T04:54:16Z",
        "closed_at": "2023-11-14T04:54:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13327",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13327",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13327.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13327.patch",
            "merged_at": "2023-11-14T04:54:15Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13327/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13327/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13326",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13326/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13326/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13326/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13326",
        "id": 1991952054,
        "node_id": "I_kwDOIPDwls52usa2",
        "number": 13326,
        "title": "Enhancing iMessageChatLoader to prevent skipping messages with extractable content",
        "user": {
            "login": "YaySushi",
            "id": 40970649,
            "node_id": "MDQ6VXNlcjQwOTcwNjQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/40970649?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YaySushi",
            "html_url": "https://github.com/YaySushi",
            "followers_url": "https://api.github.com/users/YaySushi/followers",
            "following_url": "https://api.github.com/users/YaySushi/following{/other_user}",
            "gists_url": "https://api.github.com/users/YaySushi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/YaySushi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YaySushi/subscriptions",
            "organizations_url": "https://api.github.com/users/YaySushi/orgs",
            "repos_url": "https://api.github.com/users/YaySushi/repos",
            "events_url": "https://api.github.com/users/YaySushi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/YaySushi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-14T04:08:46Z",
        "updated_at": "2023-11-28T20:45:45Z",
        "closed_at": "2023-11-28T20:45:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nImplement extraction of message content whenever iMessageChatLoader skips messages with null `text` field even though the content is present in other fields.\n\n### Motivation\n\nDue to iMessage's database schema change in its new MacOS Ventura, newer messages now have content encoded in the `attributedBody` body, with the `text` field being null.\r\n\r\nThis issue was originally raised by @idvorkin in Issue #10680.\n\n### Your contribution\n\nWe intend to submit a pull request for this issue close to the end of November.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13326/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13326/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13325",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13325/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13325/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13325/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13325",
        "id": 1991938627,
        "node_id": "I_kwDOIPDwls52upJD",
        "number": 13325,
        "title": "SQLAlchemy version",
        "user": {
            "login": "Gzxl",
            "id": 6359205,
            "node_id": "MDQ6VXNlcjYzNTkyMDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6359205?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gzxl",
            "html_url": "https://github.com/Gzxl",
            "followers_url": "https://api.github.com/users/Gzxl/followers",
            "following_url": "https://api.github.com/users/Gzxl/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gzxl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gzxl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gzxl/subscriptions",
            "organizations_url": "https://api.github.com/users/Gzxl/orgs",
            "repos_url": "https://api.github.com/users/Gzxl/repos",
            "events_url": "https://api.github.com/users/Gzxl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gzxl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-14T03:56:20Z",
        "updated_at": "2023-11-14T04:03:30Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have a web app and the SQLAlchemy is 1.x , when I use langchain which needs SQLAlchemy 2.x , it\u2018s diffcult for me to update the SQLAlchemy to 2.x\uff0chow can I fix this problem",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13325/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13325/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13324",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13324/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13324/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13324/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13324",
        "id": 1991936810,
        "node_id": "PR_kwDOIPDwls5fXkgC",
        "number": 13324,
        "title": "Update the imports for various exceptions in the ChatOpenAI class to be consistent with OpenAI API",
        "user": {
            "login": "andrei-assa",
            "id": 45412802,
            "node_id": "MDQ6VXNlcjQ1NDEyODAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/45412802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrei-assa",
            "html_url": "https://github.com/andrei-assa",
            "followers_url": "https://api.github.com/users/andrei-assa/followers",
            "following_url": "https://api.github.com/users/andrei-assa/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrei-assa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrei-assa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrei-assa/subscriptions",
            "organizations_url": "https://api.github.com/users/andrei-assa/orgs",
            "repos_url": "https://api.github.com/users/andrei-assa/repos",
            "events_url": "https://api.github.com/users/andrei-assa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrei-assa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-14T03:53:39Z",
        "updated_at": "2023-11-29T19:37:08Z",
        "closed_at": "2023-11-29T19:37:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13324",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13324",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13324.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13324.patch",
            "merged_at": null
        },
        "body": "- **Description**: Update the imports for various exceptions in the ChatOpenAI class to be consistent with OpenAI API.\r\n- **Issue**: https://github.com/langchain-ai/langchain/issues/13323,\r\n- **Dependencies**: openai==1.2.3\r\n- **Tag** maintainer: @hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13324/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13324/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13323",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13323/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13323/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13323/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13323",
        "id": 1991927961,
        "node_id": "I_kwDOIPDwls52umiZ",
        "number": 13323,
        "title": "OpenAI exception classes have different import path in openai 1.2.3, causing breaking change in ChatOpenAI - Simple fix",
        "user": {
            "login": "andrei-assa",
            "id": 45412802,
            "node_id": "MDQ6VXNlcjQ1NDEyODAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/45412802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrei-assa",
            "html_url": "https://github.com/andrei-assa",
            "followers_url": "https://api.github.com/users/andrei-assa/followers",
            "following_url": "https://api.github.com/users/andrei-assa/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrei-assa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrei-assa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrei-assa/subscriptions",
            "organizations_url": "https://api.github.com/users/andrei-assa/orgs",
            "repos_url": "https://api.github.com/users/andrei-assa/repos",
            "events_url": "https://api.github.com/users/andrei-assa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrei-assa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T03:41:42Z",
        "updated_at": "2023-11-14T14:46:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n- Langchain version: langchain==0.0.335\r\n- OpenAI version: openai==1.2.3\r\n- Platform: Darwin MacBook Pro 22.4.0 Darwin Kernel Version 22.4.0: Mon Mar  6 21:00:41 PST 2023; root:xnu-8796.101.5~3/RELEASE_ARM64_T8103 arm64\r\n- Python version: Python 3.9.6\n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nExample script:\r\n\r\n```python\r\nfrom langchain.chat_models import ChatOpenAI\r\nllm = ChatOpenAI()\r\nuser_input = input(\"Input prompt: \")\r\nresponse = llm.invoke(user_input)\r\n```\r\n\r\n```python\r\n    return self._generate(\r\n  File \"...lib/python3.9/site-packages/langchain/chat_models/openai.py\", line 360, in _generate\r\n    response = self.completion_with_retry(\r\n  File \"...lib/python3.9/site-packages/langchain/chat_models/openai.py\", line 293, in completion_with_retry\r\n    retry_decorator = _create_retry_decorator(self, run_manager=run_manager)\r\n  File \"...lib/python3.9/site-packages/langchain/chat_models/openai.py\", line 73, in _create_retry_decorator\r\n    openai.error.Timeout,\r\n\r\nException module 'openai' has no attribute 'error'\r\n```\r\n\r\nCause appears to be in `langchain.chat_models.openai`: https://github.com/langchain-ai/langchain/blob/5a920e14c06735441a9ea28c1313f8bd433dc721/libs/langchain/langchain/chat_models/openai.py#L82-L88\r\n\r\nModifying above to this appears to resolve the problem:\r\n\r\n```python\r\n  errors = [\r\n      openai.Timeout,\r\n      openai.APIError,\r\n      openai.APIConnectionError,\r\n      openai.RateLimitError,\r\n      openai.ServiceUnavailableError,\r\n]\r\n```\n\n### Expected behavior\n\nChat model invocation should return a BaseMessage.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13323/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13323/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13322",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13322/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13322/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13322/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13322",
        "id": 1991910023,
        "node_id": "PR_kwDOIPDwls5fXe4U",
        "number": 13322,
        "title": "Added llama2-13b-chat-v1 on bedrock",
        "user": {
            "login": "sungeuns",
            "id": 1274149,
            "node_id": "MDQ6VXNlcjEyNzQxNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1274149?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sungeuns",
            "html_url": "https://github.com/sungeuns",
            "followers_url": "https://api.github.com/users/sungeuns/followers",
            "following_url": "https://api.github.com/users/sungeuns/following{/other_user}",
            "gists_url": "https://api.github.com/users/sungeuns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sungeuns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sungeuns/subscriptions",
            "organizations_url": "https://api.github.com/users/sungeuns/orgs",
            "repos_url": "https://api.github.com/users/sungeuns/repos",
            "events_url": "https://api.github.com/users/sungeuns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sungeuns/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-11-14T03:21:18Z",
        "updated_at": "2023-11-29T19:42:57Z",
        "closed_at": "2023-11-29T19:42:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13322",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13322",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13322.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13322.patch",
            "merged_at": null
        },
        "body": "  - **Description:** Added `llama2-13b-chat-v1` for Bedrock client\r\n  - **Issue:** #13316\r\n  - **Dependencies:** None\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13322/reactions",
            "total_count": 12,
            "+1": 12,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13322/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13321",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13321/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13321/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13321/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13321",
        "id": 1991899347,
        "node_id": "PR_kwDOIPDwls5fXcqh",
        "number": 13321,
        "title": "Implemented MongoDB Atlas Self-Query Retriever",
        "user": {
            "login": "AthulVincent",
            "id": 90774897,
            "node_id": "MDQ6VXNlcjkwNzc0ODk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/90774897?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AthulVincent",
            "html_url": "https://github.com/AthulVincent",
            "followers_url": "https://api.github.com/users/AthulVincent/followers",
            "following_url": "https://api.github.com/users/AthulVincent/following{/other_user}",
            "gists_url": "https://api.github.com/users/AthulVincent/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AthulVincent/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AthulVincent/subscriptions",
            "organizations_url": "https://api.github.com/users/AthulVincent/orgs",
            "repos_url": "https://api.github.com/users/AthulVincent/repos",
            "events_url": "https://api.github.com/users/AthulVincent/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AthulVincent/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714130,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rkg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XL",
                "name": "size:XL",
                "color": "D4C5F9",
                "default": false,
                "description": "This PR changes 500-999 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-11-14T03:07:46Z",
        "updated_at": "2023-11-30T15:49:09Z",
        "closed_at": "2023-11-30T03:05:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13321",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13321",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13321.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13321.patch",
            "merged_at": "2023-11-30T03:05:06Z"
        },
        "body": "# Description \r\nThis PR implements Self-Query Retriever for MongoDB Atlas vector store.\r\n\r\nI've implemented the comparators and operators that are supported by MongoDB Atlas vector store according to the section titled \"Atlas Vector Search Pre-Filter\" from https://www.mongodb.com/docs/atlas/atlas-vector-search/vector-search-stage/. \r\n\r\nNamely:\r\n```\r\nallowed_comparators = [\r\n      Comparator.EQ,\r\n      Comparator.NE,\r\n      Comparator.GT,\r\n      Comparator.GTE,\r\n      Comparator.LT,\r\n      Comparator.LTE,\r\n      Comparator.IN,\r\n      Comparator.NIN,\r\n  ]\r\n\r\n\"\"\"Subset of allowed logical operators.\"\"\"\r\nallowed_operators = [\r\n    Operator.AND,\r\n    Operator.OR\r\n]\r\n```\r\nTranslations from comparators/operators to MongoDB Atlas filter operators(you can find the syntax in the \"Atlas Vector Search Pre-Filter\" section from the previous link) are done using the following dictionary:\r\n```\r\nmap_dict = {\r\n            Operator.AND: \"$and\",\r\n            Operator.OR: \"$or\",\r\n            Comparator.EQ: \"$eq\",\r\n            Comparator.NE: \"$ne\",\r\n            Comparator.GTE: \"$gte\",\r\n            Comparator.LTE: \"$lte\",\r\n            Comparator.LT: \"$lt\",\r\n            Comparator.GT: \"$gt\",\r\n            Comparator.IN: \"$in\",\r\n            Comparator.NIN: \"$nin\",\r\n        }\r\n```\r\n\r\nIn visit_structured_query() the filters are passed as \"pre_filter\" and not \"filter\" as in the MongoDB link above since langchain's implementation of MongoDB atlas vector store(libs\\langchain\\langchain\\vectorstores\\mongodb_atlas.py) in _similarity_search_with_score() sets the \"filter\" key to have the value of the \"pre_filter\" argument. \r\n```\r\nparams[\"filter\"] = pre_filter\r\n```\r\nTest cases and documentation have also been added.\r\n\r\n# Issue\r\n#11616 \r\n\r\n# Dependencies\r\nNo new dependencies have been added.\r\n\r\n# Documentation\r\nI have created the notebook mongodb_atlas_self_query.ipynb outlining the steps to get the self-query mechanism working.\r\n\r\nI worked closely with [@Farhan-Faisal](https://github.com/Farhan-Faisal) on this PR. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13321/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13321/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13320",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13320/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13320/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13320/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13320",
        "id": 1991895819,
        "node_id": "PR_kwDOIPDwls5fXb95",
        "number": 13320,
        "title": "feat: add ERNIE-Bot-4 Function Calling",
        "user": {
            "login": "wangwei1237",
            "id": 3480154,
            "node_id": "MDQ6VXNlcjM0ODAxNTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3480154?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wangwei1237",
            "html_url": "https://github.com/wangwei1237",
            "followers_url": "https://api.github.com/users/wangwei1237/followers",
            "following_url": "https://api.github.com/users/wangwei1237/following{/other_user}",
            "gists_url": "https://api.github.com/users/wangwei1237/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wangwei1237/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wangwei1237/subscriptions",
            "organizations_url": "https://api.github.com/users/wangwei1237/orgs",
            "repos_url": "https://api.github.com/users/wangwei1237/repos",
            "events_url": "https://api.github.com/users/wangwei1237/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wangwei1237/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-14T03:03:20Z",
        "updated_at": "2023-11-20T06:36:13Z",
        "closed_at": "2023-11-20T06:36:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13320",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13320",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13320.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13320.patch",
            "merged_at": "2023-11-20T06:36:12Z"
        },
        "body": "- **Description:** ERNIE-Bot-Chat-4 Large Language Model adds the ability of `Function Calling` by passing parameters through the `functions` parameter in the request. To simplify function calling for ERNIE-Bot-Chat-4, the `create_ernie_fn_chain()` function has been added. The definition and usage of the `create_ernie_fn_chain()` function is similar to that of the `create_openai_fn_chain()` function.\r\n\r\nExamples as the follows:\r\n\r\n```\r\nimport json\r\n\r\nfrom langchain.chains.ernie_functions import (\r\n    create_ernie_fn_chain,\r\n)\r\nfrom langchain.chat_models import ErnieBotChat\r\nfrom langchain.prompts import ChatPromptTemplate\r\n\r\ndef get_current_news(location: str) -> str:\r\n    \"\"\"Get the current news based on the location.'\r\n\r\n    Args:\r\n        location (str): The location to query.\r\n    \r\n    Returs:\r\n        str: Current news based on the location.\r\n    \"\"\"\r\n\r\n    news_info = {\r\n        \"location\": location,\r\n        \"news\": [\r\n            \"I have a Book.\",\r\n            \"It's a nice day, today.\"\r\n        ]\r\n    }\r\n\r\n    return json.dumps(news_info)\r\n\r\ndef get_current_weather(location: str, unit: str=\"celsius\") -> str:\r\n    \"\"\"Get the current weather in a given location\r\n\r\n    Args:\r\n        location (str): location of the weather.\r\n        unit (str): unit of the tempuature.\r\n    \r\n    Returns:\r\n        str: weather in the given location.\r\n    \"\"\"\r\n\r\n    weather_info = {\r\n        \"location\": location,\r\n        \"temperature\": \"27\",\r\n        \"unit\": unit,\r\n        \"forecast\": [\"sunny\", \"windy\"],\r\n    }\r\n    return json.dumps(weather_info)\r\n\r\nllm = ErnieBotChat(model_name=\"ERNIE-Bot-4\")\r\nprompt = ChatPromptTemplate.from_messages(\r\n    [\r\n        (\"human\", \"{query}\"),\r\n    ]\r\n)\r\n\r\nchain = create_ernie_fn_chain([get_current_weather, get_current_news], llm, prompt, verbose=True)\r\nres = chain.run(\"\u5317\u4eac\u4eca\u5929\u7684\u65b0\u95fb\u662f\u4ec0\u4e48\uff1f\")\r\nprint(res)\r\n```\r\n\r\nThe running results of the above program are shown below\uff1a\r\n```\r\n> Entering new LLMChain chain...\r\nPrompt after formatting:\r\nHuman: \u5317\u4eac\u4eca\u5929\u7684\u65b0\u95fb\u662f\u4ec0\u4e48\uff1f\r\n\r\n\r\n\r\n> Finished chain.\r\n{'name': 'get_current_news', 'thoughts': '\u7528\u6237\u60f3\u8981\u77e5\u9053\u5317\u4eac\u4eca\u5929\u7684\u65b0\u95fb\u3002\u6211\u53ef\u4ee5\u4f7f\u7528get_current_news\u5de5\u5177\u6765\u83b7\u53d6\u8fd9\u4e9b\u4fe1\u606f\u3002', 'arguments': {'location': '\u5317\u4eac'}}\r\n```\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13320/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13320/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13319",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13319/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13319/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13319/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13319",
        "id": 1991788274,
        "node_id": "PR_kwDOIPDwls5fXEb0",
        "number": 13319,
        "title": "Bagatur/update rag use case",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T01:26:20Z",
        "updated_at": "2023-11-15T18:54:16Z",
        "closed_at": "2023-11-15T18:54:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13319",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13319",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13319.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13319.patch",
            "merged_at": "2023-11-15T18:54:15Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13319/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13319/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13318",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13318/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13318/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13318/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13318",
        "id": 1991774033,
        "node_id": "PR_kwDOIPDwls5fXBP8",
        "number": 13318,
        "title": "Framework for supporting more languages in LanguageParser",
        "user": {
            "login": "ThatsJustCheesy",
            "id": 16456186,
            "node_id": "MDQ6VXNlcjE2NDU2MTg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16456186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ThatsJustCheesy",
            "html_url": "https://github.com/ThatsJustCheesy",
            "followers_url": "https://api.github.com/users/ThatsJustCheesy/followers",
            "following_url": "https://api.github.com/users/ThatsJustCheesy/following{/other_user}",
            "gists_url": "https://api.github.com/users/ThatsJustCheesy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ThatsJustCheesy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ThatsJustCheesy/subscriptions",
            "organizations_url": "https://api.github.com/users/ThatsJustCheesy/orgs",
            "repos_url": "https://api.github.com/users/ThatsJustCheesy/repos",
            "events_url": "https://api.github.com/users/ThatsJustCheesy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ThatsJustCheesy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714144,
                "node_id": "LA_kwDOIPDwls8AAAABc3-roA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XXL",
                "name": "size:XXL",
                "color": "5319E7",
                "default": false,
                "description": "This PR changes 1000+ lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-14T01:15:09Z",
        "updated_at": "2023-12-12T16:10:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13318",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13318",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13318.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13318.patch",
            "merged_at": null
        },
        "body": "## Description\r\n\r\nI am submitting this for a school project as part of a team of 5. Other team members are @LeilaChr, @maazh10, @Megabear137, @jelalalamy. This PR also has contributions from community members @Harrolee and @Mario928.\r\n\r\nInitial context is in the issue we opened (#11229).\r\n\r\nThis pull request adds:\r\n\r\n- Generic framework for expanding the languages that `LanguageParser` can handle, using the [tree-sitter](https://github.com/tree-sitter/py-tree-sitter#py-tree-sitter) parsing library and existing language-specific parsers written for it\r\n- Support for the following additional languages in `LanguageParser`:\r\n  - C\r\n  - C++\r\n  - C#\r\n  - Go\r\n  - Java (contributed by @Mario928 https://github.com/ThatsJustCheesy/langchain/pull/2)\r\n  - Kotlin\r\n  - Lua\r\n  - Perl\r\n  - Ruby\r\n  - Rust\r\n  - Scala\r\n  - TypeScript (contributed by @Harrolee https://github.com/ThatsJustCheesy/langchain/pull/1)\r\n\r\nHere is the [design document](https://docs.google.com/document/d/17dB14cKCWAaiTeSeBtxHpoVPGKrsPye8W0o_WClz2kk) if curious, but no need to read it.\r\n\r\n## Issues\r\n\r\n- Closes #11229\r\n- Closes #10996\r\n- Closes #8405\r\n\r\n## Dependencies\r\n\r\n`tree_sitter` and `tree_sitter_languages` on PyPI. We have tried to add these as optional dependencies.\r\n\r\n## Documentation\r\n\r\nWe have updated the list of supported languages, and also added a section to `source_code.ipynb` detailing how to add support for additional languages using our framework.\r\n\r\n## Maintainer\r\n\r\n- @hwchase17 (previously reviewed https://github.com/langchain-ai/langchain/pull/6486)\r\n\r\nThanks!!\r\n\r\n## Git commits\r\n\r\nWe will gladly squash any/all of our commits (esp merge commits) if necessary. Let us know if this is desirable, or if you will be squash-merging anyway.\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13318/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13318/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13317",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13317/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13317/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13317/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13317",
        "id": 1991769430,
        "node_id": "PR_kwDOIPDwls5fXAOf",
        "number": 13317,
        "title": "add retrieval agent",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T01:11:24Z",
        "updated_at": "2023-11-14T01:22:40Z",
        "closed_at": "2023-11-14T01:22:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13317",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13317",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13317.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13317.patch",
            "merged_at": "2023-11-14T01:22:39Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13317/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13317/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13316",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13316/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13316/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13316/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13316",
        "id": 1991719732,
        "node_id": "I_kwDOIPDwls52tzs0",
        "number": 13316,
        "title": "Add support for Bedrock Llama 2 13b model (meta.llama2-13b-chat-v1)",
        "user": {
            "login": "mirodrr",
            "id": 113373534,
            "node_id": "U_kgDOBsHxXg",
            "avatar_url": "https://avatars.githubusercontent.com/u/113373534?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mirodrr",
            "html_url": "https://github.com/mirodrr",
            "followers_url": "https://api.github.com/users/mirodrr/followers",
            "following_url": "https://api.github.com/users/mirodrr/following{/other_user}",
            "gists_url": "https://api.github.com/users/mirodrr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mirodrr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mirodrr/subscriptions",
            "organizations_url": "https://api.github.com/users/mirodrr/orgs",
            "repos_url": "https://api.github.com/users/mirodrr/repos",
            "events_url": "https://api.github.com/users/mirodrr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mirodrr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 5959659008,
                "node_id": "LA_kwDOIPDwls8AAAABYzkuAA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20aws",
                "name": "integration: aws",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to Amazon Web Services (AWS) integrations"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-14T00:34:45Z",
        "updated_at": "2023-11-16T11:30:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nI get following error just by adding model parameters to existing code that works with other models \r\n\r\n\"Malformed input request: 2 schema violations found, please reformat your input and try again.\"\r\n\r\n```\r\nmodel_name = \"meta.llama2-13b-chat-v1\"\r\nmodel_kwargs = {\r\n\"max_gen_len\": 512,\r\n\"temperature\": 0.2,\r\n \"top_p\": 0.9\r\n}\r\nbedrock_boto = boto3.client(\"bedrock-runtime\", \"us-east-1\")\r\nbedrock_llm = Bedrock(model_id=model_name, client=bedrock_boto,model_kwargs=model_kwargs)\r\nbedrock_llm(\"Hello!\")\r\n```\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n@agola11\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n1. Attempt to call the new llama2 bedrock model like so:\r\n\r\n```\r\nmodel_name = \"meta.llama2-13b-chat-v1\"\r\nmodel_kwargs = {\r\n\"max_gen_len\": 512,\r\n\"temperature\": 0.2,\r\n \"top_p\": 0.9\r\n}\r\nbedrock_boto = boto3.client(\"bedrock-runtime\", \"us-east-1\")\r\nbedrock_llm = Bedrock(model_id=model_name, client=bedrock_boto,model_kwargs=model_kwargs)\r\nbedrock_llm(\"Hello!\")\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe Bedrock class would work successfully as it does for other BedRock models",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13316/reactions",
            "total_count": 11,
            "+1": 11,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13316/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13315",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13315/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13315/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13315/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13315",
        "id": 1991697485,
        "node_id": "PR_kwDOIPDwls5fWwNo",
        "number": 13315,
        "title": "Runnable Context Provider",
        "user": {
            "login": "Toubat",
            "id": 57741529,
            "node_id": "MDQ6VXNlcjU3NzQxNTI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/57741529?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Toubat",
            "html_url": "https://github.com/Toubat",
            "followers_url": "https://api.github.com/users/Toubat/followers",
            "following_url": "https://api.github.com/users/Toubat/following{/other_user}",
            "gists_url": "https://api.github.com/users/Toubat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Toubat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Toubat/subscriptions",
            "organizations_url": "https://api.github.com/users/Toubat/orgs",
            "repos_url": "https://api.github.com/users/Toubat/repos",
            "events_url": "https://api.github.com/users/Toubat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Toubat/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-14T00:18:30Z",
        "updated_at": "2023-12-01T09:52:27Z",
        "closed_at": "2023-12-01T09:52:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13315",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13315",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13315.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13315.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n\r\n(Note: still WIP, would appreciate some feedback from maintainer)\r\n\r\n**Description**: This PR adds a new core Runnable component called `RunnableContextProvider`. The motivation behind this runnable is that sometimes when writing long and complex chains, developers need to pass some core piece of data across multiple stages of the chain. For example, when working with a naive RAG where the retriever retrieves context (say `List[str]` for simplicity), one common case is to pass the retrieved `context` and original `question` as part of the output (say for the sake of doing evals or other data manipulations). The original way of achieving this might look like below:\r\n```python\r\nretriever = RunnableLambda(lambda _: [\"doc 1 ...\", ..., \"doc n\"])  # mock retriever\r\n\r\nretrieval_chain =  {\r\n    \"context\": retriever,\r\n    \"question\": RunnablePassthrough(),\r\n}\r\n\r\nformat_chain = {\r\n    \"original_context\": itemgetter(\"context\"),\r\n    \"formatted_context\": itemgetter(\"context\") | RunnableLambda(lambda x: \"## Documents\" + \"\\n\\n\".join(x)),\r\n    \"question\": itemgetter(\"question\"),\r\n}\r\n\r\ngeneration_chain = {\r\n    \"result\": { \r\n        \"question\": itemgetter(\"question\"), \r\n        \"formatted_context\": itemgetter(\"formatted_context\") \r\n    } | prompt | llm,\r\n    \"context\": itemgetter(\"original_context\"),\r\n    \"question\": itemgetter(\"question\"),\r\n}\r\n\r\nrag_chain = retrieval_chain | format_chain | generation_chain\r\n```\r\nLook at how complex and unreadable the chain becomes even for a naive RAG example. Most of the complexity is due to passing extra data around, which adds lots of `itemgetter` and data `Passthrough` which should be unnecessary.\r\n\r\n`RunnableContextProvider` solves this issue by allowing data sharing across different stages of chain without having to explicitly wire up the data connection pipeline. Here's the basic API usage for implementing the same naive RAG as above:\r\n```python\r\nfrom langchain.schema.runnable import RunnableContextProvider\r\n\r\nformat_context = RunnableLambda(lambda x: \"## Documents\" + \"\\n\\n\".join(x))\r\nrag_chain = RunnableContextProvider(\r\n    lambda getter, setter: {\r\n        \"question\": RunnablePassthrough() | setter(\"question\"),\r\n        \"formatted_context\": retriever | setter(\"context\") | format_context,\r\n    }\r\n    | prompt\r\n    | llm\r\n    | {\r\n        \"result\": RunnablePassthrough(),\r\n        \"context\": getter(\"context\"),\r\n        \"question\": getter(\"question\"),\r\n    }\r\n)\r\n```\r\n- `getter`: an instance of `RunnableContextGetter`, which retrieves data from a key-value source automatically initialized in the background. It's a `Runnable` that outputs the value retrieved from the shared key-value source identified by the given key (input to `RunnableContextGetter` is ignored).\r\n- `setter`: an instance of `RunnableContextSetter`, which updates value into the shared source given the key. The value written into the key is the output from the previous piped Runnable chain. Output from `RunnableContextSetter` is connected to the output of the chain immediately before the `setter`. Therefore, in the case of\r\n```python\r\nretriever | setter(\"context\") | format_context\r\n```\r\nThe lambda `format_context` would take the output from `retriever` as its input.\r\n- batching: `batch` and `abatch` work out-of-box. Each single chain call inside the batch has a unique source. In other words, chains across different batch call do not share the same source ideally.\r\n\r\nAlso, support the decorator's pattern.\r\n```python\r\n@context_provider\r\ndef rag_chain(getter, setter):\r\n    retriever = RunnableLambda(lambda _: [\"doc 1 ...\", ..., \"doc n\"])  # mock retriever\r\n    format_context = RunnableLambda(lambda x: \"## Documents\" + \"\\n\\n\".join(x))\r\n    \r\n    return (\r\n        {\r\n            \"question\": RunnablePassthrough() | setter(\"question\"),\r\n            \"formatted_context\": retriever | setter(\"context\") | format_context,\r\n        }\r\n        | prompt\r\n        | llm\r\n        | {\r\n            \"result\": RunnablePassthrough(),\r\n            \"context\": getter(\"context\"),\r\n            \"question\": getter(\"question\"),\r\n        }\r\n    )\r\n\r\nrag_chain.invoke(...)\r\n```\r\n\r\n## Some Improvement Considerations\r\n- Allows `setter` to set multiple keys based on the same input. Potential API usage:\r\n```python\r\nretriever | setter(lambda x: {\r\n   \"list_context\": x,\r\n    \"string_context\": \"\\n\\n\".join(x),\r\n    \"context_size\": len(x)\r\n}) | format_context\r\n```\r\n- Naming: should we rename `getter` and `setter` to be `inject` and `provide` instead?\r\n- Whether we should allow each key to be set only once.\r\n- One caveat of `RunnableContextProvider` is that both `getter` and `setter` on the same key cannot appear inside the `RunnableParallel` because the order of execution is not guaranteed.\r\n\r\n**Issue**: None.\r\n**Dependencies**: None.\r\n**Tag Maintainers**: @nfcampos \r\n**Twitter handle**: [will add in the future]\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13315/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13315/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13314",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13314/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13314/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13314/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13314",
        "id": 1991678353,
        "node_id": "PR_kwDOIPDwls5fWsIk",
        "number": 13314,
        "title": "Fix typo/line break in the middle of a word",
        "user": {
            "login": "marks",
            "id": 34566,
            "node_id": "MDQ6VXNlcjM0NTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/34566?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marks",
            "html_url": "https://github.com/marks",
            "followers_url": "https://api.github.com/users/marks/followers",
            "following_url": "https://api.github.com/users/marks/following{/other_user}",
            "gists_url": "https://api.github.com/users/marks/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marks/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marks/subscriptions",
            "organizations_url": "https://api.github.com/users/marks/orgs",
            "repos_url": "https://api.github.com/users/marks/repos",
            "events_url": "https://api.github.com/users/marks/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marks/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 6154420538,
                "node_id": "LA_kwDOIPDwls8AAAABbtUBOg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/template",
                "name": "template",
                "color": "145FB1",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T23:56:32Z",
        "updated_at": "2023-11-18T00:43:43Z",
        "closed_at": "2023-11-18T00:43:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13314",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13314",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13314.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13314.patch",
            "merged_at": "2023-11-18T00:43:42Z"
        },
        "body": "  - **Description:** a simple typo/extra line break fix\r\n  - **Dependencies:** none\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13314/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13314/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13312",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13312/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13312/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13312/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13312",
        "id": 1991670210,
        "node_id": "PR_kwDOIPDwls5fWqW5",
        "number": 13312,
        "title": "IMPROVEMENT more research-assistant configurability",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T23:46:45Z",
        "updated_at": "2023-11-15T05:04:58Z",
        "closed_at": "2023-11-15T05:04:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13312",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13312",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13312.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13312.patch",
            "merged_at": "2023-11-15T05:04:57Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13312/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13312/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13311",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13311/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13311/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13311/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13311",
        "id": 1991606134,
        "node_id": "PR_kwDOIPDwls5fWciW",
        "number": 13311,
        "title": "Add a `ListRerank` document compressor",
        "user": {
            "login": "denver1117",
            "id": 32207830,
            "node_id": "MDQ6VXNlcjMyMjA3ODMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/32207830?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/denver1117",
            "html_url": "https://github.com/denver1117",
            "followers_url": "https://api.github.com/users/denver1117/followers",
            "following_url": "https://api.github.com/users/denver1117/following{/other_user}",
            "gists_url": "https://api.github.com/users/denver1117/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/denver1117/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/denver1117/subscriptions",
            "organizations_url": "https://api.github.com/users/denver1117/orgs",
            "repos_url": "https://api.github.com/users/denver1117/repos",
            "events_url": "https://api.github.com/users/denver1117/events{/privacy}",
            "received_events_url": "https://api.github.com/users/denver1117/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-13T22:41:47Z",
        "updated_at": "2023-12-05T17:05:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13311",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13311",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13311.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13311.patch",
            "merged_at": null
        },
        "body": "- **Description:** This PR adds a new document compressor called `ListRerank`. It's derived from `BaseDocumentCompressor`. It's a near exact implementation of introduced by this paper: [Zero-Shot Listwise Document Reranking with a Large Language Model](https://arxiv.org/pdf/2305.02156.pdf) which it finds to outperform pointwise reranking, which is somewhat implemented in LangChain as [LLMChainFilter](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/retrievers/document_compressors/chain_filter.py). \r\n- **Issue:** None\r\n- **Dependencies:** None\r\n- **Tag maintainer:** @hwchase17 @izzymsft\r\n- **Twitter handle:** @HarrisEMitchell\r\n\r\nNotes:\r\n1. I didn't add anything to `docs`. I wasn't exactly sure which patterns to follow as [cohere reranker is under Retrievers](https://python.langchain.com/docs/integrations/retrievers/cohere-reranker) with other external document retrieval integrations, but other contextual compression is [here](https://python.langchain.com/docs/modules/data_connection/retrievers/contextual_compression/). Happy to contribute to either with some direction.\r\n2. I followed syntax, docstrings, implementation patterns, etc. as well as I could looking at nearby modules. One thing I didn't do was put the default prompt in a separate `.py` file like [Chain Filter](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/retrievers/document_compressors/chain_filter_prompt.py) and [Chain Extract](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/retrievers/document_compressors/chain_extract_prompt.py). Happy to follow that pattern if it would be preferred. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13311/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13311/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13310",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13310/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13310/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13310/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13310",
        "id": 1991600818,
        "node_id": "PR_kwDOIPDwls5fWbZF",
        "number": 13310,
        "title": "Remove deprecated param and flexibility for prompt ",
        "user": {
            "login": "toshish",
            "id": 986859,
            "node_id": "MDQ6VXNlcjk4Njg1OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/986859?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/toshish",
            "html_url": "https://github.com/toshish",
            "followers_url": "https://api.github.com/users/toshish/followers",
            "following_url": "https://api.github.com/users/toshish/following{/other_user}",
            "gists_url": "https://api.github.com/users/toshish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/toshish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/toshish/subscriptions",
            "organizations_url": "https://api.github.com/users/toshish/orgs",
            "repos_url": "https://api.github.com/users/toshish/repos",
            "events_url": "https://api.github.com/users/toshish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/toshish/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-13T22:36:47Z",
        "updated_at": "2023-11-29T19:48:25Z",
        "closed_at": "2023-11-29T19:48:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13310",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13310",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13310.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13310.patch",
            "merged_at": "2023-11-29T19:48:25Z"
        },
        "body": "\r\n  - **Description:** Updated to remove deprecated parameter penalty_alpha, and use string variation of prompt rather than json object for better flexibility.  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** N/A\r\n  - **Tag maintainer:** @eyurtsev\r\n  - **Twitter handle:** @symbldotai\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13310/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13310/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13309",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13309/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13309/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13309/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13309",
        "id": 1991588047,
        "node_id": "I_kwDOIPDwls52tTjP",
        "number": 13309,
        "title": "Pinecone SelfQueryRetriever with datetime filter",
        "user": {
            "login": "Giselasnjota",
            "id": 130466763,
            "node_id": "U_kgDOB8bDyw",
            "avatar_url": "https://avatars.githubusercontent.com/u/130466763?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Giselasnjota",
            "html_url": "https://github.com/Giselasnjota",
            "followers_url": "https://api.github.com/users/Giselasnjota/followers",
            "following_url": "https://api.github.com/users/Giselasnjota/following{/other_user}",
            "gists_url": "https://api.github.com/users/Giselasnjota/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Giselasnjota/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Giselasnjota/subscriptions",
            "organizations_url": "https://api.github.com/users/Giselasnjota/orgs",
            "repos_url": "https://api.github.com/users/Giselasnjota/repos",
            "events_url": "https://api.github.com/users/Giselasnjota/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Giselasnjota/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5932474361,
                "node_id": "LA_kwDOIPDwls8AAAABYZpf-Q",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20pinecone",
                "name": "integration: pinecone",
                "color": "BC53BE",
                "default": false,
                "description": "Related to Pinecone vector store integration"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-13T22:25:18Z",
        "updated_at": "2023-11-13T22:25:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI wan\u00b4t to use Pinecone SelfQueryRetriever with a metadata in datetime format. When I try to ask anything with a date show the error Bad Request.\r\n\r\nI already change my class PineconeTranslator with this code with the same pattern of Scale, change the translator class. Since Pinecone just accept integer values and they ask you to use epoch format.\r\n\r\nlangchain\\retrievers\\self_query\\pinecone.py\r\nClass PineconeTranslator\r\n\r\n`    def visit_comparison(self, comparison: Comparison) -> Dict:\r\n        value = comparison.value\r\n\r\n        # convert timestamp to float as epoch format.\r\n        if type(value) is date:\r\n            value = time.mktime(value.timetuple())\r\n\r\n        return {\r\n            comparison.attribute: {\r\n                self._format_func(comparison.comparator): value\r\n            }\r\n        }`\n\n### Motivation\n\nI want to use selfretriever with pinecone and langchain the error limit the use of langchain with pinecone.\n\n### Your contribution\n\nYes, I already made the changes in my machine like the code in the description",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13309/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13309/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13308",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13308/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13308/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13308/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13308",
        "id": 1991578815,
        "node_id": "PR_kwDOIPDwls5fWWlI",
        "number": 13308,
        "title": "IMPROVEMENT format notebooks",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-13T22:17:17Z",
        "updated_at": "2023-11-13T22:29:29Z",
        "closed_at": "2023-11-13T22:21:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13308",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13308",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13308.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13308.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13308/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13308/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13307",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13307/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13307/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13307/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13307",
        "id": 1991558906,
        "node_id": "PR_kwDOIPDwls5fWSP1",
        "number": 13307,
        "title": "fix litellm openai imports",
        "user": {
            "login": "krrishdholakia",
            "id": 17561003,
            "node_id": "MDQ6VXNlcjE3NTYxMDAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/17561003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/krrishdholakia",
            "html_url": "https://github.com/krrishdholakia",
            "followers_url": "https://api.github.com/users/krrishdholakia/followers",
            "following_url": "https://api.github.com/users/krrishdholakia/following{/other_user}",
            "gists_url": "https://api.github.com/users/krrishdholakia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/krrishdholakia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/krrishdholakia/subscriptions",
            "organizations_url": "https://api.github.com/users/krrishdholakia/orgs",
            "repos_url": "https://api.github.com/users/krrishdholakia/repos",
            "events_url": "https://api.github.com/users/krrishdholakia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/krrishdholakia/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T22:02:01Z",
        "updated_at": "2023-11-14T01:55:11Z",
        "closed_at": "2023-11-14T01:55:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13307",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13307",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13307.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13307.patch",
            "merged_at": "2023-11-14T01:55:10Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\n\nReplace this entire comment with:\n  - **Description:** a description of the change, \n  - **Issue:** the issue # it fixes (if applicable),\n  - **Dependencies:** any dependencies required for this change,\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\n\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\n\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\n\nIf you're adding a new integration, please include:\n  1. a test for the integration, preferably unit tests that do not rely on network access,\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\n\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\n -->\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13307/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13307/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13306",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13306/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13306/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13306/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13306",
        "id": 1991555162,
        "node_id": "I_kwDOIPDwls52tLha",
        "number": 13306,
        "title": "Ollama LLM: Implement async functionality",
        "user": {
            "login": "valentimarco",
            "id": 26926690,
            "node_id": "MDQ6VXNlcjI2OTI2Njkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/26926690?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/valentimarco",
            "html_url": "https://github.com/valentimarco",
            "followers_url": "https://api.github.com/users/valentimarco/followers",
            "following_url": "https://api.github.com/users/valentimarco/following{/other_user}",
            "gists_url": "https://api.github.com/users/valentimarco/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/valentimarco/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/valentimarco/subscriptions",
            "organizations_url": "https://api.github.com/users/valentimarco/orgs",
            "repos_url": "https://api.github.com/users/valentimarco/repos",
            "events_url": "https://api.github.com/users/valentimarco/events{/privacy}",
            "received_events_url": "https://api.github.com/users/valentimarco/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-13T21:59:16Z",
        "updated_at": "2023-11-13T22:28:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nImplement Async methods in ollama llm and chat model classes.\n\n### Motivation\n\nOllama implementation doesn't include the async methods _astream and _agenerate and i cannot create a async agent... \n\n### Your contribution\n\nThis is my first issue, i can try but i am working in 3 different projects right now...",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13306/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13306/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13305",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13305/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13305/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13305/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13305",
        "id": 1991534746,
        "node_id": "PR_kwDOIPDwls5fWM37",
        "number": 13305,
        "title": "IMPROVEMENT self-query template",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T21:43:49Z",
        "updated_at": "2023-11-13T22:03:17Z",
        "closed_at": "2023-11-13T22:03:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13305",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13305",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13305.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13305.patch",
            "merged_at": "2023-11-13T22:03:16Z"
        },
        "body": "- [ ] https://github.com/langchain-ai/langchain/pull/12694#discussion_r1391334719 -> keep date\r\n- [x] https://github.com/langchain-ai/langchain/pull/12694#discussion_r1391336586",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13305/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13305/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13304",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13304/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13304/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13304/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13304",
        "id": 1991525201,
        "node_id": "PR_kwDOIPDwls5fWKvJ",
        "number": 13304,
        "title": "SQL-PGVector Template",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-13T21:36:16Z",
        "updated_at": "2023-11-14T02:45:07Z",
        "closed_at": "2023-11-14T02:45:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13304",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13304",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13304.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13304.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13304/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13304/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13303",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13303/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13303/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13303/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13303",
        "id": 1991517798,
        "node_id": "PR_kwDOIPDwls5fWJGr",
        "number": 13303,
        "title": "IMPROVEMENT redirect root to docs",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T21:30:42Z",
        "updated_at": "2023-11-13T23:51:42Z",
        "closed_at": "2023-11-13T23:51:41Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13303",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13303",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13303.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13303.patch",
            "merged_at": "2023-11-13T23:51:41Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13303/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13303/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13302",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13302/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13302/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13302/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13302",
        "id": 1991515885,
        "node_id": "PR_kwDOIPDwls5fWIr2",
        "number": 13302,
        "title": "IMPROVEMENT default docs url root",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-13T21:29:10Z",
        "updated_at": "2023-11-13T23:51:08Z",
        "closed_at": "2023-11-13T23:51:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13302",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13302",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13302.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13302.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13302/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13302/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]