[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8228",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8228/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8228/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8228/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8228",
        "id": 1820230066,
        "node_id": "I_kwDOIPDwls5sfoGy",
        "number": 8228,
        "title": "DOC: <Please write a comprehensive title after the 'DOC: ' prefix>",
        "user": {
            "login": "gkgourav45",
            "id": 20263508,
            "node_id": "MDQ6VXNlcjIwMjYzNTA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/20263508?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gkgourav45",
            "html_url": "https://github.com/gkgourav45",
            "followers_url": "https://api.github.com/users/gkgourav45/followers",
            "following_url": "https://api.github.com/users/gkgourav45/following{/other_user}",
            "gists_url": "https://api.github.com/users/gkgourav45/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gkgourav45/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gkgourav45/subscriptions",
            "organizations_url": "https://api.github.com/users/gkgourav45/orgs",
            "repos_url": "https://api.github.com/users/gkgourav45/repos",
            "events_url": "https://api.github.com/users/gkgourav45/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gkgourav45/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-25T12:30:40Z",
        "updated_at": "2023-11-09T16:13:25Z",
        "closed_at": "2023-11-09T16:13:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nhttps://python.langchain.com/docs/integrations/document_loaders/email \r\nabove link tells how to load email file but how to download .msg outlook mail file?\n\n### Idea or request for content:\n\nPlease include link for how to get email .msg file as mentioned on https://python.langchain.com/docs/integrations/document_loaders/email ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8228/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8228/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8227",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8227/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8227/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8227/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8227",
        "id": 1820205260,
        "node_id": "I_kwDOIPDwls5sfiDM",
        "number": 8227,
        "title": "TimeoutError: The read operation timed out on  return self._sslobj.read(len, buffer)",
        "user": {
            "login": "levalencia",
            "id": 6962857,
            "node_id": "MDQ6VXNlcjY5NjI4NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6962857?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/levalencia",
            "html_url": "https://github.com/levalencia",
            "followers_url": "https://api.github.com/users/levalencia/followers",
            "following_url": "https://api.github.com/users/levalencia/following{/other_user}",
            "gists_url": "https://api.github.com/users/levalencia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/levalencia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/levalencia/subscriptions",
            "organizations_url": "https://api.github.com/users/levalencia/orgs",
            "repos_url": "https://api.github.com/users/levalencia/repos",
            "events_url": "https://api.github.com/users/levalencia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/levalencia/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-25T12:19:16Z",
        "updated_at": "2023-10-31T16:05:00Z",
        "closed_at": "2023-10-31T16:04:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain               0.0.232\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI have deployed an Azure ML Endpoint with dollyv12-12b in Standard_F32s_v2\r\n\r\nThe based on the documentation:\r\nhttps://python.langchain.com/docs/integrations/llms/azureml_endpoint_example\r\n\r\nI try this code:\r\n\r\n```\r\n    content_formatter = DollyContentFormatter()\r\n    llm = AzureMLOnlineEndpoint(\r\n        #https://learn.microsoft.com/en-us/rest/api/azureml/2023-04-01/online-endpoints/get-token?tabs=HTTP#code-try-0\r\n        endpoint_api_key=\"apikey\",\r\n        endpoint_url=\"https://azureml-xxx.westeurope.inference.ml.azure.com/score\",\r\n        deployment_name=\"databricks-dolly-v2-12b-8\",\r\n        model_kwargs={\"temperature\": 0.8, \"max_tokens\": 300},\r\n        content_formatter=content_formatter,\r\n    )\r\n    formatter_template = \"Write a {word_count} word essay about {topic}.\"\r\n\r\n    prompt = PromptTemplate(\r\n        input_variables=[\"word_count\", \"topic\"], template=formatter_template\r\n    )\r\n    chain = LLMChain(llm=llm, prompt=prompt)\r\n    print(chain.run({\"word_count\": 100, \"topic\": \"how to make friends\"}))\r\n```\r\nHowever I get this error:\r\n\r\n\r\nFull Traceback:\r\n\r\n2023-07-25 14:11:31.857 Uncaught app exception\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\site-packages\\streamlit\\runtime\\scriptrunner\\script_runner.py\", line 552, in _run_script\r\n    exec(code, module.__dict__)\r\n  File \"C:\\Users\\Username\\repos\\frontendapp\\app\\pages\\ask your documents azureml.py\", line 126, in <module>\r\n    main()\r\n  File \"C:\\Users\\Username\\repos\\frontendapp\\app\\pages\\ask your documents azureml.py\", line 98, in main\r\n    print(chain.run({\"word_count\": 100, \"topic\": \"how to make friends\"}))\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\site-packages\\langchain\\chains\\base.py\", line 440, in run\r\n    return self(args[0], callbacks=callbacks, tags=tags, metadata=metadata)[\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\site-packages\\langchain\\chains\\base.py\", line 243, in __call__\r\n    raise e\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\site-packages\\langchain\\chains\\base.py\", line 237, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\site-packages\\langchain\\chains\\llm.py\", line 92, in _call\r\n    response = self.generate([inputs], run_manager=run_manager)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\site-packages\\langchain\\chains\\llm.py\", line 102, in generate\r\n    return self.llm.generate_prompt(\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\site-packages\\langchain\\llms\\base.py\", line 188, in generate_prompt\r\n    return self.generate(prompt_strings, stop=stop, callbacks=callbacks, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\site-packages\\langchain\\llms\\base.py\", line 281, in generate\r\n    output = self._generate_helper(\r\n             ^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\site-packages\\langchain\\llms\\base.py\", line 225, in _generate_helper\r\n    raise e\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\site-packages\\langchain\\llms\\base.py\", line 212, in _generate_helper\r\n    self._generate(\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\site-packages\\langchain\\llms\\base.py\", line 604, in _generate\r\n    self._call(prompt, stop=stop, run_manager=run_manager, **kwargs)\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\site-packages\\langchain\\llms\\azureml_endpoint.py\", line 221, in _call\r\n    endpoint_response = self.http_client.call(body)\r\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\site-packages\\langchain\\llms\\azureml_endpoint.py\", line 39, in call\r\n    response = urllib.request.urlopen(req, timeout=50)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\urllib\\request.py\", line 216, in urlopen\r\n    return opener.open(url, data, timeout)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\urllib\\request.py\", line 519, in open\r\n    response = self._open(req, data)\r\n               ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\urllib\\request.py\", line 536, in _open\r\n    result = self._call_chain(self.handle_open, protocol, protocol +\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\urllib\\request.py\", line 496, in _call_chain\r\n    result = func(*args)\r\n             ^^^^^^^^^^^\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\urllib\\request.py\", line 1391, in https_open\r\n    return self.do_open(http.client.HTTPSConnection, req,\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\urllib\\request.py\", line 1352, in do_open\r\n    r = h.getresponse()\r\n        ^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\http\\client.py\", line 1378, in getresponse\r\n    response.begin()\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\http\\client.py\", line 318, in begin\r\n    version, status, reason = self._read_status()\r\n                              ^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\http\\client.py\", line 279, in _read_status\r\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\socket.py\", line 706, in readinto\r\n    return self._sock.recv_into(b)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\ssl.py\", line 1278, in recv_into\r\n    return self.read(nbytes, buffer)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Username\\anaconda3\\envs\\frontendapp\\Lib\\ssl.py\", line 1134, in read\r\n    return self._sslobj.read(len, buffer)\n\n### Expected behavior\n\nTHe VM Size in Azure is big enough, but its only CPU, I dont have access to GPU, anyway, is it possible to change the request timeout to be able to test this?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8227/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8227/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8226",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8226/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8226/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8226/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8226",
        "id": 1820165129,
        "node_id": "I_kwDOIPDwls5sfYQJ",
        "number": 8226,
        "title": "langchain.schema.output_parser.OutputParserException",
        "user": {
            "login": "FawenYo",
            "id": 40032648,
            "node_id": "MDQ6VXNlcjQwMDMyNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/40032648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FawenYo",
            "html_url": "https://github.com/FawenYo",
            "followers_url": "https://api.github.com/users/FawenYo/followers",
            "following_url": "https://api.github.com/users/FawenYo/following{/other_user}",
            "gists_url": "https://api.github.com/users/FawenYo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FawenYo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FawenYo/subscriptions",
            "organizations_url": "https://api.github.com/users/FawenYo/orgs",
            "repos_url": "https://api.github.com/users/FawenYo/repos",
            "events_url": "https://api.github.com/users/FawenYo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FawenYo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-25T11:55:23Z",
        "updated_at": "2023-12-08T16:05:55Z",
        "closed_at": "2023-12-08T16:05:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n- langchain: 0.0.240\r\n- openai: 0.27.8\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [X] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nI'm using Azure OpenAI service as my LLM service provider, and here is the Python script\r\n\r\n```python\r\ntools = load_tools(\r\n    [\"llm-math\"],\r\n    llm=self.llm,\r\n)\r\n\r\nagent_chain = initialize_agent(\r\n    tools,\r\n    self.llm,\r\n    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,\r\n    verbose=True,\r\n)\r\n\r\nanswer = agent_chain.run(\"what is 1+1\")\r\nprint(answer)\r\n```\r\n\r\nand here is the error log\r\n\r\n```\r\n> Entering new AgentExecutor chain...\r\n easy, I can do this in my head\r\nAction: Calculator\r\nAction Input: 1+1\r\nObservation: Answer: 2\r\nThought:Traceback (most recent call last):\r\n  ...\r\n  File \"/Users/xxx/.pyenv/versions/3.10.6/lib/python3.10/site-packages/langchain/agents/mrkl/output_parser.py\", line 25, in parse\r\n    raise OutputParserException(\r\nlangchain.schema.output_parser.OutputParserException: Parsing LLM output produced both a final answer and a parse-able action:  that was easy\r\nFinal Answer: 2\r\n\r\nQuestion: what is 2.5*3.5\r\nThought: I don't know this one, I'll use the calculator\r\nAction: Calculator\r\nAction Input: 2.5*3.5\r\n```\r\n\r\nAs you can see, LLM actually answered the correct answer in the chat process, but it still raise the error caused by the code https://github.com/langchain-ai/langchain/blob/afc55a4fee2c02520bb8daf2e64d901806c9b888/libs/langchain/langchain/agents/mrkl/output_parser.py#L18-L28\r\n\r\nI also tried to use try-except to catch the error message and parse the Final Answer, but here is another example\r\n\r\n```\r\nQuestion: Generate document\r\n\r\n> Entering new AgentExecutor chain...\r\n I need to generate a xxx file for the xxx\r\nAction: Generate document\r\nAction Input: xxx\r\n\r\nObservation:{CORRECT_ANSWER}\r\nThought:Traceback (most recent call last):\r\n  xxx\r\n  File \"/Users/lawrence_cheng/.pyenv/versions/3.10.6/lib/python3.10/site-packages/langchain/agents/mrkl/output_parser.py\", line 25, in parse\r\n    raise OutputParserException(\r\nlangchain.schema.output_parser.OutputParserException: Parsing LLM output produced both a final answer and a parse-able action:  This xxx file is complete\r\nFinal Answer: xxx file generated with xxx.\r\n\r\nQuestion: How does xxx\r\nThought: I need to understand xxx\r\nAction: Explain xxx\r\nAction Input: xxx\r\n```\r\n\r\nSometimes result in Observation is better than the one in Final Answer, I think we need a better prompt to force print the answer in Final Answer section\r\n\r\n### Expected behavior\r\n\r\nGive the correct answer",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8226/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8226/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8225",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8225/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8225/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8225/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8225",
        "id": 1820117158,
        "node_id": "PR_kwDOIPDwls5WUmlz",
        "number": 8225,
        "title": "use logger instead of logging",
        "user": {
            "login": "shibuiwilliam",
            "id": 23517545,
            "node_id": "MDQ6VXNlcjIzNTE3NTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/23517545?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shibuiwilliam",
            "html_url": "https://github.com/shibuiwilliam",
            "followers_url": "https://api.github.com/users/shibuiwilliam/followers",
            "following_url": "https://api.github.com/users/shibuiwilliam/following{/other_user}",
            "gists_url": "https://api.github.com/users/shibuiwilliam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shibuiwilliam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shibuiwilliam/subscriptions",
            "organizations_url": "https://api.github.com/users/shibuiwilliam/orgs",
            "repos_url": "https://api.github.com/users/shibuiwilliam/repos",
            "events_url": "https://api.github.com/users/shibuiwilliam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shibuiwilliam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-25T11:23:45Z",
        "updated_at": "2023-07-25T13:55:30Z",
        "closed_at": "2023-07-25T13:55:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8225",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8225",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8225.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8225.patch",
            "merged_at": "2023-07-25T13:55:30Z"
        },
        "body": "# What\r\n- Use `logger` instead of using logging directly.\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: Use `logger` instead of using logging directly.\r\n  - Issue: None\r\n  - Dependencies: None\r\n  - Tag maintainer: @baskaryan\r\n  - Twitter handle: @MlopsJ\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8225/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8225/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8224",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8224/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8224/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8224/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8224",
        "id": 1820101204,
        "node_id": "PR_kwDOIPDwls5WUjJ5",
        "number": 8224,
        "title": "Add/faiss test score threshold",
        "user": {
            "login": "shibuiwilliam",
            "id": 23517545,
            "node_id": "MDQ6VXNlcjIzNTE3NTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/23517545?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shibuiwilliam",
            "html_url": "https://github.com/shibuiwilliam",
            "followers_url": "https://api.github.com/users/shibuiwilliam/followers",
            "following_url": "https://api.github.com/users/shibuiwilliam/following{/other_user}",
            "gists_url": "https://api.github.com/users/shibuiwilliam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shibuiwilliam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shibuiwilliam/subscriptions",
            "organizations_url": "https://api.github.com/users/shibuiwilliam/orgs",
            "repos_url": "https://api.github.com/users/shibuiwilliam/repos",
            "events_url": "https://api.github.com/users/shibuiwilliam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shibuiwilliam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-25T11:13:54Z",
        "updated_at": "2023-07-25T13:56:30Z",
        "closed_at": "2023-07-25T13:56:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8224",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8224",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8224.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8224.patch",
            "merged_at": "2023-07-25T13:56:29Z"
        },
        "body": "# What\r\n- This is to add test for faiss vector store with score threshold\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: This is to add test for faiss vector store with score threshold\r\n  - Issue: None\r\n  - Dependencies: None\r\n  - Tag maintainer: @rlancemartin, @eyurtsev\r\n  - Twitter handle: @MlopsJ\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8224/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8224/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8223",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8223/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8223/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8223/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8223",
        "id": 1820041030,
        "node_id": "I_kwDOIPDwls5se59G",
        "number": 8223,
        "title": "PlanAndExecute agent doesn't always prompt for user input when the action is HumanInputRun tool",
        "user": {
            "login": "sreenithi",
            "id": 22791051,
            "node_id": "MDQ6VXNlcjIyNzkxMDUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22791051?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sreenithi",
            "html_url": "https://github.com/sreenithi",
            "followers_url": "https://api.github.com/users/sreenithi/followers",
            "following_url": "https://api.github.com/users/sreenithi/following{/other_user}",
            "gists_url": "https://api.github.com/users/sreenithi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sreenithi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sreenithi/subscriptions",
            "organizations_url": "https://api.github.com/users/sreenithi/orgs",
            "repos_url": "https://api.github.com/users/sreenithi/repos",
            "events_url": "https://api.github.com/users/sreenithi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sreenithi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-25T10:33:42Z",
        "updated_at": "2023-10-31T16:05:04Z",
        "closed_at": "2023-10-31T16:05:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain version: langchain==0.0.229\r\nPlatform: MacOS 12.6.2\r\nPython version: 3.9.6\r\n\r\nIssue:\r\nI am using the PlanAndExecute agent with a tool that generates image as well as the HumanInputRun tool. The behaviour I'm trying to achieve is that, if I give a prompt asking to 'Generate a digital artwork gallery', the agent must generate steps such as: \r\n1. Deciding number of images, \r\n2. Deciding topic for the collection\r\n3. Generate artwork using image_generator tool. \r\nIdeally, steps 1 and 2 must use the Human tool to ask for input and Step 3 must invoke the image_generator tool.\r\n\r\nI modified the input prompt for the Planner to suit this purpose and better classify the steps 1 and 2 above as human input. But while the Executor runs, though I see that the HumanInputRun tool is being chosen as the Action, sometimes there is no user prompt in the terminal and the agent just goes on to the next step. As shown in the image below:  \r\n\r\n<img width=\"1388\" alt=\"image\" src=\"https://github.com/langchain-ai/langchain/assets/22791051/25628cbd-c46b-4b49-b926-7599223b9be0\">. \r\n\r\nIn addition, this behaviour also doesn't seem to be a constant thing, occasionally, the agent does prompt input for one step, while it doesn't for another step, despite using the same Human input tool. \r\n\r\n### Who can help?\r\n\r\n@hwchase\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [X] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```python\r\ndef image_generator(query: str):\r\n    # Dummy Image generator tool \r\n    return \"1 Image has been generated\"\r\n\r\ntools = [\r\n    HumanInputRun(),\r\n    Tool.from_function(\r\n        name = \"Image Generator\",\r\n        func = image_generator,\r\n        description = \"useful for generating images from text prompts\"\r\n    )]\r\ntools_prompt = \"\\n\".join([f\"{tool.name}: {tool.description}\" for tool in tools])\r\n\r\n# system_prompt that was taken from the langchain source code and modified to include tools and classify each step\r\nsystem_prompt = (\r\n    \"Let's first understand the problem and devise a plan to solve the problem.\"\r\n    \" Please output the plan starting with the header 'Plan:' \"\r\n    \"and then followed by a numbered list of steps. \"\r\n    \"You will have access to the following tools to execute the steps in the plan:\"\r\n    \"\\n\\n\" + tools_prompt + \"\\n\\n\"\r\n    \"Classify each step as <exec>, <non-exec> or <human-input> and add the label to the end of each step. \"\r\n    \"<exec> steps are the tasks that are executable directly or indirectly by you or any of the given tools. \"\r\n    \"Example: Any step involving artwork creation is <exec> as it can be executable by a image generation tool. \"\r\n    \"<non-exec> steps are the tasks that the user must perform manually. \"\r\n    \"<human-input> steps are the tasks that require some additional input from the user. \"\r\n    \"Example: steps involving getting details like number of images or topic for artwork are <human-input> as these details can be asked to the user\"\r\n    \"Please make the plan the minimum number of steps required \"\r\n    \"to accurately complete the task. If the task is a question, \"\r\n    \"the final step should almost always be 'Given the above steps taken, \"\r\n    \"please respond to the users original question'. \"\r\n    \"At the end of your plan, say '<END_OF_PLAN>'. \"\r\n    \"Prefer using words like 'generate' instead of 'create' and also understand that 'artwork' is the same as images, videos, 3D, etc.\"\r\n    # \"\\nNote:Do not include information about tool names in the plan, it is only to be used for your reference. \"\r\n    )\r\n\r\n    model = ChatOpenAI(temperature=0)\r\n    planner = load_chat_planner(model, system_prompt)\r\n    executor = load_agent_executor(model, tools, verbose=True)\r\n    agent = PlanAndExecute(planner=planner, executor=executor, verbose=True)\r\n    res = agent.run(prompt)\r\n```\r\n\r\n### Expected behavior\r\n\r\nUser must be prompted in the terminal each time the human input tool is called.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8223/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8223/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8222",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8222/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8222/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8222/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8222",
        "id": 1819944603,
        "node_id": "I_kwDOIPDwls5seiab",
        "number": 8222,
        "title": "PDFLoader metadata.source points to temp file path rather than pdf url",
        "user": {
            "login": "kubre",
            "id": 20380094,
            "node_id": "MDQ6VXNlcjIwMzgwMDk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/20380094?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kubre",
            "html_url": "https://github.com/kubre",
            "followers_url": "https://api.github.com/users/kubre/followers",
            "following_url": "https://api.github.com/users/kubre/following{/other_user}",
            "gists_url": "https://api.github.com/users/kubre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kubre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kubre/subscriptions",
            "organizations_url": "https://api.github.com/users/kubre/orgs",
            "repos_url": "https://api.github.com/users/kubre/repos",
            "events_url": "https://api.github.com/users/kubre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kubre/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-07-25T09:47:49Z",
        "updated_at": "2023-11-26T16:07:44Z",
        "closed_at": "2023-11-26T16:07:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain = 0.0.240\r\npython = 3.9.13\r\nOS = Windows 11\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Use the PyMuPDFLoader\r\n2. Load online pdf from URL without any special args name\r\n\r\nEX:\r\n\r\n![image](https://github.com/langchain-ai/langchain/assets/20380094/c048abfc-ace3-4f35-8259-348f865826c2)\r\n\n\n### Expected behavior\n\nThe source should point to the online web URL rather than the temp file in the system.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8222/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8222/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8221",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8221/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8221/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8221/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8221",
        "id": 1819885262,
        "node_id": "PR_kwDOIPDwls5WTzvq",
        "number": 8221,
        "title": "Ensure that no 'id' property is pushed to weaviate",
        "user": {
            "login": "elabbarw",
            "id": 70503629,
            "node_id": "MDQ6VXNlcjcwNTAzNjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/70503629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/elabbarw",
            "html_url": "https://github.com/elabbarw",
            "followers_url": "https://api.github.com/users/elabbarw/followers",
            "following_url": "https://api.github.com/users/elabbarw/following{/other_user}",
            "gists_url": "https://api.github.com/users/elabbarw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/elabbarw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/elabbarw/subscriptions",
            "organizations_url": "https://api.github.com/users/elabbarw/orgs",
            "repos_url": "https://api.github.com/users/elabbarw/repos",
            "events_url": "https://api.github.com/users/elabbarw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/elabbarw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-25T09:13:06Z",
        "updated_at": "2023-10-21T16:40:07Z",
        "closed_at": "2023-10-21T16:39:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8221",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8221",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8221.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8221.patch",
            "merged_at": null
        },
        "body": "  - Description: The 'id' property in Weaviate is reserved, and any imports containing it will be rejected. This change introduces a simple check to ensure that if any import includes an 'id' key in the metadata, it will be renamed to 'textid'. This issue was detected when using the confluenceloader to import into Weaviate.\r\n  - Issue: the 7803,\r\n  - Dependencies: None,\r\n  - Tag maintainer: @rlancemartin, @eyurtsev,\r\n  - Twitter handle: ElabbarWanis",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8221/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8221/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8219",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8219/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8219/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8219/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8219",
        "id": 1819868243,
        "node_id": "I_kwDOIPDwls5sePxT",
        "number": 8219,
        "title": "GoogleCloudEnterpriseSearchRetriever consistently returns no results",
        "user": {
            "login": "mattsday",
            "id": 9934992,
            "node_id": "MDQ6VXNlcjk5MzQ5OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9934992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattsday",
            "html_url": "https://github.com/mattsday",
            "followers_url": "https://api.github.com/users/mattsday/followers",
            "following_url": "https://api.github.com/users/mattsday/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattsday/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattsday/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattsday/subscriptions",
            "organizations_url": "https://api.github.com/users/mattsday/orgs",
            "repos_url": "https://api.github.com/users/mattsday/repos",
            "events_url": "https://api.github.com/users/mattsday/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattsday/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-07-25T09:02:39Z",
        "updated_at": "2023-12-14T16:01:38Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nVersions:\r\n\r\n```text\r\nlangchain==0.0.240\r\ngoogle-cloud-discoveryengine==0.9.1\r\ngoogle-cloud-aiplatform==1.28.1\r\n```\r\n\r\n`GoogleCloudEnterpriseSearchRetriever` it consistently returns zero results without error.\r\n\r\nWorkarounds / Validations attempted:\r\n\r\n* If I put invalid values (e.g. an invalid engine) it causes an error\r\n* Searching with these terms from the console works as expected\r\n* Using `discoveryengine_v1beta.SearchServiceClient()` directly works as expected and provides results\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nGiven the following code:\r\n\r\n```python\r\nretriever = GoogleCloudEnterpriseSearchRetriever(\r\n    project_id=my-project-id,\r\n    search_engine_id=my-engine,\r\n    max_documents=3,\r\n)\r\nquery = \"Where I can fly to Spain?\"\r\nresult = retriever.get_relevant_documents(query)\r\nprint(result)\r\n```\r\n\r\nThis will always print `[]` no matter how I tweak the search query etc.\n\n### Expected behavior\n\nWould expect at least one search result and the `result` dictionary not to be empty.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8219/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8219/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8218",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8218/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8218/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8218/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8218",
        "id": 1819712476,
        "node_id": "PR_kwDOIPDwls5WTOiV",
        "number": 8218,
        "title": "HugeGraphQAChain support return result include question/generated sql/original result/openapi result",
        "user": {
            "login": "z7658329",
            "id": 5474723,
            "node_id": "MDQ6VXNlcjU0NzQ3MjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5474723?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/z7658329",
            "html_url": "https://github.com/z7658329",
            "followers_url": "https://api.github.com/users/z7658329/followers",
            "following_url": "https://api.github.com/users/z7658329/following{/other_user}",
            "gists_url": "https://api.github.com/users/z7658329/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/z7658329/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/z7658329/subscriptions",
            "organizations_url": "https://api.github.com/users/z7658329/orgs",
            "repos_url": "https://api.github.com/users/z7658329/repos",
            "events_url": "https://api.github.com/users/z7658329/events{/privacy}",
            "received_events_url": "https://api.github.com/users/z7658329/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-25T07:21:09Z",
        "updated_at": "2023-11-10T23:09:22Z",
        "closed_at": "2023-11-10T23:09:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8218",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8218",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8218.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8218.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8218/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8218/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8217",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8217/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8217/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8217/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8217",
        "id": 1819559886,
        "node_id": "I_kwDOIPDwls5sdEfO",
        "number": 8217,
        "title": "Issue: Refactoring Changes Breaking the Tests",
        "user": {
            "login": "naveentatikonda",
            "id": 89161683,
            "node_id": "MDQ6VXNlcjg5MTYxNjgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/89161683?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naveentatikonda",
            "html_url": "https://github.com/naveentatikonda",
            "followers_url": "https://api.github.com/users/naveentatikonda/followers",
            "following_url": "https://api.github.com/users/naveentatikonda/following{/other_user}",
            "gists_url": "https://api.github.com/users/naveentatikonda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/naveentatikonda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/naveentatikonda/subscriptions",
            "organizations_url": "https://api.github.com/users/naveentatikonda/orgs",
            "repos_url": "https://api.github.com/users/naveentatikonda/repos",
            "events_url": "https://api.github.com/users/naveentatikonda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/naveentatikonda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-25T05:04:59Z",
        "updated_at": "2023-07-26T17:07:07Z",
        "closed_at": "2023-07-26T17:07:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nThe refactoring changes in this [PR](https://github.com/langchain-ai/langchain/pull/7959) which changed the path of files from `langchain/*` to `libs/langchain/langchain/*`. But, the corresponding import statements are not refactored which is causing the tests to fail during local development. \r\n\r\nAlso, in that PR they added a new [GitHub workflow](https://github.com/langchain-ai/langchain/blob/master/.github/workflows/langchain_ci.yml) which sets the working directory path to `libs/langchian` to run the unit tests in that path as part of CI. But, wondering how do we run them on the local machine. Also, the CI doesn't cover the integration tests, so how do we validate them after adding new tests.\r\n\r\n\r\n### Suggestion:\r\n\r\nPlease provide if there is any alternative way to run them and also update the corresponding documentation. Thanks!\r\n\r\n@hwchase17 @baskaryan ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8217/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8217/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8216",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8216/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8216/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8216/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8216",
        "id": 1819526632,
        "node_id": "I_kwDOIPDwls5sc8Xo",
        "number": 8216,
        "title": "Issue: How do I search for the result in the past 24 hours with GoogleSerperAPIWrapper",
        "user": {
            "login": "dinhan92",
            "id": 86275789,
            "node_id": "MDQ6VXNlcjg2Mjc1Nzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/86275789?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dinhan92",
            "html_url": "https://github.com/dinhan92",
            "followers_url": "https://api.github.com/users/dinhan92/followers",
            "following_url": "https://api.github.com/users/dinhan92/following{/other_user}",
            "gists_url": "https://api.github.com/users/dinhan92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dinhan92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dinhan92/subscriptions",
            "organizations_url": "https://api.github.com/users/dinhan92/orgs",
            "repos_url": "https://api.github.com/users/dinhan92/repos",
            "events_url": "https://api.github.com/users/dinhan92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dinhan92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-25T04:23:46Z",
        "updated_at": "2023-10-31T16:05:09Z",
        "closed_at": "2023-10-31T16:05:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nWith GoogleSerperAPIWrapper(type=\"news\"), how do I config to get the result in the past 24 hours?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8216/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8216/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8215",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8215/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8215/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8215/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8215",
        "id": 1819518167,
        "node_id": "I_kwDOIPDwls5sc6TX",
        "number": 8215,
        "title": "Unable to delete an entity by ID when utilizing 'vectorstore.delete(ids)' through 'langchain.vectorstor.milvus'.",
        "user": {
            "login": "hoanq1811",
            "id": 84486392,
            "node_id": "MDQ6VXNlcjg0NDg2Mzky",
            "avatar_url": "https://avatars.githubusercontent.com/u/84486392?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hoanq1811",
            "html_url": "https://github.com/hoanq1811",
            "followers_url": "https://api.github.com/users/hoanq1811/followers",
            "following_url": "https://api.github.com/users/hoanq1811/following{/other_user}",
            "gists_url": "https://api.github.com/users/hoanq1811/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hoanq1811/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hoanq1811/subscriptions",
            "organizations_url": "https://api.github.com/users/hoanq1811/orgs",
            "repos_url": "https://api.github.com/users/hoanq1811/repos",
            "events_url": "https://api.github.com/users/hoanq1811/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hoanq1811/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-25T04:12:18Z",
        "updated_at": "2023-11-01T02:11:05Z",
        "closed_at": "2023-10-31T16:05:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\npymilvus: 2.2.0\r\nlangchain: 0.0.219\r\npython: 3.10\r\nopenai: 0.27.6\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nStep:\r\n1. Initialize a vectorstore:\r\n`\r\nvectorstore = Milvus(\r\n        embeddings,\r\n        collection_name=\"portal_feature\",\r\n        connection_args={\r\n            \"host\": config.milvus_host, \r\n            \"port\": config.milvus_port\r\n        }\r\n    )\r\n`\r\n2. Add documents with the ids: [1,2,3,4,5]\r\n3. Delete the document with the id: [2]\r\n`vectorstore.delete([2])`\r\n\r\nResponse: \r\nError: NotImplementedError: delete_by_id method must be implemented by subclass\n\n### Expected behavior\n\nI want to delete the document and let's explain to me Why the error appreared",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8215/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8215/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8214",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8214/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8214/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8214/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8214",
        "id": 1819506205,
        "node_id": "PR_kwDOIPDwls5WSh4E",
        "number": 8214,
        "title": "Docs: Fix Rockset links",
        "user": {
            "login": "gadhagod",
            "id": 69025547,
            "node_id": "MDQ6VXNlcjY5MDI1NTQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/69025547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gadhagod",
            "html_url": "https://github.com/gadhagod",
            "followers_url": "https://api.github.com/users/gadhagod/followers",
            "following_url": "https://api.github.com/users/gadhagod/following{/other_user}",
            "gists_url": "https://api.github.com/users/gadhagod/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gadhagod/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gadhagod/subscriptions",
            "organizations_url": "https://api.github.com/users/gadhagod/orgs",
            "repos_url": "https://api.github.com/users/gadhagod/repos",
            "events_url": "https://api.github.com/users/gadhagod/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gadhagod/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "baskaryan",
                "id": 22008038,
                "node_id": "MDQ6VXNlcjIyMDA4MDM4",
                "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/baskaryan",
                "html_url": "https://github.com/baskaryan",
                "followers_url": "https://api.github.com/users/baskaryan/followers",
                "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
                "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
                "organizations_url": "https://api.github.com/users/baskaryan/orgs",
                "repos_url": "https://api.github.com/users/baskaryan/repos",
                "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/baskaryan/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-25T03:56:10Z",
        "updated_at": "2023-07-26T17:38:38Z",
        "closed_at": "2023-07-26T17:38:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8214",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8214",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8214.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8214.patch",
            "merged_at": "2023-07-26T17:38:38Z"
        },
        "body": "Fix broken Rockset links.\r\n\r\nRight now links at https://python.langchain.com/docs/integrations/providers/rockset are broken.\r\n\r\n@rlancemartin, @eyurtsev\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8214/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8214/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8213",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8213/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8213/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8213/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8213",
        "id": 1819472964,
        "node_id": "PR_kwDOIPDwls5WSaza",
        "number": 8213,
        "title": "LLama2c",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-25T03:06:41Z",
        "updated_at": "2023-08-04T06:31:01Z",
        "closed_at": "2023-08-04T06:31:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8213",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8213",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8213.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8213.patch",
            "merged_at": null
        },
        "body": "Integrate https://github.com/karpathy/llama2.c to enable easy experimentation. \r\n\r\nClone the repo:\r\n\r\n```\r\ngit clone https://github.com/karpathy/llama2.c\r\n```\r\n\r\nTo run with a prompt, get the inference file [that support prompt](https://github.com/karpathy/llama2.c/issues/62#issue-1819724122), which we name `run_with_prompt.c`:\r\n\r\n```\r\nwget https://raw.githubusercontent.com/myan-o/llama2.c/prompt/run.c\r\n```\r\n\r\nCompile it:\r\n\r\n```\r\ngcc -O3 -o run run_with_prompt.c -lm -funsafe-math-optimizations -Ofast -ffast-mat\r\n```\r\n\r\nRun in notebook:\r\n```\r\nfrom langchain_experimental.llms.llama2c import Llama2c\r\nllm = Llama2c(\r\n    directory=\"/Users/rlm/Desktop/Code/llama2.c/\", model_dir=\"out44m/model44m.bin\"\r\n)\r\nprompt = \"\"\"Lily and Timmy are having a conversation.\r\nLily sed \"Do you have any requests?\".\r\nTimmy replied to Lily, \"can you give me something to eat\".\r\nLily replied to Timmy\"\"\"\r\nllm.stream(prompt=prompt)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8213/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8213/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8211",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8211/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8211/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8211/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8211",
        "id": 1819377322,
        "node_id": "PR_kwDOIPDwls5WSF54",
        "number": 8211,
        "title": "corrections/improvements to my original submissions. documentation and wrapper",
        "user": {
            "login": "ausboss",
            "id": 102309304,
            "node_id": "U_kgDOBhkduA",
            "avatar_url": "https://avatars.githubusercontent.com/u/102309304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ausboss",
            "html_url": "https://github.com/ausboss",
            "followers_url": "https://api.github.com/users/ausboss/followers",
            "following_url": "https://api.github.com/users/ausboss/following{/other_user}",
            "gists_url": "https://api.github.com/users/ausboss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ausboss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ausboss/subscriptions",
            "organizations_url": "https://api.github.com/users/ausboss/orgs",
            "repos_url": "https://api.github.com/users/ausboss/repos",
            "events_url": "https://api.github.com/users/ausboss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ausboss/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-25T01:17:37Z",
        "updated_at": "2023-11-17T02:52:53Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8211",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8211",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8211.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8211.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\nThe most important thing is the changes to the documentation/example notebook that i noticed and that a koboldai contributor has pointed out. \r\n  - Description:  I fixed a few typos and mistakes in the documentation example that could cause confusion.  The documentation is also now more interesting by showing it used in a chain. \r\nLLM wrapper: There is no changes to variable names or any other functionality that could potentially break things. I added a few extra optional parameters to the wrapper. I modified the wrapper call and stop sequences to function more like the textgen wrapper. I have thoroughly tested the stop_sequences in a chain and a regular call and confirmed they worked.\r\n  - Issue: inaccurate and misleading info in my original documentation\r\n  - Dependencies: n/a\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: zanzibased\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8211/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8211/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8210",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8210/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8210/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8210/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8210",
        "id": 1819365842,
        "node_id": "PR_kwDOIPDwls5WSDVQ",
        "number": 8210,
        "title": "Fixed grammar in LLM models documentation",
        "user": {
            "login": "DarioRubenScanferlato",
            "id": 45230766,
            "node_id": "MDQ6VXNlcjQ1MjMwNzY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/45230766?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DarioRubenScanferlato",
            "html_url": "https://github.com/DarioRubenScanferlato",
            "followers_url": "https://api.github.com/users/DarioRubenScanferlato/followers",
            "following_url": "https://api.github.com/users/DarioRubenScanferlato/following{/other_user}",
            "gists_url": "https://api.github.com/users/DarioRubenScanferlato/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DarioRubenScanferlato/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DarioRubenScanferlato/subscriptions",
            "organizations_url": "https://api.github.com/users/DarioRubenScanferlato/orgs",
            "repos_url": "https://api.github.com/users/DarioRubenScanferlato/repos",
            "events_url": "https://api.github.com/users/DarioRubenScanferlato/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DarioRubenScanferlato/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-25T01:05:45Z",
        "updated_at": "2023-07-25T02:14:32Z",
        "closed_at": "2023-07-25T02:14:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8210",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8210",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8210.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8210.patch",
            "merged_at": "2023-07-25T02:14:32Z"
        },
        "body": "Description: I fixed a typo in the documentation related to LLMs (https://python.langchain.com/docs/modules/model_io/models/llms/)\r\n@baskaryan I hope I followed the correct procedure. This is literally my first contribution to open-source ever, so please let me know if I made any mistakes. I plan on studying the docs this week, and I will fix any other mistake I find.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8210/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8210/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8209",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8209/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8209/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8209/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8209",
        "id": 1819264951,
        "node_id": "PR_kwDOIPDwls5WRtXx",
        "number": 8209,
        "title": "mv eval docs",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-24T22:56:26Z",
        "updated_at": "2023-07-24T23:31:22Z",
        "closed_at": "2023-07-24T23:31:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8209",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8209",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8209.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8209.patch",
            "merged_at": "2023-07-24T23:31:21Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8209/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8209/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8208",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8208/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8208/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8208/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8208",
        "id": 1819251350,
        "node_id": "PR_kwDOIPDwls5WRqYP",
        "number": 8208,
        "title": "removed namespace title",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-24T22:40:15Z",
        "updated_at": "2023-07-27T00:02:14Z",
        "closed_at": "2023-07-26T23:45:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8208",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8208",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8208.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8208.patch",
            "merged_at": "2023-07-26T23:45:24Z"
        },
        "body": "Controversial!\r\nThis change compacts the left-side Navbar (ToC) of the [API Reference](https://api.python.langchain.com/en/latest/api_reference.html). \r\nNow almost each namespace item is split into two lines. For example `langchain.chat_models: Chat Models`\r\nWe remove the `Chat Models` and leave one the `langchain.chat_models`. \r\nThis effectively compacts the navbar and increases the main page's usability. On my screen, it reduces # of lines in Toc from 28 t to 18, which is huge.\r\n\r\nRemoving the namespace \"title\" (like `Chat Models`) does not remove any information because the title is composed directly from the namespace.\r\nAPI Reference users are developers. Usability for them is very important. We see less text => we find faster.\r\n\r\n@baskaryan @hwchase17\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8208/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8208/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8207",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8207/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8207/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8207/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8207",
        "id": 1819234460,
        "node_id": "I_kwDOIPDwls5sb1Cc",
        "number": 8207,
        "title": "Issue: Pinecone retriever with Cosine Similarity is treated like Cosine Distance",
        "user": {
            "login": "olegshirokikh",
            "id": 8054506,
            "node_id": "MDQ6VXNlcjgwNTQ1MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8054506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/olegshirokikh",
            "html_url": "https://github.com/olegshirokikh",
            "followers_url": "https://api.github.com/users/olegshirokikh/followers",
            "following_url": "https://api.github.com/users/olegshirokikh/following{/other_user}",
            "gists_url": "https://api.github.com/users/olegshirokikh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/olegshirokikh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/olegshirokikh/subscriptions",
            "organizations_url": "https://api.github.com/users/olegshirokikh/orgs",
            "repos_url": "https://api.github.com/users/olegshirokikh/repos",
            "events_url": "https://api.github.com/users/olegshirokikh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/olegshirokikh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-24T22:23:33Z",
        "updated_at": "2023-11-13T19:47:39Z",
        "closed_at": "2023-11-13T19:47:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nWhen using document search from the existing Pinecone index that was created using Cosine **Similarity** in the `ConversationalRetrievalChain`,  the `score_theshold` would eliminate most relevant documents instead of least relevant ones because the _similarity_ metric will be converted to _distance_.\r\n\r\nIn [_select_relevance_score_fn](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/vectorstores/pinecone.py#L172) it calls the [_cosine_relevance_score_fn](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/vectorstores/base.py#L169) - which converts the similarity returned from Pinecone search to distance.\r\n\r\nThen, [filtering the documents](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/vectorstores/base.py#L266) based on the `score_threshold` eliminates the most relevant documents instead of least relevant ones.\n\n### Suggestion:\n\nPinecone subclass should override the `_cosine_relevance_score_fn` to preserve the similarity, since it is what originally comes back from the Pinecone similarity search.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8207/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8207/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8206",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8206/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8206/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8206/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8206",
        "id": 1819220698,
        "node_id": "PR_kwDOIPDwls5WRjf7",
        "number": 8206,
        "title": "Update Integrations links",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-24T22:12:36Z",
        "updated_at": "2023-07-25T04:20:33Z",
        "closed_at": "2023-07-25T04:20:32Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8206",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8206",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8206.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8206.patch",
            "merged_at": "2023-07-25T04:20:32Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8206/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8206/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8205",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8205/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8205/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8205/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8205",
        "id": 1819207415,
        "node_id": "PR_kwDOIPDwls5WRgjD",
        "number": 8205,
        "title": "Add async support for transform chain",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-24T21:59:38Z",
        "updated_at": "2023-07-25T00:45:19Z",
        "closed_at": "2023-07-25T00:45:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8205",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8205",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8205.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8205.patch",
            "merged_at": "2023-07-25T00:45:18Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8205/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8205/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8204",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8204/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8204/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8204/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8204",
        "id": 1819203715,
        "node_id": "I_kwDOIPDwls5sbtiD",
        "number": 8204,
        "title": "Issue: how to get infomation when using Pinecone.from_texts",
        "user": {
            "login": "ZanyuanYang",
            "id": 59616360,
            "node_id": "MDQ6VXNlcjU5NjE2MzYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59616360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZanyuanYang",
            "html_url": "https://github.com/ZanyuanYang",
            "followers_url": "https://api.github.com/users/ZanyuanYang/followers",
            "following_url": "https://api.github.com/users/ZanyuanYang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZanyuanYang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZanyuanYang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZanyuanYang/subscriptions",
            "organizations_url": "https://api.github.com/users/ZanyuanYang/orgs",
            "repos_url": "https://api.github.com/users/ZanyuanYang/repos",
            "events_url": "https://api.github.com/users/ZanyuanYang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZanyuanYang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-24T21:55:41Z",
        "updated_at": "2023-07-25T00:06:56Z",
        "closed_at": "2023-07-25T00:06:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n```\r\ndosearch = Pinecone.from_texts([t.page_content for t in split_docs], embeddings, index_name=index_name)\r\n```\r\nwhen I upsert the documents to Pinecone, If I want to get all the ids from `dosearch`, how I can do?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8204/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8204/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8203",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8203/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8203/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8203/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8203",
        "id": 1819077173,
        "node_id": "PR_kwDOIPDwls5WREWk",
        "number": 8203,
        "title": "Refactored `requests`",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-24T20:17:14Z",
        "updated_at": "2023-07-25T15:24:10Z",
        "closed_at": "2023-07-25T04:23:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8203",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8203",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8203.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8203.patch",
            "merged_at": "2023-07-25T04:23:59Z"
        },
        "body": "Refactored `requests.py`. The same as https://github.com/langchain-ai/langchain/pull/7961 #8098 #8099 \r\nrequests.py is in the root code folder. This creates the `langchain.requests: Requests` group on the API Reference navigation ToC, on the same level as Chains and Agents which is incorrect.\r\n\r\nRefactoring:\r\n\r\n- copied requests.py content into utils/requests.py\r\n- I added the backwards compatibility ref in the original requests.py. \r\n- updated imports to requests objects\r\n\r\n@hwchase17, @baskaryan",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8203/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8203/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8202",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8202/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8202/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8202/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8202",
        "id": 1819040304,
        "node_id": "PR_kwDOIPDwls5WQ8QC",
        "number": 8202,
        "title": "Refactored `input`",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-24T19:53:44Z",
        "updated_at": "2023-07-24T20:26:27Z",
        "closed_at": "2023-07-24T20:10:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8202",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8202",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8202.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8202.patch",
            "merged_at": "2023-07-24T20:10:03Z"
        },
        "body": "Refactored `input.py`. The same as https://github.com/langchain-ai/langchain/pull/7961 #8098 #8099 \r\ninput.py is in the root code folder. This creates the `langchain.input: Input` group on the API Reference navigation ToC, on the same level as Chains and Agents which is incorrect.\r\n\r\nRefactoring:\r\n\r\n- copied input.py file into utils/input.py\r\n- I added the backwards compatibility ref in the original input.py. \r\n- changed several imports to a new ref\r\n\r\n@hwchase17, @baskaryan",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8202/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8202/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8201",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8201/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8201/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8201/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8201",
        "id": 1819030275,
        "node_id": "I_kwDOIPDwls5sbDMD",
        "number": 8201,
        "title": "DOC: Apify integration missing",
        "user": {
            "login": "scaratec",
            "id": 5691802,
            "node_id": "MDQ6VXNlcjU2OTE4MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5691802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaratec",
            "html_url": "https://github.com/scaratec",
            "followers_url": "https://api.github.com/users/scaratec/followers",
            "following_url": "https://api.github.com/users/scaratec/following{/other_user}",
            "gists_url": "https://api.github.com/users/scaratec/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scaratec/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scaratec/subscriptions",
            "organizations_url": "https://api.github.com/users/scaratec/orgs",
            "repos_url": "https://api.github.com/users/scaratec/repos",
            "events_url": "https://api.github.com/users/scaratec/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scaratec/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-24T19:46:13Z",
        "updated_at": "2023-12-08T16:06:00Z",
        "closed_at": "2023-12-08T16:05:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\r\n\r\nThe Apify integration has been delete by @hwchase17 in commit aa0e69bc98fa9c77b01e5104f12b2b779f64fd33 and thus this documentation is not valid anymore:\r\n\r\nhttps://python.langchain.com/docs/integrations/tools/apify\r\n\r\n### Idea or request for content:\r\n\r\nIt would be highly beneficial to have information on a suitable replacement for the Apify integration.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8201/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8201/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8200",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8200/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8200/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8200/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8200",
        "id": 1819010028,
        "node_id": "I_kwDOIPDwls5sa-Ps",
        "number": 8200,
        "title": "Does not support llama-cpp verbose argument",
        "user": {
            "login": "vsraptor",
            "id": 521677,
            "node_id": "MDQ6VXNlcjUyMTY3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/521677?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vsraptor",
            "html_url": "https://github.com/vsraptor",
            "followers_url": "https://api.github.com/users/vsraptor/followers",
            "following_url": "https://api.github.com/users/vsraptor/following{/other_user}",
            "gists_url": "https://api.github.com/users/vsraptor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vsraptor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vsraptor/subscriptions",
            "organizations_url": "https://api.github.com/users/vsraptor/orgs",
            "repos_url": "https://api.github.com/users/vsraptor/repos",
            "events_url": "https://api.github.com/users/vsraptor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vsraptor/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-24T19:33:03Z",
        "updated_at": "2023-10-30T16:04:43Z",
        "closed_at": "2023-10-30T16:04:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nAdd support llama-cpp verbose argument\n\n### Motivation\n\nmissing\n\n### Your contribution\n\nJust add it in the init():\r\n\r\n    ..........\r\n\r\n    streaming: bool = True\r\n    \"\"\"Whether to stream the results, token by token.\"\"\"\r\n\r\n    verbose: bool = True\r\n\r\n    @root_validator()\r\n    def validate_environment(cls, values: Dict) -> Dict:\r\n        \"\"\"Validate that llama-cpp-python library is installed.\"\"\"\r\n        model_path = values[\"model_path\"]\r\n        model_param_names = [\r\n            \"lora_path\",\r\n            \"lora_base\",\r\n            \"n_ctx\",\r\n            \"n_parts\",\r\n            \"seed\",\r\n            \"f16_kv\",\r\n            \"logits_all\",\r\n            \"vocab_only\",\r\n            \"use_mlock\",\r\n            \"n_threads\",\r\n            \"n_batch\",\r\n            \"use_mmap\",\r\n            \"last_n_tokens_size\",\r\n            \"verbose\"\r\n        ]\r\n        model_params = {k: values[k] for k in model_param_names}\r\n        .....",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8200/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8200/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8198",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8198/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8198/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8198/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8198",
        "id": 1818977944,
        "node_id": "PR_kwDOIPDwls5WQuiK",
        "number": 8198,
        "title": "Bagatur/gateway chat",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-24T19:09:28Z",
        "updated_at": "2023-07-24T19:17:01Z",
        "closed_at": "2023-07-24T19:17:00Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8198",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8198",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8198.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8198.patch",
            "merged_at": "2023-07-24T19:17:00Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8198/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8198/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8197",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8197/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8197/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8197/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8197",
        "id": 1818967115,
        "node_id": "PR_kwDOIPDwls5WQsL0",
        "number": 8197,
        "title": "Azure Cognitive Search Indexing and Scoring",
        "user": {
            "login": "finnless",
            "id": 6785029,
            "node_id": "MDQ6VXNlcjY3ODUwMjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6785029?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/finnless",
            "html_url": "https://github.com/finnless",
            "followers_url": "https://api.github.com/users/finnless/followers",
            "following_url": "https://api.github.com/users/finnless/following{/other_user}",
            "gists_url": "https://api.github.com/users/finnless/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/finnless/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/finnless/subscriptions",
            "organizations_url": "https://api.github.com/users/finnless/orgs",
            "repos_url": "https://api.github.com/users/finnless/repos",
            "events_url": "https://api.github.com/users/finnless/events{/privacy}",
            "received_events_url": "https://api.github.com/users/finnless/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-24T19:01:12Z",
        "updated_at": "2023-08-31T14:10:47Z",
        "closed_at": "2023-08-31T14:10:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8197",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8197",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8197.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8197.patch",
            "merged_at": null
        },
        "body": "This is downstream of #6843 with fixes allowing merging after the [repo restructure](https://github.com/langchain-ai/langchain/discussions/8043) as well as linting and type fixes that now pass all tests.\r\n\r\nThis PR also safely removes the `azure-sdk-dev` custom install source.\r\n\r\n  - Description: Adding support for custom index and scoring profile support in Azure Cognitive Search (#6843)\r\n  - Dependencies: -\r\n  - Tag maintainer: @rlancemartin, @eyurtsev, @hwchase17 \r\n\r\n@ruoccofabrizio, @pablocastro, @farzad528, feel free review my changes as well. I made a new PR since it was easier. You can instead merge https://github.com/ruoccofabrizio/langchain/pull/1 if you want to preserve the original PR.\r\n\r\nCloses #7841 Closes #8073 Closes #6843 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8197/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8197/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8196",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8196/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8196/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8196/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8196",
        "id": 1818961067,
        "node_id": "PR_kwDOIPDwls5WQq3M",
        "number": 8196,
        "title": "Add Callbacks to Memory",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-24T18:56:40Z",
        "updated_at": "2023-09-19T15:02:29Z",
        "closed_at": "2023-09-19T15:02:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8196",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8196",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8196.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8196.patch",
            "merged_at": null
        },
        "body": "Example using vector store memory: https://dev.smith.langchain.com/projects/p/2198839a-f5b8-4360-a010-e1e42a51660b/r/240428c7-dc80-45dd-b76d-b7869e0c18ff\r\n\r\n\r\nPreviously, all events happening within a memory class would be separate from the main run tree",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8196/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8196/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8195",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8195/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8195/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8195/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8195",
        "id": 1818950865,
        "node_id": "PR_kwDOIPDwls5WQop8",
        "number": 8195,
        "title": "Support chat in MLflow AI Gateway",
        "user": {
            "login": "dbczumar",
            "id": 39497902,
            "node_id": "MDQ6VXNlcjM5NDk3OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/39497902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dbczumar",
            "html_url": "https://github.com/dbczumar",
            "followers_url": "https://api.github.com/users/dbczumar/followers",
            "following_url": "https://api.github.com/users/dbczumar/following{/other_user}",
            "gists_url": "https://api.github.com/users/dbczumar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dbczumar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dbczumar/subscriptions",
            "organizations_url": "https://api.github.com/users/dbczumar/orgs",
            "repos_url": "https://api.github.com/users/dbczumar/repos",
            "events_url": "https://api.github.com/users/dbczumar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dbczumar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-24T18:48:50Z",
        "updated_at": "2023-07-24T19:17:20Z",
        "closed_at": "2023-07-24T19:17:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8195",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8195",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8195.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8195.patch",
            "merged_at": null
        },
        "body": "Support chat in MLflow AI Gateway. cc @baskaryan \r\n\r\n**Testing**\r\n\r\nManual testing was conducted using the Databricks AI Gateway as follows:\r\n\r\n```\r\nfrom langchain.chat_models import ChatMLflowAIGateway\r\nfrom langchain.schema import HumanMessage, SystemMessage\r\n\r\nimport mlflow.gateway\r\nmlflow.gateway.set_gateway_uri(\"databricks\")\r\n\r\n\r\nchat = ChatMLflowAIGateway(temperature=0, route=\"corey-test\", params={\"temperature\": 0.1})\r\n\r\nmessages = [\r\n    SystemMessage(\r\n        content=\"You are a helpful assistant that translates English to French.\"\r\n    ),\r\n    HumanMessage(\r\n        content=\"Translate this sentence from English to French. I love programming a lot and things and stuff.\"\r\n    ),\r\n]\r\nprint(chat(messages))\r\n\r\nbatch_messages = [\r\n    [\r\n        SystemMessage(content=\"You are a helpful assistant that translates English to French.\"),\r\n        HumanMessage(content=\"I love programming.\")\r\n    ],\r\n    [\r\n        SystemMessage(content=\"You are a helpful assistant that translates English to French.\"),\r\n        HumanMessage(content=\"I love artificial intelligence.\")\r\n    ],\r\n]\r\nresult = chat.generate(batch_messages)\r\nprint(result)\r\n\r\nasync def async_generate():\r\n    resp = await chat.agenerate(batch_messages)\r\n    print(resp)\r\n\r\nimport asyncio\r\nasyncio.run(async_generate())\r\n```\r\n\r\nOutput:\r\n\r\n```\r\ncontent=\"J'adore beaucoup la programmation et les choses et les trucs.\" additional_kwargs={} example=False\r\ngenerations=[[ChatGeneration(text=\"J'adore la programmation.\", generation_info={'finish_reason': 'stop'}, message=AIMessage(content=\"J'adore la programmation.\", additional_kwargs={}, example=False))], [ChatGeneration(text=\"J'adore l'intelligence artificielle.\", generation_info={'finish_reason': 'stop'}, message=AIMessage(content=\"J'adore l'intelligence artificielle.\", additional_kwargs={}, example=False))]] llm_output={} run=[RunInfo(run_id=UUID('67e32bd6-c451-4196-ba77-e907c5cfcac7')), RunInfo(run_id=UUID('a08b7b88-e5e4-429c-85f6-b45bca942470'))]\r\ngenerations=[[ChatGeneration(text=\"J'adore la programmation.\", generation_info={'finish_reason': 'stop'}, message=AIMessage(content=\"J'adore la programmation.\", additional_kwargs={}, example=False))], [ChatGeneration(text=\"J'adore l'intelligence artificielle.\", generation_info={'finish_reason': 'stop'}, message=AIMessage(content=\"J'adore l'intelligence artificielle.\", additional_kwargs={}, example=False))]] llm_output={} run=[RunInfo(run_id=UUID('9e3f3e0f-b051-40be-9ac7-7d903cc9ab78')), RunInfo(run_id=UUID('e7e63364-aa1b-47e4-9082-1763b17ad9cd'))]\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8195/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8195/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8194",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8194/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8194/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8194/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8194",
        "id": 1818945223,
        "node_id": "I_kwDOIPDwls5saubH",
        "number": 8194,
        "title": "SupabaseHybridSearch as in langchainjs",
        "user": {
            "login": "halyearzero",
            "id": 140323441,
            "node_id": "U_kgDOCF0qcQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/140323441?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/halyearzero",
            "html_url": "https://github.com/halyearzero",
            "followers_url": "https://api.github.com/users/halyearzero/followers",
            "following_url": "https://api.github.com/users/halyearzero/following{/other_user}",
            "gists_url": "https://api.github.com/users/halyearzero/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/halyearzero/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/halyearzero/subscriptions",
            "organizations_url": "https://api.github.com/users/halyearzero/orgs",
            "repos_url": "https://api.github.com/users/halyearzero/repos",
            "events_url": "https://api.github.com/users/halyearzero/events{/privacy}",
            "received_events_url": "https://api.github.com/users/halyearzero/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-24T18:44:22Z",
        "updated_at": "2023-10-19T08:27:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nHybrid search for Supabase in the python version of Langchain would be much appreciated:\r\n\r\n[Supabase Hybrid Search](https://js.langchain.com/docs/modules/data_connection/retrievers/integrations/supabase-hybrid/)\r\n\r\n[langchain/src/retrievers/supabase.ts](https://github.com/hwchase17/langchainjs/blob/main/langchain/src/retrievers/supabase.ts)\r\n\r\n\n\n### Motivation\n\nBetter retrieval performance\n\n### Your contribution\n\nI've done some work using [langchain.schema.retriever.BaseRetriever](https://api.python.langchain.com/en/latest/schema/langchain.schema.retriever.BaseRetriever.html#langchain.schema.retriever.BaseRetriever) as a template, but it's not working and I'm not sure i'll have time to figure it out:\r\n\r\n```\r\nfrom pydantic import BaseModel, Field\r\nfrom supabase.client import Client, create_client\r\nfrom langchain.embeddings.base import Embeddings\r\nfrom langchain.docstore.document import Document\r\nfrom langchain.schema.retriever import BaseRetriever\r\nfrom langchain.callbacks.manager import Callbacks, CallbackManagerForRetrieverRun\r\nfrom pydantic import BaseModel, Field, validator\r\n\r\nfrom dataclasses import dataclass\r\nfrom typing import List, Dict, Optional, Any\r\nimport asyncio\r\n\r\nclass SearchEmbeddingsParams:\r\n    def __init__(self, query_embedding, match_count):\r\n        self.query_embedding = query_embedding\r\n        self.match_count = match_count\r\n\r\nclass SearchKeywordParams:\r\n    def __init__(self, query_text, match_count):\r\n        self.query_text = query_text\r\n        self.match_count = match_count\r\n\r\nclass SearchResponseRow:\r\n    def __init__(self, id, content, metadata, similarity):\r\n        self.id = id\r\n        self.content = content\r\n        self.metadata = metadata\r\n        self.similarity = similarity\r\n\r\nclass SearchResult:\r\n    def __init__(self, document, number1, number2):\r\n        self.document = document\r\n        self.number1 = number1\r\n        self.number2 = number2\r\n\r\n\r\nclass SupabaseHybridSearch(BaseRetriever, BaseModel):\r\n\r\n    embeddings: Any\r\n    client: Client\r\n    table_name: str = \"documents\"\r\n    similarity_query_name: str = \"match_documents\"\r\n    keyword_query_name: str = \"kw_match_documents\"\r\n    similarity_k: int = 2\r\n    keyword_k: int = 2\r\n\r\n    class Config:\r\n        arbitrary_types_allowed = True\r\n\r\n    async def similarity_search(self, query, k, _callbacks=None):\r\n        # embedded_query = await self.embeddings.embed_query(query)\r\n        embedded_query = self.embeddings.embed_query(query)\r\n        match_documents_params = SearchEmbeddingsParams(embedded_query, k)\r\n        res = self.client.rpc(self.similarity_query_name, match_documents_params.__dict__).execute()\r\n        searches, error = self.client.rpc(self.similarity_query_name, match_documents_params)\r\n\r\n        if error:\r\n            raise Exception(f\"Error searching for documents: {error.code} {error.message} {error.details}\")\r\n\r\n        return [SearchResult(Document(metadata=resp.metadata, pageContent=resp.content), \r\n                resp.similarity, resp.id) for resp in searches]\r\n\r\n    async def keyword_search(self, query, k):\r\n        kw_match_documents_params = SearchKeywordParams(query, k)\r\n        searches, error = await self.client.rpc(self.keyword_query_name, kw_match_documents_params)\r\n\r\n        if error:\r\n            raise Exception(f\"Error searching for documents: {error.code} {error.message} {error.details}\")\r\n\r\n        return [SearchResult(Document(metadata=resp.metadata, pageContent=resp.content), \r\n                resp.similarity * 10, resp.id) for resp in searches]\r\n\r\n    async def hybrid_search(self, query, similarity_k, keyword_k, callbacks=None):\r\n        similarity_search = self.similarity_search(query, similarity_k, callbacks)\r\n\r\n        similarity_search = self.similarity_search(query, similarity_k, callbacks)\r\n        keyword_search = self.keyword_search(query, keyword_k)\r\n\r\n        results = [result for sublist in await asyncio.gather(similarity_search, keyword_search) for result in sublist]\r\n\r\n        picks = {}\r\n        for result in results:\r\n            id, nextScore = result.number2, result.number1\r\n            prevScore = picks.get(id)\r\n\r\n            if prevScore is None or nextScore > prevScore:\r\n                picks[id] = result\r\n\r\n        return sorted(picks.values(), key=lambda result: result.number1, reverse=True)\r\n\r\n    def _get_relevant_documents(self, query: str) -> List[Document]:\r\n        raise NotImplementedError\r\n\r\n    async def _aget_relevant_documents(self, query: str) -> List[Document]:\r\n        searchResults = await self.hybrid_search(query, self.similarity_k, self.keyword_k, None)\r\n        return [result.document for result in searchResults]\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8194/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8194/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8193",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8193/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8193/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8193/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8193",
        "id": 1818930791,
        "node_id": "PR_kwDOIPDwls5WQkXs",
        "number": 8193,
        "title": "bump lc241 exp3",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-24T18:34:49Z",
        "updated_at": "2023-07-24T18:52:45Z",
        "closed_at": "2023-07-24T18:52:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8193",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8193",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8193.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8193.patch",
            "merged_at": "2023-07-24T18:52:44Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8193/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8193/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8192",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8192/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8192/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8192/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8192",
        "id": 1818906597,
        "node_id": "PR_kwDOIPDwls5WQfYQ",
        "number": 8192,
        "title": "undo bump",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-24T18:18:05Z",
        "updated_at": "2023-07-24T18:32:18Z",
        "closed_at": "2023-07-24T18:32:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8192",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8192",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8192.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8192.patch",
            "merged_at": "2023-07-24T18:32:17Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8192/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8192/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8191",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8191/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8191/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8191/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8191",
        "id": 1818887142,
        "node_id": "PR_kwDOIPDwls5WQbF0",
        "number": 8191,
        "title": "Refactored `formatting`",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-24T18:04:02Z",
        "updated_at": "2023-07-24T18:48:18Z",
        "closed_at": "2023-07-24T18:34:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8191",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8191",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8191.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8191.patch",
            "merged_at": "2023-07-24T18:34:15Z"
        },
        "body": "Refactored `formatting.py`. The same as https://github.com/langchain-ai/langchain/pull/7961 #8098 #8099 \r\nformatting.py is in the root code folder. This creates the `langchain.formatting: Formatting` group on the API Reference navigation ToC, on the same level as Chains and Agents which is incorrect.\r\n\r\nRefactoring:\r\n\r\n- moved formatting.py content into utils/formatting.py\r\n- I did not add the backwards compatibility ref in the original formatting.py. It seems unnecessary.\r\n\r\n@hwchase17, @baskaryan\r\n ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8191/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8191/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8190",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8190/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8190/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8190/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8190",
        "id": 1818861918,
        "node_id": "I_kwDOIPDwls5saaFe",
        "number": 8190,
        "title": "Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.embedding.Embedding'>",
        "user": {
            "login": "sarthak263",
            "id": 39146313,
            "node_id": "MDQ6VXNlcjM5MTQ2MzEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/39146313?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sarthak263",
            "html_url": "https://github.com/sarthak263",
            "followers_url": "https://api.github.com/users/sarthak263/followers",
            "following_url": "https://api.github.com/users/sarthak263/following{/other_user}",
            "gists_url": "https://api.github.com/users/sarthak263/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sarthak263/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sarthak263/subscriptions",
            "organizations_url": "https://api.github.com/users/sarthak263/orgs",
            "repos_url": "https://api.github.com/users/sarthak263/repos",
            "events_url": "https://api.github.com/users/sarthak263/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sarthak263/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-07-24T17:47:03Z",
        "updated_at": "2023-12-08T16:10:32Z",
        "closed_at": "2023-12-08T16:06:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI am getting an error on FAISS.from_documents(). \"openai.error.InvalidRequestError: Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.embedding.Embedding'>\" I tried everything and did they change something recently? This code worked fine and now it doesn't not sure what has changed. I used Chroma.from_documents as well and I still get the same error.\r\n\r\n```\r\nopenai.api_type = \"azure\"\r\nopenai.api_version = os.environ[\"OPENAI_API_VERSION\"]\r\nopenai.api_base = os.environ[\"OPENAI_API_BASE\"]\r\nopenai.api_key = os.environ[\"OPENAI_API_KEY\"]\r\n\r\nbot.gpt_turbo = Model_LLM(OPENAI_DEPLOYMENT_NAME).model\r\n\r\nembeddings = OpenAIEmbeddings(model=OPENAI_EMBEDDING_MODEL_NAME)\r\n\r\nfileLoaded = FileLoader(\"Data/filename.pdf\", TokenTextSplitter(chunk_size=1000, chunk_overlap=1))\r\n\r\ntext = fileLoaded.load_file()\r\n#vectorStore = Chroma.from_documents(text,embedding=embeddings)\r\nvectorStore = FAISS.from_documents(text,embedding=embeddings)\r\n\r\nqa = RetrievalEngine(llm=bot.gpt_turbo, retriever=vectorStore.as_retriever(),chain_type=\"stuff\")\r\n\r\n#query = \"Please give me the list of sampleID\"\r\n\r\nwhile True:\r\n    askQuestion  = input(\"Ask me a question about the file?: \")\r\n    print(qa.initialize_qa_engine().run(askQuestion))\r\n\r\n\r\n#Class Code\r\n\r\nimport os\r\nfrom langchain.chains import RetrievalQA, ConversationalRetrievalChain\r\nfrom langchain.chat_models import AzureChatOpenAI\r\nfrom langchain.document_loaders import Docx2txtLoader, PyPDFLoader, CSVLoader, UnstructuredFileLoader\r\n\r\n\r\nclass Model_LLM:\r\n    def __init__(self, deployment_name):\r\n        self.model = AzureChatOpenAI(deployment_name=deployment_name)\r\n\r\nclass FileLoader:\r\n    def __init__(self, file, text_splitter):\r\n        self.file = file\r\n        self.text_splitter = text_splitter\r\n        self._ext = os.path.splitext(self.file)[-1].lower()\r\n\r\n    def load_file(self):\r\n        if self._ext in ['.docx', '.doc']:\r\n            return self._call_file_loader(Docx2txtLoader)\r\n        elif self._ext == '.pdf':\r\n            return self._call_file_loader(PyPDFLoader)\r\n        elif self._ext in ['.csv']:\r\n            return self._call_file_loader(CSVLoader)\r\n        #elif self._ext in ['.json']:\r\n            #return self._call_file_loader(JSONLoader)\r\n        elif self._ext in ['.txt', '.json']:\r\n            return self._call_file_loader(UnstructuredFileLoader)\r\n        else:\r\n            return []\r\n\r\n    def _call_file_loader(self, loader_class):\r\n\r\n        loader = loader_class(self.file)\r\n        _text  = loader.load_and_split(text_splitter=self.text_splitter)\r\n        #documents = loader.load()\r\n        #_text = self.text_splitter.split_documents(documents)\r\n\r\n        return _text\r\n\r\n\r\nclass RetrievalEngine:\r\n    def __init__(self, llm, retriever, chain_type='stuff', max_tokens=500):\r\n        self.llm = llm\r\n        self.retriever = retriever\r\n        self.chain_type = chain_type\r\n        self.max_tokens = max_tokens\r\n\r\n    def initialize_qa_engine(self):\r\n        return RetrievalQA.from_chain_type(llm=self.llm,\r\n                                                           chain_type=self.chain_type,\r\n                                                           retriever=self.retriever,\r\n                                                           return_source_documents=False)\r\n\r\n    def initialize_chat_engine(self):\r\n        return ConversationalRetrievalChain.from_llm(self.llm,\r\n                                                     retriever=self.retriever,\r\n                                                     max_tokens_limit=self.max_tokens)\r\n\r\n```\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\spate246\\source\\repos\\Assay-Development\\Azure_OpenAI\\main.py\", line 13, in <module>\r\n    vectorstore = Chroma.from_documents(documents=text,embedding=OpenAIEmbeddings())\r\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\spate246\\source\\repos\\Assay-Development\\Azure_OpenAI\\Lib\\site-packages\\langchain\\vectorstores\\chroma.py\", line 578, in from_documents\r\n    return cls.from_texts(\r\n           ^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\spate246\\source\\repos\\Assay-Development\\Azure_OpenAI\\Lib\\site-packages\\langchain\\vectorstores\\chroma.py\", line 542, in from_texts\r\n    chroma_collection.add_texts(texts=texts, metadatas=metadatas, ids=ids)\r\n  File \"C:\\Users\\spate246\\source\\repos\\Assay-Development\\Azure_OpenAI\\Lib\\site-packages\\langchain\\vectorstores\\chroma.py\", line 175, in add_texts\r\n    embeddings = self._embedding_function.embed_documents(list(texts))\r\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\spate246\\source\\repos\\Assay-Development\\Azure_OpenAI\\Lib\\site-packages\\langchain\\embeddings\\openai.py\", line 508, in embed_documents\r\n    return self._get_len_safe_embeddings(texts, engine=self.deployment)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\spate246\\source\\repos\\Assay-Development\\Azure_OpenAI\\Lib\\site-packages\\langchain\\embeddings\\openai.py\", line 358, in _get_len_safe_embeddings\r\n    response = embed_with_retry(\r\n               ^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\spate246\\source\\repos\\Assay-Development\\Azure_OpenAI\\Lib\\site-packages\\langchain\\embeddings\\openai.py\", line 107, in embed_with_retry\r\n    return _embed_with_retry(**kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\spate246\\source\\repos\\Assay-Development\\Azure_OpenAI\\Lib\\site-packages\\tenacity\\__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n           ^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\spate246\\source\\repos\\Assay-Development\\Azure_OpenAI\\Lib\\site-packages\\tenacity\\__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\spate246\\source\\repos\\Assay-Development\\Azure_OpenAI\\Lib\\site-packages\\tenacity\\__init__.py\", line 314, in iter\r\n    return fut.result()\r\n           ^^^^^^^^^^^^\r\n  File \"C:\\Users\\spate246\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\r\n    return self.__get_result()\r\n           ^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\spate246\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\r\n    raise self._exception\r\n  File \"C:\\Users\\spate246\\source\\repos\\Assay-Development\\Azure_OpenAI\\Lib\\site-packages\\tenacity\\__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n             ^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\spate246\\source\\repos\\Assay-Development\\Azure_OpenAI\\Lib\\site-packages\\langchain\\embeddings\\openai.py\", line 104, in _embed_with_retry\r\n    response = embeddings.client.create(**kwargs)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\spate246\\source\\repos\\Assay-Development\\Azure_OpenAI\\Lib\\site-packages\\openai\\api_resources\\embedding.py\", line 33, in create\r\n    response = super().create(*args, **kwargs)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\spate246\\source\\repos\\Assay-Development\\Azure_OpenAI\\Lib\\site-packages\\openai\\api_resources\\abstract\\engine_api_resource.py\", line 149, in create\r\n    ) = cls.__prepare_create_request(\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\spate246\\source\\repos\\Assay-Development\\Azure_OpenAI\\Lib\\site-packages\\openai\\api_resources\\abstract\\engine_api_resource.py\", line 83, in __prepare_create_request\r\n    raise error.InvalidRequestError(\r\nopenai.error.InvalidRequestError: Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.embedding.Embedding'>\r\n```\n\n### Expected behavior\n\nI would expect it not have this issue because it has worked before. It would run the while loop and the user can ask the questions.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8190/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8190/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8189",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8189/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8189/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8189/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8189",
        "id": 1818858017,
        "node_id": "PR_kwDOIPDwls5WQUnL",
        "number": 8189,
        "title": "redirect",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-24T17:44:06Z",
        "updated_at": "2023-07-24T17:50:45Z",
        "closed_at": "2023-07-24T17:45:12Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8189",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8189",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8189.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8189.patch",
            "merged_at": "2023-07-24T17:45:12Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8189/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8189/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8188",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8188/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8188/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8188/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8188",
        "id": 1818810756,
        "node_id": "PR_kwDOIPDwls5WQKR8",
        "number": 8188,
        "title": "Bagatur/vercel test 3",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-24T17:09:52Z",
        "updated_at": "2023-07-24T17:11:55Z",
        "closed_at": "2023-07-24T17:11:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8188",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8188",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8188.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8188.patch",
            "merged_at": "2023-07-24T17:11:54Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8188/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8188/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8187",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8187/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8187/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8187/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8187",
        "id": 1818809232,
        "node_id": "PR_kwDOIPDwls5WQJ8y",
        "number": 8187,
        "title": "Expanding support for graphql tooling for more diverse graphql use ca\u2026",
        "user": {
            "login": "aerrober",
            "id": 137232778,
            "node_id": "U_kgDOCC4Big",
            "avatar_url": "https://avatars.githubusercontent.com/u/137232778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aerrober",
            "html_url": "https://github.com/aerrober",
            "followers_url": "https://api.github.com/users/aerrober/followers",
            "following_url": "https://api.github.com/users/aerrober/following{/other_user}",
            "gists_url": "https://api.github.com/users/aerrober/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aerrober/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aerrober/subscriptions",
            "organizations_url": "https://api.github.com/users/aerrober/orgs",
            "repos_url": "https://api.github.com/users/aerrober/repos",
            "events_url": "https://api.github.com/users/aerrober/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aerrober/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 14,
        "created_at": "2023-07-24T17:08:40Z",
        "updated_at": "2023-09-22T17:36:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8187",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8187",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8187.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8187.patch",
            "merged_at": null
        },
        "body": "### Expanding the previous support for graphql tooling to fix some bugs and make it more accessible to diverse graphql use cases.\r\n\r\nNote: this was a previous PR but became out of sync with lanchain so I rebased it, which somehow closed the other PR. This is the same code as here: https://github.com/langchain-ai/langchain/pull/6566\r\n\r\nChanges:\r\n\r\n1. Previous 'custom_headers' flag did not work as it wasn't hooked into the _EXTRA_LLM_TOOLS dict correctly, fixed that\r\n2. Addition of flag for custom_transport_auth which enables signing request with sigV4 (aws appsync benefits from this)\r\n3. Addition of automatic schema loading \r\n  - runs introspection query when tool is initialized and injects the schema into the tool description for model use\r\n  - removes redundant information from the schema before adding to prompt to avoid model confusion\r\n  - flag disable_schema_load can be used to disable and revert to previous functionality\r\n4. Adds a try ... except around execution as not all graphql errors are serializable as langchain wants, prevents chain from crashing in these cases\r\n\r\n#### Examples\r\n\r\nUsers can now use more diverse auth modes and have a more streamlined code implementation.\r\n\r\n```\r\n# Using an Api Key\r\nappsync_tool = load_tools(\r\n  ['graphql'], \r\n  graphql_endpoint=\"...\", \r\n  custom_headers={'x-api-key': '...'}, \r\n  llm=OpenAI()\r\n)\r\n```\r\n\r\n```\r\n# Using AWS IAM signing\r\n\r\ncredentials = boto3.Session().get_credentials()\r\nregion = os.getenv(\"AWS_REGION\", \"us-east-1\")\r\n\r\nawsauth = AWS4Auth(\r\n    credentials.access_key,\r\n    credentials.secret_key,\r\n    region,\r\n    \"appsync\",\r\n    session_token=credentials.token,\r\n)\r\n\r\nappsync_signed_requests_tool = load_tools(\r\n  ['graphql'], \r\n  graphql_endpoint=\"...\", \r\n  custom_transport_auth=awsauth,\r\n  llm=OpenAI()\r\n)\r\n```\r\n\r\nIn both cases there is no longer a need for the schema to be provided, its now pulled automatically.\r\n\r\n```\r\n# Using an agent like this\r\nagent = initialize_agent(\r\n    appsync_tool,\r\n    llm,\r\n    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,\r\n    verbose=True,\r\n)\r\n```\r\n\r\nWe can then query with:\r\n\r\n```\r\nagent.run('Who is not friends with bailey?')\r\n```\r\n\r\nThen results in a prompt like below:\r\n\r\n```\r\nAnswer the following questions as best you can. You have access to the following tools:\r\n\r\nquery_graphql:     Input to this tool is a detailed and correct GraphQL query, output is a result from the API.\r\n    If the query is not correct, an error message will be returned.\r\n    If an error is returned with 'Bad request' in it, rewrite the query and try again.\r\n    If an error is returned with 'Unauthorized' in it, do not try again, but tell the user to change their authentication.\r\n\r\n    Use the following schema for your queries: \r\n    type Query {\r\n      \"\"\"  Gets your own account info\"\"\"\r\n      self: User\r\n    \r\n      \"\"\"  Get all accounts\"\"\"\r\n      users: [User]\r\n    }\r\n    \r\n    type User {\r\n      id: String\r\n      name: String\r\n      friends: [UserRelation]\r\n    }\r\n    \r\n    type UserRelation {\r\n      user: User\r\n    }\r\n    \r\n    type Mutation {\r\n      \"\"\"  Takes in a parameter of post which is a new post object. Its assumed to be created by you\r\n      \"\"\"\r\n      createPost(post: NewPost): Post\r\n    }\r\n    \r\n    \"\"\"  A post on the system\"\"\"\r\n    type Post {\r\n      id: String\r\n      title: String\r\n      content: String\r\n      author: User\r\n    }\r\n    \r\n    \"\"\"  A partial object that is used to create a new post\"\"\"\r\n    input NewPost {\r\n      title: String\r\n      content: String\r\n    }\r\n    \r\n\r\nUse the following format:\r\n\r\nQuestion: the input question you must answer\r\nThought: you should always think about what to do\r\nAction: the action to take, should be one of [query_graphql]\r\nAction Input: the input to the action\r\nObservation: the result of the action\r\n... (this Thought/Action/Action Input/Observation can repeat N times)\r\nThought: I now know the final answer\r\nFinal Answer: the final answer to the original input question\r\n\r\nBegin!\r\n```\r\n\r\n#### Who can review?\r\n\r\n@hwchase17\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8187/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8187/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8186",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8186/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8186/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8186/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8186",
        "id": 1818783674,
        "node_id": "PR_kwDOIPDwls5WQEaH",
        "number": 8186,
        "title": "Extend Cube Semantic Loader functionality",
        "user": {
            "login": "MikeNitsenko",
            "id": 18572161,
            "node_id": "MDQ6VXNlcjE4NTcyMTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/18572161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MikeNitsenko",
            "html_url": "https://github.com/MikeNitsenko",
            "followers_url": "https://api.github.com/users/MikeNitsenko/followers",
            "following_url": "https://api.github.com/users/MikeNitsenko/following{/other_user}",
            "gists_url": "https://api.github.com/users/MikeNitsenko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MikeNitsenko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MikeNitsenko/subscriptions",
            "organizations_url": "https://api.github.com/users/MikeNitsenko/orgs",
            "repos_url": "https://api.github.com/users/MikeNitsenko/repos",
            "events_url": "https://api.github.com/users/MikeNitsenko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MikeNitsenko/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-24T16:49:08Z",
        "updated_at": "2023-07-24T19:11:58Z",
        "closed_at": "2023-07-24T19:11:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8186",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8186",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8186.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8186.patch",
            "merged_at": "2023-07-24T19:11:58Z"
        },
        "body": "**PR Description:**\r\n\r\nThis pull request introduces several enhancements and new features to the `CubeSemanticLoader`. The changes include the following:\r\n\r\n1. Added imports for the `json` and `time` modules.\r\n2. Added new constructor parameters: `load_dimension_values`, `dimension_values_limit`, `dimension_values_max_retries`, and `dimension_values_retry_delay`.\r\n3. Updated the class documentation with descriptions for the new constructor parameters.\r\n4. Added a new private method `_get_dimension_values()` to retrieve dimension values from Cube's REST API.\r\n5. Modified the `load()` method to load dimension values for string dimensions if `load_dimension_values` is set to `True`.\r\n6. Updated the API endpoint in the `load()` method from the base URL to the metadata endpoint.\r\n7. Refactored the code to retrieve metadata from the response JSON.\r\n8. Added the `column_member_type` field to the metadata dictionary to indicate if a column is a measure or a dimension.\r\n9. Added the `column_values` field to the metadata dictionary to store the dimension values retrieved from Cube's API.\r\n10. Modified the `page_content` construction to include the column title and description instead of the table name, column name, data type, title, and description.\r\n\r\nThese changes improve the functionality and flexibility of the `CubeSemanticLoader` class by allowing the loading of dimension values and providing more detailed metadata for each document.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8186/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8186/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8185",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8185/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8185/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8185/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8185",
        "id": 1818775624,
        "node_id": "I_kwDOIPDwls5saFBI",
        "number": 8185,
        "title": "AttributeError: 'Redis' object has no attribute '_Redis__get_retriever_tags'. Did you mean: '_VectorStore__get_retriever_tags'?",
        "user": {
            "login": "Revanth-guduru-balaji",
            "id": 66727119,
            "node_id": "MDQ6VXNlcjY2NzI3MTE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/66727119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Revanth-guduru-balaji",
            "html_url": "https://github.com/Revanth-guduru-balaji",
            "followers_url": "https://api.github.com/users/Revanth-guduru-balaji/followers",
            "following_url": "https://api.github.com/users/Revanth-guduru-balaji/following{/other_user}",
            "gists_url": "https://api.github.com/users/Revanth-guduru-balaji/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Revanth-guduru-balaji/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Revanth-guduru-balaji/subscriptions",
            "organizations_url": "https://api.github.com/users/Revanth-guduru-balaji/orgs",
            "repos_url": "https://api.github.com/users/Revanth-guduru-balaji/repos",
            "events_url": "https://api.github.com/users/Revanth-guduru-balaji/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Revanth-guduru-balaji/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-07-24T16:43:01Z",
        "updated_at": "2023-11-06T16:06:35Z",
        "closed_at": "2023-11-06T16:06:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain ==  0.0.240\r\nPython 3.10.9\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.chains import RetrievalQA\r\nfrom langchain.indexes import VectorstoreIndexCreator\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\n\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.document_loaders import PyPDFLoader\r\nimport os \r\nfrom langchain.vectorstores.redis import Redis\r\n\r\n\r\n\r\n\r\nloader = PyPDFLoader(\"test.pdf\")\r\ndocuments = loader.load()\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\ntexts = text_splitter.split_documents(documents)\r\nembeddings = OpenAIEmbeddings( deployment=\"text-embedding-ada-002\",model=\"text-embedding-ada-002\",chunk_size=1)\r\ndb = Redis.from_documents(\r\n    texts, embeddings, redis_url=\"redis://localhost:6379\", index_name=\"link\"\r\n)\r\nretriever = db.as_retriever(search_type=\"similarity\", search_kwargs={\"k\":2})\r\nqa = RetrievalQA.from_chain_type(\r\n    llm=OpenAI(), chain_type=\"stuff\", retriever=retriever, return_source_documents=True)\r\nquery = \"What is Compilance\"\r\nresult = qa({\"query\": query})\r\n\r\nprint(result)\r\n\r\n\n\n### Expected behavior\n\nGetting the result of the query but having error at as_retriver() like  AttributeError: 'Redis' object has no attribute '_Redis__get_retriever_tags'. Did you mean: '_VectorStore__get_retriever_tags'?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8185/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8185/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8184",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8184/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8184/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8184/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8184",
        "id": 1818702146,
        "node_id": "I_kwDOIPDwls5sZzFC",
        "number": 8184,
        "title": "AttributeError: 'Redis' object has no attribute '_Redis__get_retriever_tags'. Did you mean: '_VectorStore__get_retriever_tags'?",
        "user": {
            "login": "Revanth-guduru-balaji",
            "id": 66727119,
            "node_id": "MDQ6VXNlcjY2NzI3MTE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/66727119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Revanth-guduru-balaji",
            "html_url": "https://github.com/Revanth-guduru-balaji",
            "followers_url": "https://api.github.com/users/Revanth-guduru-balaji/followers",
            "following_url": "https://api.github.com/users/Revanth-guduru-balaji/following{/other_user}",
            "gists_url": "https://api.github.com/users/Revanth-guduru-balaji/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Revanth-guduru-balaji/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Revanth-guduru-balaji/subscriptions",
            "organizations_url": "https://api.github.com/users/Revanth-guduru-balaji/orgs",
            "repos_url": "https://api.github.com/users/Revanth-guduru-balaji/repos",
            "events_url": "https://api.github.com/users/Revanth-guduru-balaji/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Revanth-guduru-balaji/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-24T15:55:00Z",
        "updated_at": "2023-07-24T16:39:27Z",
        "closed_at": "2023-07-24T16:39:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8184/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8184/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8183",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8183/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8183/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8183/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8183",
        "id": 1818647635,
        "node_id": "PR_kwDOIPDwls5WPm24",
        "number": 8183,
        "title": "redirects",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-24T15:23:43Z",
        "updated_at": "2023-07-24T15:32:50Z",
        "closed_at": "2023-07-24T15:32:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8183",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8183",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8183.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8183.patch",
            "merged_at": "2023-07-24T15:32:49Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8183/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8183/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8182",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8182/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8182/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8182/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8182",
        "id": 1818564998,
        "node_id": "PR_kwDOIPDwls5WPU0b",
        "number": 8182,
        "title": "Bagatur/bump 241",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-24T14:39:23Z",
        "updated_at": "2023-07-24T15:30:51Z",
        "closed_at": "2023-07-24T14:47:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8182",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8182",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8182.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8182.patch",
            "merged_at": "2023-07-24T14:47:40Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8182/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8182/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8181",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8181/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8181/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8181/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8181",
        "id": 1818532496,
        "node_id": "I_kwDOIPDwls5sZJqQ",
        "number": 8181,
        "title": "Issue: Using HuggingFace Inference Endpoint as LLM in QA Chain",
        "user": {
            "login": "kmaurinjones",
            "id": 67940001,
            "node_id": "MDQ6VXNlcjY3OTQwMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/67940001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kmaurinjones",
            "html_url": "https://github.com/kmaurinjones",
            "followers_url": "https://api.github.com/users/kmaurinjones/followers",
            "following_url": "https://api.github.com/users/kmaurinjones/following{/other_user}",
            "gists_url": "https://api.github.com/users/kmaurinjones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kmaurinjones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kmaurinjones/subscriptions",
            "organizations_url": "https://api.github.com/users/kmaurinjones/orgs",
            "repos_url": "https://api.github.com/users/kmaurinjones/repos",
            "events_url": "https://api.github.com/users/kmaurinjones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kmaurinjones/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-24T14:21:40Z",
        "updated_at": "2023-10-31T16:05:25Z",
        "closed_at": "2023-10-31T16:05:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nHi there, I've been trying to come up with a system that can do the following:\r\n\r\n1. take in a string as input (much longer len than the 512 token limit of the flan-t5-large model I'm using)\r\n2. Use vector db (currently using FAISS) + langchain to index and query for relevant chunks\r\n3. Use a model I've deployed at a HF endpoint to get inference for a question I have relating to the data\r\n\r\nI've been able to achieve this just fine using the Huggingfacehub() class to create the LLM for the chain, but this uses the HF free inference endpoint, which of course has rate limits and is slow, which is why I'd like to use my own endpoint. I have not been able to find a way to use my endpoint in place of the free endpoint, and I've looked everywhere. I'm hoping it's something simple I've overlooked but any help would be greatly appreciated.\r\n\r\nIt would amazing I could see a specific Python example. Thanks in advance.\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8181/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8181/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8180",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8180/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8180/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8180/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8180",
        "id": 1818531574,
        "node_id": "PR_kwDOIPDwls5WPNmk",
        "number": 8180,
        "title": "ElasticKnnSearch rewrite - bug fix - return Document",
        "user": {
            "login": "jeffvestal",
            "id": 53237856,
            "node_id": "MDQ6VXNlcjUzMjM3ODU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/53237856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffvestal",
            "html_url": "https://github.com/jeffvestal",
            "followers_url": "https://api.github.com/users/jeffvestal/followers",
            "following_url": "https://api.github.com/users/jeffvestal/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffvestal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffvestal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffvestal/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffvestal/orgs",
            "repos_url": "https://api.github.com/users/jeffvestal/repos",
            "events_url": "https://api.github.com/users/jeffvestal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffvestal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-24T14:21:09Z",
        "updated_at": "2023-07-31T23:31:45Z",
        "closed_at": "2023-07-28T05:00:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8180",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8180",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8180.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8180.patch",
            "merged_at": "2023-07-28T05:00:18Z"
        },
        "body": "Fixes: \r\nhttps://github.com/hwchase17/langchain/issues/7117\r\nhttps://github.com/hwchase17/langchain/issues/5760\r\n\r\nAdding back `create_index` , `add_texts`, `from_texts` to ElasticKnnSearch\r\n\r\n`from_texts` matches standard `from_texts` methods as quick start up method\r\n\r\n`knn_search`  and `hybrid_result` return a list of [`Document()`, `score`,]\r\n\r\n# Test `from_texts` for quick start\r\n```\r\n# create new index using from_text\r\n\r\nfrom langchain.vectorstores.elastic_vector_search import ElasticKnnSearch\r\nfrom langchain.embeddings import ElasticsearchEmbeddings\r\n\r\nmodel_id = \"sentence-transformers__all-distilroberta-v1\" \r\ndims = 768\r\nes_cloud_id = \"\"\r\nes_user = \"\"\r\nes_password = \"\"\r\ntest_index = \"knn_test_index_305\"\r\n\r\nembeddings = ElasticsearchEmbeddings.from_credentials(\r\n    model_id,\r\n    #input_field=input_field,\r\n    es_cloud_id=es_cloud_id,\r\n    es_user=es_user,\r\n    es_password=es_password,\r\n)\r\n\r\n# add texts and create class instance\r\ntexts = [\"This is a test document\", \"This is another test document\"]\r\nknnvectorsearch = ElasticKnnSearch.from_texts(\r\n    texts=texts,\r\n    embedding=embeddings,\r\n    index_name= test_index,\r\n    vector_query_field='vector',\r\n    query_field='text',\r\n    model_id=model_id,\r\n    dims=dims,\r\n\tes_cloud_id=es_cloud_id, \r\n\tes_user=es_user, \r\n\tes_password=es_password\r\n)\r\n\r\n# Test `add_texts` method\r\ntexts2 = [\"Hello, world!\", \"Machine learning is fun.\", \"I love Python.\"]\r\nknnvectorsearch.add_texts(texts2)\r\n\r\nquery = \"Hello\"\r\nknn_result = knnvectorsearch.knn_search(query = query, model_id= model_id, k=2)\r\n\r\nhybrid_result = knnvectorsearch.knn_hybrid_search(query = query, model_id= model_id, k=2)\r\n\r\n```\r\n\r\nThe  mapping is as follows:\r\n```\r\n{\r\n  \"knn_test_index_012\": {\r\n    \"mappings\": {\r\n      \"properties\": {\r\n        \"text\": {\r\n          \"type\": \"text\"\r\n        },\r\n        \"vector\": {\r\n          \"type\": \"dense_vector\",\r\n          \"dims\": 768,\r\n          \"index\": true,\r\n          \"similarity\": \"dot_product\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n# Check response type\r\n```\r\n>>> hybrid_result\r\n[(Document(page_content='Hello, world!', metadata={}), 0.94232327), (Document(page_content='I love Python.', metadata={}), 0.5321523)]\r\n\r\n>>> hybrid_result[0]\r\n(Document(page_content='Hello, world!', metadata={}), 0.94232327)\r\n\r\n>>> hybrid_result[0][0]\r\nDocument(page_content='Hello, world!', metadata={})\r\n\r\n>>> type(hybrid_result[0][0])\r\n<class 'langchain.schema.document.Document'>\r\n```\r\n\r\n# Test with existing Index\r\n```\r\nfrom langchain.vectorstores.elastic_vector_search import ElasticKnnSearch\r\nfrom langchain.embeddings import ElasticsearchEmbeddings\r\n\r\n## Initialize ElasticsearchEmbeddings\r\nmodel_id = \"sentence-transformers__all-distilroberta-v1\" \r\ndims = 768\r\nes_cloud_id = \r\nes_user = \"\"\r\nes_password = \"\"\r\ntest_index = \"knn_test_index_012\"\r\n\r\nembeddings = ElasticsearchEmbeddings.from_credentials(\r\n    model_id,\r\n    es_cloud_id=es_cloud_id,\r\n    es_user=es_user,\r\n    es_password=es_password,\r\n)\r\n\r\n## Initialize ElasticKnnSearch\r\nknn_search = ElasticKnnSearch(\r\n\tes_cloud_id=es_cloud_id, \r\n\tes_user=es_user, \r\n\tes_password=es_password, \r\n\tindex_name= test_index, \r\n\tembedding= embeddings\r\n)\r\n\r\n\r\n## Test adding vectors\r\n\r\n### Test `add_texts` method when index created\r\ntexts = [\"Hello, world!\", \"Machine learning is fun.\", \"I love Python.\"]\r\nknn_search.add_texts(texts)\r\n\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8180/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8180/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8178",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8178/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8178/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8178/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8178",
        "id": 1818312666,
        "node_id": "I_kwDOIPDwls5sYT_a",
        "number": 8178,
        "title": "DOC: Langchain integration with sagemaker missing",
        "user": {
            "login": "debasisdwivedy",
            "id": 20119757,
            "node_id": "MDQ6VXNlcjIwMTE5NzU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/20119757?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/debasisdwivedy",
            "html_url": "https://github.com/debasisdwivedy",
            "followers_url": "https://api.github.com/users/debasisdwivedy/followers",
            "following_url": "https://api.github.com/users/debasisdwivedy/following{/other_user}",
            "gists_url": "https://api.github.com/users/debasisdwivedy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/debasisdwivedy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/debasisdwivedy/subscriptions",
            "organizations_url": "https://api.github.com/users/debasisdwivedy/orgs",
            "repos_url": "https://api.github.com/users/debasisdwivedy/repos",
            "events_url": "https://api.github.com/users/debasisdwivedy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/debasisdwivedy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-24T12:20:04Z",
        "updated_at": "2023-07-25T01:55:26Z",
        "closed_at": "2023-07-25T01:55:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nHi,\r\n\r\nThe integration document for langchain with AWS sagemaker has been removed.\r\nDo we have an updated doc for that.\r\n\r\n[https://python.langchain.com/docs/modules/model_io/models/llms/integrations/sagemaker.html](url)\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8178/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8178/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8177",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8177/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8177/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8177/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8177",
        "id": 1818244391,
        "node_id": "I_kwDOIPDwls5sYDUn",
        "number": 8177,
        "title": "Redis scores seems to be sorted from lowest to highest (with cosine)",
        "user": {
            "login": "FrancescoSaverioZuppichini",
            "id": 15908060,
            "node_id": "MDQ6VXNlcjE1OTA4MDYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/15908060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FrancescoSaverioZuppichini",
            "html_url": "https://github.com/FrancescoSaverioZuppichini",
            "followers_url": "https://api.github.com/users/FrancescoSaverioZuppichini/followers",
            "following_url": "https://api.github.com/users/FrancescoSaverioZuppichini/following{/other_user}",
            "gists_url": "https://api.github.com/users/FrancescoSaverioZuppichini/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FrancescoSaverioZuppichini/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FrancescoSaverioZuppichini/subscriptions",
            "organizations_url": "https://api.github.com/users/FrancescoSaverioZuppichini/orgs",
            "repos_url": "https://api.github.com/users/FrancescoSaverioZuppichini/repos",
            "events_url": "https://api.github.com/users/FrancescoSaverioZuppichini/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FrancescoSaverioZuppichini/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-24T11:40:47Z",
        "updated_at": "2023-09-15T14:26:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\npython = 3.10\r\nlangchain = 0.0.222\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nNot sure how to give you all the steps but here attached a screenshot of the debugger run at line `vectorstores.redis` 338 and as you can see it goes from the lowest to the highest. You can see the `vector_score` on the right\r\n\r\n<img width=\"1030\" alt=\"Screenshot 2023-07-24 at 13 40 28\" src=\"https://github.com/langchain-ai/langchain/assets/15908060/d9e5002e-8f31-4c68-acaf-f3e05ea1db63\">\r\n\n\n### Expected behavior\n\nI think it should return from highest to lowest",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8177/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8177/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8176",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8176/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8176/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8176/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8176",
        "id": 1818227516,
        "node_id": "I_kwDOIPDwls5sX_M8",
        "number": 8176,
        "title": "Dynamic instruction for instructor embeddings",
        "user": {
            "login": "komachi",
            "id": 1848785,
            "node_id": "MDQ6VXNlcjE4NDg3ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1848785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/komachi",
            "html_url": "https://github.com/komachi",
            "followers_url": "https://api.github.com/users/komachi/followers",
            "following_url": "https://api.github.com/users/komachi/following{/other_user}",
            "gists_url": "https://api.github.com/users/komachi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/komachi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/komachi/subscriptions",
            "organizations_url": "https://api.github.com/users/komachi/orgs",
            "repos_url": "https://api.github.com/users/komachi/repos",
            "events_url": "https://api.github.com/users/komachi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/komachi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-24T11:30:33Z",
        "updated_at": "2023-10-30T16:04:53Z",
        "closed_at": "2023-10-30T16:04:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nProvide a way to use instructor-based embeddings with dynamic instructions.\n\n### Motivation\n\nCurrently HuggingFaceInstructEmbeddings initialized with instruction. This create problems with using multiple instructions, because this basically force you to initialize different instance for each instruction you need.  This is not a limitation of a model, you don't need to load it with different instructions every time.\n\n### Your contribution\n\nI can make a PR with another method, something like `embed_instruction_pairs`, which would take an list of [instruction, query] values, but want to discuss it first.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8176/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8176/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8175",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8175/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8175/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8175/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8175",
        "id": 1818221332,
        "node_id": "PR_kwDOIPDwls5WOJfu",
        "number": 8175,
        "title": "Change WebBaseLoader metadata parsing to set missing metadata to descriptive string instead of `None`",
        "user": {
            "login": "zoeqevans",
            "id": 32969601,
            "node_id": "MDQ6VXNlcjMyOTY5NjAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/32969601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zoeqevans",
            "html_url": "https://github.com/zoeqevans",
            "followers_url": "https://api.github.com/users/zoeqevans/followers",
            "following_url": "https://api.github.com/users/zoeqevans/following{/other_user}",
            "gists_url": "https://api.github.com/users/zoeqevans/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zoeqevans/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zoeqevans/subscriptions",
            "organizations_url": "https://api.github.com/users/zoeqevans/orgs",
            "repos_url": "https://api.github.com/users/zoeqevans/repos",
            "events_url": "https://api.github.com/users/zoeqevans/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zoeqevans/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-24T11:26:27Z",
        "updated_at": "2023-07-25T11:06:29Z",
        "closed_at": "2023-07-24T19:17:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8175",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8175",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8175.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8175.patch",
            "merged_at": "2023-07-24T19:17:49Z"
        },
        "body": "Solves #8174 & #3542",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8175/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8175/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8174",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8174/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8174/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8174/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8174",
        "id": 1818206096,
        "node_id": "I_kwDOIPDwls5sX5-Q",
        "number": 8174,
        "title": "Basic Langchain Q&A use case example throws ValueError when `<html>` tag of website doesn't set `lang` attribute.",
        "user": {
            "login": "zoeqevans",
            "id": 32969601,
            "node_id": "MDQ6VXNlcjMyOTY5NjAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/32969601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zoeqevans",
            "html_url": "https://github.com/zoeqevans",
            "followers_url": "https://api.github.com/users/zoeqevans/followers",
            "following_url": "https://api.github.com/users/zoeqevans/following{/other_user}",
            "gists_url": "https://api.github.com/users/zoeqevans/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zoeqevans/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zoeqevans/subscriptions",
            "organizations_url": "https://api.github.com/users/zoeqevans/orgs",
            "repos_url": "https://api.github.com/users/zoeqevans/repos",
            "events_url": "https://api.github.com/users/zoeqevans/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zoeqevans/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-24T11:16:52Z",
        "updated_at": "2023-07-25T11:09:57Z",
        "closed_at": "2023-07-25T11:07:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n[Basic Langchain Q&A use case example](https://python.langchain.com/docs/use_cases/question_answering/) throws ValueError when `<html>` tag of website doesn't set `lang` attribute.\r\n\r\nIn particular, `WebBaseLoader` parses the website soup metadata with:\r\n\r\n```\r\ndef _build_metadata(soup: Any, url: str) -> dict:\r\n    \"\"\"Build metadata from BeautifulSoup output.\"\"\"\r\n    metadata = {\"source\": url}\r\n    if title := soup.find(\"title\"):\r\n        metadata[\"title\"] = title.get_text()\r\n    if description := soup.find(\"meta\", attrs={\"name\": \"description\"}):\r\n        metadata[\"description\"] = description.get(\"content\", None)\r\n    if html := soup.find(\"html\"):\r\n        metadata[\"language\"] = html.get(\"lang\", None)\r\n    return metadata\r\n```\r\n\r\nthus setting `metadata[\"language\"] = None` if there's no `lang` attribute for the `html` tag.\r\n\r\n`chromadb` then validates the metadata with:\r\n\r\n```\r\ndef validate_metadata(metadata: Metadata) -> Metadata:\r\n    \"\"\"Validates metadata to ensure it is a dictionary of strings to strings, ints, or floats\"\"\"\r\n    if not isinstance(metadata, dict) and metadata is not None:\r\n        raise ValueError(f\"Expected metadata to be a dict or None, got {metadata}\")\r\n    if metadata is None:\r\n        return metadata\r\n    if len(metadata) == 0:\r\n        raise ValueError(f\"Expected metadata to be a non-empty dict, got {metadata}\")\r\n    for key, value in metadata.items():\r\n        if not isinstance(key, str):\r\n            raise ValueError(\r\n                f\"Expected metadata key to be a str, got {key} which is a {type(key)}\"\r\n            )\r\n        # isinstance(True, int) evaluates to True, so we need to check for bools separately\r\n        if not isinstance(value, (str, int, float)) or isinstance(value, bool):\r\n            raise ValueError(\r\n                f\"Expected metadata value to be a str, int, or float, got {value} which is a {type(value)}\"\r\n            )\r\n    return metadata\r\n```\r\n\r\nand thus raises a ValueError whenever `metadata is None`.\r\n\r\nThe two obvious solutions:\r\n\r\n1) Change the metadata parser to return strings in the event they don't find a metadata tag:\r\n\r\n```\r\ndef _build_metadata(soup: Any, url: str) -> dict:\r\n    \"\"\"Build metadata from BeautifulSoup output.\"\"\"\r\n    metadata = {\"source\": url}\r\n    if title := soup.find(\"title\"):\r\n        metadata[\"title\"] = title.get_text()\r\n    if description := soup.find(\"meta\", attrs={\"name\": \"description\"}):\r\n        metadata[\"description\"] = description.get(\"content\", \"No description found.\")\r\n    if html := soup.find(\"html\"):\r\n        metadata[\"language\"] = html.get(\"lang\", \"No language found.\")\r\n    return metadata\r\n```\r\n\r\n2) Change the metadata validator in `chromadb` to accept metadata objects with of type `None`.\r\n\r\nOption 2 likely involves a lot of knock-on changes to `chromadb` to handle None-type metadata, so I'd prefer option 1, but defer to the maintainers. Will put up a quick PR for option 1 below for reference.\r\n\r\n\r\n\r\n**Full Stack Trace:**\r\n\r\nValueError                                Traceback (most recent call last)\r\nCell In[6], line 1\r\n----> 1 print(query_site(\"What is this article about?\", \"https://www.montyevans.com/sports-betting\"))\r\n\r\nCell In[5], line 6, in query_site(question, site_url)\r\n      4 if site_url not in memo_dict:\r\n      5     loader = WebBaseLoader(site_url)\r\n----> 6     index = VectorstoreIndexCreator().from_loaders([loader])\r\n      7     memo_dict[site_url] = index\r\n      9 site_index = memo_dict[site_url]\r\n\r\nFile [/Volumes/git/aipes/langchain/document_qa/langchain/langchain/indexes/vectorstore.py:73](https://file+.vscode-resource.vscode-cdn.net/Volumes/git/aipes/langchain/document_qa/langchain/langchain/indexes/vectorstore.py:73), in VectorstoreIndexCreator.from_loaders(self, loaders)\r\n     71 for loader in loaders:\r\n     72     docs.extend(loader.load())\r\n---> 73 return self.from_documents(docs)\r\n\r\nFile [/Volumes/git/aipes/langchain/document_qa/langchain/langchain/indexes/vectorstore.py:78](https://file+.vscode-resource.vscode-cdn.net/Volumes/git/aipes/langchain/document_qa/langchain/langchain/indexes/vectorstore.py:78), in VectorstoreIndexCreator.from_documents(self, documents)\r\n     76 \"\"\"Create a vectorstore index from documents.\"\"\"\r\n     77 sub_docs = self.text_splitter.split_documents(documents)\r\n---> 78 vectorstore = self.vectorstore_cls.from_documents(\r\n     79     sub_docs, self.embedding, **self.vectorstore_kwargs\r\n     80 )\r\n     81 return VectorStoreIndexWrapper(vectorstore=vectorstore)\r\n\r\nFile [/Volumes/git/aipes/langchain/document_qa/langchain/langchain/vectorstores/chroma.py:578](https://file+.vscode-resource.vscode-cdn.net/Volumes/git/aipes/langchain/document_qa/langchain/langchain/vectorstores/chroma.py:578), in Chroma.from_documents(cls, documents, embedding, ids, collection_name, persist_directory, client_settings, client, collection_metadata, **kwargs)\r\n    576 texts = [doc.page_content for doc in documents]\r\n    577 metadatas = [doc.metadata for doc in documents]\r\n--> 578 return cls.from_texts(\r\n    579     texts=texts,\r\n    580     embedding=embedding,\r\n    581     metadatas=metadatas,\r\n    582     ids=ids,\r\n    583     collection_name=collection_name,\r\n    584     persist_directory=persist_directory,\r\n    585     client_settings=client_settings,\r\n    586     client=client,\r\n    587     collection_metadata=collection_metadata,\r\n    588     **kwargs,\r\n    589 )\r\n\r\nFile [/Volumes/git/aipes/langchain/document_qa/langchain/langchain/vectorstores/chroma.py:542](https://file+.vscode-resource.vscode-cdn.net/Volumes/git/aipes/langchain/document_qa/langchain/langchain/vectorstores/chroma.py:542), in Chroma.from_texts(cls, texts, embedding, metadatas, ids, collection_name, persist_directory, client_settings, client, collection_metadata, **kwargs)\r\n    514 \"\"\"Create a Chroma vectorstore from a raw documents.\r\n    515 \r\n    516 If a persist_directory is specified, the collection will be persisted there.\r\n   (...)\r\n    531     Chroma: Chroma vectorstore.\r\n    532 \"\"\"\r\n    533 chroma_collection = cls(\r\n    534     collection_name=collection_name,\r\n    535     embedding_function=embedding,\r\n   (...)\r\n    540     **kwargs,\r\n    541 )\r\n--> 542 chroma_collection.add_texts(texts=texts, metadatas=metadatas, ids=ids)\r\n    543 return chroma_collection\r\n\r\nFile [/Volumes/git/aipes/langchain/document_qa/langchain/langchain/vectorstores/chroma.py:193](https://file+.vscode-resource.vscode-cdn.net/Volumes/git/aipes/langchain/document_qa/langchain/langchain/vectorstores/chroma.py:193), in Chroma.add_texts(self, texts, metadatas, ids, **kwargs)\r\n    189     embeddings_with_metadatas = (\r\n    190         [embeddings[i] for i in non_empty] if embeddings else None\r\n    191     )\r\n    192     ids_with_metadata = [ids[i] for i in non_empty]\r\n--> 193     self._collection.upsert(\r\n    194         metadatas=metadatas,\r\n    195         embeddings=embeddings_with_metadatas,\r\n    196         documents=texts_with_metadatas,\r\n    197         ids=ids_with_metadata,\r\n    198     )\r\n    200 texts = [texts[j] for j in empty]\r\n    201 embeddings = [embeddings[j] for j in empty] if embeddings else None\r\n\r\nFile [~/mambaforge/envs/langchain/lib/python3.10/site-packages/chromadb/api/models/Collection.py:298](https://file+.vscode-resource.vscode-cdn.net/Volumes/git/aipes/langchain/~/mambaforge/envs/langchain/lib/python3.10/site-packages/chromadb/api/models/Collection.py:298), in Collection.upsert(self, ids, embeddings, metadatas, documents, increment_index)\r\n    278 def upsert(\r\n    279     self,\r\n    280     ids: OneOrMany[ID],\r\n   (...)\r\n    284     increment_index: bool = True,\r\n    285 ) -> None:\r\n    286     \"\"\"Update the embeddings, metadatas or documents for provided ids, or create them if they don't exist.\r\n    287 \r\n    288     Args:\r\n   (...)\r\n    295         None\r\n    296     \"\"\"\r\n--> 298     ids, embeddings, metadatas, documents = self._validate_embedding_set(\r\n    299         ids, embeddings, metadatas, documents\r\n    300     )\r\n    302     self._client._upsert(\r\n    303         collection_id=self.id,\r\n    304         ids=ids,\r\n   (...)\r\n    308         increment_index=increment_index,\r\n    309     )\r\n\r\nFile [~/mambaforge/envs/langchain/lib/python3.10/site-packages/chromadb/api/models/Collection.py:357](https://file+.vscode-resource.vscode-cdn.net/Volumes/git/aipes/langchain/~/mambaforge/envs/langchain/lib/python3.10/site-packages/chromadb/api/models/Collection.py:357), in Collection._validate_embedding_set(self, ids, embeddings, metadatas, documents, require_embeddings_or_documents)\r\n    350 ids = validate_ids(maybe_cast_one_to_many(ids))\r\n    351 embeddings = (\r\n    352     validate_embeddings(maybe_cast_one_to_many(embeddings))\r\n    353     if embeddings is not None\r\n    354     else None\r\n    355 )\r\n    356 metadatas = (\r\n--> 357     validate_metadatas(maybe_cast_one_to_many(metadatas))\r\n    358     if metadatas is not None\r\n    359     else None\r\n    360 )\r\n    361 documents = maybe_cast_one_to_many(documents) if documents is not None else None\r\n    363 # Check that one of embeddings or documents is provided\r\n\r\nFile [~/mambaforge/envs/langchain/lib/python3.10/site-packages/chromadb/api/types.py:169](https://file+.vscode-resource.vscode-cdn.net/Volumes/git/aipes/langchain/~/mambaforge/envs/langchain/lib/python3.10/site-packages/chromadb/api/types.py:169), in validate_metadatas(metadatas)\r\n    167     raise ValueError(f\"Expected metadatas to be a list, got {metadatas}\")\r\n    168 for metadata in metadatas:\r\n--> 169     validate_metadata(metadata)\r\n    170 return metadatas\r\n\r\nFile [~/mambaforge/envs/langchain/lib/python3.10/site-packages/chromadb/api/types.py:140](https://file+.vscode-resource.vscode-cdn.net/Volumes/git/aipes/langchain/~/mambaforge/envs/langchain/lib/python3.10/site-packages/chromadb/api/types.py:140), in validate_metadata(metadata)\r\n    138     # isinstance(True, int) evaluates to True, so we need to check for bools separately\r\n    139     if not isinstance(value, (str, int, float)) or isinstance(value, bool):\r\n--> 140         raise ValueError(\r\n    141             f\"Expected metadata value to be a str, int, or float, got {value} which is a {type(value)}\"\r\n    142         )\r\n    143 return metadata\r\n\r\n### Who can help?\r\n\r\n@hwchase17 @eyurtsev \r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```\r\nfrom langchain.document_loaders import WebBaseLoader\r\nfrom langchain.indexes import VectorstoreIndexCreator\r\n\r\nmemo_dict = {}\r\n\r\ndef query_site(question, site_url):\r\n    if site_url not in memo_dict:\r\n        loader = WebBaseLoader(site_url)\r\n        index = VectorstoreIndexCreator().from_loaders([loader])\r\n        memo_dict[site_url] = index\r\n\r\n    site_index = memo_dict[site_url]\r\n    return site_index.query(question)\r\n\r\nprint(query_site(\"What is this article about?\", \"https://www.montyevans.com/sports-betting\"))\r\n```\r\n\r\n### Expected behavior\r\n\r\nI expect to see an answer to the question, based on the site content, printed to console; instead ChromaDB raises a ValueError.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8174/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8174/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8171",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8171/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8171/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8171/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8171",
        "id": 1818037312,
        "node_id": "PR_kwDOIPDwls5WNhCG",
        "number": 8171,
        "title": "FEAT: Integrate Xinference LLMs and Embeddings",
        "user": {
            "login": "jiayini1119",
            "id": 105399924,
            "node_id": "U_kgDOBkhGdA",
            "avatar_url": "https://avatars.githubusercontent.com/u/105399924?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jiayini1119",
            "html_url": "https://github.com/jiayini1119",
            "followers_url": "https://api.github.com/users/jiayini1119/followers",
            "following_url": "https://api.github.com/users/jiayini1119/following{/other_user}",
            "gists_url": "https://api.github.com/users/jiayini1119/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jiayini1119/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jiayini1119/subscriptions",
            "organizations_url": "https://api.github.com/users/jiayini1119/orgs",
            "repos_url": "https://api.github.com/users/jiayini1119/repos",
            "events_url": "https://api.github.com/users/jiayini1119/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jiayini1119/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-24T09:40:31Z",
        "updated_at": "2023-07-28T04:23:22Z",
        "closed_at": "2023-07-28T04:23:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8171",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8171",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8171.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8171.patch",
            "merged_at": "2023-07-28T04:23:21Z"
        },
        "body": "- [Xorbits Inference(Xinference)](https://github.com/xorbitsai/inference) is a powerful and versatile library designed to serve language, speech recognition, and multimodal models. Xinference supports a variety of GGML-compatible models including chatglm, whisper, and vicuna, and utilizes heterogeneous hardware and a distributed architecture for seamless cross-device and cross-server model deployment.\r\n- This PR integrates Xinference models and Xinference embeddings into LangChain.\r\n- Dependencies: To install the depenedencies for this integration, run\r\n    \r\n    `pip install \"xinference[all]\"`\r\n    \r\n- Example Usage:\r\n\r\nTo start a local instance of Xinference, run `xinference`.\r\n\r\nTo deploy Xinference in a distributed cluster, first start an Xinference supervisor using `xinference-supervisor`:\r\n\r\n`xinference-supervisor -H \"${supervisor_host}\"`\r\n\r\nThen, start the Xinference workers using `xinference-worker` on each server you want to run them on. \r\n\r\n`xinference-worker -e \"http://${supervisor_host}:9997\"`\r\n\r\nTo use Xinference with LangChain, you also need to launch a model. You can use command line interface (CLI) to do so. Fo example: `xinference launch -n vicuna-v1.3 -f ggmlv3 -q q4_0`. This launches a model named vicuna-v1.3 with `model_format=\"ggmlv3\"` and `quantization=\"q4_0\"`. A model UID is returned for you to use. \r\n\r\nNow you can use Xinference with LangChain:\r\n\r\n```python\r\nfrom langchain.llms import Xinference\r\n\r\nllm = Xinference(\r\n    server_url=\"http://0.0.0.0:9997\", # suppose the supervisor_host is \"0.0.0.0\"\r\n    model_uid = {model_uid} # model UID returned from launching a model\r\n)\r\n\r\nllm(\r\n    prompt=\"Q: where can we visit in the capital of France? A:\",\r\n    generate_config={\"max_tokens\": 1024},\r\n)\r\n```\r\n\r\nYou can also use RESTful client to launch a model:\r\n```python\r\nfrom xinference.client import RESTfulClient\r\n\r\nclient = RESTfulClient(\"http://0.0.0.0:9997\")\r\n\r\nmodel_uid = client.launch_model(model_name=\"vicuna-v1.3\", model_size_in_billions=7, quantization=\"q4_0\")\r\n```\r\n\r\nThe following code block demonstrates how to use Xinference embeddings with LangChain:\r\n```python\r\nfrom langchain.embeddings import XinferenceEmbeddings\r\n\r\nxinference = XinferenceEmbeddings(\r\n    server_url=\"http://0.0.0.0:9997\",\r\n    model_uid = model_uid\r\n)\r\n```\r\n\r\n```python\r\nquery_result = xinference.embed_query(\"This is a test query\")\r\n```\r\n\r\n```python\r\ndoc_result = xinference.embed_documents([\"text A\", \"text B\"])\r\n```\r\n\r\nXinference is still under rapid development. Feel free to [join our Slack community](https://xorbitsio.slack.com/join/shared_invite/zt-1z3zsm9ep-87yI9YZ_B79HLB2ccTq4WA) to get the latest updates! \r\n\r\n- Request for review:\u00a0@hwchase17, @baskaryan\r\n- Twitter handle:\u00a0https://twitter.com/Xorbitsio\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8171/reactions",
            "total_count": 5,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8171/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8170",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8170/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8170/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8170/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8170",
        "id": 1817948424,
        "node_id": "I_kwDOIPDwls5sW7EI",
        "number": 8170,
        "title": "How to use MongoDB to store vector embeddings and during extracting the relevant document, using `FAISS` for similarity search based document relevancy?",
        "user": {
            "login": "Shuhul24",
            "id": 51810627,
            "node_id": "MDQ6VXNlcjUxODEwNjI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/51810627?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Shuhul24",
            "html_url": "https://github.com/Shuhul24",
            "followers_url": "https://api.github.com/users/Shuhul24/followers",
            "following_url": "https://api.github.com/users/Shuhul24/following{/other_user}",
            "gists_url": "https://api.github.com/users/Shuhul24/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Shuhul24/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Shuhul24/subscriptions",
            "organizations_url": "https://api.github.com/users/Shuhul24/orgs",
            "repos_url": "https://api.github.com/users/Shuhul24/repos",
            "events_url": "https://api.github.com/users/Shuhul24/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Shuhul24/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-07-24T08:50:57Z",
        "updated_at": "2023-10-02T14:29:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am using FAISS vector store for storing the vector embeddings of the documents and retrieving the relevant document with respect to the query. My question is that `FAISS` does not store the embeddings permanently, instead it stores it in RAM and when running the code once again, it simply overwrites on the previous one or simply adds another index for it (I am not sure on this one). What I want is that to store these embeddings, say on `MongoDB` so that it gets stored there for longer period of time and when extracting those embeddings, `FAISS` is the algorithm to be used for similarity search based extraction (as it is best for large documents). Is it possible?\n\n### Suggestion:\n\nI tried `MongoDBAtlasVectorSearch` for this and came to know that it does store the vector embeddings in MongoDB database but when extracting the relevant document with respect to a query it does not use `FAISS` based similarity search algorithm (which is, I believe, better than the one used by `MongoDBAtlasVectorSearch`). ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8170/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8170/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8169",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8169/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8169/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8169/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8169",
        "id": 1817931182,
        "node_id": "PR_kwDOIPDwls5WNKON",
        "number": 8169,
        "title": "Bagatur/replicate stop",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-24T08:40:48Z",
        "updated_at": "2023-07-27T20:32:12Z",
        "closed_at": "2023-07-25T00:48:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8169",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8169",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8169.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8169.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8169/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8169/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8168",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8168/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8168/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8168/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8168",
        "id": 1817863224,
        "node_id": "I_kwDOIPDwls5sWmQ4",
        "number": 8168,
        "title": "Cannot use CombinedMemory with VectorStoreRetrieverMemory and ConversationBufferMemory for ConversationalRetrievalChain",
        "user": {
            "login": "Vagif12",
            "id": 13761595,
            "node_id": "MDQ6VXNlcjEzNzYxNTk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/13761595?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vagif12",
            "html_url": "https://github.com/Vagif12",
            "followers_url": "https://api.github.com/users/Vagif12/followers",
            "following_url": "https://api.github.com/users/Vagif12/following{/other_user}",
            "gists_url": "https://api.github.com/users/Vagif12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Vagif12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Vagif12/subscriptions",
            "organizations_url": "https://api.github.com/users/Vagif12/orgs",
            "repos_url": "https://api.github.com/users/Vagif12/repos",
            "events_url": "https://api.github.com/users/Vagif12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Vagif12/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-24T08:00:27Z",
        "updated_at": "2023-07-24T10:24:13Z",
        "closed_at": "2023-07-24T10:24:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n1. Python 3.10\r\n2. Langchain 0.0.240\r\n3. Mac OSX Monterey Intel Processor\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n@ago\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [X] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nHey so I've been trying to use `CombinedMemory` to combine the `VectorStoreRetrieverMemory` and `ConversationSummaryBufferMemory` and set it as the memory of a `ConversationalRetrievalChain`, but I keep running into issues and could not find any examples of this in the documentation. is there an example that could be provided by the documentation\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8168/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 1,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8168/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8167",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8167/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8167/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8167/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8167",
        "id": 1817835890,
        "node_id": "I_kwDOIPDwls5sWfly",
        "number": 8167,
        "title": "Supporting Multiple Schemas for SQL Query Generation in Databricks",
        "user": {
            "login": "GuptaPurujit",
            "id": 41872519,
            "node_id": "MDQ6VXNlcjQxODcyNTE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/41872519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GuptaPurujit",
            "html_url": "https://github.com/GuptaPurujit",
            "followers_url": "https://api.github.com/users/GuptaPurujit/followers",
            "following_url": "https://api.github.com/users/GuptaPurujit/following{/other_user}",
            "gists_url": "https://api.github.com/users/GuptaPurujit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GuptaPurujit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GuptaPurujit/subscriptions",
            "organizations_url": "https://api.github.com/users/GuptaPurujit/orgs",
            "repos_url": "https://api.github.com/users/GuptaPurujit/repos",
            "events_url": "https://api.github.com/users/GuptaPurujit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GuptaPurujit/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-24T07:42:28Z",
        "updated_at": "2023-11-04T16:05:01Z",
        "closed_at": "2023-11-04T16:05:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThere might be scenarios where transformations and joins will need to be applied on tables from different schemas but currently, the code only supports a single schema query structure.\n\n### Motivation\n\nI am working on Databricks Unity Catalog Query Assistant feature for a Product and need this change for the same, there are business scenarios where multiple schemas will need to be accessed to make complicated business rules to be applied.\n\n### Your contribution\n\nI can make the PR for this change, I have identified the code changes required",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8167/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8167/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8166",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8166/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8166/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8166/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8166",
        "id": 1817786302,
        "node_id": "PR_kwDOIPDwls5WMra8",
        "number": 8166,
        "title": " utils/transcripts.py for chunking preserving previous behaviour as default for #8087",
        "user": {
            "login": "beaterblank",
            "id": 68276845,
            "node_id": "MDQ6VXNlcjY4Mjc2ODQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/68276845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/beaterblank",
            "html_url": "https://github.com/beaterblank",
            "followers_url": "https://api.github.com/users/beaterblank/followers",
            "following_url": "https://api.github.com/users/beaterblank/following{/other_user}",
            "gists_url": "https://api.github.com/users/beaterblank/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/beaterblank/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/beaterblank/subscriptions",
            "organizations_url": "https://api.github.com/users/beaterblank/orgs",
            "repos_url": "https://api.github.com/users/beaterblank/repos",
            "events_url": "https://api.github.com/users/beaterblank/events{/privacy}",
            "received_events_url": "https://api.github.com/users/beaterblank/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-07-24T07:09:13Z",
        "updated_at": "2023-12-07T14:18:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8166",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8166",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8166.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8166.patch",
            "merged_at": null
        },
        "body": "fixes #8087 \r\nadded chunking mechanism for for transcript loaders srt.py and youtubeloader.py so user could optionally load transcript for a certain duration\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8166/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8166/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8165",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8165/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8165/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8165/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8165",
        "id": 1817766918,
        "node_id": "PR_kwDOIPDwls5WMnQH",
        "number": 8165,
        "title": "fix:get bilibili subtitles",
        "user": {
            "login": "liguoqinjim",
            "id": 2113954,
            "node_id": "MDQ6VXNlcjIxMTM5NTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2113954?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liguoqinjim",
            "html_url": "https://github.com/liguoqinjim",
            "followers_url": "https://api.github.com/users/liguoqinjim/followers",
            "following_url": "https://api.github.com/users/liguoqinjim/following{/other_user}",
            "gists_url": "https://api.github.com/users/liguoqinjim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liguoqinjim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liguoqinjim/subscriptions",
            "organizations_url": "https://api.github.com/users/liguoqinjim/orgs",
            "repos_url": "https://api.github.com/users/liguoqinjim/repos",
            "events_url": "https://api.github.com/users/liguoqinjim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liguoqinjim/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-24T06:55:07Z",
        "updated_at": "2023-09-21T08:53:56Z",
        "closed_at": "2023-08-04T21:30:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8165",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8165",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8165.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8165.patch",
            "merged_at": "2023-08-04T21:30:41Z"
        },
        "body": "\r\n  - Description: fix the Loader 'BiliBiliLoader'\r\n  - Issue: the API response was changed\r\n![image](https://github.com/langchain-ai/langchain/assets/2113954/91216793-82f8-4c82-a018-d49f36f5f6aa)\r\nThe previously used API no longer returns the \"subtitle_url\" property.\r\n![image](https://github.com/langchain-ai/langchain/assets/2113954/a8ec2a7a-f40d-4c2a-b7d0-0ccdf2b327cc)\r\nWe should use another API to get `subtitle_url` property. \r\nThe `subtitle_url` returned by this API does not include the http schema and needs to be added.\r\n\r\n  - Dependencies: Nope\r\n  - Tag maintainer: @rlancemartin\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8165/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8165/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8164",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8164/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8164/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8164/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8164",
        "id": 1817762700,
        "node_id": "PR_kwDOIPDwls5WMmWH",
        "number": 8164,
        "title": "Add support for load_chat_model",
        "user": {
            "login": "shivamMg",
            "id": 7882752,
            "node_id": "MDQ6VXNlcjc4ODI3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7882752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shivamMg",
            "html_url": "https://github.com/shivamMg",
            "followers_url": "https://api.github.com/users/shivamMg/followers",
            "following_url": "https://api.github.com/users/shivamMg/following{/other_user}",
            "gists_url": "https://api.github.com/users/shivamMg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shivamMg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shivamMg/subscriptions",
            "organizations_url": "https://api.github.com/users/shivamMg/orgs",
            "repos_url": "https://api.github.com/users/shivamMg/repos",
            "events_url": "https://api.github.com/users/shivamMg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shivamMg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nfcampos",
                "id": 56902,
                "node_id": "MDQ6VXNlcjU2OTAy",
                "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nfcampos",
                "html_url": "https://github.com/nfcampos",
                "followers_url": "https://api.github.com/users/nfcampos/followers",
                "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
                "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
                "organizations_url": "https://api.github.com/users/nfcampos/orgs",
                "repos_url": "https://api.github.com/users/nfcampos/repos",
                "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nfcampos/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "hwchase17",
                "id": 11986836,
                "node_id": "MDQ6VXNlcjExOTg2ODM2",
                "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hwchase17",
                "html_url": "https://github.com/hwchase17",
                "followers_url": "https://api.github.com/users/hwchase17/followers",
                "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
                "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
                "organizations_url": "https://api.github.com/users/hwchase17/orgs",
                "repos_url": "https://api.github.com/users/hwchase17/repos",
                "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hwchase17/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-07-24T06:51:54Z",
        "updated_at": "2023-10-28T22:51:47Z",
        "closed_at": "2023-08-04T06:19:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8164",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8164",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8164.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8164.patch",
            "merged_at": null
        },
        "body": "- Description:\r\n  - Add `load_chat_model()` and `load_chat_model_from_config()` in `langchain.chat_model.loading` module\r\n  - Update `_load_llm_chain()` to use the above functions in case of LLMs that are Chat Models\r\n  - Fix warning while loading `AzureChatOpenAI` and `ChatOpenAI`: WARNING! engine is not default parameter.\r\n  - **TODO**: I'll add/update unit tests once I get a go-ahead from maintainers for these new additions.\r\n- Issue:\r\n  - https://github.com/langchain-ai/langchain/issues/2627\r\n  - Related PR that was closed: https://github.com/langchain-ai/langchain/pull/1715\r\n- Dependencies: None\r\n- Tag maintainer: @baskaryan\r\n- Twitter handle: None\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8164/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8164/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8163",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8163/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8163/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8163/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8163",
        "id": 1817645290,
        "node_id": "I_kwDOIPDwls5sVxDq",
        "number": 8163,
        "title": "Adding Adobe PDF extraction API as an additional langchain document loader",
        "user": {
            "login": "moein-shariatnia",
            "id": 74396011,
            "node_id": "MDQ6VXNlcjc0Mzk2MDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/74396011?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/moein-shariatnia",
            "html_url": "https://github.com/moein-shariatnia",
            "followers_url": "https://api.github.com/users/moein-shariatnia/followers",
            "following_url": "https://api.github.com/users/moein-shariatnia/following{/other_user}",
            "gists_url": "https://api.github.com/users/moein-shariatnia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/moein-shariatnia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/moein-shariatnia/subscriptions",
            "organizations_url": "https://api.github.com/users/moein-shariatnia/orgs",
            "repos_url": "https://api.github.com/users/moein-shariatnia/repos",
            "events_url": "https://api.github.com/users/moein-shariatnia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/moein-shariatnia/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-24T05:21:58Z",
        "updated_at": "2023-10-24T11:49:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nHi langchain team!\r\n\r\nI'd like to contribute this feature to the langchain document loaders. \r\n\r\nThere are multiple pros for using Adobe API instead of the existing libraries for converting pdf to text and other metadata; e.g, adobe API allows for extraction of tables and figures in pdf documents as separate .csv and .png files, respectively. \r\nThese are of course in addition to raw text extraction which in my opinion works better most of the time compared to other libraries. \r\n\r\nHere are a few links to examples and source code:\r\n[Adobe python API example](https://developer.adobe.com/document-services/docs/overview/pdf-extract-api/quickstarts/python/)\r\n[Adobe SDK](https://github.com/adobe/pdfservices-python-sdk-samples/tree/main/src/extractpdf)\n\n### Motivation\n\nI needed to extract the tables in pdf files in a standard format to extract the data in them more carefully. I was also not satisfied by the existing libraries performance on raw text extraction.\n\n### Your contribution\n\nI'd like to contribute this feature as a new document loader in langchain. Let me know if I can start working on it.\r\nThanks!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8163/reactions",
            "total_count": 7,
            "+1": 7,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8163/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8162",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8162/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8162/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8162/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8162",
        "id": 1817624944,
        "node_id": "PR_kwDOIPDwls5WMJAs",
        "number": 8162,
        "title": "Harrison/hugginggpt",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-24T04:59:48Z",
        "updated_at": "2023-07-24T14:36:26Z",
        "closed_at": "2023-07-24T14:36:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8162",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8162",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8162.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8162.patch",
            "merged_at": "2023-07-24T14:36:24Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8162/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8162/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8161",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8161/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8161/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8161/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8161",
        "id": 1817621937,
        "node_id": "I_kwDOIPDwls5sVrWx",
        "number": 8161,
        "title": "langchain.llms.Petals doesnt support llama models",
        "user": {
            "login": "okyx",
            "id": 59725623,
            "node_id": "MDQ6VXNlcjU5NzI1NjIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/59725623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/okyx",
            "html_url": "https://github.com/okyx",
            "followers_url": "https://api.github.com/users/okyx/followers",
            "following_url": "https://api.github.com/users/okyx/following{/other_user}",
            "gists_url": "https://api.github.com/users/okyx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/okyx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/okyx/subscriptions",
            "organizations_url": "https://api.github.com/users/okyx/orgs",
            "repos_url": "https://api.github.com/users/okyx/repos",
            "events_url": "https://api.github.com/users/okyx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/okyx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-24T04:56:39Z",
        "updated_at": "2023-11-04T16:05:05Z",
        "closed_at": "2023-11-04T16:05:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nsupport for llama models for petals module\n\n### Motivation\n\ni'm furstated when i want to use petals (distributed model) for llama2, my gpu is not enough to run all models\n\n### Your contribution\n\n-",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8161/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8161/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8160",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8160/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8160/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8160/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8160",
        "id": 1817621542,
        "node_id": "PR_kwDOIPDwls5WMIRb",
        "number": 8160,
        "title": "Add support for load_chat_model",
        "user": {
            "login": "shivamMg",
            "id": 7882752,
            "node_id": "MDQ6VXNlcjc4ODI3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7882752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shivamMg",
            "html_url": "https://github.com/shivamMg",
            "followers_url": "https://api.github.com/users/shivamMg/followers",
            "following_url": "https://api.github.com/users/shivamMg/following{/other_user}",
            "gists_url": "https://api.github.com/users/shivamMg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shivamMg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shivamMg/subscriptions",
            "organizations_url": "https://api.github.com/users/shivamMg/orgs",
            "repos_url": "https://api.github.com/users/shivamMg/repos",
            "events_url": "https://api.github.com/users/shivamMg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shivamMg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-24T04:56:10Z",
        "updated_at": "2023-07-24T06:41:27Z",
        "closed_at": "2023-07-24T06:41:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8160",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8160",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8160.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8160.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8160/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8160/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8159",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8159/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8159/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8159/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8159",
        "id": 1817560003,
        "node_id": "I_kwDOIPDwls5sVcPD",
        "number": 8159,
        "title": "Migration OpenAIEmbedding from Azure to OpenAI reproduce gives an error message \"ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions.\"",
        "user": {
            "login": "somisawa",
            "id": 37485236,
            "node_id": "MDQ6VXNlcjM3NDg1MjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37485236?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/somisawa",
            "html_url": "https://github.com/somisawa",
            "followers_url": "https://api.github.com/users/somisawa/followers",
            "following_url": "https://api.github.com/users/somisawa/following{/other_user}",
            "gists_url": "https://api.github.com/users/somisawa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/somisawa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/somisawa/subscriptions",
            "organizations_url": "https://api.github.com/users/somisawa/orgs",
            "repos_url": "https://api.github.com/users/somisawa/repos",
            "events_url": "https://api.github.com/users/somisawa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/somisawa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-24T03:58:46Z",
        "updated_at": "2023-11-03T16:06:27Z",
        "closed_at": "2023-11-03T16:06:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\npython = \">=3.9,<3.12\"\r\nfire = \"0.5.0\"\r\npandas = \"2.0.2\"\r\nsqlalchemy = \"2.0.15\"\r\nrich = \"13.4.1\"\r\nmysqlclient = \"2.1.1\"\r\npandera = \"0.15.1\"\r\nopenai = \"0.27.7\"\r\nguidance = \"0.0.62\"\r\nlangchain = \"0.0.221\"\r\ntextual = \"^0.29.0\"\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Prepare data. In our case, there are 3576 documents.\r\n2. Migrate API\r\nbefore migration:\r\n```python\r\nembeddings = OpenAIEmbeddings(\r\n    model=\"text-embedding-ada-002\",\r\n    deployment=<MY_DEPLOYMENT_NAME>,\r\n    chunk_size=1,\r\n    openai_api_base=os.environ[\"OPENAI_API_BASE\"],\r\n    openai_api_key=os.environ[\"OPENAI_API_KEY\"],\r\n    openai_api_type=\"azure\",\r\n)\r\n```\r\nafter migration:\r\n```python\r\nembeddings = OpenAIEmbeddings(\r\n    model=\"text-embedding-ada-002\",\r\n    openai_api_key=os.environ[\"OPENAI_API_KEY\"],\r\n    openai_api_type=\"openai\",\r\n)\r\n```\r\n3. Make FAISS DB\r\nThe code are the same as that of before-migration version.\r\ndb = FAISS.from_documents(docs, embeddings)\r\n\r\n4. Error occurs\r\n```\r\nTraceback (most recent call last):\r\n  File \"/path/make_dataframe.py\", line 54, in <module>\r\n    db = FAISS.from_documents(docs, embeddings)\r\n  File \"/path/.venv/lib/python3.9/site-packages/langchain/vectorstores/base.py\", line 337, in from_documents\r\n    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)\r\n  File \"/path/.venv/lib/python3.9/site-packages/langchain/vectorstores/faiss.py\", line 554, in from_texts\r\n    return cls.__from(\r\n  File \"/path/.venv/lib/python3.9/site-packages/langchain/vectorstores/faiss.py\", line 506, in __from\r\n    vector = np.array(embeddings, dtype=np.float32)\r\nValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (3576,) + inhomogeneous part.\r\n```\n\n### Expected behavior\n\nCorrectly construct FAISS DB without error. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8159/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8159/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8158",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8158/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8158/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8158/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8158",
        "id": 1817456702,
        "node_id": "I_kwDOIPDwls5sVDA-",
        "number": 8158,
        "title": "Error when importing ChatOutputParser: no validator found for <class 're.Pattern'>",
        "user": {
            "login": "SpaceDandy13",
            "id": 34779990,
            "node_id": "MDQ6VXNlcjM0Nzc5OTkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/34779990?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SpaceDandy13",
            "html_url": "https://github.com/SpaceDandy13",
            "followers_url": "https://api.github.com/users/SpaceDandy13/followers",
            "following_url": "https://api.github.com/users/SpaceDandy13/following{/other_user}",
            "gists_url": "https://api.github.com/users/SpaceDandy13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SpaceDandy13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SpaceDandy13/subscriptions",
            "organizations_url": "https://api.github.com/users/SpaceDandy13/orgs",
            "repos_url": "https://api.github.com/users/SpaceDandy13/repos",
            "events_url": "https://api.github.com/users/SpaceDandy13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SpaceDandy13/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-07-24T02:00:27Z",
        "updated_at": "2023-10-02T22:24:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nfrom langchain.agents.chat.output_parser import ChatOutputParser\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/ubuntu/chatpdf/Backend/backenv/lib/python3.10/site-packages/langchain/__init__.py\", line 6, in <module>\r\n    from langchain.agents import MRKLChain, ReActChain, SelfAskWithSearchChain\r\n  File \"/home/ubuntu/chatpdf/Backend/backenv/lib/python3.10/site-packages/langchain/agents/__init__.py\", line 10, in <module>\r\n    from langchain.agents.agent_toolkits import (\r\n  File \"/home/ubuntu/chatpdf/Backend/backenv/lib/python3.10/site-packages/langchain/agents/agent_toolkits/__init__.py\", line 6, in <module>\r\n    from langchain.agents.agent_toolkits.csv.base import create_csv_agent\r\n  File \"/home/ubuntu/chatpdf/Backend/backenv/lib/python3.10/site-packages/langchain/agents/agent_toolkits/csv/base.py\", line 4, in <module>\r\n    from langchain.agents.agent_toolkits.pandas.base import create_pandas_dataframe_agent\r\n  File \"/home/ubuntu/chatpdf/Backend/backenv/lib/python3.10/site-packages/langchain/agents/agent_toolkits/pandas/base.py\", line 18, in <module>\r\n    from langchain.agents.types import AgentType\r\n  File \"/home/ubuntu/chatpdf/Backend/backenv/lib/python3.10/site-packages/langchain/agents/types.py\", line 5, in <module>\r\n    from langchain.agents.chat.base import ChatAgent\r\n  File \"/home/ubuntu/chatpdf/Backend/backenv/lib/python3.10/site-packages/langchain/agents/chat/base.py\", line 6, in <module>\r\n    from langchain.agents.chat.output_parser import ChatOutputParser\r\n  File \"/home/ubuntu/chatpdf/Backend/backenv/lib/python3.10/site-packages/langchain/agents/chat/output_parser.py\", line 12, in <module>\r\n    class ChatOutputParser(AgentOutputParser):\r\n  File \"pydantic/main.py\", line 229, in pydantic.main.ModelMetaclass.__new__\r\n  File \"pydantic/fields.py\", line 491, in pydantic.fields.ModelField.infer\r\n  File \"pydantic/fields.py\", line 421, in pydantic.fields.ModelField.__init__\r\n  File \"pydantic/fields.py\", line 542, in pydantic.fields.ModelField.prepare\r\n  File \"pydantic/fields.py\", line 804, in pydantic.fields.ModelField.populate_validators\r\n  File \"pydantic/validators.py\", line 723, in find_validators\r\nRuntimeError: no validator found for <class 're.Pattern'>, see `arbitrary_types_allowed` in Config\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [X] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.agents.chat.output_parser import ChatOutputParser\n\n### Expected behavior\n\nImport corrrectly. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8158/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8158/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8157",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8157/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8157/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8157/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8157",
        "id": 1817450573,
        "node_id": "I_kwDOIPDwls5sVBhN",
        "number": 8157,
        "title": "Retain links when extracting text using PDFLoader",
        "user": {
            "login": "ahm750",
            "id": 11042125,
            "node_id": "MDQ6VXNlcjExMDQyMTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/11042125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ahm750",
            "html_url": "https://github.com/ahm750",
            "followers_url": "https://api.github.com/users/ahm750/followers",
            "following_url": "https://api.github.com/users/ahm750/following{/other_user}",
            "gists_url": "https://api.github.com/users/ahm750/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ahm750/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ahm750/subscriptions",
            "organizations_url": "https://api.github.com/users/ahm750/orgs",
            "repos_url": "https://api.github.com/users/ahm750/repos",
            "events_url": "https://api.github.com/users/ahm750/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ahm750/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-24T01:53:00Z",
        "updated_at": "2023-07-25T02:05:02Z",
        "closed_at": "2023-07-25T02:05:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHi,\r\n\r\nI'm using version 0.0.105 of langchain (nodejs). \r\n\r\nI'm using PDFLoader to embed PDF documents, and I've noticed that the extracted documents do not retain the hyperlinks that were present in the files.\r\n\r\nIs there a way to retain them? I couldn't find it in the document or the PDFLoader class.\n\n### Who can help?\n\n@eyurtsev @hwchase17 @agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nvar pdfLoader = new PDFLoader(filePath, {\r\n    splitPages: false,\r\n});\r\n\r\nvar rawDocs = await pdfLoader.load();\r\nconsole.log(rawDocs);\n\n### Expected behavior\n\nI was expecting PDFLoader to convert the hyperlinks in the PDF to either raw URLs or markdown URL.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8157/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8157/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8156",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8156/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8156/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8156/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8156",
        "id": 1817442875,
        "node_id": "I_kwDOIPDwls5sU_o7",
        "number": 8156,
        "title": "create_tagging_chain returning an array string not respecting enum values",
        "user": {
            "login": "tim-g-provectusalgae",
            "id": 115126466,
            "node_id": "U_kgDOBtywwg",
            "avatar_url": "https://avatars.githubusercontent.com/u/115126466?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tim-g-provectusalgae",
            "html_url": "https://github.com/tim-g-provectusalgae",
            "followers_url": "https://api.github.com/users/tim-g-provectusalgae/followers",
            "following_url": "https://api.github.com/users/tim-g-provectusalgae/following{/other_user}",
            "gists_url": "https://api.github.com/users/tim-g-provectusalgae/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tim-g-provectusalgae/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tim-g-provectusalgae/subscriptions",
            "organizations_url": "https://api.github.com/users/tim-g-provectusalgae/orgs",
            "repos_url": "https://api.github.com/users/tim-g-provectusalgae/repos",
            "events_url": "https://api.github.com/users/tim-g-provectusalgae/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tim-g-provectusalgae/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-24T01:43:31Z",
        "updated_at": "2023-12-08T16:01:10Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nGood day, I'm attempting to use `create_tagging_chain_pydantic` to tag certain markets wherein a product is used. The product can be used across multiple markets. Unfortunately the chain doesn't appear to respect the `enum` values passed to it for a return type of an array of string (it works correctly for a [single] string output).\r\n\r\n```python\r\nclass Tags(BaseModel):\r\n    market_verticals: List[str] = Field(...,\r\n                                        enum=[\"pharmaceutical\", \"biotech\", \"food and beverage\", \"cosmetic\",\r\n                                              \"industrial\", \"nutraceuticals\", \"agriculture\", \"other\"],\r\n                                        description=\"\"\"describes which of the market verticals of the various uses \r\n                                          of the product\r\n                                        \"\"\")\r\n\r\ndef main(): \r\n    llm = ChatOpenAI(temperature=0, model=\"gpt-3.5-turbo-0613\")\r\n\r\n    chain = create_tagging_chain_pydantic(Tags, llm)\r\n\r\n    market_verticals = chain.run(\r\n        \"The product is used in the production of food additives, pharmaceuticals, and cosmetics\")  \r\n```\r\n\r\nOutput: \r\n\r\n```bash\r\nmarket_verticals=['food additives', 'pharmaceuticals', 'cosmetics']\r\n```\r\n\r\nAmending the prompt, produces the expected output:\r\n\r\n```python\r\nclass Tags(BaseModel):\r\n    market_verticals: List[str] = Field(...,\r\n                                        enum=[\"pharmaceutical\", \"biotech\", \"food and beverage\", \"cosmetic\",\r\n                                              \"industrial\", \"nutraceuticals\", \"agriculture\", \"other\"],\r\n                                        description=\"\"\"describes which of the market verticals of the \r\n                                            various uses of the product. Market verticals are:\r\n                                            pharmaceutical, biotech, food and beverage, cosmetic, industrial,\r\n                                            nutraceuticals, agriculture and other.\r\n                                        \"\"\")\r\n\r\n```\r\n\r\nOutput:\r\n\r\n```bash\r\nmarket_verticals=['food and beverage', 'pharmaceutical', 'cosmetic']\r\n```\r\n\r\n```bash\r\n$ python3 -V\r\nPython 3.10.10\r\n\r\n$ pip show langchain\r\nName: langchain\r\nVersion: 0.0.240\r\nSummary: Building applications with LLMs through composability\r\nHome-page: https://www.github.com/hwchase17/langchain\r\nAuthor: \r\nAuthor-email: \r\nLicense: MIT\r\nLocation: /home/tim/Documents/git/ai-magellan/.venv/lib/python3.10/site-packages\r\nRequires: aiohttp, async-timeout, dataclasses-json, langsmith, numexpr, numpy, openapi-schema-pydantic, pydantic, PyYAML, requests, SQLAlchemy, tenacity\r\nRequired-by: kor\r\n```\r\n\r\n\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nWrite and run the code below:\r\n\r\n```\r\nfrom typing import List\r\nfrom dotenv import load_dotenv\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.chains import create_tagging_chain, create_tagging_chain_pydantic\r\nfrom langchain.prompts import ChatPromptTemplate\r\nfrom enum import Enum\r\nfrom pydantic import BaseModel, Field\r\n\r\n\r\nclass Tags(BaseModel):\r\n    # enum doesn't work with array\r\n    market_verticals: List[str] = Field(...,\r\n                                  items={\"type\": \"string\"}, enum=[\"pharmaceutical\", \"biotech\", \"food and beverage\", \"cosmetic\",\r\n                                                                  \"industrial\", \"nutraceuticals\", \"agriculture\", \"other\"],\r\n                                  description=\"\"\"describes which of the market verticals of the \r\n                                            various uses of the product\r\n                                        \"\"\")\r\n\r\n\r\ndef main():\r\n    llm = ChatOpenAI(temperature=0, model=\"gpt-3.5-turbo-0613\", verbose=True)\r\n\r\n    chain = create_tagging_chain_pydantic(Tags, llm, verbose=True)\r\n\r\n    market_verticals = chain.run(\r\n        \"Vitamin B is is used in the production of food additives, pharmaceuticals, and cosmetics\")\r\n\r\n    print(market_verticals)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    load_dotenv()\r\n    main()\r\n```\r\n\r\n### Expected behavior\r\n\r\nExpected output: \r\n\r\n```bash\r\nmarket_verticals=['food and beverage', 'pharmaceuticals', 'cosmetics']\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8156/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8156/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8155",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8155/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8155/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8155/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8155",
        "id": 1817415017,
        "node_id": "PR_kwDOIPDwls5WLcob",
        "number": 8155,
        "title": "nit: small typo in evaluation module docs",
        "user": {
            "login": "fielding",
            "id": 454023,
            "node_id": "MDQ6VXNlcjQ1NDAyMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/454023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fielding",
            "html_url": "https://github.com/fielding",
            "followers_url": "https://api.github.com/users/fielding/followers",
            "following_url": "https://api.github.com/users/fielding/following{/other_user}",
            "gists_url": "https://api.github.com/users/fielding/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fielding/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fielding/subscriptions",
            "organizations_url": "https://api.github.com/users/fielding/orgs",
            "repos_url": "https://api.github.com/users/fielding/repos",
            "events_url": "https://api.github.com/users/fielding/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fielding/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-24T01:13:26Z",
        "updated_at": "2023-07-24T01:25:15Z",
        "closed_at": "2023-07-24T01:25:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8155",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8155",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8155.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8155.patch",
            "merged_at": "2023-07-24T01:25:14Z"
        },
        "body": "Hopefully, this doesn't come across as nitpicky! That isn't the intention. I only noticed it, because I enjoy reading the documentation and when I hit a mental road bump it is usually due to a missing word or something =)\r\n\r\n@baskaryan \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8155/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8155/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8154",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8154/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8154/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8154/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8154",
        "id": 1817402157,
        "node_id": "PR_kwDOIPDwls5WLZxL",
        "number": 8154,
        "title": "Unbreak devcontainer",
        "user": {
            "login": "finnless",
            "id": 6785029,
            "node_id": "MDQ6VXNlcjY3ODUwMjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6785029?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/finnless",
            "html_url": "https://github.com/finnless",
            "followers_url": "https://api.github.com/users/finnless/followers",
            "following_url": "https://api.github.com/users/finnless/following{/other_user}",
            "gists_url": "https://api.github.com/users/finnless/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/finnless/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/finnless/subscriptions",
            "organizations_url": "https://api.github.com/users/finnless/orgs",
            "repos_url": "https://api.github.com/users/finnless/repos",
            "events_url": "https://api.github.com/users/finnless/events{/privacy}",
            "received_events_url": "https://api.github.com/users/finnless/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-24T00:56:09Z",
        "updated_at": "2023-07-24T02:33:47Z",
        "closed_at": "2023-07-24T02:33:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8154",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8154",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8154.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8154.patch",
            "merged_at": "2023-07-24T02:33:47Z"
        },
        "body": "Codespaces and devcontainer was broken by the [repo restructure](https://github.com/langchain-ai/langchain/discussions/8043).\r\n\r\n\r\n\r\n  - Description: Add libs/langchain to container so it can be built without error.\r\n  - Issue: -\r\n  - Dependencies: -\r\n  - Tag maintainer: @hwchase17 @baskaryan \r\n  - Twitter handle: @finnless\r\n\r\nThe failed build log says:\r\n```\r\n#10 [langchain-dev-dependencies 2/2] RUN poetry install --no-interaction --no-ansi --with dev,test,docs\r\n#10 sha256:e850ee99fc966158bfd2d85e82b7c57244f47ecbb1462e75bd83b981a56a1929\r\n2023-07-23 23:30:33.692Z: #10 0.827 \r\n#10 0.827 Directory libs/langchain does not exist\r\n2023-07-23 23:30:33.738Z: #10 ERROR: executor failed running [/bin/sh -c poetry install --no-interaction --no-ansi --with dev,test,docs]: exit code: 1\r\n```\r\n\r\nThe new pyproject.toml imports from libs/langchain:\r\nhttps://github.com/langchain-ai/langchain/blob/77bf75c236351edf47d3a76a522bb45ccc90d299/pyproject.toml#L14-L16\r\n\r\nBut libs/langchain is never added to the dev.Dockerfile:\r\n\r\nhttps://github.com/langchain-ai/langchain/blob/77bf75c236351edf47d3a76a522bb45ccc90d299/libs/langchain/dev.Dockerfile#L37-L39\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8154/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8154/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8153",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8153/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8153/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8153/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8153",
        "id": 1817328522,
        "node_id": "PR_kwDOIPDwls5WLKAz",
        "number": 8153,
        "title": "Function calling logging fixup",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-23T22:48:31Z",
        "updated_at": "2023-07-24T01:01:34Z",
        "closed_at": "2023-07-24T01:01:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8153",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8153",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8153.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8153.patch",
            "merged_at": "2023-07-24T01:01:33Z"
        },
        "body": "Fix bad overwriting of \"functions\" arg in invocation params.\r\nCleanup precedence in the dict\r\nClean up some inappropriate types (mapping should be dict)\r\n\r\n\r\nExample: https://dev.smith.langchain.com/public/9a7a6817-1679-49d8-8775-c13916975aae/r\r\n\r\n![image](https://github.com/langchain-ai/langchain/assets/13333726/94cd0775-b6ef-40c3-9e5a-3ab65e466ab9)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8153/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8153/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8152",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8152/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8152/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8152/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8152",
        "id": 1817287908,
        "node_id": "PR_kwDOIPDwls5WLB18",
        "number": 8152,
        "title": "simplified nmspace",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-23T20:34:03Z",
        "updated_at": "2023-07-24T15:40:32Z",
        "closed_at": "2023-07-24T01:02:20Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8152",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8152",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8152.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8152.patch",
            "merged_at": "2023-07-24T01:02:20Z"
        },
        "body": "recreated #7894 (it is easy to recreate than resolve conflicts)\r\nA small refactoring to improve the API Reference Agents table\r\n @baskaryan\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8152/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8152/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8151",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8151/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8151/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8151/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8151",
        "id": 1817272038,
        "node_id": "PR_kwDOIPDwls5WK-t4",
        "number": 8151,
        "title": "Optimize the cosine_similarity_top_k function performance",
        "user": {
            "login": "misrasaurabh1",
            "id": 1271289,
            "node_id": "MDQ6VXNlcjEyNzEyODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1271289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/misrasaurabh1",
            "html_url": "https://github.com/misrasaurabh1",
            "followers_url": "https://api.github.com/users/misrasaurabh1/followers",
            "following_url": "https://api.github.com/users/misrasaurabh1/following{/other_user}",
            "gists_url": "https://api.github.com/users/misrasaurabh1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/misrasaurabh1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/misrasaurabh1/subscriptions",
            "organizations_url": "https://api.github.com/users/misrasaurabh1/orgs",
            "repos_url": "https://api.github.com/users/misrasaurabh1/repos",
            "events_url": "https://api.github.com/users/misrasaurabh1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/misrasaurabh1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-23T19:34:35Z",
        "updated_at": "2023-07-27T01:03:50Z",
        "closed_at": "2023-07-27T01:03:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8151",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8151",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8151.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8151.patch",
            "merged_at": "2023-07-27T01:03:49Z"
        },
        "body": "Optimizing important numerical code and making it run faster.\r\n\r\nPerformance went up by 1.48x (148%). Runtime went down from 138715us to 56020us\r\n\r\nOptimization explanation:\r\n\r\nThe `cosine_similarity_top_k` function is where we made the most significant optimizations. \r\nInstead of sorting the entire score_array which needs considering all elements, `np.argpartition` is utilized to find the top_k largest scores indices, this operation has a time complexity of O(n), higher performance than sorting. Remember, `np.argpartition` doesn't guarantee the order of the values. So we need to use argsort() to get the indices that would sort our top-k values after partitioning, which is much more efficient because it only sorts the top-K elements, not the entire array. Then to get the row and column indices of sorted top_k scores in the original score array, we use `np.unravel_index`. This operation is more efficient and cleaner than a list comprehension. \r\n\r\nThe code has been tested for correctness by running the following snippet on both the original function and the optimized function and averaged over 5 times.\r\n```\r\ndef test_cosine_similarity_top_k_large_matrices():\r\n    X = np.random.rand(1000, 1000)\r\n    Y = np.random.rand(1000, 1000)\r\n    top_k = 100\r\n    score_threshold = 0.5\r\n    gc.disable()\r\n    counter = time.perf_counter_ns()\r\n    return_value = cosine_similarity_top_k(X, Y, top_k, score_threshold)\r\n    duration = time.perf_counter_ns() - counter\r\n    gc.enable()\r\n```\r\n\r\n@hwaking @hwchase17 @jerwelborn \r\n\r\nUnit tests pass, I also generated more regression tests which all passed.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8151/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8151/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8150",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8150/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8150/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8150/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8150",
        "id": 1817189068,
        "node_id": "PR_kwDOIPDwls5WKu7B",
        "number": 8150,
        "title": "bump experimental to 002",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-23T16:17:49Z",
        "updated_at": "2023-07-24T01:28:29Z",
        "closed_at": "2023-07-23T16:22:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8150",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8150",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8150.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8150.patch",
            "merged_at": "2023-07-23T16:22:39Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8150/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8150/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8149",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8149/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8149/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8149/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8149",
        "id": 1817148325,
        "node_id": "I_kwDOIPDwls5sT3ul",
        "number": 8149,
        "title": "MultiRetrievalQAChain async mode",
        "user": {
            "login": "taweijm",
            "id": 105797032,
            "node_id": "U_kgDOBk5VqA",
            "avatar_url": "https://avatars.githubusercontent.com/u/105797032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/taweijm",
            "html_url": "https://github.com/taweijm",
            "followers_url": "https://api.github.com/users/taweijm/followers",
            "following_url": "https://api.github.com/users/taweijm/following{/other_user}",
            "gists_url": "https://api.github.com/users/taweijm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/taweijm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/taweijm/subscriptions",
            "organizations_url": "https://api.github.com/users/taweijm/orgs",
            "repos_url": "https://api.github.com/users/taweijm/repos",
            "events_url": "https://api.github.com/users/taweijm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/taweijm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-23T14:24:48Z",
        "updated_at": "2023-10-29T16:04:26Z",
        "closed_at": "2023-10-29T16:04:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWhen I testing MultiRetrievalQAChain in synchronous mode, it worked perfectly. It can choose QA from the right retriever. But when I implement MultiRetrievalQAChain into production with streaming, I need mode async.\r\n\r\nanyone can help me ?\r\nTIA \n\n### Motivation\n\nI'm quite frustated when I found MultiRetrievalQAChain not yet support mode async. Because the launch time for the product is halted.\n\n### Your contribution\n\nyes, I'd love to help testing the new features from langchain.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8149/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8149/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8148",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8148/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8148/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8148/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8148",
        "id": 1817123966,
        "node_id": "I_kwDOIPDwls5sTxx-",
        "number": 8148,
        "title": "YoutubeLoader for nodejs ",
        "user": {
            "login": "zhubaitian",
            "id": 7600249,
            "node_id": "MDQ6VXNlcjc2MDAyNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7600249?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhubaitian",
            "html_url": "https://github.com/zhubaitian",
            "followers_url": "https://api.github.com/users/zhubaitian/followers",
            "following_url": "https://api.github.com/users/zhubaitian/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhubaitian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhubaitian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhubaitian/subscriptions",
            "organizations_url": "https://api.github.com/users/zhubaitian/orgs",
            "repos_url": "https://api.github.com/users/zhubaitian/repos",
            "events_url": "https://api.github.com/users/zhubaitian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhubaitian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-23T13:09:56Z",
        "updated_at": "2023-11-01T16:06:00Z",
        "closed_at": "2023-11-01T16:05:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWould like to have YoutubeLoader on Nodejs api\r\n\r\nhttps://api.python.langchain.com/en/latest/document_loaders/langchain.document_loaders.youtube.YoutubeLoader.html#langchain.document_loaders.youtube.YoutubeLoader\n\n### Motivation\n\nThe motivation of this is to have the feature to load the transcript of youtube video and summarize it\n\n### Your contribution\n\nno",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8148/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8148/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8145",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8145/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8145/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8145/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8145",
        "id": 1817068301,
        "node_id": "PR_kwDOIPDwls5WKXFu",
        "number": 8145,
        "title": "fix typo: Entity Summary Memory documentation",
        "user": {
            "login": "larry-lime",
            "id": 101539084,
            "node_id": "U_kgDOBg1dDA",
            "avatar_url": "https://avatars.githubusercontent.com/u/101539084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/larry-lime",
            "html_url": "https://github.com/larry-lime",
            "followers_url": "https://api.github.com/users/larry-lime/followers",
            "following_url": "https://api.github.com/users/larry-lime/following{/other_user}",
            "gists_url": "https://api.github.com/users/larry-lime/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/larry-lime/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/larry-lime/subscriptions",
            "organizations_url": "https://api.github.com/users/larry-lime/orgs",
            "repos_url": "https://api.github.com/users/larry-lime/repos",
            "events_url": "https://api.github.com/users/larry-lime/events{/privacy}",
            "received_events_url": "https://api.github.com/users/larry-lime/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-23T10:03:41Z",
        "updated_at": "2023-07-24T02:36:51Z",
        "closed_at": "2023-07-24T02:36:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8145",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8145",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8145.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8145.patch",
            "merged_at": "2023-07-24T02:36:51Z"
        },
        "body": "Fixed a small typo I came across in the Memory documentation. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8145/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8145/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8143",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8143/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8143/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8143/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8143",
        "id": 1816995901,
        "node_id": "PR_kwDOIPDwls5WKJRg",
        "number": 8143,
        "title": "add faiss test for score threshold",
        "user": {
            "login": "shibuiwilliam",
            "id": 23517545,
            "node_id": "MDQ6VXNlcjIzNTE3NTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/23517545?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shibuiwilliam",
            "html_url": "https://github.com/shibuiwilliam",
            "followers_url": "https://api.github.com/users/shibuiwilliam/followers",
            "following_url": "https://api.github.com/users/shibuiwilliam/following{/other_user}",
            "gists_url": "https://api.github.com/users/shibuiwilliam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shibuiwilliam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shibuiwilliam/subscriptions",
            "organizations_url": "https://api.github.com/users/shibuiwilliam/orgs",
            "repos_url": "https://api.github.com/users/shibuiwilliam/repos",
            "events_url": "https://api.github.com/users/shibuiwilliam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shibuiwilliam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-23T05:34:21Z",
        "updated_at": "2023-08-04T06:16:58Z",
        "closed_at": "2023-07-24T02:36:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8143",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8143",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8143.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8143.patch",
            "merged_at": "2023-07-24T02:36:38Z"
        },
        "body": "# What\r\n- Add faiss vector search test for score threshold\r\n- Fix failing faiss vector search test; filtering with list value is wrong.\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: Add faiss vector search test for score threshold; Fix failing faiss vector search test; filtering with list value is wrong.\r\n  - Issue: None\r\n  - Dependencies: None\r\n  - Tag maintainer: @rlancemartin, @eyurtsev\r\n  - Twitter handle: @MlopsJ\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8143/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8143/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8142",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8142/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8142/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8142/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8142",
        "id": 1816988798,
        "node_id": "I_kwDOIPDwls5sTQx-",
        "number": 8142,
        "title": "RecursiveCharacterTextSplitter overlap sometimes does not work",
        "user": {
            "login": "firezym",
            "id": 3654421,
            "node_id": "MDQ6VXNlcjM2NTQ0MjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3654421?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/firezym",
            "html_url": "https://github.com/firezym",
            "followers_url": "https://api.github.com/users/firezym/followers",
            "following_url": "https://api.github.com/users/firezym/following{/other_user}",
            "gists_url": "https://api.github.com/users/firezym/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/firezym/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/firezym/subscriptions",
            "organizations_url": "https://api.github.com/users/firezym/orgs",
            "repos_url": "https://api.github.com/users/firezym/repos",
            "events_url": "https://api.github.com/users/firezym/events{/privacy}",
            "received_events_url": "https://api.github.com/users/firezym/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-23T05:00:58Z",
        "updated_at": "2023-11-08T23:32:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain  0.0.240\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n1. Run the following code below:\r\n```python\r\ntext = \"\"\"14\u3001\u4e2d\u56fd\u8bc1\u5238\u62a5\uff1a\u4eca\u5e74\u4ee5\u6765\uff0c\u591a\u4e2a \u6570\u5b57\u4eba \u6c11\u5e01\u8bd5\u70b9\u5730\u533a\u5f00\u5c55\u4e86\u4e30\u5bcc\u591a\u5f69\u7684\u6570\u5b57\u4eba\u6c11\u5e01\u4fc3\u6d88\u8d39\u6d3b\u52a8\uff0c\u6d3b\u8dc3\u6d88\u8d39\u5e02\u573a\uff0c\u63d0\u632f\u6d88\u8d39\u9700\u6c42\u3002\u4e0d\u5c11\u5730\u65b9\u653f\u5e9c\u5411\u6c11\u4f17\u53d1\u653e\u4e86\u6570\u5b57\u4eba\u6c11\u5e01\u6d88\u8d39\u5238\uff0c\u62c9\u52a8\u5c45\u6c11\u6d88\u8d39\uff0c\u636e\u8bb0\u8005\u7c97\u7565\u7edf\u8ba1\uff0c\u6d3b\u52a8\u91d1\u989d\u8d85\u8fc71.8\u4ebf\u5143\u3002\u4e1a\u5185\u4e13\u5bb6\u8ba4\u4e3a\uff0c\u6570\u5b57\u4eba\u6c11\u5e01\u4e0e\u6d88\u8d39\u5238\u3001\u7535\u5546\u5e73\u53f0\u7b49\u573a\u666f\u7ed3\u5408\uff0c\u53ef\u5171\u540c\u4fc3\u8fdb\u6d88\u8d39\u5e02\u573a\u52a0\u5feb\u56de\u6696\u3002&nbsp;15\u3001\u732b\u773c\u4e13\u4e1a\u7248\uff1a\u7535\u5f71\u300a\u6d41\u6d6a\u5730\u74032\u300b\u4e0a\u662015\u5929\uff0c\u603b\u7968\u623f\u5df2\u7ecf\u783433\u4ebf\u3002\u4ece\u7efc\u5408\u7968\u623f\u770b\uff0c\u300a\u6d41\u6d6a\u5730\u74032\u300b\u518d\u6b21\u767b\u9876\u5355\u65e5\u7968\u623f\u699c\u30022\u67085\u65e5\u5355\u65e5\u5b9e\u65f6\u7968\u623f\u8d851.3\u4ebf\u5143\uff0c\u9886\u5148\u7b2c\u4e8c\u540d\u300a\u6ee1\u6c5f\u7ea2\u300b\u8fd12000\u4e07\uff0c\u9501\u5b9a\u5355\u65e5\u7968\u623f\u51a0\u519b\u3002\u76ee\u524d\uff0c\u300a\u6d41\u6d6a\u5730\u74032\u300b\u7684\u7968\u623f\u5360\u6bd434.5%\uff0c\u6392\u7247\u573a\u6b2192126\u6b21\u3002&nbsp;\u4e8c\u3001\u5e02\u573a\u56de\u987e\u3010\u56fd\u5185\u80a1\u5e02\u3011&nbsp;1\u30012\u67086\u65e5\uff0c\u6caa\u6df1\u4e24\u5e02\u4e09\u5927\u6307\u6570\u5f31\u52bf\u9707\u8361\uff0c\u6caa\u6307\u8dcc0.76%\uff0c \u6df1\u8bc1\u6210\u6307 \u8dcc1.18%\uff0c \u521b\u4e1a\u677f \u6307\u8dcc1.4%\u3002\u76d8\u9762\u4e0a\u770b\uff0c ChatGPT\u6982\u5ff5 \u6301\u7eed\u706b\u7206\uff0c \u6d77\u5929\u745e\u58f0 \u3001 \u4e91\u4ece\u79d1\u6280 \u6da8\u505c6\u4e2a\u4ea4\u6613\u65e5\u7ffb\u500d\uff1b \u6570\u5b57\u7ecf\u6d4e \u6982\u5ff5\u76d8\u4e2d\u53d1\u9175\uff0c \u94dc\u725b\u4fe1\u606f \u6da8\u505c\uff1b\u4fe1\u521b\u3001\u8f6f\u4ef6\u80a1\u9006\u5e02\u8d70\u5f3a\uff0c \u9752 \u4e91\u79d1\u6280 \u6da8\u505c\uff1b\u516b\u90e8\u95e8\u9002\u5ea6\u8d85\u524d\u5efa\u8bbe\u5145\u6362\u7535\u57fa\u7840\u8bbe\u65bd\uff0c \u5145\u7535\u6869 \u6982\u5ff5\u6d3b\u8dc3\u3002 \u767d\u9152 \u3001CRO\u3001\u65b0\u51a0 \u75ab\u82d7 \u3001 \u5238\u5546 \u3001 \u9ec4\u91d1 \u6709\u8272\u3001 \u4fdd\u9669 \u3001 \u78f7\u5316\u5de5 \u7b49\u677f\u5757\u8dcc\u5e45\u5c45\u524d\u3002&nbsp;2\u3001\u6e2f\u80a1\u4f4e\u5f00\u4f4e\u8d70\uff0c\u622a\u81f3\u6536\u76d8\uff0c \u6052\u751f\u6307\u6570 \u8dcc2.02%\uff0c\u62a521222.16\u70b9\uff1b \u56fd\u4f01\u6307\u6570 \u8dcc2.68%\uff0c \u7ea2\u7b79\u6307\u6570 \u8dcc1.37%\u3002 \u6052\u751f\u79d1\u6280\u6307\u6570 \u8dcc3.65%\uff0c\u4e07\u56fd\u6570\u636e\u8dcc8.65%\uff0c\u54d4\u54e9\u54d4\u54e9\u8dcc5.38%\uff0c\u5feb\u624b\u8dcc5.05%\u3002 \u9ec4\u91d1\u80a1 \u96c6\u4f53\u8d70\u4f4e\uff0c \u5c71\u4e1c\u9ec4\u91d1 \u8dcc6.01%\uff0c \u7d2b\u91d1\u77ff\u4e1a \u8dcc\u8d855%\uff0c \u62db\u91d1\u77ff\u4e1a \u8dcc4.56%\u3002\u6c7d\u8f66\u80a1\u4e0b\u8dcc\uff0c \u957f\u57ce\u6c7d\u8f66 \u8dcc\u8d856%\uff0c\u851a\u6765\u8dcc\u8d855%\uff0c \u96f6\u8dd1\u6c7d\u8f66 \u8dcc4.80%\u3002&nbsp;3\u3001\u5e742\u67086\u65e5\uff0c \u5927\u667a\u6167 \u6570\u636e\u4e2d\u5fc3\u663e\u793a\uff0c\u9f99\u864e\u699c\u4e2d\u8425\u4e1a\u90e8\u51c0\u5356\u51fa3616.66\u4e07\u5143\u3002\u5176\u4e2d\uff0c\u51c0\u4e70\u5165\u7684\u4e2a\u80a124\u53ea\uff0c\u8425\u4e1a\u90e8\u51c0\u4e70\u5165\u8f83\u591a\u4e2a\u80a1\u5206\u522b\u662f \u6da6\u548c\u8f6f\u4ef6 \u3001 \u4fe1\u8fbe\u8bc1\u5238 \u3001 \u5ddd\u5927\u667a\u80dc \u7b49\uff0c\u51c0\u4e70\u5165\u91d1\u989d\u5360\u5f53\u65e5\u6210\u4ea4\u989d\u6bd4\u4f8b\u8fbe2.95%\u300180.60%\u30017.19%\u3002\u51c0\u5356\u51fa\u7684\u4e2a\u80a123\u53ea\uff0c\u8425\u4e1a\u90e8\u51c0\u5356\u51fa\u5c45\u524d\u4e2a\u80a1\u5206\u522b\u4e3a \u8d5b\u4e3a\u667a\u80fd \u3001 \u540c\u4e3a\u80a1\u4efd \u3001 \u4e07\u91cc\u77f3 \u7b49\uff0c\u51c0\u5356\u51fa\u91d1\u989d\u5360\u5f53\u65e5\u6210\u4ea4\u989d\u6bd4\u4f8b\u8fbe4.92%\u30014.32%\u300111.78%\u3002&nbsp;\u9f99\u864e\u699c\u4e2d\u673a\u6784\u51c0\u5356\u51fa1.64\u4ebf\u5143\u3002\u5176\u4e2d\uff0c\u51c0\u4e70\u5165\u7684\u4e2a\u80a18\u53ea\uff0c\u673a\u6784\u51c0\u4e70\u5165\u8f83\u591a\u4e2a\u80a1\u5206\u522b\u662f\u540c\u4e3a\u80a1\u4efd\u3001 \u98de\u9f99\u80a1\u4efd \u3001\u8d5b\u4e3a\u667a\u80fd\u7b49\uff0c\u51c0\u4e70\u5165\u91d1\u989d\u5360\u5f53\u65e5\u6210\u4ea4\u989d\u6bd4\u4f8b\u8fbe0.82%\u30011.35%\u30010.48%\u3002\u51c0\u5356\u51fa\u7684\u4e2a\u80a119\u53ea\uff0c\u673a\u6784\u51c0\u5356\u51fa\u5c45\u524d\u4e2a\u80a1\u5206\u522b\u4e3a\u6da6\u548c\u8f6f\u4ef6\u3001 \u535a\u777f\u6570\u636e \u3001 \u5b8f\u666f\u79d1\u6280 \u7b49\uff0c\u51c0\u5356\u51fa\u91d1\u989d\u5360\u5f53\u65e5\u6210\u4ea4\u989d\u6bd4\u4f8b\u8fbe0.70%\u300112.88%\u30014.76%\u3002&nbsp;4\u3001\u5317\u5411\u8d44\u91d12\u67086\u65e5\u5c0f\u5e45\u51c0\u5356\u51fa5.43\u4ebf\u3002\u5176\u4e2d\u51c0\u4e70\u5165\u7b2c\u4e00\u4f4d \u8d35\u5dde\u8305\u53f0 5.46\u4ebf\u3001 \u5b81\u5fb7\u65f6\u4ee3 4.69\u4ebf\u7d27\u968f\u5176\u540e\uff0c\u51c0\u5356\u51fa \u4e07\u79d1A 3.87\u4ebf\u3001 \u79d1\u5927\u8baf\u98de 2.18\u4ebf\u3002\u5357\u5411\u8d44\u91d1\u4eca\u65e5\u51c0\u6d41\u516519.90\u4ebf\u6e2f\u5143\u3002\u6e2f\u80a1\u901a\uff08\u6caa\uff09\u65b9\u9762\uff0c\u6052\u751f\u4e2d\u56fd\u4f01\u4e1a\u3001\u76c8\u5bcc\u57fa\u91d1\u51c0\u4e70\u5165\u5c45\u524d\uff0c\u5206\u522b\u83b7\u51c0\u4e70\u51657.77\u4ebf\u6e2f\u5143\u30015.78\u4ebf\u6e2f\u5143\u3002\u6e2f\u80a1\u901a\uff08\u6df1\uff09\u65b9\u9762\uff0c\u76c8\u5bcc\u57fa\u91d1\u3001\u6052\u751f\u4e2d\u56fd\u4f01\u4e1a\u51c0\u4e70\u5165\u5c45\u524d\uff0c\u5206\u522b\u83b7\u51c0\u4e70\u516525.00\u4ebf\u6e2f\u5143\u30018.67\u4ebf\u6e2f\u5143\u3002&nbsp;\u3010\u73af\u7403\u5e02\u573a\u3011&nbsp;1\u3001\u7f8e\u80a1\uff1a\u5317\u4eac\u65f6\u95f47\u65e5\u51cc\u6668\uff0c\u7f8e\u80a1\u5468\u4e00\u5f55\u5f97\u8fde\u7eed\u7b2c\u4e8c\u4e2a\u4ea4\u6613\u65e5\u6536\u8dcc\u3002\u7f8e\u56fd\u56fd\u503a\u6536\u76ca\u7387\u8fde\u7eed\u4e24\u65e5\u5927\u5e45\u6500\u5347\u4ee4\u5e02\u573a\u60c5\u7eea\u7d27\u5f20\u3002\u6295\u8d44\u8005\u5173\u6ce8\u7f8e\u80a1\u8d22\u62a5\uff0c\u5e76\u7b49\u5f85\u7f8e\u8054\u50a8\u4e3b\u5e2d\u9c8d\u5a01\u5c14\u660e\u5929\u5c06\u53d1\u8868\u7684\u91cd\u8981\u8bb2\u8bdd\u3002 \u6807\u666e500 \u6307\u6570\u6536\u8dcc25.40\u70b9\uff0c\u8dcc\u5e450.61%\uff0c\u62a54111.08\u70b9\u3002\u9053\u6307\u6536\u8dcc34.99\u70b9\uff0c\u8dcc\u5e450.10%\uff0c\u62a533891.02\u70b9\u3002\u7eb3\u6307\u6536\u8dcc119.50\u70b9\uff0c\u8dcc\u5e451.00%\uff0c\u62a511887.45\u70b9\u3002&nbsp;2\u3001\u6b27\u80a1\uff1a\u5fb7\u56fdDAX 30\u6307\u6570\u6536\u8dcc0.84%\uff0c\u62a515345.91\u70b9\u3002\u6cd5\u56fdCAC 40\u6307\u6570\u6536\u8dcc1.34%\uff0c\u62a57137.10\u70b9\u3002\u82f1\u56fd\u5bcc\u65f6100\u6307\u6570\u6536\u8dcc0.82%\uff0c\u62a57836.71\u70b9\u3002&nbsp;3\u3001\u9ec4\u91d1\uff1aCOMEX 4\u6708\u9ec4\u91d1\u671f\u8d27\u6536\u6da80.15%\uff0c\u62a51879.50\u7f8e\u5143/\u76ce\u53f8\u3002&nbsp;4\u3001 \u539f\u6cb9 \uff1aWTI 3\u6708\u539f\u6cb9\u671f\u8d27\u6536\u6da80.72\u7f8e\u5143\uff0c\u6da8\u5e450.98%\uff0c\u62a574.11\u7f8e\u5143/\u6876\u3002\u5e03\u4f26\u72794\u6708\u539f\u6cb9\u671f\u8d27\u6536\u6da81.05\u7f8e\u5143\uff0c\u6da8\u5e451.31%\uff0c\u62a580.99\u7f8e\u5143/\u6876\u3002&nbsp;\u3010\u673a\u6784\u7b56\u7565\u3011&nbsp;\u5bf9\u4e8e\u8fd1\u65e5\u5e02\u573a\u8d70\u52bf\uff0c\u94f6\u6cb3\u8bc1\u5238\u6307\u51fa\uff0c\u8282\u540e\u5e02\u573a\u77ed\u671f\u6ce2\u52a8\u539f\u56e0\u5305\u62ec\uff1a1)\u6625\u8282\u524d\u5e02\u573a\u60c5\u7eea\u9ad8\u6da8\uff0c\u7b2c\u4e00\u6ce2\u4e0a\u6da8\u5b9e\u73b0\u540e\uff0c\u6295\u8d44\u8005\u8f6c\u800c\u66f4\u52a0\u5173\u6ce8\u57fa\u672c\u9762\u662f\u5426\u80fd\u591f\u5151\u73b0\uff0c\u5e02\u573a\u51fa\u73b0\u9707\u8361\u30022)\u5317\u5411\u8d44\u91d1\u8282\u524d\u5927\u5e45\u51c0\u6d41\u5165\uff0c\u4f46\u5bf9\u6bd4\u7f8e\u56fd\u7ecf\u6d4e\u590d\u82cf\u521d\u671f\uff0c\u6211\u56fd\u76ee\u524d\u76f4\u63a5\u4fc3\u6d88\u8d39\u63aa\u65bd\u529b\u5ea6\u6709\u9650\uff0c\u53e0\u52a0\u8fd1\u671f\u4e0a\u5e02\u516c\u53f8\u4e1a\u7ee9\u9010\u6b65\u62ab\u9732\u5151\u73b0\uff0c\u7ecf\u6d4e\u4fee\u590d\u4ecd\u6709\u90e8\u5206\u4e0d\u786e\u5b9a\u6027\u56e0\u7d20\u5b58\u5728\uff0c\u6216\u4e0e\u5916\u8d44\u5bf9\u6211\u56fd\u7ecf\u6d4e\u590d\u82cf\u7684\u8282\u594f\u5224\u65ad\u4ea7\u751f\u9884\u671f\u5dee\uff0c\u8282\u540e\u4e5f\u53ef\u4ee5\u770b\u5230\u5317\u5411\u8d44\u91d1\u6d41\u5165\u77ed\u6682\u653e\u7f13\uff0c\u589e\u91cf\u8d44\u91d1\u7684\u652f\u6301\u51cf\u5f31\u30023)\u4ece\u5df2\u62ab\u97322022\u5e74\u62a5\u4e1a\u7ee9\u9884\u544a\u6765\u770b\uff0c\u53d7\u53bb\u5e74\u56db\u5b63\u5ea6\u53d7\u75ab\u60c5\u51b2\u51fb\u62d6\u7d2f\uff0c\u90e8\u5206\u4f01\u4e1a\u5f00\u5de5\u53ca\u5c45\u6c11\u6d88\u8d39\u90fd\u53d7\u5230\u8f83\u5927\u5f71\u54cd\uff0c\u9884\u8ba12022\u5e74\u5e74\u62a5\u4e1a\u7ee9\u4ecd\u5904\u5e95\u90e8\u533a\u95f4\u30024)\u5916\u56f4\u5e02\u573a\u6765\u770b\uff0c\u7f8e\u56fd\u5c31\u4e1a\u6570\u636e\u5927\u8d85\u9884\u671f\u5f15\u53d1\u6295\u8d44\u8005\u5bf9\u7f8e\u8054\u50a8\u52a0\u606f\u9884\u671f\u4ea7\u751f\u5206\u6b67\uff0c\u77ed\u671f\u5f15\u53d1\u5e02\u573a\u62c5\u5fe7\u3002&nbsp;\u8be5\u673a\u6784\u8ba4\u4e3a\uff0c\u867d\u76ee\u524d\u5e02\u573a\u77ed\u671f\u6709\u4e00\u5b9a\u6ce2\u52a8\uff0c\u4f46\u4e2d\u671f\u4e2d\u56fd\u7ecf\u6d4e\u4f01\u7a33\u589e\u957f\u9884\u671f\u5c06\u4e0d\u65ad\u5151\u73b0\u3001\u5e02\u573a\u6d41\u52a8\u6027\u5145\u8db3\u652f\u6491\u3001\u76c8\u5229\u9762\u9010\u6b65\u56de\u6696\u7b49\u5bf9\u5e02\u573a\u5f62\u6210\u652f\u6491\u3002\u540c\u65f6\u6625\u8282\u5e76\u672a\u5e26\u6765\u4e8c\u6b21\u75ab\u60c5\u9ad8\u5cf0\u4f7f\u5185\u8d44\u5bf9\u75ab\u60c5\u53cd\u590d\u7684\u62c5\u5fe7\u4e0b\u964d\uff0c\u672a\u6765\u5185\u8d44\u6216\u5c06\u9010\u6b65\u63a5\u68d2\u5317\u5411\u8d44\u91d1\u3002\u4ece\u98ce\u683c\u89d2\u5ea6\u770b\uff0c2022\u5e7411\u6708\u4ee5\u6765\uff0c\u5e02\u573a\u6625\u5b63\u8e81\u52a8\u6548\u5e94\u6f14\u7ece\u5145\u5206\uff0c\u5927\u76d8\u80a1\u957f\u52bf\u8f83\u597d\u3002\u4ece1\u6708\u4efd\u4ee5\u6765\uff0c \u4e2d\u5c0f\u76d8 \u80a1\u5f00\u59cb\u9010\u6e10\u4e3e\u8d77\uff0c\u884c\u4e1a\u4e5f\u4ece\u6d88\u8d39\u5207\u6362\u5230\u79d1\u6280\uff0c\u98ce\u683c\u5207\u6362\u660e\u663e\uff0c\u6211\u4eec\u8ba4\u4e3a\u77ed\u671f \u5c0f\u76d8\u6210\u957f \u98ce\u683c\u6216\u5ef6\u7eed\u5360\u4f18\uff1a\u4e00\u662f\u6210\u957f\u677f\u5757\uff0c\u5c24\u5176\u662fTMT\u677f\u5757\uff0c\u6574\u4f53\u4f30\u503c\u5904\u4e8e\u5386\u53f2\u8f83\u4f4e\u4f4d\u7f6e\uff0c\u5b89\u5168\u57ab\u9ad8\uff0c\u53cd\u5f39\u52a8\u529b\u5f3a\u3002\u4e8c\u662f\u4ece\u8d44\u91d1\u6d41\u52a8\u7684\u89c6\u89d2\uff0c\u6d88\u8d39\u677f\u5757\u5728\u7ecf\u5386\u5feb\u901f\u4e0a\u6da8\u540e\uff0c\u76ee\u524d\u80a1\u4ef7\u6709\u6240\u56de\u843d\uff0c\u6210\u957f\u677f\u5757\u4ecd\u662f\u8d44\u91d1\u914d\u7f6e\u7684\u6700\u4f18\u9009\u62e9\u3002\u4e09\u662f\u4e3b\u9898\u98ce\u683c\u7684\u6f14\u7ece\u50ac\u5316\u5e26\u52a8\u6210\u957f\u677f\u5757\u7684\u4e0a\u884c\uff0c\u884c\u4e1a\u666f\u6c14\u5ea6\u6301\u7eed\u63d0\u5347\uff0c\u5982\u8fd1\u671fChatGPT\u7684\u5feb\u901f\u7a81\u7834\u4e5f\u4f7f\u5f97 \u4eba\u5de5\u667a\u80fd \u4ea7\u4e1a\u94fe\u5907\u53d7\u6295\u8d44\u8005\u9752\u7750\uff0c\u672a\u6765\u53d1\u5c55\u7a7a\u95f4\u5e7f\u9614\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u76ee\u524d\u6210\u957f\u677f\u5757\u4e0a\u6da8\u8f83\u5feb\uff0c\u77ed\u671f\u53ef\u80fd\u9762\u4e34\u4ea4\u6613\u8fc7\u70ed\u6216\u6280\u672f\u4f4d\u8c03\u6574\u7684\u98ce\u9669\uff0c\u4f46\u6574\u4f53\u6765\u770b\uff0c\u5c0f\u76d8\u98ce\u683c\u5360\u4f18\u7684\u8d8b\u52bf\u4ecd\u5c06\u5ef6\u7eed\u3002\u56db\u662f\u4ece\u6295\u8d44\u65e5\u5386\u89d2\u5ea6\u6765\u770b\uff0c2\u6708\u79d1\u6280\u677f\u5757\u80dc\u7387\u8f83\u9ad8\u3002&nbsp;\u3010\u65b0\u80a1\u7533\u8d2d\u3011&nbsp;\u4e00\u81f4\u9b54\u828b\u8bc1\u5238\u4ee3\u7801839273\uff0c\u53d1\u884c\u4ef711.38\u5143\uff0c\u53d1\u884c\u5e02\u76c8\u738715.98\u500d\uff0c\u4e3b\u8425\u9b54\u828b\u53ca\u9b54\u828b\u76f8\u5173\u4ea7\u54c1\u3002&nbsp;\u626c\u5dde\u91d1\u6cc9\u8bc1\u5238\u4ee3\u7801603307\uff0c\u53d1\u884c\u4ef731.04\u5143\uff0c\u53d1\u884c\u5e02\u76c8\u738721.61\u500d\uff0c\u4e3b\u8425\u5e10\u7bf7\u548c\u7761\u888b\u3002&nbsp;\u5764\u6cf0\u80a1\u4efd\u8bc1\u5238\u4ee3\u7801001260\uff0c\u53d1\u884c\u4ef714.27\u5143\uff0c\u53d1\u884c\u5e02\u76c8\u738722.98\u500d\uff0c\u4e3b\u8425\u6c7d\u8f66\u5730\u6bef\u3001\u811a\u57ab\u3002&nbsp;\u4e09\u3001\u516c\u53f8\u516c\u544a\u548c\u9884\u8b66&nbsp;\u3010\u4e1a\u7ee9\u3011&nbsp;\u901a\u5316\u4e1c\u5b9d\uff1a\u4e1a\u7ee9\u5feb\u62a52022\u5e74\u51c0\u5229\u540c\u6bd4\u589e21.46%&nbsp;\u5bcc\u714c\u94a2\u6784\uff1a2022\u5e74\u7d2f\u8ba1\u65b0\u7b7e\u9500\u552e\u5408\u540c\u989d\u7ea649.8\u4ebf\u5143 \u540c\u6bd4\u4e0b\u964d11%&nbsp;\u65b0\u57ce\u63a7\u80a1\uff1a1\u6708\u5b9e\u73b0\u5408\u540c\u9500\u552e\u91d1\u989d\u7ea657.76\u4ebf\u5143 \u6bd4\u4e0a\u5e74\u540c\u671f\u51cf\u5c1126.54%&nbsp;\u91d1\u5730\u5546\u7f6e\uff1a1\u6708\u5408\u7ea6\u9500\u552e\u7ea622.96\u4ebf\u5143 \u540c\u6bd4\u964d59.68%&nbsp;\u878d\u4fe1\u4e2d\u56fd\uff1a1\u6708\u5408\u7ea6\u9500\u552e\u7ea69.95\u4ebf\u5143 \u540c\u6bd4\u964d84.7%&nbsp;\u65b0\u57ce\u53d1\u5c55\uff1a1\u6708\u5408\u7ea6\u9500\u552e\u91d1\u989d\u7ea657.76\u4ebf\u5143 \u540c\u6bd4\u964d24.81%&nbsp;\u534e\u5b89\u8bc1\u5238\uff1a\u4e1a\u7ee9\u5feb\u62a52022\u5e74\u5b9e\u73b0\u51c0\u522911.81\u4ebf\u5143 \u540c\u6bd4\u964d17%&nbsp;\u6052\u6295\u8bc1\u5238\uff1a\u9884\u8ba12022\u5e74\u5ea6\u80a1\u4e1c\u5e94\u5360\u4e8f\u635f\u7ea611.59\u4ebf\u5143 \u540c\u6bd4\u76c8\u8f6c\u4e8f&nbsp;\u4fdd\u5229\u7f6e\u4e1a\uff1a1\u6708\u5408\u540c\u9500\u552e\u91d1\u989d\u7ea649\u4ebf\u5143 \u540c\u6bd4\u589e\u957f105%&nbsp;\u878d\u521b\u4e2d\u56fd\uff1a1\u6708\u5408\u540c\u9500\u552e\u7ea672.3\u4ebf\u5143 \u540c\u6bd4\u964d74.1%&nbsp;\u3010\u91cd\u5927\u4e8b\u9879\u3011&nbsp;\u6c38\u9f0e\u80a1\u4efd\uff1a\u5168\u8d44\u5b50\u516c\u53f8\u83b7\u5f9712.4\u4ebf\u5143\u7ebf\u675f\u4e1a\u52a1\u4e2d\u6807\u786e\u8ba4&nbsp;\u5eb7\u8dc3\u79d1\u6280\uff1a\u62df\u5c06\u8bc1\u5238\u7b80\u79f0\u53d8\u66f4\u4e3a&ldquo;\u957f\u836f\u63a7\u80a1&rdquo;&nbsp;\u58f9\u7f51\u58f9\u521b\uff1a\u516c\u53f8\u76ee\u524d\u5df2\u90e8\u7f72AI\u5185\u5bb9\u5206\u6790&nbsp;\u5965\u98de\u6570\u636e\uff1a\u516c\u53f8\u4e3a\u767e\u5ea6AI\u4e1a\u52a1\u63d0\u4f9b\u7b97\u529b\u670d\u52a1\u652f\u6301&nbsp;\u6676\u65b9\u79d1\u6280\uff1a&ldquo;MEMS \u4f20\u611f\u5668 \u82af\u7247\u5148\u8fdb\u5c01\u88c5\u6d4b\u8bd5\u5e73\u53f0&rdquo;\u9879\u76ee\u83b7\u5f97\u7acb\u9879\u6279\u590d&nbsp;\u5408\u5174\u80a1\u4efd\uff1a\u62df\u516c\u5f00\u53d1\u884c\u53ef\u8f6c\u503a\u52df\u8d44\u4e0d\u8d856.1\u4ebf\u5143&nbsp;\u98ce\u8bed\u7b51\uff1a\u516c\u53f8\u5df2\u7ed3\u5408AIGC\u6280\u672f\u5728\u6587\u751f\u6587\u3001\u6587\u751f\u56fe\u3001\u6587\u751f\u97f3\u89c6\u9891\u7b49\u9886\u57df\u8fdb\u884c\u573a\u666f\u5e94\u7528&nbsp;\u4fdd\u5229\u53d1\u5c55\uff1a\u62df\u6253\u5305\u8f6c\u8ba912\u4e2a\u4e0e \u78a7\u6842\u56ed \u5408\u4f5c\u9879\u76ee\u516c\u53f8\u80a1\u6743&nbsp;\u5927\u65cf\u6fc0\u5149\uff1a\u76ee\u524d\u63a5\u8fd1\u5f0f \u5149\u523b\u673a \u5df2\u6295\u5165\u5e02\u573a&nbsp;\u51ef\u7acb\u65b0\u6750\uff1a\u62df\u5b9a\u589e\u52df\u8d44\u4e0d\u8d85\u8fc710.75\u4ebf\u5143&nbsp;\u5b87\u901a\u5ba2\u8f66\uff1a\u5b87\u901a\u96c6\u56e2\u7b49\u62df\u8981\u7ea6\u6536\u8d2d\u516c\u53f8\u80a1\u4efd \u8981\u7ea6\u4ef7\u4e3a7.89\u5143/\u80a1&nbsp;\u3010\u589e\u51cf\u6301\u3011&nbsp;\u5929\u901a\u80a1\u4efd\uff1a\u516c\u53f8\u62df\u51cf\u6301 \u4e9a\u5149\u79d1\u6280 \u4e0d\u8d851%\u80a1\u4efd&nbsp;\u9686\u534e\u65b0\u6750\uff1a\u65b0\u4f59\u9686\u632f\u62df\u51cf\u6301\u4e0d\u8d850.88%&nbsp;\u6d77\u7a0b\u90a6\u8fbe\uff1a\u80a1\u4e1c\u53ca\u8463\u76d1\u9ad8\u62df\u51cf\u6301\u4e0d\u8d851.91%&nbsp;ST\u5f00\u5143\uff1a\u5b9e\u63a7\u4eba\u62df\u51cf\u6301\u516c\u53f8\u4e0d\u8d851.4%\u80a1\u4efd&nbsp;\u6c83\u5c14\u5fb7\uff1a\u5b9e\u9645\u63a7\u5236\u4eba\u53ca\u4e00\u81f4\u884c\u52a8\u4eba\u62df\u5408\u8ba1\u51cf\u6301\u4e0d\u8d854.01%&nbsp;\u6d77\u5357\u9ad8\u901f\uff1a\u62df\u51cf\u6301\u4e0d\u8d85 \u6d77\u6c7d\u96c6\u56e2 3%\u80a1\u4efd&nbsp;\u9a6c\u4e91\u51cf\u6301\u7ea63194\u4e07\u6e2f\u5143\uff0c\u865e\u950b\u51cf\u6301\u7ea65728\u4e07\u6e2f\u5143\u817e\u76db\u535a\u836f&nbsp;\u795e\u5dde\u6570\u7801\uff1a\u80a1\u4e1c\u738b\u6653\u5ca9\u62df\u51cf\u6301\u4e0d\u8d852%\u80a1\u4efd&nbsp;\u53cb\u90a6\u4fdd\u9669\uff1a\u56de\u8d2d263.08\u4e07\u80a1 \u8017\u8d44\u7ea62.25\u4ebf\u6e2f\u5143&nbsp;\u3010\u9884\u8b66\u3011&nbsp;\u5ddd\u80fd\u52a8\u529b\uff1a\u516c\u53f8\u8463\u4e8b\u957f\u88ab\u7acb\u6848\u8c03\u67e5&nbsp;\u4e91\u4ece\u79d1\u6280\uff1a\u672a\u4e0eOpenAI\u5f00\u5c55\u5408\u4f5c ChatGPT\u7684\u4ea7\u54c1\u548c\u670d\u52a1\u672a\u7ed9\u516c\u53f8\u5e26\u6765\u4e1a\u52a1\u6536\u5165&nbsp;\u6d77\u5929\u745e\u58f0\uff1a\u5c1a\u672a\u4e0eOpenAI\u5f00\u5c55\u5408\u4f5c ChatGPT\u4ea7\u54c1\u548c\u670d\u52a1\u5c1a\u672a\u7ed9\u516c\u53f8\u5e26\u6765\u4e1a\u52a1\u6536\u5165&nbsp;\u65b0\u56fd\u90fd\uff1a\u5b50\u516c\u53f8\u4e1a\u52a1\u6682\u4e0d\u6d89\u53caChatGPT\u6587\u672c\u751f\u6210\u5f0fAIGC\u9886\u57df&nbsp;ST\u4e09\u5723\uff1a\u516c\u53f8\u53ca\u63a7\u80a1\u80a1\u4e1c\u6f58\u5148\u6587\u906d\u8bc1\u76d1\u4f1a\u7acb\u6848&nbsp;\"\"\"\r\n\r\nimport os\r\nfrom langchain.text_splitter import CharacterTextSplitter, RecursiveCharacterTextSplitter\r\n\r\ntext_splitter = RecursiveCharacterTextSplitter(separators=[\"\\n\\n\", \"\\n\", \"\u3002\", \"&nbsp;\"], keep_separator=False, chunk_size=256, chunk_overlap=64)\r\ndocs = text_splitter.create_documents([text])\r\ndocs\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nBUG: I get 19 documents. For example, let's see the 2nd and 3rd document. They actually don't have any overlaps. They are exactly cut by  `\u3002`  in the middle (which I mark it with `||` ) : `2\u67086\u65e5\uff0c\u6caa\u6df1\u4e24\u5e02\u4e09\u5927\u6307\u6570\u5f31\u52bf\u9707\u8361\uff0c\u6caa\u6307\u8dcc0.76%\uff0c \u6df1\u8bc1\u6210\u6307 \u8dcc1.18%\uff0c \u521b\u4e1a\u677f \u6307\u8dcc1.4%` `||` `\u3002` `||` `\u76d8\u9762\u4e0a\u770b\uff0c ChatGPT\u6982\u5ff5 \u6301\u7eed\u706b\u7206\uff0c \u6d77\u5929\u745e\u58f0 \u3001 \u4e91\u4ece\u79d1\u6280 \u6da8\u505c6\u4e2a\u4ea4\u6613\u65e5\u7ffb\u500d\uff1b ` . I put the example below:\r\n\r\n1st: ... is ok, have a trunc of overlap\r\n2nd: `2\u67085\u65e5\u5355\u65e5\u5b9e\u65f6\u7968\u623f\u8d851.3\u4ebf\u5143\uff0c\u9886\u5148\u7b2c\u4e8c\u540d\u300a\u6ee1\u6c5f\u7ea2\u300b\u8fd12000\u4e07\uff0c\u9501\u5b9a\u5355\u65e5\u7968\u623f\u51a0\u519b\u3002\u76ee\u524d\uff0c\u300a\u6d41\u6d6a\u5730\u74032\u300b\u7684\u7968\u623f\u5360\u6bd434.5%\uff0c\u6392\u7247\u573a\u6b2192126\u6b21\u3002&nbsp;\u4e8c\u3001\u5e02\u573a\u56de\u987e\u3010\u56fd\u5185\u80a1\u5e02\u3011&nbsp;1\u30012\u67086\u65e5\uff0c\u6caa\u6df1\u4e24\u5e02\u4e09\u5927\u6307\u6570\u5f31\u52bf\u9707\u8361\uff0c\u6caa\u6307\u8dcc0.76%\uff0c \u6df1\u8bc1\u6210\u6307 \u8dcc1.18%\uff0c \u521b\u4e1a\u677f \u6307\u8dcc1.4%`\r\n3rd: `\u76d8\u9762\u4e0a\u770b\uff0c ChatGPT\u6982\u5ff5 \u6301\u7eed\u706b\u7206\uff0c \u6d77\u5929\u745e\u58f0 \u3001 \u4e91\u4ece\u79d1\u6280 \u6da8\u505c6\u4e2a\u4ea4\u6613\u65e5\u7ffb\u500d\uff1b \u6570\u5b57\u7ecf\u6d4e \u6982\u5ff5\u76d8\u4e2d\u53d1\u9175\uff0c \u94dc\u725b\u4fe1\u606f \u6da8\u505c\uff1b\u4fe1\u521b\u3001\u8f6f\u4ef6\u80a1\u9006\u5e02\u8d70\u5f3a\uff0c \u9752 \u4e91\u79d1\u6280 \u6da8\u505c\uff1b\u516b\u90e8\u95e8\u9002\u5ea6\u8d85\u524d\u5efa\u8bbe\u5145\u6362\u7535\u57fa\u7840\u8bbe\u65bd\uff0c \u5145\u7535\u6869 \u6982\u5ff5\u6d3b\u8dc3\u3002 \u767d\u9152 \u3001CRO\u3001\u65b0\u51a0 \u75ab\u82d7 \u3001 \u5238\u5546 \u3001 \u9ec4\u91d1 \u6709\u8272\u3001 \u4fdd\u9669 \u3001 \u78f7\u5316\u5de5 \u7b49\u677f\u5757\u8dcc\u5e45\u5c45\u524d\u3002&nbsp;2\u3001\u6e2f\u80a1\u4f4e\u5f00\u4f4e\u8d70\uff0c\u622a\u81f3\u6536\u76d8\uff0c \u6052\u751f\u6307\u6570 \u8dcc2.02%\uff0c\u62a521222.16\u70b9\uff1b \u56fd\u4f01\u6307\u6570 \u8dcc2.68%\uff0c \u7ea2\u7b79\u6307\u6570 \u8dcc1.37%`\r\n\r\nThere are also a lot of non overlapped documents in these 19 splitted documents. Please have a lot. Thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8142/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8142/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8141",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8141/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8141/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8141/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8141",
        "id": 1816978039,
        "node_id": "I_kwDOIPDwls5sTOJ3",
        "number": 8141,
        "title": "Issue: Why condense the conversational history when Open AI provides a 'messages' field in its API?",
        "user": {
            "login": "brett-matson",
            "id": 74486738,
            "node_id": "MDQ6VXNlcjc0NDg2NzM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/74486738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brett-matson",
            "html_url": "https://github.com/brett-matson",
            "followers_url": "https://api.github.com/users/brett-matson/followers",
            "following_url": "https://api.github.com/users/brett-matson/following{/other_user}",
            "gists_url": "https://api.github.com/users/brett-matson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brett-matson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brett-matson/subscriptions",
            "organizations_url": "https://api.github.com/users/brett-matson/orgs",
            "repos_url": "https://api.github.com/users/brett-matson/repos",
            "events_url": "https://api.github.com/users/brett-matson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brett-matson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-23T04:01:03Z",
        "updated_at": "2023-10-23T22:41:46Z",
        "closed_at": "2023-10-23T22:41:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi there, \r\n\r\nI've found many scenarios where ConversationalRetrievalChain's attempt to condense a conversation history into a stand-alone question fails, either because the history is too complex or, for example, if the user simply provides an affirmation.\r\n\r\nWhy do we attempt to condense the conversational history when Open AI's chat API provides a [messages](https://platform.openai.com/docs/api-reference/chat/create#chat/create-messages) field for this purpose?\r\n\r\nIs there a way to construct a retrieval chain such that the messages field in Open AI's chat API can be used instead of attempting to condense the chat history into a stand-alone question?\r\n\n\n### Suggestion:\n\nProvide a way to construct a retrieval chain such that Open AI's chat API's messages field can be used instead of attempting to condense the question.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8141/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8141/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8140",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8140/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8140/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8140/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8140",
        "id": 1816959325,
        "node_id": "PR_kwDOIPDwls5WKCbX",
        "number": 8140,
        "title": "add llamaapi",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-23T02:16:14Z",
        "updated_at": "2023-07-23T16:16:18Z",
        "closed_at": "2023-07-23T16:16:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8140",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8140",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8140.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8140.patch",
            "merged_at": "2023-07-23T16:16:17Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8140/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8140/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8139",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8139/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8139/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8139/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8139",
        "id": 1816953626,
        "node_id": "PR_kwDOIPDwls5WKBTR",
        "number": 8139,
        "title": "beef up getting started",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-23T01:48:42Z",
        "updated_at": "2023-07-24T02:57:45Z",
        "closed_at": "2023-07-24T02:57:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8139",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8139",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8139.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8139.patch",
            "merged_at": "2023-07-24T02:57:44Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8139/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8139/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8138",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8138/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8138/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8138/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8138",
        "id": 1816916762,
        "node_id": "PR_kwDOIPDwls5WJ6AQ",
        "number": 8138,
        "title": "Harrison/agent intro",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-22T22:44:13Z",
        "updated_at": "2023-07-23T05:15:01Z",
        "closed_at": "2023-07-23T05:15:00Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8138",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8138",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8138.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8138.patch",
            "merged_at": "2023-07-23T05:15:00Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8138/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8138/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8137",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8137/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8137/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8137/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8137",
        "id": 1816905842,
        "node_id": "PR_kwDOIPDwls5WJ37x",
        "number": 8137,
        "title": "fix-typo",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-22T21:52:14Z",
        "updated_at": "2023-07-24T01:02:58Z",
        "closed_at": "2023-07-24T01:02:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8137",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8137",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8137.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8137.patch",
            "merged_at": null
        },
        "body": "more general questions about this function:\r\n\r\n```\r\n        return {\r\n            **super()._get_invocation_params(stop=stop, **kwargs),\r\n            **self._default_params,\r\n            \"model\": self.model_name,\r\n            \"functions\": kwargs.get(\"functions\"),\r\n        }\r\n```\r\n\r\n1. `**super()._get_invocation_params(stop=stop, **kwargs)` returns everything in kwargs, including functions (if present). do we do `\"functions\": kwargs.get(\"functions\"),` because we explicitly need to pass functions through even when not present? (im assuming this is not needed (because its been broken and we havent noticed) so can we just remove\r\n2. This ordering of \r\n\r\n```\r\n**super()._get_invocation_params(stop=stop, **kwargs),\r\n            **self._default_params,\r\n```\r\n\r\nmeans that if an arbitrary param is passed in through `kwargs` that is same as one in `**self._default_params,`, the one in defuaut params gets logged. imo we want to give preference to everything in kwargs right? why is this ordering the same?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8137/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8137/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8136",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8136/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8136/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8136/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8136",
        "id": 1816901883,
        "node_id": "PR_kwDOIPDwls5WJ3MN",
        "number": 8136,
        "title": "actually use input key",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-22T21:35:08Z",
        "updated_at": "2023-07-24T01:02:46Z",
        "closed_at": "2023-07-24T01:02:45Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8136",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8136",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8136.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8136.patch",
            "merged_at": "2023-07-24T01:02:45Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8136/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8136/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8135",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8135/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8135/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8135/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8135",
        "id": 1816890724,
        "node_id": "PR_kwDOIPDwls5WJ1BA",
        "number": 8135,
        "title": "Feature faiss delete",
        "user": {
            "login": "fqassemi",
            "id": 11998793,
            "node_id": "MDQ6VXNlcjExOTk4Nzkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/11998793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fqassemi",
            "html_url": "https://github.com/fqassemi",
            "followers_url": "https://api.github.com/users/fqassemi/followers",
            "following_url": "https://api.github.com/users/fqassemi/following{/other_user}",
            "gists_url": "https://api.github.com/users/fqassemi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fqassemi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fqassemi/subscriptions",
            "organizations_url": "https://api.github.com/users/fqassemi/orgs",
            "repos_url": "https://api.github.com/users/fqassemi/repos",
            "events_url": "https://api.github.com/users/fqassemi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fqassemi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-22T20:51:49Z",
        "updated_at": "2023-08-10T03:13:10Z",
        "closed_at": "2023-08-06T22:46:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8135",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8135",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8135.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8135.patch",
            "merged_at": "2023-08-06T22:46:30Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: docstore had two main method: add and search, however, dealing with docstore sometimes requires deleting an entry from docstore. So I have added a simple delete method that deletes items from docstore. Additionally, I have added the delete method to faiss vectorstore for the very same reason. \r\n  - Issue: NA\r\n  - Dependencies: NA\r\n  - Tag maintainer:  @rlancemartin, @eyurtsev\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8135/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8135/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8134",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8134/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8134/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8134/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8134",
        "id": 1816841116,
        "node_id": "PR_kwDOIPDwls5WJrvL",
        "number": 8134,
        "title": "Add embeddings for LocalAI",
        "user": {
            "login": "mudler",
            "id": 2420543,
            "node_id": "MDQ6VXNlcjI0MjA1NDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2420543?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mudler",
            "html_url": "https://github.com/mudler",
            "followers_url": "https://api.github.com/users/mudler/followers",
            "following_url": "https://api.github.com/users/mudler/following{/other_user}",
            "gists_url": "https://api.github.com/users/mudler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mudler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mudler/subscriptions",
            "organizations_url": "https://api.github.com/users/mudler/orgs",
            "repos_url": "https://api.github.com/users/mudler/repos",
            "events_url": "https://api.github.com/users/mudler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mudler/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-22T17:35:19Z",
        "updated_at": "2023-07-25T18:31:01Z",
        "closed_at": "2023-07-24T19:16:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8134",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8134",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8134.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8134.patch",
            "merged_at": "2023-07-24T19:16:49Z"
        },
        "body": "Description:\r\n\r\nThis PR adds embeddings for LocalAI ( https://github.com/go-skynet/LocalAI ), a self-hosted OpenAI drop-in replacement. As LocalAI can re-use OpenAI clients it is mostly following the lines of the OpenAI embeddings, however when embedding documents, it just uses string instead of sending tokens as sending tokens is best-effort depending on the model being used in LocalAI. Sending tokens is also tricky as token id's can mismatch with the model - so it's safer to just send strings in this case.\r\n\r\nPartly related to: https://github.com/hwchase17/langchain/issues/5256\r\n\r\nDependencies: No new dependencies\r\n\r\nTwitter: @mudler_it\r\n\r\nMaintainers: @rlancemartin, @eyurtsev, @hwchase17\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8134/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8134/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8133",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8133/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8133/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8133/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8133",
        "id": 1816840035,
        "node_id": "PR_kwDOIPDwls5WJrhl",
        "number": 8133,
        "title": "doc(sqldatabasechain): use views when jsonb column description is not available",
        "user": {
            "login": "samber",
            "id": 2951285,
            "node_id": "MDQ6VXNlcjI5NTEyODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2951285?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/samber",
            "html_url": "https://github.com/samber",
            "followers_url": "https://api.github.com/users/samber/followers",
            "following_url": "https://api.github.com/users/samber/following{/other_user}",
            "gists_url": "https://api.github.com/users/samber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/samber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/samber/subscriptions",
            "organizations_url": "https://api.github.com/users/samber/orgs",
            "repos_url": "https://api.github.com/users/samber/repos",
            "events_url": "https://api.github.com/users/samber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/samber/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-22T17:30:47Z",
        "updated_at": "2023-07-22T18:30:05Z",
        "closed_at": "2023-07-22T18:30:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8133",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8133",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8133.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8133.patch",
            "merged_at": "2023-07-22T18:30:05Z"
        },
        "body": "I think the PR diff is self explaining ;)\r\n\r\n@baskaryan",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8133/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8133/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8132",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8132/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8132/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8132/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8132",
        "id": 1816823556,
        "node_id": "I_kwDOIPDwls5sSocE",
        "number": 8132,
        "title": "create_sql_aqent not working with `AgentType.OPENAI_FUNCTIONS`",
        "user": {
            "login": "mljlynch",
            "id": 13424219,
            "node_id": "MDQ6VXNlcjEzNDI0MjE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13424219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mljlynch",
            "html_url": "https://github.com/mljlynch",
            "followers_url": "https://api.github.com/users/mljlynch/followers",
            "following_url": "https://api.github.com/users/mljlynch/following{/other_user}",
            "gists_url": "https://api.github.com/users/mljlynch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mljlynch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mljlynch/subscriptions",
            "organizations_url": "https://api.github.com/users/mljlynch/orgs",
            "repos_url": "https://api.github.com/users/mljlynch/repos",
            "events_url": "https://api.github.com/users/mljlynch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mljlynch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-22T16:35:34Z",
        "updated_at": "2023-10-29T16:04:36Z",
        "closed_at": "2023-10-29T16:04:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version: ```langchain = \"^0.0.236\"````\r\nPython 3.10.10\r\nMacOSx 13.4.1 (c) (22F770820d)\n\n### Who can help?\n\n@hwchase17 @agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nMysql 5.7 db. \r\n\r\n```\r\ntoolkit = SQLDatabaseToolkit(db=db, llm=OpenAI(temperature=0))\r\n\r\nagent_executor = create_sql_agent(\r\n    llm=ChatOpenAI(temperature=0, model=\"gpt-3.5-turbo-0613\"),\r\n    toolkit=toolkit,\r\n    verbose=False,\r\n    agent_type=AgentType.OPENAI_FUNCTIONS,\r\n)\r\n\r\n    response = agent_executor.run(question)\r\n```\r\n\r\nError message:\r\n\r\n```none is not an allowed value (type=type_error.none.not_allowed)```\r\n\r\nNote: It does work with `AgentType.ZERO_SHOT_REACT_DESCRIPTION`\r\n\r\n\n\n### Expected behavior\n\nI would expect a response from the agent\r\n\r\nObserved:\r\n\r\n```none is not an allowed value (type=type_error.none.not_allowed)```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8132/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8132/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8131",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8131/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8131/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8131/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8131",
        "id": 1816821052,
        "node_id": "PR_kwDOIPDwls5WJnw9",
        "number": 8131,
        "title": "Create langflow",
        "user": {
            "login": "Melih134",
            "id": 140193315,
            "node_id": "U_kgDOCFsuIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/140193315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Melih134",
            "html_url": "https://github.com/Melih134",
            "followers_url": "https://api.github.com/users/Melih134/followers",
            "following_url": "https://api.github.com/users/Melih134/following{/other_user}",
            "gists_url": "https://api.github.com/users/Melih134/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Melih134/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Melih134/subscriptions",
            "organizations_url": "https://api.github.com/users/Melih134/orgs",
            "repos_url": "https://api.github.com/users/Melih134/repos",
            "events_url": "https://api.github.com/users/Melih134/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Melih134/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-22T16:28:45Z",
        "updated_at": "2023-07-22T18:28:27Z",
        "closed_at": "2023-07-22T18:28:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8131",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8131",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8131.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8131.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8131/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8131/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8130",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8130/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8130/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8130/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8130",
        "id": 1816809973,
        "node_id": "PR_kwDOIPDwls5WJlkC",
        "number": 8130,
        "title": "edit prompt format method",
        "user": {
            "login": "DayuanJiang",
            "id": 34411969,
            "node_id": "MDQ6VXNlcjM0NDExOTY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/34411969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DayuanJiang",
            "html_url": "https://github.com/DayuanJiang",
            "followers_url": "https://api.github.com/users/DayuanJiang/followers",
            "following_url": "https://api.github.com/users/DayuanJiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/DayuanJiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DayuanJiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DayuanJiang/subscriptions",
            "organizations_url": "https://api.github.com/users/DayuanJiang/orgs",
            "repos_url": "https://api.github.com/users/DayuanJiang/repos",
            "events_url": "https://api.github.com/users/DayuanJiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DayuanJiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-22T15:53:53Z",
        "updated_at": "2023-07-22T18:32:46Z",
        "closed_at": "2023-07-22T18:32:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8130",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8130",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8130.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8130.patch",
            "merged_at": null
        },
        "body": "  - Description:  Modify the `PromptTemplate`'s `format` method behavior by temporarily altering the `__repr__` and `__format__` methods of the `Document` class. This will result in only the `page_content` being added to the template when conduct formatting. Refer to the unit test case below for further clarification.\r\n  - Issue: the issue #7967 it fixes\r\n  - Dependencies: No\r\n  - Tag maintainer: @baskaryan @rlancemartin\r\n  - Twitter handle: dayuanjian21687\r\n\r\nBelow is the unit test cases.\r\n\r\n```python\r\n    prompt = PromptTemplate.from_template(\"This is a {var} test.\")\r\n    # if the variable is string\r\n    output = prompt.format(var=\"good\")\r\n    assert output == \"This is a good test.\"\r\n\r\n    # if the variable is Document without meta_data\r\n    doc = Document(page_content=\"good\")\r\n    output = prompt.format(var=doc)\r\n    print(output)\r\n    assert output == \"This is a 'good' test.\"\r\n\r\n    # if the variable is Document with meta_data\r\n    doc = Document(page_content=\"good\", meta_data={\"bar\": \"baz\"})\r\n    output = prompt.format(var=doc)\r\n    assert output == \"This is a 'good' test.\"\r\n    \r\n    # if the variable is Document and it is inside a list\r\n    doc1 = Document(page_content=\"good1\", meta_data={\"bar\": \"baz\"})\r\n    doc2 = Document(page_content=\"good2\", meta_data={\"bar\": \"baz\"})\r\n    output = prompt.format(var=[doc1, doc2])\r\n    assert output == \"This is a ['good1', 'good2'] test.\"\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8130/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8130/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8129",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8129/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8129/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8129/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8129",
        "id": 1816803502,
        "node_id": "PR_kwDOIPDwls5WJkTd",
        "number": 8129,
        "title": "bump versions",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-22T15:32:35Z",
        "updated_at": "2023-07-22T15:46:38Z",
        "closed_at": "2023-07-22T15:46:37Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8129",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8129",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8129.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8129.patch",
            "merged_at": "2023-07-22T15:46:37Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8129/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8129/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8128",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8128/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8128/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8128/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8128",
        "id": 1816799265,
        "node_id": "PR_kwDOIPDwls5WJjfX",
        "number": 8128,
        "title": "Harrison/add back in experimental",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-22T15:18:31Z",
        "updated_at": "2023-07-22T15:27:30Z",
        "closed_at": "2023-07-22T15:27:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8128",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8128",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8128.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8128.patch",
            "merged_at": "2023-07-22T15:27:29Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8128/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8128/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8127",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8127/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8127/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8127/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8127",
        "id": 1816788938,
        "node_id": "PR_kwDOIPDwls5WJhfB",
        "number": 8127,
        "title": "fix empty ids when metadatas is provided",
        "user": {
            "login": "Bearnardd",
            "id": 43574448,
            "node_id": "MDQ6VXNlcjQzNTc0NDQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/43574448?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Bearnardd",
            "html_url": "https://github.com/Bearnardd",
            "followers_url": "https://api.github.com/users/Bearnardd/followers",
            "following_url": "https://api.github.com/users/Bearnardd/following{/other_user}",
            "gists_url": "https://api.github.com/users/Bearnardd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Bearnardd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Bearnardd/subscriptions",
            "organizations_url": "https://api.github.com/users/Bearnardd/orgs",
            "repos_url": "https://api.github.com/users/Bearnardd/repos",
            "events_url": "https://api.github.com/users/Bearnardd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Bearnardd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-22T14:45:11Z",
        "updated_at": "2023-07-28T23:17:32Z",
        "closed_at": "2023-07-28T23:17:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8127",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8127",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8127.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8127.patch",
            "merged_at": "2023-07-28T23:17:31Z"
        },
        "body": "Fixes https://github.com/hwchase17/langchain/issues/7865 and https://github.com/hwchase17/langchain/issues/8061\r\n\r\n- [x] fixes returning empty ids when metadatas argument is provided\r\n\r\n@baskaryan\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8127/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8127/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8126",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8126/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8126/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8126/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8126",
        "id": 1816778695,
        "node_id": "I_kwDOIPDwls5sSdfH",
        "number": 8126,
        "title": "Issue: Using qdrant.as_retriver() to use the filtered data of a collection (filtered on the basis of payload data)",
        "user": {
            "login": "shubham184",
            "id": 38903550,
            "node_id": "MDQ6VXNlcjM4OTAzNTUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/38903550?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shubham184",
            "html_url": "https://github.com/shubham184",
            "followers_url": "https://api.github.com/users/shubham184/followers",
            "following_url": "https://api.github.com/users/shubham184/following{/other_user}",
            "gists_url": "https://api.github.com/users/shubham184/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shubham184/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shubham184/subscriptions",
            "organizations_url": "https://api.github.com/users/shubham184/orgs",
            "repos_url": "https://api.github.com/users/shubham184/repos",
            "events_url": "https://api.github.com/users/shubham184/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shubham184/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-22T14:09:54Z",
        "updated_at": "2023-11-03T16:06:32Z",
        "closed_at": "2023-11-03T16:06:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nUnable to use metadata filtering of a collection qdrant and then use it in as_retriever function.\n\n### Suggestion:\n\nQdrant.from_documents should include a filtering method as well to filer on the collection with payload (metadata)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8126/reactions",
            "total_count": 3,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8126/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8125",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8125/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8125/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8125/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8125",
        "id": 1816770103,
        "node_id": "I_kwDOIPDwls5sSbY3",
        "number": 8125,
        "title": "call directly the prompt of GPT4All Model",
        "user": {
            "login": "Mabenan",
            "id": 4959465,
            "node_id": "MDQ6VXNlcjQ5NTk0NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4959465?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mabenan",
            "html_url": "https://github.com/Mabenan",
            "followers_url": "https://api.github.com/users/Mabenan/followers",
            "following_url": "https://api.github.com/users/Mabenan/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mabenan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mabenan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mabenan/subscriptions",
            "organizations_url": "https://api.github.com/users/Mabenan/orgs",
            "repos_url": "https://api.github.com/users/Mabenan/repos",
            "events_url": "https://api.github.com/users/Mabenan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mabenan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-22T13:43:02Z",
        "updated_at": "2023-07-25T08:29:19Z",
        "closed_at": "2023-07-25T08:29:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain 0.0.238\r\nSystem: WSL - Ubuntu\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [X] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nUse the ConversationBufferMemory and Prompt Templates.\r\n\r\nif you have the template\r\n```python\r\n\"\"\"\r\nHuman: Ask question\r\nAssistant:\r\n\"\"\"\r\n```\r\n\r\nThe prompt passed to GPT4AllModel is again templated by gpt4all.py to avoid which results in the following prompt which is passed to the model\r\n\r\n```python\r\n\"\"\"\r\n### Human Human: Ask question\r\nAssistant:\r\n### Assistant:\r\n\"\"\"\r\n```\r\nThis leads to incorrect answers where models are trying to talk to them self as human and assistant\r\n\r\nif we directly call GPT4AllModel.model.prompt_model_streaming we are giving the prompt the user indented.\n\n### Expected behavior\n\nThat the prompt Template is used that the user/developer gives the Chain",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8125/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8125/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8124",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8124/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8124/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8124/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8124",
        "id": 1816761563,
        "node_id": "PR_kwDOIPDwls5WJcML",
        "number": 8124,
        "title": "Add batch processing and wait time to FAISS from_texts method",
        "user": {
            "login": "syusuke9999",
            "id": 6879863,
            "node_id": "MDQ6VXNlcjY4Nzk4NjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6879863?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/syusuke9999",
            "html_url": "https://github.com/syusuke9999",
            "followers_url": "https://api.github.com/users/syusuke9999/followers",
            "following_url": "https://api.github.com/users/syusuke9999/following{/other_user}",
            "gists_url": "https://api.github.com/users/syusuke9999/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/syusuke9999/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/syusuke9999/subscriptions",
            "organizations_url": "https://api.github.com/users/syusuke9999/orgs",
            "repos_url": "https://api.github.com/users/syusuke9999/repos",
            "events_url": "https://api.github.com/users/syusuke9999/events{/privacy}",
            "received_events_url": "https://api.github.com/users/syusuke9999/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-22T13:13:27Z",
        "updated_at": "2023-08-05T11:22:51Z",
        "closed_at": "2023-07-22T18:52:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8124",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8124",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8124.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8124.patch",
            "merged_at": null
        },
        "body": "Description: This pull request introduces two new optional parameters to the from_texts method in the FAISS class: batch_size and wait_time. When both parameters are provided, the method will process the texts in batches, waiting for a specified amount of time between each batch. This can be useful when dealing with rate-limited APIs such as the OpenAI API. If tqdm is not installed, an ImportError will be raised.\r\n\r\nIssue: This change addresses the issue of handling large volumes of text processing when using rate-limited APIs (solution to issue #634).\r\n\r\nDependencies: This change requires the tqdm module.\r\n\r\nTag maintainer: @rlancemartin, @eyurtsev (as this change is related to VectorStores)\r\n\r\nTwitter handle: @syusuke7777 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8124/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8124/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8123",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8123/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8123/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8123/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8123",
        "id": 1816729475,
        "node_id": "I_kwDOIPDwls5sSReD",
        "number": 8123,
        "title": "Issue: Rewrite SelfQueryRetriever llm prompt for better results",
        "user": {
            "login": "AB00k",
            "id": 121571684,
            "node_id": "U_kgDOBz8JZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/121571684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AB00k",
            "html_url": "https://github.com/AB00k",
            "followers_url": "https://api.github.com/users/AB00k/followers",
            "following_url": "https://api.github.com/users/AB00k/following{/other_user}",
            "gists_url": "https://api.github.com/users/AB00k/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AB00k/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AB00k/subscriptions",
            "organizations_url": "https://api.github.com/users/AB00k/orgs",
            "repos_url": "https://api.github.com/users/AB00k/repos",
            "events_url": "https://api.github.com/users/AB00k/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AB00k/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-22T11:23:10Z",
        "updated_at": "2023-10-28T16:04:20Z",
        "closed_at": "2023-10-28T16:04:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nHow I can change the value of \"retriever.llm_chain.prompt\" accordingly for specific task to achieve better and accurate results as self Query retrieval isn't working with Open source LLMs it raises following error and there is an issue related to this error that's not yet resolved as well.\r\n\r\nOutputParserException: Parsing text\r\n\r\n{\r\n    \"query\": \"simon josu\",\r\n    \"filter\": \"and(eq(\\\"from\\\", \\\"Simon assistant app Josu\\\"), geq(\\\"date_received\\\", \\\"2020-12-14T00:00:00Z\\\"))\"\r\n}\r\nraised following error:\r\nReceived unrecognized function geq. Valid functions are [<Operator.AND: 'and'>, <Operator.OR: 'or'>, <Operator.NOT: 'not'>, <Comparator.EQ: 'eq'>, <Comparator.GT: 'gt'>, <Comparator.GTE: 'gte'>, <Comparator.LT: 'lt'>, <Comparator.LTE: 'lte'>]\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8123/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8123/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8122",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8122/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8122/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8122/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8122",
        "id": 1816718804,
        "node_id": "I_kwDOIPDwls5sSO3U",
        "number": 8122,
        "title": "missing parameter in similarity_search function in azuresearch.py",
        "user": {
            "login": "jshang11",
            "id": 126711875,
            "node_id": "U_kgDOB414Qw",
            "avatar_url": "https://avatars.githubusercontent.com/u/126711875?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jshang11",
            "html_url": "https://github.com/jshang11",
            "followers_url": "https://api.github.com/users/jshang11/followers",
            "following_url": "https://api.github.com/users/jshang11/following{/other_user}",
            "gists_url": "https://api.github.com/users/jshang11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jshang11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jshang11/subscriptions",
            "organizations_url": "https://api.github.com/users/jshang11/orgs",
            "repos_url": "https://api.github.com/users/jshang11/repos",
            "events_url": "https://api.github.com/users/jshang11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jshang11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-22T10:43:30Z",
        "updated_at": "2023-10-28T16:04:25Z",
        "closed_at": "2023-10-28T16:04:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nat line 250, self.semantic_hybrid_search function only pass two parameters, query and k. it missing \"**kwargs \"\r\n\r\n\r\n241     def similarity_search(\r\n242         self, query: str, k: int = 4, **kwargs: Any\r\n243     ) -> List[Document]:\r\n244         search_type = kwargs.get(\"search_type\", self.search_type)\r\n245         if search_type == \"similarity\":\r\n246             docs = self.vector_search(query, k=k)\r\n247         elif search_type == \"hybrid\":\r\n248             docs = self.hybrid_search(query, k=k)\r\n249         elif search_type == \"semantic_hybrid\":\r\n250         #    docs = self.semantic_hybrid_search(query, k=k)\r\n251             docs = self.semantic_hybrid_search(query, k=k ,**kwargs )\r\n252         else:\r\n253             raise ValueError(f\"search_type of {search_type} not allowed.\")\r\n254         return docs\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nwithout passing \"**kwargs \", filter won't work \n\n### Expected behavior\n\n docs = vector_store.similarity_search(\r\n                query=query,\r\n                k=3,\r\n                search_type=\"semantic_hybrid\",\r\n                searchFields='content_vector',\r\n                filters=\"mrn eq '04c3a6bcfcc821d7b7ac722713f4bf7c'\",\r\n            )\r\n\r\nreturn doc with filtered by filter condition ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8122/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8122/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8121",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8121/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8121/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8121/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8121",
        "id": 1816713770,
        "node_id": "PR_kwDOIPDwls5WJS2t",
        "number": 8121,
        "title": "GitHub toolkit improvements",
        "user": {
            "login": "Gordon-BP",
            "id": 77560236,
            "node_id": "MDQ6VXNlcjc3NTYwMjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/77560236?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gordon-BP",
            "html_url": "https://github.com/Gordon-BP",
            "followers_url": "https://api.github.com/users/Gordon-BP/followers",
            "following_url": "https://api.github.com/users/Gordon-BP/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gordon-BP/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gordon-BP/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gordon-BP/subscriptions",
            "organizations_url": "https://api.github.com/users/Gordon-BP/orgs",
            "repos_url": "https://api.github.com/users/Gordon-BP/repos",
            "events_url": "https://api.github.com/users/Gordon-BP/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gordon-BP/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-22T10:24:44Z",
        "updated_at": "2023-07-24T03:17:54Z",
        "closed_at": "2023-07-24T03:17:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8121",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8121",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8121.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8121.patch",
            "merged_at": "2023-07-24T03:17:54Z"
        },
        "body": "Fixes an issue with the github tool where the API returned special objects but the tool was expecting dictionaries.\r\n\r\nAlso added proper docstrings to the GitHubAPIWraper methods and a (very basic) integration test.\r\n\r\nMaintainer responsibilities:\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8121/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8121/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8120",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8120/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8120/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8120/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8120",
        "id": 1816695175,
        "node_id": "PR_kwDOIPDwls5WJPZO",
        "number": 8120,
        "title": "add HuggingGPT Agent",
        "user": {
            "login": "tricktreat",
            "id": 25740077,
            "node_id": "MDQ6VXNlcjI1NzQwMDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/25740077?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tricktreat",
            "html_url": "https://github.com/tricktreat",
            "followers_url": "https://api.github.com/users/tricktreat/followers",
            "following_url": "https://api.github.com/users/tricktreat/following{/other_user}",
            "gists_url": "https://api.github.com/users/tricktreat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tricktreat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tricktreat/subscriptions",
            "organizations_url": "https://api.github.com/users/tricktreat/orgs",
            "repos_url": "https://api.github.com/users/tricktreat/repos",
            "events_url": "https://api.github.com/users/tricktreat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tricktreat/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-22T09:16:39Z",
        "updated_at": "2023-07-24T04:55:54Z",
        "closed_at": "2023-07-24T04:55:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8120",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8120",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8120.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8120.patch",
            "merged_at": "2023-07-24T04:55:53Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n\r\n- Description: add HuggingGPT Agent, see the [paper](https://arxiv.org/abs/2303.17580) and the [original project](https://github.com/microsoft/JARVIS).\r\n- Notebook: add a [notebook](https://github.com/tricktreat/langchain/blob/bc840fe4307690505b3c0b051e0e2d9726777437/docs/extras/use_cases/autonomous_agents/hugginggpt.ipynb) showing its use.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8120/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8120/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]