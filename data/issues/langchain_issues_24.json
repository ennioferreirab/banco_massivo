[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12207",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12207/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12207/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12207/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12207",
        "id": 1959418835,
        "node_id": "PR_kwDOIPDwls5dpkbx",
        "number": 12207,
        "title": "Update extraction.py",
        "user": {
            "login": "lu-wo",
            "id": 71704466,
            "node_id": "MDQ6VXNlcjcxNzA0NDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/71704466?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lu-wo",
            "html_url": "https://github.com/lu-wo",
            "followers_url": "https://api.github.com/users/lu-wo/followers",
            "following_url": "https://api.github.com/users/lu-wo/following{/other_user}",
            "gists_url": "https://api.github.com/users/lu-wo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lu-wo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lu-wo/subscriptions",
            "organizations_url": "https://api.github.com/users/lu-wo/orgs",
            "repos_url": "https://api.github.com/users/lu-wo/repos",
            "events_url": "https://api.github.com/users/lu-wo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lu-wo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-24T14:40:20Z",
        "updated_at": "2023-10-24T15:25:15Z",
        "closed_at": "2023-10-24T15:25:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12207",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12207",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12207.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12207.patch",
            "merged_at": "2023-10-24T15:25:15Z"
        },
        "body": "Description: Pass tags as argument to create_extraction_chain\r\nIssue: create_extraction_chain does not pass tags to chain yet \r\n\r\n@baskaryan ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12207/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12207/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12206",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12206/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12206/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12206/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12206",
        "id": 1959412927,
        "node_id": "I_kwDOIPDwls50ykS_",
        "number": 12206,
        "title": "Router + BaseCombineDocumentsChain output_key",
        "user": {
            "login": "Ulfzerk",
            "id": 26842884,
            "node_id": "MDQ6VXNlcjI2ODQyODg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/26842884?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ulfzerk",
            "html_url": "https://github.com/Ulfzerk",
            "followers_url": "https://api.github.com/users/Ulfzerk/followers",
            "following_url": "https://api.github.com/users/Ulfzerk/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ulfzerk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ulfzerk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ulfzerk/subscriptions",
            "organizations_url": "https://api.github.com/users/Ulfzerk/orgs",
            "repos_url": "https://api.github.com/users/Ulfzerk/repos",
            "events_url": "https://api.github.com/users/Ulfzerk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ulfzerk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-24T14:38:00Z",
        "updated_at": "2023-10-24T14:50:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHi!\r\n\r\nI have been trying to create a router chain which will route to StuffDocumentsChains.\r\n\r\nIt seems that default output_key for BaseCombineDocumentsChain is output_text instead of 'text' like in typical chains. \r\n```py\r\nclass BaseCombineDocumentsChain(Chain, ABC):\r\n    \"\"\"Base interface for chains combining documents.\r\n\r\n    Subclasses of this chain deal with combining documents in a variety of\r\n    ways. This base class exists to add some uniformity in the interface these types\r\n    of chains should expose. Namely, they expect an input key related to the documents\r\n    to use (default `input_documents`), and then also expose a method to calculate\r\n    the length of a prompt from documents (useful for outside callers to use to\r\n    determine whether it's safe to pass a list of documents into this chain or whether\r\n    that will longer than the context length).\r\n    \"\"\"\r\n\r\n    input_key: str = \"input_documents\"  #: :meta private:\r\n    output_key: str = \"output_text\"  #: :meta private:\r\n```\r\n### Question: Is it done on purpose or is just inconsistency?\r\n\r\n\r\n---\r\nOn the other hand\r\nMultiPromptChain has hardcoded output_keys as 'text'.\r\n```py\r\nclass MultiPromptChain(MultiRouteChain):\r\n    \"\"\"A multi-route chain that uses an LLM router chain to choose amongst prompts.\"\"\"\r\n\r\n    @property\r\n    def output_keys(self) -> List[str]:\r\n        return [\"text\"]\r\n```\r\nSo it is necessary to always change output_key in any CombineDocuments like chains. \r\n\r\n\n\n### Who can help?\n\n@hwchase17\r\n@agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nCreate a router chain that routes to StuffDocumentsChain accordingly with documentation. \n\n### Expected behavior\n\nBaseCombineDocumentsChain should have conssistent default outputs keys as other chains. \r\n\r\nOr\r\n\r\nMultiPromptChain/MultiRouteChain should not have hardcoded output keys\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12206/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12206/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12205",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12205/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12205/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12205/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12205",
        "id": 1959382324,
        "node_id": "I_kwDOIPDwls50yc00",
        "number": 12205,
        "title": "RetryWithErrorOutputParser for chains and summary memory",
        "user": {
            "login": "fabiancpl",
            "id": 4214432,
            "node_id": "MDQ6VXNlcjQyMTQ0MzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4214432?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fabiancpl",
            "html_url": "https://github.com/fabiancpl",
            "followers_url": "https://api.github.com/users/fabiancpl/followers",
            "following_url": "https://api.github.com/users/fabiancpl/following{/other_user}",
            "gists_url": "https://api.github.com/users/fabiancpl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fabiancpl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fabiancpl/subscriptions",
            "organizations_url": "https://api.github.com/users/fabiancpl/orgs",
            "repos_url": "https://api.github.com/users/fabiancpl/repos",
            "events_url": "https://api.github.com/users/fabiancpl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fabiancpl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-24T14:24:02Z",
        "updated_at": "2023-10-24T14:33:40Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nIs it possible to support scenarios for using `RetryWithErrorOutputParser` when prompt is injected in a chain or a summary memory so this prompt is not directly formatted?\n\n### Motivation\n\nI am trying to support complex prompts, multi-chain and combined memory scenarios causing errors regularly when the LLM generate content response in a different structure as stablished in the format instructions.\n\n### Your contribution\n\nI could make the PR with some basic implementation guidelines.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12205/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12205/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12204",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12204/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12204/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12204/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12204",
        "id": 1959381435,
        "node_id": "PR_kwDOIPDwls5dpcSb",
        "number": 12204,
        "title": "fix typo",
        "user": {
            "login": "DayuanJiang",
            "id": 34411969,
            "node_id": "MDQ6VXNlcjM0NDExOTY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/34411969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DayuanJiang",
            "html_url": "https://github.com/DayuanJiang",
            "followers_url": "https://api.github.com/users/DayuanJiang/followers",
            "following_url": "https://api.github.com/users/DayuanJiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/DayuanJiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DayuanJiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DayuanJiang/subscriptions",
            "organizations_url": "https://api.github.com/users/DayuanJiang/orgs",
            "repos_url": "https://api.github.com/users/DayuanJiang/repos",
            "events_url": "https://api.github.com/users/DayuanJiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DayuanJiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-24T14:23:39Z",
        "updated_at": "2023-10-24T19:51:52Z",
        "closed_at": "2023-10-24T19:51:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12204",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12204",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12204.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12204.patch",
            "merged_at": "2023-10-24T19:51:52Z"
        },
        "body": "fix typo in langchain/cookbook/stepback-qa.ipynb",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12204/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12204/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12203",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12203/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12203/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12203/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12203",
        "id": 1959375762,
        "node_id": "I_kwDOIPDwls50ybOS",
        "number": 12203,
        "title": "Unable to use LlamCpp from langchain ",
        "user": {
            "login": "sancelot",
            "id": 122811,
            "node_id": "MDQ6VXNlcjEyMjgxMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/122811?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sancelot",
            "html_url": "https://github.com/sancelot",
            "followers_url": "https://api.github.com/users/sancelot/followers",
            "following_url": "https://api.github.com/users/sancelot/following{/other_user}",
            "gists_url": "https://api.github.com/users/sancelot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sancelot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sancelot/subscriptions",
            "organizations_url": "https://api.github.com/users/sancelot/orgs",
            "repos_url": "https://api.github.com/users/sancelot/repos",
            "events_url": "https://api.github.com/users/sancelot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sancelot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-24T14:21:08Z",
        "updated_at": "2023-10-24T16:32:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nHere is a native python llama cpp example\r\n```\r\n\"\"\"\r\nAsk to generate 4 questions related to a given content\r\n\"\"\"\r\nfrom llama_cpp import Llama\r\nmpath=\"/home/mac/llama-2-7b-32k-instruct.Q5_K_S.gguf\"\r\n\r\n# define n_ctx manually to permit larger contexts\r\nLLM = Llama(model_path=mpath, n_ctx=512,verbose=False)\r\n# create a text prompt\r\n\r\ncontext = \"\"\"\r\nNous sommes dans les Yvelines\r\nIl fait beau\r\nNous sommes a quelques km d'un joli lac\r\nle boulanger est sympatique\r\nIl y a \u00e9galement une boucherie\r\n\"\"\"\r\nprompt = \"\"\"[INST]\\nYou are a Teacher/ Professor. Your task is to setup\r\n4 questions for an upcoming\r\n    quiz/examination. The questions should be diverse in nature \r\n   across the document. Restrict the questions to the \r\n\r\n    context  provided. \r\n Context is provided below :\r\n\r\n   %s\r\n\r\n[/INST]\\n\\n\r\n\"\"\" % context\r\n\r\nprint(prompt)\r\n# set max_tokens to 0 to remove the response size limit\r\noutput = LLM(prompt, max_tokens=512,stop=[\"INST\"])\r\n# display the response\r\nprint(output[\"choices\"][0][\"text\"])\r\nprint(\"---------------\")\r\nprint(output)\r\n```\r\n\r\n\r\nand here is the \"langchain version\"\r\n\r\n```\r\nfrom langchain.llms  import LlamaCpp\r\nfrom langchain.prompts import PromptTemplate\r\nfrom langchain.chains import LLMChain\r\n\r\nprompt_template =\"\"\"[INST]\\nYou are a Teacher/ Professor. Your task is to setup\r\n4 questions for an upcoming\r\n    quiz/examination. The questions should be diverse in nature \r\n   across the document. Restrict the questions to the \r\n    context  provided. \r\n Context is provided below :\r\n   {context}\r\n[/INST]\\n\\n\r\n\"\"\" \r\n\r\n\r\nPROMPT = PromptTemplate(\r\n    template=prompt_template, input_variables=[\"context\"])\r\n\r\npath_to_ggml_model = \"/home/mac/llama-2-7b-32k-instruct.Q5_K_S.gguf\"\r\ncontext = \"\"\"\r\nNous sommes dans les Yvelines\r\nIl fait beau\r\nNous sommes a quelques km d'un joli lac\r\nle boulanger est sympatique\r\nIl y a \u00e9galement une boucherie\r\n\"\"\"\r\n\r\nllm = LlamaCpp(model_path=path_to_ggml_model,temperature=0.8,verbose=True,echo=True,n_ctx=512)\r\nchain = LLMChain(llm=llm,prompt=PROMPT)\r\nanswer = chain.run(context=context,stop=\"[/INST]\",max_tokens=512)\r\nprint(answer)\r\n```\r\n\r\n\r\nunfortunately the langchain version does not return anything\r\n\r\nI suspect mismatching or defautlt overriden parameters sent to Llama\r\n\r\n\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n```\r\n\r\nfrom langchain.llms  import LlamaCpp\r\nfrom langchain.prompts import PromptTemplate\r\nfrom langchain.chains import LLMChain\r\n\r\nprompt_template =\"\"\"[INST]\\nYou are a Teacher/ Professor. Your task is to setup\r\n4 questions for an upcoming\r\n    quiz/examination. The questions should be diverse in nature \r\n   across the document. Restrict the questions to the \r\n    context  provided. \r\n Context is provided below :\r\n   {context}\r\n[/INST]\\n\\n\r\n\"\"\" \r\n\r\n\r\nPROMPT = PromptTemplate(\r\n    template=prompt_template, input_variables=[\"context\"])\r\n\r\npath_to_ggml_model = \"/home/mac/llama-2-7b-32k-instruct.Q5_K_S.gguf\"\r\ncontext = \"\"\"\r\nNous sommes dans les Yvelines\r\nIl fait beau\r\nNous sommes a quelques km d'un joli lac\r\nle boulanger est sympatique\r\nIl y a \u00e9galement une boucherie\r\n\"\"\"\r\n\r\n# echo : echo prompt\r\n\r\nllm = LlamaCpp(model_path=path_to_ggml_model,temperature=0.8,verbose=True,echo=True,n_ctx=512)\r\nchain = LLMChain(llm=llm,prompt=PROMPT)\r\nanswer = chain.run(context=context,stop=\"[/INST]\",max_tokens=512)\r\nprint(answer)\r\n```\r\n\r\n### Expected behavior\r\n\r\nshould answer a quiz similar to this : \r\n\r\nSure, here are four questions that can be used for an upcoming quiz or examination related to the context provided:\r\n\r\n\r\n\r\n1. What is the name of the lake located nearby?\r\n\r\n2. Describe the type of bread sold at the boulanger?\r\n\r\n3. How would you describe the personality of the baker?\r\n\r\n4. What kind of meat do they sell at the boucherie?  \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12203/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12203/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12202",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12202/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12202/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12202/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12202",
        "id": 1959365429,
        "node_id": "I_kwDOIPDwls50yYs1",
        "number": 12202,
        "title": "Issue: RSSFeedLoader unreliable publish date",
        "user": {
            "login": "sgordon16",
            "id": 38845299,
            "node_id": "MDQ6VXNlcjM4ODQ1Mjk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/38845299?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sgordon16",
            "html_url": "https://github.com/sgordon16",
            "followers_url": "https://api.github.com/users/sgordon16/followers",
            "following_url": "https://api.github.com/users/sgordon16/following{/other_user}",
            "gists_url": "https://api.github.com/users/sgordon16/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sgordon16/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sgordon16/subscriptions",
            "organizations_url": "https://api.github.com/users/sgordon16/orgs",
            "repos_url": "https://api.github.com/users/sgordon16/repos",
            "events_url": "https://api.github.com/users/sgordon16/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sgordon16/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-24T14:16:40Z",
        "updated_at": "2023-10-24T15:39:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nThe `publish_date` field returned in the metadata seems unreliable and is very often empty for many news sites. The publish date can easily be parsed directly from the RSS feed from the `pubDate` tag which, although optional, is pretty standard and is much more reliable than trying to pull it from the article itself which is currently being done using the `NewsURLLoader`.\r\n\r\n### Suggestion:\r\n\r\nWe can override the `publish_date` coming from the `NewsURLLoader` metadata with the `published` field from the feed entry in the `RSSFeedLoader`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12202/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12202/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12201",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12201/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12201/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12201/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12201",
        "id": 1959206198,
        "node_id": "PR_kwDOIPDwls5do2Dd",
        "number": 12201,
        "title": "Added GigaChat chat model support",
        "user": {
            "login": "Mikelarg",
            "id": 8142467,
            "node_id": "MDQ6VXNlcjgxNDI0Njc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8142467?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mikelarg",
            "html_url": "https://github.com/Mikelarg",
            "followers_url": "https://api.github.com/users/Mikelarg/followers",
            "following_url": "https://api.github.com/users/Mikelarg/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mikelarg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mikelarg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mikelarg/subscriptions",
            "organizations_url": "https://api.github.com/users/Mikelarg/orgs",
            "repos_url": "https://api.github.com/users/Mikelarg/repos",
            "events_url": "https://api.github.com/users/Mikelarg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mikelarg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-24T13:03:35Z",
        "updated_at": "2023-10-24T19:53:51Z",
        "closed_at": "2023-10-24T19:53:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12201",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12201",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12201.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12201.patch",
            "merged_at": "2023-10-24T19:53:51Z"
        },
        "body": "- **Description:** Added integration with [GigaChat](https://developers.sber.ru/portal/products/gigachat) language model.\r\n- **Twitter handle:** @dvoshansky\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12201/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12201/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12200",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12200/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12200/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12200/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12200",
        "id": 1959198711,
        "node_id": "PR_kwDOIPDwls5do0bZ",
        "number": 12200,
        "title": "fixed error message and a check for processor name",
        "user": {
            "login": "lkuligin",
            "id": 11026406,
            "node_id": "MDQ6VXNlcjExMDI2NDA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11026406?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lkuligin",
            "html_url": "https://github.com/lkuligin",
            "followers_url": "https://api.github.com/users/lkuligin/followers",
            "following_url": "https://api.github.com/users/lkuligin/following{/other_user}",
            "gists_url": "https://api.github.com/users/lkuligin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lkuligin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lkuligin/subscriptions",
            "organizations_url": "https://api.github.com/users/lkuligin/orgs",
            "repos_url": "https://api.github.com/users/lkuligin/repos",
            "events_url": "https://api.github.com/users/lkuligin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lkuligin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-24T12:59:13Z",
        "updated_at": "2023-10-26T16:38:25Z",
        "closed_at": "2023-10-26T16:38:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12200",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12200",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12200.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12200.patch",
            "merged_at": "2023-10-26T16:38:25Z"
        },
        "body": "Replace this entire comment with:\r\n  - **Description:** a small fix on error description / a check for processor name\r\n  - **Issue:** the issue #11407 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12200/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12200/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12199",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12199/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12199/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12199/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12199",
        "id": 1959011802,
        "node_id": "I_kwDOIPDwls50xCXa",
        "number": 12199,
        "title": "LangChain memory, not returning source doc, repeating question",
        "user": {
            "login": "yazanrisheh",
            "id": 99576727,
            "node_id": "U_kgDOBe9rlw",
            "avatar_url": "https://avatars.githubusercontent.com/u/99576727?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yazanrisheh",
            "html_url": "https://github.com/yazanrisheh",
            "followers_url": "https://api.github.com/users/yazanrisheh/followers",
            "following_url": "https://api.github.com/users/yazanrisheh/following{/other_user}",
            "gists_url": "https://api.github.com/users/yazanrisheh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yazanrisheh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yazanrisheh/subscriptions",
            "organizations_url": "https://api.github.com/users/yazanrisheh/orgs",
            "repos_url": "https://api.github.com/users/yazanrisheh/repos",
            "events_url": "https://api.github.com/users/yazanrisheh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yazanrisheh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-24T11:06:32Z",
        "updated_at": "2023-10-24T12:23:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "@dosu-bot\r\n\r\nI have 3 issues I need your help with and to fix the code:\r\n\r\n1) My code is not remembering previous questions despite using ConversationBufferMemory\r\n2) Not Returning Source Documents\r\n3) When I ask it a question the first time, it writes the answer only but if I ask it any other time afterwards, it always rewrites the question then the answer. I just want it to always write the answer only.\r\n\r\nBelow is my code:\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.prompts.prompt import PromptTemplate\r\nfrom langchain.memory import ConversationBufferMemory\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\nfrom langchain.vectorstores import Qdrant\r\nfrom langchain.callbacks import StreamingStdOutCallbackHandler\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.callbacks import get_openai_callback\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.vectorstores import DeepLake\r\nfrom PyPDF2 import PdfReader\r\nimport PyPDF2\r\nfrom langchain.document_loaders import TextLoader, DirectoryLoader, UnstructuredWordDocumentLoader \r\nfrom langchain.document_loaders import PyPDFDirectoryLoader, PyPDFLoader\r\nfrom dotenv import load_dotenv\r\nimport time\r\n\r\n# Change DirectoryLoader since it has its own chunk size and overlap\r\n\r\nload_dotenv()\r\ndirectory_path = \"C:\\\\Users\\\\Asus\\\\Documents\\\\Vendolista\\\\MasterFormat\"\r\npdf_loader = DirectoryLoader(directory_path,\r\n                                glob=\"**/*.pdf\",\r\n                                show_progress=True,\r\n                                use_multithreading=True,\r\n                                silent_errors=True,\r\n                                loader_cls = PyPDFLoader)\r\n\r\ndocuments = pdf_loader.load()\r\nprint(str(len(documents))+ \" documents loaded\")\r\n\r\n\r\ndef print_letter_by_letter(text):\r\n    for char in text:\r\n        print(char, end='', flush=True)\r\n        time.sleep(0.02)\r\n\r\n\r\n\r\nllm = ChatOpenAI(temperature = 0, model_name='gpt-3.5-turbo', callbacks=[StreamingStdOutCallbackHandler()], streaming = True)\r\n\r\ntext_splitter = RecursiveCharacterTextSplitter(\r\n    chunk_size=800,\r\n    chunk_overlap=80,\r\n)\r\nchunks = text_splitter.split_documents(documents)\r\n\r\nembeddings = OpenAIEmbeddings()\r\npersist_directory = \"C:\\\\Users\\\\Asus\\\\OneDrive\\\\Documents\\\\Vendolista\"\r\nknowledge_base = Chroma.from_documents(chunks, embeddings, persist_directory = persist_directory)\r\n#save to disk\r\nknowledge_base.persist()\r\n#To delete the DB we created at first so that we can be sure that we will load from disk as fresh db\r\nknowledge_base = None\r\nnew_knowledge_base = Chroma(persist_directory = persist_directory, embedding_function = embeddings)\r\n\r\nprompt_template = \"\"\"\r\nYou are a knowledgeable and ethical assistant with expertise in the construction field, including its \r\nguidelines and operational procedures. You are always available to provide assistance and uphold the highest\r\nethical and moral standards in your work.\r\nYou will always and always and always only follow these set of rules and nothing else no matter what:\r\n1) Answer the Question that is answering only based on the documents.\r\n2) If the question is unrelated then say \"sorry this question is completely not related.\r\nIf you think it is, email the staff and they will get back to you: yazanrisheh@hotmail.com.\" \r\n3) Do not ever answer with \"I don't know\" to any question no matter what kind of a question it is.\r\n4) Everyime you answer a question, write on a new line \"is there anything else you would like me to help you with?\"\r\n5) Remember to always take a deep breath and take this step by step.\r\n6) Do not ever and under no circumstance do you rewrite the question asked by the customer when you are answering them.\r\n7) If the question starts with the \"Yazan,\" then you can ignore the steps above.\r\n\r\nText: {context}\r\n\r\nQuestion: {question}\r\nAnswer :\r\n\"\"\"\r\nPROMPT = PromptTemplate(\r\n    template=prompt_template, input_variables=[\"context\", \"question\"]\r\n)\r\n\r\nmemory = ConversationBufferMemory(llm=llm, memory_key='chat_history', input_key='question', output_key='answer', return_messages=True)\r\nconversation = ConversationalRetrievalChain.from_llm(\r\n    llm=llm,\r\n    retriever=new_knowledge_base.as_retriever(),\r\n    memory=memory,\r\n    chain_type=\"stuff\",\r\n    verbose=False,\r\n    combine_docs_chain_kwargs={\"prompt\":PROMPT}\r\n)\r\n\r\n\r\ndef main():\r\n    chat_history = []\r\n\r\n    while True:\r\n        customer_input = input(\"Ask me anything about the files (type 'exit' to quit): \")\r\n\r\n        if customer_input.lower() in [\"exit\"] and len(customer_input) == 4:\r\n            end_chat = \"Thank you for visiting us! Have a nice day\"\r\n            print_letter_by_letter(end_chat)\r\n            break\r\n\r\n        #if the customer_input is not equal to an empty string meaning they have input\r\n        if customer_input != \"\":\r\n            with get_openai_callback() as cb:\r\n                response = conversation({\"question\": customer_input}, return_only_outputs = True)\r\n            # print(response['answer'])\r\n            print()\r\n            print(cb)\r\n            print()\r\n\r\nif __name__ == \"__main__\":\r\n    main()",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12199/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12199/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12197",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12197/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12197/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12197/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12197",
        "id": 1958926055,
        "node_id": "PR_kwDOIPDwls5dn5Q6",
        "number": 12197,
        "title": "Update README.md",
        "user": {
            "login": "abhishek213-alb",
            "id": 76660005,
            "node_id": "MDQ6VXNlcjc2NjYwMDA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/76660005?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abhishek213-alb",
            "html_url": "https://github.com/abhishek213-alb",
            "followers_url": "https://api.github.com/users/abhishek213-alb/followers",
            "following_url": "https://api.github.com/users/abhishek213-alb/following{/other_user}",
            "gists_url": "https://api.github.com/users/abhishek213-alb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abhishek213-alb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abhishek213-alb/subscriptions",
            "organizations_url": "https://api.github.com/users/abhishek213-alb/orgs",
            "repos_url": "https://api.github.com/users/abhishek213-alb/repos",
            "events_url": "https://api.github.com/users/abhishek213-alb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abhishek213-alb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-24T10:09:21Z",
        "updated_at": "2023-10-31T02:00:40Z",
        "closed_at": "2023-10-31T02:00:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12197",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12197",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12197.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12197.patch",
            "merged_at": null
        },
        "body": "Improved the documentation\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** Improved the documentation , \r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12197/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12197/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12196",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12196/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12196/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12196/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12196",
        "id": 1958920258,
        "node_id": "I_kwDOIPDwls50wsBC",
        "number": 12196,
        "title": "Error reshaping array in _extract_images_from_page() in pdf.py",
        "user": {
            "login": "maredudd",
            "id": 3416991,
            "node_id": "MDQ6VXNlcjM0MTY5OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3416991?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maredudd",
            "html_url": "https://github.com/maredudd",
            "followers_url": "https://api.github.com/users/maredudd/followers",
            "following_url": "https://api.github.com/users/maredudd/following{/other_user}",
            "gists_url": "https://api.github.com/users/maredudd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maredudd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maredudd/subscriptions",
            "organizations_url": "https://api.github.com/users/maredudd/orgs",
            "repos_url": "https://api.github.com/users/maredudd/repos",
            "events_url": "https://api.github.com/users/maredudd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maredudd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-24T10:05:32Z",
        "updated_at": "2023-12-01T06:43:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain==0.0.320\r\nUbuntu 20.04\r\nPython 3.11.5\r\n\r\n### Who can help?\r\n\r\n@SuperJokerayo  @baskaryan \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nWhen I try to parse a PDF and extract an image I get the following error:\r\n\r\n```\r\n  File \"<.....>/lib/python3.11/site-packages/langchain/document_loaders/parsers/pdf.py\", line 106, in _extract_images_from_page\r\n    np.frombuffer(xObject[obj].get_data(), dtype=np.uint8).reshape(\r\nValueError: cannot reshape array of size 45532 into shape (4644,3282,newaxis)\r\n```\r\n\r\nThe code I have to run the parser is:\r\n```\r\nloader = PyPDFLoader(doc[\"file\"], extract_images=True)\r\npages = loader.load_and_split()\r\n```\r\n\r\nI can't give you a copy of the document since it's confidential. It's a scanned 11-page document.\r\n\r\n### Expected behavior\r\n\r\nI expected `load_and_split()` to return a list of 11 pages with the text parsed from the image in each page.\r\n\r\nIf I change to `extract_images=False` then it returns an empty list of 0 pages as expected.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12196/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12196/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12194",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12194/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12194/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12194/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12194",
        "id": 1958865532,
        "node_id": "I_kwDOIPDwls50wep8",
        "number": 12194,
        "title": "Is there a few shots agent exists?",
        "user": {
            "login": "flybirp",
            "id": 7994466,
            "node_id": "MDQ6VXNlcjc5OTQ0NjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7994466?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flybirp",
            "html_url": "https://github.com/flybirp",
            "followers_url": "https://api.github.com/users/flybirp/followers",
            "following_url": "https://api.github.com/users/flybirp/following{/other_user}",
            "gists_url": "https://api.github.com/users/flybirp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/flybirp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/flybirp/subscriptions",
            "organizations_url": "https://api.github.com/users/flybirp/orgs",
            "repos_url": "https://api.github.com/users/flybirp/repos",
            "events_url": "https://api.github.com/users/flybirp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/flybirp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-24T09:32:52Z",
        "updated_at": "2023-10-24T09:40:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI have only seen this \"[Zero-shot ReAct](https://python.langchain.com/docs/modules/agents/agent_types/react)\"\n\n### Motivation\n\nable to provide examples to agent, to understand how these tools area used, in what order \n\n### Your contribution\n\nnothing yet",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12194/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12194/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12192",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12192/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12192/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12192/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12192",
        "id": 1958826438,
        "node_id": "I_kwDOIPDwls50wVHG",
        "number": 12192,
        "title": "Issue: Prioritze sources in the vector store to consider certain sources first",
        "user": {
            "login": "JoAmps",
            "id": 64706945,
            "node_id": "MDQ6VXNlcjY0NzA2OTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/64706945?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JoAmps",
            "html_url": "https://github.com/JoAmps",
            "followers_url": "https://api.github.com/users/JoAmps/followers",
            "following_url": "https://api.github.com/users/JoAmps/following{/other_user}",
            "gists_url": "https://api.github.com/users/JoAmps/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JoAmps/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JoAmps/subscriptions",
            "organizations_url": "https://api.github.com/users/JoAmps/orgs",
            "repos_url": "https://api.github.com/users/JoAmps/repos",
            "events_url": "https://api.github.com/users/JoAmps/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JoAmps/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5932474361,
                "node_id": "LA_kwDOIPDwls8AAAABYZpf-Q",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20pinecone",
                "name": "integration: pinecone",
                "color": "BC53BE",
                "default": false,
                "description": "Related to Pinecone vector store integration"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-24T09:09:10Z",
        "updated_at": "2023-10-24T09:21:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nLet's say you have a PDF file, an Excel file, and a PowerPoint file all indexed into a pinecone database, they are similar in that, a query can have information relevant in all sources, but now we want the user to indicate which source should be considered first when they ask a question, is there a way to do that?\r\nFor the conversational retrieval chain, you have this retriever there\r\nretriever = vectorstore.as_retriever( search_kwargs = {\"filter\": {\r\n                                                        \"file_types\": {\"$in\": file_types},\r\n                                                        \"genre\": {\"$in\": genre},\r\n                                                        \"keys\": {\"$in\": keys},\r\n                                                        },\r\n                                                        \"k\": 3\r\n                                                    }),\r\nhow do i make sure i can prioritize sources such that that source comes first, if its not there, we check the others\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12192/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12192/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12191",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12191/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12191/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12191/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12191",
        "id": 1958802863,
        "node_id": "PR_kwDOIPDwls5dneu8",
        "number": 12191,
        "title": "Update buffer_window.mdx",
        "user": {
            "login": "yekangming",
            "id": 38776722,
            "node_id": "MDQ6VXNlcjM4Nzc2NzIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/38776722?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yekangming",
            "html_url": "https://github.com/yekangming",
            "followers_url": "https://api.github.com/users/yekangming/followers",
            "following_url": "https://api.github.com/users/yekangming/following{/other_user}",
            "gists_url": "https://api.github.com/users/yekangming/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yekangming/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yekangming/subscriptions",
            "organizations_url": "https://api.github.com/users/yekangming/orgs",
            "repos_url": "https://api.github.com/users/yekangming/repos",
            "events_url": "https://api.github.com/users/yekangming/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yekangming/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-24T08:54:49Z",
        "updated_at": "2023-10-24T09:06:08Z",
        "closed_at": "2023-10-24T08:56:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12191",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12191",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12191.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12191.patch",
            "merged_at": null
        },
        "body": "Description:\r\n\r\nIn ./docs/modules/memory/types/buffer_window.mdx\r\nRemove excess spaces in parameters",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12191/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12191/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12190",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12190/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12190/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12190/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12190",
        "id": 1958783914,
        "node_id": "PR_kwDOIPDwls5dnarU",
        "number": 12190,
        "title": "Finetuned OpenAI models cost calculation #11715",
        "user": {
            "login": "nirkopler",
            "id": 85127941,
            "node_id": "MDQ6VXNlcjg1MTI3OTQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/85127941?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nirkopler",
            "html_url": "https://github.com/nirkopler",
            "followers_url": "https://api.github.com/users/nirkopler/followers",
            "following_url": "https://api.github.com/users/nirkopler/following{/other_user}",
            "gists_url": "https://api.github.com/users/nirkopler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nirkopler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nirkopler/subscriptions",
            "organizations_url": "https://api.github.com/users/nirkopler/orgs",
            "repos_url": "https://api.github.com/users/nirkopler/repos",
            "events_url": "https://api.github.com/users/nirkopler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nirkopler/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-24T08:43:03Z",
        "updated_at": "2023-10-25T12:14:26Z",
        "closed_at": "2023-10-24T17:22:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12190",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12190",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12190.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12190.patch",
            "merged_at": "2023-10-24T17:22:05Z"
        },
        "body": "**Description:**\r\nAdd cost calculation for fine tuned models (new and legacy), this is required after OpenAI added new models for fine tuning and separated the costs of I/O for fine tuned models. \r\nAlso I updated the relevant unit tests\r\nsee https://platform.openai.com/docs/guides/fine-tuning for more information.\r\nissue: https://github.com/langchain-ai/langchain/issues/11715\r\n\r\n  - **Issue:** 11715\r\n  - **Twitter handle:** @nirkopler\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12190/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12190/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12189",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12189/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12189/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12189/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12189",
        "id": 1958773387,
        "node_id": "I_kwDOIPDwls50wIKL",
        "number": 12189,
        "title": "Add a config chain before the ConversationalRetrievalChain : search Kwargs",
        "user": {
            "login": "MohamedTaha314",
            "id": 57417172,
            "node_id": "MDQ6VXNlcjU3NDE3MTcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/57417172?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MohamedTaha314",
            "html_url": "https://github.com/MohamedTaha314",
            "followers_url": "https://api.github.com/users/MohamedTaha314/followers",
            "following_url": "https://api.github.com/users/MohamedTaha314/following{/other_user}",
            "gists_url": "https://api.github.com/users/MohamedTaha314/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MohamedTaha314/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MohamedTaha314/subscriptions",
            "organizations_url": "https://api.github.com/users/MohamedTaha314/orgs",
            "repos_url": "https://api.github.com/users/MohamedTaha314/repos",
            "events_url": "https://api.github.com/users/MohamedTaha314/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MohamedTaha314/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-24T08:36:14Z",
        "updated_at": "2023-10-24T09:25:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI want to add a config chain prior to the ConversationalRetrievalChain that is going to process the query and set the retriever's search kwargs ( k, fetch_k, lambda_mult ) depending on the question, how can I do that and pass the parameters from the config chain output\n\n### Motivation\n\nThe motivation is to have a dynamic ConversationalRetrievalChain that retrieves the documents the right way for each question.\n\n### Your contribution\n\nI have none for now, I don't know where to start",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12189/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12189/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12188",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12188/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12188/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12188/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12188",
        "id": 1958765306,
        "node_id": "PR_kwDOIPDwls5dnWrB",
        "number": 12188,
        "title": "Make cohere_api_key a SecretStr",
        "user": {
            "login": "arunsathiya",
            "id": 18581859,
            "node_id": "MDQ6VXNlcjE4NTgxODU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/18581859?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arunsathiya",
            "html_url": "https://github.com/arunsathiya",
            "followers_url": "https://api.github.com/users/arunsathiya/followers",
            "following_url": "https://api.github.com/users/arunsathiya/following{/other_user}",
            "gists_url": "https://api.github.com/users/arunsathiya/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arunsathiya/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arunsathiya/subscriptions",
            "organizations_url": "https://api.github.com/users/arunsathiya/orgs",
            "repos_url": "https://api.github.com/users/arunsathiya/repos",
            "events_url": "https://api.github.com/users/arunsathiya/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arunsathiya/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-24T08:31:06Z",
        "updated_at": "2023-11-01T14:09:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12188",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12188",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12188.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12188.patch",
            "merged_at": null
        },
        "body": "This PR makes `cohere_api_key` in `llms/cohere` a SecretStr, so that the API Key is not leaked when `Cohere.cohere_api_key` is represented as a string.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12188/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 2,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12188/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12187",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12187/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12187/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12187/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12187",
        "id": 1958665827,
        "node_id": "PR_kwDOIPDwls5dnBYC",
        "number": 12187,
        "title": "Fix flexible dimension and doc for DingoDB",
        "user": {
            "login": "HeChangHaoGary",
            "id": 53417823,
            "node_id": "MDQ6VXNlcjUzNDE3ODIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/53417823?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HeChangHaoGary",
            "html_url": "https://github.com/HeChangHaoGary",
            "followers_url": "https://api.github.com/users/HeChangHaoGary/followers",
            "following_url": "https://api.github.com/users/HeChangHaoGary/following{/other_user}",
            "gists_url": "https://api.github.com/users/HeChangHaoGary/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HeChangHaoGary/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HeChangHaoGary/subscriptions",
            "organizations_url": "https://api.github.com/users/HeChangHaoGary/orgs",
            "repos_url": "https://api.github.com/users/HeChangHaoGary/repos",
            "events_url": "https://api.github.com/users/HeChangHaoGary/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HeChangHaoGary/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-24T07:24:13Z",
        "updated_at": "2023-10-24T17:16:19Z",
        "closed_at": "2023-10-24T17:16:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12187",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12187",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12187.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12187.patch",
            "merged_at": "2023-10-24T17:16:19Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12187/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12187/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12186",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12186/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12186/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12186/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12186",
        "id": 1958617422,
        "node_id": "I_kwDOIPDwls50viFO",
        "number": 12186,
        "title": "KeyError: 'tool_names'",
        "user": {
            "login": "younes-io",
            "id": 3153107,
            "node_id": "MDQ6VXNlcjMxNTMxMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3153107?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/younes-io",
            "html_url": "https://github.com/younes-io",
            "followers_url": "https://api.github.com/users/younes-io/followers",
            "following_url": "https://api.github.com/users/younes-io/following{/other_user}",
            "gists_url": "https://api.github.com/users/younes-io/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/younes-io/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/younes-io/subscriptions",
            "organizations_url": "https://api.github.com/users/younes-io/orgs",
            "repos_url": "https://api.github.com/users/younes-io/repos",
            "events_url": "https://api.github.com/users/younes-io/events{/privacy}",
            "received_events_url": "https://api.github.com/users/younes-io/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-24T06:44:44Z",
        "updated_at": "2023-10-24T10:28:40Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nPython 3.11.4\r\nLangChain 0.0.321\r\n\r\nPlatform info (WSL2):\r\nDISTRIB_ID=Ubuntu\r\nDISTRIB_RELEASE=20.04\r\nDISTRIB_CODENAME=focal\r\nDISTRIB_DESCRIPTION=\"Ubuntu 20.04.6 LTS\"\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThis is the (partial) code snippet that I run: \r\n\r\n```python\r\nfrom langchain.chat_models import ChatOpenAI\r\n\r\nprompt = hub.pull(\"hwchase17/react-chat-json\")\r\n\r\nllm = ChatOpenAI(max_retries=10, temperature=0,\r\n\t\t\t\t  max_tokens=400, **model_kwargs)\r\n\r\nllm_with_stop = llm.bind(stop=[\"\\nObservation\"])\r\n\r\nfrom langchain.agents.output_parsers import JSONAgentOutputParser\r\nfrom langchain.agents.format_scratchpad import format_log_to_messages\r\n\r\n# Connecting to Opensearch\r\ndocsearch = OpenSearchVectorSearch(index_name=index_uk, embedding_function=embeddings, opensearch_url=opensearch_url, http_auth=('admin', auth))\r\n\r\n# We need some extra steering, or the chat model forgets how to respond sometimes\r\nTEMPLATE_TOOL_RESPONSE = \"\"\"TOOL RESPONSE: \r\n---------------------\r\n{observation}\r\n\r\nUSER'S INPUT\r\n--------------------\r\n\r\nOkay, so what is the response to my last comment? If using information obtained from the tools you must mention it explicitly without mentioning the tool names - I have forgotten all TOOL RESPONSES! Remember to respond with a markdown code snippet of a json blob with a single action, and NOTHING else - even if you just want to respond to the user. Do NOT respond with anything except a JSON snippet no matter what!\"\"\"\r\n\r\n\r\nfrom langchain.agents import AgentExecutor\r\nfrom langchain.agents.agent_toolkits import create_retriever_tool\r\ntool = create_retriever_tool(\r\n\tdocsearch.as_retriever(), \r\n\t\"search_hr_documents\",\r\n\t\"Searches and returns documents regarding HR-related questions.\"\r\n)\r\ntool\r\nprint(\"tool\", tool)\r\n\r\nfrom langchain.agents.openai_functions_agent.base import OpenAIFunctionsAgent\r\nagent = OpenAIFunctionsAgent(llm=llm, tools=[tool], prompt=prompt)\r\n\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\nagent_executor = AgentExecutor(agent=agent, tools=[tool,tool], verbose=True, memory=memory, return_intermediate_steps=True)\r\n\r\nprint(\"full_question ===>\", full_question)\r\n\r\nresult = agent_executor({\"input\": full_question})\r\n```\r\n\r\nWhen I run it, it logs the below error:\r\n\r\n```\r\ntool name='search_hr_documents' description='Searches and returns documents regarding HR-related questions.' func=<bound method BaseRetriever.get_relevant_documents of VectorStoreRetriever(tags=['OpenSearchVectorSearch', 'OpenAIEmbeddings'], vectorstore=<langchain.vectorstores.opensearch_vector_search.OpenSearchVectorSearch object at 0x00000247DC4ABA50>)> coroutine=<bound method BaseRetriever.aget_relevant_documents of VectorStoreRetriever(tags=['OpenSearchVectorSearch', 'OpenAIEmbeddings'], vectorstore=<langchain.vectorstores.opensearch_vector_search.OpenSearchVectorSearch object at 0x00000247DC4ABA50>)>\r\nfull_question ===> Am I allowed to get a company car ?\r\n\r\n\r\nc:\\project\\transformed_notebook.ipynb Cell 8 line 1\r\n    190 agent_executor = AgentExecutor(agent=agent, tools=[tool,tool], verbose=True, memory=memory, return_intermediate_steps=True)\r\n    192 print(\"full_question ===>\", full_question)\r\n--> 194 result = agent_executor({\"input\": full_question})\r\n    196 # print(\"result ===>\", result)\r\n    197 \r\n    198 # chain_type_kwargs = {\"prompt\": prompt,\r\n   (...)\r\n    211 # out = chain(full_question)\r\n    212 # Cleaning the answer\r\n\r\nFile c:\\Users\\raaz\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\chains\\base.py:310, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, metadata, run_name, include_run_info)\r\n    308 except BaseException as e:\r\n    309     run_manager.on_chain_error(e)\r\n--> 310     raise e\r\n    311 run_manager.on_chain_end(outputs)\r\n...\r\n     99 }\r\n    100 full_inputs = dict(**selected_inputs, agent_scratchpad=agent_scratchpad)\r\n    101 prompt = self.prompt.format_prompt(**full_inputs)\r\n\r\nKeyError: 'tool_names'\r\n```\r\n\r\nHow come this error is generated even though the `tools` argument is provided and is well-defined ?\n\n### Expected behavior\n\nThe error should not be raised since tools are defined the correct way (as per the official LangChain docs)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12186/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12186/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12185",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12185/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12185/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12185/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12185",
        "id": 1958553638,
        "node_id": "I_kwDOIPDwls50vSgm",
        "number": 12185,
        "title": "Retriever Tool for Vertex AI Model ",
        "user": {
            "login": "vikasrai92l",
            "id": 44745923,
            "node_id": "MDQ6VXNlcjQ0NzQ1OTIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/44745923?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vikasrai92l",
            "html_url": "https://github.com/vikasrai92l",
            "followers_url": "https://api.github.com/users/vikasrai92l/followers",
            "following_url": "https://api.github.com/users/vikasrai92l/following{/other_user}",
            "gists_url": "https://api.github.com/users/vikasrai92l/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vikasrai92l/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vikasrai92l/subscriptions",
            "organizations_url": "https://api.github.com/users/vikasrai92l/orgs",
            "repos_url": "https://api.github.com/users/vikasrai92l/repos",
            "events_url": "https://api.github.com/users/vikasrai92l/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vikasrai92l/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-24T05:35:24Z",
        "updated_at": "2023-10-25T05:32:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nI am trying to add retriever tool to SQL Database Toolkit and run SQL Agent with Vertex AI Text Bison LLM, however I am facing error.\r\nI am following below documentation for implementation\r\n[https://python.langchain.com/docs/use_cases/qa_structured/sql?ref=blog.langchain.dev#case-3-sql-agents](url)\r\n\r\nMy Python Code\r\n`llm = VertexAI(\r\n    model_name='text-bison@001',\r\n    max_output_tokens=256,\r\n    temperature=0,\r\n    top_p=0.8,\r\n    top_k=40,\r\n    verbose=True,\r\n)\r\n\r\nfew_shots = {'a': sql a query;',\r\n              \"b '.\": \"sql b query\",\r\n              \"c.\": \"sql c query;\",\r\n              \"d\": \"sql d query; \"\r\n          }\r\n\r\nfrom langchain.embeddings import VertexAIEmbeddings\r\nfrom langchain.vectorstores import FAISS\r\nfrom langchain.schema import Document\r\n\r\nembeddings = VertexAIEmbeddings()\r\n\r\nfew_shot_docs = [Document(page_content=question, metadata={'sql_query': few_shots[question]}) for question in few_shots.keys()]\r\nvector_db = FAISS.from_documents(few_shot_docs, embeddings)\r\n#retriever = vector_db.as_retriever(search_type=\"similarity_score_threshold\", search_kwargs={\"score_threshold\": .5})\r\nretriever = vector_db.as_retriever()\r\n\r\nfrom langchain.agents import initialize_agent, Tool\r\nfrom langchain.agents import load_tools\r\nfrom langchain.agents import AgentType\r\nfrom langchain.tools import BaseTool\r\n\r\nfrom langchain.agents.agent_toolkits import create_retriever_tool\r\n\r\ntool_description = \"\"\"\r\nThis tool will help you understand similar examples to adapt them to the user question.\r\nInput to this tool should be the user question.\r\n\"\"\"\r\n\r\nretriever_tool = create_retriever_tool(\r\n        retriever,\r\n        name='sql_get_similar_examples',\r\n        description=tool_description\r\n    )\r\ncustom_tool_list = [retriever_tool]\r\n\r\nfrom langchain.agents import create_sql_agent\r\nfrom langchain.agents.agent_toolkits import SQLDatabaseToolkit\r\nfrom langchain.sql_database import SQLDatabase\r\nfrom langchain.agents import AgentExecutor\r\nfrom langchain.agents.agent_types import AgentType\r\n\r\nfrom sqlalchemy import *\r\nfrom sqlalchemy.engine import create_engine\r\nfrom sqlalchemy.schema import *\r\nimport pandas as pd\r\n\r\ntable_uri = f\"bigquery://{project}/{dataset_id}\"\r\nengine = create_engine(f\"bigquery://{project}/{dataset_id}\")\r\ndb = SQLDatabase(engine=engine,metadata=MetaData(bind=engine),include_tables=table_name,view_support=True)\r\n\r\ntoolkit = SQLDatabaseToolkit(db=db, llm=llm)\r\n\r\ncustom_suffix = \"\"\"Begin!\r\nQuestion: {input}\r\nThought: I should first get the similar examples I know.\r\nIf the examples are enough to construct the query, I can build it.\r\nOtherwise, I can then look at the tables in the database to see what I can query.\r\nThen I should query the schema of the most relevant tables.\r\n{agent_scratchpad}\"\"\"\r\n\r\nagent = create_sql_agent(llm=llm,\r\n                         toolkit=toolkit,\r\n                         verbose=True,\r\n                         agent_type=AgentType.ZERO_SHOT_REACT_DESCRIPTION,\r\n                         extra_tools=custom_tool_list,\r\n                         suffix=custom_suffix\r\n                        )\r\n\r\nlangchain.debug = True\r\n\r\nThought:The table does not have the column 'alloted_terminal'.\r\nAction: sql_get_similar_examples\r\nAction Input: {Question}\r\nObservation: {Document(fewshots}\r\nThought:I don't have enough information to construct the query.\r\nAction: sql_get_similar_examples\r\nAction Input: {Question}\r\nObservation: {Document(fewshots}\r\nThought:I don't have enough information to construct the query.\r\n Action: sql_get_similar_examples\r\nAction Input: {Question}\r\nObservation: {Document(fewshots}\r\nThought:I don't have enough information to construct the query.\r\nAction: sql_get_similar_examples\r\nAction Input: {Question}\r\nObservation: {Document(fewshots}\r\nThought:I don't have enough information to construct the query.\r\nAction: sql_get_similar_examples\r\nAction Input: {Question}\r\nObservation: {Document(fewshots}\r\nThought:I don't have enough information to construct the query.\r\nAction: sql_get_similar_examples\r\nAction Input: {Question}\r\nObservation: {Document(fewshots}\r\nThought:I don't have enough information to construct the query.\r\nAction: sql_get_similar_examples\r\nAction Input: {Question}\r\nObservation: {Document(fewshots}\r\nThought:I don't have enough information to construct the query.\r\nAction: sql_get_similar_examples\r\nAction Input: {Question}\r\nObservation: {Document(fewshots}\r\nThought:I don't have enough information to construct the query.\r\nAction: sql_get_similar_examples\r\nAction Input: {Question}\r\nObservation: {Document(fewshots}\r\nThought:I don't have enough information to construct the query.\r\nAction: sql_get_similar_examples\r\nAction Input: {Question}\r\nObservation: {Document(fewshots}\r\nThought:I don't have enough information to construct the query.\r\nAction: sql_get_similar_examples\r\nAction Input: {Question}\r\nObservation: {Document(fewshots}\r\nThought:I don't have enough information to construct the query.\r\nAction: sql_get_similar_examples\r\nAction Input: {Question}\r\nObservation: {Document(fewshots}\r\nThought:\r\n\r\n> Finished chain.\r\nAgent stopped due to iteration limit or time limit.\r\n\r\n{\r\n  \"output\": \"Agent stopped due to iteration limit or time limit.\"\r\n}\r\n'\r\nAgent stopped due to iteration limit or time limit.\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12185/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12185/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12184",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12184/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12184/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12184/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12184",
        "id": 1958479132,
        "node_id": "I_kwDOIPDwls50vAUc",
        "number": 12184,
        "title": "multi_retrieval_qa.py hardwires ChatOpenAI() at the _default_chain",
        "user": {
            "login": "vecorro",
            "id": 49245780,
            "node_id": "MDQ6VXNlcjQ5MjQ1Nzgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/49245780?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vecorro",
            "html_url": "https://github.com/vecorro",
            "followers_url": "https://api.github.com/users/vecorro/followers",
            "following_url": "https://api.github.com/users/vecorro/following{/other_user}",
            "gists_url": "https://api.github.com/users/vecorro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vecorro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vecorro/subscriptions",
            "organizations_url": "https://api.github.com/users/vecorro/orgs",
            "repos_url": "https://api.github.com/users/vecorro/repos",
            "events_url": "https://api.github.com/users/vecorro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vecorro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-10-24T04:17:28Z",
        "updated_at": "2023-10-26T09:09:59Z",
        "closed_at": "2023-10-25T14:29:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nSystem:\r\nlangchain   0.0.321\r\nPython 3.10\r\n\r\nHi,\r\n\r\nI get an error related to a missing OpenAI token when trying to reuse the code to [dynamically select from multiple retrievers](https://python.langchain.com/docs/use_cases/question_answering/multi_retrieval_qa_router) at the MultiRetrievalQAChain initialization step,\r\n\r\n```\r\nmulti_retriever_chain = MultiRetrievalQAChain.from_retrievers(\r\n    llm=llm, # Llama2 served by vLLM via VLLMOpenAI\r\n    retriever_infos=retrievers_info,\r\n    verbose=True)\r\n```\r\n\r\nI get an error because I'm not using OpenAI LLMs and the LangChain code (multi_retrieval_qa.py) hard wires ChatOpenAI() as the LLM  for the _default_chain. \r\n\r\n```\r\n_default_chain = ConversationChain(\r\n                llm=ChatOpenAI(), prompt=prompt, input_key=\"query\", output_key=\"result\"\r\n            )\r\n```\r\n\r\nI think you need to assign the llm variable to the llm provided when initializing the class.\r\n\r\n\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nIncluding the Python code and the PDF files that get loaded by the retrievers.\r\n```\r\n#%% \r\nimport torch\r\nfrom langchain.llms import VLLMOpenAI\r\nfrom langchain.document_loaders import PyPDFLoader\r\n\r\n# Import for retrieval-augmented generation RAG\r\nfrom langchain import hub\r\nfrom langchain.chains import RetrievalQA, MultiRetrievalQAChain\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.text_splitter import SentenceTransformersTokenTextSplitter\r\nfrom langchain.embeddings.sentence_transformer import SentenceTransformerEmbeddings\r\n#%% \r\n# URL for the vLLM service\r\nINFERENCE_SRV_URL = \"http://localhost:8000/v1\"\r\n\r\ndef setup_chat_llm(vllm_url, max_tokens=512, temperature=0.2):\r\n    \"\"\" \r\n    Intializes the vLLM service object. \r\n     \r\n    :param vllm_url: vLLM service URL \r\n    :param max_tokens: Max number of tokens to get generated by the LLM \r\n    :param temperature: Temperature of the generation process \r\n    :return: The vLLM service object \r\n    \"\"\"\r\n    chat = VLLMOpenAI(\r\n        openai_api_key=\"EMPTY\",\r\n        openai_api_base=vllm_url,\r\n        model_name=\"meta-llama/Llama-2-7b-chat-hf\",\r\n        temperature=temperature,\r\n        max_tokens=max_tokens,\r\n    )\r\n    return chat\r\n#%% \r\n# Initialize LLM service\r\nllm = setup_chat_llm(vllm_url=INFERENCE_SRV_URL)\r\n#%% \r\n%%time\r\n# Set up the embedding encoder (Sentence Transformers) and vector store \r\nmodel_name = \"all-mpnet-base-v2\"\r\nmodel_kwargs = {'device': 'cuda' if torch.cuda.is_available() else 'cpu'}\r\nencode_kwargs = {'normalize_embeddings': False}\r\nembeddings = SentenceTransformerEmbeddings(\r\n    model_name=model_name,\r\n    model_kwargs=model_kwargs,\r\n    encode_kwargs=encode_kwargs\r\n)\r\n\r\n# Set up the document splitter \r\ntext_splitter = SentenceTransformersTokenTextSplitter(chunk_size=500, chunk_overlap=0)\r\n\r\n# Load PDF documents\r\nloader = PyPDFLoader(file_path=\"../data/AI_RMF_Playbook.pdf\")\r\nrmf_doc = loader.load()\r\nrmf_splits = text_splitter.split_documents(rmf_doc)\r\nrmf_retriever = Chroma.from_documents(documents=rmf_splits, embedding=embeddings)\r\n\r\nloader = PyPDFLoader(file_path=\"../data/OWASP-Top-10-for-LLM-Applications-v101.pdf\")\r\nowasp_doc = loader.load()\r\nowasp_splits = text_splitter.split_documents(owasp_doc)\r\nowasp_retriever = Chroma.from_documents(documents=owasp_splits, embedding=embeddings)\r\n\r\n\r\nloader = PyPDFLoader(file_path=\"../data/Threat Modeling LLM Applications - AI Village.pdf\")\r\nai_village_doc = loader.load()\r\nai_village_splits = text_splitter.split_documents(ai_village_doc)\r\nai_village_retriever = Chroma.from_documents(documents=ai_village_splits, embedding=embeddings)\r\n#%% \r\nretrievers_info = [\r\n    {\r\n        \"name\": \"NIST AI Risk Management Framework\",\r\n        \"description\": \"Guidelines for organizations and people to manage risks associated with the use of AI \",\r\n        \"retriever\": rmf_retriever.as_retriever()\r\n    },\r\n    {\r\n        \"name\": \"OWASP Top 10 for LLM Applications\",\r\n        \"description\": \"Provides practical, actionable, and concise security guidance to navigate the complex and evolving terrain of LLM security\",\r\n        \"retriever\": owasp_retriever.as_retriever()\r\n    },\r\n    {\r\n        \"name\": \"Threat Modeling LLM Applications\",\r\n        \"description\": \"A high-level example from Gavin Klondike on how to build a threat model for LLM applications\",\r\n        \"retriever\": ai_village_retriever.as_retriever()\r\n    }\r\n]\r\n#%% \r\n# Import default LLama RAG prompt\r\nprompt = hub.pull(\"rlm/rag-prompt-llama\")\r\nprint(prompt.dict()['messages'][0]['prompt']['template'])\r\n#%% \r\nmulti_retriever_chain = MultiRetrievalQAChain.from_retrievers(\r\n    llm=llm,\r\n    retriever_infos=retrievers_info,\r\n    #default_retriever=owasp_retriever.as_retriever(),\r\n    #default_prompt=prompt,\r\n    #chain_type_kwargs={\"prompt\": prompt},\r\n    verbose=True)\r\n#%% \r\nquestion = \"What is prompt injection?\"\r\nresult = multi_retriever\r\n```\r\n\r\n\r\n\r\n[AI_RMF_Playbook.pdf](https://github.com/langchain-ai/langchain/files/13110652/AI_RMF_Playbook.pdf)\r\n[OWASP-Top-10-for-LLM-Applications-v101.pdf](https://github.com/langchain-ai/langchain/files/13110653/OWASP-Top-10-for-LLM-Applications-v101.pdf)\r\n[Threat Modeling LLM Applications - AI Village.pdf](https://github.com/langchain-ai/langchain/files/13110654/Threat.Modeling.LLM.Applications.-.AI.Village.pdf)\r\n\n\n### Expected behavior\n\nI was expecting to get results equivalent to what is shown at LangChain's documentation  [dynamically select from multiple retrievers](https://python.langchain.com/docs/use_cases/question_answering/multi_retrieval_qa_router)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12184/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12184/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12183",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12183/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12183/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12183/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12183",
        "id": 1958394412,
        "node_id": "I_kwDOIPDwls50uros",
        "number": 12183,
        "title": "Bug when using OPENAI_FUNCTIONS agent",
        "user": {
            "login": "liu-hanyu-97",
            "id": 74221815,
            "node_id": "MDQ6VXNlcjc0MjIxODE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/74221815?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liu-hanyu-97",
            "html_url": "https://github.com/liu-hanyu-97",
            "followers_url": "https://api.github.com/users/liu-hanyu-97/followers",
            "following_url": "https://api.github.com/users/liu-hanyu-97/following{/other_user}",
            "gists_url": "https://api.github.com/users/liu-hanyu-97/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liu-hanyu-97/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liu-hanyu-97/subscriptions",
            "organizations_url": "https://api.github.com/users/liu-hanyu-97/orgs",
            "repos_url": "https://api.github.com/users/liu-hanyu-97/repos",
            "events_url": "https://api.github.com/users/liu-hanyu-97/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liu-hanyu-97/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-24T03:10:22Z",
        "updated_at": "2023-10-24T03:18:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\npython=3.10\r\nlangchain=0.0.320\n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [X] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n# Bug\r\n\r\nhttps://python.langchain.com/docs/modules/agents/how_to/custom-functions-with-openai-functions-agent\r\nI am trying to reproduce this example. But I got the below error. \r\nThe error happends in the below function https://api.python.langchain.com/en/latest/_modules/langchain/chat_models/openai.html#ChatOpenAI:~:text=%3Dchunk)-,def%20_generate(,-self%2C%0A%20%20%20%20%20%20%20%20messages\r\n\r\nAfter I printed the \"message_dicts\" in the function  I found that one item in the list has a None \"content\" value.\r\n\r\n``` python\r\n[{'role': 'system', 'content': 'You are a helpful AI assistant.'}, {'role': 'user', 'content': 'What is the current price of Microsoft stock? How it has performed over past 6 months?'}, {'role': 'assistant', 'content': None, 'function_call': {'name': 'get_current_stock_price', 'arguments': '{\\n  \"ticker\": \"MSFT\"\\n}'}}, {'role': 'function', 'content': '{\"price\": 326.6700134277344, \"currency\": \"USD\"}', 'name': 'get_current_stock_price'}]\r\n```\r\nThe **None** value will lead to an error comlainning that: \r\n```\r\n{\r\n  \"error\": {\r\n    \"code\": null,\r\n    \"param\": null,\r\n    \"message\": \"'content' is a required property - 'messages.2'\",\r\n    \"type\": \"invalid_request_error\"\r\n  }\r\n}\r\n```\r\n# My findings: \r\nIf we use the function_call features of OPENAI, it will always return a None value in the content. But it seems like, the langchain implementation does not deal with this situation. \r\n\r\n\r\n# My fix:\r\n\r\n\r\nAfter I add one line of code in the _generate function to replace the `None` value with an empty string `''`:\r\n```python\r\n        message_dicts = [{**item, 'content': ('' if item['content'] is None else item['content'])} for item in message_dicts] # this line is added \r\n        response = self.completion_with_retry(\r\n            messages=message_dicts, run_manager=run_manager, **params\r\n        )\r\n        print(response)\r\n        return self._create_chat_result(response)\r\n\r\n```\r\nThen the function works normally.\r\n\r\n Is this a bug in using the langchain OPENAI_FUNCTIONS agent? \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n### Expected behavior\n\n# My fix:\r\n\r\n\r\nAfter I add one line of code in the _generate function to replace the `None` value with an empty string `''`:\r\n```python\r\n        message_dicts = [{**item, 'content': ('' if item['content'] is None else item['content'])} for item in message_dicts] # this line is added \r\n        response = self.completion_with_retry(\r\n            messages=message_dicts, run_manager=run_manager, **params\r\n        )\r\n        print(response)\r\n        return self._create_chat_result(response)\r\n\r\n```\r\nThen the function works normally.\r\n\r\nThe output (with some printing) is like this:\r\n``` \r\n[{'role': 'system', 'content': 'You are a helpful AI assistant.'}, {'role': 'user', 'content': 'What is the current price of Microsoft stock? How it has performed over past 6 months?'}]\r\n{\r\n  \"created\": 1698074688,\r\n  \"usage\": {\r\n    \"completion_tokens\": 18,\r\n    \"prompt_tokens\": 199,\r\n    \"total_tokens\": 217\r\n  },\r\n  \"model\": \"gpt-35-turbo\",\r\n  \"id\": \"chatcmpl-8Cr5M7Zi8wv40g9dEg4ZbkNV0KBSc\",\r\n  \"choices\": [\r\n    {\r\n      \"finish_reason\": \"function_call\",\r\n      \"index\": 0,\r\n      \"message\": {\r\n        \"role\": \"assistant\",\r\n        \"function_call\": {\r\n          \"name\": \"get_current_stock_price\",\r\n          \"arguments\": \"{\\n  \\\"ticker\\\": \\\"MSFT\\\"\\n}\"\r\n        },\r\n        \"content\": null\r\n      }\r\n    }\r\n  ],\r\n  \"object\": \"chat.completion\"\r\n}\r\n\r\nInvoking: `get_current_stock_price` with `{'ticker': 'MSFT'}`\r\n\r\n\r\n{'price': 328.9849853515625, 'currency': 'USD'}[{'role': 'system', 'content': 'You are a helpful AI assistant.'}, {'role': 'user', 'content': 'What is the current price of Microsoft stock? How it has performed over past 6 months?'}, {'role': 'assistant', 'content': None, 'function_call': {'name': 'get_current_stock_price', 'arguments': '{\\n  \"ticker\": \"MSFT\"\\n}'}}, {'role': 'function', 'content': '{\"price\": 328.9849853515625, \"currency\": \"USD\"}', 'name': 'get_current_stock_price'}]\r\n{\r\n  \"created\": 1698074692,\r\n  \"usage\": {\r\n    \"completion_tokens\": 24,\r\n    \"prompt_tokens\": 228,\r\n    \"total_tokens\": 252\r\n  },\r\n  \"model\": \"gpt-35-turbo\",\r\n  \"id\": \"chatcmpl-8Cr5QoQfx5gkIS9k7mGn2fs7lMkPc\",\r\n  \"choices\": [\r\n    {\r\n      \"finish_reason\": \"function_call\",\r\n      \"index\": 0,\r\n      \"message\": {\r\n        \"role\": \"assistant\",\r\n        \"function_call\": {\r\n          \"name\": \"get_stock_performance\",\r\n          \"arguments\": \"{\\n  \\\"ticker\\\": \\\"MSFT\\\",\\n  \\\"days\\\": 180\\n}\"\r\n        },\r\n        \"content\": null\r\n      }\r\n    }\r\n  ],\r\n  \"object\": \"chat.completion\"\r\n}\r\n\r\nInvoking: `get_stock_performance` with `{'ticker': 'MSFT', 'days': 180}`\r\n\r\n\r\n{'percent_change': 7.626317098142607}[{'role': 'system', 'content': 'You are a helpful AI assistant.'}, {'role': 'user', 'content': 'What is the current price of Microsoft stock? How it has performed over past 6 months?'}, {'role': 'assistant', 'content': None, 'function_call': {'name': 'get_current_stock_price', 'arguments': '{\\n  \"ticker\": \"MSFT\"\\n}'}}, {'role': 'function', 'content': '{\"price\": 328.9849853515625, \"currency\": \"USD\"}', 'name': 'get_current_stock_price'}, {'role': 'assistant', 'content': None, 'function_call': {'name': 'get_stock_performance', 'arguments': '{\\n  \"ticker\": \"MSFT\",\\n  \"days\": 180\\n}'}}, {'role': 'function', 'content': '{\"percent_change\": 7.626317098142607}', 'name': 'get_stock_performance'}]\r\n{\r\n  \"created\": 1698074694,\r\n  \"usage\": {\r\n    \"completion_tokens\": 36,\r\n    \"prompt_tokens\": 251,\r\n    \"total_tokens\": 287\r\n  },\r\n  \"model\": \"gpt-35-turbo\",\r\n  \"id\": \"chatcmpl-8Cr5SRASyFLFbp80CJhx5hgdVXDLM\",\r\n  \"choices\": [\r\n    {\r\n      \"finish_reason\": \"stop\",\r\n      \"index\": 0,\r\n      \"message\": {\r\n        \"role\": \"assistant\",\r\n        \"content\": \"The current price of Microsoft stock is $328.98 USD. Over the past 6 months, the stock has performed with a 7.63% increase in price.\"\r\n      }\r\n    }\r\n  ],\r\n  \"object\": \"chat.completion\"\r\n}\r\nThe current price of Microsoft stock is $328.98 USD. Over the past 6 months, the stock has performed with a 7.63% increase in price.\r\n\r\n```\r\n\r\n Is this a bug in using the langchain OPENAI_FUNCTIONS agent? \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12183/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12183/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12181",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12181/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12181/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12181/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12181",
        "id": 1958369465,
        "node_id": "PR_kwDOIPDwls5dmBHR",
        "number": 12181,
        "title": "Expose handle_event and ahandle_events as public API",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-24T02:40:16Z",
        "updated_at": "2023-10-24T17:42:30Z",
        "closed_at": "2023-10-24T17:42:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12181",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12181",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12181.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12181.patch",
            "merged_at": "2023-10-24T17:42:29Z"
        },
        "body": "Expose functionality to handle generic events.\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12181/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12181/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12180",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12180/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12180/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12180/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12180",
        "id": 1958354853,
        "node_id": "I_kwDOIPDwls50uh-l",
        "number": 12180,
        "title": "JSONDecodeError on Cookbook/Semi_structured_multi_mudal_RAG_LLaMA2.ipynb",
        "user": {
            "login": "MrLinWang",
            "id": 38717023,
            "node_id": "MDQ6VXNlcjM4NzE3MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/38717023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MrLinWang",
            "html_url": "https://github.com/MrLinWang",
            "followers_url": "https://api.github.com/users/MrLinWang/followers",
            "following_url": "https://api.github.com/users/MrLinWang/following{/other_user}",
            "gists_url": "https://api.github.com/users/MrLinWang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MrLinWang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MrLinWang/subscriptions",
            "organizations_url": "https://api.github.com/users/MrLinWang/orgs",
            "repos_url": "https://api.github.com/users/MrLinWang/repos",
            "events_url": "https://api.github.com/users/MrLinWang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MrLinWang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-24T02:23:12Z",
        "updated_at": "2023-11-01T06:11:06Z",
        "closed_at": "2023-11-01T06:11:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nPython Version: Python 3.10.4\r\nLangchain Version: 0.0.320\r\nOS: Ubuntu 18.04\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n@agola11\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nWhen running the official cookbook code...\r\n```python\r\nfrom pydantic import BaseModel\r\nfrom typing import Any, Optional\r\nfrom unstructured.partition.pdf import partition_pdf\r\n\r\n# Path to save images\r\npath = \"./Papers/LLaVA/\"\r\n\r\n# Get elements\r\nraw_pdf_elements = partition_pdf(filename=path+\"LLaVA.pdf\",\r\n                                 # Using pdf format to find embedded image blocks\r\n                                 extract_images_in_pdf=True,\r\n                                 # Use layout model (YOLOX) to get bounding boxes (for tables) and find titles\r\n                                 # Titles are any sub-section of the document \r\n                                 infer_table_structure=True, \r\n                                 # Post processing to aggregate text once we have the title \r\n                                 chunking_strategy=\"by_title\",\r\n                                 # Chunking params to aggregate text blocks\r\n                                 # Attempt to create a new chunk 3800 chars\r\n                                 # Attempt to keep chunks > 2000 chars \r\n                                 # Hard max on chunks\r\n                                 max_characters=4000, \r\n                                 new_after_n_chars=3800, \r\n                                 combine_text_under_n_chars=2000,\r\n                                 image_output_dir_path=path\r\n                                 )\r\n# Create a dictionary to store counts of each type\r\ncategory_counts = {}\r\n\r\nfor element in raw_pdf_elements:\r\n    category = str(type(element))\r\n    if category in category_counts:\r\n        category_counts[category] += 1\r\n    else:\r\n        category_counts[category] = 1\r\n\r\n# Unique_categories will have unique elements\r\n# TableChunk if Table > max chars set above\r\nunique_categories = set(category_counts.keys())\r\ncategory_counts\r\n\r\nclass Element(BaseModel):\r\n    type: str\r\n    text: Any\r\n\r\n# Categorize by type\r\ncategorized_elements = []\r\nfor element in raw_pdf_elements:\r\n    if \"unstructured.documents.elements.Table\" in str(type(element)):\r\n        categorized_elements.append(Element(type=\"table\", text=str(element)))\r\n    elif \"unstructured.documents.elements.CompositeElement\" in str(type(element)):\r\n        categorized_elements.append(Element(type=\"text\", text=str(element)))\r\n\r\n# Tables\r\ntable_elements = [e for e in categorized_elements if e.type == \"table\"]\r\nprint(len(table_elements))\r\n\r\n# Text\r\ntext_elements = [e for e in categorized_elements if e.type == \"text\"]\r\nprint(len(text_elements))\r\n\r\nfrom langchain.chat_models import ChatOllama\r\nfrom langchain.prompts import ChatPromptTemplate\r\nfrom langchain.schema.output_parser import StrOutputParser\r\n\r\n# Prompt \r\nprompt_text=\"\"\"You are an assistant tasked with summarizing tables and text. \\ \r\nGive a concise summary of the table or text. Table or text chunk: {element} \"\"\"\r\nprompt = ChatPromptTemplate.from_template(prompt_text) \r\n\r\n\r\n# Summary chain \r\nmodel = ChatOllama(model=\"llama2:13b-chat\")\r\nsummarize_chain = {\"element\": lambda x:x} | prompt | model | StrOutputParser()\r\n\r\n# Apply to text\r\ntexts = [i.text for i in text_elements if i.text != \"\"]\r\ntext_summaries = summarize_chain.batch(texts, {\"max_concurrency\": 5})\r\n```\r\n\r\nThe following error was returned:\r\n\r\n```bash\r\n---------------------------------------------------------------------------\r\nJSONDecodeError                           Traceback (most recent call last)\r\nFile ~/anaconda3/envs/langchain/lib/python3.8/site-packages/requests/models.py:971, in Response.json(self, **kwargs)\r\n    970 try:\r\n--> 971     return complexjson.loads(self.text, **kwargs)\r\n    972 except JSONDecodeError as e:\r\n    973     # Catch JSON-related errors and raise as requests.JSONDecodeError\r\n    974     # This aliases json.JSONDecodeError and simplejson.JSONDecodeError\r\n\r\nFile ~/anaconda3/envs/langchain/lib/python3.8/json/__init__.py:357, in loads(s, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)\r\n    354 if (cls is None and object_hook is None and\r\n    355         parse_int is None and parse_float is None and\r\n    356         parse_constant is None and object_pairs_hook is None and not kw):\r\n--> 357     return _default_decoder.decode(s)\r\n    358 if cls is None:\r\n\r\nFile ~/anaconda3/envs/langchain/lib/python3.8/json/decoder.py:337, in JSONDecoder.decode(self, s, _w)\r\n    333 \"\"\"Return the Python representation of ``s`` (a ``str`` instance\r\n    334 containing a JSON document).\r\n    335 \r\n    336 \"\"\"\r\n--> 337 obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n    338 end = _w(s, end).end()\r\n\r\nFile ~/anaconda3/envs/langchain/lib/python3.8/json/decoder.py:355, in JSONDecoder.raw_decode(self, s, idx)\r\n    354 except StopIteration as err:\r\n--> 355     raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\n    356 return obj, end\r\n\r\nJSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nJSONDecodeError                           Traceback (most recent call last)\r\nCell In[6], line 3\r\n      1 # Apply to text\r\n      2 texts = [i.text for i in text_elements if i.text != \"\"]\r\n----> 3 text_summaries = summarize_chain.batch(texts, {\"max_concurrency\": 5})\r\n\r\nFile ~/chatpdf-langchain/langchain/libs/langchain/langchain/schema/runnable/base.py:1287, in RunnableSequence.batch(self, inputs, config, return_exceptions, **kwargs)\r\n   1285     else:\r\n   1286         for i, step in enumerate(self.steps):\r\n-> 1287             inputs = step.batch(\r\n   1288                 inputs,\r\n   1289                 [\r\n   1290                     # each step a child run of the corresponding root run\r\n   1291                     patch_config(\r\n   1292                         config, callbacks=rm.get_child(f\"seq:step:{i+1}\")\r\n   1293                     )\r\n   1294                     for rm, config in zip(run_managers, configs)\r\n   1295                 ],\r\n   1296             )\r\n   1298 # finish the root runs\r\n   1299 except BaseException as e:\r\n\r\nFile ~/chatpdf-langchain/langchain/libs/langchain/langchain/schema/runnable/base.py:323, in Runnable.batch(self, inputs, config, return_exceptions, **kwargs)\r\n    320     return cast(List[Output], [invoke(inputs[0], configs[0])])\r\n    322 with get_executor_for_config(configs[0]) as executor:\r\n--> 323     return cast(List[Output], list(executor.map(invoke, inputs, configs)))\r\n\r\nFile ~/anaconda3/envs/langchain/lib/python3.8/concurrent/futures/_base.py:619, in Executor.map.<locals>.result_iterator()\r\n    616 while fs:\r\n    617     # Careful not to keep a reference to the popped future\r\n    618     if timeout is None:\r\n--> 619         yield fs.pop().result()\r\n    620     else:\r\n    621         yield fs.pop().result(end_time - time.monotonic())\r\n\r\nFile ~/anaconda3/envs/langchain/lib/python3.8/concurrent/futures/_base.py:444, in Future.result(self, timeout)\r\n    442     raise CancelledError()\r\n    443 elif self._state == FINISHED:\r\n--> 444     return self.__get_result()\r\n    445 else:\r\n    446     raise TimeoutError()\r\n\r\nFile ~/anaconda3/envs/langchain/lib/python3.8/concurrent/futures/_base.py:389, in Future.__get_result(self)\r\n    387 if self._exception:\r\n    388     try:\r\n--> 389         raise self._exception\r\n    390     finally:\r\n    391         # Break a reference cycle with the exception in self._exception\r\n    392         self = None\r\n\r\nFile ~/anaconda3/envs/langchain/lib/python3.8/concurrent/futures/thread.py:57, in _WorkItem.run(self)\r\n     54     return\r\n     56 try:\r\n---> 57     result = self.fn(*self.args, **self.kwargs)\r\n     58 except BaseException as exc:\r\n     59     self.future.set_exception(exc)\r\n\r\nFile ~/chatpdf-langchain/langchain/libs/langchain/langchain/schema/runnable/base.py:316, in Runnable.batch.<locals>.invoke(input, config)\r\n    314         return e\r\n    315 else:\r\n--> 316     return self.invoke(input, config, **kwargs)\r\n\r\nFile ~/chatpdf-langchain/langchain/libs/langchain/langchain/chat_models/base.py:142, in BaseChatModel.invoke(self, input, config, stop, **kwargs)\r\n    131 def invoke(\r\n    132     self,\r\n    133     input: LanguageModelInput,\r\n   (...)\r\n    137     **kwargs: Any,\r\n    138 ) -> BaseMessage:\r\n    139     config = config or {}\r\n    140     return cast(\r\n    141         ChatGeneration,\r\n--> 142         self.generate_prompt(\r\n    143             [self._convert_input(input)],\r\n    144             stop=stop,\r\n    145             callbacks=config.get(\"callbacks\"),\r\n    146             tags=config.get(\"tags\"),\r\n    147             metadata=config.get(\"metadata\"),\r\n    148             run_name=config.get(\"run_name\"),\r\n    149             **kwargs,\r\n    150         ).generations[0][0],\r\n    151     ).message\r\n\r\nFile ~/chatpdf-langchain/langchain/libs/langchain/langchain/chat_models/base.py:459, in BaseChatModel.generate_prompt(self, prompts, stop, callbacks, **kwargs)\r\n    451 def generate_prompt(\r\n    452     self,\r\n    453     prompts: List[PromptValue],\r\n   (...)\r\n    456     **kwargs: Any,\r\n    457 ) -> LLMResult:\r\n    458     prompt_messages = [p.to_messages() for p in prompts]\r\n--> 459     return self.generate(prompt_messages, stop=stop, callbacks=callbacks, **kwargs)\r\n\r\nFile ~/chatpdf-langchain/langchain/libs/langchain/langchain/chat_models/base.py:349, in BaseChatModel.generate(self, messages, stop, callbacks, tags, metadata, run_name, **kwargs)\r\n    347         if run_managers:\r\n    348             run_managers[i].on_llm_error(e)\r\n--> 349         raise e\r\n    350 flattened_outputs = [\r\n    351     LLMResult(generations=[res.generations], llm_output=res.llm_output)\r\n    352     for res in results\r\n    353 ]\r\n    354 llm_output = self._combine_llm_outputs([res.llm_output for res in results])\r\n\r\nFile ~/chatpdf-langchain/langchain/libs/langchain/langchain/chat_models/base.py:339, in BaseChatModel.generate(self, messages, stop, callbacks, tags, metadata, run_name, **kwargs)\r\n    336 for i, m in enumerate(messages):\r\n    337     try:\r\n    338         results.append(\r\n--> 339             self._generate_with_cache(\r\n    340                 m,\r\n    341                 stop=stop,\r\n    342                 run_manager=run_managers[i] if run_managers else None,\r\n    343                 **kwargs,\r\n    344             )\r\n    345         )\r\n    346     except BaseException as e:\r\n    347         if run_managers:\r\n\r\nFile ~/chatpdf-langchain/langchain/libs/langchain/langchain/chat_models/base.py:492, in BaseChatModel._generate_with_cache(self, messages, stop, run_manager, **kwargs)\r\n    488     raise ValueError(\r\n    489         \"Asked to cache, but no cache found at `langchain.cache`.\"\r\n    490     )\r\n    491 if new_arg_supported:\r\n--> 492     return self._generate(\r\n    493         messages, stop=stop, run_manager=run_manager, **kwargs\r\n    494     )\r\n    495 else:\r\n    496     return self._generate(messages, stop=stop, **kwargs)\r\n\r\nFile ~/chatpdf-langchain/langchain/libs/langchain/langchain/chat_models/ollama.py:98, in ChatOllama._generate(self, messages, stop, run_manager, **kwargs)\r\n     80 \"\"\"Call out to Ollama's generate endpoint.\r\n     81 \r\n     82 Args:\r\n   (...)\r\n     94         ])\r\n     95 \"\"\"\r\n     97 prompt = self._format_messages_as_text(messages)\r\n---> 98 final_chunk = super()._stream_with_aggregation(\r\n     99     prompt, stop=stop, run_manager=run_manager, verbose=self.verbose, **kwargs\r\n    100 )\r\n    101 chat_generation = ChatGeneration(\r\n    102     message=AIMessage(content=final_chunk.text),\r\n    103     generation_info=final_chunk.generation_info,\r\n    104 )\r\n    105 return ChatResult(generations=[chat_generation])\r\n\r\nFile ~/chatpdf-langchain/langchain/libs/langchain/langchain/llms/ollama.py:156, in _OllamaCommon._stream_with_aggregation(self, prompt, stop, run_manager, verbose, **kwargs)\r\n    147 def _stream_with_aggregation(\r\n    148     self,\r\n    149     prompt: str,\r\n   (...)\r\n    153     **kwargs: Any,\r\n    154 ) -> GenerationChunk:\r\n    155     final_chunk: Optional[GenerationChunk] = None\r\n--> 156     for stream_resp in self._create_stream(prompt, stop, **kwargs):\r\n    157         if stream_resp:\r\n    158             chunk = _stream_response_to_generation_chunk(stream_resp)\r\n\r\nFile ~/chatpdf-langchain/langchain/libs/langchain/langchain/llms/ollama.py:140, in _OllamaCommon._create_stream(self, prompt, stop, **kwargs)\r\n    138 response.encoding = \"utf-8\"\r\n    139 if response.status_code != 200:\r\n--> 140     optional_detail = response.json().get(\"error\")\r\n    141     raise ValueError(\r\n    142         f\"Ollama call failed with status code {response.status_code}.\"\r\n    143         f\" Details: {optional_detail}\"\r\n    144     )\r\n    145 return response.iter_lines(decode_unicode=True)\r\n\r\nFile ~/anaconda3/envs/langchain/lib/python3.8/site-packages/requests/models.py:975, in Response.json(self, **kwargs)\r\n    971     return complexjson.loads(self.text, **kwargs)\r\n    972 except JSONDecodeError as e:\r\n    973     # Catch JSON-related errors and raise as requests.JSONDecodeError\r\n    974     # This aliases json.JSONDecodeError and simplejson.JSONDecodeError\r\n--> 975     raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\r\n\r\nJSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n```\r\nAfter attempting:\r\n```python\r\n# Summary chain \r\nmodel = ChatOllama(model=\"llama2:13b-chat\")\r\nsummarize_chain = {\"element\": lambda x:x} | prompt | model\r\ntexts = [i.text for i in text_elements if i.text != \"\"]\r\ntext_summaries = summarize_chain.batch(texts)\r\n```\r\nReturned the same error as before.\r\n\r\nIt seems that the error is occurring in the \u2018ChatOllama model\u2019.\r\n\r\n\r\n### Expected behavior\r\n\r\nAttempting to reproduce the effects in the Cookbook/Semi_structured_multi_modal_RAG_LLaMA2.ipynb.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12180/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12180/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12179",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12179/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12179/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12179/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12179",
        "id": 1958283958,
        "node_id": "I_kwDOIPDwls50uQq2",
        "number": 12179,
        "title": "Issue: <Not able to filter OpenSearch vectorstore  using Filter in search_kwargs>",
        "user": {
            "login": "rchegondi",
            "id": 6452985,
            "node_id": "MDQ6VXNlcjY0NTI5ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6452985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rchegondi",
            "html_url": "https://github.com/rchegondi",
            "followers_url": "https://api.github.com/users/rchegondi/followers",
            "following_url": "https://api.github.com/users/rchegondi/following{/other_user}",
            "gists_url": "https://api.github.com/users/rchegondi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rchegondi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rchegondi/subscriptions",
            "organizations_url": "https://api.github.com/users/rchegondi/orgs",
            "repos_url": "https://api.github.com/users/rchegondi/repos",
            "events_url": "https://api.github.com/users/rchegondi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rchegondi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-24T01:09:55Z",
        "updated_at": "2023-10-24T03:31:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHello Team,\r\nWe have a metadata field in our opensearch index which I would like use to filter the passages before sending it to LLM to generate the answer. Tried many options suggested in chat.langchain.com but none of them seems to work.\r\n\r\nHere is an example:\r\nI have an user with associated groups ['user_group1', 'user_group2'] and the OpenSearch index with data like \r\n{\r\n'text': 'Page Content......',\r\n'metadata': {\r\n     'source_acl': [ {'group_name': 'user_group1',  'group_type': 'type1'}, {}, {}] \r\n}\r\n}\r\n\r\nSo far I have been trying this\r\n\r\n```\r\nchain = ConversationalRetrievalChain.from_llm(\r\n                llm=SagemakerEndpoint(\r\n                    endpoint_name=constants.EMBEDDING_ENDPOINT_ARN_ALPHA,\r\n                    region_name=constants.REGION,\r\n                    content_handler=self.content_handler_llm,\r\n                    client=self.sg_client\r\n                ),\r\n                # for experimentation, you can change number of documents to retrieve here\r\n                retriever=opensearch_vectorstore.as_retriever(search_kwargs={'k': 3, 'filter': 'source_acl.group_name:user_group1'}),\r\n                memory=memory,\r\n                condense_question_prompt=custom_question_prompt,\r\n                return_source_documents=True\r\n            )\r\n```\r\n\r\nAm I missing anything here?\r\n\r\nThanks in Advance.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12179/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12179/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12178",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12178/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12178/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12178/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12178",
        "id": 1958229369,
        "node_id": "PR_kwDOIPDwls5dlkXC",
        "number": 12178,
        "title": "Update deprecation",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-24T00:01:07Z",
        "updated_at": "2023-10-24T17:37:29Z",
        "closed_at": "2023-10-24T17:37:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12178",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12178",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12178.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12178.patch",
            "merged_at": "2023-10-24T17:37:29Z"
        },
        "body": "in runner_utils",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12178/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12178/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12177",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12177/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12177/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12177/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12177",
        "id": 1958187003,
        "node_id": "PR_kwDOIPDwls5dlbIF",
        "number": 12177,
        "title": "updated `integrations/providers/microsoft`",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-23T23:19:59Z",
        "updated_at": "2023-10-24T18:42:56Z",
        "closed_at": "2023-10-24T17:19:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12177",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12177",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12177.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12177.patch",
            "merged_at": "2023-10-24T17:19:06Z"
        },
        "body": "Added several missed tools, utilities, toolkits to the `Microsoft` page.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12177/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12177/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12176",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12176/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12176/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12176/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12176",
        "id": 1958182263,
        "node_id": "I_kwDOIPDwls50t313",
        "number": 12176,
        "title": "value is not a valid dict (type=type_error.dict)",
        "user": {
            "login": "jonty-esterhuizen",
            "id": 82042398,
            "node_id": "MDQ6VXNlcjgyMDQyMzk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/82042398?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonty-esterhuizen",
            "html_url": "https://github.com/jonty-esterhuizen",
            "followers_url": "https://api.github.com/users/jonty-esterhuizen/followers",
            "following_url": "https://api.github.com/users/jonty-esterhuizen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonty-esterhuizen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonty-esterhuizen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonty-esterhuizen/subscriptions",
            "organizations_url": "https://api.github.com/users/jonty-esterhuizen/orgs",
            "repos_url": "https://api.github.com/users/jonty-esterhuizen/repos",
            "events_url": "https://api.github.com/users/jonty-esterhuizen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonty-esterhuizen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T23:15:43Z",
        "updated_at": "2023-10-29T13:51:16Z",
        "closed_at": "2023-10-29T13:51:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nwhen i try and run this script \r\n\r\n```\r\nclass WebsiteSummary:\r\n    def _SummorizeWebsite(objective, websiteContent):\r\n        my_gpt_instance = MyGPT4ALL()\r\n       \r\n        textSplitter = RecursiveCharacterTextSplitter(\r\n            separators=[\"\\n\\n\", \"\\n\"], chunk_size=10000, chunk_overlap=500\r\n        )\r\n\r\n        docs = textSplitter.create_documents([websiteContent])\r\n        print(docs)\r\n        mapPrompt = \"\"\"\"\r\n        write a summary of the following {objective}: \r\n        {text}\r\n        SUMMARY: \r\n        \"\"\"\r\n        map_prompt_template = PromptTemplate(\r\n            template=mapPrompt, input_variables=[\"text\", \"objective\"]\r\n        ) \r\n        chain = load_summarize_chain(llm=my_gpt_instance,\r\n                                     chain_type=\"map_reduce\",                                     \r\n                                     verbose=True,\r\n                                     map_prompt=objective,\r\n                                     combine_prompt=map_prompt_template)\r\n\r\n        output = summary_Chain.run(input_documents=docs, objective=objective)\r\n        return output\r\n```\r\n\r\ni get this issue \r\nException has occurred: ValidationError\r\n1 validation error for LLMChain\r\nprompt\r\n  value is not a valid dict (type=type_error.dict)\r\n  File \"E:\\StormboxBrain\\langchain\\websiteSummary.py\", line 27, in _SummorizeWebsite\r\n    chain = load_summarize_chain(llm=my_gpt_instance,\r\n  File \"E:\\StormboxBrain\\langchain\\app.py\", line 12, in <module>\r\n    summary = websiteSummary._SummorizeWebsite(objective, data)\r\npydantic.error_wrappers.ValidationError: 1 validation error for LLMChain\r\n\r\nmy model does load and can create prompt responses \r\nmistral-7b-openorca.Q4_0.gguf\r\n\r\n\r\n\r\nthis is mygpt4all class \r\n```\r\nimport os\r\nfrom pydantic import Field\r\nfrom typing import List, Mapping, Optional, Any\r\nfrom langchain.llms.base import LLM\r\nfrom gpt4all import GPT4All, pyllmodel\r\n\r\n\r\nclass MyGPT4ALL(LLM):\r\n    \"\"\"\r\n    A custom LLM class that integrates gpt4all models\r\n\r\n    Arguments:\r\n\r\n    model_folder_path: (str) Folder path where the model lies\r\n    model_name: (str) The name of the model to use (<model name>.gguf)\r\n\r\n    backend: (str) The backend of the model (Supported backends: llama/gptj)\r\n    n_threads: (str) The number of threads to use\r\n    n_predict: (str) The maximum numbers of tokens to generate\r\n    temp: (str) Temperature to use for sampling\r\n    top_p: (float) The top-p value to use for sampling\r\n    top_k: (float) The top k values use for sampling\r\n    n_batch: (int) Batch size for prompt processing\r\n    repeat_last_n: (int) Last n number of tokens to penalize\r\n    repeat_penalty: (float) The penalty to apply repeated tokens\r\n\r\n    \"\"\"\r\n\r\n    model_folder_path: str = \"./models/\"\r\n    model_name: str = \"mistral-7b-openorca.Q4_0.gguf\"\r\n\r\n    backend: Optional[str] = \"llama\"\r\n    temp: Optional[float] = 0.7\r\n    top_p: Optional[float] = 0.1\r\n    top_k: Optional[int] = 40\r\n    n_batch: Optional[int] = 8\r\n    n_threads: Optional[int] = 4\r\n    n_predict: Optional[int] = 256\r\n    max_tokens: Optional[int] = 200\r\n    repeat_last_n: Optional[int] = 64\r\n    repeat_penalty: Optional[float] = 1.18\r\n\r\n    # initialize the model\r\n    gpt4_model_instance: Any = None\r\n\r\n    def __init__(self, **kwargs):\r\n        super(MyGPT4ALL, self).__init__()\r\n        print(\"init \" + self.model_folder_path + self.model_name)\r\n        self.gpt4_model_instance = GPT4All(\r\n            model_name=self.model_name,\r\n            model_path=self.model_folder_path,\r\n            device=\"cpu\",\r\n            verbose=True,\r\n        )\r\n        print(\"initiolized \" + self.model_folder_path + self.model_name)\r\n\r\n    @property\r\n    def _get_model_default_parameters(self):\r\n        print(\"get default params\")\r\n        return {\r\n            \"max_tokens\": self.max_tokens,\r\n            \"n_predict\": self.n_predict,\r\n            \"top_k\": self.top_k,\r\n            \"top_p\": self.top_p,\r\n            \"temp\": self.temp,\r\n            \"n_batch\": self.n_batch,\r\n            \"repeat_penalty\": self.repeat_penalty,\r\n            \"repeat_last_n\": self.repeat_last_n,\r\n        }\r\n\r\n    @property\r\n    def _identifying_params(self) -> Mapping[str, Any]:\r\n        print(\" Get all the identifying parameters\")\r\n        return {\r\n            \"model_name\": self.model_name,\r\n            \"model_path\": self.model_folder_path,\r\n            \"model_parameters\": self._get_model_default_parameters,\r\n        }\r\n\r\n    @property\r\n    def _llm_type(self) -> str:\r\n        return \"llama\"\r\n\r\n    def _call(self, prompt: str, stop: Optional[List[str]] = None, **kwargs) -> str:\r\n        \"\"\"\r\n        Args:\r\n            prompt: The prompt to pass into the model.\r\n            stop: A list of strings to stop generation when encountered\r\n\r\n        Returns:\r\n            The string generated by the model\r\n        \"\"\"\r\n\r\n        params = {**self._get_model_default_parameters, **kwargs}\r\n        print(\"params:\")\r\n        for key, value in params.items():\r\n            print(f\"{key}: {value}\")\r\n        print(\"params \" + params.values())\r\n        return \"initiolized\"\r\n\r\n```\n\n### Suggestion:\n\nis there any documentation on how to use another llm as base and not gpt ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12176/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12176/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12175",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12175/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12175/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12175/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12175",
        "id": 1958069230,
        "node_id": "I_kwDOIPDwls50tcPu",
        "number": 12175,
        "title": "Integrate RetryOutputParser with ConversationalRetrievalChain",
        "user": {
            "login": "timxieICN",
            "id": 112183115,
            "node_id": "U_kgDOBq_HSw",
            "avatar_url": "https://avatars.githubusercontent.com/u/112183115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timxieICN",
            "html_url": "https://github.com/timxieICN",
            "followers_url": "https://api.github.com/users/timxieICN/followers",
            "following_url": "https://api.github.com/users/timxieICN/following{/other_user}",
            "gists_url": "https://api.github.com/users/timxieICN/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timxieICN/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timxieICN/subscriptions",
            "organizations_url": "https://api.github.com/users/timxieICN/orgs",
            "repos_url": "https://api.github.com/users/timxieICN/repos",
            "events_url": "https://api.github.com/users/timxieICN/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timxieICN/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-10-23T21:40:52Z",
        "updated_at": "2023-10-25T13:20:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nIs there a way to integrate `RetryOutputParser` with `ConversationalRetrievalChain`? Specifically, if I use OpenAI's function calling to generate the response in a specific format, the LLM model does not always follow the instructions and then it would fail the Pydantic model validation.\r\n\r\nTherefore, it's important to build the retry mechanism for the `LLMChain` (aka, `doc_chain` argument).\n\n### Motivation\n\nSpecifically, if I use OpenAI's function calling to generate the response in a specific format, the LLM model does not always follow the instructions and then it would fail the Pydantic model validation.\r\n\r\nTherefore, it's important to build the retry mechanism for the `LLMChain` (aka, `doc_chain` argument).\n\n### Your contribution\n\nTBD",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12175/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12175/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12174",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12174/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12174/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12174/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12174",
        "id": 1958045344,
        "node_id": "PR_kwDOIPDwls5dk8Xb",
        "number": 12174,
        "title": "Changes to root listener",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T21:22:47Z",
        "updated_at": "2023-11-10T09:53:49Z",
        "closed_at": "2023-11-10T09:53:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12174",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12174",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12174.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12174.patch",
            "merged_at": "2023-11-10T09:53:48Z"
        },
        "body": "- Implement config_specs to include session_id\r\n- Remove Runnable method and update notebook\r\n- Add more details to notebook, eg. show input schema and config schema before and after adding message history",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12174/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12174/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12173",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12173/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12173/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12173/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12173",
        "id": 1957997823,
        "node_id": "PR_kwDOIPDwls5dkyIi",
        "number": 12173,
        "title": "fix vertexai codey models",
        "user": {
            "login": "northdpole",
            "id": 1583262,
            "node_id": "MDQ6VXNlcjE1ODMyNjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1583262?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/northdpole",
            "html_url": "https://github.com/northdpole",
            "followers_url": "https://api.github.com/users/northdpole/followers",
            "following_url": "https://api.github.com/users/northdpole/following{/other_user}",
            "gists_url": "https://api.github.com/users/northdpole/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/northdpole/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/northdpole/subscriptions",
            "organizations_url": "https://api.github.com/users/northdpole/orgs",
            "repos_url": "https://api.github.com/users/northdpole/repos",
            "events_url": "https://api.github.com/users/northdpole/events{/privacy}",
            "received_events_url": "https://api.github.com/users/northdpole/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-23T20:47:44Z",
        "updated_at": "2023-10-24T17:20:06Z",
        "closed_at": "2023-10-24T17:20:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12173",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12173",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12173.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12173.patch",
            "merged_at": "2023-10-24T17:20:06Z"
        },
        "body": " **Description:**\r\n\r\nThis PR fixes issue #12156 by checking for Codey models appropriately before result parsing.\r\n\r\n\r\nMaintainer: @hwchase17 , @agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12173/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12173/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12172",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12172/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12172/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12172/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12172",
        "id": 1957982299,
        "node_id": "I_kwDOIPDwls50tHBb",
        "number": 12172,
        "title": "Token Usage Management System",
        "user": {
            "login": "CodeBlackwell",
            "id": 16550398,
            "node_id": "MDQ6VXNlcjE2NTUwMzk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/16550398?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CodeBlackwell",
            "html_url": "https://github.com/CodeBlackwell",
            "followers_url": "https://api.github.com/users/CodeBlackwell/followers",
            "following_url": "https://api.github.com/users/CodeBlackwell/following{/other_user}",
            "gists_url": "https://api.github.com/users/CodeBlackwell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CodeBlackwell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CodeBlackwell/subscriptions",
            "organizations_url": "https://api.github.com/users/CodeBlackwell/orgs",
            "repos_url": "https://api.github.com/users/CodeBlackwell/repos",
            "events_url": "https://api.github.com/users/CodeBlackwell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CodeBlackwell/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T20:36:34Z",
        "updated_at": "2023-10-23T20:46:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThe idea is simple. When using various models users have rate limits, both in requests per min/hour and Tokens. When using the raw OpenAI SDK I used the code below. It just uses the \"usage\" metrics provided in the response (as of now I dont know how to retrieve a 'raw response' when utilizing langchain queries'\r\n\n\n### Motivation\n\nThis was inspired by the experience of trying to use the GPT api to generate documentaion for a long list of functions of varying length. While trying to run these requests en mass I repeatedly had my process error out because of RATE LIMIT Errors. I dont think the idea of needing to run queries asynchronously against OpenAI API is a common enough use case (though strongely enough not natively supported by the Python SDK) \n\n### Your contribution\n\nI would be Honored!!!! To contribute this to the project but I honestly would need some help figuring out how to integrate it. This is the base Idea though, Feel free to reachout to collab! codeblackwell@gmail.com or @codeblackwell anywhere. (apologies for the formatting. It just wouldnt work with me).\r\n\r\n`\r\n class TokenManager:\r\n    def __init__(self, max_tokens_per_minute=10000):\r\n        self.max_tokens_per_minute = max_tokens_per_minute\r\n        self.tokens_used_in_last_minute = 0\r\n        self.last_request_time = time.time()\r\n\r\n    def tokens_available(self):\r\n        current_time = time.time()\r\n        time_since_last_request = current_time - self.last_request_time\r\n\r\n        if time_since_last_request >= 60:\r\n            self.tokens_used_in_last_minute = 0\r\n            self.last_request_time = current_time\r\n\r\n        return self.max_tokens_per_minute - self.tokens_used_in_last_minute\r\n\r\n    def update_tokens_used(self, tokens_used):\r\n        if not isinstance(tokens_used, int) or tokens_used < 0:\r\n            raise ValueError(\"Invalid token count\")\r\n        self.tokens_used_in_last_minute += tokens_used\r\n\r\n    def get_usage_stats(self):\r\n        current_time = time.time()\r\n        time_since_last_request = current_time - self.last_request_time\r\n\r\n        if time_since_last_request >= 60:\r\n            self.tokens_used_in_last_minute = 0\r\n            self.last_request_time = current_time\r\n\r\n        absolute_usage = self.tokens_used_in_last_minute\r\n        percent_usage = (self.tokens_used_in_last_minute / self.max_tokens_per_minute) * 100\r\n\r\n        return absolute_usage, percent_usage`\r\n\r\ntoken_manager = TokenManager()\r\n\r\n`def fetch_response(code_snippet, system_prompt, token_manager):\r\n    \"\"\"\r\n    Fetches a response using the OpenAI API.\r\n\r\n    Parameters:\r\n        code_snippet (str): The code snippet to be processed.\r\n        system_prompt (str): The system prompt.\r\n\r\n    Returns:\r\n        dict: The response from the API.\r\n    \"\"\"\r\n    while token_manager.tokens_available() < 2500:  # Assume a minimum of 10 tokens per request\r\n        time.sleep(1)\r\n\r\n    try:\r\n        response = openai.ChatCompletion.create(\r\n            model=\"gpt-4\",\r\n            messages=[\r\n                {\"role\": \"system\", \"content\": system_prompt},\r\n                {\"role\": \"user\", \"content\": code_snippet}\r\n            ]\r\n        )\r\n        tokens_used = response['usage']['total_tokens']\r\n        token_manager.update_tokens_used(tokens_used)\r\n        return response\r\n    except Exception as e:\r\n        print(f\"An error occurred: {str(e)}\")`\r\n\r\n`def main(df, system_prompt):\r\n    \"\"\"\r\n    Processes a DataFrame of code snippets.\r\n\r\n    Parameters:\r\n        df (pd.DataFrame): The DataFrame containing code snippets.\r\n        system_prompt (str): The system prompt.\r\n\r\n    Returns:\r\n        pd.DataFrame: The DataFrame with the added output column.\r\n    \"\"\"\r\n    responses = [fetch_response(row['code'], system_prompt) for _, row in df.iterrows()]\r\n    df['output'] = responses\r\n    return df`\r\n\r\n# Run the main function\r\n`new_df = asyncio.run(main(filtered_df, system_prompt_1))`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12172/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12172/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12171",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12171/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12171/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12171/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12171",
        "id": 1957935836,
        "node_id": "PR_kwDOIPDwls5dkko-",
        "number": 12171,
        "title": "separate compile integration tests",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T20:04:36Z",
        "updated_at": "2023-10-24T15:55:21Z",
        "closed_at": "2023-10-24T15:55:20Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12171",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12171",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12171.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12171.patch",
            "merged_at": "2023-10-24T15:55:20Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12171/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12171/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12170",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12170/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12170/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12170/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12170",
        "id": 1957880716,
        "node_id": "I_kwDOIPDwls50suOM",
        "number": 12170,
        "title": "`poetry install --with test`: Group(s) not found: test (via --with)",
        "user": {
            "login": "arunsathiya",
            "id": 18581859,
            "node_id": "MDQ6VXNlcjE4NTgxODU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/18581859?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arunsathiya",
            "html_url": "https://github.com/arunsathiya",
            "followers_url": "https://api.github.com/users/arunsathiya/followers",
            "following_url": "https://api.github.com/users/arunsathiya/following{/other_user}",
            "gists_url": "https://api.github.com/users/arunsathiya/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arunsathiya/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arunsathiya/subscriptions",
            "organizations_url": "https://api.github.com/users/arunsathiya/orgs",
            "repos_url": "https://api.github.com/users/arunsathiya/repos",
            "events_url": "https://api.github.com/users/arunsathiya/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arunsathiya/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-23T19:28:02Z",
        "updated_at": "2023-10-23T19:46:02Z",
        "closed_at": "2023-10-23T19:46:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI am trying to setup the local development environment with `poetry install --with test` but I am running into the error `Group(s) not found: test (via --with)`\r\n\r\n```\r\n> origin/master:master via \ud83d\udc0d v3.11.6\r\n> 57% langchain \u276f poetry install --with test\r\n\r\nGroup(s) not found: test (via --with)\r\n```\r\n\r\nCould you advise on what might be happening here?\n\n### Who can help?\n\n@eyurtsev, I think you might be able to advise here? \ud83d\ude4f\ud83c\udffc \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n- Clone repository\r\n- With poetry installed, run `poetry install --with test`\n\n### Expected behavior\n\nLocal development setup works without an error.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12170/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12170/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12169",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12169/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12169/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12169/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12169",
        "id": 1957794254,
        "node_id": "PR_kwDOIPDwls5dkFUY",
        "number": 12169,
        "title": "feat: document_loader Textract linearized output",
        "user": {
            "login": "schadem",
            "id": 45048633,
            "node_id": "MDQ6VXNlcjQ1MDQ4NjMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/45048633?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schadem",
            "html_url": "https://github.com/schadem",
            "followers_url": "https://api.github.com/users/schadem/followers",
            "following_url": "https://api.github.com/users/schadem/following{/other_user}",
            "gists_url": "https://api.github.com/users/schadem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schadem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schadem/subscriptions",
            "organizations_url": "https://api.github.com/users/schadem/orgs",
            "repos_url": "https://api.github.com/users/schadem/repos",
            "events_url": "https://api.github.com/users/schadem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schadem/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5959659008,
                "node_id": "LA_kwDOIPDwls8AAAABYzkuAA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20aws",
                "name": "integration: aws",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to Amazon Web Services (AWS) integrations"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-10-23T18:43:55Z",
        "updated_at": "2023-10-27T18:08:32Z",
        "closed_at": "2023-10-27T17:56:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12169",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12169",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12169.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12169.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** linearizing the output from Amazon Textract into a layout with tables and key/value pairs when those features are passed in as feature parameters \r\n  - **Issue:** fixes #12068\r\n  - **Dependencies:** adding amazon-textract-textractor as dependency\r\n  - **Tag maintainer:** @3coins  \r\n  - **Twitter handle:** \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12169/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12169/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12168",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12168/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12168/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12168/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12168",
        "id": 1957736180,
        "node_id": "PR_kwDOIPDwls5dj4lf",
        "number": 12168,
        "title": "feat: Add Client Info to available Google Cloud Clients",
        "user": {
            "login": "holtskinner",
            "id": 13262395,
            "node_id": "MDQ6VXNlcjEzMjYyMzk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/13262395?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holtskinner",
            "html_url": "https://github.com/holtskinner",
            "followers_url": "https://api.github.com/users/holtskinner/followers",
            "following_url": "https://api.github.com/users/holtskinner/following{/other_user}",
            "gists_url": "https://api.github.com/users/holtskinner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holtskinner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holtskinner/subscriptions",
            "organizations_url": "https://api.github.com/users/holtskinner/orgs",
            "repos_url": "https://api.github.com/users/holtskinner/repos",
            "events_url": "https://api.github.com/users/holtskinner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holtskinner/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-23T18:12:10Z",
        "updated_at": "2023-10-24T17:20:41Z",
        "closed_at": "2023-10-24T15:49:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12168",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12168",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12168.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12168.patch",
            "merged_at": "2023-10-24T15:49:12Z"
        },
        "body": "- This is used internally to gather aggregate usage metrics for the LangChain integrations\r\n\r\n- Note: This cannot be added to some of the Vertex AI integrations at this time because the SDK doesn't allow overriding the [`ClientInfo`](https://googleapis.dev/python/google-api-core/latest/client_info.html#module-google.api_core.client_info)\r\n\r\n- Added to:\r\n  - BigQuery\r\n  - Google Cloud Storage\r\n  - Document AI\r\n  - Vertex AI Model Garden\r\n  - Document AI Warehouse\r\n  - Vertex AI Search\r\n  - Vertex AI Matching Engine (Cloud Storage Client)\r\n \r\n@baskaryan, @eyurtsev, @hwchase17\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12168/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12168/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12167",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12167/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12167/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12167/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12167",
        "id": 1957733689,
        "node_id": "I_kwDOIPDwls50sKU5",
        "number": 12167,
        "title": "Issue: View context used in query in ConversationalRetrievalChain",
        "user": {
            "login": "Anaudia",
            "id": 111882886,
            "node_id": "U_kgDOBqsyhg",
            "avatar_url": "https://avatars.githubusercontent.com/u/111882886?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Anaudia",
            "html_url": "https://github.com/Anaudia",
            "followers_url": "https://api.github.com/users/Anaudia/followers",
            "following_url": "https://api.github.com/users/Anaudia/following{/other_user}",
            "gists_url": "https://api.github.com/users/Anaudia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Anaudia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Anaudia/subscriptions",
            "organizations_url": "https://api.github.com/users/Anaudia/orgs",
            "repos_url": "https://api.github.com/users/Anaudia/repos",
            "events_url": "https://api.github.com/users/Anaudia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Anaudia/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-23T18:10:39Z",
        "updated_at": "2023-10-23T19:15:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHow can I see the context that was used to answer a specific question? \r\n\r\n\r\nfrom langchain.memory import ConversationBufferWindowMemory\r\nmemory = ConversationBufferWindowMemory(k=3, memory_key=\"chat_history\", return_messages=True)\r\n\r\nqa = ConversationalRetrievalChain.from_llm(llm_model, vector_store.as_retriever(search_type='similarity', search_kwargs={'k': 2}), memory=memory)\r\nquery = \"Can I as a manager fly business class?\"\r\n\r\n##predict with the model\r\ntext = f\"\"\"[INST] <<SYS>> You are a HR-assistant that answers questions:\r\n<</SYS>> \r\n{query} [/INST]\r\n\"\"\"\r\nresult = qa({\"question\": text})\r\nresult\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12167/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12167/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12166",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12166/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12166/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12166/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12166",
        "id": 1957670819,
        "node_id": "I_kwDOIPDwls50r6-j",
        "number": 12166,
        "title": "mypy linting error in PyPDFParser with pypdf 3.16.4",
        "user": {
            "login": "schadem",
            "id": 45048633,
            "node_id": "MDQ6VXNlcjQ1MDQ4NjMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/45048633?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schadem",
            "html_url": "https://github.com/schadem",
            "followers_url": "https://api.github.com/users/schadem/followers",
            "following_url": "https://api.github.com/users/schadem/following{/other_user}",
            "gists_url": "https://api.github.com/users/schadem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schadem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schadem/subscriptions",
            "organizations_url": "https://api.github.com/users/schadem/orgs",
            "repos_url": "https://api.github.com/users/schadem/repos",
            "events_url": "https://api.github.com/users/schadem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schadem/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T17:34:36Z",
        "updated_at": "2023-10-23T17:40:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nmake lint errors\r\n\r\n```\r\nmake lint\r\n./scripts/check_pydantic.sh .\r\n./scripts/check_imports.sh\r\npoetry run ruff .\r\n[ \".\" = \"\" ] || poetry run black . --check\r\nAll done! \u2728 \ud83c\udf70 \u2728\r\n1866 files would be left unchanged.\r\n[ \".\" = \"\" ] || poetry run mypy .\r\nlangchain/document_loaders/parsers/pdf.py:95: error: \"PdfObject\" has no attribute \"keys\"  [attr-defined]\r\nlangchain/document_loaders/parsers/pdf.py:98: error: Value of type \"PdfObject\" is not indexable  [index]\r\nFound 2 errors in 1 file (checked 1863 source files)\r\nmake: *** [lint] Error 1```\r\n\r\nfor line 95:\r\n```\r\n        if not self.extract_images or \"/XObject\" not in page[\"/Resources\"].keys():\r\n```\r\n\r\nand line 98:\r\n```\r\n        xObject = page[\"/Resources\"][\"/XObject\"].get_object()\r\n```\r\n\r\non master 7c4f340cc, v0.320\r\n\r\ncommented with # type: ignore\r\n for my PR, but keeping here as reference to fix\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```make lint```\r\n\r\n\n\n### Expected behavior\n\nno mypy error",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12166/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12166/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12165",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12165/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12165/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12165/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12165",
        "id": 1957660279,
        "node_id": "I_kwDOIPDwls50r4Z3",
        "number": 12165,
        "title": "For New Contributors: Use SecretStr for api_keys",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 56,
        "created_at": "2023-10-23T17:29:51Z",
        "updated_at": "2023-12-06T17:09:37Z",
        "closed_at": "2023-12-05T23:42:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Updated: 20233-12-06 \r\n\r\nHello everyone! thank you all for your contributions! We've made a lot of progress with SecretStrs in the code base.\r\n\r\nFirst time contributors -- hope you had fun learning how to work in the code base and thanks for putting in the time. All contributors -- thanks for all your efforts in improving LangChain.\r\n\r\nWe'll create a new first time issue in a few months.\r\n\r\n------\r\n\r\nHello LangChain community,\r\n\r\n\r\nWe're always happy to see more folks getting involved in contributing to the LangChain codebase.\r\n\r\nThis is a good first issue if you want to learn more about how to set up\r\nfor development in the LangChain codebase.\r\n\r\n## Goal\r\n\r\nYour contribution will make it safer to print out a LangChain object\r\nwithout having any secrets included in raw format in the string representation.\r\n\r\n## Set up for development\r\n\r\nPrior to making any changes in the code:\r\n\r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nMake sure you're able to test, format, lint from `langchain/libs/langchain`\r\n\r\n\r\n```sh\r\nmake test\r\n```\r\n\r\n```sh\r\nmake format\r\n```\r\n\r\n```sh\r\nmake lint\r\n```\r\n\r\n## Shall you accept\r\n\r\nShall you accept this challenge, please claim one (and only one) of the modules from the list\r\nbelow as one that you will be working on, and respond to this issue.\r\n\r\nOnce you've made the required code changes, open a PR and link to this issue.\r\n\r\n## Acceptance Criteria\r\n\r\n- invoking str or repr on the the object does not show the secret key\r\n\r\nIntegration test for the code updated to include tests that:\r\n\r\n- confirms the object can be initialized with an API key provided via the initializer\r\n- confirms the object can be initialized with an API key provided via an env variable\r\n\r\nConfirm that it works:\r\n\r\n- either re-run notebook for the given object or else add an appropriate test\r\nthat confirms that the actual secret is used appropriately (i.e.,`.get_secret_value()`)\r\n\r\n**If your code does not use `get_secret_value()` somewhere, then it probably contains a bug!**\r\n\r\n## Modules\r\n\r\n- [ ] langchain/chat_models/anyscale.py @aidoskanapyanov \r\n- [ ] langchain/chat_models/azure_openai.py @onesolpark \r\n- [x] langchain/chat_models/azureml_endpoint.py @fyasla \r\n- [ ] langchain/chat_models/baichuan.py\r\n- [ ] langchain/chat_models/everlyai.py @sfreisthler \r\n- [x] langchain/chat_models/fireworks.py @nepalprabin \r\n- [ ] langchain/chat_models/google_palm.py @faisalt14 \r\n- [ ] langchain/chat_models/javelin_ai_gateway.py\r\n- [ ] langchain/chat_models/jinachat.py\r\n- [ ] langchain/chat_models/konko.py\r\n- [ ] langchain/chat_models/litellm.py\r\n- [ ] langchain/chat_models/openai.py @AnasKhan0607 \r\n- [ ] langchain/chat_models/tongyi.py\r\n- [ ] langchain/llms/ai21.py\r\n- [x] langchain/llms/aleph_alpha.py @slangenbach \r\n- [ ] langchain/llms/anthropic.py\r\n- [ ] langchain/llms/anyscale.py @aidoskanapyanov \r\n- [ ] langchain/llms/arcee.py\r\n- [ ] langchain/llms/azureml_endpoint.py\r\n- [ ] langchain/llms/bananadev.py\r\n- [ ] langchain/llms/cerebriumai.py\r\n- [ ] langchain/llms/cohere.py @arunsathiya \r\n- [ ] langchain/llms/edenai.py @kristinspenc \r\n- [ ] langchain/llms/fireworks.py\r\n- [ ] langchain/llms/forefrontai.py\r\n- [ ] langchain/llms/google_palm.py @Harshil-Patel28 \r\n- [ ] langchain/llms/gooseai.py\r\n- [ ] langchain/llms/javelin_ai_gateway.py\r\n- [ ] langchain/llms/minimax.py\r\n- [ ] langchain/llms/nlpcloud.py\r\n- [ ] langchain/llms/openai.py @HassanA01 \r\n- [ ] langchain/llms/petals.py @akshatvishu \r\n- [ ] langchain/llms/pipelineai.py\r\n- [ ] langchain/llms/predibase.py\r\n- [ ] langchain/llms/stochasticai.py\r\n- [x] langchain/llms/symblai_nebula.py @praveenv \r\n- [ ] langchain/llms/together.py\r\n- [ ] langchain/llms/tongyi.py\r\n- [ ] langchain/llms/writer.py @ommirzaei \r\n- [ ] langchain/llms/yandex.py\r\n\r\n### Motivation\r\n\r\nPrevent secrets from being printed out when printing the given langchain object.\r\n\r\n### Your contribution\r\n\r\nPlease sign up by responding to this issue and including the name of the module.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12165/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12165/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12164",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12164/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12164/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12164/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12164",
        "id": 1957588185,
        "node_id": "PR_kwDOIPDwls5djYp5",
        "number": 12164,
        "title": "Update deprecated `langchain` imports with suggested new paths.",
        "user": {
            "login": "obi1kenobi",
            "id": 2348618,
            "node_id": "MDQ6VXNlcjIzNDg2MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2348618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/obi1kenobi",
            "html_url": "https://github.com/obi1kenobi",
            "followers_url": "https://api.github.com/users/obi1kenobi/followers",
            "following_url": "https://api.github.com/users/obi1kenobi/following{/other_user}",
            "gists_url": "https://api.github.com/users/obi1kenobi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/obi1kenobi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/obi1kenobi/subscriptions",
            "organizations_url": "https://api.github.com/users/obi1kenobi/orgs",
            "repos_url": "https://api.github.com/users/obi1kenobi/repos",
            "events_url": "https://api.github.com/users/obi1kenobi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/obi1kenobi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T16:48:00Z",
        "updated_at": "2023-10-23T17:52:10Z",
        "closed_at": "2023-10-23T17:52:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12164",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12164",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12164.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12164.patch",
            "merged_at": "2023-10-23T17:52:09Z"
        },
        "body": "Let's help our users find the proper import to use instead of the deprecated top-level ones.\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12164/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12164/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12163",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12163/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12163/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12163/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12163",
        "id": 1957544509,
        "node_id": "I_kwDOIPDwls50rcI9",
        "number": 12163,
        "title": "OpenAPI Spec - reduce_openapi_spec - maximum recursion depth exceeded",
        "user": {
            "login": "Cyb3rWard0g",
            "id": 9653181,
            "node_id": "MDQ6VXNlcjk2NTMxODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9653181?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Cyb3rWard0g",
            "html_url": "https://github.com/Cyb3rWard0g",
            "followers_url": "https://api.github.com/users/Cyb3rWard0g/followers",
            "following_url": "https://api.github.com/users/Cyb3rWard0g/following{/other_user}",
            "gists_url": "https://api.github.com/users/Cyb3rWard0g/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Cyb3rWard0g/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Cyb3rWard0g/subscriptions",
            "organizations_url": "https://api.github.com/users/Cyb3rWard0g/orgs",
            "repos_url": "https://api.github.com/users/Cyb3rWard0g/repos",
            "events_url": "https://api.github.com/users/Cyb3rWard0g/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Cyb3rWard0g/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-23T16:23:35Z",
        "updated_at": "2023-10-23T17:57:45Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHello team!\r\n\r\nI am new to the OpenAPI Specs Toolkit. I am trying to build an OpenAPI Agent Planner for the Microsoft Graph API.  The OpenAPI specs can be found here: https://github.com/microsoftgraph/msgraph-metadata/blob/master/openapi/v1.0/openapi.yaml . I downloaded the YAML file and followed this notebook: https://python.langchain.com/docs/integrations/toolkits/openapi#1st-example-hierarchical-planning-agent .\r\n\r\n```python\r\nimport os\r\nimport yaml\r\nfrom langchain.agents.agent_toolkits.openapi.spec import reduce_openapi_spec\r\n\r\ncurrent_directory = os.path.abspath('')\r\ndata_directory = os.path.join(current_directory, \"data\")\r\nmsgraph_api_file = os.path.join(data_directory, \"msgraph-openapi.yaml\")\r\n\r\nraw_msgraph_api_spec = yaml.load(open(msgraph_api_file,encoding='utf-8').read(), Loader=yaml.Loader)\r\nmsgraph_api_spec = reduce_openapi_spec(raw_msgraph_api_spec)\r\n```\r\n\r\nDoes anyone know how to handle large OpenAPI Specs? I ran the following to read my OpenAPI YAML spec and when using the `reduce_openapi_spec` module, I get the following error below:\r\n\r\n`RecursionError: maximum recursion depth exceeded while calling a Python object` \r\n\r\nIs there a setting I need to change in LangChain? Please and thank you for your help in advance. I believe this issue is before I run into the following token limit, right? https://github.com/langchain-ai/langchain/issues/2786\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12163/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12163/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12162",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12162/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12162/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12162/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12162",
        "id": 1957510125,
        "node_id": "PR_kwDOIPDwls5djHvz",
        "number": 12162,
        "title": "Text-to-SQL + semantic search",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-23T16:05:03Z",
        "updated_at": "2023-11-01T23:25:05Z",
        "closed_at": "2023-11-01T23:25:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12162",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12162",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12162.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12162.patch",
            "merged_at": null
        },
        "body": "Querying using standard SQL queries with [PGVector](https://github.com/pgvector/pgvector) extension for semantic search.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12162/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12162/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12161",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12161/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12161/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12161/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12161",
        "id": 1957496159,
        "node_id": "PR_kwDOIPDwls5djEu3",
        "number": 12161,
        "title": "bump 321",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T15:57:14Z",
        "updated_at": "2023-10-23T16:49:39Z",
        "closed_at": "2023-10-23T16:49:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12161",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12161",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12161.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12161.patch",
            "merged_at": "2023-10-23T16:49:38Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12161/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12161/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12160",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12160/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12160/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12160/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12160",
        "id": 1957467852,
        "node_id": "I_kwDOIPDwls50rJbM",
        "number": 12160,
        "title": "JsonSpec `keys` method doesn't handle indexing lists properly",
        "user": {
            "login": "gcardoso2314",
            "id": 22494459,
            "node_id": "MDQ6VXNlcjIyNDk0NDU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/22494459?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gcardoso2314",
            "html_url": "https://github.com/gcardoso2314",
            "followers_url": "https://api.github.com/users/gcardoso2314/followers",
            "following_url": "https://api.github.com/users/gcardoso2314/following{/other_user}",
            "gists_url": "https://api.github.com/users/gcardoso2314/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gcardoso2314/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gcardoso2314/subscriptions",
            "organizations_url": "https://api.github.com/users/gcardoso2314/orgs",
            "repos_url": "https://api.github.com/users/gcardoso2314/repos",
            "events_url": "https://api.github.com/users/gcardoso2314/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gcardoso2314/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-23T15:41:45Z",
        "updated_at": "2023-10-23T15:43:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "There's an issue when using JsonSpec that it can't handle the case where it indexes a list with `0` because in [line 52](https://github.com/langchain-ai/langchain/blob/d0505c0d4755d8cbe62a8ddee68f53a5cb330892/libs/langchain/langchain/tools/json/tool.py#L52) it checks `if i` and since `i==0` it returns `False`. \r\n\r\nInstead, I believe this should check for purely existence of `i` as a string or int.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12160/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12160/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12159",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12159/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12159/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12159/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12159",
        "id": 1957352596,
        "node_id": "PR_kwDOIPDwls5diliK",
        "number": 12159,
        "title": "Expose configuration options in GraphCypherQAChain",
        "user": {
            "login": "sudranga",
            "id": 12044110,
            "node_id": "MDQ6VXNlcjEyMDQ0MTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/12044110?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sudranga",
            "html_url": "https://github.com/sudranga",
            "followers_url": "https://api.github.com/users/sudranga/followers",
            "following_url": "https://api.github.com/users/sudranga/following{/other_user}",
            "gists_url": "https://api.github.com/users/sudranga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sudranga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sudranga/subscriptions",
            "organizations_url": "https://api.github.com/users/sudranga/orgs",
            "repos_url": "https://api.github.com/users/sudranga/repos",
            "events_url": "https://api.github.com/users/sudranga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sudranga/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-23T14:47:06Z",
        "updated_at": "2023-10-24T16:52:56Z",
        "closed_at": "2023-10-24T16:52:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12159",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12159",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12159.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12159.patch",
            "merged_at": "2023-10-24T16:52:56Z"
        },
        "body": "Allows for passing arguments into the LLM chains used by the GraphCypherQAChain. This is to address a request by a user to include memory in the Cypher creating chain. Will keep the prompt variables as-is to be backward compatible. But, would be a good idea to deprecate them and use the **kwargs variables. Added a test case. \r\n\r\nIn general, I think it would be good for any chain to automatically pass in a readonlymemory(of its input) to its subchains whilist allowing for an override. But, this would be a different change.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12159/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12159/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12158",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12158/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12158/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12158/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12158",
        "id": 1957280320,
        "node_id": "I_kwDOIPDwls50qbpA",
        "number": 12158,
        "title": "StructuredChatOutputParser regex not accounting for space",
        "user": {
            "login": "Javed6234",
            "id": 32278192,
            "node_id": "MDQ6VXNlcjMyMjc4MTky",
            "avatar_url": "https://avatars.githubusercontent.com/u/32278192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Javed6234",
            "html_url": "https://github.com/Javed6234",
            "followers_url": "https://api.github.com/users/Javed6234/followers",
            "following_url": "https://api.github.com/users/Javed6234/following{/other_user}",
            "gists_url": "https://api.github.com/users/Javed6234/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Javed6234/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Javed6234/subscriptions",
            "organizations_url": "https://api.github.com/users/Javed6234/orgs",
            "repos_url": "https://api.github.com/users/Javed6234/repos",
            "events_url": "https://api.github.com/users/Javed6234/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Javed6234/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T14:15:02Z",
        "updated_at": "2023-10-27T09:37:53Z",
        "closed_at": "2023-10-27T09:37:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version: 0.0.320\r\nPython 3.9.6\r\n\r\nIssue:\r\nThe LLM output ` ```json  \\n{\\n  \\\"action\\\": \\\"...``` ` for a StructuredChatAgent using StructuredChatOutputParser.\r\nThe regex in the parser `re.compile(r\"```(?:json)?\\n(.*?)```\", re.DOTALL)` does not allow for a space after `json`.\r\n\r\nLLM: Claude v2\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\ncreate an agent using StructuredChatAgent and a tool that is called by the agent.\r\nIf the output from the LLM contains a space after `json`, it will call `AgentFinish`\n\n### Expected behavior\n\nThe expected behaviour is that the output should match the regex.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12158/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12158/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12157",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12157/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12157/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12157/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12157",
        "id": 1957182305,
        "node_id": "I_kwDOIPDwls50qDth",
        "number": 12157,
        "title": "Agent is not stopping after each answer",
        "user": {
            "login": "mailtosagar",
            "id": 16096109,
            "node_id": "MDQ6VXNlcjE2MDk2MTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/16096109?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mailtosagar",
            "html_url": "https://github.com/mailtosagar",
            "followers_url": "https://api.github.com/users/mailtosagar/followers",
            "following_url": "https://api.github.com/users/mailtosagar/following{/other_user}",
            "gists_url": "https://api.github.com/users/mailtosagar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mailtosagar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mailtosagar/subscriptions",
            "organizations_url": "https://api.github.com/users/mailtosagar/orgs",
            "repos_url": "https://api.github.com/users/mailtosagar/repos",
            "events_url": "https://api.github.com/users/mailtosagar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mailtosagar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T13:32:40Z",
        "updated_at": "2023-10-23T13:46:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHi, \r\n\r\nI am working on a student teacher model . I am running into a problem where I agent does not generate final answer after the expected observations. Below is my code and output\r\n\r\nCode\r\n```\r\nassignment_instruction_2 = \"\"\"\r\n1. Ask his name and then welcome him\r\n2. Ask the topic he wants to understand\r\n3. Ask about his understanding about the topic\r\n3. Let him answer \r\n4. Then take out the relevant information from the get_next_content tool\r\n5. If it is incomplete then tell him complete answer\r\n\"\"\"\r\n\r\nFORMAT_INSTRUCTIONS = f\"\"\"Use the following format:\r\n\r\n        Question: the input question you must answer\r\n        Thought: you should always think about what to do\r\n        Action: the action to take, should be one of [{'get_topics', 'get_next_content', 'get_topic_tool'}]\r\n        Action Input: the input to the action\r\n        Observation: the detailed,at most comprehensive result of the action\r\n        ... (this Thought/Action/Action Input/Observation can repeat N times)\r\n        Thought: I now know the final answer based on my observation, i do not need anything more \r\n        Final Answer: the final answer to the original input question is the full detailed explanation from the Observation provided as bullet points.\r\n\r\n        \r\n        You have to provide the answer maximum after 2 Thoughts. \r\n        \"\"\"\r\n\r\ncontent_assignment = f\"\"\"You are the author of the book, You will be asked an assigenment by the user, which are typically students only.\r\n                    help them to understand the topic according to the instructions delimited by /* */. follow them sequestially\r\n                    /*{assignment_instruction_2} */\r\n\r\nmemory_assignment = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\nllm_assignment = ChatOpenAI(openai_api_key=os.getenv(\"OPENAI_API_KEY\"), temperature=0, model = \"gpt-4\")\r\n\r\n\r\nagent_chain_assignment = initialize_agent(\r\n    tools, \r\n    llm_assignment, \r\n    agent=AgentType.CHAT_CONVERSATIONAL_REACT_DESCRIPTION, \r\n    verbose=True,\r\n    memory=memory_assignment,\r\n    max_iterations=3,\r\n    # early_stopping_method=\"generate\",\r\n    format_instructions=FORMAT_INSTRUCTIONS,\r\n    agent_kwargs={\"system_message\": content_assignment},\r\n    handle_parsing_errors=_handle_error\r\n)\r\n\r\nprint(\"<================= TOPIC Understand AGENT ====================>\")\r\nwhile(True):\r\n    user_message = input(\"User: \")\r\n    if user_message == 'exit':\r\n        break\r\n    response = agent_chain_assignment.run(user_message)\r\n    print(\"LLM : \",response)\r\n    print(\"===============================\")\r\n```\r\n\r\nOuput:\r\n\r\n``` ```\r\n<================= TOPIC Understand AGENT ====================>\r\nUser:  hi, sagar\r\n\r\n\r\n> Entering new AgentExecutor chain...\r\n```json\r\n{\r\n    \"action\": \"Final Answer\",\r\n    \"action_input\": \"Hello Sagar, welcome! What topic would you like to understand better today?\"\r\n}\r\n```\r\n\r\n> Finished chain.\r\nLLM :  Hello Sagar, welcome! What topic would you like to understand better today?\r\n===============================\r\nUser:  farming\r\n\r\n\r\n> Entering new AgentExecutor chain...\r\nCould not parse LLM output: That's a broad topic, Sagar. Could you tell me what you already understand about farming? This will help me provide you with the most relevant information.\r\nObservation: Could not parse LLM output: That's a broad topic, \r\nThought:Could not parse LLM output: I'm sorry for the confusion, Sagar. You mentioned that you want to understand more about farming. Could you please specify what exactly you know about farming? This will help me to provide you with the most relevant information.\r\nObservation: Could not parse LLM output: I'm sorry for the conf\r\nThought:Could not parse LLM output: I'm sorry for the confusion, Sagar. You mentioned that you want to understand more about farming. Could you please specify what exactly you know about farming? This will help me to provide you with the most relevant information.\r\nObservation: Could not parse LLM output: I'm sorry for the conf\r\nThought:\r\n\r\n> Finished chain.\r\nLLM :  Agent stopped due to iteration limit or time limit.\r\n===============================\r\n``` ```\r\n\r\nIt was supposed to output the final answer after the first answer (right after the user said \"farming\"). But it is running in loop and sometime it also consider that the user have already answered.\r\n\r\nCan I make some corrections in the code where I can agent produce final answer right where it needs too. \r\n\r\nThanks,\r\nSagar\n\n### Who can help?\n\n@hwchase17  @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nProvided in the question itself\r\n\n\n### Expected behavior\n\nprovided in the explaination",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12157/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12157/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12156",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12156/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12156/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12156/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12156",
        "id": 1957115754,
        "node_id": "I_kwDOIPDwls50pzdq",
        "number": 12156,
        "title": "Langchain crashes when retrieving results from vertexai codey models",
        "user": {
            "login": "northdpole",
            "id": 1583262,
            "node_id": "MDQ6VXNlcjE1ODMyNjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1583262?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/northdpole",
            "html_url": "https://github.com/northdpole",
            "followers_url": "https://api.github.com/users/northdpole/followers",
            "following_url": "https://api.github.com/users/northdpole/following{/other_user}",
            "gists_url": "https://api.github.com/users/northdpole/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/northdpole/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/northdpole/subscriptions",
            "organizations_url": "https://api.github.com/users/northdpole/orgs",
            "repos_url": "https://api.github.com/users/northdpole/repos",
            "events_url": "https://api.github.com/users/northdpole/events{/privacy}",
            "received_events_url": "https://api.github.com/users/northdpole/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T13:02:18Z",
        "updated_at": "2023-10-23T13:04:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nHey folks, I think i stumbled on a bug (or i'm using langchain wrong)\r\n\r\nLangchain version : 0.0.320\r\nPlatform Ubuntu 23.04\r\nPython: 3.11.4\r\n\r\n\r\n### Who can help?\r\n@hwchase17 , @agola11 \r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nRun the following:\r\n`\r\nllm = llms.VertexAI(model_name=\"code-bison@001\", max_output_tokens=1000, temperature=0.0)\r\nprediction = llm.predict(\"\"\" write a fibonacci sequence in python\"\"\")\r\n\r\nfrom pprint import pprint\r\npprint(prediction)`\r\n\r\n\r\n### Expected behavior\r\n\r\nWe get a prediction\r\n\r\n\r\n(adding more info since the form has ran out of fields)\r\n\r\nI think the bug is in [llms/vertexai.py:301](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/llms/vertexai.py#L301C23-L301C23) . Variable res is a TextGenerationResponse as opposed to MultiCandidateTextGenerationResponse\r\n\r\nHence there are no \"candidates\" as you would expect from a chat model.\r\n\r\nThis happens because:  Google's sdk (vertexai/language_models_language_models.py)\r\nmethod:\r\n>_ChatSessionBase. _parse_chat_prediction_response\r\n\r\nreturns a `MultiCandidateTextGenerationResponse`\r\nbut both  `CodeChatSession`  and `CodeGenerationModel` return a `TextGenerationResponse`\r\n\r\n\r\nI think the fix might be replacing \r\n\r\n`generations.append([_response_to_generation(r) for r in res.candidates])`\r\nwith\r\n```\r\n\r\n                if self.is_codey_model:\r\n                    generations.append([_response_to_generation(res)])\r\n                else:\r\n                    generations.append([_response_to_generation(r) for r in res.candidates])\r\n```\r\n\r\nhappy to send a pr if I helps",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12156/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12156/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12154",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12154/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12154/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12154/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12154",
        "id": 1957048261,
        "node_id": "I_kwDOIPDwls50pi_F",
        "number": 12154,
        "title": "MatchingEngine.add_texts() doesn't work",
        "user": {
            "login": "HajimeHirano",
            "id": 72591992,
            "node_id": "MDQ6VXNlcjcyNTkxOTky",
            "avatar_url": "https://avatars.githubusercontent.com/u/72591992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HajimeHirano",
            "html_url": "https://github.com/HajimeHirano",
            "followers_url": "https://api.github.com/users/HajimeHirano/followers",
            "following_url": "https://api.github.com/users/HajimeHirano/following{/other_user}",
            "gists_url": "https://api.github.com/users/HajimeHirano/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HajimeHirano/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HajimeHirano/subscriptions",
            "organizations_url": "https://api.github.com/users/HajimeHirano/orgs",
            "repos_url": "https://api.github.com/users/HajimeHirano/repos",
            "events_url": "https://api.github.com/users/HajimeHirano/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HajimeHirano/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T12:28:00Z",
        "updated_at": "2023-11-19T18:10:42Z",
        "closed_at": "2023-11-19T18:10:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n`langchain==0.0.320`\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [x] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```py\r\nfrom langchain.vectorstores import MatchingEngine\r\n\r\ntexts = [\r\n    \"The cat sat on\",\r\n    \"the mat.\",\r\n    \"I like to\",\r\n    \"eat pizza for\",\r\n    \"dinner.\",\r\n    \"The sun sets\",\r\n    \"in the west.\",\r\n]\r\n\r\n\r\nvector_store = MatchingEngine.from_components(\r\n    texts=texts,\r\n    project_id=\"<my_project_id>\",\r\n    region=\"<my_region>\",\r\n    gcs_bucket_uri=\"<my_gcs_bucket>\",\r\n    index_id=\"<my_matching_engine_index_id>\",\r\n    endpoint_id=\"<my_matching_engine_endpoint_id>\",\r\n)\r\n\r\nvector_store.add_texts(texts=texts)\r\n```\n\n### Expected behavior\n\nI think line 136 in matching_engine.py should be\r\n```py\r\njsons.append(json_)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12154/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12154/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12153",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12153/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12153/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12153/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12153",
        "id": 1956875719,
        "node_id": "PR_kwDOIPDwls5dg9bR",
        "number": 12153,
        "title": "fix: doc string of default params in chat_models, llm qianfan",
        "user": {
            "login": "danielhjz",
            "id": 5894042,
            "node_id": "MDQ6VXNlcjU4OTQwNDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5894042?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danielhjz",
            "html_url": "https://github.com/danielhjz",
            "followers_url": "https://api.github.com/users/danielhjz/followers",
            "following_url": "https://api.github.com/users/danielhjz/following{/other_user}",
            "gists_url": "https://api.github.com/users/danielhjz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danielhjz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danielhjz/subscriptions",
            "organizations_url": "https://api.github.com/users/danielhjz/orgs",
            "repos_url": "https://api.github.com/users/danielhjz/repos",
            "events_url": "https://api.github.com/users/danielhjz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danielhjz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-23T10:44:33Z",
        "updated_at": "2023-10-23T18:03:19Z",
        "closed_at": "2023-10-23T18:03:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12153",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12153",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12153.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12153.patch",
            "merged_at": "2023-10-23T18:03:18Z"
        },
        "body": "  - **Description:** a fix of the doc string in Qianfan\r\n  - **Issue:** no\r\n  - **Dependencies:** no\r\n  - **Tag maintainer:** @baskaryan\r\n  - **Twitter handle:** no\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12153/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12153/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12152",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12152/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12152/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12152/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12152",
        "id": 1956860680,
        "node_id": "PR_kwDOIPDwls5dg6J_",
        "number": 12152,
        "title": "Dev qf",
        "user": {
            "login": "danielhjz",
            "id": 5894042,
            "node_id": "MDQ6VXNlcjU4OTQwNDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5894042?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danielhjz",
            "html_url": "https://github.com/danielhjz",
            "followers_url": "https://api.github.com/users/danielhjz/followers",
            "following_url": "https://api.github.com/users/danielhjz/following{/other_user}",
            "gists_url": "https://api.github.com/users/danielhjz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danielhjz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danielhjz/subscriptions",
            "organizations_url": "https://api.github.com/users/danielhjz/orgs",
            "repos_url": "https://api.github.com/users/danielhjz/repos",
            "events_url": "https://api.github.com/users/danielhjz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danielhjz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T10:35:51Z",
        "updated_at": "2023-10-23T10:36:36Z",
        "closed_at": "2023-10-23T10:36:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12152",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12152",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12152.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12152.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12152/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12152/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12151",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12151/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12151/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12151/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12151",
        "id": 1956756560,
        "node_id": "I_kwDOIPDwls50obxQ",
        "number": 12151,
        "title": "CharacterTextSplitter return incorrect chunks",
        "user": {
            "login": "viethoangtranduong",
            "id": 36019296,
            "node_id": "MDQ6VXNlcjM2MDE5Mjk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/36019296?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/viethoangtranduong",
            "html_url": "https://github.com/viethoangtranduong",
            "followers_url": "https://api.github.com/users/viethoangtranduong/followers",
            "following_url": "https://api.github.com/users/viethoangtranduong/following{/other_user}",
            "gists_url": "https://api.github.com/users/viethoangtranduong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/viethoangtranduong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/viethoangtranduong/subscriptions",
            "organizations_url": "https://api.github.com/users/viethoangtranduong/orgs",
            "repos_url": "https://api.github.com/users/viethoangtranduong/repos",
            "events_url": "https://api.github.com/users/viethoangtranduong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/viethoangtranduong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T09:37:40Z",
        "updated_at": "2023-10-23T09:44:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n`langchain==0.0.320`\r\n\r\nExample file: https://drive.google.com/file/d/1zDj3VXohUO7x4udu9RY9KxWbzBUIrsvb/view?usp=sharing\r\n\r\n```\r\nfrom PyPDF2 import PdfReader\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\n\r\n# Specify the PDF file to be processed\r\npdf = \"Deep Learning.pdf\"\r\n\r\n# Initialize a PdfReader object to read the PDF file\r\npdf_reader = PdfReader(pdf)\r\n\r\n# Initialize an empty string to store the extracted text from the PDF\r\ntext = \"\"\r\n\r\nfor i, page in enumerate(pdf_reader.pages):\r\n    text += f\" ### Page {i}:\\n\\n\" + page.extract_text()\r\n\r\nassert text.count(\" ### \") == 100\r\n\r\ntext_splitter = CharacterTextSplitter(\r\n    separator=\" ### \",\r\n)\r\nchunks = text_splitter.split_text(text)\r\nlen(chunks) ## = 76\r\n```\r\n\r\nLength chunks = 76 while there are 100 counts of the separator ` ### `. All the splits by ` ### ` look decent, so not sure why they are being merged strangely. Please help advice! Thanks!\r\n\r\nThank you so much!\n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\nfrom PyPDF2 import PdfReader\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\n\r\n# Specify the PDF file to be processed\r\npdf = \"Deep Learning.pdf\"\r\n\r\n# Initialize a PdfReader object to read the PDF file\r\npdf_reader = PdfReader(pdf)\r\n\r\n# Initialize an empty string to store the extracted text from the PDF\r\ntext = \"\"\r\n\r\nfor i, page in enumerate(pdf_reader.pages):\r\n    text += f\" ### Page {i}:\\n\\n\" + page.extract_text()\r\n\r\nassert text.count(\" ### \") == 100\r\n\r\ntext_splitter = CharacterTextSplitter(\r\n    separator=\" ### \",\r\n)\r\nchunks = text_splitter.split_text(text)\r\nlen(chunks) ## = 76\r\n```\n\n### Expected behavior\n\n`len(chunks) == 100`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12151/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12151/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12150",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12150/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12150/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12150/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12150",
        "id": 1956747660,
        "node_id": "I_kwDOIPDwls50oZmM",
        "number": 12150,
        "title": "LlamaCpp truncates the response from LLM, and CTransformers gives a token overrun error",
        "user": {
            "login": "DimmNet",
            "id": 30796320,
            "node_id": "MDQ6VXNlcjMwNzk2MzIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30796320?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DimmNet",
            "html_url": "https://github.com/DimmNet",
            "followers_url": "https://api.github.com/users/DimmNet/followers",
            "following_url": "https://api.github.com/users/DimmNet/following{/other_user}",
            "gists_url": "https://api.github.com/users/DimmNet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DimmNet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DimmNet/subscriptions",
            "organizations_url": "https://api.github.com/users/DimmNet/orgs",
            "repos_url": "https://api.github.com/users/DimmNet/repos",
            "events_url": "https://api.github.com/users/DimmNet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DimmNet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T09:32:40Z",
        "updated_at": "2023-11-07T10:43:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nUbuntu: 22.04.3 LTS\r\npython: 3.10\r\npip: 22.0.2\r\nlangchain: 0.0.319\r\nvector stores: faiss\r\nllm model: llama-2-13b-chat.Q4_K_M.gguf and mistral-7b-openorca.Q4_K_M.gguf\r\nembeddings model: thenlper/gte-large\r\n\r\n### Who can help?\r\n\r\nanyone\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [X] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n1. Prompt is created via PromptTemplate.\r\nIn Prompt:\r\n```\r\nYou are a financial consultant. Try to answer the question based on the information below. \r\nIf you cannot answer the question based on the information, say that you cannot find the answer or are unable to find the answer.\r\nTherefore, try to understand the context of the question and answer only on the basis of the information given. Do not write answers that are irrelevant.\r\nIf you do not have enough information to end a sentence with a period, then do not write that sentence.\r\n\r\nContext: {context}\r\nQuestion: {question}\r\n\r\nHelpful answer:\r\n```\r\n\r\n2. Load vectoron storage using HuggingFaceEmbeddings and FAISS:\r\n```\r\nembeddings = HuggingFaceEmbeddings(model_name=\"thenlper/gte-large\", model_kwargs={'device': 'cpu'})\r\ndb = FAISS.load_local(persist_directory, embeddings)\r\nretriever = db.as_retriever(search_kwargs={\"k\": 2})\r\n```\r\n\r\n3. Load the LLM via LlamaCpp or CTransformers\r\nLlamaCpp code:\r\n```\r\ncallback_manager = CallbackManager([StreamingStdOutCallbackHandler()])\r\n\r\nllm = LlamaCpp(\r\n    model_path=model_path,\r\n    n_gpu_layers=-1,\r\n    use_mlock=True,\r\n    n_batch=512,\r\n    n_ctx=2048,\r\n    temperature=0.8,\r\n    f16_kv=True,\r\n    callback_manager=callback_manager,\r\n    verbose=True,\r\n    top_k=1\r\n)\r\n```\r\n\r\nCTransformers Code:\r\n```\r\ncallback_manager = CallbackManager([StreamingStdOutCallbackHandler()])\r\n\r\nllm = CTransformers(\r\n    model=model_path,\r\n    model_type=\"llama\",\r\n    config={'max_new_tokens': 2048, 'temperature': 0.8},\r\n    callbacks=callback_manager\r\n)\r\n```\r\n\r\n4. Create Retriever using RetrievalQA:\r\n```\r\nqa = RetrievalQA.from_chain_type(\r\n    llm=llm,\r\n    chain_type=\"stuff\",\r\n    retriever=retriever,\r\n    return_source_documents=return_source_documents,\r\n    chain_type_kwargs={\"prompt\": custom_prompt}\r\n)\r\n```\r\n\r\n5. Query the created retriever: qa(\"your question\")\r\n\r\n### Expected behavior\r\n\r\nI look forward to receiving a completed response from LLM.\r\n\r\nHowever, when using LlamaCpp, the response reaches about 1000 characters and ends. The last sentence from LLM is abruptly cut off.\r\n\r\nWhen CTransformers are used, the response can reach different lengths, after which an error occurs: \"Number of tokens (513) exceeded maximum context length (512)\" and there are many of these errors. After that I get a response where the beginning is correct and then the same words are repeated. The repetition of words starts from the moment the errors about the number of tokens begin.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12150/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12150/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12149",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12149/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12149/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12149/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12149",
        "id": 1956707298,
        "node_id": "I_kwDOIPDwls50oPvi",
        "number": 12149,
        "title": "LCEL not working with MultiPromptChain",
        "user": {
            "login": "snao",
            "id": 48629368,
            "node_id": "MDQ6VXNlcjQ4NjI5MzY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/48629368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snao",
            "html_url": "https://github.com/snao",
            "followers_url": "https://api.github.com/users/snao/followers",
            "following_url": "https://api.github.com/users/snao/following{/other_user}",
            "gists_url": "https://api.github.com/users/snao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snao/subscriptions",
            "organizations_url": "https://api.github.com/users/snao/orgs",
            "repos_url": "https://api.github.com/users/snao/repos",
            "events_url": "https://api.github.com/users/snao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6134259614,
                "node_id": "LA_kwDOIPDwls8AAAABbaFfng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20lcel",
                "name": "area: lcel",
                "color": "38B1E8",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-10-23T09:10:57Z",
        "updated_at": "2023-12-01T18:33:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\npython == 3.10.12\r\nlangchain == 0.0.312\r\n\r\n### Who can help?\r\n\r\n@hwchase17 @agola11\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```open_llm = ChatOpenAI(temperature=0, openai_api_key=OPENAI_API_KEY, model_name='gpt-3.5-turbo-16k', max_tokens=3000)\r\n\r\n# test chain (LCEL)\r\nhuman_message = HumanMessagePromptTemplate.from_template('test prompt: {input}')\r\nsystem_message = SystemMessagePromptTemplate.from_template('system')\r\nall_messages = ChatPromptTemplate.from_messages([system_message, human_message])\r\ntest_chain = all_messages | open_llm | StrOutputParser()\r\n\r\n# LLMChain\r\nclass MyLLMChain(LLMChain):\r\n    output_key: str = \"output\"  #: :meta private\r\n\r\nprompt_infos  = [\r\n    {\r\n        \"name\": \"mastermind\", \r\n        \"description\": \"for general questions.\",\r\n        \"chain\": MyLLMChain(llm=openai_chatbot, prompt=PromptTemplate(template='''{input}''', \r\n                                                input_variables=[\"input\"]\r\n                                               )) \r\n    },\r\n    {\r\n        \"name\": \"test\", \r\n        \"description\": \"for testing\",\r\n        \"chain\": test_chain\r\n    }]\r\n\r\ndestinations = [f\"{p['name']}: {p['description']}\" for p in prompt_infos]\r\ndestinations_str = \"\\n\".join(destinations)\r\nrouter_template = MULTI_PROMPT_ROUTER_TEMPLATE.format(destinations=destinations_str)\r\n\r\nrouter_prompt = PromptTemplate(\r\n    template=router_template,\r\n    input_variables=[\"input\"],\r\n    # output_parser=OpenAIFunctionsAgentOutputParser()\r\n    # output_parser=RouterOutputParser(),\r\n    output_parser=OutputFixingParser.from_llm(parser=RouterOutputParser(), llm=openai_chatbot),\r\n)\r\nrouter_chain = LLMRouterChain.from_llm(openai_chatbot, router_prompt)\r\n\r\ndestination_chains = {}\r\nfor p_info in prompt_infos:\r\n    name = p_info[\"name\"]\r\n    chain = p_info[\"chain\"]\r\n    destination_chains[name] = chain\r\n    \r\ndefault_chain = ConversationChain(llm=openai_chatbot, output_key=\"output\") \r\n\r\n\r\nagent_yan_chain = MultiPromptChain(\r\n                        router_chain=router_chain,\r\n                        destination_chains=destination_chains,\r\n                        default_chain=default_chain,\r\n                        verbose=True\r\n                    )\r\n```\r\n\r\nError message:\r\n```\r\nValidationError: 1 validation error for MultiPromptChain\r\ndestination_chains -> test\r\n  Can't instantiate abstract class Chain with abstract methods _call, input_keys, output_keys (type=type_error)\r\n```\r\n\r\n### Expected behavior\r\n\r\nLCEL should work with MultiPromptChain",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12149/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12149/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12147",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12147/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12147/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12147/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12147",
        "id": 1956539711,
        "node_id": "I_kwDOIPDwls50nm0_",
        "number": 12147,
        "title": "Langchain Document schema explodes with FastAPI",
        "user": {
            "login": "FrancescoSaverioZuppichini",
            "id": 15908060,
            "node_id": "MDQ6VXNlcjE1OTA4MDYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/15908060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FrancescoSaverioZuppichini",
            "html_url": "https://github.com/FrancescoSaverioZuppichini",
            "followers_url": "https://api.github.com/users/FrancescoSaverioZuppichini/followers",
            "following_url": "https://api.github.com/users/FrancescoSaverioZuppichini/following{/other_user}",
            "gists_url": "https://api.github.com/users/FrancescoSaverioZuppichini/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FrancescoSaverioZuppichini/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FrancescoSaverioZuppichini/subscriptions",
            "organizations_url": "https://api.github.com/users/FrancescoSaverioZuppichini/orgs",
            "repos_url": "https://api.github.com/users/FrancescoSaverioZuppichini/repos",
            "events_url": "https://api.github.com/users/FrancescoSaverioZuppichini/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FrancescoSaverioZuppichini/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-23T07:35:17Z",
        "updated_at": "2023-10-23T13:17:32Z",
        "closed_at": "2023-10-23T13:17:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nPython 3.11, langchain 0.0.315 and mac\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nCreate a FastAPI endpoint/router\r\n\r\n\r\n```python\r\nfrom fastapi import APIRouter, Response\r\nfrom pydantic import BaseModel\r\nfrom typing import Optional\r\nfrom langchain.schema import Document\r\n\r\nrouter = APIRouter()\r\n\r\n\r\n\r\nclass QueryOut(BaseModel):\r\n    answer: str\r\n    sources: list[Document]\r\n\r\n\r\n@router.post(\"/query\")\r\nasync def get_answer():\r\n    sources = [Document(page_content=\"foo\", metadata={\"baa\": \"baaaa\"})]\r\n    return QueryOut(answer=\"answer\", sources=sources)\r\n\r\n```\r\n\r\nThen call it and boom \r\n\r\n```bash\r\n File \"/Users/FRANCESCO.ZUPPICHINI/Documents/dbi_alphaai_knowledge_bot/.venv/lib/python3.11/site-packages/pydantic/main.py\", line 164, in __init__\r\n    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)\r\nTypeError: BaseModel.validate() takes 2 positional arguments but 3 were given\r\n```\r\n\r\nIs this linked to the fact that langchain is still using pydantic v1? If so, I love you guys but put that 30M to good use \ud83d\ude04 \r\n\r\n### Expected behavior\r\n\r\nShould not explode",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12147/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12147/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12146",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12146/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12146/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12146/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12146",
        "id": 1956449285,
        "node_id": "PR_kwDOIPDwls5dfhpr",
        "number": 12146,
        "title": "10634: Added the capability to inject boto3 client in SagemakerEndpointEmbeddings",
        "user": {
            "login": "vikramshitole",
            "id": 1484349,
            "node_id": "MDQ6VXNlcjE0ODQzNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1484349?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vikramshitole",
            "html_url": "https://github.com/vikramshitole",
            "followers_url": "https://api.github.com/users/vikramshitole/followers",
            "following_url": "https://api.github.com/users/vikramshitole/following{/other_user}",
            "gists_url": "https://api.github.com/users/vikramshitole/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vikramshitole/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vikramshitole/subscriptions",
            "organizations_url": "https://api.github.com/users/vikramshitole/orgs",
            "repos_url": "https://api.github.com/users/vikramshitole/repos",
            "events_url": "https://api.github.com/users/vikramshitole/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vikramshitole/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5959659008,
                "node_id": "LA_kwDOIPDwls8AAAABYzkuAA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20aws",
                "name": "integration: aws",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to Amazon Web Services (AWS) integrations"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-23T06:31:57Z",
        "updated_at": "2023-10-23T19:08:26Z",
        "closed_at": "2023-10-23T19:08:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12146",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12146",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12146.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12146.patch",
            "merged_at": "2023-10-23T19:08:26Z"
        },
        "body": "**Description: Allow to inject boto3 client for Cross account access type of scenarios in using SagemakerEndpointEmbeddings and also updated the documentation for same in the sample notebook**\r\n\r\n**Issue:SagemakerEndpointEmbeddings cross account capability #10634 #10184**\r\n\r\nDependencies: None\r\nTag maintainer:\r\nTwitter handle:lethargicoder\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12146/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12146/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12145",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12145/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12145/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12145/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12145",
        "id": 1956390512,
        "node_id": "PR_kwDOIPDwls5dfU7Q",
        "number": 12145,
        "title": "Fix Typo in CONTRIBUTING.md file",
        "user": {
            "login": "DeepanshuProgrammer",
            "id": 110890939,
            "node_id": "U_kgDOBpwPuw",
            "avatar_url": "https://avatars.githubusercontent.com/u/110890939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DeepanshuProgrammer",
            "html_url": "https://github.com/DeepanshuProgrammer",
            "followers_url": "https://api.github.com/users/DeepanshuProgrammer/followers",
            "following_url": "https://api.github.com/users/DeepanshuProgrammer/following{/other_user}",
            "gists_url": "https://api.github.com/users/DeepanshuProgrammer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DeepanshuProgrammer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DeepanshuProgrammer/subscriptions",
            "organizations_url": "https://api.github.com/users/DeepanshuProgrammer/orgs",
            "repos_url": "https://api.github.com/users/DeepanshuProgrammer/repos",
            "events_url": "https://api.github.com/users/DeepanshuProgrammer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DeepanshuProgrammer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T05:38:35Z",
        "updated_at": "2023-10-23T18:53:04Z",
        "closed_at": "2023-10-23T18:53:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12145",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12145",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12145.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12145.patch",
            "merged_at": "2023-10-23T18:53:03Z"
        },
        "body": "Fix Type & add suitable pronoun in CONTRIBUTING.md file\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12145/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12145/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12144",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12144/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12144/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12144/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12144",
        "id": 1956221942,
        "node_id": "I_kwDOIPDwls50mZP2",
        "number": 12144,
        "title": "How to show images from PDFs, PPT, DOCs documents as part of answer?",
        "user": {
            "login": "Chengyang852",
            "id": 81755002,
            "node_id": "MDQ6VXNlcjgxNzU1MDAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/81755002?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Chengyang852",
            "html_url": "https://github.com/Chengyang852",
            "followers_url": "https://api.github.com/users/Chengyang852/followers",
            "following_url": "https://api.github.com/users/Chengyang852/following{/other_user}",
            "gists_url": "https://api.github.com/users/Chengyang852/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Chengyang852/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Chengyang852/subscriptions",
            "organizations_url": "https://api.github.com/users/Chengyang852/orgs",
            "repos_url": "https://api.github.com/users/Chengyang852/repos",
            "events_url": "https://api.github.com/users/Chengyang852/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Chengyang852/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T02:16:49Z",
        "updated_at": "2023-10-23T02:23:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHello, I have this use-case where there are different types of documents. I can parse documents using document loaders using langchain. But, there are images also in these documents. I want to store them as metadata and if answer generated from a context chunk it show the image also. Please help.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12144/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12144/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12143",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12143/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12143/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12143/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12143",
        "id": 1956153788,
        "node_id": "I_kwDOIPDwls50mIm8",
        "number": 12143,
        "title": "AttributeError: partially initialized module 'arxiv' has no attribute 'Search' (most likely due to a circular import)",
        "user": {
            "login": "chiang-yuan",
            "id": 41962462,
            "node_id": "MDQ6VXNlcjQxOTYyNDYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/41962462?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chiang-yuan",
            "html_url": "https://github.com/chiang-yuan",
            "followers_url": "https://api.github.com/users/chiang-yuan/followers",
            "following_url": "https://api.github.com/users/chiang-yuan/following{/other_user}",
            "gists_url": "https://api.github.com/users/chiang-yuan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chiang-yuan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chiang-yuan/subscriptions",
            "organizations_url": "https://api.github.com/users/chiang-yuan/orgs",
            "repos_url": "https://api.github.com/users/chiang-yuan/repos",
            "events_url": "https://api.github.com/users/chiang-yuan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chiang-yuan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-23T01:04:04Z",
        "updated_at": "2023-12-06T02:37:31Z",
        "closed_at": "2023-10-25T15:54:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nversion:\r\n- langchain-0.0.320\r\n- py311\n\n### Who can help?\n\n@eyurtsev \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nRunning the [example code](https://python.langchain.com/docs/integrations/retrievers/arxiv)\r\n\r\n```python\r\nfrom langchain.retrievers import ArxivRetriever\r\n\r\nretriever = ArxivRetriever(load_max_docs=2)\r\n\r\ndocs = retriever.get_relevant_documents(query=\"1605.08386\")\r\n```\r\n\r\nThe above code gives the error: \r\n\r\n`AttributeError: partially initialized module 'arxiv' has no attribute 'Search' (most likely due to a circular import)`\r\n\n\n### Expected behavior\n\n\r\nShould print out \r\n```\r\n    {'Published': '2016-05-26',\r\n     'Title': 'Heat-bath random walks with Markov bases',\r\n     'Authors': 'Caprice Stanley, Tobias Windisch',\r\n     'Summary': 'Graphs on lattice points are studied whose edges come from a finite set of\\nallowed moves of arbitrary length. We show that the diameter of these graphs on\\nfibers of a fixed integer matrix can be bounded from above by a constant. We\\nthen study the mixing behaviour of heat-bath random walks on these graphs. We\\nalso state explicit conditions on the set of moves so that the heat-bath random\\nwalk, a generalization of the Glauber dynamics, is an expander in fixed\\ndimension.'}\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12143/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12143/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12142",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12142/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12142/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12142/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12142",
        "id": 1956147176,
        "node_id": "I_kwDOIPDwls50mG_o",
        "number": 12142,
        "title": "latest version langchain locks peer dependency: \"googleapis\" version to 126.0.1 ",
        "user": {
            "login": "OliverwengFiltered",
            "id": 28814939,
            "node_id": "MDQ6VXNlcjI4ODE0OTM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/28814939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/OliverwengFiltered",
            "html_url": "https://github.com/OliverwengFiltered",
            "followers_url": "https://api.github.com/users/OliverwengFiltered/followers",
            "following_url": "https://api.github.com/users/OliverwengFiltered/following{/other_user}",
            "gists_url": "https://api.github.com/users/OliverwengFiltered/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/OliverwengFiltered/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/OliverwengFiltered/subscriptions",
            "organizations_url": "https://api.github.com/users/OliverwengFiltered/orgs",
            "repos_url": "https://api.github.com/users/OliverwengFiltered/repos",
            "events_url": "https://api.github.com/users/OliverwengFiltered/events{/privacy}",
            "received_events_url": "https://api.github.com/users/OliverwengFiltered/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T00:55:32Z",
        "updated_at": "2023-10-23T01:01:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlatest version langchain locks peer dependency: \"googleapis\" version to 126.0.1, wondering why it has to be googleapis v126.0.1. it introduces tech debts.\r\n\r\nPlease fix the peer dep version for `googleapis` if there is no specific reasons.\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nwhen try to install both latest version langchain and googleapis latest version in nodejs via npm.\n\n### Expected behavior\n\nlangchain shouldn't prevent latest googleapis to be installed.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12142/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12142/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12141",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12141/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12141/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12141/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12141",
        "id": 1956142284,
        "node_id": "PR_kwDOIPDwls5defCQ",
        "number": 12141,
        "title": "Fix Pickle Error",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-23T00:48:48Z",
        "updated_at": "2023-10-23T15:22:48Z",
        "closed_at": "2023-10-23T15:22:47Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12141",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12141",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12141.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12141.patch",
            "merged_at": "2023-10-23T15:22:47Z"
        },
        "body": "If non-pickleable objects (like locks) get passed to the tracing callback, they'll fail in the deepcopy. Fallback to a shallow copy in these instances .",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12141/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12141/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12140",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12140/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12140/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12140/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12140",
        "id": 1956110907,
        "node_id": "PR_kwDOIPDwls5deYHI",
        "number": 12140,
        "title": "updated API Reference `langchain.agents` functions table",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "baskaryan",
                "id": 22008038,
                "node_id": "MDQ6VXNlcjIyMDA4MDM4",
                "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/baskaryan",
                "html_url": "https://github.com/baskaryan",
                "followers_url": "https://api.github.com/users/baskaryan/followers",
                "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
                "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
                "organizations_url": "https://api.github.com/users/baskaryan/orgs",
                "repos_url": "https://api.github.com/users/baskaryan/repos",
                "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/baskaryan/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-10-23T00:07:03Z",
        "updated_at": "2023-11-15T02:02:18Z",
        "closed_at": "2023-11-15T01:22:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12140",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12140",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12140.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12140.patch",
            "merged_at": null
        },
        "body": "The `agents.agent_toolkits.conversational_retrieval.openai_functions.create_conversational_retrieval_agent` is a too long name.\r\nIt makes the ['agents/functions' table](https://api.python.langchain.com/en/latest/api_reference.html#id2) inside API Reference unreadable.\r\nI've hidden this function from the API Reference.\r\nNote: This is a temporary solution! There should be more elegant solution.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12140/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12140/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12139",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12139/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12139/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12139/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12139",
        "id": 1956106675,
        "node_id": "PR_kwDOIPDwls5deXPr",
        "number": 12139,
        "title": "Include Parent Run ID",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-22T23:55:57Z",
        "updated_at": "2023-10-23T00:19:12Z",
        "closed_at": "2023-10-23T00:19:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12139",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12139",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12139.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12139.patch",
            "merged_at": "2023-10-23T00:19:11Z"
        },
        "body": "If you set local callbacks",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12139/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12139/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12138",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12138/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12138/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12138/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12138",
        "id": 1956004892,
        "node_id": "I_kwDOIPDwls50lkQc",
        "number": 12138,
        "title": "DOC: Example from Custom Tool documentation fails",
        "user": {
            "login": "decentropy",
            "id": 7456235,
            "node_id": "MDQ6VXNlcjc0NTYyMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7456235?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/decentropy",
            "html_url": "https://github.com/decentropy",
            "followers_url": "https://api.github.com/users/decentropy/followers",
            "following_url": "https://api.github.com/users/decentropy/following{/other_user}",
            "gists_url": "https://api.github.com/users/decentropy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/decentropy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/decentropy/subscriptions",
            "organizations_url": "https://api.github.com/users/decentropy/orgs",
            "repos_url": "https://api.github.com/users/decentropy/repos",
            "events_url": "https://api.github.com/users/decentropy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/decentropy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-22T18:25:42Z",
        "updated_at": "2023-10-22T18:48:16Z",
        "closed_at": "2023-10-22T18:48:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\r\n\r\nOn this page\r\n\r\nThis example:\r\n```\r\nclass SearchInput(BaseModel):\r\n    query: str = Field(description=\"should be a search query\")\r\n\r\n\r\n@tool(\"search\", return_direct=True, args_schema=SearchInput)\r\ndef search_api(query: str) -> str:\r\n    \"\"\"Searches the API for the query.\"\"\"\r\n    return \"Results\"\r\n\r\nsearch_api\r\n```\r\n\r\nFails with:\r\nValidationError: 1 validation error for StructuredTool\r\nargs_schema\r\n  subclass of BaseModel expected (type=type_error.subclass; expected_class=BaseModel)\r\n\r\n### Idea or request for content:\r\n\r\nnothing missing, but example fails\r\nName: langchain\r\nVersion: 0.0.311",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12138/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12138/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12137",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12137/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12137/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12137/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12137",
        "id": 1956003058,
        "node_id": "PR_kwDOIPDwls5deC3d",
        "number": 12137,
        "title": "Fix bug where types were lost when calling with_cconfig or bind",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-22T18:20:22Z",
        "updated_at": "2023-10-22T18:26:14Z",
        "closed_at": "2023-10-22T18:26:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12137",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12137",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12137.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12137.patch",
            "merged_at": "2023-10-22T18:26:13Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12137/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12137/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12136",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12136/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12136/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12136/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12136",
        "id": 1956000065,
        "node_id": "PR_kwDOIPDwls5deCRi",
        "number": 12136,
        "title": "Improved readability of Docs",
        "user": {
            "login": "Sanyam-2026",
            "id": 99472914,
            "node_id": "U_kgDOBe3WEg",
            "avatar_url": "https://avatars.githubusercontent.com/u/99472914?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sanyam-2026",
            "html_url": "https://github.com/Sanyam-2026",
            "followers_url": "https://api.github.com/users/Sanyam-2026/followers",
            "following_url": "https://api.github.com/users/Sanyam-2026/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sanyam-2026/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sanyam-2026/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sanyam-2026/subscriptions",
            "organizations_url": "https://api.github.com/users/Sanyam-2026/orgs",
            "repos_url": "https://api.github.com/users/Sanyam-2026/repos",
            "events_url": "https://api.github.com/users/Sanyam-2026/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sanyam-2026/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-22T18:11:47Z",
        "updated_at": "2023-10-23T00:16:31Z",
        "closed_at": "2023-10-23T00:16:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12136",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12136",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12136.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12136.patch",
            "merged_at": "2023-10-23T00:16:31Z"
        },
        "body": " \r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n improved grammar and readability of DOCS\r\n \r\n@hwchase17 \r\n \r\n \r\n \r\n ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12136/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12136/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12135",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12135/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12135/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12135/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12135",
        "id": 1955991193,
        "node_id": "PR_kwDOIPDwls5deAmR",
        "number": 12135,
        "title": "Add how-to guide on runnable generators",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-22T17:45:58Z",
        "updated_at": "2023-10-22T18:02:18Z",
        "closed_at": "2023-10-22T18:02:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12135",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12135",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12135.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12135.patch",
            "merged_at": "2023-10-22T18:02:17Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12135/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12135/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12134",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12134/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12134/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12134/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12134",
        "id": 1955979036,
        "node_id": "PR_kwDOIPDwls5dd-PR",
        "number": 12134,
        "title": "Update default recursion_limit, update docs",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-22T17:09:01Z",
        "updated_at": "2023-10-23T15:29:18Z",
        "closed_at": "2023-10-23T15:29:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12134",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12134",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12134.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12134.patch",
            "merged_at": "2023-10-23T15:29:17Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12134/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12134/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12133",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12133/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12133/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12133/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12133",
        "id": 1955978046,
        "node_id": "PR_kwDOIPDwls5dd-C7",
        "number": 12133,
        "title": "Remove GetLocal, PutLocal",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-22T17:06:12Z",
        "updated_at": "2023-10-24T09:16:47Z",
        "closed_at": "2023-10-24T09:16:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12133",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12133",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12133.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12133.patch",
            "merged_at": "2023-10-24T09:16:46Z"
        },
        "body": "Do you agree?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12133/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12133/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12132",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12132/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12132/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12132/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12132",
        "id": 1955972383,
        "node_id": "PR_kwDOIPDwls5dd893",
        "number": 12132,
        "title": "Fix type hint for older py versions",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-22T16:49:59Z",
        "updated_at": "2023-10-22T17:01:10Z",
        "closed_at": "2023-10-22T17:01:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12132",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12132",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12132.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12132.patch",
            "merged_at": "2023-10-22T17:01:10Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12132/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12132/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12131",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12131/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12131/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12131/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12131",
        "id": 1955971343,
        "node_id": "PR_kwDOIPDwls5dd8w_",
        "number": 12131,
        "title": "Add optional config arg to RunnablePassthrough func arg",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-22T16:47:01Z",
        "updated_at": "2023-10-22T18:57:17Z",
        "closed_at": "2023-10-22T18:57:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12131",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12131",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12131.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12131.patch",
            "merged_at": "2023-10-22T18:57:16Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12131/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12131/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12128",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12128/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12128/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12128/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12128",
        "id": 1955787503,
        "node_id": "PR_kwDOIPDwls5ddY6v",
        "number": 12128,
        "title": "Fix typos",
        "user": {
            "login": "omahs",
            "id": 73983677,
            "node_id": "MDQ6VXNlcjczOTgzNjc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/73983677?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omahs",
            "html_url": "https://github.com/omahs",
            "followers_url": "https://api.github.com/users/omahs/followers",
            "following_url": "https://api.github.com/users/omahs/following{/other_user}",
            "gists_url": "https://api.github.com/users/omahs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omahs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omahs/subscriptions",
            "organizations_url": "https://api.github.com/users/omahs/orgs",
            "repos_url": "https://api.github.com/users/omahs/repos",
            "events_url": "https://api.github.com/users/omahs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omahs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-22T06:58:49Z",
        "updated_at": "2023-10-23T00:16:04Z",
        "closed_at": "2023-10-23T00:16:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12128",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12128",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12128.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12128.patch",
            "merged_at": "2023-10-23T00:16:04Z"
        },
        "body": "Fix typos",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12128/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12128/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12127",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12127/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12127/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12127/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12127",
        "id": 1955775678,
        "node_id": "I_kwDOIPDwls50ksS-",
        "number": 12127,
        "title": "DOC: Issue Connecting to Docusaurus in Local Container Environment",
        "user": {
            "login": "gitkado",
            "id": 8664604,
            "node_id": "MDQ6VXNlcjg2NjQ2MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8664604?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gitkado",
            "html_url": "https://github.com/gitkado",
            "followers_url": "https://api.github.com/users/gitkado/followers",
            "following_url": "https://api.github.com/users/gitkado/following{/other_user}",
            "gists_url": "https://api.github.com/users/gitkado/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gitkado/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gitkado/subscriptions",
            "organizations_url": "https://api.github.com/users/gitkado/orgs",
            "repos_url": "https://api.github.com/users/gitkado/repos",
            "events_url": "https://api.github.com/users/gitkado/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gitkado/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-22T06:06:45Z",
        "updated_at": "2023-10-22T06:08:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\r\n\r\nWhen starting Docusaurus in a local container environment using the `make docs_build` command, it runs at `localhost:3000`, but a connection from the host machine is not possible.\r\nThe container has both `poetry` and `yarn` installed.\r\nEven though port 3000 is forwarded to the host, the connection is not established.\r\n\r\nhttps://github.com/langchain-ai/langchain/blob/master/docs/package.json#L7\r\n\r\nI am proficient with Python but struggle with React, which might be influencing my troubleshooting.\r\nThank you!!\r\n\r\n### Idea or request for content:\r\n\r\nBy adding the `--host 0.0.0.0` option to the `start` command in `package.json`, the issue might be resolved.\r\n\r\n```diff\r\n-\"start\": \"rm -rf ./docs/api && docusaurus start\",\r\n+\"start\": \"rm -rf ./docs/api && docusaurus start --host 0.0.0.0\",\r\n```\r\n- With this change, it would be possible to access the port that's being forwarded from within the container to the host environment.\r\n- However, using the `--host 0.0.0.0` option can have security implications, so caution is advised especially in production environments.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12127/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12127/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12126",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12126/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12126/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12126/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12126",
        "id": 1955770497,
        "node_id": "PR_kwDOIPDwls5ddVqL",
        "number": 12126,
        "title": "Fixed hardcoded \"vector\" and replaced with vector_query_field variable",
        "user": {
            "login": "shilongdai",
            "id": 10383669,
            "node_id": "MDQ6VXNlcjEwMzgzNjY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/10383669?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shilongdai",
            "html_url": "https://github.com/shilongdai",
            "followers_url": "https://api.github.com/users/shilongdai/followers",
            "following_url": "https://api.github.com/users/shilongdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/shilongdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shilongdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shilongdai/subscriptions",
            "organizations_url": "https://api.github.com/users/shilongdai/orgs",
            "repos_url": "https://api.github.com/users/shilongdai/repos",
            "events_url": "https://api.github.com/users/shilongdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shilongdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 6077048506,
                "node_id": "LA_kwDOIPDwls8AAAABajhmug",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20elasticsearch",
                "name": "integration: elasticsearch",
                "color": "DAB5EC",
                "default": false,
                "description": "Related to elastic/elasticsearch integrations"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-22T05:41:08Z",
        "updated_at": "2023-10-23T19:08:55Z",
        "closed_at": "2023-10-23T19:08:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12126",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12126",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12126.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12126.patch",
            "merged_at": "2023-10-23T19:08:55Z"
        },
        "body": "  - **Description:** In the max_marginal_relevance_search function of the ElasticsearchStore vector store, the name of the field corresponding to the vector embedding of the document is hard coded in the delete statement that drops the field from the document metadata. This results in an exception if the vector embedding field is customized. This PR changes the hard-coded \"vector\" into the vector_query_field variable.\r\n  - **Issue:** None\r\n  - **Dependencies:** None\r\n  - **Tag maintainer:** @hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12126/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12126/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12125",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12125/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12125/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12125/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12125",
        "id": 1955757359,
        "node_id": "I_kwDOIPDwls50kn0v",
        "number": 12125,
        "title": "Is there any loader for Microsoft OneNote like EverNoteLoader or ObsidianLoader",
        "user": {
            "login": "mail2mhossain",
            "id": 6905164,
            "node_id": "MDQ6VXNlcjY5MDUxNjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6905164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mail2mhossain",
            "html_url": "https://github.com/mail2mhossain",
            "followers_url": "https://api.github.com/users/mail2mhossain/followers",
            "following_url": "https://api.github.com/users/mail2mhossain/following{/other_user}",
            "gists_url": "https://api.github.com/users/mail2mhossain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mail2mhossain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mail2mhossain/subscriptions",
            "organizations_url": "https://api.github.com/users/mail2mhossain/orgs",
            "repos_url": "https://api.github.com/users/mail2mhossain/repos",
            "events_url": "https://api.github.com/users/mail2mhossain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mail2mhossain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-22T04:36:08Z",
        "updated_at": "2023-11-04T15:15:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nMicrosoft OneNote loader like EverNoteLoader or ObsidianLoader\n\n### Motivation\n\nN/A\n\n### Your contribution\n\nN/A",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12125/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12125/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12124",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12124/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12124/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12124/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12124",
        "id": 1955756498,
        "node_id": "I_kwDOIPDwls50knnS",
        "number": 12124,
        "title": "Issue: `VectorDBQA` is a better chain than `RetrievalQA` when it comes to streaming model response",
        "user": {
            "login": "eRuaro",
            "id": 69240261,
            "node_id": "MDQ6VXNlcjY5MjQwMjYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/69240261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eRuaro",
            "html_url": "https://github.com/eRuaro",
            "followers_url": "https://api.github.com/users/eRuaro/followers",
            "following_url": "https://api.github.com/users/eRuaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/eRuaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eRuaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eRuaro/subscriptions",
            "organizations_url": "https://api.github.com/users/eRuaro/orgs",
            "repos_url": "https://api.github.com/users/eRuaro/repos",
            "events_url": "https://api.github.com/users/eRuaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eRuaro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-22T04:31:46Z",
        "updated_at": "2023-10-22T04:38:05Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI found that using a `RetrievalQA` for streaming outputs gibberish response. For example, using a `RetrievalQA` with code below on the `state_of_the_union.txt` example:\r\n```\r\ndoc_chain = load_qa_chain(\r\n    llm=ChatOpenAI(\r\n        streaming=True,\r\n        openai_api_key=api_key,\r\n        callbacks=[StreamingStdOutCallbackHandler()]\r\n    ),\r\n    chain_type=\"map_reduce\",\r\n    verbose=False,\r\n)\r\n\r\nretrieval_qa = RetrievalQA(\r\n    combine_documents_chain=doc_chain,\r\n    retriever=retriever,\r\n)\r\n``` \r\n\r\nWith this call: `retrieval_qa.run(\"What did the president say about Ketanji Brown Jackson\")` outputs this streamed response:\r\n```\r\n\"And I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation\u2019s top legal minds, who will continue Justice Breyer\u2019s legacy of excellence.\"\"And I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation\u2019s top legal minds, who will continue Justice Breyer\u2019s legacy of excellence.\"\"And I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation\u2019s top legal minds, who will continue Justice Breyer\u2019s legacy of excellence.\"The given portion of the document does not mention anything about what the president said about Ketanji Brown Jackson.The given portion of the document does not provide any information about what the president said about Ketanji Brown Jackson.\r\n```\r\n\r\nWhile using `VectorDBChain`:\r\n```\r\nqa = VectorDBQA.from_chain_type(\r\n    llm=ChatOpenAI(\r\n        streaming=True,\r\n        openai_api_key=api_key,\r\n        callbacks=[StreamingStdOutCallbackHandler()]\r\n    ), \r\n    chain_type=\"map_reduce\", \r\n    vectorstore=db\r\n)\r\n```\r\n\r\nOutputs this:\r\n```\r\nThe President said that he nominated Circuit Court of Appeals Judge Ketanji Brown Jackson, who is one of our nation's top legal minds and will continue Justice Breyer's legacy of excellence.\r\n```\r\n\r\nIs there any reason as to why the `VectorDBQA` chains have been deprecated in favour of the `RetrievalQA` chains? At first I thought the gibbering streaming was related to using PGVector, but I even tried it with Chroma and am having the same issue.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12124/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12124/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12123",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12123/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12123/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12123/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12123",
        "id": 1955751254,
        "node_id": "PR_kwDOIPDwls5ddR8_",
        "number": 12123,
        "title": "Fix bug in doctran document transformers",
        "user": {
            "login": "liaokongVFX",
            "id": 13622183,
            "node_id": "MDQ6VXNlcjEzNjIyMTgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/13622183?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liaokongVFX",
            "html_url": "https://github.com/liaokongVFX",
            "followers_url": "https://api.github.com/users/liaokongVFX/followers",
            "following_url": "https://api.github.com/users/liaokongVFX/following{/other_user}",
            "gists_url": "https://api.github.com/users/liaokongVFX/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liaokongVFX/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liaokongVFX/subscriptions",
            "organizations_url": "https://api.github.com/users/liaokongVFX/orgs",
            "repos_url": "https://api.github.com/users/liaokongVFX/repos",
            "events_url": "https://api.github.com/users/liaokongVFX/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liaokongVFX/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-22T04:04:48Z",
        "updated_at": "2023-11-28T14:38:54Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12123",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12123",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12123.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12123.patch",
            "merged_at": null
        },
        "body": "The latest doctran library no longer supports asynchrony.\r\n\r\nThe doctran library has removed support for asynchrony during this modification.\r\nhttps://github.com/psychic-api/doctran/commit/22ec68d1fefaf3a141083489452ed0f82cb03a88",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12123/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12123/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12122",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12122/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12122/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12122/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12122",
        "id": 1955700825,
        "node_id": "PR_kwDOIPDwls5ddIRX",
        "number": 12122,
        "title": "a bug fix for sagemakerendpoint streaming",
        "user": {
            "login": "lyoh001",
            "id": 45280343,
            "node_id": "MDQ6VXNlcjQ1MjgwMzQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/45280343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lyoh001",
            "html_url": "https://github.com/lyoh001",
            "followers_url": "https://api.github.com/users/lyoh001/followers",
            "following_url": "https://api.github.com/users/lyoh001/following{/other_user}",
            "gists_url": "https://api.github.com/users/lyoh001/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lyoh001/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lyoh001/subscriptions",
            "organizations_url": "https://api.github.com/users/lyoh001/orgs",
            "repos_url": "https://api.github.com/users/lyoh001/repos",
            "events_url": "https://api.github.com/users/lyoh001/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lyoh001/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 5959659008,
                "node_id": "LA_kwDOIPDwls8AAAABYzkuAA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20aws",
                "name": "integration: aws",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to Amazon Web Services (AWS) integrations"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-21T23:52:11Z",
        "updated_at": "2023-10-27T02:14:15Z",
        "closed_at": "2023-10-26T05:36:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12122",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12122",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12122.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12122.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a bug fix for sagemaker endpoint streaming, \r\n  - **Issue:** the issue # it fixed _call function so that it can now stream from TGI container as well and added _acall stream function for both LMI or TGI containers,\r\n  - **Dependencies:** no dependencies,\r\n  - **Tag maintainer:** @3coins ,\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12122/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12122/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12121",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12121/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12121/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12121/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12121",
        "id": 1955684637,
        "node_id": "PR_kwDOIPDwls5ddFQB",
        "number": 12121,
        "title": "add rag fusion notebook",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-21T22:27:27Z",
        "updated_at": "2023-10-21T22:37:12Z",
        "closed_at": "2023-10-21T22:37:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12121",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12121",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12121.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12121.patch",
            "merged_at": "2023-10-21T22:37:11Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12121/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12121/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12120",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12120/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12120/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12120/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12120",
        "id": 1955656927,
        "node_id": "I_kwDOIPDwls50kPTf",
        "number": 12120,
        "title": "Feature: Steam game recommendation tool",
        "user": {
            "login": "JohnY2002",
            "id": 94477598,
            "node_id": "U_kgDOBaGdHg",
            "avatar_url": "https://avatars.githubusercontent.com/u/94477598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JohnY2002",
            "html_url": "https://github.com/JohnY2002",
            "followers_url": "https://api.github.com/users/JohnY2002/followers",
            "following_url": "https://api.github.com/users/JohnY2002/following{/other_user}",
            "gists_url": "https://api.github.com/users/JohnY2002/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JohnY2002/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JohnY2002/subscriptions",
            "organizations_url": "https://api.github.com/users/JohnY2002/orgs",
            "repos_url": "https://api.github.com/users/JohnY2002/repos",
            "events_url": "https://api.github.com/users/JohnY2002/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JohnY2002/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-10-21T20:44:10Z",
        "updated_at": "2023-11-29T04:08:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nFeature request to Integrate a new Langchain tool that make recommandtions on steam games based on user's Steam ID and provide game information based on given Steam game name.\r\n\r\n### Motivation\r\n\r\nWe recognize the current challenges users face when discovering games on Steam\u2014cluttered search results and lack of tailored information. To revolutionize this experience, we propose integrating Langchain, offering personalized game recommendations based on a user's Steam ID and comprehensive game details based on specific titles.\r\n\r\nLangchain's algorithm will provide personalized game suggestions aligned with users' preferences, eliminating irrelevant options. It'll also furnish detailed game insights\u2014prices, discounts, popularity, and latest news\u2014for informed decision-making.\r\n\r\nThis integration aims to streamline game discovery, enhance user satisfaction, and foster a vibrant gaming community on Steam. We're eager to discuss this enhancement and its potential to transform the Steam experience.\r\n\r\n\r\n### Your contribution\r\n\r\nWe are a group of 4 looking to contribute to Langchain as a course project and will be creating a PR for this issue in mid November.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12120/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12120/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12119",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12119/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12119/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12119/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12119",
        "id": 1955654319,
        "node_id": "PR_kwDOIPDwls5dc_gb",
        "number": 12119,
        "title": "fix up notebook",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-21T20:33:35Z",
        "updated_at": "2023-10-21T21:06:17Z",
        "closed_at": "2023-10-21T21:06:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12119",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12119",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12119.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12119.patch",
            "merged_at": "2023-10-21T21:06:16Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12119/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12119/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12118",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12118/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12118/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12118/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12118",
        "id": 1955647569,
        "node_id": "I_kwDOIPDwls50kNBR",
        "number": 12118,
        "title": "ConversationalRetrievalChain cannot return source documents when using ConversationBufferWindowMemory",
        "user": {
            "login": "bobthechemist",
            "id": 5089843,
            "node_id": "MDQ6VXNlcjUwODk4NDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5089843?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bobthechemist",
            "html_url": "https://github.com/bobthechemist",
            "followers_url": "https://api.github.com/users/bobthechemist/followers",
            "following_url": "https://api.github.com/users/bobthechemist/following{/other_user}",
            "gists_url": "https://api.github.com/users/bobthechemist/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bobthechemist/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bobthechemist/subscriptions",
            "organizations_url": "https://api.github.com/users/bobthechemist/orgs",
            "repos_url": "https://api.github.com/users/bobthechemist/repos",
            "events_url": "https://api.github.com/users/bobthechemist/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bobthechemist/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-21T20:06:18Z",
        "updated_at": "2023-10-22T00:11:00Z",
        "closed_at": "2023-10-22T00:11:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain 0.0.285, python 3.11.5, Windows 11\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [X] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n``` python\r\nfrom langchain.embeddings import HuggingFaceInstructEmbeddings\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.document_loaders import TextLoader\r\nfrom langchain.memory import ConversationBufferMemory\r\nfrom mysecrets import secrets\r\n\r\n\r\nloader = TextLoader(\"./sotu.txt\")\r\ndocuments = loader.load()\r\n\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\ndocuments = text_splitter.split_documents(documents)\r\nmodel_name = \"hkunlp/instructor-large\"\r\nmodel_kwargs = {'device': 'cpu'}\r\nencode_kwargs = {'normalize_embeddings': True}\r\nembed_instruction = \"Represent the document for summary\"\r\n\r\nembedding_function =  HuggingFaceInstructEmbeddings(\r\n    model_name=model_name,\r\n    model_kwargs=model_kwargs,\r\n    encode_kwargs=encode_kwargs,\r\n    embed_instruction = embed_instruction\r\n)\r\n\r\nvectorstore = Chroma.from_documents(documents, embedding_function)\r\n\r\n\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\nllm = OpenAI(openai_api_key=secrets[\"OPENAI-APIKEY\"],temperature=0)\r\nqa = ConversationalRetrievalChain.from_llm(llm=llm, retriever=vectorstore.as_retriever(), memory=memory, return_source_documents=True)\r\n\r\nquery = \"What did the president say about Ketanji Brown Jackson\"\r\nresult = qa({\"question\": query})\r\n```\n\n### Expected behavior\n\nWhen `return_source_documents` is set to False, code runs as intended. When ConversationalRetrievalChain uses the default value for `memory`, code runs as intended. If ConversationalRetrievalChain is used with memory and source documents are to be returned, the code fails since chat_memory.py (https://github.com/langchain-ai/langchain/blame/master/libs/langchain/langchain/memory/chat_memory.py) is expecting only one key.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12118/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12118/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12117",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12117/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12117/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12117/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12117",
        "id": 1955638250,
        "node_id": "I_kwDOIPDwls50kKvq",
        "number": 12117,
        "title": "Architecture: Decouple Configuration from Inheritance for better extensibility",
        "user": {
            "login": "eyadgaran",
            "id": 13204071,
            "node_id": "MDQ6VXNlcjEzMjA0MDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/13204071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyadgaran",
            "html_url": "https://github.com/eyadgaran",
            "followers_url": "https://api.github.com/users/eyadgaran/followers",
            "following_url": "https://api.github.com/users/eyadgaran/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyadgaran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyadgaran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyadgaran/subscriptions",
            "organizations_url": "https://api.github.com/users/eyadgaran/orgs",
            "repos_url": "https://api.github.com/users/eyadgaran/repos",
            "events_url": "https://api.github.com/users/eyadgaran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyadgaran/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-21T19:33:24Z",
        "updated_at": "2023-10-21T19:35:55Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThere seems to be a conflation between configuration code and inheritance trees that make it nearly impossible to extend langchain functionality without recreating entire class inheritance. I ran into this almost immediately when trying to customize agents and executors to my application needs, but also take advantage of the pre-assembled styles (e.g. Zero-Shot react). I had to recreate my style of zero shot executor and agent by copying the parameters from the subclasses into my forked instance of the bases.\r\n\r\nMy proposal is to decouple these two concepts and have a single inheritance tree for functionality (e.g. agents, chains) and a separate notion of a \u201cconfig\u201d class that can hold the parameterization for an object. The factory methods on the core classes can then accept a config parameter to create an instance with the desired parameterization. This enables extension in two dimensions - any core object (agent, chain, etc) x any configuration. Furthermore new configurations can easily be created by end users or even extensions of existing ones (maybe you want to swap out one parameter from a predefined config without copy pasting the whole code).\n\n### Motivation\n\nArchitectural improvement and future extensibility of the framework\n\n### Your contribution\n\nPR forthcoming with a POC when I have some time to abstract what I did for my projects into the langchain source but wanted to seed this for discussion!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12117/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12117/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12116",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12116/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12116/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12116/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12116",
        "id": 1955627328,
        "node_id": "I_kwDOIPDwls50kIFA",
        "number": 12116,
        "title": "SendGrid API Integration For Enhanced Email Communication",
        "user": {
            "login": "SauhaardW",
            "id": 51324450,
            "node_id": "MDQ6VXNlcjUxMzI0NDUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/51324450?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SauhaardW",
            "html_url": "https://github.com/SauhaardW",
            "followers_url": "https://api.github.com/users/SauhaardW/followers",
            "following_url": "https://api.github.com/users/SauhaardW/following{/other_user}",
            "gists_url": "https://api.github.com/users/SauhaardW/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SauhaardW/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SauhaardW/subscriptions",
            "organizations_url": "https://api.github.com/users/SauhaardW/orgs",
            "repos_url": "https://api.github.com/users/SauhaardW/repos",
            "events_url": "https://api.github.com/users/SauhaardW/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SauhaardW/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-21T19:00:04Z",
        "updated_at": "2023-10-21T19:02:18Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nFeature request to integrate the SendGrid API into Langchain for enhanced email communication and notifications.\r\n\r\n**Relevant links:**\r\n1. [SendGrid API Documentation](https://sendgrid.com/docs/API_Reference/index.html): The official documentation for the SendGrid API, offering comprehensive information on how to use the API for sending emails and managing email communication.\r\n2. [SendGrid GitHub Repository](https://github.com/sendgrid/sendgrid-python): The GitHub repository for SendGrid's official Python library, which can be utilized for API integration.\n\n### Motivation\n\nLangchain is committed to offering a seamless platform for language and communication-related tools. By integrating the SendGrid API, we aim to bring advanced email communication capabilities to the platform, enhancing its utility and user experience.\r\n\r\nSendGrid is a renowned email platform that provides a reliable and efficient way to send, receive, and manage emails. By incorporating the SendGrid API into Langchain, we enable users to send emails, manage notifications, and enhance their communication within the platform.\r\n\r\nOur goal is to provide Langchain users with a feature-rich email system that allows them to send notifications, updates, and alerts directly from Langchain. This integration will streamline communication, offering users a seamless experience and the ability to keep stakeholders informed and engaged through email.\r\n\r\nIn summary, the SendGrid API integration project is designed to extend Langchain's capabilities by incorporating a powerful email communication tool. This will help users effectively manage email notifications and stay connected with stakeholders within the platform.\n\n### Your contribution\n\nWe are 4 University of Toronto students and are very interested in contributing to Langchain for a course project. We will be\r\ncreating a PR that implements this feature sometime in mid November.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12116/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12116/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12115",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12115/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12115/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12115/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12115",
        "id": 1955624167,
        "node_id": "I_kwDOIPDwls50kHTn",
        "number": 12115,
        "title": "Stack Exchange API Integration",
        "user": {
            "login": "SauhaardW",
            "id": 51324450,
            "node_id": "MDQ6VXNlcjUxMzI0NDUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/51324450?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SauhaardW",
            "html_url": "https://github.com/SauhaardW",
            "followers_url": "https://api.github.com/users/SauhaardW/followers",
            "following_url": "https://api.github.com/users/SauhaardW/following{/other_user}",
            "gists_url": "https://api.github.com/users/SauhaardW/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SauhaardW/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SauhaardW/subscriptions",
            "organizations_url": "https://api.github.com/users/SauhaardW/orgs",
            "repos_url": "https://api.github.com/users/SauhaardW/repos",
            "events_url": "https://api.github.com/users/SauhaardW/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SauhaardW/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-21T18:49:17Z",
        "updated_at": "2023-10-21T18:51:49Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nRequest to Integrate Stack Exchange API into Langchain for enhanced information access and interaction.\r\n\r\n**Relevant links:**\r\n1. **Stack Exchange API Documentation**: The official documentation for the Stack Exchange API, providing detailed information on how to interact with the API and retrieve data.\r\n[Stack Exchange API Documentation](https://api.stackexchange.com/docs)\r\n2. **Stack Exchange API Client GitHub Repository**: Community-supported libraries or tools that interact with the API.\r\n[Stack Exchange API Client GitHub Repository](https://github.com/benatespina/StackExchangeApiClient)\n\n### Motivation\n\nLangchain aims to provide a comprehensive and seamless platform for accessing and interacting with a wide array of linguistic and language-related resources. In this context, integrating the Stack Exchange API would greatly enhance the utility of the platform.\r\n\r\nStack Exchange hosts a plethora of specialized communities, each dedicated to specific domains of knowledge and expertise. These communities generate valuable content in the form of questions, answers, and discussions. By integrating the Stack Exchange API into Langchain, we can enable users to access this wealth of information directly from within the platform.\r\n\r\nWhat we aim to provide is a convenient gateway for Langchain users to explore Stack Exchange communities, search for relevant questions and answers, and actively participate in discussions. This integration would not only simplify the process of finding authoritative information on various topics but also facilitate direct engagement with experts and enthusiasts in their respective fields.\r\n\r\nIn summary, our Stack Exchange API integration project is designed to enrich the Langchain experience by offering a direct link to the vast knowledge repositories of Stack Exchange communities. It will empower users to seamlessly navigate between these platforms, harnessing the collective wisdom of these communities for their linguistic and language-related endeavors.\r\n\n\n### Your contribution\n\nWe are 4 University of Toronto students and are very interested in contributing to Langchain for a course project. We will be \r\ncreating a PR that implements this feature sometime in mid November.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12115/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12115/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12114",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12114/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12114/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12114/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12114",
        "id": 1955586441,
        "node_id": "PR_kwDOIPDwls5dcyQF",
        "number": 12114,
        "title": "add missing init files",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-21T17:17:19Z",
        "updated_at": "2023-10-21T17:25:51Z",
        "closed_at": "2023-10-21T17:25:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12114",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12114",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12114.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12114.patch",
            "merged_at": "2023-10-21T17:25:50Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12114/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12114/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12113",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12113/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12113/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12113/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12113",
        "id": 1955583325,
        "node_id": "PR_kwDOIPDwls5dcxn9",
        "number": 12113,
        "title": "move csv agent to langchain experimental",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-21T17:09:25Z",
        "updated_at": "2023-10-21T17:26:03Z",
        "closed_at": "2023-10-21T17:26:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12113",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12113",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12113.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12113.patch",
            "merged_at": "2023-10-21T17:26:02Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12113/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12113/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12112",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12112/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12112/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12112/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12112",
        "id": 1955575850,
        "node_id": "I_kwDOIPDwls50j7gq",
        "number": 12112,
        "title": "Issue with Exception Handling: UnstructuredURLLoader Does Not Raise Exceptions Inheriting from Base Class Exception",
        "user": {
            "login": "marawanxmamdouh",
            "id": 55720454,
            "node_id": "MDQ6VXNlcjU1NzIwNDU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/55720454?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marawanxmamdouh",
            "html_url": "https://github.com/marawanxmamdouh",
            "followers_url": "https://api.github.com/users/marawanxmamdouh/followers",
            "following_url": "https://api.github.com/users/marawanxmamdouh/following{/other_user}",
            "gists_url": "https://api.github.com/users/marawanxmamdouh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marawanxmamdouh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marawanxmamdouh/subscriptions",
            "organizations_url": "https://api.github.com/users/marawanxmamdouh/orgs",
            "repos_url": "https://api.github.com/users/marawanxmamdouh/repos",
            "events_url": "https://api.github.com/users/marawanxmamdouh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marawanxmamdouh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-21T16:52:54Z",
        "updated_at": "2023-10-21T16:59:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n#### Description:\r\nI encountered an issue with the UnstructuredURLLoader class from the \"langchain\" library, specifically in the libs/langchain/langchain/document_loaders/url.py module. When trying to handle exceptions for a failed request, I observed that the exception raised by the library doesn't inherit from the base class Exception. This makes it challenging to handle exceptions properly in my code.\r\n\r\n#### **Actual Behavior**:\r\nThe exception raised by the **`UnstructuredURLLoader`** doesn't inherit from the base class **`Exception`**, causing difficulty in handling exceptions effectively.\r\n\r\n#### **Error Message**:\r\n```Error fetching or processing https://en.wikipesdfdia.org/, exception: HTTPSConnectionPool(host='en.wikipesdfdia.org', port=443): Max retries exceeded with url: / (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000002113AD12F10>: Failed to resolve 'en.wikipesdfdia.org' ([Errno 11001] getaddrinfo failed)\"))```\r\n\r\n### Who can help?\r\n\r\n@eyurtsev @agola11 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [X] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```py\r\nfrom langchain.document_loaders import UnstructuredURLLoader\r\nfrom urllib3 import HTTPSConnectionPool\r\n\r\nurl = 'https://en.wikipesdfdia.org/'\r\n\r\ntry:\r\n    unstructured_loader = UnstructuredURLLoader([url])\r\n    all_content = unstructured_loader.load()\r\n    print(\"Request was successful\")\r\nexcept HTTPSConnectionPool as e:\r\n    # Handle HTTPConnectionPool exceptions\r\n    print(f\"An HTTPConnectionPool exception occurred: {e}\")\r\nexcept Exception as e:\r\n    # Handle other exceptions\r\n    print(f\"An unexpected error occurred: {e}\")\r\n```\r\n\r\n### Expected behavior\r\n\r\nI expected the exception raised by the **`UnstructuredURLLoader`** to be derived from the base class **`Exception`**, which would allow for proper exception handling.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12112/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12112/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12111",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12111/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12111/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12111/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12111",
        "id": 1955557557,
        "node_id": "PR_kwDOIPDwls5dcsvk",
        "number": 12111,
        "title": "rewrite",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-21T16:17:23Z",
        "updated_at": "2023-10-21T16:31:11Z",
        "closed_at": "2023-10-21T16:31:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12111",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12111",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12111.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12111.patch",
            "merged_at": "2023-10-21T16:31:10Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12111/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12111/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12110",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12110/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12110/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12110/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12110",
        "id": 1955553596,
        "node_id": "I_kwDOIPDwls50j2E8",
        "number": 12110,
        "title": "API Key Leakage in the BaseLanguageModel ",
        "user": {
            "login": "pomcho555",
            "id": 29173691,
            "node_id": "MDQ6VXNlcjI5MTczNjkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29173691?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pomcho555",
            "html_url": "https://github.com/pomcho555",
            "followers_url": "https://api.github.com/users/pomcho555/followers",
            "following_url": "https://api.github.com/users/pomcho555/following{/other_user}",
            "gists_url": "https://api.github.com/users/pomcho555/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pomcho555/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pomcho555/subscriptions",
            "organizations_url": "https://api.github.com/users/pomcho555/orgs",
            "repos_url": "https://api.github.com/users/pomcho555/repos",
            "events_url": "https://api.github.com/users/pomcho555/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pomcho555/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-21T16:08:21Z",
        "updated_at": "2023-10-28T22:39:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain:0.0.319\r\nPython:3.11.2\r\nSystem: macOS 13.5.2 arm64\n\n### Who can help?\n\n@hwchase17\r\n@agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI implemented a generic module to handle many types of chat models. I executed the following script after I set `OPENAI_API_KEY=xxx` in `.env` file.\r\n\r\n\r\n```python\r\nfrom dataclasses import dataclass, field\r\n\r\nfrom langchain.schema.language_model import BaseLanguageModel\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom dotenv import load_dotenv\r\n\r\n# Load environment variables\r\nload_dotenv()\r\n\r\n@dataclass\r\nclass ModelConfig:\r\n    \"\"\"Model Configuration\"\"\"\r\n\r\n    model: BaseLanguageModel\r\n    arguments: field(\r\n        default_factory=dict\r\n    )  # This could be any arguments for BaseLanguageModel child class\r\n\r\n    def init_model(self) -> BaseLanguageModel:\r\n        return self.model(**self.arguments)\r\n\r\nif __name__ == \"__main__\":\r\n    model = ModelConfig(model=ChatOpenAI, arguments=dict())\r\n    print(model)\r\n\r\n```\r\n\r\nAnd then the output contains **a leaked API key**!\r\n\r\n```sh\r\n<class 'openai.api_resources.chat_completion.ChatCompletion'> openai_api_key=xxxx>\r\n```\r\n\r\n\r\n\r\n\n\n### Expected behavior\n\nMy idea off the top of my head is to use, say,  `__str__` directive inside the original class. But this seems just a workaround for ChatOpenAI class. So something more generic feature in `BaseLanguageModel` would be more decent. Like should have a common property in the base class, which handle API token across any LLM models and this property might be a special class that can hide the value when other class and functions call this.\r\n\r\nhttps://github.com/langchain-ai/langchain/blob/08f5e6b8012f5eda2609103f33676199a3781a15/libs/langchain/langchain/chat_models/openai.py#L181-L238\r\n\r\n## Similar issue.\r\n\r\n#8499",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12110/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12110/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12109",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12109/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12109/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12109/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12109",
        "id": 1955543045,
        "node_id": "PR_kwDOIPDwls5dcqAQ",
        "number": 12109,
        "title": "Update Tavily API key link",
        "user": {
            "login": "rotemweiss57",
            "id": 91344214,
            "node_id": "MDQ6VXNlcjkxMzQ0MjE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/91344214?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rotemweiss57",
            "html_url": "https://github.com/rotemweiss57",
            "followers_url": "https://api.github.com/users/rotemweiss57/followers",
            "following_url": "https://api.github.com/users/rotemweiss57/following{/other_user}",
            "gists_url": "https://api.github.com/users/rotemweiss57/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rotemweiss57/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rotemweiss57/subscriptions",
            "organizations_url": "https://api.github.com/users/rotemweiss57/orgs",
            "repos_url": "https://api.github.com/users/rotemweiss57/repos",
            "events_url": "https://api.github.com/users/rotemweiss57/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rotemweiss57/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-21T15:41:32Z",
        "updated_at": "2023-10-21T15:53:06Z",
        "closed_at": "2023-10-21T15:44:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12109",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12109",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12109.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12109.patch",
            "merged_at": "2023-10-21T15:44:58Z"
        },
        "body": "fix broken link to generate tavily api key",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12109/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12109/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12108",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12108/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12108/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12108/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12108",
        "id": 1955541601,
        "node_id": "PR_kwDOIPDwls5dcpuR",
        "number": 12108,
        "title": "bump 320",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-21T15:38:13Z",
        "updated_at": "2023-10-21T15:52:53Z",
        "closed_at": "2023-10-21T15:52:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12108",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12108",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12108.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12108.patch",
            "merged_at": "2023-10-21T15:52:52Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12108/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12108/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12107",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12107/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12107/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12107/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12107",
        "id": 1955532794,
        "node_id": "PR_kwDOIPDwls5dcoCM",
        "number": 12107,
        "title": "Bagatur/e2b integration",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-21T15:14:41Z",
        "updated_at": "2023-10-23T18:24:40Z",
        "closed_at": "2023-10-23T18:24:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12107",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12107",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12107.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12107.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12107/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12107/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12106",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12106/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12106/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12106/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12106",
        "id": 1955524744,
        "node_id": "PR_kwDOIPDwls5dcmfc",
        "number": 12106,
        "title": "10634: Added the capability to inject boto3 client in SagemakerEndpointEmbeddings",
        "user": {
            "login": "vikramshitole",
            "id": 1484349,
            "node_id": "MDQ6VXNlcjE0ODQzNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1484349?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vikramshitole",
            "html_url": "https://github.com/vikramshitole",
            "followers_url": "https://api.github.com/users/vikramshitole/followers",
            "following_url": "https://api.github.com/users/vikramshitole/following{/other_user}",
            "gists_url": "https://api.github.com/users/vikramshitole/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vikramshitole/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vikramshitole/subscriptions",
            "organizations_url": "https://api.github.com/users/vikramshitole/orgs",
            "repos_url": "https://api.github.com/users/vikramshitole/repos",
            "events_url": "https://api.github.com/users/vikramshitole/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vikramshitole/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5959659008,
                "node_id": "LA_kwDOIPDwls8AAAABYzkuAA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20aws",
                "name": "integration: aws",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to Amazon Web Services (AWS) integrations"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-21T14:55:54Z",
        "updated_at": "2023-10-23T06:12:23Z",
        "closed_at": "2023-10-23T06:06:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12106",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12106",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12106.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12106.patch",
            "merged_at": null
        },
        "body": "**Description: Allow to inject boto3 client for Cross account access type of scenarios in using SagemakerEndpointEmbeddings and also updated the documentation for same in the sample notebook**\r\nIssue:SSagemakerEndpointEmbeddings cross account capability #10634 #10184\r\nDependencies: None\r\nTag maintainer:\r\nTwitter handle:lethargicoder",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12106/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12106/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12105",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12105/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12105/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12105/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12105",
        "id": 1955511984,
        "node_id": "PR_kwDOIPDwls5dckHN",
        "number": 12105,
        "title": "Create CODE_OF_CONDUCT.md",
        "user": {
            "login": "PentesterPriyanshu",
            "id": 98478305,
            "node_id": "U_kgDOBd6o4Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/98478305?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PentesterPriyanshu",
            "html_url": "https://github.com/PentesterPriyanshu",
            "followers_url": "https://api.github.com/users/PentesterPriyanshu/followers",
            "following_url": "https://api.github.com/users/PentesterPriyanshu/following{/other_user}",
            "gists_url": "https://api.github.com/users/PentesterPriyanshu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PentesterPriyanshu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PentesterPriyanshu/subscriptions",
            "organizations_url": "https://api.github.com/users/PentesterPriyanshu/orgs",
            "repos_url": "https://api.github.com/users/PentesterPriyanshu/repos",
            "events_url": "https://api.github.com/users/PentesterPriyanshu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PentesterPriyanshu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-21T14:18:41Z",
        "updated_at": "2023-10-23T19:15:24Z",
        "closed_at": "2023-10-23T19:15:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12105",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12105",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12105.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12105.patch",
            "merged_at": "2023-10-23T19:15:24Z"
        },
        "body": "code of conduct.md file is missing it is generally present in good repos which have large community\r\n\r\nReplace this entire comment with:\r\n- **Description:** Added a `code_of_conduct.md` file to the repository to establish community standards and guidelines for contributors.\r\n- **Issue:** N/A\r\n- **Dependencies:** N/A\r\n- **Tag maintainer:** N/A\r\n\r\n\r\n\r\n    ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12105/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12105/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12104",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12104/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12104/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12104/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12104",
        "id": 1955502277,
        "node_id": "PR_kwDOIPDwls5dciTL",
        "number": 12104,
        "title": "Create CODE_OF_CONDUCT.md",
        "user": {
            "login": "PentesterPriyanshu",
            "id": 98478305,
            "node_id": "U_kgDOBd6o4Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/98478305?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PentesterPriyanshu",
            "html_url": "https://github.com/PentesterPriyanshu",
            "followers_url": "https://api.github.com/users/PentesterPriyanshu/followers",
            "following_url": "https://api.github.com/users/PentesterPriyanshu/following{/other_user}",
            "gists_url": "https://api.github.com/users/PentesterPriyanshu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PentesterPriyanshu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PentesterPriyanshu/subscriptions",
            "organizations_url": "https://api.github.com/users/PentesterPriyanshu/orgs",
            "repos_url": "https://api.github.com/users/PentesterPriyanshu/repos",
            "events_url": "https://api.github.com/users/PentesterPriyanshu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PentesterPriyanshu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-21T13:55:39Z",
        "updated_at": "2023-10-21T14:19:27Z",
        "closed_at": "2023-10-21T14:19:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12104",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12104",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12104.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12104.patch",
            "merged_at": null
        },
        "body": "code of conduct.md file is missing it is generally present in good repos which have  large community\r\n\r\n- **Description:** Added a `code_of_conduct.md` file to the repository to establish community standards and guidelines for contributors.\r\n- **Issue:** N/A\r\n- **Dependencies:** N/A\r\n- **Tag maintainer:** N/A\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12104/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12104/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12103",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12103/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12103/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12103/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12103",
        "id": 1955470739,
        "node_id": "PR_kwDOIPDwls5dccJn",
        "number": 12103,
        "title": "Add Tavily Search API as a Tool",
        "user": {
            "login": "rotemweiss57",
            "id": 91344214,
            "node_id": "MDQ6VXNlcjkxMzQ0MjE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/91344214?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rotemweiss57",
            "html_url": "https://github.com/rotemweiss57",
            "followers_url": "https://api.github.com/users/rotemweiss57/followers",
            "following_url": "https://api.github.com/users/rotemweiss57/following{/other_user}",
            "gists_url": "https://api.github.com/users/rotemweiss57/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rotemweiss57/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rotemweiss57/subscriptions",
            "organizations_url": "https://api.github.com/users/rotemweiss57/orgs",
            "repos_url": "https://api.github.com/users/rotemweiss57/repos",
            "events_url": "https://api.github.com/users/rotemweiss57/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rotemweiss57/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-21T12:27:00Z",
        "updated_at": "2023-10-21T15:23:22Z",
        "closed_at": "2023-10-21T15:23:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12103",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12103",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12103.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12103.patch",
            "merged_at": "2023-10-21T15:23:21Z"
        },
        "body": "Adding Tavily Search API as a tool. I will be the maintainer and assaf_elovic is the twitter handler.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12103/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12103/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12102",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12102/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12102/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12102/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12102",
        "id": 1955461073,
        "node_id": "PR_kwDOIPDwls5dcaQE",
        "number": 12102,
        "title": "Retriever with score  #11062",
        "user": {
            "login": "vanamayaswanth",
            "id": 68809553,
            "node_id": "MDQ6VXNlcjY4ODA5NTUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/68809553?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vanamayaswanth",
            "html_url": "https://github.com/vanamayaswanth",
            "followers_url": "https://api.github.com/users/vanamayaswanth/followers",
            "following_url": "https://api.github.com/users/vanamayaswanth/following{/other_user}",
            "gists_url": "https://api.github.com/users/vanamayaswanth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vanamayaswanth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vanamayaswanth/subscriptions",
            "organizations_url": "https://api.github.com/users/vanamayaswanth/orgs",
            "repos_url": "https://api.github.com/users/vanamayaswanth/repos",
            "events_url": "https://api.github.com/users/vanamayaswanth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vanamayaswanth/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-21T11:57:00Z",
        "updated_at": "2023-10-31T10:29:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12102",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12102",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12102.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12102.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12102/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12102/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12101",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12101/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12101/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12101/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/12101",
        "id": 1955460378,
        "node_id": "PR_kwDOIPDwls5dcaG4",
        "number": 12101,
        "title": "Update index.ipynb",
        "user": {
            "login": "Zhreyu",
            "id": 96978606,
            "node_id": "U_kgDOBcfGrg",
            "avatar_url": "https://avatars.githubusercontent.com/u/96978606?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Zhreyu",
            "html_url": "https://github.com/Zhreyu",
            "followers_url": "https://api.github.com/users/Zhreyu/followers",
            "following_url": "https://api.github.com/users/Zhreyu/following{/other_user}",
            "gists_url": "https://api.github.com/users/Zhreyu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Zhreyu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Zhreyu/subscriptions",
            "organizations_url": "https://api.github.com/users/Zhreyu/orgs",
            "repos_url": "https://api.github.com/users/Zhreyu/repos",
            "events_url": "https://api.github.com/users/Zhreyu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Zhreyu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-21T11:55:31Z",
        "updated_at": "2023-10-23T17:45:31Z",
        "closed_at": "2023-10-23T17:45:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/12101",
            "html_url": "https://github.com/langchain-ai/langchain/pull/12101",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/12101.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/12101.patch",
            "merged_at": null
        },
        "body": "Fixed some minor errors ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12101/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12101/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12100",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12100/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12100/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12100/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/12100",
        "id": 1955451984,
        "node_id": "I_kwDOIPDwls50jdRQ",
        "number": 12100,
        "title": "\"GoogleVertexAISearchRetriever\" object has no field \"_serving_config\". It's a Pydantic-related bug.",
        "user": {
            "login": "juan-calvo-datatonic",
            "id": 82172964,
            "node_id": "MDQ6VXNlcjgyMTcyOTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/82172964?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juan-calvo-datatonic",
            "html_url": "https://github.com/juan-calvo-datatonic",
            "followers_url": "https://api.github.com/users/juan-calvo-datatonic/followers",
            "following_url": "https://api.github.com/users/juan-calvo-datatonic/following{/other_user}",
            "gists_url": "https://api.github.com/users/juan-calvo-datatonic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juan-calvo-datatonic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juan-calvo-datatonic/subscriptions",
            "organizations_url": "https://api.github.com/users/juan-calvo-datatonic/orgs",
            "repos_url": "https://api.github.com/users/juan-calvo-datatonic/repos",
            "events_url": "https://api.github.com/users/juan-calvo-datatonic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juan-calvo-datatonic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-21T11:31:24Z",
        "updated_at": "2023-10-24T08:20:04Z",
        "closed_at": "2023-10-24T08:20:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nWhen upgrading from version 0.317 to 0.318, there is a bug regarding the Pydantic model validations. This issue doesn't happen in versions before 0.318.\r\n\r\nFile \"...venv/lib/python3.10/site-packages/langchain/retrievers/google_vertex_ai_search.py\", line 268, in __init__\r\n    self._serving_config = self._client.serving_config_path(\r\n  File \"pydantic/main.py\", line 357, in pydantic.main.BaseModel.__setattr__\r\nValueError: \"GoogleVertexAISearchRetriever\" object has no field \"_serving_config\"\n\n### Who can help?\n\nI tagged both of you, @eyurtsev and @kreneskyp, regarding this version 0.318 change, in case it is related: https://github.com/langchain-ai/langchain/pull/11936.\r\n\r\nThanks for this amazing library!\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nExecute the following code:\r\n\r\n```\r\ndef main():\r\n    aiplatform.init(project=PROJECT_ID)\r\n\r\n    llm = VertexAI(model_name=MODEL, temperature=0.0)\r\n\r\n    retriever = GoogleVertexAISearchRetriever(\r\n        project_id=PROJECT_ID, search_engine_id=DATA_STORE_ID\r\n    )\r\n\r\n    search_query = \"Who was the CEO of DeepMind in 2021?\"\r\n\r\n    retrieval_qa = RetrievalQA.from_chain_type(\r\n        llm=llm, chain_type=\"stuff\", retriever=retriever\r\n    )\r\n    answer = retrieval_qa.run(search_query)\r\n\r\n    print(answer)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\n\n### Expected behavior\n\nTo output the answer from the model, as it does in versions before 0.318",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/12100/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/12100/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    }
]