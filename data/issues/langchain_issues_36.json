[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10882",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10882/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10882/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10882/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10882",
        "id": 1906629969,
        "node_id": "I_kwDOIPDwls5xpN1R",
        "number": 10882,
        "title": "Possibility to rename input keys, output keys and memory keys for all chains consistently",
        "user": {
            "login": "juliuskittler",
            "id": 39234739,
            "node_id": "MDQ6VXNlcjM5MjM0NzM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/39234739?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juliuskittler",
            "html_url": "https://github.com/juliuskittler",
            "followers_url": "https://api.github.com/users/juliuskittler/followers",
            "following_url": "https://api.github.com/users/juliuskittler/following{/other_user}",
            "gists_url": "https://api.github.com/users/juliuskittler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juliuskittler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juliuskittler/subscriptions",
            "organizations_url": "https://api.github.com/users/juliuskittler/orgs",
            "repos_url": "https://api.github.com/users/juliuskittler/repos",
            "events_url": "https://api.github.com/users/juliuskittler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juliuskittler/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-21T10:22:11Z",
        "updated_at": "2023-09-21T10:25:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nIt should be possible to modify input keys, output keys and memory keys for all chains. Currently, this does not seem to be the case. For instance, while all these keys can be modified for the ConversationChain, not all of them can be modified for the ConversationalRetrievalChain.\r\n\r\n**ConversationChain**\r\n\r\nIn the ConversationChain, I can freely rename the memory_key, input_key and output_key as the example below shows. This is as expected.\r\n\r\n```\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.chains import ConversationChain\r\nfrom langchain.memory import ConversationBufferMemory\r\nfrom langchain.prompts.prompt import PromptTemplate\r\n\r\n# Keys can be freely adjusted\r\nmemory_key = \"foo\"\r\ninput_key = \"bar\"\r\noutput_key = \"baz\"\r\n\r\n# Initialize the context with a prompt template\r\ntemplate = r\"\"\"The following is a friendly conversation between a human and an AI. \r\nThe AI is talkative and provides lots of specific details from its context. If the \r\nAI does not know the answer to a question, it truthfully says it does not know.\r\n\r\nCurrent conversation:\r\n{}\r\nHuman: {}\r\nAI:\"\"\".format(\"{\" + memory_key + \"}\", \"{\" + input_key + \"}\")\r\n\r\nprompt = PromptTemplate(\r\n    input_variables=[memory_key, input_key], template=template\r\n)\r\n\r\n# Initialize memory to store conversation history\r\nmemory = ConversationBufferMemory(\r\n    memory_key=memory_key, input_key=input_key, output_key=output_key\r\n)\r\n\r\n# Initialize large language model\r\nmodel_kwargs = {\"engine\": \"gpt-35-turbo-0613\", \"headers\": {\"x-api-key\": os.environ[\"OPENAI_API_KEY\"]}}\r\nllm = ChatOpenAI(model_kwargs=model_kwargs, temperature=0.0)\r\n\r\n# Initialize and return conversation chain\r\nchain = ConversationChain(\r\n    llm=llm, memory=memory, prompt=prompt, verbose=True,\r\n    input_key=input_key, output_key=output_key\r\n)\r\n\r\n# Example call\r\nuser_input = \"What is GPT in 5 words?\"\r\nchain({input_key: user_input})[output_key]\r\n```\r\n\r\n**ConversationalRetrievalChain**\r\n\r\nIf I try to pass an `input_key` (or `input_keys`) argument to `ConversationalRetrievalChain.from_llm`, then I get the following error:\r\n\r\n```\r\nValidationError: 1 validation error for ConversationalRetrievalChain input_key extra fields not permitted (type=value_error.extra)\r\n```\r\n\r\nIt seems that with the current implementation, one has to use the input keys [\"question\", \"chat_history\"] (see [code here](https://github.com/langchain-ai/langchain/blob/777b33b873b50339659963f2b5aba17b69412f5a/libs/langchain/langchain/chains/conversational_retrieval/base.py#L86)).\r\n\r\nHowever, the ConversationalRetrievalChain does, thankfully, accept the input argument `output_key`. I.e., the output_key can be modified but the input_keys cannot.\r\n\r\n\r\n### Motivation\r\n\r\nProvide consistency and ease of use across all chains. \r\n\r\nCurrently, users may face difficulty in modifying input keys, output keys and memory keys for the ConversationalRetrievalChain which could result in inconsistency across the chains. By allowing modifications to these keys for all chains, users can have a consistent and standardized approach to building chatbots.\r\n\r\n### Your contribution\r\n\r\nTBD",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10882/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10882/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10881",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10881/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10881/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10881/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10881",
        "id": 1906492968,
        "node_id": "PR_kwDOIPDwls5a3RYf",
        "number": 10881,
        "title": "Fixing some spelling mistakes",
        "user": {
            "login": "ShorthillsAI",
            "id": 141953346,
            "node_id": "U_kgDOCHYJQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/141953346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShorthillsAI",
            "html_url": "https://github.com/ShorthillsAI",
            "followers_url": "https://api.github.com/users/ShorthillsAI/followers",
            "following_url": "https://api.github.com/users/ShorthillsAI/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShorthillsAI/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShorthillsAI/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShorthillsAI/subscriptions",
            "organizations_url": "https://api.github.com/users/ShorthillsAI/orgs",
            "repos_url": "https://api.github.com/users/ShorthillsAI/repos",
            "events_url": "https://api.github.com/users/ShorthillsAI/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShorthillsAI/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-21T09:11:02Z",
        "updated_at": "2023-09-27T17:56:52Z",
        "closed_at": "2023-09-27T17:56:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10881",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10881",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10881.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10881.patch",
            "merged_at": "2023-09-27T17:56:51Z"
        },
        "body": "@baskaryan ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10881/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10881/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10880",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10880/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10880/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10880/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10880",
        "id": 1906455115,
        "node_id": "PR_kwDOIPDwls5a3I-d",
        "number": 10880,
        "title": "fix the Loader 'BiliBiliLoader' ",
        "user": {
            "login": "liguoqinjim",
            "id": 2113954,
            "node_id": "MDQ6VXNlcjIxMTM5NTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2113954?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liguoqinjim",
            "html_url": "https://github.com/liguoqinjim",
            "followers_url": "https://api.github.com/users/liguoqinjim/followers",
            "following_url": "https://api.github.com/users/liguoqinjim/following{/other_user}",
            "gists_url": "https://api.github.com/users/liguoqinjim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liguoqinjim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liguoqinjim/subscriptions",
            "organizations_url": "https://api.github.com/users/liguoqinjim/orgs",
            "repos_url": "https://api.github.com/users/liguoqinjim/repos",
            "events_url": "https://api.github.com/users/liguoqinjim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liguoqinjim/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-21T08:53:04Z",
        "updated_at": "2023-10-26T12:52:59Z",
        "closed_at": "2023-10-13T06:14:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10880",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10880",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10880.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10880.patch",
            "merged_at": null
        },
        "body": "  - **Description:** fix the Loader 'BiliBiliLoader' and it's doc\r\n  - **Issue:** Due to recent modifications in Bilibili's API regulations, it is now imperative to include credentials when making a request to obtain subtitles.\r\nFurthermore, it is important to note that not all videos will necessarily have associated subtitles.\r\nAs a result, I have revised the logic for acquiring subtitles. Presently, in the absence of credentials, the response will include the video's title and description, with subtitles only retrieved if valid credentials are provided.\r\nAnd I also changed the doc,adding how to get and provide the credential.\r\n  - **Dependencies:** Nope",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10880/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10880/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10879",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10879/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10879/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10879/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10879",
        "id": 1906441411,
        "node_id": "I_kwDOIPDwls5xofzD",
        "number": 10879,
        "title": "BigQuery - document loader, load() function throws error",
        "user": {
            "login": "arindam-b",
            "id": 59955214,
            "node_id": "MDQ6VXNlcjU5OTU1MjE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/59955214?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arindam-b",
            "html_url": "https://github.com/arindam-b",
            "followers_url": "https://api.github.com/users/arindam-b/followers",
            "following_url": "https://api.github.com/users/arindam-b/following{/other_user}",
            "gists_url": "https://api.github.com/users/arindam-b/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arindam-b/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arindam-b/subscriptions",
            "organizations_url": "https://api.github.com/users/arindam-b/orgs",
            "repos_url": "https://api.github.com/users/arindam-b/repos",
            "events_url": "https://api.github.com/users/arindam-b/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arindam-b/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-21T08:45:23Z",
        "updated_at": "2023-10-13T15:24:30Z",
        "closed_at": "2023-10-13T15:24:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nBigQuery table is not able to load. Here is the code:\r\n\r\n```python\r\n\r\n\r\nfrom langchain.document_loaders import BigQueryLoader\r\n\r\nBASE_QUERY = \"\"\"\r\nSELECT  * FROM arindam-2banerjee-0525-pimy.sf_transport.bikeshare_trips\r\n\"\"\"\r\n\r\nloader = BigQueryLoader(BASE_QUERY)\r\n\r\nloader.load()\r\n\r\n```\r\n\r\n\r\nError message:\r\n\r\n```\r\n\r\n---------------------------------------------------------------------------\r\nNotFound                                  Traceback (most recent call last)\r\n[<ipython-input-24-4ebe0f70b252>](https://localhost:8080/#) in <cell line: 9>()\r\n      7 loader = BigQueryLoader(BASE_QUERY)\r\n      8 \r\n----> 9 loader.load()\r\n\r\n9 frames\r\n[~/.local/lib/python3.10/site-packages/langchain/document_loaders/bigquery.py](https://localhost:8080/#) in load(self)\r\n     59 \r\n     60         bq_client = bigquery.Client(credentials=self.credentials, project=self.project)\r\n---> 61         query_result = bq_client.query(self.query).result()\r\n     62         docs: List[Document] = []\r\n     63 \r\n\r\n[/usr/local/lib/python3.10/dist-packages/google/cloud/bigquery/client.py](https://localhost:8080/#) in query(self, query, job_config, job_id, job_id_prefix, location, project, retry, timeout, job_retry, api_method)\r\n   3401             )\r\n   3402         elif api_method == enums.QueryApiMethod.INSERT:\r\n-> 3403             return _job_helpers.query_jobs_insert(\r\n   3404                 self,\r\n   3405                 query,\r\n\r\n[/usr/local/lib/python3.10/dist-packages/google/cloud/bigquery/_job_helpers.py](https://localhost:8080/#) in query_jobs_insert(client, query, job_config, job_id, job_id_prefix, location, project, retry, timeout, job_retry)\r\n    112             return query_job\r\n    113 \r\n--> 114     future = do_query()\r\n    115     # The future might be in a failed state now, but if it's\r\n    116     # unrecoverable, we'll find out when we ask for it's result, at which\r\n\r\n[/usr/local/lib/python3.10/dist-packages/google/cloud/bigquery/_job_helpers.py](https://localhost:8080/#) in do_query()\r\n     89 \r\n     90         try:\r\n---> 91             query_job._begin(retry=retry, timeout=timeout)\r\n     92         except core_exceptions.Conflict as create_exc:\r\n     93             # The thought is if someone is providing their own job IDs and they get\r\n\r\n[/usr/local/lib/python3.10/dist-packages/google/cloud/bigquery/job/query.py](https://localhost:8080/#) in _begin(self, client, retry, timeout)\r\n   1308 \r\n   1309         try:\r\n-> 1310             super(QueryJob, self)._begin(client=client, retry=retry, timeout=timeout)\r\n   1311         except exceptions.GoogleAPICallError as exc:\r\n   1312             exc.message = _EXCEPTION_FOOTER_TEMPLATE.format(\r\n\r\n[/usr/local/lib/python3.10/dist-packages/google/cloud/bigquery/job/base.py](https://localhost:8080/#) in _begin(self, client, retry, timeout)\r\n    691         # job has an ID.\r\n    692         span_attributes = {\"path\": path}\r\n--> 693         api_response = client._call_api(\r\n    694             retry,\r\n    695             span_name=\"BigQuery.job.begin\",\r\n\r\n[/usr/local/lib/python3.10/dist-packages/google/cloud/bigquery/client.py](https://localhost:8080/#) in _call_api(self, retry, span_name, span_attributes, job_ref, headers, **kwargs)\r\n    811                 name=span_name, attributes=span_attributes, client=self, job_ref=job_ref\r\n    812             ):\r\n--> 813                 return call()\r\n    814 \r\n    815         return call()\r\n\r\n[/usr/local/lib/python3.10/dist-packages/google/api_core/retry.py](https://localhost:8080/#) in retry_wrapped_func(*args, **kwargs)\r\n    347                 self._initial, self._maximum, multiplier=self._multiplier\r\n    348             )\r\n--> 349             return retry_target(\r\n    350                 target,\r\n    351                 self._predicate,\r\n\r\n[/usr/local/lib/python3.10/dist-packages/google/api_core/retry.py](https://localhost:8080/#) in retry_target(target, predicate, sleep_generator, timeout, on_error, **kwargs)\r\n    189     for sleep in sleep_generator:\r\n    190         try:\r\n--> 191             return target()\r\n    192 \r\n    193         # pylint: disable=broad-except\r\n\r\n[/usr/local/lib/python3.10/dist-packages/google/cloud/_http/__init__.py](https://localhost:8080/#) in api_request(self, method, path, query_params, data, content_type, headers, api_base_url, api_version, expect_json, _target_object, timeout, extra_api_info)\r\n    492 \r\n    493         if not 200 <= response.status_code < 300:\r\n--> 494             raise exceptions.from_http_response(response)\r\n    495 \r\n    496         if expect_json and response.content:\r\n\r\nNotFound: 404 POST https://bigquery.googleapis.com/bigquery/v2/projects//jobs?prettyPrint=false: Request couldn't be served.\r\n\r\nLocation: None\r\nJob ID: 77604d22-bf1b-4dca-b6f7-ab553ac6aab8\r\n```\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThe code mentioned above.\r\n\r\n\r\n\n\n### Expected behavior\n\nLoad a BigQuery query with one document per row.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10879/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10879/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10878",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10878/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10878/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10878/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10878",
        "id": 1906434731,
        "node_id": "PR_kwDOIPDwls5a3Eil",
        "number": 10878,
        "title": "Implement llm stream api of Alibaba Tongyi model.",
        "user": {
            "login": "wangxuqi",
            "id": 13748374,
            "node_id": "MDQ6VXNlcjEzNzQ4Mzc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13748374?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wangxuqi",
            "html_url": "https://github.com/wangxuqi",
            "followers_url": "https://api.github.com/users/wangxuqi/followers",
            "following_url": "https://api.github.com/users/wangxuqi/following{/other_user}",
            "gists_url": "https://api.github.com/users/wangxuqi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wangxuqi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wangxuqi/subscriptions",
            "organizations_url": "https://api.github.com/users/wangxuqi/orgs",
            "repos_url": "https://api.github.com/users/wangxuqi/repos",
            "events_url": "https://api.github.com/users/wangxuqi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wangxuqi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-21T08:41:32Z",
        "updated_at": "2023-09-22T02:50:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10878",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10878",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10878.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10878.patch",
            "merged_at": null
        },
        "body": "Hi there\r\nThis PR is aim to refactor and implement new api for Alibaba Tongyi LLM model. It contains work below: \r\n1. Implements langchain.llms.Tonyi stream call function.\r\n2. Remove the _call() function as it is deprecated.\r\n3. Add more code examples in tongyi.ipynb. One case for users who need to to use different model with Tongyi.\r\nOne case for streaming response call and with callbacks.\r\n\r\nNote async completion for the Text API is not yet supported.\r\nDependencies: dashscope. It will be installed manually cause it is not need by everyone.\r\n\r\nHappy for feedback on any aspect of this PR @hwchase17  @baskaryan.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10878/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10878/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10877",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10877/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10877/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10877/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10877",
        "id": 1906282368,
        "node_id": "PR_kwDOIPDwls5a2jif",
        "number": 10877,
        "title": "choose to prepend an index of page_content in retriever",
        "user": {
            "login": "Tsukumizu",
            "id": 143052241,
            "node_id": "U_kgDOCIbN0Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/143052241?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Tsukumizu",
            "html_url": "https://github.com/Tsukumizu",
            "followers_url": "https://api.github.com/users/Tsukumizu/followers",
            "following_url": "https://api.github.com/users/Tsukumizu/following{/other_user}",
            "gists_url": "https://api.github.com/users/Tsukumizu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Tsukumizu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Tsukumizu/subscriptions",
            "organizations_url": "https://api.github.com/users/Tsukumizu/orgs",
            "repos_url": "https://api.github.com/users/Tsukumizu/repos",
            "events_url": "https://api.github.com/users/Tsukumizu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Tsukumizu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-21T07:17:26Z",
        "updated_at": "2023-09-21T07:17:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10877",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10877",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10877.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10877.patch",
            "merged_at": null
        },
        "body": "\r\n- **Description:** Allow users to prepend each document in the result with its index number by setting the add_index parameter to True in VectorStoreRetiever(), then it's much easier for QA inline citation, \r\n- **Issue:** #7239,\r\n- **Dependencies:** No dependencies required for this change,\r\n- **Tag maintainer:** @baskaryan,\r\n- **Twitter handle:** \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10877/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10877/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10876",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10876/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10876/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10876/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10876",
        "id": 1906261175,
        "node_id": "I_kwDOIPDwls5xnzy3",
        "number": 10876,
        "title": "Issue: How to set the language (default is English) when using UnstructuredImageLoader with PaddleOCR",
        "user": {
            "login": "jonlimx",
            "id": 9720225,
            "node_id": "MDQ6VXNlcjk3MjAyMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9720225?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonlimx",
            "html_url": "https://github.com/jonlimx",
            "followers_url": "https://api.github.com/users/jonlimx/followers",
            "following_url": "https://api.github.com/users/jonlimx/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonlimx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonlimx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonlimx/subscriptions",
            "organizations_url": "https://api.github.com/users/jonlimx/orgs",
            "repos_url": "https://api.github.com/users/jonlimx/repos",
            "events_url": "https://api.github.com/users/jonlimx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonlimx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-21T07:05:38Z",
        "updated_at": "2023-09-22T02:30:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am using langchain.document_loaders.image.UnstructuredImageLoader to load data from an image with a table on it. I chose PaddleOCR by setting os.environ[\"TABLE_OCR\"] = \"paddle\" . However, I didn't find a place to set the detection language to other language. Could you please let me know how to do it. I have gotten stuck on it for a while.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10876/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10876/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10875",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10875/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10875/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10875/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10875",
        "id": 1906228353,
        "node_id": "PR_kwDOIPDwls5a2YGo",
        "number": 10875,
        "title": "fix experimental imports",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-21T06:42:31Z",
        "updated_at": "2023-09-21T06:44:18Z",
        "closed_at": "2023-09-21T06:44:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10875",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10875",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10875.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10875.patch",
            "merged_at": "2023-09-21T06:44:17Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10875/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10875/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10874",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10874/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10874/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10874/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10874",
        "id": 1906192130,
        "node_id": "I_kwDOIPDwls5xni8C",
        "number": 10874,
        "title": "Python - Stop generate response functionality ",
        "user": {
            "login": "lironezra",
            "id": 28096499,
            "node_id": "MDQ6VXNlcjI4MDk2NDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/28096499?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lironezra",
            "html_url": "https://github.com/lironezra",
            "followers_url": "https://api.github.com/users/lironezra/followers",
            "following_url": "https://api.github.com/users/lironezra/following{/other_user}",
            "gists_url": "https://api.github.com/users/lironezra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lironezra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lironezra/subscriptions",
            "organizations_url": "https://api.github.com/users/lironezra/orgs",
            "repos_url": "https://api.github.com/users/lironezra/repos",
            "events_url": "https://api.github.com/users/lironezra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lironezra/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-21T06:14:41Z",
        "updated_at": "2023-09-21T06:16:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nFirst of all BIG thanks for the working you are doing guys!!!\r\nIt will be nice if you can add a stop generate response implementation.\n\n### Motivation\n\nI'm always frustrated when I need to wait until the final response returned and then ask new question.\r\nSometimes my chatbot sending long JSON response that takes 55sec end-to-end it will be nice if I could stop it manually. \n\n### Your contribution\n\nNo",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10874/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10874/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10873",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10873/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10873/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10873/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10873",
        "id": 1906185346,
        "node_id": "PR_kwDOIPDwls5a2Ow9",
        "number": 10873,
        "title": "Add async support to multi-query retriever.",
        "user": {
            "login": "GMartin-dev",
            "id": 1821407,
            "node_id": "MDQ6VXNlcjE4MjE0MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1821407?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GMartin-dev",
            "html_url": "https://github.com/GMartin-dev",
            "followers_url": "https://api.github.com/users/GMartin-dev/followers",
            "following_url": "https://api.github.com/users/GMartin-dev/following{/other_user}",
            "gists_url": "https://api.github.com/users/GMartin-dev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GMartin-dev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GMartin-dev/subscriptions",
            "organizations_url": "https://api.github.com/users/GMartin-dev/orgs",
            "repos_url": "https://api.github.com/users/GMartin-dev/repos",
            "events_url": "https://api.github.com/users/GMartin-dev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GMartin-dev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nfcampos",
                "id": 56902,
                "node_id": "MDQ6VXNlcjU2OTAy",
                "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nfcampos",
                "html_url": "https://github.com/nfcampos",
                "followers_url": "https://api.github.com/users/nfcampos/followers",
                "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
                "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
                "organizations_url": "https://api.github.com/users/nfcampos/orgs",
                "repos_url": "https://api.github.com/users/nfcampos/repos",
                "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nfcampos/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-21T06:09:55Z",
        "updated_at": "2023-09-22T15:33:21Z",
        "closed_at": "2023-09-22T15:33:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10873",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10873",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10873.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10873.patch",
            "merged_at": "2023-09-22T15:33:20Z"
        },
        "body": "Added async support to the MultiQueryRetriever class.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10873/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10872",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10872/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10872/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10872/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10872",
        "id": 1906164528,
        "node_id": "I_kwDOIPDwls5xncMw",
        "number": 10872,
        "title": "Qdrant collection issue",
        "user": {
            "login": "JohnJyong",
            "id": 76649700,
            "node_id": "MDQ6VXNlcjc2NjQ5NzAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/76649700?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JohnJyong",
            "html_url": "https://github.com/JohnJyong",
            "followers_url": "https://api.github.com/users/JohnJyong/followers",
            "following_url": "https://api.github.com/users/JohnJyong/following{/other_user}",
            "gists_url": "https://api.github.com/users/JohnJyong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JohnJyong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JohnJyong/subscriptions",
            "organizations_url": "https://api.github.com/users/JohnJyong/orgs",
            "repos_url": "https://api.github.com/users/JohnJyong/repos",
            "events_url": "https://api.github.com/users/JohnJyong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JohnJyong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-21T05:52:25Z",
        "updated_at": "2023-09-21T07:01:10Z",
        "closed_at": "2023-09-21T07:01:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n```\r\n        try:\r\n            # Skip any validation in case of forced collection recreate.\r\n            if force_recreate:\r\n                raise ValueError\r\n\r\n            # Get the vector configuration of the existing collection and vector, if it\r\n            # was specified. If the old configuration does not match the current one,\r\n            # an exception is being thrown.\r\n            collection_info = client.get_collection(collection_name=collection_name)\r\n            current_vector_config = collection_info.config.params.vectors\r\n            if isinstance(current_vector_config, dict) and vector_name is not None:\r\n                if vector_name not in current_vector_config:\r\n                    raise QdrantException(\r\n                        f\"Existing Qdrant collection {collection_name} does not \"\r\n                        f\"contain vector named {vector_name}. Did you mean one of the \"\r\n                        f\"existing vectors: {', '.join(current_vector_config.keys())}? \"\r\n                        f\"If you want to recreate the collection, set `force_recreate` \"\r\n                        f\"parameter to `True`.\"\r\n                    )\r\n                current_vector_config = current_vector_config.get(\r\n                    vector_name\r\n                )  # type: ignore[assignment]\r\n            elif isinstance(current_vector_config, dict) and vector_name is None:\r\n                raise QdrantException(\r\n                    f\"Existing Qdrant collection {collection_name} uses named vectors. \"\r\n                    f\"If you want to reuse it, please set `vector_name` to any of the \"\r\n                    f\"existing named vectors: \"\r\n                    f\"{', '.join(current_vector_config.keys())}.\"  # noqa\r\n                    f\"If you want to recreate the collection, set `force_recreate` \"\r\n                    f\"parameter to `True`.\"\r\n                )\r\n            elif (\r\n                not isinstance(current_vector_config, dict) and vector_name is not None\r\n            ):\r\n                raise QdrantException(\r\n                    f\"Existing Qdrant collection {collection_name} doesn't use named \"\r\n                    f\"vectors. If you want to reuse it, please set `vector_name` to \"\r\n                    f\"`None`. If you want to recreate the collection, set \"\r\n                    f\"`force_recreate` parameter to `True`.\"\r\n                )\r\n\r\n            # Check if the vector configuration has the same dimensionality.\r\n            if current_vector_config.size != vector_size:  # type: ignore[union-attr]\r\n                raise QdrantException(\r\n                    f\"Existing Qdrant collection is configured for vectors with \"\r\n                    f\"{current_vector_config.size} \"  # type: ignore[union-attr]\r\n                    f\"dimensions. Selected embeddings are {vector_size}-dimensional. \"\r\n                    f\"If you want to recreate the collection, set `force_recreate` \"\r\n                    f\"parameter to `True`.\"\r\n                )\r\n\r\n            current_distance_func = (\r\n                current_vector_config.distance.name.upper()  # type: ignore[union-attr]\r\n            )\r\n            if current_distance_func != distance_func:\r\n                raise QdrantException(\r\n                    f\"Existing Qdrant collection is configured for \"\r\n                    f\"{current_vector_config.distance} \"  # type: ignore[union-attr]\r\n                    f\"similarity. Please set `distance_func` parameter to \"\r\n                    f\"`{distance_func}` if you want to reuse it. If you want to \"\r\n                    f\"recreate the collection, set `force_recreate` parameter to \"\r\n                    f\"`True`.\"\r\n                )\r\n        except (UnexpectedResponse, RpcError, ValueError):\r\n            vectors_config = rest.VectorParams(\r\n                size=vector_size,\r\n                distance=rest.Distance[distance_func],\r\n            )\r\n\r\n            # If vector name was provided, we're going to use the named vectors feature\r\n            # with just a single vector.\r\n            if vector_name is not None:\r\n                vectors_config = {  # type: ignore[assignment]\r\n                    vector_name: vectors_config,\r\n                }\r\n\r\n            client.recreate_collection(\r\n                collection_name=collection_name,\r\n                vectors_config=vectors_config,\r\n                shard_number=shard_number,\r\n                replication_factor=replication_factor,\r\n                write_consistency_factor=write_consistency_factor,\r\n                on_disk_payload=on_disk_payload,\r\n                hnsw_config=hnsw_config,\r\n                optimizers_config=optimizers_config,\r\n                wal_config=wal_config,\r\n                quantization_config=quantization_config,\r\n                init_from=init_from,\r\n                timeout=timeout,  # type: ignore[arg-type]\r\n            )\r\n```\r\n\r\nI want to know which idiot wrote this code. \r\nRecreate the collection, then won't all the data be lost?\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nNot all exceptions should be handled by recreate collection\n\n### Expected behavior\n\nNot all exceptions should be handled by recreate collection",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10872/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10872/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10871",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10871/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10871/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10871/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10871",
        "id": 1906103052,
        "node_id": "PR_kwDOIPDwls5a18yQ",
        "number": 10871,
        "title": "Upstash redis integration",
        "user": {
            "login": "yilmaz-burak",
            "id": 46003469,
            "node_id": "MDQ6VXNlcjQ2MDAzNDY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/46003469?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yilmaz-burak",
            "html_url": "https://github.com/yilmaz-burak",
            "followers_url": "https://api.github.com/users/yilmaz-burak/followers",
            "following_url": "https://api.github.com/users/yilmaz-burak/following{/other_user}",
            "gists_url": "https://api.github.com/users/yilmaz-burak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yilmaz-burak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yilmaz-burak/subscriptions",
            "organizations_url": "https://api.github.com/users/yilmaz-burak/orgs",
            "repos_url": "https://api.github.com/users/yilmaz-burak/repos",
            "events_url": "https://api.github.com/users/yilmaz-burak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yilmaz-burak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5955630415,
                "node_id": "LA_kwDOIPDwls8AAAABYvu1Tw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20redis",
                "name": "integration: redis",
                "color": "F9D0C4",
                "default": false,
                "description": "Any integration that uses Redis"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-21T04:56:11Z",
        "updated_at": "2023-10-13T00:36:51Z",
        "closed_at": "2023-10-13T00:36:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10871",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10871",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10871.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10871.patch",
            "merged_at": "2023-10-13T00:36:51Z"
        },
        "body": "  - **Description:** Introduced Upstash provider with following wrappers: UpstashRedisCache, UpstashRedisEntityStore, UpstashRedisChatMessageHistory, UpstashRedisStore \r\n  - **Issue:** -,\r\n  - **Dependencies:** upstash-redis python package is needed,\r\n  - **Tag maintainer:** @baskaryan \r\n  - **Twitter handle:** @BurakY744",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10871/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10871/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10869",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10869/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10869/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10869/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10869",
        "id": 1906045391,
        "node_id": "PR_kwDOIPDwls5a1v6w",
        "number": 10869,
        "title": "Fix chat_history message order",
        "user": {
            "login": "thune-xiaobai",
            "id": 3123725,
            "node_id": "MDQ6VXNlcjMxMjM3MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3123725?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thune-xiaobai",
            "html_url": "https://github.com/thune-xiaobai",
            "followers_url": "https://api.github.com/users/thune-xiaobai/followers",
            "following_url": "https://api.github.com/users/thune-xiaobai/following{/other_user}",
            "gists_url": "https://api.github.com/users/thune-xiaobai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thune-xiaobai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thune-xiaobai/subscriptions",
            "organizations_url": "https://api.github.com/users/thune-xiaobai/orgs",
            "repos_url": "https://api.github.com/users/thune-xiaobai/repos",
            "events_url": "https://api.github.com/users/thune-xiaobai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thune-xiaobai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-21T04:00:14Z",
        "updated_at": "2023-10-23T08:53:01Z",
        "closed_at": "2023-09-22T15:16:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10869",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10869",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10869.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10869.patch",
            "merged_at": "2023-09-22T15:16:00Z"
        },
        "body": "Not all databases uses id as default order, so add it explicitly\r\n\r\nsqlite uses rawid as default order in select statement: [https://www.sqlite.org/lang_createtable.html#rowid](https://www.sqlite.org/lang_createtable.html#rowid), but some other databases like postgresql not behaves like this. since this class supports multiple db engine. we should have an order.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10869/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10869/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10868",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10868/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10868/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10868/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10868",
        "id": 1905981655,
        "node_id": "PR_kwDOIPDwls5a1iVr",
        "number": 10868,
        "title": "implement async exec for base.py",
        "user": {
            "login": "mzamini92",
            "id": 32536264,
            "node_id": "MDQ6VXNlcjMyNTM2MjY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/32536264?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzamini92",
            "html_url": "https://github.com/mzamini92",
            "followers_url": "https://api.github.com/users/mzamini92/followers",
            "following_url": "https://api.github.com/users/mzamini92/following{/other_user}",
            "gists_url": "https://api.github.com/users/mzamini92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mzamini92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mzamini92/subscriptions",
            "organizations_url": "https://api.github.com/users/mzamini92/orgs",
            "repos_url": "https://api.github.com/users/mzamini92/repos",
            "events_url": "https://api.github.com/users/mzamini92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mzamini92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-21T02:38:20Z",
        "updated_at": "2023-09-21T04:21:15Z",
        "closed_at": "2023-09-21T04:21:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10868",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10868",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10868.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10868.patch",
            "merged_at": null
        },
        "body": "This is my implementation of async exec. This code is similar to the synchronous version, but it uses async and await to make it asynchronous. To use this asynchronous version of _acall, we can simply call it with the async keyword: `output = await chain.acall(inputs)`\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10868/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10868/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10867",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10867/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10867/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10867/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10867",
        "id": 1905974168,
        "node_id": "I_kwDOIPDwls5xmtuY",
        "number": 10867,
        "title": "The model appears to be missing from the _default_params method in the baidu_qianfan_endpoint.py file",
        "user": {
            "login": "liye199033",
            "id": 131761099,
            "node_id": "U_kgDOB9qDyw",
            "avatar_url": "https://avatars.githubusercontent.com/u/131761099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liye199033",
            "html_url": "https://github.com/liye199033",
            "followers_url": "https://api.github.com/users/liye199033/followers",
            "following_url": "https://api.github.com/users/liye199033/following{/other_user}",
            "gists_url": "https://api.github.com/users/liye199033/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liye199033/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liye199033/subscriptions",
            "organizations_url": "https://api.github.com/users/liye199033/orgs",
            "repos_url": "https://api.github.com/users/liye199033/repos",
            "events_url": "https://api.github.com/users/liye199033/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liye199033/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-09-21T02:30:24Z",
        "updated_at": "2023-09-24T11:14:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain 0.0.295\r\npython 3.11\r\nos macOS 12.5 \r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThe model appears to be missing from the _default_params method in the baidu_qianfan_endpoint.py file\r\n`\r\n    @property\r\n    def _default_params(self) -> Dict[str, Any]:\r\n        \"\"\"Get the default parameters for calling OpenAI API.\"\"\"\r\n        normal_params = {\r\n            \"stream\": self.streaming,\r\n            \"request_timeout\": self.request_timeout,\r\n            \"top_p\": self.top_p,\r\n            \"temperature\": self.temperature,\r\n            \"penalty_score\": self.penalty_score,\r\n        }\r\n\r\n        return {**normal_params, **self.model_kwargs}\r\n`\r\nLine 183 of the chat_completion.py file in the qianfan module failed to be executed.\r\n`\r\n    def do(\r\n        self,\r\n        model: Optional[str] = None,\r\n        endpoint: Optional[str] = None,\r\n        stream: bool = False,\r\n        retry_count: int = 1,\r\n        request_timeout: float = 60,\r\n        backoff_factor: float = 0,\r\n        **kwargs,\r\n    ) -> QfResponse:\r\n        \"\"\"\r\n        if model is EB, use EB SDK to deal with the request\r\n        \"\"\"\r\n        if \"messages\" in kwargs and isinstance(kwargs[\"messages\"], QfMessages):\r\n            kwargs[\"messages\"] = kwargs[\"messages\"]._to_list()\r\n        if not GLOBAL_CONFIG.DISABLE_EB_SDK:\r\n            if model in [\"ERNIE-Bot-turbo\", \"ERNIE-Bot\"]:\r\n                import erniebot  #line 183\r\n\r\n                erniebot.ak = self._client._auth._ak\r\n                erniebot.sk = self._client._auth._sk\r\n                erniebot.access_token = self._client._auth.access_token()\r\n                # compat with eb sdk\r\n                if model == \"ERNIE-Bot\":\r\n                    model = \"ernie-bot-3.5\"\r\n                return erniebot.ChatCompletion.create(\r\n                    model=model.lower(), messages=kwargs[\"messages\"], stream=stream\r\n                )\r\n        return super().do(\r\n            model,\r\n            endpoint,\r\n            stream,\r\n            retry_count,\r\n            request_timeout,\r\n            backoff_factor,\r\n            **kwargs,\r\n        )\r\n`\r\n\r\nbut even with model\uff0cbaidu will return the following error\r\n\r\n`\r\n  File \"/Users/xxx/Workspace/xxx/xxx/chatbot/venv/lib/python3.11/site-packages/erniebot/backends.py\", line 113, in handle_response\r\n    raise errors.InvalidParameterError(emsg)\r\nerniebot.errors.InvalidParameterError: the length of messages must be an odd number\r\n`\r\n\r\n![image](https://github.com/langchain-ai/langchain/assets/131761099/6cb46e17-2a53-45c7-9b60-1e0f6b252947)\r\n\r\nbecause there are two messages in the requested messages\r\n \r\n\r\n\n\n### Expected behavior\n\nable to return correct results",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10867/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10867/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10866",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10866/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10866/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10866/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10866",
        "id": 1905885000,
        "node_id": "PR_kwDOIPDwls5a1OB0",
        "number": 10866,
        "title": "beef up agent docs",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-21T00:31:15Z",
        "updated_at": "2023-09-21T06:09:59Z",
        "closed_at": "2023-09-21T06:09:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10866",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10866",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10866.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10866.patch",
            "merged_at": "2023-09-21T06:09:58Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10866/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10866/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10865",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10865/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10865/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10865/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10865",
        "id": 1905866123,
        "node_id": "PR_kwDOIPDwls5a1KE2",
        "number": 10865,
        "title": "update guide imports",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-21T00:02:30Z",
        "updated_at": "2023-09-21T00:02:47Z",
        "closed_at": "2023-09-21T00:02:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10865",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10865",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10865.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10865.patch",
            "merged_at": "2023-09-21T00:02:46Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10865/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10865/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10864",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10864/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10864/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10864/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10864",
        "id": 1905836300,
        "node_id": "I_kwDOIPDwls5xmMEM",
        "number": 10864,
        "title": "When `search_type=\"similarity_score_threshold`, retriever returns negative scores",
        "user": {
            "login": "amaiya",
            "id": 47191980,
            "node_id": "MDQ6VXNlcjQ3MTkxOTgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/47191980?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amaiya",
            "html_url": "https://github.com/amaiya",
            "followers_url": "https://api.github.com/users/amaiya/followers",
            "following_url": "https://api.github.com/users/amaiya/following{/other_user}",
            "gists_url": "https://api.github.com/users/amaiya/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amaiya/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amaiya/subscriptions",
            "organizations_url": "https://api.github.com/users/amaiya/orgs",
            "repos_url": "https://api.github.com/users/amaiya/repos",
            "events_url": "https://api.github.com/users/amaiya/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amaiya/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-20T23:14:16Z",
        "updated_at": "2023-10-30T16:27:45Z",
        "closed_at": "2023-09-21T21:07:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n- OS: Ubuntu 20.04\r\n- `langhcain==0.0.297`\r\n- ` chromadb==0.4.12`\r\n- Python 3.9.18\n\n### Who can help?\n\n@hwchase17 \r\n@agola11\r\n\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nfrom langchain.document_loaders import TextLoader\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.vectorstores import Chroma\r\n\r\nloader = TextLoader(\"state_of_the_union.txt\")\r\ndocuments = loader.load()\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\ntexts = text_splitter.split_documents(documents)\r\n\r\nembeddings = embeddings = HuggingFaceEmbeddings(model_name='all-MiniLM-L6-v2', encode_kwargs={'normalize_embeddings': True})\r\ndocsearch = Chroma.from_documents(texts, embeddings)\r\n\r\nretriever = docsearch.as_retriever(search_type=\"similarity_score_threshold\", search_kwargs={'score_threshold': 0.2})\r\n\r\nprint(retriever.get_relevant_documents('Ketanji'))\r\n```\r\n\r\nThe above code returns negative similarity scores for all retrieved results:\r\n\r\n```python\r\nlib/python3.9/site-packages/langchain/vectorstores/base.py:257: UserWarning: Relevance scores must be between 0 and 1, got \r\n\r\n[(Document(page_content='Tonight. I call on the Senate to: Pass the Freedom to Vote Act. Pass the John Lewis Voting Rights Act. And while you\u2019re at it, pass the Disclose Act so Americans can know who is funding our elections. \\n\\nTonight, I\u2019d like to honor someone who has dedicated his life to serve this country: Justice Stephen Breyer\u2014an Army veteran, Constitutional scholar, and retiring Justice of the United States Supreme Court. Justice Breyer, thank you for your service. \\n\\nOne of the most serious constitutional responsibilities a President has is nominating someone to serve on the United States Supreme Court. \\n\\nAnd I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation\u2019s top legal minds, who will continue Justice Breyer\u2019s legacy of excellence.', metadata={'source': 'state_of_the_union.txt'}), -0.18782109124725155), \r\n\r\n(Document(page_content='Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world.', metadata={'source': 'state_of_the_union.txt'}), -0.2858684850499025),\r\n\r\n (Document(page_content='We are inflicting pain on Russia and supporting the people of Ukraine. Putin is now isolated from the world more than ever. \\n\\nTogether with our allies \u2013we are right now enforcing powerful economic sanctions. \\n\\nWe are cutting off Russia\u2019s largest banks from the international financial system.  \\n\\nPreventing Russia\u2019s central bank from defending the Russian Ruble making Putin\u2019s $630 Billion \u201cwar fund\u201d worthless.   \\n\\nWe are choking off Russia\u2019s access to technology that will sap its economic strength and weaken its military for years to come.  \\n\\nTonight I say to the Russian oligarchs and corrupt leaders who have bilked billions of dollars off this violent regime no more. \\n\\nThe U.S. Department of Justice is assembling a dedicated task force to go after the crimes of Russian oligarchs.  \\n\\nWe are joining with our European allies to find and seize your yachts your luxury apartments your private jets. We are coming for your ill-begotten gains.', metadata={'source': 'state_of_the_union.txt'}), -0.3382525501830016),\r\n\r\n (Document(page_content='For that purpose we\u2019ve mobilized American ground forces, air squadrons, and ship deployments to protect NATO countries including Poland, Romania, Latvia, Lithuania, and Estonia. \\n\\nAs I have made crystal clear the United States and our Allies will defend every inch of territory of NATO countries with the full force of our collective power.  \\n\\nAnd we remain clear-eyed. The Ukrainians are fighting back with pure courage. But the next few days weeks, months, will be hard on them.  \\n\\nPutin has unleashed violence and chaos.  But while he may make gains on the battlefield \u2013 he will pay a continuing high price over the long run. \\n\\nAnd a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world.', metadata={'source': 'state_of_the_union.txt'}), -0.3629898842731978)]\r\n```\n\n### Expected behavior\n\nScore for each `Document`  should be between 0 and 1.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10864/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10864/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10863",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10863/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10863/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10863/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10863",
        "id": 1905816088,
        "node_id": "PR_kwDOIPDwls5a0_ae",
        "number": 10863,
        "title": "cleanup recursive url session",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T22:50:53Z",
        "updated_at": "2023-09-21T14:22:15Z",
        "closed_at": "2023-09-21T14:22:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10863",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10863",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10863.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10863.patch",
            "merged_at": "2023-09-21T14:22:14Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10863/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10863/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10862",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10862/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10862/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10862/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10862",
        "id": 1905793896,
        "node_id": "PR_kwDOIPDwls5a06rG",
        "number": 10862,
        "title": "Adding a connector for CogniSwitch.ai",
        "user": {
            "login": "CogniJT",
            "id": 131272471,
            "node_id": "U_kgDOB9MPFw",
            "avatar_url": "https://avatars.githubusercontent.com/u/131272471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CogniJT",
            "html_url": "https://github.com/CogniJT",
            "followers_url": "https://api.github.com/users/CogniJT/followers",
            "following_url": "https://api.github.com/users/CogniJT/following{/other_user}",
            "gists_url": "https://api.github.com/users/CogniJT/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CogniJT/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CogniJT/subscriptions",
            "organizations_url": "https://api.github.com/users/CogniJT/orgs",
            "repos_url": "https://api.github.com/users/CogniJT/repos",
            "events_url": "https://api.github.com/users/CogniJT/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CogniJT/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714130,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rkg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XL",
                "name": "size:XL",
                "color": "D4C5F9",
                "default": false,
                "description": "This PR changes 500-999 lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 23,
        "created_at": "2023-09-20T22:21:34Z",
        "updated_at": "2023-12-11T14:04:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10862",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10862",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10862.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10862.patch",
            "merged_at": null
        },
        "body": "\r\n  - **Description:** CogniSwitch focusses on making GenAI usage more reliable. It abstracts out the complexity & decision making required for tuning processing, storage & retrieval. Using simple APIs documents / URLs can be processed into a Knowledge Graph that can then be used to answer questions.\r\n  - **Dependencies:** No dependencies. Just network calls & API key required\r\n  - **Tag maintainer:** @hwchase17\r\n  - **Twitter handle:** @CogniSwitch\r\n  - **Documentation:** Please check `docs/extras/use_cases/cogniswitch_chain_usage.ipynb`\r\n  - **Tests:** Unit tests added within chains/ `test_cogniswitch_store` & `test_cogniswitch_answer` \r\n \r\nPR has passed linting and testing before this submission.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10862/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10862/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10861",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10861/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10861/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10861/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10861",
        "id": 1905758775,
        "node_id": "PR_kwDOIPDwls5a0zLb",
        "number": 10861,
        "title": "bump 297",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T21:42:02Z",
        "updated_at": "2023-09-20T21:45:50Z",
        "closed_at": "2023-09-20T21:45:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10861",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10861",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10861.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10861.patch",
            "merged_at": "2023-09-20T21:45:49Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10861/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10861/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10860",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10860/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10860/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10860/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10860",
        "id": 1905749724,
        "node_id": "PR_kwDOIPDwls5a0xQV",
        "number": 10860,
        "title": "fix loading of sql chain",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T21:33:04Z",
        "updated_at": "2023-09-20T21:37:50Z",
        "closed_at": "2023-09-20T21:37:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10860",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10860",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10860.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10860.patch",
            "merged_at": "2023-09-20T21:37:49Z"
        },
        "body": "Closing #6889",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10860/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10860/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10859",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10859/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10859/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10859/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10859",
        "id": 1905743290,
        "node_id": "PR_kwDOIPDwls5a0v25",
        "number": 10859,
        "title": "more redirects",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T21:26:46Z",
        "updated_at": "2023-09-20T21:26:54Z",
        "closed_at": "2023-09-20T21:26:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10859",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10859",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10859.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10859.patch",
            "merged_at": "2023-09-20T21:26:52Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10859/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10859/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10858",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10858/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10858/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10858/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10858",
        "id": 1905737864,
        "node_id": "PR_kwDOIPDwls5a0usF",
        "number": 10858,
        "title": "fix databricks docs",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T21:21:30Z",
        "updated_at": "2023-09-20T21:36:56Z",
        "closed_at": "2023-09-20T21:36:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10858",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10858",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10858.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10858.patch",
            "merged_at": "2023-09-20T21:36:55Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10858/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10858/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10857",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10857/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10857/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10857/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10857",
        "id": 1905730993,
        "node_id": "PR_kwDOIPDwls5a0tMZ",
        "number": 10857,
        "title": "redirect platform to provider",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T21:15:00Z",
        "updated_at": "2023-09-20T21:39:18Z",
        "closed_at": "2023-09-20T21:17:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10857",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10857",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10857.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10857.patch",
            "merged_at": "2023-09-20T21:17:36Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10857/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10857/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10856",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10856/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10856/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10856/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10856",
        "id": 1905707460,
        "node_id": "PR_kwDOIPDwls5a0oCA",
        "number": 10856,
        "title": "fix recursive loader",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T20:55:26Z",
        "updated_at": "2023-09-20T20:55:49Z",
        "closed_at": "2023-09-20T20:55:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10856",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10856",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10856.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10856.patch",
            "merged_at": "2023-09-20T20:55:48Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10856/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10856/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10855",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10855/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10855/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10855/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10855",
        "id": 1905640183,
        "node_id": "PR_kwDOIPDwls5a0ZS6",
        "number": 10855,
        "title": "fix extract sublink bug",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T20:03:14Z",
        "updated_at": "2023-09-20T20:30:43Z",
        "closed_at": "2023-09-20T20:30:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10855",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10855",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10855.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10855.patch",
            "merged_at": "2023-09-20T20:30:42Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10855/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10855/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10853",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10853/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10853/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10853/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10853",
        "id": 1905634225,
        "node_id": "PR_kwDOIPDwls5a0YAC",
        "number": 10853,
        "title": "Rodrigo dev",
        "user": {
            "login": "rodrigo-clickup",
            "id": 141281053,
            "node_id": "U_kgDOCGvHHQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/141281053?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rodrigo-clickup",
            "html_url": "https://github.com/rodrigo-clickup",
            "followers_url": "https://api.github.com/users/rodrigo-clickup/followers",
            "following_url": "https://api.github.com/users/rodrigo-clickup/following{/other_user}",
            "gists_url": "https://api.github.com/users/rodrigo-clickup/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rodrigo-clickup/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rodrigo-clickup/subscriptions",
            "organizations_url": "https://api.github.com/users/rodrigo-clickup/orgs",
            "repos_url": "https://api.github.com/users/rodrigo-clickup/repos",
            "events_url": "https://api.github.com/users/rodrigo-clickup/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rodrigo-clickup/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T19:58:36Z",
        "updated_at": "2023-09-20T20:09:04Z",
        "closed_at": "2023-09-20T19:58:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10853",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10853",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10853.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10853.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10853/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10853/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10852",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10852/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10852/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10852/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10852",
        "id": 1905609497,
        "node_id": "I_kwDOIPDwls5xlUsZ",
        "number": 10852,
        "title": "create_conversational_retrieval_agent does not work with fallbacks",
        "user": {
            "login": "monilouise",
            "id": 21226525,
            "node_id": "MDQ6VXNlcjIxMjI2NTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/21226525?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/monilouise",
            "html_url": "https://github.com/monilouise",
            "followers_url": "https://api.github.com/users/monilouise/followers",
            "following_url": "https://api.github.com/users/monilouise/following{/other_user}",
            "gists_url": "https://api.github.com/users/monilouise/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/monilouise/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/monilouise/subscriptions",
            "organizations_url": "https://api.github.com/users/monilouise/orgs",
            "repos_url": "https://api.github.com/users/monilouise/repos",
            "events_url": "https://api.github.com/users/monilouise/events{/privacy}",
            "received_events_url": "https://api.github.com/users/monilouise/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-09-20T19:39:26Z",
        "updated_at": "2023-09-25T14:58:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLanghchain version: 0.0.296\r\nPython version: 3.9.7\r\nPlatform: Windows 10\r\n\r\n\n\n### Who can help?\n\nI need to implement a fallback for my RAG application based on Langchain conversational retrievers because my application  needs to use GPT 4 only for RAG and GPT 3.5 for generic questions (eg.: ChatGPT).  A way to implement this behaviour is by means of fallbacks, because infortunately create_conversational_retrieval_agent() enforces the same LLM for all the tools.  So, I wrote the following code:\r\n\r\n```\r\nshort_llm = ChatOpenAI(\r\n    deployment_id=DEPLOYMENT_NAME_GPT_3_5_4K,\r\n    engine=DEPLOYMENT_NAME_GPT_3_5_4K,\r\n    model_name=model_gpt_3_5_4k,\r\n    temperature=0,\r\n    openai_api_base=BASE_URL,\r\n    openai_api_key=API_KEY,\r\n    streaming=True,\r\n    callbacks=[StreamingStdOutCallbackHandler()]\r\n)\r\n\r\nlong_llm = ChatOpenAI(\r\n    deployment_id=DEPLOYMENT_NAME_GPT_4_8K,\r\n    engine=DEPLOYMENT_NAME_GPT_4_8K,\r\n    model_name=model_gpt_4_8k,\r\n    temperature=0,\r\n    openai_api_base=BASE_URL,\r\n    openai_api_key=API_KEY,\r\n    streaming=True,\r\n    callbacks=[StreamingStdOutCallbackHandler()]\r\n)\r\n\r\nchat_llm = short_llm.with_fallbacks([long_llm])\r\n```\r\n\r\nAnd to create the agent:\r\n\r\n`agent_executor = create_conversational_retrieval_agent(chat_llm, tools, verbose=True, sytem_message=system_prompt, remember_intermediate_steps=False)`\r\n\r\nBut the following error occurs:\r\n\r\n```\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\langchain\\agents\\agent_toolkits\\conversational_retrieval\\openai_functions.py in create_conversational_retrieval_agent(llm, tools, remember_intermediate_steps, memory_key, system_message, verbose, max_token_limit, **kwargs)\r\n     58 \r\n     59     if not isinstance(llm, ChatOpenAI):\r\n---> 60         raise ValueError(\"Only supported with ChatOpenAI models.\")\r\n     61     if remember_intermediate_steps:\r\n     62         memory: BaseMemory = AgentTokenBufferMemory(\r\n\r\nValueError: Only supported with ChatOpenAI models.\r\n```\r\n\r\nIn fact, chat_llm has the following type: langchain.schema.runnable.base.RunnableWithFallbacks.  It apparently does not inherit ChatOpenAI .\r\n\r\nIs there any workaround?  My requirement is to use long LLM for RAG/retriever tools and a short one for normal conversation with ChatGPT 3.5\r\n\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\nshort_llm = ChatOpenAI(\r\n    deployment_id=DEPLOYMENT_NAME_GPT_3_5_4K,\r\n    engine=DEPLOYMENT_NAME_GPT_3_5_4K,\r\n    model_name=model_gpt_3_5_4k,\r\n    temperature=0,\r\n    openai_api_base=BASE_URL,\r\n    openai_api_key=API_KEY,\r\n    streaming=True,\r\n    callbacks=[StreamingStdOutCallbackHandler()]\r\n)\r\n\r\nlong_llm = ChatOpenAI(\r\n    deployment_id=DEPLOYMENT_NAME_GPT_4_8K,\r\n    engine=DEPLOYMENT_NAME_GPT_4_8K,\r\n    model_name=model_gpt_4_8k,\r\n    temperature=0,\r\n    openai_api_base=BASE_URL,\r\n    openai_api_key=API_KEY,\r\n    streaming=True,\r\n    callbacks=[StreamingStdOutCallbackHandler()]\r\n)\r\n\r\nchat_llm = short_llm.with_fallbacks([long_llm])\r\n```\r\n\r\nAnd to create the agent:\r\n\r\n`agent_executor = create_conversational_retrieval_agent(chat_llm, tools, verbose=True, sytem_message=system_prompt, remember_intermediate_steps=False)`\n\n### Expected behavior\n\nConversational retrieval agents should be able to work with fallbacks.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10852/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10852/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10851",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10851/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10851/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10851/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10851",
        "id": 1905420462,
        "node_id": "PR_kwDOIPDwls5azqJm",
        "number": 10851,
        "title": "bump exp 19",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T17:17:45Z",
        "updated_at": "2023-09-20T17:17:55Z",
        "closed_at": "2023-09-20T17:17:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10851",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10851",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10851.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10851.patch",
            "merged_at": "2023-09-20T17:17:52Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10851/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10851/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10850",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10850/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10850/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10850/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10850",
        "id": 1905420396,
        "node_id": "PR_kwDOIPDwls5azqIt",
        "number": 10850,
        "title": "add lcel how to index",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T17:17:43Z",
        "updated_at": "2023-09-20T17:19:44Z",
        "closed_at": "2023-09-20T17:19:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10850",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10850",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10850.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10850.patch",
            "merged_at": "2023-09-20T17:19:43Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10850/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10850/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10849",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10849/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10849/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10849/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10849",
        "id": 1905383407,
        "node_id": "I_kwDOIPDwls5xkdfv",
        "number": 10849,
        "title": "Issue: running integration tests",
        "user": {
            "login": "EhsanH19",
            "id": 121943503,
            "node_id": "U_kgDOB0S1zw",
            "avatar_url": "https://avatars.githubusercontent.com/u/121943503?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EhsanH19",
            "html_url": "https://github.com/EhsanH19",
            "followers_url": "https://api.github.com/users/EhsanH19/followers",
            "following_url": "https://api.github.com/users/EhsanH19/following{/other_user}",
            "gists_url": "https://api.github.com/users/EhsanH19/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EhsanH19/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EhsanH19/subscriptions",
            "organizations_url": "https://api.github.com/users/EhsanH19/orgs",
            "repos_url": "https://api.github.com/users/EhsanH19/repos",
            "events_url": "https://api.github.com/users/EhsanH19/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EhsanH19/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T16:50:05Z",
        "updated_at": "2023-09-21T11:13:05Z",
        "closed_at": "2023-09-21T11:13:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### integration tests.\r\n\r\nI have tried to follow the readme in langchain/tests to run the integration tests but got these errors : \r\n\r\n`ModuleNotFoundError: No module named 'qdrant_client'`\r\n\r\nUsing poetry with python version = 3.10\r\n\r\nI already tried the `poetry install` and` poetry install --with test_integration` but does't helped. The readme seems don't have much information around this and couldn't find any document that what is guideline to run the integration tests.\r\nThe unit tests are running fine.\r\nIs it maybe something wrong with my env or I might missing a step before running integration tests? \r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10849/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10849/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10848",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10848/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10848/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10848/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10848",
        "id": 1905382623,
        "node_id": "I_kwDOIPDwls5xkdTf",
        "number": 10848,
        "title": "ValueError: The following `model_kwargs` are not used by the model while running Microsoft/Phi-1.5 using HuggingFacePipeline ",
        "user": {
            "login": "iamknownstranger",
            "id": 47244469,
            "node_id": "MDQ6VXNlcjQ3MjQ0NDY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/47244469?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iamknownstranger",
            "html_url": "https://github.com/iamknownstranger",
            "followers_url": "https://api.github.com/users/iamknownstranger/followers",
            "following_url": "https://api.github.com/users/iamknownstranger/following{/other_user}",
            "gists_url": "https://api.github.com/users/iamknownstranger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iamknownstranger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iamknownstranger/subscriptions",
            "organizations_url": "https://api.github.com/users/iamknownstranger/orgs",
            "repos_url": "https://api.github.com/users/iamknownstranger/repos",
            "events_url": "https://api.github.com/users/iamknownstranger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iamknownstranger/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-20T16:49:29Z",
        "updated_at": "2023-09-20T19:38:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nPython                      3.9.18\r\nlangchain                 0.0.292\r\ntransformers            4.33.2\r\ntorch                         2.0.1\r\nos                              macOs Ventura 13.5.2\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\nfrom transformers import pipeline\r\nfrom langchain import PromptTemplate\r\nfrom langchain.llms.huggingface_pipeline import HuggingFacePipeline\r\nfrom transformers import AutoModelForCausalLM, AutoTokenizer\r\nfrom langchain.chains import LLMChain\r\n\r\nmodel = AutoModelForCausalLM.from_pretrained(\"microsoft/phi-1_5\",\r\n                                             trust_remote_code=True)\r\n\r\ntokenizer = AutoTokenizer.from_pretrained(\r\n    \"microsoft/phi-1_5\", trust_remote_code=True, use_cache=True, return_attention_mask=False)\r\n\r\nquestion = \"Who won the FIFA World Cup in the year 1994? \"\r\n\r\ntemplate = \"\"\"Question: {question}\r\n\r\nAnswer: Let's think step by step.\"\"\"\r\n\r\nprompt = PromptTemplate(template=template, input_variables=[\"question\"])\r\n\r\n# llm_pipeline = HuggingFacePipeline(pipeline=generate)\r\n\r\npipe = pipeline(\"text-generation\", model=model, tokenizer=tokenizer)\r\nllm_pipeline = HuggingFacePipeline(pipeline=pipe)\r\ngenerator_chain = LLMChain(llm=llm_pipeline, prompt=prompt)\r\ngenerator_outputs = generator_chain.run(question)\r\n\r\nprint(generator_outputs)\r\n```\r\n\r\nValueError: The following `model_kwargs` are not used by the model: ['attention_mask'] (note: typos in the generate arguments will also show up in this list)\n\n### Expected behavior\n\nReturn the response from the model",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10848/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10848/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10847",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10847/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10847/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10847/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10847",
        "id": 1905374275,
        "node_id": "PR_kwDOIPDwls5azgMK",
        "number": 10847,
        "title": "improvement: Remove custom SingleStoreDBRetriever",
        "user": {
            "login": "volodymyr-memsql",
            "id": 57520563,
            "node_id": "MDQ6VXNlcjU3NTIwNTYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/57520563?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/volodymyr-memsql",
            "html_url": "https://github.com/volodymyr-memsql",
            "followers_url": "https://api.github.com/users/volodymyr-memsql/followers",
            "following_url": "https://api.github.com/users/volodymyr-memsql/following{/other_user}",
            "gists_url": "https://api.github.com/users/volodymyr-memsql/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/volodymyr-memsql/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/volodymyr-memsql/subscriptions",
            "organizations_url": "https://api.github.com/users/volodymyr-memsql/orgs",
            "repos_url": "https://api.github.com/users/volodymyr-memsql/repos",
            "events_url": "https://api.github.com/users/volodymyr-memsql/events{/privacy}",
            "received_events_url": "https://api.github.com/users/volodymyr-memsql/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-20T16:43:18Z",
        "updated_at": "2023-10-17T10:33:54Z",
        "closed_at": "2023-10-12T11:55:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10847",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10847",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10847.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10847.patch",
            "merged_at": null
        },
        "body": "The SingleStoreDB vector store does not need custom logic for the retriever, so the logic from the base class should be used.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10847/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10847/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10846",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10846/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10846/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10846/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10846",
        "id": 1905299382,
        "node_id": "PR_kwDOIPDwls5azP4Y",
        "number": 10846,
        "title": "Improvements to llm/deepinfra",
        "user": {
            "login": "ichernev",
            "id": 757060,
            "node_id": "MDQ6VXNlcjc1NzA2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/757060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ichernev",
            "html_url": "https://github.com/ichernev",
            "followers_url": "https://api.github.com/users/ichernev/followers",
            "following_url": "https://api.github.com/users/ichernev/following{/other_user}",
            "gists_url": "https://api.github.com/users/ichernev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ichernev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ichernev/subscriptions",
            "organizations_url": "https://api.github.com/users/ichernev/orgs",
            "repos_url": "https://api.github.com/users/ichernev/repos",
            "events_url": "https://api.github.com/users/ichernev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ichernev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-09-20T15:57:20Z",
        "updated_at": "2023-10-24T16:54:24Z",
        "closed_at": "2023-10-24T16:54:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10846",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10846",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10846.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10846.patch",
            "merged_at": "2023-10-24T16:54:24Z"
        },
        "body": "- replace `requests` package with `langchain.requests`\r\n- add `_acall` support\r\n- add `_stream` and `_astream`\r\n- freshen up the documentation a bit\r\n- update vendor doc",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10846/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10846/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10845",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10845/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10845/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10845/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10845",
        "id": 1905289849,
        "node_id": "PR_kwDOIPDwls5azNzl",
        "number": 10845,
        "title": "doc: update the openai_function_agent document",
        "user": {
            "login": "DayuanJiang",
            "id": 34411969,
            "node_id": "MDQ6VXNlcjM0NDExOTY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/34411969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DayuanJiang",
            "html_url": "https://github.com/DayuanJiang",
            "followers_url": "https://api.github.com/users/DayuanJiang/followers",
            "following_url": "https://api.github.com/users/DayuanJiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/DayuanJiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DayuanJiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DayuanJiang/subscriptions",
            "organizations_url": "https://api.github.com/users/DayuanJiang/orgs",
            "repos_url": "https://api.github.com/users/DayuanJiang/repos",
            "events_url": "https://api.github.com/users/DayuanJiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DayuanJiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "baskaryan",
                "id": 22008038,
                "node_id": "MDQ6VXNlcjIyMDA4MDM4",
                "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/baskaryan",
                "html_url": "https://github.com/baskaryan",
                "followers_url": "https://api.github.com/users/baskaryan/followers",
                "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
                "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
                "organizations_url": "https://api.github.com/users/baskaryan/orgs",
                "repos_url": "https://api.github.com/users/baskaryan/repos",
                "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/baskaryan/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-09-20T15:51:51Z",
        "updated_at": "2023-11-03T01:32:27Z",
        "closed_at": "2023-11-03T01:32:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10845",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10845",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10845.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10845.patch",
            "merged_at": null
        },
        "body": "  - **Description:** This pull request updates the openai_function_agent document. The update enhances the document in three significant ways:\r\n    - Firstly, it eliminates imports that lead to import errors such as `langchain_experimental`.\r\n    - Secondly, it initializes the agent by directly calling the `OpenAIFunctionsAgent`, instead of using the less intuitive `initialize_agent`.\r\n    - Lastly, it substitutes the tools with those that don't require additional external services, simplifying the process for users to reproduce the notebook.\r\n  - **Tag maintainer:** @baskaryan \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10845/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10845/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10844",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10844/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10844/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10844/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10844",
        "id": 1905287813,
        "node_id": "I_kwDOIPDwls5xkGKF",
        "number": 10844,
        "title": "Installing from source (pip install -e .) fails with multiple top-level packags found",
        "user": {
            "login": "ichernev",
            "id": 757060,
            "node_id": "MDQ6VXNlcjc1NzA2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/757060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ichernev",
            "html_url": "https://github.com/ichernev",
            "followers_url": "https://api.github.com/users/ichernev/followers",
            "following_url": "https://api.github.com/users/ichernev/following{/other_user}",
            "gists_url": "https://api.github.com/users/ichernev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ichernev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ichernev/subscriptions",
            "organizations_url": "https://api.github.com/users/ichernev/orgs",
            "repos_url": "https://api.github.com/users/ichernev/repos",
            "events_url": "https://api.github.com/users/ichernev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ichernev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-20T15:51:04Z",
        "updated_at": "2023-11-07T16:42:53Z",
        "closed_at": "2023-09-20T16:08:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLinux, Python 3.11.5\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n1. `python -m venv .venv`\r\n2. `. .venv/bin/activate`\r\n3. `pip install -e .`\r\n\r\n### Expected behavior\r\n\r\nTo install package in a local virtualenv.\r\n\r\nWhat happens:\r\n```\r\n% pip install -e .  \r\nObtaining file:///home/iskren/src/deepinfra/libs/langchain\r\n  Installing build dependencies ... done\r\n  Checking if build backend supports build_editable ... done\r\n  Getting requirements to build editable ... error\r\n  error: subprocess-exited-with-error\r\n  \r\n  \u00d7 Getting requirements to build editable did not run successfully.\r\n  \u2502 exit code: 1\r\n  \u2570\u2500> [14 lines of output]\r\n      error: Multiple top-level packages discovered in a flat-layout: ['libs', 'langchain'].\r\n      \r\n      To avoid accidental inclusion of unwanted files or directories,\r\n      setuptools will not proceed with this build.\r\n      \r\n      If you are trying to create a single distribution with multiple packages\r\n      on purpose, you should not rely on automatic discovery.\r\n      Instead, consider the following options:\r\n      \r\n      1. set up custom discovery (`find` directive with `include` or `exclude`)\r\n      2. use a `src-layout`\r\n      3. explicitly set `py_modules` or `packages` with a list of names\r\n      \r\n      To find more information, look for \"package discovery\" on setuptools docs.\r\n      [end of output]\r\n  \r\n  note: This error originates from a subprocess, and is likely not a problem with pip.\r\nerror: subprocess-exited-with-error\r\n\r\n\u00d7 Getting requirements to build editable did not run successfully.\r\n\u2502 exit code: 1\r\n\u2570\u2500> See above for output.\r\n\r\nnote: This error originates from a subprocess, and is likely not a problem with pip.\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10844/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10844/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10843",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10843/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10843/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10843/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10843",
        "id": 1905267140,
        "node_id": "PR_kwDOIPDwls5azIzV",
        "number": 10843,
        "title": "Update base.py",
        "user": {
            "login": "dbolser",
            "id": 128659,
            "node_id": "MDQ6VXNlcjEyODY1OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/128659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dbolser",
            "html_url": "https://github.com/dbolser",
            "followers_url": "https://api.github.com/users/dbolser/followers",
            "following_url": "https://api.github.com/users/dbolser/following{/other_user}",
            "gists_url": "https://api.github.com/users/dbolser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dbolser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dbolser/subscriptions",
            "organizations_url": "https://api.github.com/users/dbolser/orgs",
            "repos_url": "https://api.github.com/users/dbolser/repos",
            "events_url": "https://api.github.com/users/dbolser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dbolser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T15:40:15Z",
        "updated_at": "2023-09-27T18:15:58Z",
        "closed_at": "2023-09-27T18:15:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10843",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10843",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10843.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10843.patch",
            "merged_at": "2023-09-27T18:15:58Z"
        },
        "body": "Fixing a typo in the example code in the docstring...\r\n\r\nYou have to start somewhere though right?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10843/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10843/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10842",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10842/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10842/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10842/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10842",
        "id": 1905236319,
        "node_id": "PR_kwDOIPDwls5azB-K",
        "number": 10842,
        "title": "bump 296",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T15:25:00Z",
        "updated_at": "2023-09-20T15:31:16Z",
        "closed_at": "2023-09-20T15:31:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10842",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10842",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10842.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10842.patch",
            "merged_at": "2023-09-20T15:31:15Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10842/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10842/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10841",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10841/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10841/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10841/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10841",
        "id": 1905168973,
        "node_id": "I_kwDOIPDwls5xjpJN",
        "number": 10841,
        "title": "Directory loader does not extract text between <strong> </strong> tags in HTML",
        "user": {
            "login": "rajib76",
            "id": 16340036,
            "node_id": "MDQ6VXNlcjE2MzQwMDM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16340036?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rajib76",
            "html_url": "https://github.com/rajib76",
            "followers_url": "https://api.github.com/users/rajib76/followers",
            "following_url": "https://api.github.com/users/rajib76/following{/other_user}",
            "gists_url": "https://api.github.com/users/rajib76/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rajib76/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rajib76/subscriptions",
            "organizations_url": "https://api.github.com/users/rajib76/orgs",
            "repos_url": "https://api.github.com/users/rajib76/repos",
            "events_url": "https://api.github.com/users/rajib76/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rajib76/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-20T14:50:31Z",
        "updated_at": "2023-11-23T12:36:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLANGCHAIN - 0.0.0286\r\nOS - Windows\r\n\r\n### Who can help?\r\n\r\n@eyurtsev\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nTo reproduce, take a HTML document that has text between STRONG tags of HTML tags and extract using directoryloader\r\n\r\n### Expected behavior\r\n\r\nIt should extract all the text from HTML",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10841/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10841/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10840",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10840/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10840/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10840/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10840",
        "id": 1905102656,
        "node_id": "I_kwDOIPDwls5xjY9A",
        "number": 10840,
        "title": "Confused behavior of CharacterTextSplitter with regex",
        "user": {
            "login": "npuichigo",
            "id": 11533479,
            "node_id": "MDQ6VXNlcjExNTMzNDc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11533479?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/npuichigo",
            "html_url": "https://github.com/npuichigo",
            "followers_url": "https://api.github.com/users/npuichigo/followers",
            "following_url": "https://api.github.com/users/npuichigo/following{/other_user}",
            "gists_url": "https://api.github.com/users/npuichigo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/npuichigo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/npuichigo/subscriptions",
            "organizations_url": "https://api.github.com/users/npuichigo/orgs",
            "repos_url": "https://api.github.com/users/npuichigo/repos",
            "events_url": "https://api.github.com/users/npuichigo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/npuichigo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-20T14:16:53Z",
        "updated_at": "2023-09-26T03:25:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain=0.0.294\r\npython=3.10\r\n\r\n### Who can help?\r\n\r\n@hwchase17  @agola11 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [X] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```\r\nloader = TextLoader(\"state_of_the_union.txt\")\r\ndocuments = loader.load()\r\n\r\npattern = \"\\.|,|\\n\\n\"\r\ntext_splitter = CharacterTextSplitter(separator=pattern, is_separator_regex=True,\r\n                                      chunk_size=100, chunk_overlap=0,\r\n                                      keep_separator=False)\r\ndocs = text_splitter.split_documents(documents)\r\n\r\nfor doc in docs:\r\n    print(doc.page_content)\r\n```\r\nthe output would be\r\n```\r\n'Madam Speaker\\\\.|,|\\n\\n Madam Vice President\\\\.|,|\\n\\n our First Lady and Second Gentleman'\r\n'Members of Congress and the Cabinet\\\\.|,|\\n\\n Justices of the Supreme Court\\\\.|,|\\n\\n My fellow Americans'\r\n'\\\\.|,|\\n\\nLast year COVID-19 kept us apart\\\\.|,|\\n\\n This year we are finally together again\\\\.|,|'\r\n```\r\nwhich includes my regex expression. I even set keep_seperator=False.\r\n\r\nwith keep_seperator=True, the seperator become the leading character, which is still stange.\r\n```\r\n'Madam Speaker, Madam Vice President, our First Lady and Second Gentleman'\r\n'. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.'\r\n'Last year COVID-19 kept us apart. This year we are finally together again.'\r\n```\r\n\r\n### Expected behavior\r\n\r\n```\r\n'Madam Speaker, Madam Vice President, our First Lady and Second Gentleman.'\r\n'Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.'\r\n'Last year COVID-19 kept us apart. This year we are finally together again.'\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10840/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10840/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10839",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10839/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10839/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10839/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10839",
        "id": 1905089020,
        "node_id": "PR_kwDOIPDwls5ayiBA",
        "number": 10839,
        "title": "remove get_schema method from Neo4jGraph class",
        "user": {
            "login": "DayuanJiang",
            "id": 34411969,
            "node_id": "MDQ6VXNlcjM0NDExOTY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/34411969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DayuanJiang",
            "html_url": "https://github.com/DayuanJiang",
            "followers_url": "https://api.github.com/users/DayuanJiang/followers",
            "following_url": "https://api.github.com/users/DayuanJiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/DayuanJiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DayuanJiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DayuanJiang/subscriptions",
            "organizations_url": "https://api.github.com/users/DayuanJiang/orgs",
            "repos_url": "https://api.github.com/users/DayuanJiang/repos",
            "events_url": "https://api.github.com/users/DayuanJiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DayuanJiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-09-20T14:09:56Z",
        "updated_at": "2023-09-21T07:55:44Z",
        "closed_at": "2023-09-21T07:55:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10839",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10839",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10839.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10839.patch",
            "merged_at": null
        },
        "body": "  - **Description:** Remove get_schema method from Neo4jGraph. A property should not be named **get**_schema, and We can just use `self.schema` to get access the schema.\r\n  - **Tag maintainer:** @baskaryan (I am sorry but the relevant maintainer are not showed in default pull request message)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10839/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10839/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10837",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10837/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10837/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10837/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10837",
        "id": 1904926280,
        "node_id": "PR_kwDOIPDwls5ax-4g",
        "number": 10837,
        "title": "Fix PyMUPDFLoader kwargs",
        "user": {
            "login": "ashish-dahal",
            "id": 35001414,
            "node_id": "MDQ6VXNlcjM1MDAxNDE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35001414?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ashish-dahal",
            "html_url": "https://github.com/ashish-dahal",
            "followers_url": "https://api.github.com/users/ashish-dahal/followers",
            "following_url": "https://api.github.com/users/ashish-dahal/following{/other_user}",
            "gists_url": "https://api.github.com/users/ashish-dahal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ashish-dahal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ashish-dahal/subscriptions",
            "organizations_url": "https://api.github.com/users/ashish-dahal/orgs",
            "repos_url": "https://api.github.com/users/ashish-dahal/repos",
            "events_url": "https://api.github.com/users/ashish-dahal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ashish-dahal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T12:49:02Z",
        "updated_at": "2023-10-05T12:56:30Z",
        "closed_at": "2023-10-05T12:56:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10837",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10837",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10837.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10837.patch",
            "merged_at": null
        },
        "body": "- **Description:**  Fix the `PyMuPDFLoader` to accept `loader_kwargs` from the document loader's `loader_kwargs` option. This provides more flexibility in formatting the output documents.\n\n- **Issue:**  The `loader_kwargs` is not passed into the `load` method from the document loader, which limits configuration options.\n\n- **Dependencies:**  None\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10837/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10837/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10836",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10836/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10836/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10836/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10836",
        "id": 1904823416,
        "node_id": "I_kwDOIPDwls5xiUx4",
        "number": 10836,
        "title": "below code is not able to show grpahs at frontend , rather it returns code ,",
        "user": {
            "login": "astro-siddhesh",
            "id": 118797304,
            "node_id": "U_kgDOBxSz-A",
            "avatar_url": "https://avatars.githubusercontent.com/u/118797304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/astro-siddhesh",
            "html_url": "https://github.com/astro-siddhesh",
            "followers_url": "https://api.github.com/users/astro-siddhesh/followers",
            "following_url": "https://api.github.com/users/astro-siddhesh/following{/other_user}",
            "gists_url": "https://api.github.com/users/astro-siddhesh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/astro-siddhesh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/astro-siddhesh/subscriptions",
            "organizations_url": "https://api.github.com/users/astro-siddhesh/orgs",
            "repos_url": "https://api.github.com/users/astro-siddhesh/repos",
            "events_url": "https://api.github.com/users/astro-siddhesh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/astro-siddhesh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T11:52:08Z",
        "updated_at": "2023-09-20T12:00:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Discussed in https://github.com/langchain-ai/langchain/discussions/10835\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **astro-siddhesh** September 20, 2023</sup>\r\nimport pandas as pd\r\nimport streamlit as st\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.agents.agent_toolkits import create_pandas_dataframe_agent\r\nfrom langchain.agents.agent_types import AgentType\r\n\r\ndf = pd.read_csv('/Users/siddheshphapale/Desktop/project/sqlcsv.csv')\r\n\r\n\r\nllm = ChatOpenAI(openai_api_key= \"my key\" , temperature=0 ,max_tokens= 500 , verbose= False)\r\nagent = create_pandas_dataframe_agent(llm, df, agent_type=AgentType.OPENAI_FUNCTIONS)\r\n\r\n\r\nfrom langsmith import Client\r\nclient = Client()\r\ndef send_feedback(run_id, score):\r\n    client.create_feedback(run_id, \"user_score\", score=score)\r\n\r\nst.set_page_config(page_title='\ud83e\udd9c\ud83d\udd17 Ask the CSV App')\r\nst.title('\ud83e\udd9c\ud83d\udd17 Ask the CSV App')\r\nquery_text = st.text_input('Enter your question:', placeholder = 'Who was in cabin C128?')\r\n# Form input and query\r\nresult = None\r\nwith st.form('myform', clear_on_submit=True):\r\n\tsubmitted = st.form_submit_button('Submit')\r\n\tif submitted:\r\n\t\twith st.spinner('Calculating...'):\r\n\t\t\tresponse = agent({\"input\": query_text}, include_run_info=True)\r\n\t\t\tresult = response[\"output\"]\r\n\t\t\trun_id = response[\"__run\"].run_id\r\nif result is not None:\r\n\tst.info(result)\r\n\tcol_blank, col_text, col1, col2 = st.columns([10, 2,1,1])\r\n\twith col_text:\r\n\t\tst.text(\"Feedback:\")\r\n\twith col1:\r\n\t\tst.button(\"\ud83d\udc4d\", on_click=send_feedback, args=(run_id, 1))\r\n\twith col2:\r\n\t\tst.button(\"\ud83d\udc4e\", on_click=send_feedback, args=(run_id, 0))\r\n\r\n<img width=\"600\" alt=\"Screenshot 2023-09-20 at 5 21 38 PM\" src=\"https://github.com/langchain-ai/langchain/assets/118797304/536155f7-fb12-4fa2-8dc8-80aea70e7389\">\r\n</div>",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10836/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10836/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10834",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10834/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10834/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10834/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10834",
        "id": 1904777227,
        "node_id": "I_kwDOIPDwls5xiJgL",
        "number": 10834,
        "title": "how to use LongContextReorder with RetrievalQAChain ",
        "user": {
            "login": "imhager",
            "id": 7991405,
            "node_id": "MDQ6VXNlcjc5OTE0MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7991405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/imhager",
            "html_url": "https://github.com/imhager",
            "followers_url": "https://api.github.com/users/imhager/followers",
            "following_url": "https://api.github.com/users/imhager/following{/other_user}",
            "gists_url": "https://api.github.com/users/imhager/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/imhager/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/imhager/subscriptions",
            "organizations_url": "https://api.github.com/users/imhager/orgs",
            "repos_url": "https://api.github.com/users/imhager/repos",
            "events_url": "https://api.github.com/users/imhager/events{/privacy}",
            "received_events_url": "https://api.github.com/users/imhager/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-09-20T11:22:57Z",
        "updated_at": "2023-11-08T07:51:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nin  docs\uff0chas a simple demo to use LongContextReorder to reorder docs.\r\nbut ,if i want use it with RetrievalQAChain ,how can i use it. thx\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10834/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10834/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10833",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10833/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10833/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10833/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10833",
        "id": 1904764017,
        "node_id": "I_kwDOIPDwls5xiGRx",
        "number": 10833,
        "title": "LLMSingleActionAgent mixes up tools",
        "user": {
            "login": "Daniel199438",
            "id": 16019073,
            "node_id": "MDQ6VXNlcjE2MDE5MDcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/16019073?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Daniel199438",
            "html_url": "https://github.com/Daniel199438",
            "followers_url": "https://api.github.com/users/Daniel199438/followers",
            "following_url": "https://api.github.com/users/Daniel199438/following{/other_user}",
            "gists_url": "https://api.github.com/users/Daniel199438/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Daniel199438/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Daniel199438/subscriptions",
            "organizations_url": "https://api.github.com/users/Daniel199438/orgs",
            "repos_url": "https://api.github.com/users/Daniel199438/repos",
            "events_url": "https://api.github.com/users/Daniel199438/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Daniel199438/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-20T11:14:36Z",
        "updated_at": "2023-10-18T15:11:47Z",
        "closed_at": "2023-10-18T15:11:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nMy systeminfo:\r\n\r\nlangchain 0.0.295\r\nPython 3.11\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThat is my code where I set up my agent with custom tools, each tool has a name, description and access to a specific vector store with a collection name. \r\n\r\n```python\r\ndef process_prompt(user_prompt: str, session_id=\"allgemein\", debug=False):\r\n    openai.api_key = config.openai_api_key\r\n\r\n    llm = ChatOpenAI(temperature=0, model=\"gpt-3.5-turbo-16k\", max_tokens=4096)\r\n    service_context = ServiceContext.from_defaults(llm=llm)\r\n\r\n    used_tools = []\r\n\r\n    for tool in tools_to_use:\r\n        vector_store = get_vector_store(tool.get(\"collection\"))\r\n        index = VectorStoreIndex.from_vector_store(vector_store=vector_store, service_context=service_context)\r\n\r\n        filters = None\r\n\r\n        vector_store_info = VectorStoreInfo(\r\n            content_info=tool.get(\"description\"),\r\n            metadata_info=[] \r\n        )\r\n        retriever = VectorIndexAutoRetriever(index, vector_store_info=vector_store_info)\r\n\r\n        used_tools.append(\r\n            Tool(\r\n                name=tool.get(\"name\"),\r\n                description=tool.get(\"description\"),\r\n                return_direct=tool.get(\"return_direct\"),\r\n                func=lambda q: str(retriever.retrieve(q)),\r\n            )\r\n        )\r\n\r\n    message_history = PostgresChatMessageHistory(\r\n        connection_string=f\"postgresql://postgres:{config.postgres}, session_id=session_id, table_name=\"chat_history\",\r\n    )\r\n\r\n    memory = ConversationBufferMemory(\r\n        memory_key=\"chat_history\", chat_memory=message_history\r\n    )\r\n\r\n    prompt = PromptTemplate(input_variables=[\"input\", \"chat_history\"], template=summary_prompt_template)\r\n\r\n    summary_chain = LLMChain(\r\n        llm=llm,\r\n        prompt=prompt,\r\n        verbose=True,\r\n        memory=memory,  # <--- this is the only change\r\n    )\r\n\r\n    used_tools.append(\r\n        Tool(\r\n            name=\"Summary Tool\",\r\n            description=\"useful for retrieving memory summaries\",\r\n            func=summary_chain.run,\r\n        )\r\n    )\r\n\r\n    prompt = CustomPromptTemplate(template=get_prompt_template(), tools=used_tools,\r\n                                  input_variables=[\"input\", \"intermediate_steps\", \"chat_history\"])\r\n\r\n    output_parser = CustomOutputParser()\r\n\r\n    llm_chain = LLMChain(llm=llm, prompt=prompt)\r\n\r\n    tool_names = [tool.name for tool in used_tools]\r\n\r\n    agent = LLMSingleActionAgent(\r\n        llm_chain=llm_chain,\r\n        output_parser=output_parser,\r\n        stop=[\"\\nObservation:\"],  #\r\n        allowed_tools=tool_names,\r\n        handle_parsing_errors=True,\r\n    )\r\n\r\n    agent_executor = AgentExecutor.from_agent_and_tools(agent=agent, tools=used_tools, verbose=debug,\r\n                                                        memory=memory, return_intermediate_steps=False)\r\n                                                        \r\n    response = agent_executor.run(user_prompt)                                                   \r\n``` \r\n\r\nHere is my code for my custom prompt template and output parser:\r\n```python\r\nclass CustomPromptTemplate(BaseChatPromptTemplate):\r\n    template: str\r\n    tools: List[Tool]\r\n\r\n    def format_messages(self, **kwargs) -> list[HumanMessage]:\r\n        # Get the intermediate steps (AgentAction, Observation tuples)\r\n        # Format them in a particular way\r\n        intermediate_steps = kwargs.pop(\"intermediate_steps\")\r\n\r\n        thoughts = \"\"\r\n        for action, observation in intermediate_steps:\r\n            thoughts += action.log\r\n            thoughts += f\"\\nObservation: {observation}\\nThought: \"\r\n        # Set the agent_scratchpad variable to that value\r\n        kwargs[\"agent_scratchpad\"] = thoughts\r\n        # print(thoughts)\r\n\r\n        # Create a tools variable from the list of tools provided\r\n        kwargs[\"tools\"] = \"\\n\".join([f\"{tool.name}: {tool.description}\" for tool in self.tools])\r\n        # Create a list of tool names for the tools provided\r\n        kwargs[\"tool_names\"] = \", \".join([tool.name for tool in self.tools])\r\n        formatted = self.template.format(**kwargs)\r\n\t\t\r\n        return [HumanMessage(content=formatted)]\r\n\r\n\r\nclass CustomOutputParser(AgentOutputParser):\r\n\r\n    def parse(self, llm_output: str) -> Union[AgentAction, AgentFinish]:\r\n        # Check if agent should finish\r\n        if \"Final Answer:\" in llm_output:\r\n            # print(llm_output)\r\n            return AgentFinish(\r\n                # Return values is generally always a dictionary with a single `output` key\r\n                # It is not recommended to try anything else at the moment :)\r\n                return_values={\"output\": llm_output.split(\"Final Answer:\")[-1]},  \r\n                log=llm_output,\r\n            )\r\n        # Parse out the action and action input\r\n        regex = r\"Action\\s*\\d*\\s*:(.*?)\\nAction\\s*\\d*\\s*Input\\s*\\d*\\s*:[\\s]*(.*)\"\r\n        match = re.search(regex, llm_output, re.DOTALL)\r\n        if match:\r\n            action = match.group(1).strip()\r\n            action_input = match.group(2)\r\n            # Return the action and action input\r\n\r\n            return AgentAction(tool=action, tool_input=action_input.strip(\" \").strip('\"'), log=llm_output)\r\n        else:\r\n            # raise ValueError(f\"Could not parse output: {llm_output}\")\r\n            return AgentFinish(return_values={\"output\": llm_output.split(\"Thought:\")[-1]}, log=llm_output)\r\n\r\n``` \r\n\r\n\n\n### Expected behavior\n\nThe agent should use exactly the tool what is defined in the action, Instead he always writes:\r\n\r\nExample:\r\n```\r\naction: Notion Tool\r\nInput Action: [some input]\r\nThought: I use the Notion Tool to retrieve some information about the input.\r\n....\r\n``` \r\nBut when I print the agent_scratchpad it shows that he retrieved information from an other Tool instead of that what he uses.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10833/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10833/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10832",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10832/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10832/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10832/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10832",
        "id": 1904680537,
        "node_id": "I_kwDOIPDwls5xhx5Z",
        "number": 10832,
        "title": "PyPDF2 used in Google Drive loader has vulnerability issues",
        "user": {
            "login": "joe-barhouch",
            "id": 17459005,
            "node_id": "MDQ6VXNlcjE3NDU5MDA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/17459005?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joe-barhouch",
            "html_url": "https://github.com/joe-barhouch",
            "followers_url": "https://api.github.com/users/joe-barhouch/followers",
            "following_url": "https://api.github.com/users/joe-barhouch/following{/other_user}",
            "gists_url": "https://api.github.com/users/joe-barhouch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joe-barhouch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joe-barhouch/subscriptions",
            "organizations_url": "https://api.github.com/users/joe-barhouch/orgs",
            "repos_url": "https://api.github.com/users/joe-barhouch/repos",
            "events_url": "https://api.github.com/users/joe-barhouch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joe-barhouch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-20T10:26:26Z",
        "updated_at": "2023-09-20T18:10:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nThe GoogleDrive loader currently uses the PyPDF2 library instead of the PyPDF. \r\nSince PyPDF2 was already merged to the original one, it shouldn't be used anymore. \r\n[https://data.safetycli.com/v/59234/f17/?utm_source=pyupio&utm_medium=redirect&utm_campaign=pyup_rd&utm_id=081](url)\r\nThis is the vulnerability issue that gets picked up, note that it is fixed in PyPDF\r\n\r\nAlso I tried to change the loader using `file_loader_cls` but it just doesn't work \r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nNo functionality issue but https://data.safetycli.com/v/59234/f17/?utm_source=pyupio&utm_medium=redirect&utm_campaign=pyup_rd&utm_id=0817&utm_content=data showcases the bug\n\n### Expected behavior\n\nThis error should not pop up",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10832/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10832/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10831",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10831/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10831/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10831/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10831",
        "id": 1904666457,
        "node_id": "I_kwDOIPDwls5xhudZ",
        "number": 10831,
        "title": "Issue: use QianfanChatEndpoint and RetrievalQA Error",
        "user": {
            "login": "liye199033",
            "id": 131761099,
            "node_id": "U_kgDOB9qDyw",
            "avatar_url": "https://avatars.githubusercontent.com/u/131761099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liye199033",
            "html_url": "https://github.com/liye199033",
            "followers_url": "https://api.github.com/users/liye199033/followers",
            "following_url": "https://api.github.com/users/liye199033/following{/other_user}",
            "gists_url": "https://api.github.com/users/liye199033/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liye199033/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liye199033/subscriptions",
            "organizations_url": "https://api.github.com/users/liye199033/orgs",
            "repos_url": "https://api.github.com/users/liye199033/repos",
            "events_url": "https://api.github.com/users/liye199033/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liye199033/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-20T10:18:23Z",
        "updated_at": "2023-09-25T16:04:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n`\r\nllm = QianfanChatEndpoint(\r\n    model=\"ChatGLM2-6B-32K\",\r\n    qianfan_ak=\"xxx\",\r\n    qianfan_sk=\"xxx\"\r\n)\r\n\r\nembedding = ErnieEmbeddings(\r\n  qianfan_ak=\"xxx\",\r\n  qianfan_sk=\"xxx\"\r\n)\r\ndb = Chroma.from_documents(texts, embedding)\r\nretriever = db.as_retriever()\r\n\r\nqa = RetrievalQA.from_chain_type(llm=llm, chain_type=\"stuff\", retriever=retriever)\r\n\r\nqa.run(\"\u8bf7\u95ee\u4e8b\u9879\u7684\u540d\u79f0\u662f\u4ec0\u4e48\uff1f\")\r\n`\r\n\r\nan error occurred in the above code.\r\n\r\n`\r\nFile \"/Users/xxx/Workspace/xxx/smart_gov_nav/chatbot/venv/lib/python3.11/site-packages/langchain/chat_models/baidu_qianfan_endpoint.py\", line 63, in convert_message_to_dict\r\n    raise TypeError(f\"Got unknown type {message}\")\r\nTypeError: Got unknown type content=\"Use the following pieces of context to answer the users question. \\nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\\n----------------\\n\u529e\u4e8b\u5927\u5385\u540d\u79f0\\n \" additional_kwargs={}\r\n`\r\n\r\nBecause the type of message in the convert_message_to_dict argument is SystemMessage. That's why this error occurred. How to use it correctly?\r\n \n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10831/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10831/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10830",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10830/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10830/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10830/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10830",
        "id": 1904664500,
        "node_id": "PR_kwDOIPDwls5axGGY",
        "number": 10830,
        "title": "Refactor(ernie): support function_call, reimplment ernie_bot with erniebot SDK.",
        "user": {
            "login": "danielhjz",
            "id": 5894042,
            "node_id": "MDQ6VXNlcjU4OTQwNDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5894042?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danielhjz",
            "html_url": "https://github.com/danielhjz",
            "followers_url": "https://api.github.com/users/danielhjz/followers",
            "following_url": "https://api.github.com/users/danielhjz/following{/other_user}",
            "gists_url": "https://api.github.com/users/danielhjz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danielhjz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danielhjz/subscriptions",
            "organizations_url": "https://api.github.com/users/danielhjz/orgs",
            "repos_url": "https://api.github.com/users/danielhjz/repos",
            "events_url": "https://api.github.com/users/danielhjz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danielhjz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-20T10:17:15Z",
        "updated_at": "2023-10-13T11:03:32Z",
        "closed_at": "2023-10-13T11:03:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10830",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10830",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10830.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10830.patch",
            "merged_at": null
        },
        "body": "- **Description:** \r\n    * Introducing the [ERNIE-Bot SDK](https://github.com/PaddlePaddle/ERNIE-Bot-SDK) to refactor the current implementation of Ernie in Langchain\r\n    * Rename ernie.py -> ernie_bot. py, because the usage of `xx-bot` models is only for chat completion generation.\r\n    * Support Function Calling capability in chat_models/ernie_bot.py\r\n    * Add ipynb and test  \r\n- **Issue:** no\r\n- **Dependencies:** no\r\n- **Tag maintainer:** @baskaryan \r\n- **Twitter handle:** no",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10830/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10830/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10829",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10829/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10829/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10829/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10829",
        "id": 1904646977,
        "node_id": "I_kwDOIPDwls5xhptB",
        "number": 10829,
        "title": "Simirality search not working for Conversational Retrieval Agents",
        "user": {
            "login": "binodev",
            "id": 99185039,
            "node_id": "U_kgDOBelxjw",
            "avatar_url": "https://avatars.githubusercontent.com/u/99185039?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/binodev",
            "html_url": "https://github.com/binodev",
            "followers_url": "https://api.github.com/users/binodev/followers",
            "following_url": "https://api.github.com/users/binodev/following{/other_user}",
            "gists_url": "https://api.github.com/users/binodev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/binodev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/binodev/subscriptions",
            "organizations_url": "https://api.github.com/users/binodev/orgs",
            "repos_url": "https://api.github.com/users/binodev/repos",
            "events_url": "https://api.github.com/users/binodev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/binodev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-20T10:06:42Z",
        "updated_at": "2023-09-20T10:21:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHello! I'm using Conversational Retrieval Agents in a Nodejs environment with Faiss vectorStore. The problem is that the agent does not search for simurality. Vectors are normally well created and saved in a folder by Faiss.\r\nIt should be noted that the chatbot communicates well but does not take vectors into account.\r\n\r\nHere are the snippets of my code : \r\n\r\n**creation and export of the chain**\r\n\r\n`const llm = new ChatOpenAI({\r\n  temperature: 0,\r\n  maxTokens: 300,\r\n  modelName: \"gpt-4\"\r\n});\r\nconst memory = new OpenAIAgentTokenBufferMemory({\r\n  llm: llm,\r\n  memoryKey: \"chat_history\",\r\n  returnMessages: true,\r\n  inputKey:\"input\",\r\n  outputKey:\"output\",\r\n});\r\n\r\nconst makeChain = async (vectorstore,basePrompt) => {\r\n  \r\n  const retriever = vectorstore.asRetriever();\r\n\r\nconst tool = createRetrieverTool(retriever, {\r\n  name: \"search_state_of_union\",\r\n  description: \"Searches and returns documents regarding the state-of-the-union.\",\r\n});\r\nconst tools = [tool]\r\n\r\n  const chain = await initializeAgentExecutorWithOptions(tools,llm,{\r\n    verbose: true,\r\n    agentType: \"openai-functions\",\r\n    memory:memory,\r\n    returnIntermediateSteps: true,\r\n    agentArgs: {\r\n      prefix:basePrompt +` `+`Do your best to answer the questions. Feel free to use any tools available to look up relevant information, only if necessary.`,\r\n    },\r\n  });\r\n  return chain;\r\n};\r\n`\r\n**Using of the chain**\r\n\r\n ` const vectorStorePath = process.env.VECTOR_STORE_PATH || path.join(__dirname, '..', 'vectorStore');\r\n                  const directory = path.join(vectorStorePath, chatbot.name);\r\n                      console.log(directory);\r\n                      const vectorStore=await FaissStore.load(\r\n                        directory,\r\n                        new OpenAIEmbeddings()\r\n                      );\r\n                      /**const resultTwo = await vectorStore.similaritySearch(\"nestor\", 1);\r\n                      console.log(resultTwo); */\r\n                      // Sanitize the message\r\n                      const sanitizedMessage = message.trim().replaceAll('\\n', ' ')\r\n                      \r\n                      //create chain\r\n                      const chain = await makeChain(vectorStore, chatbot.basePrompt);\r\n                      //Ask a question using chat history\r\n                      const response = await chain.call({\r\n                        input: sanitizedMessage,\r\n                        chat_history: chatHistory || []\r\n                      });\r\n\r\n`\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n**Create and export the chain**\r\n`const llm = new ChatOpenAI({\r\n  temperature: 0,\r\n  maxTokens: 300,\r\n  modelName: \"gpt-4\"\r\n});\r\nconst memory = new OpenAIAgentTokenBufferMemory({\r\n  llm: llm,\r\n  memoryKey: \"chat_history\",\r\n  returnMessages: true,\r\n  inputKey:\"input\",\r\n  outputKey:\"output\",\r\n});\r\n\r\nconst makeChain = async (vectorstore,basePrompt) => {\r\n  \r\n  const retriever = vectorstore.asRetriever();\r\n\r\nconst tool = createRetrieverTool(retriever, {\r\n  name: \"search_state_of_union\",\r\n  description: \"Searches and returns documents regarding the state-of-the-union.\",\r\n});\r\nconst tools = [tool]\r\n\r\n  const chain = await initializeAgentExecutorWithOptions(tools,llm,{\r\n    verbose: true,\r\n    agentType: \"openai-functions\",\r\n    memory:memory,\r\n    returnIntermediateSteps: true,\r\n    agentArgs: {\r\n      prefix:basePrompt +` `+`Do your best to answer the questions. Feel free to use any tools available to look up relevant information, only if necessary.`,\r\n    },\r\n  });\r\n  return chain;\r\n};\r\n`\r\n**Using of the chain**\r\n\r\n ` const vectorStorePath = process.env.VECTOR_STORE_PATH || path.join(__dirname, '..', 'vectorStore');\r\n                  const directory = path.join(vectorStorePath, chatbot.name);\r\n                      console.log(directory);\r\n                      const vectorStore=await FaissStore.load(\r\n                        directory,\r\n                        new OpenAIEmbeddings()\r\n                      );\r\n                      /**const resultTwo = await vectorStore.similaritySearch(\"nestor\", 1);\r\n                      console.log(resultTwo); */\r\n                      // Sanitize the message\r\n                      const sanitizedMessage = message.trim().replaceAll('\\n', ' ')\r\n                      \r\n                      //create chain\r\n                      const chain = await makeChain(vectorStore, chatbot.basePrompt);\r\n                      //Ask a question using chat history\r\n                      const response = await chain.call({\r\n                        input: sanitizedMessage,\r\n                        chat_history: chatHistory || []\r\n                      });\r\n\r\n`\n\n### Expected behavior\n\nHelp me find a solution",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10829/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10829/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10827",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10827/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10827/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10827/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10827",
        "id": 1904593370,
        "node_id": "PR_kwDOIPDwls5aw2zt",
        "number": 10827,
        "title": "Title\uff1afixed a bug that was causing the streaming transfer to not work\u2026",
        "user": {
            "login": "quantum00549",
            "id": 46469154,
            "node_id": "MDQ6VXNlcjQ2NDY5MTU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/46469154?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/quantum00549",
            "html_url": "https://github.com/quantum00549",
            "followers_url": "https://api.github.com/users/quantum00549/followers",
            "following_url": "https://api.github.com/users/quantum00549/following{/other_user}",
            "gists_url": "https://api.github.com/users/quantum00549/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/quantum00549/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/quantum00549/subscriptions",
            "organizations_url": "https://api.github.com/users/quantum00549/orgs",
            "repos_url": "https://api.github.com/users/quantum00549/repos",
            "events_url": "https://api.github.com/users/quantum00549/events{/privacy}",
            "received_events_url": "https://api.github.com/users/quantum00549/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-20T09:36:28Z",
        "updated_at": "2023-12-02T02:57:51Z",
        "closed_at": "2023-12-02T02:57:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10827",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10827",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10827.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10827.patch",
            "merged_at": "2023-12-02T02:57:51Z"
        },
        "body": "\u2026 properly\r\n\r\nFixed a bug that was causing the streaming transfer to not work properly.\r\n - **Description: \r\n    1\u3001The on_llm_new_token method in the streaming callback can now be called properly in streaming transfer mode. \r\n    2\u3001In streaming transfer mode, LLM can now correctly output the complete response instead of just the first token.\r\n- **Tag maintainer: @wangxuqi \r\n- **Twitter handle: @kGX7XJjuYxzX9Km\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10827/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10827/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10826",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10826/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10826/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10826/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10826",
        "id": 1904528559,
        "node_id": "PR_kwDOIPDwls5awotS",
        "number": 10826,
        "title": "Add ConversationBufferMemory to ConversationalRetrievalChain",
        "user": {
            "login": "imksuma",
            "id": 11550566,
            "node_id": "MDQ6VXNlcjExNTUwNTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11550566?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/imksuma",
            "html_url": "https://github.com/imksuma",
            "followers_url": "https://api.github.com/users/imksuma/followers",
            "following_url": "https://api.github.com/users/imksuma/following{/other_user}",
            "gists_url": "https://api.github.com/users/imksuma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/imksuma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/imksuma/subscriptions",
            "organizations_url": "https://api.github.com/users/imksuma/orgs",
            "repos_url": "https://api.github.com/users/imksuma/repos",
            "events_url": "https://api.github.com/users/imksuma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/imksuma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T09:01:00Z",
        "updated_at": "2023-09-20T09:37:18Z",
        "closed_at": "2023-09-20T09:37:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10826",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10826",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10826.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10826.patch",
            "merged_at": null
        },
        "body": "This should help to add memory buffer directly when create ConversationalRetrievalChain from_llm\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10826/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10826/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10825",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10825/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10825/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10825/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10825",
        "id": 1904479105,
        "node_id": "PR_kwDOIPDwls5awd0a",
        "number": 10825,
        "title": "Use shallow copy on runnable locals",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T08:37:55Z",
        "updated_at": "2023-09-20T15:13:08Z",
        "closed_at": "2023-09-20T15:13:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10825",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10825",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10825.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10825.patch",
            "merged_at": "2023-09-20T15:13:07Z"
        },
        "body": "- deep copy prevents storing complex objects in locals\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10825/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10825/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10824",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10824/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10824/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10824/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10824",
        "id": 1904479098,
        "node_id": "PR_kwDOIPDwls5awd0T",
        "number": 10824,
        "title": "Criteria Parser Improvements",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T08:37:55Z",
        "updated_at": "2023-09-20T18:18:35Z",
        "closed_at": "2023-09-20T18:18:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10824",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10824",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10824.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10824.patch",
            "merged_at": "2023-09-20T18:18:34Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10824/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10824/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10823",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10823/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10823/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10823/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10823",
        "id": 1904423616,
        "node_id": "PR_kwDOIPDwls5awRzG",
        "number": 10823,
        "title": "fix: impl missing embeddings method",
        "user": {
            "login": "sonald",
            "id": 924334,
            "node_id": "MDQ6VXNlcjkyNDMzNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/924334?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sonald",
            "html_url": "https://github.com/sonald",
            "followers_url": "https://api.github.com/users/sonald/followers",
            "following_url": "https://api.github.com/users/sonald/following{/other_user}",
            "gists_url": "https://api.github.com/users/sonald/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sonald/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sonald/subscriptions",
            "organizations_url": "https://api.github.com/users/sonald/orgs",
            "repos_url": "https://api.github.com/users/sonald/repos",
            "events_url": "https://api.github.com/users/sonald/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sonald/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-20T08:10:02Z",
        "updated_at": "2023-10-19T06:51:29Z",
        "closed_at": "2023-10-19T06:51:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10823",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10823",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10823.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10823.patch",
            "merged_at": "2023-10-19T06:51:29Z"
        },
        "body": "FAISS does not implement embeddings method and use embed_query to embedding texts which is wrong for some embedding models.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10823/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10823/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10822",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10822/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10822/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10822/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10822",
        "id": 1904404073,
        "node_id": "I_kwDOIPDwls5xguZp",
        "number": 10822,
        "title": "Providing `-1` to `max_tokens` while creating an OpenAI LLM using the `gpt-3.5-turbo-instruct` is failing",
        "user": {
            "login": "carlosapd",
            "id": 22346503,
            "node_id": "MDQ6VXNlcjIyMzQ2NTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/22346503?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carlosapd",
            "html_url": "https://github.com/carlosapd",
            "followers_url": "https://api.github.com/users/carlosapd/followers",
            "following_url": "https://api.github.com/users/carlosapd/following{/other_user}",
            "gists_url": "https://api.github.com/users/carlosapd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carlosapd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carlosapd/subscriptions",
            "organizations_url": "https://api.github.com/users/carlosapd/orgs",
            "repos_url": "https://api.github.com/users/carlosapd/repos",
            "events_url": "https://api.github.com/users/carlosapd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carlosapd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-20T07:58:46Z",
        "updated_at": "2023-09-20T08:10:49Z",
        "closed_at": "2023-09-20T08:10:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain version: tested with both versions 0.0.294 and 0.0.295.\r\nPython Version: 3.10.10 running on Linux x86_64 (Ubuntu 22.04).\r\nTested with OpenAI library, both versions 0.27.8 and 0.28.0.\r\n\r\n### Who can help?\r\n\r\n@hwchase17 @agola11 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [x] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nRun the following snippet:\r\n```python\r\nfrom langchain import OpenAI\r\n\r\nllm = OpenAI(\r\n  model=\"gpt-3.5-turbo-instruct\",\r\n  verbose=True,\r\n  max_tokens=-1,\r\n)\r\nllm(\"I am \")\r\n```\r\n\r\nThe following error is returned (just the relevant stack trace):\r\n```\r\nFile .venv/lib/python3.10/site-packages/langchain/llms/base.py:831, in BaseLLM.__call__(self, prompt, stop, callbacks, tags, metadata, **kwargs)\r\n    824 if not isinstance(prompt, str):\r\n    825     raise ValueError(\r\n    826         \"Argument `prompt` is expected to be a string. Instead found \"\r\n    827         f\"{type(prompt)}. If you want to run the LLM on multiple prompts, use \"\r\n    828         \"`generate` instead.\"\r\n    829     )\r\n    830 return (\r\n--> 831     self.generate(\r\n    832         [prompt],\r\n    833         stop=stop,\r\n    834         callbacks=callbacks,\r\n    835         tags=tags,\r\n    836         metadata=metadata,\r\n    837         **kwargs,\r\n    838     )\r\n    839     .generations[0][0]\r\n    840     .text\r\n    841 )\r\n\r\nFile .venv/lib/python3.10/site-packages/langchain/llms/base.py:627, in BaseLLM.generate(self, prompts, stop, callbacks, tags, metadata, **kwargs)\r\n    618         raise ValueError(\r\n    619             \"Asked to cache, but no cache found at `langchain.cache`.\"\r\n    620         )\r\n    621     run_managers = [\r\n    622         callback_manager.on_llm_start(\r\n    623             dumpd(self), [prompt], invocation_params=params, options=options\r\n    624         )[0]\r\n    625         for callback_manager, prompt in zip(callback_managers, prompts)\r\n    626     ]\r\n--> 627     output = self._generate_helper(\r\n    628         prompts, stop, run_managers, bool(new_arg_supported), **kwargs\r\n    629     )\r\n    630     return output\r\n    631 if len(missing_prompts) > 0:\r\n\r\nFile .venv/lib/python3.10/site-packages/langchain/llms/base.py:529, in BaseLLM._generate_helper(self, prompts, stop, run_managers, new_arg_supported, **kwargs)\r\n    527     for run_manager in run_managers:\r\n    528         run_manager.on_llm_error(e)\r\n--> 529     raise e\r\n    530 flattened_outputs = output.flatten()\r\n    531 for manager, flattened_output in zip(run_managers, flattened_outputs):\r\n\r\nFile .venv/lib/python3.10/site-packages/langchain/llms/base.py:516, in BaseLLM._generate_helper(self, prompts, stop, run_managers, new_arg_supported, **kwargs)\r\n    506 def _generate_helper(\r\n    507     self,\r\n    508     prompts: List[str],\r\n   (...)\r\n    512     **kwargs: Any,\r\n    513 ) -> LLMResult:\r\n    514     try:\r\n    515         output = (\r\n--> 516             self._generate(\r\n    517                 prompts,\r\n    518                 stop=stop,\r\n    519                 # TODO: support multiple run managers\r\n    520                 run_manager=run_managers[0] if run_managers else None,\r\n    521                 **kwargs,\r\n    522             )\r\n    523             if new_arg_supported\r\n    524             else self._generate(prompts, stop=stop)\r\n    525         )\r\n    526     except BaseException as e:\r\n    527         for run_manager in run_managers:\r\n\r\nFile .venv/lib/python3.10/site-packages/langchain/llms/openai.py:357, in BaseOpenAI._generate(self, prompts, stop, run_manager, **kwargs)\r\n    355 params = self._invocation_params\r\n    356 params = {**params, **kwargs}\r\n--> 357 sub_prompts = self.get_sub_prompts(params, prompts, stop)\r\n    358 choices = []\r\n    359 token_usage: Dict[str, int] = {}\r\n\r\nFile .venv/lib/python3.10/site-packages/langchain/llms/openai.py:459, in BaseOpenAI.get_sub_prompts(self, params, prompts, stop)\r\n    455     if len(prompts) != 1:\r\n    456         raise ValueError(\r\n    457             \"max_tokens set to -1 not supported for multiple inputs.\"\r\n    458         )\r\n--> 459     params[\"max_tokens\"] = self.max_tokens_for_prompt(prompts[0])\r\n    460 sub_prompts = [\r\n    461     prompts[i : i + self.batch_size]\r\n    462     for i in range(0, len(prompts), self.batch_size)\r\n    463 ]\r\n    464 return sub_prompts\r\n\r\nFile .venv/lib/python3.10/site-packages/langchain/llms/openai.py:616, in BaseOpenAI.max_tokens_for_prompt(self, prompt)\r\n    602 \"\"\"Calculate the maximum number of tokens possible to generate for a prompt.\r\n    603 \r\n    604 Args:\r\n   (...)\r\n    613         max_tokens = openai.max_token_for_prompt(\"Tell me a joke.\")\r\n    614 \"\"\"\r\n    615 num_tokens = self.get_num_tokens(prompt)\r\n--> 616 return self.max_context_size - num_tokens\r\n\r\nFile .venv/lib/python3.10/site-packages/langchain/llms/openai.py:599, in BaseOpenAI.max_context_size(self)\r\n    596 @property\r\n    597 def max_context_size(self) -> int:\r\n    598     \"\"\"Get max context size for this model.\"\"\"\r\n--> 599     return self.modelname_to_contextsize(self.model_name)\r\n\r\nFile .venv/lib/python3.10/site-packages/langchain/llms/openai.py:589, in BaseOpenAI.modelname_to_contextsize(modelname)\r\n    586 context_size = model_token_mapping.get(modelname, None)\r\n    588 if context_size is None:\r\n--> 589     raise ValueError(\r\n    590         f\"Unknown model: {modelname}. Please provide a valid OpenAI model name.\"\r\n    591         \"Known models are: \" + \", \".join(model_token_mapping.keys())\r\n    592     )\r\n    594 return context_size\r\n\r\nValueError: Unknown model: gpt-3.5-turbo-instruct. Please provide a valid OpenAI model name.Known models are: gpt-4, gpt-4-0314, gpt-4-0613, gpt-4-32k, gpt-4-32k-0314, gpt-4-32k-0613, gpt-3.5-turbo, gpt-3.5-turbo-0301, gpt-3.5-turbo-0613, gpt-3.5-turbo-16k, gpt-3.5-turbo-16k-0613, text-ada-001, ada, text-babbage-001, babbage, text-curie-001, curie, davinci, text-davinci-003, text-davinci-002, code-davinci-002, code-davinci-001, code-cushman-002, code-cushman-001\r\n```\r\n\r\nOriginally got this through a `LLMChain`, but tracked it down to the LLM itself.\r\n\r\n### Expected behavior\r\n\r\nShould be processing the input correctly. Can confirm this works with other models like `text-davinci-003`.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10822/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10822/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10821",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10821/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10821/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10821/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10821",
        "id": 1904330397,
        "node_id": "PR_kwDOIPDwls5av9ZZ",
        "number": 10821,
        "title": "Fixed some Gramm.. errors",
        "user": {
            "login": "ShorthillsAI",
            "id": 141953346,
            "node_id": "U_kgDOCHYJQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/141953346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShorthillsAI",
            "html_url": "https://github.com/ShorthillsAI",
            "followers_url": "https://api.github.com/users/ShorthillsAI/followers",
            "following_url": "https://api.github.com/users/ShorthillsAI/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShorthillsAI/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShorthillsAI/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShorthillsAI/subscriptions",
            "organizations_url": "https://api.github.com/users/ShorthillsAI/orgs",
            "repos_url": "https://api.github.com/users/ShorthillsAI/repos",
            "events_url": "https://api.github.com/users/ShorthillsAI/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShorthillsAI/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T07:20:37Z",
        "updated_at": "2023-09-21T09:04:56Z",
        "closed_at": "2023-09-21T09:04:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10821",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10821",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10821.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10821.patch",
            "merged_at": null
        },
        "body": "Fixed some Gramm.. errors\r\n\r\n@baskaryan ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10821/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10821/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10820",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10820/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10820/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10820/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10820",
        "id": 1904284433,
        "node_id": "I_kwDOIPDwls5xgRMR",
        "number": 10820,
        "title": "MongoDBAtlasVectorSearch: Make It Work with Existing MongoDB Collection (rather than having to create a new one)",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T06:52:26Z",
        "updated_at": "2023-10-05T21:58:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nWhen using MongoDBAtlasVectorSearch, the user is limited to only first populate a MongoDB collection of documents using either add_document or add_text methods. Those methods create documents on the given collection using a fixed structure. What if the user already has a collection on MongoDB with custom structure (still containing the field 'embedding' which is used to measure similarity)? This is not currently supported and the user would have to implement a wrapper around MongoDBAtlasVectorSearch to achieve that. \r\n\r\nFor instance the following code won't work (docs will be empty):\r\n```\r\nfrom langchain.vectorstores import MongoDBAtlasVectorSearch\r\nfrom langchain.embeddings import HuggingFaceEmbeddings\r\n\r\nembeddings = HuggingFaceEmbeddings(model_name=\"sentence-transformers/all-MiniLM-L6-v2\")\r\nindex_name = \"index_name_from_MongoDB\"\r\n\r\ndocsearch = MongoDBAtlasVectorSearch(embeddings, collection=collection, index_name=index_name)\r\n\r\nquery = \"What did the president say about Ketanji Brown Jackson\"\r\ndocs = docsearch.similarity_search(query)\r\n\r\nprint(docs[0].page_content)\r\n```\r\nThis is because the collection is not populated using any of the original methods of MongoDBAtlasVectorSearch, e.g. add_document or add_text, hence the structure of the collection might be different (containing additional fields and missing the 'text' field for example).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10820/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10820/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10819",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10819/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10819/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10819/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10819",
        "id": 1904226563,
        "node_id": "PR_kwDOIPDwls5avm8y",
        "number": 10819,
        "title": "poc",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T06:10:35Z",
        "updated_at": "2023-09-20T08:37:17Z",
        "closed_at": "2023-09-20T08:37:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10819",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10819",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10819.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10819.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10819/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10819/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10817",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10817/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10817/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10817/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10817",
        "id": 1904095109,
        "node_id": "PR_kwDOIPDwls5avKDx",
        "number": 10817,
        "title": "Further Enhancement to WeaviateHybridSearchRetriever",
        "user": {
            "login": "douglasmonsky",
            "id": 29297119,
            "node_id": "MDQ6VXNlcjI5Mjk3MTE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/29297119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/douglasmonsky",
            "html_url": "https://github.com/douglasmonsky",
            "followers_url": "https://api.github.com/users/douglasmonsky/followers",
            "following_url": "https://api.github.com/users/douglasmonsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/douglasmonsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/douglasmonsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/douglasmonsky/subscriptions",
            "organizations_url": "https://api.github.com/users/douglasmonsky/orgs",
            "repos_url": "https://api.github.com/users/douglasmonsky/repos",
            "events_url": "https://api.github.com/users/douglasmonsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/douglasmonsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-20T04:19:16Z",
        "updated_at": "2023-09-27T22:59:49Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10817",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10817",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10817.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10817.patch",
            "merged_at": null
        },
        "body": "**Description:**\r\nUpon working with the retriever further, I realized that when it is used in an existing chain, you don\u2019t directly call `get_relevant_documents()`. This makes it challenging to pass the `hybrid_search_kwargs` to the underly function.\r\n\r\nTo address this, I\u2019ve introduced a minor patch in this commit. By adding `hybrid_search_kwargs` as a class variable, we can now handle a wider range of realistic use cases without conflicting with the previously pushed version.\r\n\r\nHere is a simple example:\r\n```python\r\nretreiver = WeaviateHybridSearchRetriever(\r\n    client=client,\r\n    index_name=\"Document\",\r\n    text_key=\"content\",\r\n    hybrid_search_kwargs={\"properties\": [\"title\", \"summary\", \"content\"]}, \r\n)\r\n\r\nllm = OpenAI()\r\nconversation_chain = ConversationalRetrievalChain.from_llm(llm=llm,retriever=retreiver)\r\n\r\n# When called within conversation_chain invocation\r\ndef _get_relevant_documents(self, ...):\r\n    ...\r\n    # Prioritizes function argument, then class var, finally empty {}\r\n    if hybrid_search_kwargs is None:\r\n        hybrid_search_kwargs = self.hybrid_search_kwargs or {}  \r\n    ...\r\n\r\n```\r\n\r\n**Tag maintainer:**\r\n@hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10817/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10817/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10816",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10816/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10816/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10816/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10816",
        "id": 1904087033,
        "node_id": "PR_kwDOIPDwls5avIQN",
        "number": 10816,
        "title": "corrected spelling (#62)",
        "user": {
            "login": "ShorthillsAI",
            "id": 141953346,
            "node_id": "U_kgDOCHYJQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/141953346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShorthillsAI",
            "html_url": "https://github.com/ShorthillsAI",
            "followers_url": "https://api.github.com/users/ShorthillsAI/followers",
            "following_url": "https://api.github.com/users/ShorthillsAI/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShorthillsAI/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShorthillsAI/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShorthillsAI/subscriptions",
            "organizations_url": "https://api.github.com/users/ShorthillsAI/orgs",
            "repos_url": "https://api.github.com/users/ShorthillsAI/repos",
            "events_url": "https://api.github.com/users/ShorthillsAI/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShorthillsAI/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T04:12:41Z",
        "updated_at": "2023-09-20T04:41:49Z",
        "closed_at": "2023-09-20T04:41:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10816",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10816",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10816.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10816.patch",
            "merged_at": "2023-09-20T04:41:49Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10816/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10816/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10815",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10815/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10815/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10815/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10815",
        "id": 1904080066,
        "node_id": "PR_kwDOIPDwls5avGrG",
        "number": 10815,
        "title": "Update search.py",
        "user": {
            "login": "ansilmbabl",
            "id": 86063895,
            "node_id": "MDQ6VXNlcjg2MDYzODk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/86063895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansilmbabl",
            "html_url": "https://github.com/ansilmbabl",
            "followers_url": "https://api.github.com/users/ansilmbabl/followers",
            "following_url": "https://api.github.com/users/ansilmbabl/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansilmbabl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansilmbabl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansilmbabl/subscriptions",
            "organizations_url": "https://api.github.com/users/ansilmbabl/orgs",
            "repos_url": "https://api.github.com/users/ansilmbabl/repos",
            "events_url": "https://api.github.com/users/ansilmbabl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansilmbabl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-20T04:08:19Z",
        "updated_at": "2023-09-20T04:42:47Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10815",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10815",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10815.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10815.patch",
            "merged_at": null
        },
        "body": "changed return type from string to List\r\n\r\ncontinuation of the closed PR \r\nhttps://github.com/langchain-ai/langchain/pull/10743#discussion_r1330806902\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10815/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10814",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10814/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10814/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10814/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10814",
        "id": 1904069804,
        "node_id": "I_kwDOIPDwls5xfcys",
        "number": 10814,
        "title": "SeleniumURLLoader load asynchronous js, need wait",
        "user": {
            "login": "teenth",
            "id": 16316491,
            "node_id": "MDQ6VXNlcjE2MzE2NDkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/16316491?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/teenth",
            "html_url": "https://github.com/teenth",
            "followers_url": "https://api.github.com/users/teenth/followers",
            "following_url": "https://api.github.com/users/teenth/following{/other_user}",
            "gists_url": "https://api.github.com/users/teenth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/teenth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/teenth/subscriptions",
            "organizations_url": "https://api.github.com/users/teenth/orgs",
            "repos_url": "https://api.github.com/users/teenth/repos",
            "events_url": "https://api.github.com/users/teenth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/teenth/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-20T04:00:24Z",
        "updated_at": "2023-11-01T08:49:10Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nMac OS ventura 13.4.1\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nlangchain/document_loaders/url_selenium.py                \r\ndef load(self) -> List[Document]:\r\n        \"\"\"Load the specified URLs using Selenium and create Document instances.\r\n\r\n        Returns:\r\n            List[Document]: A list of Document instances with loaded content.\r\n        \"\"\"\r\n        from unstructured.partition.html import partition_html\r\n\r\n        docs: List[Document] = list()\r\n        driver = self._get_driver()\r\n\r\n        for url in self.urls:\r\n            try:\r\n                driver.get(url)\r\n                sleep(30)   // need wait\r\n                page_content = driver.page_source\r\n                elements = partition_html(text=page_content)\r\n                text = \"\\n\\n\".join([str(el) for el in elements])\r\n                metadata = {\"source\": url}\r\n                docs.append(Document(page_content=text, metadata=metadata))\r\n            except Exception as e:\r\n                if self.continue_on_failure:\r\n                    logger.error(f\"Error fetching or processing {url}, exception: {e}\")\r\n                else:\r\n                    raise e\r\n\r\n        driver.quit()\r\n        return docs\r\n\n\n### Expected behavior\n\ntimer is config parms, user can use \r\nSeleniumURLLoader({waittime: 30})",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10814/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10814/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10813",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10813/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10813/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10813/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10813",
        "id": 1904014159,
        "node_id": "PR_kwDOIPDwls5au4Jl",
        "number": 10813,
        "title": "Update base.py",
        "user": {
            "login": "redreamality",
            "id": 3147776,
            "node_id": "MDQ6VXNlcjMxNDc3NzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3147776?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/redreamality",
            "html_url": "https://github.com/redreamality",
            "followers_url": "https://api.github.com/users/redreamality/followers",
            "following_url": "https://api.github.com/users/redreamality/following{/other_user}",
            "gists_url": "https://api.github.com/users/redreamality/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/redreamality/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/redreamality/subscriptions",
            "organizations_url": "https://api.github.com/users/redreamality/orgs",
            "repos_url": "https://api.github.com/users/redreamality/repos",
            "events_url": "https://api.github.com/users/redreamality/events{/privacy}",
            "received_events_url": "https://api.github.com/users/redreamality/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-20T03:04:51Z",
        "updated_at": "2023-11-16T23:56:00Z",
        "closed_at": "2023-11-13T07:10:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10813",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10813",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10813.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10813.patch",
            "merged_at": null
        },
        "body": "as per definition, `include_df_in_prompt` should either be true or false\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** None\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** \r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10813/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10813/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10812",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10812/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10812/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10812/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10812",
        "id": 1904013281,
        "node_id": "PR_kwDOIPDwls5au3-R",
        "number": 10812,
        "title": "set litellm max_tokens=None",
        "user": {
            "login": "zhangnew",
            "id": 9146834,
            "node_id": "MDQ6VXNlcjkxNDY4MzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9146834?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhangnew",
            "html_url": "https://github.com/zhangnew",
            "followers_url": "https://api.github.com/users/zhangnew/followers",
            "following_url": "https://api.github.com/users/zhangnew/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhangnew/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhangnew/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhangnew/subscriptions",
            "organizations_url": "https://api.github.com/users/zhangnew/orgs",
            "repos_url": "https://api.github.com/users/zhangnew/repos",
            "events_url": "https://api.github.com/users/zhangnew/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhangnew/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-20T03:03:34Z",
        "updated_at": "2023-10-03T14:05:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10812",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10812",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10812.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10812.patch",
            "merged_at": null
        },
        "body": "  - **Description:** The default value of the `max_tokens` for litellm is 256. It should be increased to avoid truncation of replies.\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10812/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10812/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10811",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10811/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10811/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10811/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10811",
        "id": 1903925576,
        "node_id": "I_kwDOIPDwls5xe5lI",
        "number": 10811,
        "title": "SQLAgent fails to connect to Postgres multiple schemas",
        "user": {
            "login": "andywl",
            "id": 70544360,
            "node_id": "MDQ6VXNlcjcwNTQ0MzYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/70544360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andywl",
            "html_url": "https://github.com/andywl",
            "followers_url": "https://api.github.com/users/andywl/followers",
            "following_url": "https://api.github.com/users/andywl/following{/other_user}",
            "gists_url": "https://api.github.com/users/andywl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andywl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andywl/subscriptions",
            "organizations_url": "https://api.github.com/users/andywl/orgs",
            "repos_url": "https://api.github.com/users/andywl/repos",
            "events_url": "https://api.github.com/users/andywl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andywl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-20T01:19:04Z",
        "updated_at": "2023-09-20T06:23:40Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI'm using latest langchain version 0.0.295.  It turns out langchain SQLAgent always connects to Postgres public schema.  I need SQLAgent to check all schemas to generate SQL query.  How to configure SQLAgent to connect to all Postgres schemas?\r\n\r\nTried both pg_uri = f\"postgresql+psycopg2://{username}:{password}@{host}:{port}/{mydatabase}?currentSchema=myschema\",  pg_uri = f\"postgresql+psycopg2://{username}:{password}@{host}:{port}/{mydatabase}?search_path=myschema\" when creating SQLDatabase: db = SQLDatabase.from_uri(pg_uri).  It doesn't work. \r\n \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nWhen creating SQLDatabase for postgres, I can't specify schema.  It only connects to postgres public schema.  As a result, SQLAgent doesn't produce meaningful result.\r\n\r\n# pg_uri = f\"postgresql+psycopg2://{username}:{password}@{host}:{port}/{mydatabase}?search_path=myschema\"\r\npg_uri = f\"postgresql+psycopg2://{username}:{password}@{host}:{port}/{mydatabase}?currentSchema=myschema\"\r\n\r\ndb = SQLDatabase.from_uri(pg_uri)\n\n### Expected behavior\n\nExpect SQLAgent or SQLDatabase can configure schemas for Postgres so that SQLAgent can generate meaningful SQL query. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10811/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10810",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10810/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10810/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10810/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10810",
        "id": 1903890762,
        "node_id": "I_kwDOIPDwls5xexFK",
        "number": 10810,
        "title": "INTERMITTENT ERROR: AzureCogsImageAnalysisTool._run() got an unexpected keyword argument 'url'",
        "user": {
            "login": "SYSPROHeinrichKollner",
            "id": 112124417,
            "node_id": "U_kgDOBq7iAQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/112124417?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SYSPROHeinrichKollner",
            "html_url": "https://github.com/SYSPROHeinrichKollner",
            "followers_url": "https://api.github.com/users/SYSPROHeinrichKollner/followers",
            "following_url": "https://api.github.com/users/SYSPROHeinrichKollner/following{/other_user}",
            "gists_url": "https://api.github.com/users/SYSPROHeinrichKollner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SYSPROHeinrichKollner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SYSPROHeinrichKollner/subscriptions",
            "organizations_url": "https://api.github.com/users/SYSPROHeinrichKollner/orgs",
            "repos_url": "https://api.github.com/users/SYSPROHeinrichKollner/repos",
            "events_url": "https://api.github.com/users/SYSPROHeinrichKollner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SYSPROHeinrichKollner/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-20T00:25:58Z",
        "updated_at": "2023-09-20T00:31:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nPython 3.11.0\r\nLangChain==0.0.295\r\nAzure-ai-vision==0.15.1b1\r\nStreamlit\n\n### Who can help?\n\n@agola11 @hwchase17 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nImportant to note that the below error is INTERMITTEND using the exact same input every single time. Sometimes it works for an hour without error, then it will throw the below error a few times and return to normal. Other times it throws this error like 20 times before it will return to normal and start working again. It is like it gets confused about what inputs the agent expect at random.\r\n\r\nAlso note that this is a simplified version. The reason I use create_conversational_retrieval_agent is because I pass multiple tools like O365, SQLDatabase ect. But I can still produce the error without them. \r\n\r\n**Error:**\r\n\r\nTypeError: AzureCogsImageAnalysisTool._run() got an unexpected keyword argument 'url'\r\nTraceback:\r\n\r\nFile \"C:\\_Dev\\AZURE-AGENT-TEST\\venv\\Lib\\site-packages\\streamlit\\runtime\\scriptrunner\\script_runner.py\", line 552, in _run_script\r\n    exec(code, module.__dict__)\r\nFile \"C:\\_Dev\\AZURE-AGENT-TEST\\home.py\", line 409, in <module>\r\n    main()\r\nFile \"C:\\_Dev\\AZURE-AGENT-TEST\\home.py\", line 256, in main\r\n    handle_userinput(user_question, image_url)\r\nFile \"C:\\_Dev\\AZURE-AGENT-TEST\\home.py\", line 151, in handle_userinput\r\n    response = st.session_state.conversation({'input': user_question + \" \" + '\"' + file_url + '\"' })\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\_Dev\\AZURE-AGENT-TEST\\venv\\Lib\\site-packages\\langchain\\chains\\base.py\", line 292, in __call__\r\n    raise e\r\nFile \"C:\\_Dev\\AZURE-AGENT-TEST\\venv\\Lib\\site-packages\\langchain\\chains\\base.py\", line 286, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\nFile \"C:\\_Dev\\AZURE-AGENT-TEST\\venv\\Lib\\site-packages\\langchain\\agents\\agent.py\", line 1122, in _call\r\n    next_step_output = self._take_next_step(\r\n                       ^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\_Dev\\AZURE-AGENT-TEST\\venv\\Lib\\site-packages\\langchain\\agents\\agent.py\", line 977, in _take_next_step\r\n    observation = tool.run(\r\n                  ^^^^^^^^^\r\nFile \"C:\\_Dev\\AZURE-AGENT-TEST\\venv\\Lib\\site-packages\\langchain\\tools\\base.py\", line 356, in run\r\n    raise e\r\nFile \"C:\\_Dev\\AZURE-AGENT-TEST\\venv\\Lib\\site-packages\\langchain\\tools\\base.py\", line 328, in run\r\n    self._run(*tool_args, run_manager=run_manager, **tool_kwargs)\r\n\r\n**Initialize the agent:**    \r\n\r\n    toolkit = AzureCognitiveServicesToolkit()\r\n    tools = toolkit.get_tools()\r\n\r\n    llm = ChatOpenAI(temperature=0.7)\r\n    \r\n    st.session_state.conversation = create_conversational_retrieval_agent(llm,\r\n                                                                          tools, \r\n                                                                          verbose=False, \r\n                                                                          max_iterations=3,\r\n                                                                          early_stopping_method='generate',\r\n                                                                          AgentType=AgentType.CHAT_ZERO_SHOT_REACT_DESCRIPTION)\r\n\r\n**Then handle the user input:**\r\n    user_question = \"What can I make with these ingredients?\"\r\n    file_url = \"https://images.openai.com/blob/9ad5a2ab-041f-475f-ad6a-b51899c50182/ingredients.png\"\r\n\r\n    response = st.session_state.conversation({'input': user_question + \" \" + '\"' + file_url + '\"' })\r\n    st.write(response)\n\n### Expected behavior\n\nI expect it to not throw this error intermittently.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10810/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10810/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10809",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10809/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10809/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10809/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10809",
        "id": 1903867154,
        "node_id": "I_kwDOIPDwls5xerUS",
        "number": 10809,
        "title": "OpenAI class missing `predict` method as described in the Quickstart guide",
        "user": {
            "login": "zaynpatel",
            "id": 65105835,
            "node_id": "MDQ6VXNlcjY1MTA1ODM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/65105835?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zaynpatel",
            "html_url": "https://github.com/zaynpatel",
            "followers_url": "https://api.github.com/users/zaynpatel/followers",
            "following_url": "https://api.github.com/users/zaynpatel/following{/other_user}",
            "gists_url": "https://api.github.com/users/zaynpatel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zaynpatel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zaynpatel/subscriptions",
            "organizations_url": "https://api.github.com/users/zaynpatel/orgs",
            "repos_url": "https://api.github.com/users/zaynpatel/repos",
            "events_url": "https://api.github.com/users/zaynpatel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zaynpatel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T23:51:29Z",
        "updated_at": "2023-09-20T00:00:51Z",
        "closed_at": "2023-09-20T00:00:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nWhile following the Quickstart guide in the LangChain documentation, I encountered an AttributeError when trying to use the `predict` method with an instance of the OpenAI class. It seems like the `predict` method is not available in the OpenAI class as described in the guide.\r\n\r\n\r\nI'm running the following code from the Langchain Quickstart Guide, LLMs section:\r\n\r\n```\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chat_models import ChatOpenAI\r\n\r\nllm = OpenAI()\r\nchat_model = ChatOpenAI()\r\n\r\nllm.predict(\"hi!\")\r\n>>> \"Hi\"\r\n\r\nchat_model.predict(\"hi!\")\r\n>>> \"Hi\"\r\n```\r\n\r\nBelow are the steps I took before running:\r\n\r\n1. Installed LangChain using `pip install langchain`.\r\n2. Installed OpenAI Python package using `pip install openai`.\r\n3. Set up the OpenAI API key as described in the guide.\r\n4. Created an instance of the OpenAI class and attempted to call the `predict` method with a string argument, as shown in the guide.\r\n\r\n**Expected behavior:** Based on the Quickstart guide, I expected to be able to call the `predict` method with a string argument and receive a string as the output.\r\n\r\n**Actual behavior:** When attempting to call the `predict` method, I received the following error message:\r\n\r\nAttributeError: 'OpenAI' object has no attribute 'predict'\r\n\r\n**Environment:**\r\n- LangChain version: (0.0.112)\r\n- OpenAI Python package version: (0.27.2)\r\n- Python version: 3.9.5\r\n- Operating System: macOS\r\n\r\nI checked the available methods of the OpenAI class using the `dir()` function and confirmed that the `predict` method is not available. I also tried passing a list of strings to the `generate` method as an alternative, based on the methods that are available, but this did not produce the expected result.\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10809/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10809/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10808",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10808/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10808/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10808/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10808",
        "id": 1903856817,
        "node_id": "PR_kwDOIPDwls5auW7K",
        "number": 10808,
        "title": "misc: add gpt-3.5-turbo-instruct to model_token_mapping",
        "user": {
            "login": "hezyin",
            "id": 2908155,
            "node_id": "MDQ6VXNlcjI5MDgxNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2908155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hezyin",
            "html_url": "https://github.com/hezyin",
            "followers_url": "https://api.github.com/users/hezyin/followers",
            "following_url": "https://api.github.com/users/hezyin/following{/other_user}",
            "gists_url": "https://api.github.com/users/hezyin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hezyin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hezyin/subscriptions",
            "organizations_url": "https://api.github.com/users/hezyin/orgs",
            "repos_url": "https://api.github.com/users/hezyin/repos",
            "events_url": "https://api.github.com/users/hezyin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hezyin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hwchase17",
                "id": 11986836,
                "node_id": "MDQ6VXNlcjExOTg2ODM2",
                "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hwchase17",
                "html_url": "https://github.com/hwchase17",
                "followers_url": "https://api.github.com/users/hwchase17/followers",
                "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
                "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
                "organizations_url": "https://api.github.com/users/hwchase17/orgs",
                "repos_url": "https://api.github.com/users/hwchase17/repos",
                "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hwchase17/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T23:33:58Z",
        "updated_at": "2023-09-20T00:03:17Z",
        "closed_at": "2023-09-20T00:03:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10808",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10808",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10808.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10808.patch",
            "merged_at": "2023-09-20T00:03:16Z"
        },
        "body": "A one-line fix to get`max_tokens=-1` working `OpenAI` class for `gpt-3.5-turbo-instruct` model. \r\n\r\nCloses https://github.com/langchain-ai/langchain/issues/10806\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10808/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10808/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10807",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10807/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10807/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10807/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10807",
        "id": 1903856798,
        "node_id": "PR_kwDOIPDwls5auW66",
        "number": 10807,
        "title": "Harrison/add vald",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T23:33:56Z",
        "updated_at": "2023-09-19T23:42:53Z",
        "closed_at": "2023-09-19T23:42:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10807",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10807",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10807.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10807.patch",
            "merged_at": "2023-09-19T23:42:52Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10807/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10807/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10806",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10806/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10806/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10806/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10806",
        "id": 1903852127,
        "node_id": "I_kwDOIPDwls5xenpf",
        "number": 10806,
        "title": "Error when using gpt-3.5-turbo-instruct: model_token_mapping is missing an entry for gpt-3.5-turbo-instruct",
        "user": {
            "login": "hezyin",
            "id": 2908155,
            "node_id": "MDQ6VXNlcjI5MDgxNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2908155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hezyin",
            "html_url": "https://github.com/hezyin",
            "followers_url": "https://api.github.com/users/hezyin/followers",
            "following_url": "https://api.github.com/users/hezyin/following{/other_user}",
            "gists_url": "https://api.github.com/users/hezyin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hezyin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hezyin/subscriptions",
            "organizations_url": "https://api.github.com/users/hezyin/orgs",
            "repos_url": "https://api.github.com/users/hezyin/repos",
            "events_url": "https://api.github.com/users/hezyin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hezyin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T23:26:18Z",
        "updated_at": "2023-09-20T00:03:17Z",
        "closed_at": "2023-09-20T00:03:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version: 0.0.295 (just upgraded to this version to use gpt-3.5-turbo-instruct)\n\n### Who can help?\n\n@hwchase17 @agola\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nMinimal code to reproduce:\r\n\r\n```python\r\n# load OpenAI API Key\r\nfrom langchain.llms import OpenAI\r\nllm = OpenAI(temperature=0.1, model_name=\"gpt-3.5-turbo-instruct\", max_tokens=-1)\r\nllm(\"give me a list of Chinese dishes and their recipes\")\r\n```\r\n\r\nError message:\r\n>```ValueError: Unknown model: gpt-3.5-turbo-instruct. Please provide a valid OpenAI model name.Known models are: gpt-4, gpt-4-0314, gpt-4-0613, gpt-4-32k, gpt-4-32k-0314, gpt-4-32k-0613, gpt-3.5-turbo, gpt-3.5-turbo-0301, gpt-3.5-turbo-0613, gpt-3.5-turbo-16k, gpt-3.5-turbo-16k-0613, text-ada-001, ada, text-babbage-001, babbage, text-curie-001, curie, davinci, text-davinci-003, text-davinci-002, code-davinci-002, code-davinci-001, code-cushman-002, code-cushman-001```\r\n\r\nCause of the error: looks like it's because the `model_token_mapping` is missing an entry for `gpt-3.5-turbo-instruct`: https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/llms/openai.py#L555\n\n### Expected behavior\n\nThe code succeeds without error",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10806/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10806/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10805",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10805/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10805/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10805/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10805",
        "id": 1903850367,
        "node_id": "PR_kwDOIPDwls5auVlZ",
        "number": 10805,
        "title": "Revert \"Add ChatGLM for llm and chat_model by using ChatGLM API (#9797)\"",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-19T23:23:27Z",
        "updated_at": "2023-09-27T09:30:30Z",
        "closed_at": "2023-09-19T23:23:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10805",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10805",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10805.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10805.patch",
            "merged_at": "2023-09-19T23:23:43Z"
        },
        "body": "@etveritas reverting for now until this is resolved https://github.com/langchain-ai/langchain/pull/9797/files#r1330795585, apologies for merging too eagerly!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10805/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10805/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10804",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10804/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10804/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10804/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10804",
        "id": 1903849540,
        "node_id": "PR_kwDOIPDwls5auVZ9",
        "number": 10804,
        "title": "improve notebook",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T23:22:01Z",
        "updated_at": "2023-09-19T23:51:40Z",
        "closed_at": "2023-09-19T23:51:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10804",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10804",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10804.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10804.patch",
            "merged_at": "2023-09-19T23:51:39Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10804/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10804/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10803",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10803/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10803/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10803/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10803",
        "id": 1903814163,
        "node_id": "PR_kwDOIPDwls5auN2w",
        "number": 10803,
        "title": "Harrison/add submodule to docs",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T22:31:44Z",
        "updated_at": "2023-09-20T00:03:33Z",
        "closed_at": "2023-09-20T00:03:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10803",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10803",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10803.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10803.patch",
            "merged_at": "2023-09-20T00:03:33Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10803/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10803/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10802",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10802/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10802/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10802/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10802",
        "id": 1903765077,
        "node_id": "PR_kwDOIPDwls5auDGP",
        "number": 10802,
        "title": "Introducing Enhanced Functionality to WeaviateHybridSearchRetriever: Accepting Additional Keyword Arguments",
        "user": {
            "login": "douglasmonsky",
            "id": 29297119,
            "node_id": "MDQ6VXNlcjI5Mjk3MTE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/29297119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/douglasmonsky",
            "html_url": "https://github.com/douglasmonsky",
            "followers_url": "https://api.github.com/users/douglasmonsky/followers",
            "following_url": "https://api.github.com/users/douglasmonsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/douglasmonsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/douglasmonsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/douglasmonsky/subscriptions",
            "organizations_url": "https://api.github.com/users/douglasmonsky/orgs",
            "repos_url": "https://api.github.com/users/douglasmonsky/repos",
            "events_url": "https://api.github.com/users/douglasmonsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/douglasmonsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-19T21:38:24Z",
        "updated_at": "2023-09-19T23:08:01Z",
        "closed_at": "2023-09-19T22:56:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10802",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10802",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10802.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10802.patch",
            "merged_at": "2023-09-19T22:56:22Z"
        },
        "body": "**Description:** \r\nThis commit enriches the `WeaviateHybridSearchRetriever` class by introducing a new parameter, `hybrid_search_kwargs`, within the `_get_relevant_documents` method. This parameter accommodates arbitrary keyword arguments (`**kwargs`) which can be channeled to the inherited public method, `get_relevant_documents`, originating from the `BaseRetriever` class. \r\n\r\nThis modification facilitates more intricate querying capabilities, allowing users to convey supplementary arguments to the `.with_hybrid()` method. This expansion not only makes it possible to perform a more nuanced search targeting specific properties but also grants the ability to boost the weight of searched properties, to carry out a search with a custom vector, and to apply the Fusion ranking method. The documentation has been updated accordingly to delineate these new possibilities in detail.\r\n\r\nIn light of the layered approach in which this search operates, initiating with `query.get()` and then transitioning to `.with_hybrid()`, several advantageous opportunities are unlocked for the hybrid component that were previously unattainable. \r\n\r\nHere\u2019s a representative example showcasing a query structure that was formerly unfeasible:\r\n\r\n[Specific Properties Only](https://weaviate.io/developers/weaviate/search/hybrid#selected-properties-only)\r\n\"The example below illustrates a BM25 search targeting the keyword 'food' exclusively within the 'question' property, integrated with vector search results corresponding to 'food'.\"\r\n```python\r\nresponse = (\r\n    client.query\r\n    .get(\"JeopardyQuestion\", [\"question\", \"answer\"])\r\n    .with_hybrid(\r\n        query=\"food\",\r\n        properties=[\"question\"], # Will now be possible moving forward\r\n        alpha=0.25\r\n    )\r\n    .with_limit(3)\r\n    .do()\r\n)\r\n```\r\nThis functionality is now accessible through my alterations, by conveying `hybrid_search_kwargs={\"properties\": [\"question\", \"answer\"]}` as an argument to `WeaviateHybridSearchRetriever.get_relevant_documents()`. For example:\r\n\r\n```python\r\nimport os\r\nfrom weaviate import Client\r\nfrom langchain.retrievers import WeaviateHybridSearchRetriever\r\n\r\nclient = Client(\r\n        url=os.getenv(\"WEAVIATE_CLIENT_URL\"),\r\n        additional_headers={\r\n            \"X-OpenAI-Api-Key\": os.getenv(\"OPENAI_API_KEY\"),\r\n            \"Authorization\": f\"Bearer {os.getenv('WEAVIATE_API_KEY')}\",\r\n        },\r\n    )\r\n\r\nindex_name = \"Document\"\r\ntext_key = \"content\"\r\nattributes = [\"title\", \"summary\", \"header\", \"url\"]\r\n\r\nretriever = ExtendedWeaviateHybridSearchRetriever(\r\n        client=client,\r\n        index_name=index_name,\r\n        text_key=text_key,\r\n        attributes=attributes,\r\n    )\r\n\r\n# Warning: to utilize properties in this way, each use property must also be in the list `attributes + [text_key]`.\r\nhybrid_search_kwargs = {\"properties\": [\"summary^2\", \"content\"]}\r\nquery_text = \"Some Query Text\"\r\n\r\nrelevant_docs = retriever.get_relevant_documents(\r\n        query=query_text,\r\n        hybrid_search_kwargs=hybrid_search_kwargs\r\n    )\r\n```\r\nIn my experience working with the `weaviate-client` library, I have found that these supplementary options stand as vital tools for refining/finetuning searches, notably within multifaceted datasets. As a final note, this implementation supports both backwards and forward (within reason) compatiblity. It accommodates any future additional parameters Weaviate may add to `.with_hybrid()`, without necessitating further alterations.\r\n\r\n**Additional Documentation:**\r\nFor a more comprehensive understanding and to explore a myriad of useful options that are now accessible, please refer to the Weaviate documentation:\r\n- [Fusion Ranking Method](https://weaviate.io/developers/weaviate/search/hybrid#fusion-ranking-method)\r\n- [Selected Properties Only](https://weaviate.io/developers/weaviate/search/hybrid#selected-properties-only)\r\n- [Weight Boost Searched Properties](https://weaviate.io/developers/weaviate/search/hybrid#weight-boost-searched-properties)\r\n- [With a Custom Vector](https://weaviate.io/developers/weaviate/search/hybrid#with-a-custom-vector)\r\n\r\n**Tag Maintainer:** \r\n@hwchase17 - I have tagged you based on your frequent contributions to the pertinent file, `/retrievers/weaviate_hybrid_search.py`. My apologies if this was not the appropriate choice.\r\n\r\nThank you for considering my contribution, I look forward to your feedback, and to future collaboration.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10802/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10802/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10801",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10801/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10801/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10801/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10801",
        "id": 1903726835,
        "node_id": "I_kwDOIPDwls5xeJDz",
        "number": 10801,
        "title": "GrobidParser: process_xml chunk_bboxes[0][0][\"page\"], IndexError: list index out of range",
        "user": {
            "login": "zaurask",
            "id": 22592421,
            "node_id": "MDQ6VXNlcjIyNTkyNDIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22592421?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zaurask",
            "html_url": "https://github.com/zaurask",
            "followers_url": "https://api.github.com/users/zaurask/followers",
            "following_url": "https://api.github.com/users/zaurask/following{/other_user}",
            "gists_url": "https://api.github.com/users/zaurask/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zaurask/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zaurask/subscriptions",
            "organizations_url": "https://api.github.com/users/zaurask/orgs",
            "repos_url": "https://api.github.com/users/zaurask/repos",
            "events_url": "https://api.github.com/users/zaurask/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zaurask/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T21:09:13Z",
        "updated_at": "2023-09-19T21:27:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Using the GrobidParser with `segment_sentences=False` results in `langchain/document_loaders/parsers/grobid.py\", line 87, in process_xml\r\n    chunk_bboxes[0][0][\"page\"],\r\nIndexError: list index out of range` for some PDFs.\r\n\r\nFrom my own testing with the offending PDFs I suspect the following if-block in the GrobidParser is indented incorrectly, it needs one more level of indentation. Adding this indentation solved the issue on my end.\r\nhttps://github.com/langchain-ai/langchain/blob/20c6ade2fc24c458a080eaa468add7c61dc8dbc3/langchain/document_loaders/parsers/grobid.py#L80-L93\r\n\r\nIf you need a reproduction to verify, let me know.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10801/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10801/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10800",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10800/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10800/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10800/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10800",
        "id": 1903697606,
        "node_id": "PR_kwDOIPDwls5at0On",
        "number": 10800,
        "title": "gradient.ai LLM intregration",
        "user": {
            "login": "michaelfeil",
            "id": 63565275,
            "node_id": "MDQ6VXNlcjYzNTY1Mjc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/63565275?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelfeil",
            "html_url": "https://github.com/michaelfeil",
            "followers_url": "https://api.github.com/users/michaelfeil/followers",
            "following_url": "https://api.github.com/users/michaelfeil/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelfeil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelfeil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelfeil/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelfeil/orgs",
            "repos_url": "https://api.github.com/users/michaelfeil/repos",
            "events_url": "https://api.github.com/users/michaelfeil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelfeil/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-09-19T20:43:34Z",
        "updated_at": "2023-09-24T22:59:08Z",
        "closed_at": "2023-09-21T14:29:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10800",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10800",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10800.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10800.patch",
            "merged_at": "2023-09-21T14:29:16Z"
        },
        "body": "DRAFT\r\n\r\n- **Description:** This PR implements a new LLM API to https://gradient.ai \r\n- **Issue:** Feature request for LLM #10745 \r\n- **Dependencies**: No additional dependencies are introduced. \r\n- **Tag maintainer:** I am opening this PR for visibility, once ready for review I'll tag.\r\n\r\n- ```make format && make lint && make test``` is running.\r\n- added a `integration` and `mock unit` test.\r\n\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10800/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10800/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10799",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10799/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10799/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10799/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10799",
        "id": 1903694228,
        "node_id": "PR_kwDOIPDwls5atzeK",
        "number": 10799,
        "title": "fix qa structured link",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T20:40:42Z",
        "updated_at": "2023-09-19T20:40:50Z",
        "closed_at": "2023-09-19T20:40:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10799",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10799",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10799.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10799.patch",
            "merged_at": "2023-09-19T20:40:48Z"
        },
        "body": "redirect not working for some reason",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10799/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10799/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10798",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10798/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10798/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10798/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10798",
        "id": 1903665132,
        "node_id": "I_kwDOIPDwls5xd5_s",
        "number": 10798,
        "title": "Query: Is It Possible to Extract Content Using All HTML Tags in ReadTheDocsLoader?",
        "user": {
            "login": "ShivangiReja",
            "id": 45216704,
            "node_id": "MDQ6VXNlcjQ1MjE2NzA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/45216704?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShivangiReja",
            "html_url": "https://github.com/ShivangiReja",
            "followers_url": "https://api.github.com/users/ShivangiReja/followers",
            "following_url": "https://api.github.com/users/ShivangiReja/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShivangiReja/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShivangiReja/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShivangiReja/subscriptions",
            "organizations_url": "https://api.github.com/users/ShivangiReja/orgs",
            "repos_url": "https://api.github.com/users/ShivangiReja/repos",
            "events_url": "https://api.github.com/users/ShivangiReja/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShivangiReja/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-19T20:15:53Z",
        "updated_at": "2023-09-19T20:48:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nAccording to the [ReadTheDocsLoader documentation](https://api.python.langchain.com/en/latest/document_loaders/langchain.document_loaders.readthedocs.ReadTheDocsLoader.html), this loader iterates through all the files located under a specified path and extracts the actual content of the files by retrieving `main` html tags.\r\n\r\n```python\r\nfrom langchain.document_loaders import ReadTheDocsLoader\r\n\r\nloader = ReadTheDocsLoader(\"docs\", encoding=\"utf-8\", features=\"html.parser\")\r\ndocs = loader.load()\r\nlen(docs)\r\n```\r\n\r\nQuestion: In my HTML files, I don't have main HTML tags. Is it possible to configure the ReadTheDocsLoader to extract content from files by capturing all HTML tags instead of just the main HTML tags? Alternatively, are there alternative loaders available that can traverse all files within a specified path and extract content by capturing all HTML tags?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10798/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10798/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10797",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10797/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10797/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10797/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10797",
        "id": 1903648261,
        "node_id": "PR_kwDOIPDwls5atpgo",
        "number": 10797,
        "title": "make agent action serializable",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T20:01:57Z",
        "updated_at": "2023-09-19T23:16:16Z",
        "closed_at": "2023-09-19T23:16:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10797",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10797",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10797.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10797.patch",
            "merged_at": "2023-09-19T23:16:15Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10797/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10797/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10796",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10796/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10796/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10796/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10796",
        "id": 1903624264,
        "node_id": "PR_kwDOIPDwls5atkS5",
        "number": 10796,
        "title": "LLMRails",
        "user": {
            "login": "anar2706",
            "id": 51159628,
            "node_id": "MDQ6VXNlcjUxMTU5NjI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/51159628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anar2706",
            "html_url": "https://github.com/anar2706",
            "followers_url": "https://api.github.com/users/anar2706/followers",
            "following_url": "https://api.github.com/users/anar2706/following{/other_user}",
            "gists_url": "https://api.github.com/users/anar2706/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anar2706/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anar2706/subscriptions",
            "organizations_url": "https://api.github.com/users/anar2706/orgs",
            "repos_url": "https://api.github.com/users/anar2706/repos",
            "events_url": "https://api.github.com/users/anar2706/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anar2706/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-19T19:43:47Z",
        "updated_at": "2023-09-20T03:33:33Z",
        "closed_at": "2023-09-20T03:33:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10796",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10796",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10796.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10796.patch",
            "merged_at": "2023-09-20T03:33:33Z"
        },
        "body": "### LLMRails Integration\r\nThis PR provides integration with LLMRails. Implemented here are:\r\n\r\nlangchain/vectorstore/llm_rails.py\r\ntests/integration_tests/vectorstores/test_llm_rails.py\r\ndocs/extras/integrations/vectorstores/llm-rails.ipynb",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10796/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10796/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10795",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10795/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10795/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10795/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10795",
        "id": 1903560751,
        "node_id": "PR_kwDOIPDwls5atWev",
        "number": 10795,
        "title": "Batching for hf_pipeline",
        "user": {
            "login": "tjaffri",
            "id": 749277,
            "node_id": "MDQ6VXNlcjc0OTI3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/749277?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjaffri",
            "html_url": "https://github.com/tjaffri",
            "followers_url": "https://api.github.com/users/tjaffri/followers",
            "following_url": "https://api.github.com/users/tjaffri/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjaffri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjaffri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjaffri/subscriptions",
            "organizations_url": "https://api.github.com/users/tjaffri/orgs",
            "repos_url": "https://api.github.com/users/tjaffri/repos",
            "events_url": "https://api.github.com/users/tjaffri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjaffri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-19T18:56:05Z",
        "updated_at": "2023-10-25T06:34:55Z",
        "closed_at": "2023-09-25T17:23:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10795",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10795",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10795.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10795.patch",
            "merged_at": "2023-09-25T17:23:12Z"
        },
        "body": "The huggingface pipeline in langchain (used for locally hosted models) does not support batching. If you send in a batch of prompts, it just processes them serially using the base implementation of _generate: https://github.com/docugami/langchain/blob/master/libs/langchain/langchain/llms/base.py#L1004C2-L1004C29\r\n\r\nThis PR adds support for batching in this pipeline, so that GPUs can be fully saturated. I updated the accompanying notebook to show GPU batch inference.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10795/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10795/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10794",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10794/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10794/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10794/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10794",
        "id": 1903457226,
        "node_id": "PR_kwDOIPDwls5atAJA",
        "number": 10794,
        "title": "format intermediate steps",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T17:42:19Z",
        "updated_at": "2023-09-20T20:02:56Z",
        "closed_at": "2023-09-20T20:02:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10794",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10794",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10794.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10794.patch",
            "merged_at": "2023-09-20T20:02:55Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10794/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10794/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10793",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10793/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10793/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10793/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10793",
        "id": 1903414715,
        "node_id": "PR_kwDOIPDwls5as3A7",
        "number": 10793,
        "title": "Update sequential_chains.mdx (#64)",
        "user": {
            "login": "ShorthillsAI",
            "id": 141953346,
            "node_id": "U_kgDOCHYJQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/141953346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShorthillsAI",
            "html_url": "https://github.com/ShorthillsAI",
            "followers_url": "https://api.github.com/users/ShorthillsAI/followers",
            "following_url": "https://api.github.com/users/ShorthillsAI/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShorthillsAI/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShorthillsAI/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShorthillsAI/subscriptions",
            "organizations_url": "https://api.github.com/users/ShorthillsAI/orgs",
            "repos_url": "https://api.github.com/users/ShorthillsAI/repos",
            "events_url": "https://api.github.com/users/ShorthillsAI/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShorthillsAI/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T17:14:32Z",
        "updated_at": "2023-09-19T22:56:52Z",
        "closed_at": "2023-09-19T22:56:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10793",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10793",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10793.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10793.patch",
            "merged_at": "2023-09-19T22:56:52Z"
        },
        "body": "Fixed some more grammatical issues\r\n@baskaryan ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10793/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10793/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10792",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10792/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10792/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10792/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10792",
        "id": 1903398229,
        "node_id": "I_kwDOIPDwls5xc41V",
        "number": 10792,
        "title": "Issue: output_parser raises error when using create_pandas_dataframe_agent with GPT4ALL model",
        "user": {
            "login": "chiragagarwal1999",
            "id": 111168795,
            "node_id": "U_kgDOBqBNGw",
            "avatar_url": "https://avatars.githubusercontent.com/u/111168795?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chiragagarwal1999",
            "html_url": "https://github.com/chiragagarwal1999",
            "followers_url": "https://api.github.com/users/chiragagarwal1999/followers",
            "following_url": "https://api.github.com/users/chiragagarwal1999/following{/other_user}",
            "gists_url": "https://api.github.com/users/chiragagarwal1999/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chiragagarwal1999/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chiragagarwal1999/subscriptions",
            "organizations_url": "https://api.github.com/users/chiragagarwal1999/orgs",
            "repos_url": "https://api.github.com/users/chiragagarwal1999/repos",
            "events_url": "https://api.github.com/users/chiragagarwal1999/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chiragagarwal1999/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T17:03:06Z",
        "updated_at": "2023-09-19T17:10:40Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n**I tried to use create_pandas_dataframe_agent with GPT4ALL to query a csv. This is the output:**\r\n\r\n```\r\nEnter a query: Analyse the data and give precise answer to the question that is given below. Provide answer only to what\r\n is asked. Answer should be with respect to the whole document. Question: How many employees are male\"\r\n\r\n\r\n> Entering new AgentExecutor chain...\r\n\r\nThought: I will use pandas dataframe to get the summary of the data\r\nAction: I will use pandas dataframe to get the summary of the data\r\nObservation: The summary of the data is given below\r\n... (this Observation/Action/Observation can repeat N times)\r\n\r\nFinal Answer: The summary of the data shows that there are 4 male employees in the company.Traceback (most recent call last):\r\n  File \"C:\\project\\privateGPT\\privateGPT\\analyticsGPT.py\", line 102, in <module>\r\n    main()\r\n  File \"C:\\project\\privateGPT\\privateGPT\\analyticsGPT.py\", line 73, in main\r\n    agent.run(query)\r\n  File \"C:\\Python311\\Lib\\site-packages\\langchain\\chains\\base.py\", line 475, in run\r\n    return self(args[0], callbacks=callbacks, tags=tags, metadata=metadata)[\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Python311\\Lib\\site-packages\\langchain\\chains\\base.py\", line 282, in __call__\r\n    raise e\r\n  File \"C:\\Python311\\Lib\\site-packages\\langchain\\chains\\base.py\", line 276, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"C:\\Python311\\Lib\\site-packages\\langchain\\agents\\agent.py\", line 1036, in _call\r\n    next_step_output = self._take_next_step(\r\n                       ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Python311\\Lib\\site-packages\\langchain\\agents\\agent.py\", line 844, in _take_next_step\r\n    raise e\r\n  File \"C:\\Python311\\Lib\\site-packages\\langchain\\agents\\agent.py\", line 833, in _take_next_step\r\n    output = self.agent.plan(\r\n             ^^^^^^^^^^^^^^^^\r\n  File \"C:\\Python311\\Lib\\site-packages\\langchain\\agents\\agent.py\", line 457, in plan\r\n    return self.output_parser.parse(full_output)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Python311\\Lib\\site-packages\\langchain\\agents\\mrkl\\output_parser.py\", line 61, in parse\r\n    raise OutputParserException(\r\nlangchain.schema.output_parser.OutputParserException: Could not parse LLM output: `\r\nThought: I will use pandas dataframe to get the summary of the data\r\nAction: I will use pandas dataframe to get the summary of the data`\r\n```\r\n\r\nGiven below is my code snippet:\r\n\r\n```\r\n#!/usr/bin/env python3\r\nfrom dotenv import load_dotenv\r\nfrom langchain.chains import RetrievalQA\r\nfrom langchain.embeddings import HuggingFaceEmbeddings\r\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.llms import GPT4All, LlamaCpp\r\nimport chromadb\r\nimport os\r\nimport argparse\r\nimport time\r\nimport pandas as pd \r\nimport matplotlib.pyplot as plt \r\nimport seaborn as sns \r\nfrom langchain.agents import create_pandas_dataframe_agent\r\n\r\nif not load_dotenv():\r\n    print(\"Could not load .env file or it is empty. Please check if it exists and is readable.\")\r\n    exit(1)\r\n\r\nembeddings_model_name = os.environ.get(\"EMBEDDINGS_MODEL_NAME\")\r\npersist_directory = os.environ.get('PERSIST_DIRECTORY')\r\n\r\nmodel_type = os.environ.get('MODEL_TYPE')\r\nmodel_path = os.environ.get('MODEL_PATH')\r\nmodel_n_ctx = os.environ.get('MODEL_N_CTX')\r\nmodel_n_batch = int(os.environ.get('MODEL_N_BATCH',8))\r\ntarget_source_chunks = int(os.environ.get('TARGET_SOURCE_CHUNKS',4))\r\n\r\n\r\nfrom constants import CHROMA_SETTINGS\r\n\r\ndef main():\r\n    args = parse_arguments()\r\n    callbacks = [] if args.mute_stream else [StreamingStdOutCallbackHandler()]\r\n    if model_type == \"LlamaCpp\":\r\n            llm = LlamaCpp(model_path=model_path, max_tokens=model_n_ctx, n_batch=model_n_batch, callbacks=callbacks, verbose=False)\r\n    elif model_type == \"GPT4All\":\r\n            llm = GPT4All(model=model_path, max_tokens=model_n_ctx, backend='gptj', n_batch=model_n_batch, callbacks=callbacks, verbose=False)\r\n    else:\r\n            raise Exception(f\"Model type {model_type} is not supported. Please choose one of the following: LlamaCpp, GPT4All\")\r\n    df = pd.read_csv('C:/project/privateGPT/privateGPT/source_documents/employees.csv') \r\n    agent = create_pandas_dataframe_agent(llm, \r\n              df, verbose=True, handle_parsing_errors=\"Check your output and make sure it conforms!\") \r\n    \r\n    while True:\r\n        query = input(\"\\nEnter a query: \")\r\n        if query == \"exit\":\r\n            break\r\n        if query.strip() == \"\":\r\n            continue\r\n\r\n        # Get the answer from the chain\r\n        start = time.time()\r\n        agent.run(query)\r\n        end = time.time()\r\n\r\ndef parse_arguments():\r\n    parser = argparse.ArgumentParser(description='privateGPT: Ask questions to your documents without an internet connection, '\r\n                                                 'using the power of LLMs.')\r\n    parser.add_argument(\"--hide-source\", \"-S\", action='store_true',\r\n                        help='Use this flag to disable printing of source documents used for answers.')\r\n\r\n    parser.add_argument(\"--mute-stream\", \"-M\",\r\n                        action='store_true',\r\n                        help='Use this flag to disable the streaming StdOut callback for LLMs.')\r\n\r\n    return parser.parse_args()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10792/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10792/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10791",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10791/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10791/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10791/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10791",
        "id": 1903367511,
        "node_id": "PR_kwDOIPDwls5ass3u",
        "number": 10791,
        "title": "Corrected some spelling mistakes and grammatical errors",
        "user": {
            "login": "ShorthillsAI",
            "id": 141953346,
            "node_id": "U_kgDOCHYJQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/141953346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShorthillsAI",
            "html_url": "https://github.com/ShorthillsAI",
            "followers_url": "https://api.github.com/users/ShorthillsAI/followers",
            "following_url": "https://api.github.com/users/ShorthillsAI/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShorthillsAI/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShorthillsAI/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShorthillsAI/subscriptions",
            "organizations_url": "https://api.github.com/users/ShorthillsAI/orgs",
            "repos_url": "https://api.github.com/users/ShorthillsAI/repos",
            "events_url": "https://api.github.com/users/ShorthillsAI/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShorthillsAI/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T16:42:28Z",
        "updated_at": "2023-09-19T17:08:59Z",
        "closed_at": "2023-09-19T17:08:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10791",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10791",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10791.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10791.patch",
            "merged_at": "2023-09-19T17:08:59Z"
        },
        "body": " Corrected some spelling mistakes and grammatical errors\r\nCC: @baskaryan, @eyurtsev, @hwchase17.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10791/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10791/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10790",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10790/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10790/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10790/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10790",
        "id": 1903282525,
        "node_id": "PR_kwDOIPDwls5asamI",
        "number": 10790,
        "title": "add agent output parsers",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-19T15:51:34Z",
        "updated_at": "2023-09-20T19:10:11Z",
        "closed_at": "2023-09-20T19:10:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10790",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10790",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10790.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10790.patch",
            "merged_at": "2023-09-20T19:10:09Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10790/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10790/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10789",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10789/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10789/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10789/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10789",
        "id": 1903281810,
        "node_id": "I_kwDOIPDwls5xccaS",
        "number": 10789,
        "title": "Prompt was changed to different meaning",
        "user": {
            "login": "ch1zzzz",
            "id": 34596838,
            "node_id": "MDQ6VXNlcjM0NTk2ODM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/34596838?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ch1zzzz",
            "html_url": "https://github.com/ch1zzzz",
            "followers_url": "https://api.github.com/users/ch1zzzz/followers",
            "following_url": "https://api.github.com/users/ch1zzzz/following{/other_user}",
            "gists_url": "https://api.github.com/users/ch1zzzz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ch1zzzz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ch1zzzz/subscriptions",
            "organizations_url": "https://api.github.com/users/ch1zzzz/orgs",
            "repos_url": "https://api.github.com/users/ch1zzzz/repos",
            "events_url": "https://api.github.com/users/ch1zzzz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ch1zzzz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-19T15:51:05Z",
        "updated_at": "2023-09-27T13:52:06Z",
        "closed_at": "2023-09-27T13:52:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nI'm building a chatbot to introduce matching job openings from files to users. When the user input \"I want to find a job\", it is modified to \"What kind of job are you looking for?\" which ask the model what job he is looking for, but of course, it won't get an answer.\r\n\r\nHuman input: I want to find a job\r\nHuman input in Prompt after formatting: What kind of job are you looking for?\r\nChatbot: As an AI, I don't have personal preferences or the ability to look for a job.\r\n\r\nHere is my prompt and conversation:\r\n```\r\ntemplate = \"\"\" \r\nYou are an AI assistant specifically tasked with finding matching\r\njob opportunities in our job data based on user requests.\r\n\r\n###\r\nContext from data: {context}\r\n###\r\n{chat_history}\r\n\r\nHuman: {question}\r\nChatbot:\"\"\"\r\n\r\nprompt = PromptTemplate(\r\ninput_variables=[\"question\", \"chat_history\", \"context\"],\r\ntemplate=template\r\n)\r\nqa = ConversationalRetrievalChain.from_llm(\r\n    llm=llm,\r\n    retriever=db.as_retriever(),\r\n    combine_docs_chain_kwargs={\"prompt\": prompt},\r\n    memory=memory,\r\n    verbose=True\r\n)\r\n```\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [X] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\ntemplate = \"\"\" \r\nYou are an AI assistant specifically tasked with finding matching\r\njob opportunities in our job data based on user requests.\r\n\r\n###\r\nContext from data: {context}\r\n###\r\n{chat_history}\r\n\r\nHuman: {question}\r\nChatbot:\"\"\"\r\n\r\nprompt = PromptTemplate(\r\ninput_variables=[\"question\", \"chat_history\", \"context\"],\r\ntemplate=template\r\n)\r\nqa = ConversationalRetrievalChain.from_llm(\r\n    llm=llm,\r\n    retriever=db.as_retriever(),\r\n    combine_docs_chain_kwargs={\"prompt\": prompt},\r\n    memory=memory,\r\n    verbose=True\r\n)\r\n\r\n### Expected behavior\r\n\r\nthe prompt should be what user have input",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10789/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10789/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10788",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10788/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10788/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10788/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10788",
        "id": 1903273291,
        "node_id": "PR_kwDOIPDwls5asYm0",
        "number": 10788,
        "title": "Fix for versioned OpenAI instruct models",
        "user": {
            "login": "jacoblee93",
            "id": 6952323,
            "node_id": "MDQ6VXNlcjY5NTIzMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6952323?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacoblee93",
            "html_url": "https://github.com/jacoblee93",
            "followers_url": "https://api.github.com/users/jacoblee93/followers",
            "following_url": "https://api.github.com/users/jacoblee93/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacoblee93/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacoblee93/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacoblee93/subscriptions",
            "organizations_url": "https://api.github.com/users/jacoblee93/orgs",
            "repos_url": "https://api.github.com/users/jacoblee93/repos",
            "events_url": "https://api.github.com/users/jacoblee93/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacoblee93/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-19T15:45:50Z",
        "updated_at": "2023-09-19T22:50:07Z",
        "closed_at": "2023-09-19T22:50:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10788",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10788",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10788.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10788.patch",
            "merged_at": "2023-09-19T22:50:06Z"
        },
        "body": "Versioned OpenAI instruct models may end with numbers, e.g. `gpt-3.5-turbo-instruct-0914`.\r\n\r\nFixes https://github.com/langchain-ai/langchainjs/issues/2669 in Python",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10788/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10788/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10787",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10787/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10787/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10787/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10787",
        "id": 1903231986,
        "node_id": "I_kwDOIPDwls5xcQPy",
        "number": 10787,
        "title": "Document Comparison, OPENAI_FUNCTIONS does not always look into the tools",
        "user": {
            "login": "Zylon989",
            "id": 137006358,
            "node_id": "U_kgDOCCqNFg",
            "avatar_url": "https://avatars.githubusercontent.com/u/137006358?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Zylon989",
            "html_url": "https://github.com/Zylon989",
            "followers_url": "https://api.github.com/users/Zylon989/followers",
            "following_url": "https://api.github.com/users/Zylon989/following{/other_user}",
            "gists_url": "https://api.github.com/users/Zylon989/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Zylon989/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Zylon989/subscriptions",
            "organizations_url": "https://api.github.com/users/Zylon989/orgs",
            "repos_url": "https://api.github.com/users/Zylon989/repos",
            "events_url": "https://api.github.com/users/Zylon989/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Zylon989/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-19T15:22:10Z",
        "updated_at": "2023-09-19T18:59:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHaving basicaly this demo code and the issue is that it's not working reliably!\r\nSometimes OPENAI_FUNCTIONS just doesn't look into tools and telling that he can't find the documents.\r\n\r\nSeems like this happens because OpenAI decides on it's own if he rather use tools or replies on his own knowledge.\r\n\r\nI also don't want to fill the memory with all the data every time I am starting a new conversation, this does not work with huge data files.\r\n\r\nAny other way to solve this?\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n      from pydantic import BaseModel, Field\r\n      \r\n      from langchain.chat_models import ChatOpenAI\r\n      from langchain.agents import Tool\r\n      from langchain.embeddings.openai import OpenAIEmbeddings\r\n      from langchain.text_splitter import CharacterTextSplitter\r\n      from langchain.vectorstores import FAISS\r\n      from langchain.document_loaders import PyPDFLoader\r\n      from langchain.chains import RetrievalQA\r\n      \r\n      class DocumentInput(BaseModel):\r\n          question: str = Field()\r\n      \r\n      \r\n      llm = ChatOpenAI(temperature=0, model=\"gpt-3.5-turbo-0613\")\r\n      \r\n      tools = []\r\n      files = [\r\n          # https://abc.xyz/investor/static/pdf/2023Q1_alphabet_earnings_release.pdf\r\n          {\r\n              \"name\": \"alphabet-earnings\",\r\n              \"path\": \"/Users/harrisonchase/Downloads/2023Q1_alphabet_earnings_release.pdf\",\r\n          },\r\n          # https://digitalassets.tesla.com/tesla-contents/image/upload/IR/TSLA-Q1-2023-Update\r\n          {\r\n              \"name\": \"tesla-earnings\",\r\n              \"path\": \"/Users/harrisonchase/Downloads/TSLA-Q1-2023-Update.pdf\",\r\n          },\r\n      ]\r\n      \r\n      for file in files:\r\n          loader = PyPDFLoader(file[\"path\"])\r\n          pages = loader.load_and_split()\r\n          text_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\n          docs = text_splitter.split_documents(pages)\r\n          embeddings = OpenAIEmbeddings()\r\n          retriever = FAISS.from_documents(docs, embeddings).as_retriever()\r\n      \r\n          # Wrap retrievers in a Tool\r\n          tools.append(\r\n              Tool(\r\n                  args_schema=DocumentInput,\r\n                  name=file[\"name\"],\r\n                  description=f\"useful when you want to answer questions about {file['name']}\",\r\n                  func=RetrievalQA.from_chain_type(llm=llm, retriever=retriever),\r\n              )\r\n          )\r\n          \r\n          llm = ChatOpenAI(\r\n          temperature=0,\r\n          model=\"gpt-3.5-turbo-0613\",\r\n      )\r\n      \r\n      agent = initialize_agent(\r\n          agent=AgentType.OPENAI_FUNCTIONS,\r\n          tools=tools,\r\n          llm=llm,\r\n          verbose=True,\r\n      )\r\n      \r\n      agent({\"input\": \"did alphabet or tesla have more revenue?\"})\n\n### Expected behavior\n\nAlways checking the tools before answering a question.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10787/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10787/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10786",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10786/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10786/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10786/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10786",
        "id": 1903231960,
        "node_id": "PR_kwDOIPDwls5asPwX",
        "number": 10786,
        "title": "tool rendering",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T15:22:09Z",
        "updated_at": "2023-09-19T19:05:40Z",
        "closed_at": "2023-09-19T19:05:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10786",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10786",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10786.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10786.patch",
            "merged_at": "2023-09-19T19:05:39Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10786/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10786/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10785",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10785/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10785/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10785/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10785",
        "id": 1903209389,
        "node_id": "PR_kwDOIPDwls5asK1a",
        "number": 10785,
        "title": "Bagatur/bump 295",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T15:10:48Z",
        "updated_at": "2023-09-19T15:22:43Z",
        "closed_at": "2023-09-19T15:22:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10785",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10785",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10785.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10785.patch",
            "merged_at": "2023-09-19T15:22:42Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10785/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10785/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10784",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10784/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10784/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10784/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10784",
        "id": 1903159588,
        "node_id": "I_kwDOIPDwls5xb-kk",
        "number": 10784,
        "title": "initializing and using a Supabase vector store using SupabaseVectorStore",
        "user": {
            "login": "naodya",
            "id": 1115720,
            "node_id": "MDQ6VXNlcjExMTU3MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1115720?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naodya",
            "html_url": "https://github.com/naodya",
            "followers_url": "https://api.github.com/users/naodya/followers",
            "following_url": "https://api.github.com/users/naodya/following{/other_user}",
            "gists_url": "https://api.github.com/users/naodya/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/naodya/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/naodya/subscriptions",
            "organizations_url": "https://api.github.com/users/naodya/orgs",
            "repos_url": "https://api.github.com/users/naodya/repos",
            "events_url": "https://api.github.com/users/naodya/events{/privacy}",
            "received_events_url": "https://api.github.com/users/naodya/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T14:46:15Z",
        "updated_at": "2023-09-19T15:21:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n`Python 3.11.4`\r\n`langchain==0.0.271`\r\n`lark==1.1.7`\r\n`openai==0.27.8`\r\n\r\n### Who can help?\r\nGetting the following error:\r\n```sh\r\n retriever = SelfQueryRetriever.from_llm(\r\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/langchain/retrievers/self_query/base.py\", line 135, in from_llm\r\n    structured_query_translator = _get_builtin_translator(vectorstore)\r\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/langchain/retrievers/self_query/base.py\", line 45, in _get_builtin_translator\r\n    raise ValueError(\r\nValueError: Self query retriever with Vector Store type <class 'langchain.vectorstores.supabase.SupabaseVectorStore'> not supported.\r\n```\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n-  initialize a SupabaseVectorStore. I want to use existing index, embeddings already created and stored in table `documents`\r\n\r\ntable definition:\r\n```sql\r\ncreate table\r\n  public.documents (\r\n    id bigserial,\r\n    content text null,\r\n    metadata jsonb null,\r\n    embedding public.vector null,\r\n    constraint documents_pkey primary key (id)\r\n  ) tablespace pg_default;\r\n\r\n```\r\n\r\n```python\r\ndocument_content_description = \"Brief summary of a movie\"\r\n\r\nembeddings = OpenAIEmbeddings()\r\nvectorstore = SupabaseVectorStore(\r\n    client=supabase,\r\n    embedding=embeddings,\r\n    table_name=\"documents\",\r\n    query_name=\"match_documents\",\r\n)\r\n\r\nllm = OpenAI(temperature=0)\r\nretriever = SelfQueryRetriever.from_llm(\r\n    llm, vectorstore, document_content_description, metadata_field_info, verbose=True\r\n)\r\n\r\nretriever.get_relevant_documents(\"What are some movies about dinosaurs\")\r\n```\r\n\r\n### Expected behavior\r\n\r\nreturn relevant documents",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10784/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10784/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10783",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10783/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10783/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10783/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10783",
        "id": 1903062021,
        "node_id": "I_kwDOIPDwls5xbmwF",
        "number": 10783,
        "title": "Message History not working with LLMSingleActionAgent",
        "user": {
            "login": "Daniel199438",
            "id": 16019073,
            "node_id": "MDQ6VXNlcjE2MDE5MDcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/16019073?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Daniel199438",
            "html_url": "https://github.com/Daniel199438",
            "followers_url": "https://api.github.com/users/Daniel199438/followers",
            "following_url": "https://api.github.com/users/Daniel199438/following{/other_user}",
            "gists_url": "https://api.github.com/users/Daniel199438/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Daniel199438/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Daniel199438/subscriptions",
            "organizations_url": "https://api.github.com/users/Daniel199438/orgs",
            "repos_url": "https://api.github.com/users/Daniel199438/repos",
            "events_url": "https://api.github.com/users/Daniel199438/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Daniel199438/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-09-19T13:59:39Z",
        "updated_at": "2023-09-20T13:14:16Z",
        "closed_at": "2023-09-20T13:04:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nMy systeminfo: \r\n\r\nlangchain 0.0.294\r\nPython 3.11\r\n\r\n### Who can help?\r\n\r\nIm not sure, maybe @hwchase17 and @agola11 can help\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [X] Memory\r\n- [X] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n\r\n\r\nThat is my code: \r\n\r\n```python\r\n    openai.api_key = config.openai_api_key\r\n\r\n    llm = ChatOpenAI(temperature=1, model=\"gpt-3.5-turbo-16k\", max_tokens=1024)\r\n\r\n    used_tools = []\r\n\r\n    for tool in tools_to_use:\r\n        vector_store = get_vector_store(tool.get(\"collection\"))\r\n        index = VectorStoreIndex.from_vector_store(vector_store=vector_store, service_context=service_context)\r\n\r\n        vector_store_info = VectorStoreInfo(\r\n            content_info=tool.get(\"description\"),\r\n            metadata_info=[]\r\n        )\r\n        retriever = VectorIndexAutoRetriever(index, vector_store_info=vector_store_info)\r\n\r\n        used_tools.append(\r\n            Tool(\r\n                name=tool.get(\"name\"),\r\n                description=tool.get(\"description\"),\r\n                func=lambda q: str(retriever.retrieve(q)),\r\n            )\r\n        )\r\n\r\n    message_history = PostgresChatMessageHistory(\r\n        connection_string=f\"postgresql://postgres:{postgres_str}\", session_id=session_id, table_name=\"chat_history\",\r\n    )\r\n\r\n    prompt = CustomPromptTemplate(template=get_prompt_template(), tools=used_tools,\r\n                                  input_variables=[\"input\", \"intermediate_steps\", \"chat_history\"])\r\n\r\n    output_parser = CustomOutputParser()\r\n\r\n    memory = ConversationBufferMemory(\r\n        memory_key=\"chat_history\", chat_memory=message_history\r\n    )\r\n\r\n\r\n    llm_chain = LLMChain(llm=llm, prompt=prompt)\r\n\r\n    tool_names = [tool.name for tool in used_tools]\r\n\r\n    agent = LLMSingleActionAgent(\r\n        llm_chain=llm_chain,\r\n        output_parser=output_parser,\r\n        stop=[\"\\nFinal Answer:\"],  # Observation\r\n        allowed_tools=tool_names,\r\n        handle_parsing_errors=True,\r\n    )\r\n\r\n    agent_executor = AgentExecutor.from_agent_and_tools(agent=agent, tools=used_tools, verbose=debug,\r\n                                                        memory=memory, return_intermediate_steps=True)\r\n\r\n    response = agent_executor(user_prompt)\r\n``` \r\n\r\n### Expected behavior\r\n\r\nIf i print the params, it shows my chat history (so it's successfully loaded into code and into the agent).\r\n\r\n```\r\n{'intermediate_steps': [], 'stop': ['\\nFinal Answer:'], 'input': 'What was the last thing I said?', 'chat_history': 'Human: ....?\\nAI:....']\r\n``` \r\n\r\nIt should also process the chat history correctly.\r\nBut I always get this answer to my prompt:\r\n```\r\nSince the previous chat history is not available, I can't tell what you said last. Please give me more information or ask your question again so I can help you further.\r\n``` \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10783/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10783/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10782",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10782/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10782/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10782/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10782",
        "id": 1903035815,
        "node_id": "PR_kwDOIPDwls5ark79",
        "number": 10782,
        "title": "Python: Add iterator support to chat history base class",
        "user": {
            "login": "cccs-eric",
            "id": 56447460,
            "node_id": "MDQ6VXNlcjU2NDQ3NDYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/56447460?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cccs-eric",
            "html_url": "https://github.com/cccs-eric",
            "followers_url": "https://api.github.com/users/cccs-eric/followers",
            "following_url": "https://api.github.com/users/cccs-eric/following{/other_user}",
            "gists_url": "https://api.github.com/users/cccs-eric/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cccs-eric/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cccs-eric/subscriptions",
            "organizations_url": "https://api.github.com/users/cccs-eric/orgs",
            "repos_url": "https://api.github.com/users/cccs-eric/repos",
            "events_url": "https://api.github.com/users/cccs-eric/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cccs-eric/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-19T13:47:28Z",
        "updated_at": "2023-09-20T01:57:24Z",
        "closed_at": "2023-09-20T01:57:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10782",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10782",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10782.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10782.patch",
            "merged_at": null
        },
        "body": "  - **Description:** Add Python iterator support for chat messages in `BaseChatMessageHistory`.  This makes any chat history class iterable on its message list.  Here is my use-case that triggered this change.  \r\n  \r\n  I have a `ConversationBufferMemory` that is backed by a `FileChatMessageHistory`:\r\n```python\r\nvectorstore = get_vectorstore()\r\nchat_history = FileChatMessageHistory(\"chat_memory_path/session.json\")\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", chat_memory=chat_history, return_messages=True)\r\nqa = ConversationalRetrievalChain.from_llm(\r\n    get_chat_model(),\r\n    vectorstore.as_retriever(),\r\n    return_source_documents=True,\r\n    memory=memory,\r\n)\r\n```\r\nwhere `get_chat_model()` returns a LLM and `vectorstore` is your favorite Vector store.  \r\n\r\nA problem occurs when `BaseConversationalRetrievalChain._get_chat_history()` is called.  In my setup, `chat_history` is an instance of `FileChatMessageHistory` and `_get_chat_history()` tries to create an iterator from it (see this [line](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/chains/conversational_retrieval/base.py#L37)).  I could supply my own callable version when building the chain, but it kind of made sense to me that a chat history would be iterable.\r\n\r\nI'm looking for input on how to make this pass in `mypy` since it complains with the following:\r\n```\r\nlangchain/memory/chat_message_histories/in_memory.py:10: error: Definition of \"__iter__\" in base class \"BaseChatMessageHistory\" is incompatible with definition in base class \"BaseModel\"  [misc]\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10782/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10782/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10781",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10781/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10781/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10781/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10781",
        "id": 1902965145,
        "node_id": "I_kwDOIPDwls5xbPGZ",
        "number": 10781,
        "title": "Vector store-backed retriever -> allow using search_kwargs in get_relevant_documents function (PGVector)",
        "user": {
            "login": "Coding-Crashkurse",
            "id": 64363987,
            "node_id": "MDQ6VXNlcjY0MzYzOTg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/64363987?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Coding-Crashkurse",
            "html_url": "https://github.com/Coding-Crashkurse",
            "followers_url": "https://api.github.com/users/Coding-Crashkurse/followers",
            "following_url": "https://api.github.com/users/Coding-Crashkurse/following{/other_user}",
            "gists_url": "https://api.github.com/users/Coding-Crashkurse/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Coding-Crashkurse/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Coding-Crashkurse/subscriptions",
            "organizations_url": "https://api.github.com/users/Coding-Crashkurse/orgs",
            "repos_url": "https://api.github.com/users/Coding-Crashkurse/repos",
            "events_url": "https://api.github.com/users/Coding-Crashkurse/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Coding-Crashkurse/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T13:19:02Z",
        "updated_at": "2023-09-19T13:21:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThis is the current implementation. You get your Vectorstore and turn it into a retriever. You pass search kwargs into the as_retriever method.\r\n\r\n```\r\nretriever = db.as_retriever(search_type=\"similarity_score_threshold\", search_kwargs={\"score_threshold\": .5})\r\ndocs = retriever.get_relevant_documents(\"what did he say about ketanji brown jackson\")\r\n```\r\n\r\nIs this as intended? I think it\u00b4s not the best way. We use PGVector and use it in a API where we pass metadata to do filtered search in the vectorstore. \r\n\r\nHow I think it should look like:\r\n\r\n```\r\ndocs = retriever.get_relevant_documents(\"what did he say about ketanji brown jackson\", search_kwargs={\"score_threshold\": .5})\r\n```\r\nSo instead of using it in the constructor, I would rather prefer it in `get_relevant_documents` method. \r\n\r\n\n\n### Motivation\n\nI don\u00b4t want to create a new retriever instance every request and rather have `get_relevant_documents` more dynamic.\n\n### Your contribution\n\nAs far as I can see this should be doable by passing some kwargs around. I could probably implement this if I am allowed to.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10781/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10781/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10780",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10780/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10780/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10780/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10780",
        "id": 1902954008,
        "node_id": "PR_kwDOIPDwls5arS4M",
        "number": 10780,
        "title": "Add option to use SharePoint folder ID instead of folder path",
        "user": {
            "login": "WaleedAlfaris",
            "id": 92319577,
            "node_id": "U_kgDOBYCvWQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/92319577?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/WaleedAlfaris",
            "html_url": "https://github.com/WaleedAlfaris",
            "followers_url": "https://api.github.com/users/WaleedAlfaris/followers",
            "following_url": "https://api.github.com/users/WaleedAlfaris/following{/other_user}",
            "gists_url": "https://api.github.com/users/WaleedAlfaris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/WaleedAlfaris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/WaleedAlfaris/subscriptions",
            "organizations_url": "https://api.github.com/users/WaleedAlfaris/orgs",
            "repos_url": "https://api.github.com/users/WaleedAlfaris/repos",
            "events_url": "https://api.github.com/users/WaleedAlfaris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/WaleedAlfaris/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T13:13:22Z",
        "updated_at": "2023-09-23T18:07:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10780",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10780",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10780.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10780.patch",
            "merged_at": null
        },
        "body": "* Description:\u00a0Provides user with the option to use folder ID to get the SharePoint folder. Updated notebook to show use of this optional feature. Also fixed a typo in the url to get Subsite ID in the notebook (url was missing 'sites/' before ),\r\n* Issue:\u00a0GraphAPI will often return \"No Resource Found\" error when using the folder path. This is as far as I can tell a bug on the GraphAPI and not user related. This can be circumvented by using the folder ID and get_item() method instead of the folder path and get_item_by_path() method,\r\n* Dependencies:\u00a0None,\r\n* Tag maintainer:\u00a0[@baskaryan](https://github.com/baskaryan),\r\n* Twitter handle:\u00a0@WRhetoric",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10780/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10780/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10779",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10779/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10779/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10779/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10779",
        "id": 1902915680,
        "node_id": "I_kwDOIPDwls5xbDBg",
        "number": 10779,
        "title": "Make tools async by default unless user overrides `_arun`",
        "user": {
            "login": "oneryalcin",
            "id": 8620952,
            "node_id": "MDQ6VXNlcjg2MjA5NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8620952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oneryalcin",
            "html_url": "https://github.com/oneryalcin",
            "followers_url": "https://api.github.com/users/oneryalcin/followers",
            "following_url": "https://api.github.com/users/oneryalcin/following{/other_user}",
            "gists_url": "https://api.github.com/users/oneryalcin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oneryalcin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oneryalcin/subscriptions",
            "organizations_url": "https://api.github.com/users/oneryalcin/orgs",
            "repos_url": "https://api.github.com/users/oneryalcin/repos",
            "events_url": "https://api.github.com/users/oneryalcin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oneryalcin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-19T12:52:13Z",
        "updated_at": "2023-09-19T13:04:35Z",
        "closed_at": "2023-09-19T13:04:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nMost of the tools are currently sync tools, so if an async agent executor calls them tools raise `NotImplementedError`\r\n\r\nMy suggestion is to change `_arun` method of the `langchain.tools.base.BaseTool` class with a bolierplate code asyncer. An [example is given in the gh issues](https://github.com/langchain-ai/langchain/issues/5011#issuecomment-1725356727). \r\n\r\nAsyncer is a small lib developped by @tiangolo (FastApi creator) that can convert a sync code to async (runs in worker threads) \r\n\r\nThis way by default we would have an async version of any tool. Tool implementors can always override `_arun` method in their implementation providing more native async support. But otherwise we would have a default async implementation. \n\n### Motivation\n\nIn production systems we need to scale the requests to our langchain app, thus this means servin cconcurrently to many users. In python for IO Bound operations this is best done with async libs and frameworks. However all parts of the code has to be async, including LLMs + tools ..etc \r\n\r\nSince many tools lack support for `_arun` method, this enhancement will provide default async support for all tools. \n\n### Your contribution\n\nYes, I'll create a PR for this. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10779/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10779/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10778",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10778/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10778/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10778/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10778",
        "id": 1902863147,
        "node_id": "I_kwDOIPDwls5xa2Mr",
        "number": 10778,
        "title": "Using StructuredTool with agent",
        "user": {
            "login": "Zylon989",
            "id": 137006358,
            "node_id": "U_kgDOCCqNFg",
            "avatar_url": "https://avatars.githubusercontent.com/u/137006358?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Zylon989",
            "html_url": "https://github.com/Zylon989",
            "followers_url": "https://api.github.com/users/Zylon989/followers",
            "following_url": "https://api.github.com/users/Zylon989/following{/other_user}",
            "gists_url": "https://api.github.com/users/Zylon989/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Zylon989/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Zylon989/subscriptions",
            "organizations_url": "https://api.github.com/users/Zylon989/orgs",
            "repos_url": "https://api.github.com/users/Zylon989/repos",
            "events_url": "https://api.github.com/users/Zylon989/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Zylon989/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 17,
        "created_at": "2023-09-19T12:21:53Z",
        "updated_at": "2023-09-21T09:55:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nUsing this Code I am getting this error:\r\nTypeError: Chain.__call__() got an unexpected keyword argument 'question'\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n  from pydantic import BaseModel, Field\r\n  \r\n  from langchain.chat_models import ChatOpenAI\r\n  from langchain.agents import Tool\r\n  from langchain.embeddings.openai import OpenAIEmbeddings\r\n  from langchain.text_splitter import CharacterTextSplitter\r\n  from langchain.vectorstores import FAISS\r\n  from langchain.document_loaders import PyPDFLoader\r\n  from langchain.chains import RetrievalQA\r\n  from langchain.agents import initialize_agent\r\n  from langchain.agents import AgentType\r\n  from langchain.tools import StructuredTool\r\n  from dotenv import load_dotenv\r\n  class DocumentInput(BaseModel):\r\n      question: str = Field()\r\n  \r\n  load_dotenv()\r\n  \r\n  llm = ChatOpenAI(temperature=0, model=\"gpt-3.5-turbo-0613\")\r\n  \r\n  tools = []\r\n  files = [\r\n      # https://abc.xyz/investor/static/pdf/2023Q1_alphabet_earnings_release.pdf\r\n      {\r\n          \"name\": \"alphabet-earnings\",\r\n          \"path\": \"/Users/harrisonchase/Downloads/2023Q1_alphabet_earnings_release.pdf\",\r\n      },\r\n      # https://digitalassets.tesla.com/tesla-contents/image/upload/IR/TSLA-Q1-2023-Update\r\n      {\r\n          \"name\": \"tesla-earnings\",\r\n          \"path\": \"/Users/harrisonchase/Downloads/TSLA-Q1-2023-Update.pdf\",\r\n      },\r\n  ]\r\n  \r\n  for file in files:\r\n      loader = PyPDFLoader(file[\"path\"])\r\n      pages = loader.load_and_split()\r\n      text_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\n      docs = text_splitter.split_documents(pages)\r\n      embeddings = OpenAIEmbeddings()\r\n      retriever = FAISS.from_documents(docs, embeddings).as_retriever()\r\n  \r\n      # Wrap retrievers in a Tool\r\n      tools.append(\r\n          StructuredTool.from_function(\r\n              args_schema=DocumentInput,\r\n              name=file[\"name\"],\r\n              description=f\"useful when you want to answer questions about {file['name']}\",\r\n              func=RetrievalQA.from_chain_type(llm=llm, retriever=retriever),\r\n          )\r\n      )\r\n  \r\n  llm = ChatOpenAI(\r\n      temperature=0,\r\n      model=\"gpt-3.5-turbo-0613\",\r\n  )\r\n  \r\n  agent = initialize_agent(\r\n      agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,\r\n      tools=tools,\r\n      llm=llm,\r\n      verbose=True,\r\n  )\r\n  \r\n  agent({\"input\": \"did alphabet or tesla have more revenue?\"})\n\n### Expected behavior\n\nCompare the two documents!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10778/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10778/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10777",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10777/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10777/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10777/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10777",
        "id": 1902846570,
        "node_id": "PR_kwDOIPDwls5aq7Wa",
        "number": 10777,
        "title": "Provide option to use folder_id instead of folder_path",
        "user": {
            "login": "WaleedAlfaris",
            "id": 92319577,
            "node_id": "U_kgDOBYCvWQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/92319577?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/WaleedAlfaris",
            "html_url": "https://github.com/WaleedAlfaris",
            "followers_url": "https://api.github.com/users/WaleedAlfaris/followers",
            "following_url": "https://api.github.com/users/WaleedAlfaris/following{/other_user}",
            "gists_url": "https://api.github.com/users/WaleedAlfaris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/WaleedAlfaris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/WaleedAlfaris/subscriptions",
            "organizations_url": "https://api.github.com/users/WaleedAlfaris/orgs",
            "repos_url": "https://api.github.com/users/WaleedAlfaris/repos",
            "events_url": "https://api.github.com/users/WaleedAlfaris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/WaleedAlfaris/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-19T12:11:20Z",
        "updated_at": "2023-09-19T12:56:29Z",
        "closed_at": "2023-09-19T12:56:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10777",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10777",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10777.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10777.patch",
            "merged_at": null
        },
        "body": "  - **Description:** Provides user with the option to use folder ID to get the SharePoint folder. Updated notebook to show use of this optional feature. Also fixed a typo in the url to get Subsite ID in the notebook (url was missing 'sites/' before <site-name>), \r\n  - **Issue:** GraphAPI will often return \"No Resource Found\" error when using the folder path. This is as far as I can tell a bug on the GraphAPI and not user related. This can be circumvented by using the folder ID and get_item() method instead of the folder path and get_item_by_path() method,\r\n  - **Dependencies:** None,\r\n  - **Tag maintainer:** @baskaryan,\r\n  - **Twitter handle:** @WRhetoric\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10777/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10777/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]