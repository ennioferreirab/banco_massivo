[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6705",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6705/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6705/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6705/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6705",
        "id": 1773065603,
        "node_id": "PR_kwDOIPDwls5T1TTD",
        "number": 6705,
        "title": "Fix Typo in LangChain MyScale Integration  Doc",
        "user": {
            "login": "mpskex",
            "id": 8456706,
            "node_id": "MDQ6VXNlcjg0NTY3MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8456706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mpskex",
            "html_url": "https://github.com/mpskex",
            "followers_url": "https://api.github.com/users/mpskex/followers",
            "following_url": "https://api.github.com/users/mpskex/following{/other_user}",
            "gists_url": "https://api.github.com/users/mpskex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mpskex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mpskex/subscriptions",
            "organizations_url": "https://api.github.com/users/mpskex/orgs",
            "repos_url": "https://api.github.com/users/mpskex/repos",
            "events_url": "https://api.github.com/users/mpskex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mpskex/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-25T05:16:12Z",
        "updated_at": "2023-06-25T18:54:01Z",
        "closed_at": "2023-06-25T18:54:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6705",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6705",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6705.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6705.patch",
            "merged_at": "2023-06-25T18:54:01Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n\r\n- Description: Fix Typo in LangChain MyScale Integration  Doc\r\n\r\n@hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6705/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6705/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6704",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6704/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6704/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6704/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6704",
        "id": 1773061920,
        "node_id": "I_kwDOIPDwls5prscg",
        "number": 6704,
        "title": "NotImplementedError: WebBaseLoader does not implement lazy_load()",
        "user": {
            "login": "F2EVarMan",
            "id": 10355060,
            "node_id": "MDQ6VXNlcjEwMzU1MDYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/10355060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/F2EVarMan",
            "html_url": "https://github.com/F2EVarMan",
            "followers_url": "https://api.github.com/users/F2EVarMan/followers",
            "following_url": "https://api.github.com/users/F2EVarMan/following{/other_user}",
            "gists_url": "https://api.github.com/users/F2EVarMan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/F2EVarMan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/F2EVarMan/subscriptions",
            "organizations_url": "https://api.github.com/users/F2EVarMan/orgs",
            "repos_url": "https://api.github.com/users/F2EVarMan/repos",
            "events_url": "https://api.github.com/users/F2EVarMan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/F2EVarMan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-25T05:06:40Z",
        "updated_at": "2023-10-05T16:08:30Z",
        "closed_at": "2023-10-05T16:08:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nwhen i use RecusiveUrlLoader , \r\nNotImplementedError: WebBaseLoader does not implement lazy_load()\r\n\r\n![image](https://github.com/hwchase17/langchain/assets/10355060/2d1686e7-de7f-412b-a9f4-1024ec666281)\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6704/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6704/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6703",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6703/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6703/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6703/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6703",
        "id": 1773043492,
        "node_id": "PR_kwDOIPDwls5T1Oz9",
        "number": 6703,
        "title": "Add a Pairwise Comparison Chain",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-25T04:00:05Z",
        "updated_at": "2023-06-27T03:47:43Z",
        "closed_at": "2023-06-27T03:47:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6703",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6703",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6703.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6703.patch",
            "merged_at": "2023-06-27T03:47:42Z"
        },
        "body": "Notebook shows preference scoring between two chains and reports wilson score interval + p value \r\n\r\nI think I'll add the option to insert ground truth labels but doesn't have to be in this PR",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6703/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6703/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6702",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6702/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6702/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6702/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6702",
        "id": 1773042872,
        "node_id": "PR_kwDOIPDwls5T1Oq0",
        "number": 6702,
        "title": "Fix Multi Functions Agent Tracing",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-25T03:58:58Z",
        "updated_at": "2023-06-25T17:39:06Z",
        "closed_at": "2023-06-25T17:39:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6702",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6702",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6702.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6702.patch",
            "merged_at": "2023-06-25T17:39:05Z"
        },
        "body": "Confirmed it works now: https://dev.langchain.plus/public/0dc32ce0-55af-432e-b09e-5a1a220842f5/r",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6702/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6702/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6701",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6701/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6701/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6701/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6701",
        "id": 1773027700,
        "node_id": "PR_kwDOIPDwls5T1LcT",
        "number": 6701,
        "title": "fix  hard code table to self.table_name",
        "user": {
            "login": "lingfengchencn",
            "id": 2757011,
            "node_id": "MDQ6VXNlcjI3NTcwMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2757011?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lingfengchencn",
            "html_url": "https://github.com/lingfengchencn",
            "followers_url": "https://api.github.com/users/lingfengchencn/followers",
            "following_url": "https://api.github.com/users/lingfengchencn/following{/other_user}",
            "gists_url": "https://api.github.com/users/lingfengchencn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lingfengchencn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lingfengchencn/subscriptions",
            "organizations_url": "https://api.github.com/users/lingfengchencn/orgs",
            "repos_url": "https://api.github.com/users/lingfengchencn/repos",
            "events_url": "https://api.github.com/users/lingfengchencn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lingfengchencn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-25T03:14:53Z",
        "updated_at": "2023-07-12T23:06:58Z",
        "closed_at": "2023-07-12T23:06:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6701",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6701",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6701.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6701.patch",
            "merged_at": null
        },
        "body": "\r\n  - Description:fix CassandraChatMessageHistory add_message  hard code table to self.table_name\r\n \r\nMaintainer responsibilities:\r\n  - Memory: @hwchase17\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6701/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6701/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6700",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6700/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6700/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6700/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6700",
        "id": 1773026969,
        "node_id": "PR_kwDOIPDwls5T1LTB",
        "number": 6700,
        "title": "Update arize_callback.py",
        "user": {
            "login": "hakantekgul",
            "id": 14350521,
            "node_id": "MDQ6VXNlcjE0MzUwNTIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/14350521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hakantekgul",
            "html_url": "https://github.com/hakantekgul",
            "followers_url": "https://api.github.com/users/hakantekgul/followers",
            "following_url": "https://api.github.com/users/hakantekgul/following{/other_user}",
            "gists_url": "https://api.github.com/users/hakantekgul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hakantekgul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hakantekgul/subscriptions",
            "organizations_url": "https://api.github.com/users/hakantekgul/orgs",
            "repos_url": "https://api.github.com/users/hakantekgul/repos",
            "events_url": "https://api.github.com/users/hakantekgul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hakantekgul/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-25T03:11:41Z",
        "updated_at": "2023-06-25T03:14:49Z",
        "closed_at": "2023-06-25T03:14:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6700",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6700",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6700.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6700.patch",
            "merged_at": null
        },
        "body": "Changed callbackhandler to async\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6700/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6700/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6699",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6699/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6699/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6699/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6699",
        "id": 1773025734,
        "node_id": "I_kwDOIPDwls5prjnG",
        "number": 6699,
        "title": "Memory seems not to be supported in create_pandas_dataframe_agent",
        "user": {
            "login": "matt7salomon",
            "id": 107153179,
            "node_id": "U_kgDOBmMHGw",
            "avatar_url": "https://avatars.githubusercontent.com/u/107153179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matt7salomon",
            "html_url": "https://github.com/matt7salomon",
            "followers_url": "https://api.github.com/users/matt7salomon/followers",
            "following_url": "https://api.github.com/users/matt7salomon/following{/other_user}",
            "gists_url": "https://api.github.com/users/matt7salomon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matt7salomon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matt7salomon/subscriptions",
            "organizations_url": "https://api.github.com/users/matt7salomon/orgs",
            "repos_url": "https://api.github.com/users/matt7salomon/repos",
            "events_url": "https://api.github.com/users/matt7salomon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matt7salomon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-25T03:05:36Z",
        "updated_at": "2023-12-13T16:08:48Z",
        "closed_at": "2023-12-13T16:08:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI am trying to add memory to create_pandas_dataframe_agent to perform post processing on a model that I trained using Langchain. I am using the following code at the moment.\r\n```\r\nfrom langchain.llms import OpenAI\r\nimport pandas as pd\r\n\r\ndf = pd.read_csv('titanic.csv')\r\nagent = create_pandas_dataframe_agent(OpenAI(temperature=0), [df], verbose=True)\r\n```\r\nI tried adding memory = ConversationBufferMemory(memory_key=\"chat_history\") but that didnt help. Tried many other methods but seems like the memory for create_pandas_dataframe_agent is not implemented\n\n### Motivation\n\nThere is a major need in pandas processing to save models as pickle files along with adding new features to the studied dataset which alters the original dataset for the next step. It seems like langchain currently doesnt support that.\n\n### Your contribution\n\nI can help with the implementation if necessary.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6699/reactions",
            "total_count": 6,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 5
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6699/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6698",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6698/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6698/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6698/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6698",
        "id": 1773009415,
        "node_id": "PR_kwDOIPDwls5T1Hp4",
        "number": 6698,
        "title": "Improve vector store onboarding exp",
        "user": {
            "login": "jeffchuber",
            "id": 891664,
            "node_id": "MDQ6VXNlcjg5MTY2NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/891664?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffchuber",
            "html_url": "https://github.com/jeffchuber",
            "followers_url": "https://api.github.com/users/jeffchuber/followers",
            "following_url": "https://api.github.com/users/jeffchuber/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffchuber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffchuber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffchuber/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffchuber/orgs",
            "repos_url": "https://api.github.com/users/jeffchuber/repos",
            "events_url": "https://api.github.com/users/jeffchuber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffchuber/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528810,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-25T02:08:14Z",
        "updated_at": "2023-07-18T20:48:42Z",
        "closed_at": "2023-07-18T20:48:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6698",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6698",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6698.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6698.patch",
            "merged_at": "2023-07-18T20:48:42Z"
        },
        "body": "This PR\r\n- fixes the `similarity_search_by_vector` example, makes the code run and adds the example to mirror `similarity_search`\r\n- reverts back to chroma from faiss to remove sharp edges / create a happy path for new developers. (1) real metadata filtering, (2) expected functionality like `update`, `delete`, etc to serve beyond the most trivial use cases \r\n\r\n@hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6698/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6698/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6697",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6697/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6697/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6697/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6697",
        "id": 1772970160,
        "node_id": "PR_kwDOIPDwls5T0_XY",
        "number": 6697,
        "title": "tiktoken override",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-24T23:56:01Z",
        "updated_at": "2023-06-26T07:49:34Z",
        "closed_at": "2023-06-26T07:49:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6697",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6697",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6697.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6697.patch",
            "merged_at": "2023-06-26T07:49:33Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6697/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6697/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6696",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6696/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6696/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6696/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6696",
        "id": 1772962572,
        "node_id": "I_kwDOIPDwls5prUMM",
        "number": 6696,
        "title": "Chroma.from_documents(...persist_directory=db_path) has no effect",
        "user": {
            "login": "vsraptor",
            "id": 521677,
            "node_id": "MDQ6VXNlcjUyMTY3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/521677?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vsraptor",
            "html_url": "https://github.com/vsraptor",
            "followers_url": "https://api.github.com/users/vsraptor/followers",
            "following_url": "https://api.github.com/users/vsraptor/following{/other_user}",
            "gists_url": "https://api.github.com/users/vsraptor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vsraptor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vsraptor/subscriptions",
            "organizations_url": "https://api.github.com/users/vsraptor/orgs",
            "repos_url": "https://api.github.com/users/vsraptor/repos",
            "events_url": "https://api.github.com/users/vsraptor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vsraptor/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-24T23:24:49Z",
        "updated_at": "2023-10-29T16:05:41Z",
        "closed_at": "2023-10-29T16:05:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\r\n### System Info\r\n\r\n$ pip freeze | grep langchain\r\nlangchain==0.0.197\r\nlangchainplus-sdk==0.0.10\r\n\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nFor some reason : \r\n\r\ndb = Chroma.from_documents(texts, self.embeddings, persist_directory=db_path, client_settings=settings)\r\n\r\npersist_directory=db_path, has no effect ... upon db.persist() it stores into the default directory 'db', instead of using db_path.\r\n\r\nOnly if you explicitly set Settings(persist_directory=db_path, ... ) it works.\r\n\r\nProbable reason is that in langchain chroma.py  if you pass client_settings and 'persist_directory' is not part of the settings, it will not add 'persist_directory' as it is done in the ELSE case, but ...:\r\n\r\n(line 77 ++)\r\n```\r\n        if client is not None:\r\n            self._client = client\r\n        else:\r\n            if client_settings:\r\n                self._client_settings = client_settings  <<< .... here ..........\r\n            else:\r\n                self._client_settings = chromadb.config.Settings()\r\n                if persist_directory is not None:\r\n                    self._client_settings = chromadb.config.Settings(\r\n                        chroma_db_impl=\"duckdb+parquet\",\r\n                        persist_directory=persist_directory,\r\n                    )\r\n            self._client = chromadb.Client(self._client_settings)\r\n\r\n        self._embedding_function = embedding_function\r\n        self._persist_directory = persist_directory\r\n``` \r\n\r\nbut ... chromadb.__init__.py expects 'persist_directory' in settings i.e. (line 44), otherwise it will use the default : \r\n\r\n```\r\n   elif setting == \"duckdb+parquet\":\r\n        require(\"persist_directory\")\r\n        logger.warning(\r\n            f\"Using embedded DuckDB with persistence: data will be stored in: {settings.persist_directory}\"\r\n        )\r\n```\r\n\r\n### Expected behavior\r\n\r\ndb = Chroma.from_documents(texts, self.embeddings, persist_directory=db_path, client_settings=settings)\r\n\r\n\r\nshould use db_path instead of 'db'",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6696/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6696/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6695",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6695/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6695/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6695/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6695",
        "id": 1772957835,
        "node_id": "I_kwDOIPDwls5prTCL",
        "number": 6695,
        "title": "Issue: create_csv_agent() error when loading a list of csv files",
        "user": {
            "login": "eliujl",
            "id": 8711788,
            "node_id": "MDQ6VXNlcjg3MTE3ODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8711788?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eliujl",
            "html_url": "https://github.com/eliujl",
            "followers_url": "https://api.github.com/users/eliujl/followers",
            "following_url": "https://api.github.com/users/eliujl/following{/other_user}",
            "gists_url": "https://api.github.com/users/eliujl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eliujl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eliujl/subscriptions",
            "organizations_url": "https://api.github.com/users/eliujl/orgs",
            "repos_url": "https://api.github.com/users/eliujl/repos",
            "events_url": "https://api.github.com/users/eliujl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eliujl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-24T23:06:32Z",
        "updated_at": "2023-07-08T15:24:50Z",
        "closed_at": "2023-07-08T15:24:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain 0.0.214\r\nPython 3.10\r\nUbuntu 22.04\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nagent = create_csv_agent(\r\n    ChatOpenAI(temperature=0, model=\"gpt-3.5-turbo-0613\"),\r\n    [\"titanic.csv\", \"titanic_age_fillna.csv\"],\r\n    verbose=True,\r\n    agent_type=AgentType.OPENAI_FUNCTIONS,\r\n)\r\nagent.run(\"how many rows in the age column are different between the two dfs?\")\r\n\r\nGot error: ValueError: Invalid file path or buffer object type: \n\n### Expected behavior\n\nAccording to Langchain documentation https://python.langchain.com/docs/modules/agents/toolkits/csv.html, the CSV agent \"can interact with multiple csv files passed in as a list\", and it should not generate an error.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6695/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6695/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6694",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6694/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6694/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6694/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6694",
        "id": 1772919711,
        "node_id": "PR_kwDOIPDwls5T00yj",
        "number": 6694,
        "title": "bump v214",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-24T21:09:28Z",
        "updated_at": "2023-06-24T21:23:12Z",
        "closed_at": "2023-06-24T21:23:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6694",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6694",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6694.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6694.patch",
            "merged_at": "2023-06-24T21:23:11Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6694/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6694/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6693",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6693/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6693/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6693/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6693",
        "id": 1772913990,
        "node_id": "PR_kwDOIPDwls5T0zop",
        "number": 6693,
        "title": "Make bs4 a local import in recursive_url_loader.py",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-24T20:49:05Z",
        "updated_at": "2023-06-24T20:54:11Z",
        "closed_at": "2023-06-24T20:54:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6693",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6693",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6693.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6693.patch",
            "merged_at": "2023-06-24T20:54:10Z"
        },
        "body": "Resolve https://github.com/hwchase17/langchain/issues/6679",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6693/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6693/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6692",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6692/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6692/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6692/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6692",
        "id": 1772895376,
        "node_id": "PR_kwDOIPDwls5T0vr1",
        "number": 6692,
        "title": "updated sql_database.py for returning sorted table names.",
        "user": {
            "login": "sumanthdonthula",
            "id": 46747610,
            "node_id": "MDQ6VXNlcjQ2NzQ3NjEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/46747610?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sumanthdonthula",
            "html_url": "https://github.com/sumanthdonthula",
            "followers_url": "https://api.github.com/users/sumanthdonthula/followers",
            "following_url": "https://api.github.com/users/sumanthdonthula/following{/other_user}",
            "gists_url": "https://api.github.com/users/sumanthdonthula/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sumanthdonthula/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sumanthdonthula/subscriptions",
            "organizations_url": "https://api.github.com/users/sumanthdonthula/orgs",
            "repos_url": "https://api.github.com/users/sumanthdonthula/repos",
            "events_url": "https://api.github.com/users/sumanthdonthula/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sumanthdonthula/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-24T20:03:22Z",
        "updated_at": "2023-06-25T19:04:25Z",
        "closed_at": "2023-06-25T19:04:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6692",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6692",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6692.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6692.patch",
            "merged_at": "2023-06-25T19:04:24Z"
        },
        "body": "Added code to get the tables info in sorted order in methods get_usable_table_names and get_table_info.\r\n\r\nLinked to Issue: #6640 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6692/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6692/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6691",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6691/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6691/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6691/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6691",
        "id": 1772877397,
        "node_id": "I_kwDOIPDwls5pq_ZV",
        "number": 6691,
        "title": "sitemap loader throws error TypeError: _request() got an unexpected keyword argument 'verify', many docs refer to wrong links for sitemap as well. ",
        "user": {
            "login": "luca-git",
            "id": 2820583,
            "node_id": "MDQ6VXNlcjI4MjA1ODM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2820583?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luca-git",
            "html_url": "https://github.com/luca-git",
            "followers_url": "https://api.github.com/users/luca-git/followers",
            "following_url": "https://api.github.com/users/luca-git/following{/other_user}",
            "gists_url": "https://api.github.com/users/luca-git/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luca-git/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luca-git/subscriptions",
            "organizations_url": "https://api.github.com/users/luca-git/orgs",
            "repos_url": "https://api.github.com/users/luca-git/repos",
            "events_url": "https://api.github.com/users/luca-git/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luca-git/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528810,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-06-24T19:11:29Z",
        "updated_at": "2023-10-24T16:07:28Z",
        "closed_at": "2023-10-24T16:07:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nwindows 11 python 3.9.16 langchain 0.0.212\r\n\n\n### Who can help?\n\nCode from https://python.langchain.com/docs/modules/data_connection/document_loaders/integrations/sitemap\r\n\r\n```python\r\nfrom langchain.document_loaders.sitemap import SitemapLoader\r\n\r\nsitemap_loader = SitemapLoader(web_path=\"https://langchain.readthedocs.io/sitemap.xml\")\r\n\r\ndocs = sitemap_loader.load()\r\n```\r\nthrows:\r\n```python\r\n    self._request(hdrs.METH_GET, url, allow_redirects=allow_redirects, **kwargs)\r\n\r\nTypeError: _request() got an unexpected keyword argument 'verify'\r\n```python\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.document_loaders.sitemap import SitemapLoader\r\n\r\nsitemap_loader = SitemapLoader(web_path=\"https://langchain.readthedocs.io/sitemap.xml\")\r\n\r\ndocs = sitemap_loader.load()\n\n### Expected behavior\n\nto work or get a doc update",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6691/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6691/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6690",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6690/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6690/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6690/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6690",
        "id": 1772873469,
        "node_id": "I_kwDOIPDwls5pq-b9",
        "number": 6690,
        "title": "Agent knows how to correctly proceed, but uses tool incorrectly anyways",
        "user": {
            "login": "JWBWork",
            "id": 25304054,
            "node_id": "MDQ6VXNlcjI1MzA0MDU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/25304054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JWBWork",
            "html_url": "https://github.com/JWBWork",
            "followers_url": "https://api.github.com/users/JWBWork/followers",
            "following_url": "https://api.github.com/users/JWBWork/following{/other_user}",
            "gists_url": "https://api.github.com/users/JWBWork/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JWBWork/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JWBWork/subscriptions",
            "organizations_url": "https://api.github.com/users/JWBWork/orgs",
            "repos_url": "https://api.github.com/users/JWBWork/repos",
            "events_url": "https://api.github.com/users/JWBWork/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JWBWork/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-24T18:58:15Z",
        "updated_at": "2023-10-06T16:07:04Z",
        "closed_at": "2023-10-06T16:07:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nplatform: macOS-13.2.1-arm64-arm-64bit\r\nPython 3.11.3\r\nlangchain                0.0.212\r\nlangchainplus-sdk        0.0.17\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI'm trying to get my Agent to correctly use my tools - from it's internal dialogue I can see it knows it's about to use a tool incorrectly but then it just goes ahead and does it resulting in an exception from my arg schema.\r\n\r\nHere's the input and output with my agent:\r\n---\r\n\ud83d\udcac: add a todo to by tortillas to my grocery shopping todo\r\n\r\n\r\n> Entering new  chain...\r\nAction:\r\n```\r\n{\r\n  \"action\": \"save_sub_todo\",\r\n  \"action_input\": {\r\n    \"name\": \"Buy tortillas\",\r\n    \"tags\": [\"grocery shopping\"],\r\n    \"parent_id\": \"ID of the grocery shopping todo\"\r\n  }\r\n}\r\n```\r\n\r\nReplace \"ID of the grocery shopping todo\" with the actual ID of the todo for grocery shopping. You can use `get_all_todos()` to find the ID if you don't know it. \r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/jacobbrooks/PythonProjects/jbbrsh/term.py\", line 32, in <module>\r\n    Fire(run)\r\n  File \"/Users/jacobbrooks/PythonProjects/jbbrsh/.venv/lib/python3.11/site-packages/fire/core.py\", line 141, in Fire\r\n    component_trace = _Fire(component, args, parsed_flag_args, context, name)\r\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/jacobbrooks/PythonProjects/jbbrsh/.venv/lib/python3.11/site-packages/fire/core.py\", line 475, in _Fire\r\n    component, remaining_args = _CallAndUpdateTrace(\r\n                                ^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/jacobbrooks/PythonProjects/jbbrsh/.venv/lib/python3.11/site-packages/fire/core.py\", line 691, in _CallAndUpdateTrace\r\n    component = fn(*varargs, **kwargs)\r\n                ^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/jacobbrooks/PythonProjects/jbbrsh/term.py\", line 24, in run\r\n    response = agent.run(user_input)\r\n               ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/jacobbrooks/PythonProjects/jbbrsh/.venv/lib/python3.11/site-packages/langchain/chains/base.py\", line 290, in run\r\n    return self(args[0], callbacks=callbacks, tags=tags)[_output_key]\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\nHere are the tools I'm passing to my agent:\r\n---\r\n```python\r\nclass TodoInput(BaseModel):\r\n    name: str = Field(description=\"Todo name\")\r\n    tags: List[str] = Field(description=\"Tags to categorize todos\")\r\n\r\n@tool(return_direct=False, args_schema=TodoInput)\r\ndef save_todo(name: str, tags: List[str]) -> str:\r\n    \"\"\"\r\n    Saves a todo for the user\r\n    The string returned contians the todos name and its ID. The ID can be used to add child todos.\r\n    \"\"\"\r\n    notion_todo = NotionTodo.new(\r\n        notion_client=_notion,\r\n        database_id=DATABASE_ID,\r\n        properties={\r\n            \"Tags\": tags,\r\n            \"Name\": name\r\n        }\r\n    )\r\n    _notion.todos.append(notion_todo)\r\n    return f\"todo saved: {notion_todo}\"\r\n\r\nclass SubTodoInput(TodoInput):\r\n    parent_id: str = Field(\r\n        description=\"ID for parent todo, only needed for sub-todos\",\r\n    )\r\n\r\n    @root_validator\r\n    def validate_query(cls, values: Dict[str, Any]) -> Dict:\r\n        parent_id = values[\"parent_id\"]\r\n        if re.match(r\"[\\d\\w]{8}-[\\d\\w]{4}-[\\d\\w]{4}-[\\d\\w]{4}-[\\d\\w]{12}\", parent_id) is None:\r\n            raise ValueError(f'Invalid parent ID \"{values[\"parent_id\"]}\"')\r\n        return values\r\n\r\n@tool(return_direct=False, args_schema=SubTodoInput)\r\ndef save_sub_todo(name: str, tags: List[str], parent_id:str) -> str:\r\n    \"\"\"\r\n    Saves a child todo with a parent todo for the user\r\n\r\n    The string returned contians the todos name and its ID, The ID is formatted like so \"f1ab8b74-6b67-46b1-81ec-519805c7a1cb\"\r\n    Do not make up IDs! use get_all_todos to find the best ID if a real one is unavailable.\r\n    \"\"\"\r\n    notion_todo = NotionTodo.new(\r\n        notion_client=_notion,\r\n        database_id=DATABASE_ID,\r\n        properties={\r\n            \"Tags\": tags,\r\n            \"Name\": name,\r\n            \"Parent todo\": parent_id\r\n        }\r\n    )\r\n    _notion.todos.append(notion_todo)\r\n    return f\"todo saved: {notion_todo}\"\r\n\r\n@tool\r\ndef get_all_todos():\r\n    \"\"\"\r\n    Returns a list of all existing todos.\r\n    Useful for finding an ID for an existing todo when you have to adda  child todo.\r\n    \"\"\"\r\n    return '\\n'.join([\r\n        f\"'{t.name}' {'Complete' if t.complete else 'Incomplete'} id={t.id} parent_id={t.parent_todo}\" \r\n        for t in _notion.todos\r\n    ])\r\n```\r\n\r\nHere's how I'm creating my agent\r\n---\r\n```python\r\n_system_message = \"\"\"\r\nYour purpose is to store and track todos for your user\r\n\r\nWhen using Tools with ID arguments don't make up IDs! Find the best ID from looking through all todos.\r\n\"\"\"\r\nllm = ChatOpenAI(temperature=0)\r\nmemory_key = \"chat_history\"\r\nchat_history = MessagesPlaceholder(variable_name=memory_key)\r\nmemory = ConversationBufferMemory(memory_key=memory_key, return_messages=True)\r\n\r\nagent = initialize_agent(\r\n    llm=llm, \r\n    tools = [HumanInputRun(), *tools], \r\n    agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,\r\n    memory = memory,\r\n    agent_kwargs={\r\n        \"system_message\": _system_message,\r\n        \"memory_prompts\": [chat_history],\r\n        \"input_variables\": [\r\n            \"input\", \"agent_scratchpad\", memory_key\r\n        ]\r\n    },\r\n    **kwargs\r\n)\r\nreturn agent\r\n```\n\n### Expected behavior\n\nThe bot init's internal dialogue _knows_ that it's about to use an invalid ID, and it knows how to go about getting the real ID\r\n> Replace \"ID of the grocery shopping todo\" with the actual ID of the todo for grocery shopping. You can use `get_all_todos()` to find the ID if you don't know it. \r\nBut it just goes ahead and uses the tool resulting in an exception.\r\n\r\nThe Agent should acknowledge this insight, use the tool it knows it should use to get the proper ID, and then reformat the initial tool attempt with the legitimate ID.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6690/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6690/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6689",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6689/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6689/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6689/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6689",
        "id": 1772873282,
        "node_id": "PR_kwDOIPDwls5T0rOV",
        "number": 6689,
        "title": "document loader as a retriever",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-24T18:57:39Z",
        "updated_at": "2023-07-19T23:15:04Z",
        "closed_at": "2023-07-19T23:14:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6689",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6689",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6689.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6689.patch",
            "merged_at": null
        },
        "body": "This unbraking change allows using every Document loader as a Retriever without any additional changes.\r\nThis change effectively increased number of the available retrievers from ~20 to 80+ \r\n\r\n`docs/extras/modules/data_connection/retrievers/how_to/document_loaders_as_retrievers.ipynb` provides explanations and a usage example.\r\n\r\nMaintainer responsibilities:\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n It can be interesting for @hwchase17 and @dev2049 \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6689/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6689/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6688",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6688/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6688/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6688/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6688",
        "id": 1772869683,
        "node_id": "PR_kwDOIPDwls5T0qhs",
        "number": 6688,
        "title": "bump to version 213",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-24T18:45:51Z",
        "updated_at": "2023-06-24T18:56:39Z",
        "closed_at": "2023-06-24T18:56:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6688",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6688",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6688.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6688.patch",
            "merged_at": "2023-06-24T18:56:38Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6688/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6688/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6687",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6687/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6687/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6687/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6687",
        "id": 1772868158,
        "node_id": "I_kwDOIPDwls5pq9I-",
        "number": 6687,
        "title": "Issue: Can an LLM be used as a tool?",
        "user": {
            "login": "saswat0",
            "id": 32325136,
            "node_id": "MDQ6VXNlcjMyMzI1MTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/32325136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saswat0",
            "html_url": "https://github.com/saswat0",
            "followers_url": "https://api.github.com/users/saswat0/followers",
            "following_url": "https://api.github.com/users/saswat0/following{/other_user}",
            "gists_url": "https://api.github.com/users/saswat0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saswat0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saswat0/subscriptions",
            "organizations_url": "https://api.github.com/users/saswat0/orgs",
            "repos_url": "https://api.github.com/users/saswat0/repos",
            "events_url": "https://api.github.com/users/saswat0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saswat0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528810,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-24T18:41:11Z",
        "updated_at": "2023-11-07T03:29:34Z",
        "closed_at": "2023-10-02T16:06:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI have a use case where the agent is supposed to perform certain activities (going over the metadata and telling if the currently selected column is fit for querying). This would need a `zero-shot-react-agent` to use several LLMs as tools instead of the present ones (like search being shown everywhere). The [documentation](https://python.langchain.com/docs/modules/agents/how_to/custom_mrkl_agent#multiple-inputs) shows that this is possible but is in itself quite ambiguous. \r\nHow do I create an LLMChain as a tool if it always needs a prompt while initialisation? And the prompt can be created only after mentioning this LLMChain as a tool in the `create_prompt` function?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6687/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6687/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6686",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6686/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6686/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6686/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6686",
        "id": 1772858939,
        "node_id": "PR_kwDOIPDwls5T0obH",
        "number": 6686,
        "title": "align chroma vectorstore get with chromadb to enable where filtering",
        "user": {
            "login": "ChrisPappalardo",
            "id": 3485539,
            "node_id": "MDQ6VXNlcjM0ODU1Mzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3485539?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChrisPappalardo",
            "html_url": "https://github.com/ChrisPappalardo",
            "followers_url": "https://api.github.com/users/ChrisPappalardo/followers",
            "following_url": "https://api.github.com/users/ChrisPappalardo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChrisPappalardo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChrisPappalardo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChrisPappalardo/subscriptions",
            "organizations_url": "https://api.github.com/users/ChrisPappalardo/orgs",
            "repos_url": "https://api.github.com/users/ChrisPappalardo/repos",
            "events_url": "https://api.github.com/users/ChrisPappalardo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChrisPappalardo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-24T18:10:28Z",
        "updated_at": "2023-06-29T17:08:39Z",
        "closed_at": "2023-06-26T17:51:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6686",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6686",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6686.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6686.patch",
            "merged_at": "2023-06-26T17:51:20Z"
        },
        "body": "allows for where filtering on collection via get\r\n\r\n  - Description: aligns langchain chroma vectorstore get with underlying [chromadb collection get](https://github.com/chroma-core/chroma/blob/main/chromadb/api/models/Collection.py#L103) allowing for where filtering, etc.\r\n  - Issue: NA\r\n  - Dependencies: none\r\n  - Tag maintainer: @rlancemartin, @eyurtsev\r\n  - Twitter handle: @pappanaka\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6686/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6686/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6684",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6684/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6684/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6684/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6684",
        "id": 1772789159,
        "node_id": "PR_kwDOIPDwls5T0ZwP",
        "number": 6684,
        "title": "Harrison/optional ids opensearch",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-24T15:34:03Z",
        "updated_at": "2023-06-24T16:19:58Z",
        "closed_at": "2023-06-24T16:19:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6684",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6684",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6684.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6684.patch",
            "merged_at": "2023-06-24T16:19:57Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6684/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6684/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6683",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6683/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6683/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6683/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6683",
        "id": 1772711321,
        "node_id": "PR_kwDOIPDwls5T0IhM",
        "number": 6683,
        "title": "Fix conversational_retrieval combining with chat history affects the question and answer experience",
        "user": {
            "login": "wuzechuan",
            "id": 14210962,
            "node_id": "MDQ6VXNlcjE0MjEwOTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/14210962?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wuzechuan",
            "html_url": "https://github.com/wuzechuan",
            "followers_url": "https://api.github.com/users/wuzechuan/followers",
            "following_url": "https://api.github.com/users/wuzechuan/following{/other_user}",
            "gists_url": "https://api.github.com/users/wuzechuan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wuzechuan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wuzechuan/subscriptions",
            "organizations_url": "https://api.github.com/users/wuzechuan/orgs",
            "repos_url": "https://api.github.com/users/wuzechuan/repos",
            "events_url": "https://api.github.com/users/wuzechuan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wuzechuan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-24T13:37:48Z",
        "updated_at": "2023-07-05T07:48:20Z",
        "closed_at": "2023-07-05T07:48:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6683",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6683",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6683.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6683.patch",
            "merged_at": null
        },
        "body": "Fixes # (issue)\r\nWhile using the ConversationalRetrievalChain, and specifically applying both condense_question_prompt and combine_docs_chain_kwargs parameters, I followed the official documentation to pass chat_history when invoking this chain. The program runs as expected, but the Q&A experience is less than optimal. I've identified two main issues:\r\n\r\nWhen summarizing the question using condense_question, the response prompt generated by load_qa_chain is treated as 'Human' rather than 'AI'. Currently, I am remedying this by determining whether to pass the question to human_message or ai_message, based on whether chat_history is provided through an external interface.\r\n\r\nUpon reviewing the code, I noticed that the answer is first generated by self.question_generator, but in reality, the desired answer initially comes from the prompt in combine_docs_chain_kwargs. However, this response is then re-fed into self.combine_docs_chain, leading to a situation of self-posed questions and self-given answers, which isn't ideal. The final answer from combine_docs_chain isn't what I'm looking for, and I see no need to go through another loop only to end up with an unsatisfactory answer. Thus, I wish to adjust the logic for obtaining the answer in the call and acall methods.\r\n\r\nWhile my implementation might not be the most ideal, it considerably enhances the Q&A experience based on chat history in my project. I hope for official support on this issue and appreciate your help. Thank you!\r\n\r\nBefore submitting",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6683/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6683/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6681",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6681/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6681/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6681/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6681",
        "id": 1772562004,
        "node_id": "I_kwDOIPDwls5ppyZU",
        "number": 6681,
        "title": "Issue: What software was used to create the flowcharts in the document?",
        "user": {
            "login": "xming521",
            "id": 32786500,
            "node_id": "MDQ6VXNlcjMyNzg2NTAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/32786500?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xming521",
            "html_url": "https://github.com/xming521",
            "followers_url": "https://api.github.com/users/xming521/followers",
            "following_url": "https://api.github.com/users/xming521/following{/other_user}",
            "gists_url": "https://api.github.com/users/xming521/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xming521/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xming521/subscriptions",
            "organizations_url": "https://api.github.com/users/xming521/orgs",
            "repos_url": "https://api.github.com/users/xming521/repos",
            "events_url": "https://api.github.com/users/xming521/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xming521/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-24T09:21:32Z",
        "updated_at": "2023-09-30T16:05:07Z",
        "closed_at": "2023-09-30T16:05:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI would like to know what software was used to create the flowcharts in the document. They look very beautiful.\r\n\r\n\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6681/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6681/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6680",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6680/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6680/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6680/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6680",
        "id": 1772530890,
        "node_id": "I_kwDOIPDwls5ppqzK",
        "number": 6680,
        "title": "Help for an error that appears in the CONVERSATIONAL Agent",
        "user": {
            "login": "KareEnges",
            "id": 64879324,
            "node_id": "MDQ6VXNlcjY0ODc5MzI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/64879324?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KareEnges",
            "html_url": "https://github.com/KareEnges",
            "followers_url": "https://api.github.com/users/KareEnges/followers",
            "following_url": "https://api.github.com/users/KareEnges/following{/other_user}",
            "gists_url": "https://api.github.com/users/KareEnges/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KareEnges/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KareEnges/subscriptions",
            "organizations_url": "https://api.github.com/users/KareEnges/orgs",
            "repos_url": "https://api.github.com/users/KareEnges/repos",
            "events_url": "https://api.github.com/users/KareEnges/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KareEnges/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-24T08:20:06Z",
        "updated_at": "2023-09-30T16:05:13Z",
        "closed_at": "2023-09-30T16:05:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nThis problem occurred when I tried to use the tool support for a conversation-type agent using an agent of type SRUCTURED_CHAT_SHOT_REACT_DESCRIPTION. Here is some of the source code and errors\r\n![IMG_20230624_134959](https://github.com/hwchase17/langchain/assets/64879324/17529dfe-68bc-49b3-9f99-96e588e323b6)\r\n\r\nenv:\r\nPython 3.10\r\nLangchain Lastest\r\nWIN 10 Profession Lastest\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6680/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6680/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6679",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6679/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6679/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6679/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6679",
        "id": 1772489819,
        "node_id": "I_kwDOIPDwls5ppgxb",
        "number": 6679,
        "title": "crash because of missing bs4 dependency in version 2.12",
        "user": {
            "login": "hansvdam",
            "id": 2060172,
            "node_id": "MDQ6VXNlcjIwNjAxNzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2060172?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hansvdam",
            "html_url": "https://github.com/hansvdam",
            "followers_url": "https://api.github.com/users/hansvdam/followers",
            "following_url": "https://api.github.com/users/hansvdam/following{/other_user}",
            "gists_url": "https://api.github.com/users/hansvdam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hansvdam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hansvdam/subscriptions",
            "organizations_url": "https://api.github.com/users/hansvdam/orgs",
            "repos_url": "https://api.github.com/users/hansvdam/repos",
            "events_url": "https://api.github.com/users/hansvdam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hansvdam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-24T06:31:34Z",
        "updated_at": "2023-06-24T20:54:12Z",
        "closed_at": "2023-06-24T20:54:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain: 2.12\r\ncommit: #6455\r\nversion 2.11 does niet have this\n\n### Who can help?\n\n@rlancemartin, @eyurtsev\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nworkaround: install bs4 manually (pip install bs4)\r\n\r\n`from langchain.agents import initialize_agent, AgentType`\r\nleads to:\r\n```\r\n  File \"//main.py\", line 17, in <module>\r\n    from langchain.agents import initialize_agent, AgentType\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/__init__.py\", line 6, in <module>\r\n    from langchain.agents import MRKLChain, ReActChain, SelfAskWithSearchChain\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/agents/__init__.py\", line 2, in <module>\r\n    from langchain.agents.agent import (\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/agents/agent.py\", line 16, in <module>\r\n    from langchain.agents.tools import InvalidTool\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/agents/tools.py\", line 8, in <module>\r\n    from langchain.tools.base import BaseTool, Tool, tool\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/tools/__init__.py\", line 3, in <module>\r\n    from langchain.tools.arxiv.tool import ArxivQueryRun\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/tools/arxiv/tool.py\", line 12, in <module>\r\n    from langchain.utilities.arxiv import ArxivAPIWrapper\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/utilities/__init__.py\", line 3, in <module>\r\n    from langchain.utilities.apify import ApifyWrapper\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/utilities/apify.py\", line 5, in <module>\r\n    from langchain.document_loaders import ApifyDatasetLoader\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/document_loaders/__init__.py\", line 97, in <module>\r\n    from langchain.document_loaders.recursive_url_loader import RecusiveUrlLoader\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/document_loaders/recursive_url_loader.py\", line 5, in <module>\r\n    from bs4 import BeautifulSoup\r\nModuleNotFoundError: No module named 'bs4'\r\n\r\n```\r\nrequirements.txt:\r\n```\r\nopenai==0.27.8\r\nfastapi==0.97.0\r\nwebsockets==11.0.3\r\npydantic==1.10.9\r\nlangchain==0.0.212\r\nuvicorn[standard]\r\njinja2\r\nlancedb==0.1.8\r\nitsdangerous\r\ntiktoken==0.4.0\r\n```\r\n\n\n### Expected behavior\n\nI think\r\nfrom bs4 import BeautifulSoup\r\nin recursive_url_loader.py\r\nshould have been a local import",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6679/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6679/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6678",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6678/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6678/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6678/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6678",
        "id": 1772484021,
        "node_id": "I_kwDOIPDwls5ppfW1",
        "number": 6678,
        "title": "Problem to run on linux but not on windows ",
        "user": {
            "login": "aiakubovich",
            "id": 136030897,
            "node_id": "U_kgDOCBuqsQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/136030897?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aiakubovich",
            "html_url": "https://github.com/aiakubovich",
            "followers_url": "https://api.github.com/users/aiakubovich/followers",
            "following_url": "https://api.github.com/users/aiakubovich/following{/other_user}",
            "gists_url": "https://api.github.com/users/aiakubovich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aiakubovich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aiakubovich/subscriptions",
            "organizations_url": "https://api.github.com/users/aiakubovich/orgs",
            "repos_url": "https://api.github.com/users/aiakubovich/repos",
            "events_url": "https://api.github.com/users/aiakubovich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aiakubovich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-24T06:10:07Z",
        "updated_at": "2023-09-30T16:05:18Z",
        "closed_at": "2023-09-30T16:05:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nsee: https://github.com/hwchase17/langchain/discussions/1533\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nuse FAISS on windows and next try to reuse those embeddings on lunix\n\n### Expected behavior\n\n```\r\nI have a problem, when I want to run a project with langchain on windows, everything works perfectly, and with the same conditions on linux (libraries, python version, etc.) it doesn't work and throws this error, does anyone know what it could be?\r\n\r\n2023-03-08 15:13:24 Failed to run listener function (error: search() missing 3 required positional arguments: 'k', 'distances', and 'labels')\r\n2023-03-08 15:13:24 Traceback (most recent call last):\r\n2023-03-08 15:13:24 File \"/usr/local/lib/python3.9/site-packages/slack_bolt/listener/thread_runner.py\", line 120, in run_ack_function_asynchronously\r\n2023-03-08 15:13:24 listener.run_ack_function(request=request, response=response)\r\n2023-03-08 15:13:24 File \"/usr/local/lib/python3.9/site-packages/slack_bolt/listener/custom_listener.py\", line 50, in run_ack_function\r\n2023-03-08 15:13:24 return self.ack_function(\r\n2023-03-08 15:13:24 File \"//./main.py\", line 28, in question\r\n2023-03-08 15:13:24 response = processQuestion(query)\r\n2023-03-08 15:13:24 File \"/api.py\", line 42, in processQuestion\r\n2023-03-08 15:13:24 sources = doSimilaritySearch(index, query)\r\n2023-03-08 15:13:24 File \"/utils.py\", line 87, in doSimilaritySearch\r\n2023-03-08 15:13:24 docs = indexFaiss.similarity_search(query, k=5)\r\n2023-03-08 15:13:24 File \"/usr/local/lib/python3.9/site-packages/langchain/vectorstores/faiss.py\", line 166, in similarity_search\r\n2023-03-08 15:13:24 docs_and_scores = self.similarity_search_with_score(query, k)\r\n2023-03-08 15:13:24 File \"/usr/local/lib/python3.9/site-packages/langchain/vectorstores/faiss.py\", line 136, in similarity_search_with_score\r\n2023-03-08 15:13:24 docs = self.similarity_search_with_score_by_vector(embedding, k)\r\n2023-03-08 15:13:24 File \"/usr/local/lib/python3.9/site-packages/langchain/vectorstores/faiss.py\", line 110, in similarity_search_with_score_by_vector\r\n2023-03-08 15:13:24 scores, indices = self.index.search(np.array([embedding], dtype=np.float32), k)\r\n2023-03-08 15:13:24 TypeError: search() missing 3 required positional arguments: 'k', 'distances', and 'labels'\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6678/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6678/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6677",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6677/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6677/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6677/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6677",
        "id": 1772449472,
        "node_id": "I_kwDOIPDwls5ppW7A",
        "number": 6677,
        "title": "Issue: ConversationalRetrievalChain Fails to Distinguish User's Intention for Chat History Only or Chat History + Vector Store Answer",
        "user": {
            "login": "ShaneYuTH",
            "id": 58100540,
            "node_id": "MDQ6VXNlcjU4MTAwNTQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/58100540?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShaneYuTH",
            "html_url": "https://github.com/ShaneYuTH",
            "followers_url": "https://api.github.com/users/ShaneYuTH/followers",
            "following_url": "https://api.github.com/users/ShaneYuTH/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShaneYuTH/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShaneYuTH/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShaneYuTH/subscriptions",
            "organizations_url": "https://api.github.com/users/ShaneYuTH/orgs",
            "repos_url": "https://api.github.com/users/ShaneYuTH/repos",
            "events_url": "https://api.github.com/users/ShaneYuTH/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShaneYuTH/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-24T04:38:11Z",
        "updated_at": "2023-10-30T16:06:18Z",
        "closed_at": "2023-10-30T16:06:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nIn my application, I am using the ConversationalRetrievalChain with \"stuff\" chain type, FAISS as the vector store and ConversationBufferMemory. I have noticed that when I ask a question related to a previous response (i.e. a request that is only looking for answers from chat history, such as a summarization request), the system still searches for answers from both the vector store and chat history. This often leads to incorrect or irrelevant answers (the summarization will include data from chat history as well as data that is never presented in previous conversation from vector store).\r\n\r\nI've tried to address this issue by passing a custom prompt using combine_docs_chain_kwargs to specify whether a response should be generated based on the chat history only, or the chat history and the vector store. However, this approach hasn't been effective.\r\n\r\nIt seems that the system is currently unable to correctly discern the user's intention to exclusively use the chat history for generating a response. It's crucial that the system can accurately determine this to provide relevant and accurate responses.\n\n### Suggestion:\n\nI propose that the system should be enhanced with a mechanism to first detect the user's intention to either:\r\n\r\nSelect a response from the chat history only, or\r\nSelect a response from the chat history in combination with the vector store.\r\n\r\nThis could possibly be achieved by conditionally including or excluding certain parts of a prompt, such as {context} (from stuff_prompt.py, this is the default prompt used by stuff chain type), based on user input or intentions. However, this logic would need to be implemented during the data preparation for the template.\r\n\r\nI haven't figured out a way to do so. Looking forward to your help!\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6677/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6677/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6676",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6676/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6676/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6676/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6676",
        "id": 1772438351,
        "node_id": "PR_kwDOIPDwls5TzNrH",
        "number": 6676,
        "title": "Fix openapi parameter parsing",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-24T04:06:27Z",
        "updated_at": "2023-06-24T04:19:13Z",
        "closed_at": "2023-06-24T04:19:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6676",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6676",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6676.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6676.patch",
            "merged_at": "2023-06-24T04:19:12Z"
        },
        "body": "Ensure parameters are json serializable, related to #6671",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6676/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6676/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6675",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6675/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6675/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6675/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6675",
        "id": 1772436936,
        "node_id": "I_kwDOIPDwls5ppT3I",
        "number": 6675,
        "title": "[ChatVertexAI] 'ChatSession' object has no attribute '_history'",
        "user": {
            "login": "ARKA1112",
            "id": 24940818,
            "node_id": "MDQ6VXNlcjI0OTQwODE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/24940818?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ARKA1112",
            "html_url": "https://github.com/ARKA1112",
            "followers_url": "https://api.github.com/users/ARKA1112/followers",
            "following_url": "https://api.github.com/users/ARKA1112/following{/other_user}",
            "gists_url": "https://api.github.com/users/ARKA1112/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ARKA1112/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ARKA1112/subscriptions",
            "organizations_url": "https://api.github.com/users/ARKA1112/orgs",
            "repos_url": "https://api.github.com/users/ARKA1112/repos",
            "events_url": "https://api.github.com/users/ARKA1112/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ARKA1112/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-24T04:02:32Z",
        "updated_at": "2023-10-02T16:06:29Z",
        "closed_at": "2023-10-02T16:06:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n```python\r\nLinux-6.3.7-1-default-x86_64-with-glibc2.37\r\nPython Version: 3.10.11\r\nLangchain Version: 0.0.21\r\n```\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nInput\r\n```Python\r\nfrom langchain.chat_models import ChatVertexAI\r\nfrom langchain.schema import HumanMessage, SystemMessage, AIMessage\r\nchat = ChatVertexAI(temperature=0.7,verbose=True)\r\n\r\nchat(\r\n    [\r\n        SystemMessage(content=\"Assume you are an expert tour guide.Help the user and assist him in his travel\"),\r\n        HumanMessage(content=\"I like lush green valleys with cool weather. Where should I go?\"),\r\n        AIMessage(content=\"Switzerland is a nice place to visit\"),\r\n        HumanMessage(content=\"Name some of the popular places there to visit\")\r\n        \r\n    ]\r\n)\r\n```\r\n\r\nResponse\r\n```python\r\nFile [~/gamedisk/PyTorch2.0_env/lib/python3.10/site-packages/langchain/chat_models/vertexai.py:136], in ChatVertexAI._generate(self, messages, stop, run_manager, **kwargs)\r\n    134     chat = self.client.start_chat(**params)\r\n    135 for pair in history.history:\r\n--> 136     chat._history.append((pair.question.content, pair.answer.content))\r\n    137 response = chat.send_message(question.content, **params)\r\n    138 text = self._enforce_stop_words(response.text, stop)\r\n\r\nAttributeError: 'ChatSession' object has no attribute '_history'\r\n```\r\n### Expected behavior\r\n\r\nIt is expected to return an object similar to  this\r\n```python\r\nAIMessage(content='Lauterbrunnen is a nice place to visit', additional_kwargs={}, example=False)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6675/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6675/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6674",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6674/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6674/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6674/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6674",
        "id": 1772436473,
        "node_id": "I_kwDOIPDwls5ppTv5",
        "number": 6674,
        "title": "Issue: using different local models for QA generation",
        "user": {
            "login": "davidsharp7",
            "id": 34074888,
            "node_id": "MDQ6VXNlcjM0MDc0ODg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/34074888?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidsharp7",
            "html_url": "https://github.com/davidsharp7",
            "followers_url": "https://api.github.com/users/davidsharp7/followers",
            "following_url": "https://api.github.com/users/davidsharp7/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidsharp7/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidsharp7/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidsharp7/subscriptions",
            "organizations_url": "https://api.github.com/users/davidsharp7/orgs",
            "repos_url": "https://api.github.com/users/davidsharp7/repos",
            "events_url": "https://api.github.com/users/davidsharp7/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidsharp7/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-24T04:02:09Z",
        "updated_at": "2023-09-30T16:05:28Z",
        "closed_at": "2023-09-30T16:05:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nwith the QA generation over a document store is it possible to use hugging face models (local) instead of chat open AI?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6674/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6674/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6673",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6673/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6673/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6673/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6673",
        "id": 1772404237,
        "node_id": "PR_kwDOIPDwls5TzGXd",
        "number": 6673,
        "title": "Amazon API Gateway hosted LLM",
        "user": {
            "login": "sunbc0120",
            "id": 7380988,
            "node_id": "MDQ6VXNlcjczODA5ODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7380988?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sunbc0120",
            "html_url": "https://github.com/sunbc0120",
            "followers_url": "https://api.github.com/users/sunbc0120/followers",
            "following_url": "https://api.github.com/users/sunbc0120/following{/other_user}",
            "gists_url": "https://api.github.com/users/sunbc0120/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sunbc0120/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sunbc0120/subscriptions",
            "organizations_url": "https://api.github.com/users/sunbc0120/orgs",
            "repos_url": "https://api.github.com/users/sunbc0120/repos",
            "events_url": "https://api.github.com/users/sunbc0120/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sunbc0120/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4899415699,
                "node_id": "LA_kwDOIPDwls8AAAABJAcmkw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/llms",
                "name": "llms",
                "color": "7CDBB2",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-24T02:31:25Z",
        "updated_at": "2023-06-24T04:27:26Z",
        "closed_at": "2023-06-24T04:27:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6673",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6673",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6673.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6673.patch",
            "merged_at": "2023-06-24T04:27:25Z"
        },
        "body": "This PR adds a new LLM class for the Amazon API Gateway hosted LLM. The PR also includes example notebooks for using the LLM class in an Agent chain.\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6673/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6673/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6672",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6672/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6672/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6672/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6672",
        "id": 1772277501,
        "node_id": "PR_kwDOIPDwls5TyqHv",
        "number": 6672,
        "title": "add optional ids param to opensearch",
        "user": {
            "login": "taekimsmar",
            "id": 66041442,
            "node_id": "MDQ6VXNlcjY2MDQxNDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/66041442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/taekimsmar",
            "html_url": "https://github.com/taekimsmar",
            "followers_url": "https://api.github.com/users/taekimsmar/followers",
            "following_url": "https://api.github.com/users/taekimsmar/following{/other_user}",
            "gists_url": "https://api.github.com/users/taekimsmar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/taekimsmar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/taekimsmar/subscriptions",
            "organizations_url": "https://api.github.com/users/taekimsmar/orgs",
            "repos_url": "https://api.github.com/users/taekimsmar/repos",
            "events_url": "https://api.github.com/users/taekimsmar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/taekimsmar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T23:10:08Z",
        "updated_at": "2023-06-24T20:43:59Z",
        "closed_at": "2023-06-24T15:32:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6672",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6672",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6672.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6672.patch",
            "merged_at": "2023-06-24T15:32:23Z"
        },
        "body": "  - Description: add optional ids to allow updating existing opensearch documents, follows pattern of other vector stores\r\n  - Issue: #5952 \r\n  - Dependencies: None\r\n  - Tag maintainer: @rlancemartin, @eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6672/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6672/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6671",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6671/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6671/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6671/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6671",
        "id": 1772260655,
        "node_id": "I_kwDOIPDwls5poo0v",
        "number": 6671,
        "title": "openapi_spec_to_openai_fn generates Date objects which are not JSON serializable",
        "user": {
            "login": "paschembri",
            "id": 8329444,
            "node_id": "MDQ6VXNlcjgzMjk0NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8329444?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paschembri",
            "html_url": "https://github.com/paschembri",
            "followers_url": "https://api.github.com/users/paschembri/followers",
            "following_url": "https://api.github.com/users/paschembri/following{/other_user}",
            "gists_url": "https://api.github.com/users/paschembri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paschembri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paschembri/subscriptions",
            "organizations_url": "https://api.github.com/users/paschembri/orgs",
            "repos_url": "https://api.github.com/users/paschembri/repos",
            "events_url": "https://api.github.com/users/paschembri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paschembri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-23T22:52:10Z",
        "updated_at": "2023-09-30T16:05:33Z",
        "closed_at": "2023-09-30T16:05:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nv0.0.211\r\n\n\n### Who can help?\n\n@hw\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nUse an OpenAPI spec which contains a key `format` with a known type like `date`.\r\n\r\n```yaml\r\n    date_de_naissance_dirigeant_min:\r\n      name: date_de_naissance_dirigeant_min\r\n      in: query\r\n      description: Date de naissance minimale du dirigeant (ou de l'un des dirigeants de l'entreprise pour une recherche d'entreprises), au format JJ-MM-AAAA.\r\n      required: false\r\n      schema:\r\n        type: string\r\n        format: date\r\n        example: 1970-01-01\r\n```\r\n\r\nThis gets translated into \r\n\r\n```python\r\n'date_de_naissance_dirigeant_min': {\r\n          'type': 'string',\r\n          'schema_format': 'date',\r\n          'description': \"Date de naissance minimale du dirigeant (ou de l'un des dirigeants de l'entreprise pour une recherche d'entreprises), au format JJ-MM-AAAA.\",\r\n          'example': datetime.date(1970, 1, 1),\r\n      },\r\n```\n\n### Expected behavior\n\nNo objects other that strings and lists should be instanciated by `openapi_spec_to_openai_fn`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6671/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6671/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6670",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6670/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6670/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6670/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6670",
        "id": 1772258192,
        "node_id": "PR_kwDOIPDwls5Tylxe",
        "number": 6670,
        "title": "Dev2049/wiki lint",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T22:48:44Z",
        "updated_at": "2023-06-23T23:05:43Z",
        "closed_at": "2023-06-23T23:05:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6670",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6670",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6670.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6670.patch",
            "merged_at": "2023-06-23T23:05:42Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6670/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6670/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6669",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6669/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6669/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6669/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6669",
        "id": 1772234261,
        "node_id": "PR_kwDOIPDwls5Tyges",
        "number": 6669,
        "title": "chroma nb close img tag",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T22:19:48Z",
        "updated_at": "2023-06-23T22:41:55Z",
        "closed_at": "2023-06-23T22:41:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6669",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6669",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6669.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6669.patch",
            "merged_at": "2023-06-23T22:41:54Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6669/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6669/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6668",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6668/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6668/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6668/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6668",
        "id": 1772215395,
        "node_id": "PR_kwDOIPDwls5TycRr",
        "number": 6668,
        "title": "Add support for tags in chain group context manager",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T22:02:23Z",
        "updated_at": "2023-06-26T17:37:34Z",
        "closed_at": "2023-06-26T17:37:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6668",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6668",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6668.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6668.patch",
            "merged_at": "2023-06-26T17:37:33Z"
        },
        "body": "Lets you specify local and inheritable tags in the group manager.\r\n\r\nAlso, add more verbose docstrings for our reference docs.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6668/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6668/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6667",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6667/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6667/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6667/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6667",
        "id": 1772198255,
        "node_id": "PR_kwDOIPDwls5TyYfu",
        "number": 6667,
        "title": "openapi -> openai nit",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T21:45:32Z",
        "updated_at": "2023-06-23T22:09:03Z",
        "closed_at": "2023-06-23T22:09:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6667",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6667",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6667.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6667.patch",
            "merged_at": "2023-06-23T22:09:02Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6667/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6667/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6665",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6665/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6665/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6665/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6665",
        "id": 1772120977,
        "node_id": "PR_kwDOIPDwls5TyHU6",
        "number": 6665,
        "title": "Dev2049/bump 212",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T20:41:20Z",
        "updated_at": "2023-06-23T20:48:04Z",
        "closed_at": "2023-06-23T20:48:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6665",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6665",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6665.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6665.patch",
            "merged_at": "2023-06-23T20:48:03Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6665/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6665/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6664",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6664/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6664/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6664/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6664",
        "id": 1772106770,
        "node_id": "PR_kwDOIPDwls5TyENq",
        "number": 6664,
        "title": "update chroma notebook",
        "user": {
            "login": "jeffchuber",
            "id": 891664,
            "node_id": "MDQ6VXNlcjg5MTY2NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/891664?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffchuber",
            "html_url": "https://github.com/jeffchuber",
            "followers_url": "https://api.github.com/users/jeffchuber/followers",
            "following_url": "https://api.github.com/users/jeffchuber/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffchuber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffchuber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffchuber/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffchuber/orgs",
            "repos_url": "https://api.github.com/users/jeffchuber/repos",
            "events_url": "https://api.github.com/users/jeffchuber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffchuber/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-23T20:29:17Z",
        "updated_at": "2023-06-24T20:18:23Z",
        "closed_at": "2023-06-23T22:03:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6664",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6664",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6664.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6664.patch",
            "merged_at": "2023-06-23T22:03:06Z"
        },
        "body": "@rlancemartin I updated the notebook for Chroma to hopefully be a lot easier for users. \r\n\r\nLet me know what you think \r\n\r\nImage preview:\r\n<img width=\"666\" alt=\"Screenshot 2023-06-23 at 1 29 56 PM\" src=\"https://github.com/hwchase17/langchain/assets/891664/7f613a84-35f5-4502-982d-85d5f9f3564a\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6664/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6664/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6663",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6663/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6663/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6663/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6663",
        "id": 1772072612,
        "node_id": "PR_kwDOIPDwls5Tx8mQ",
        "number": 6663,
        "title": "Fix WhatsAppChatLoader : Enable parsing additional formats",
        "user": {
            "login": "augtheo",
            "id": 16444359,
            "node_id": "MDQ6VXNlcjE2NDQ0MzU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/16444359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/augtheo",
            "html_url": "https://github.com/augtheo",
            "followers_url": "https://api.github.com/users/augtheo/followers",
            "following_url": "https://api.github.com/users/augtheo/following{/other_user}",
            "gists_url": "https://api.github.com/users/augtheo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/augtheo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/augtheo/subscriptions",
            "organizations_url": "https://api.github.com/users/augtheo/orgs",
            "repos_url": "https://api.github.com/users/augtheo/repos",
            "events_url": "https://api.github.com/users/augtheo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/augtheo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T20:04:36Z",
        "updated_at": "2023-06-25T19:08:44Z",
        "closed_at": "2023-06-25T19:08:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6663",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6663",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6663.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6663.patch",
            "merged_at": "2023-06-25T19:08:43Z"
        },
        "body": "  - Description: Updated regex to support a new format that was observed when whatsapp chat was exported.\r\n  - Issue: #6654\r\n  - Dependencies: No new dependencies\r\n  - Tag maintainer: @rlancemartin, @eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6663/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6663/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6662",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6662/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6662/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6662/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6662",
        "id": 1771917198,
        "node_id": "PR_kwDOIPDwls5TxeAg",
        "number": 6662,
        "title": "Arthur callback handler",
        "user": {
            "login": "max-arthurai",
            "id": 115359769,
            "node_id": "U_kgDOBuBAGQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/115359769?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/max-arthurai",
            "html_url": "https://github.com/max-arthurai",
            "followers_url": "https://api.github.com/users/max-arthurai/followers",
            "following_url": "https://api.github.com/users/max-arthurai/following{/other_user}",
            "gists_url": "https://api.github.com/users/max-arthurai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/max-arthurai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/max-arthurai/subscriptions",
            "organizations_url": "https://api.github.com/users/max-arthurai/orgs",
            "repos_url": "https://api.github.com/users/max-arthurai/repos",
            "events_url": "https://api.github.com/users/max-arthurai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/max-arthurai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5568495735,
                "node_id": "LA_kwDOIPDwls8AAAABS-iAdw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/callbacks",
                "name": "callbacks",
                "color": "5A02F9",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "vowelparrot",
                "id": 130414180,
                "node_id": "U_kgDOB8X2ZA",
                "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/vowelparrot",
                "html_url": "https://github.com/vowelparrot",
                "followers_url": "https://api.github.com/users/vowelparrot/followers",
                "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
                "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
                "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
                "repos_url": "https://api.github.com/users/vowelparrot/repos",
                "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
                "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-23T18:38:47Z",
        "updated_at": "2023-06-30T13:12:52Z",
        "closed_at": "2023-06-30T13:12:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6662",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6662",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6662.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6662.patch",
            "merged_at": "2023-06-30T13:12:51Z"
        },
        "body": " - Description: adding a callback handler to log LLM inferences with the Arthur monitoring and observability platform. also adding a notebook demonstrating usage\r\n  - Dependencies: the arthurai package is a new dependency, optional for normal langchain users but needed to use the Arthur callback handler\r\n  - Twitter handle: @maxcembalest\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6662/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6662/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6661",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6661/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6661/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6661/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6661",
        "id": 1771914654,
        "node_id": "PR_kwDOIPDwls5TxdcJ",
        "number": 6661,
        "title": "openapi_openai docstring",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T18:36:23Z",
        "updated_at": "2023-06-23T18:38:34Z",
        "closed_at": "2023-06-23T18:38:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6661",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6661",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6661.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6661.patch",
            "merged_at": "2023-06-23T18:38:33Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6661/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6661/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6660",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6660/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6660/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6660/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6660",
        "id": 1771875990,
        "node_id": "PR_kwDOIPDwls5TxU0Y",
        "number": 6660,
        "title": "bump 211",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T18:07:13Z",
        "updated_at": "2023-06-23T18:10:49Z",
        "closed_at": "2023-06-23T18:10:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6660",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6660",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6660.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6660.patch",
            "merged_at": "2023-06-23T18:10:48Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6660/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6660/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6659",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6659/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6659/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6659/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6659",
        "id": 1771873472,
        "node_id": "PR_kwDOIPDwls5TxUPL",
        "number": 6659,
        "title": "Create merge loader that combines documents from a set of loaders",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T18:06:06Z",
        "updated_at": "2023-06-23T20:02:49Z",
        "closed_at": "2023-06-23T20:02:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6659",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6659",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6659.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6659.patch",
            "merged_at": "2023-06-23T20:02:48Z"
        },
        "body": "Simple utility loader that combines documents from a set of specified loaders.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6659/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6659/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6658",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6658/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6658/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6658/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6658",
        "id": 1771844533,
        "node_id": "PR_kwDOIPDwls5TxNsa",
        "number": 6658,
        "title": "Dev2049/openapi to openai",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T17:48:03Z",
        "updated_at": "2023-06-23T18:00:35Z",
        "closed_at": "2023-06-23T18:00:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6658",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6658",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6658.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6658.patch",
            "merged_at": "2023-06-23T18:00:34Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6658/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6658/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6657",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6657/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6657/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6657/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6657",
        "id": 1771741425,
        "node_id": "I_kwDOIPDwls5pmqDx",
        "number": 6657,
        "title": "Chromadb only returns the first document from persistent db",
        "user": {
            "login": "GarmischWg",
            "id": 43084696,
            "node_id": "MDQ6VXNlcjQzMDg0Njk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/43084696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GarmischWg",
            "html_url": "https://github.com/GarmischWg",
            "followers_url": "https://api.github.com/users/GarmischWg/followers",
            "following_url": "https://api.github.com/users/GarmischWg/following{/other_user}",
            "gists_url": "https://api.github.com/users/GarmischWg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GarmischWg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GarmischWg/subscriptions",
            "organizations_url": "https://api.github.com/users/GarmischWg/orgs",
            "repos_url": "https://api.github.com/users/GarmischWg/repos",
            "events_url": "https://api.github.com/users/GarmischWg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GarmischWg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-23T16:36:06Z",
        "updated_at": "2023-10-02T16:06:36Z",
        "closed_at": "2023-10-02T16:06:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n|software|Version|\r\n|:---:|:---:|\r\n|python|3.10.11|\r\n|LangChain|0.0.209|\r\n|Chroma|0.3.26|\r\n|Windows|11|\r\n|Ubuntu|22.06|\r\n\r\nI have tried on both windows and ubuntu\n\n### Who can help?\n\n@eyurtsev\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\ni am having trouble adding multiple documents into a vectordb. I am using chromadb here.\r\nThe following loads, split and embed 2 text files and store them in a persistant vector database. Then it queries the database.\r\n\r\n```python\r\nfrom langchain.document_loaders import TextLoader\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nimport os\r\nfrom getpass import getpass\r\n\r\nOPENAI_API_KEY = getpass()\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = OPENAI_API_KEY\r\n\r\nembeddings = OpenAIEmbeddings()\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\npersist_directory = \"db\"\r\ndb = Chroma(persist_directory=persist_directory, embedding_function=embeddings)\r\n\r\n# -------------------------- Adding spacex_wiki.txt -------------------------- #\r\nloader = TextLoader(\"this_has_to_work/spacex_wiki.txt\", encoding=\"utf8\")\r\ndocuments = loader.load()\r\ndocs = text_splitter.split_documents(documents)\r\ndb.add_documents(docs)\r\n\r\n# ------------------------- Adding imploson_wiki.txt ------------------------- #\r\nloader = TextLoader(\"this_has_to_work/implosion_wiki.txt\", encoding=\"utf8\")\r\ndocuments = loader.load()\r\ndocs = text_splitter.split_documents(documents)\r\ndb.add_documents(docs)\r\n\r\ndb.persist()\r\n\r\n# --------------------------- querying the vectordb -------------------------- #\r\ndb = None\r\n\r\ndb = Chroma(persist_directory=persist_directory, embedding_function=embeddings)\r\n\r\nretriever = db.as_retriever(search_type=\"mmr\")\r\n\r\nquery = \"What is implosion?\"\r\nprint(query)\r\nprint(retriever.get_relevant_documents(query)[0])\r\nprint(\"\\n\\n\")\r\n\r\nquery = \"Who is elon?\"\r\nprint(query)\r\nprint(retriever.get_relevant_documents(query)[0])\r\nprint(\"\\n\\n\")\r\n```\r\nThe above code runs without a problem and is able to retreive from both text file. The problem starts with the following code.\r\n\r\nThe following code only loads the vectordb from the persistant location.\r\n```python\r\nfrom langchain.document_loaders import TextLoader\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nimport os\r\nfrom getpass import getpass\r\n\r\nOPENAI_API_KEY = getpass()\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = OPENAI_API_KEY\r\n\r\nembeddings = OpenAIEmbeddings()\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\npersist_directory = \"db\"\r\ndb = Chroma(persist_directory=persist_directory, embedding_function=embeddings)\r\n\r\n# --------------------------- querying the vectordb -------------------------- #\r\nretriever = db.as_retriever(search_type=\"mmr\")\r\n\r\nquery = \"What is implosion?\"\r\nprint(query)\r\nprint(retriever.get_relevant_documents(query)[0])\r\nprint(\"\\n\\n\")\r\n\r\nquery = \"Who is elon?\"\r\nprint(query)\r\nprint(retriever.get_relevant_documents(query)[0])\r\nprint(\"\\n\\n\")\r\n```\r\nThe above code will only return from the first document stored in the vectordb (spacex_wiki.txt), no matter what the prompt is.\r\nThe following are the text files used.\r\n\r\n[implosion_wiki.txt](https://github.com/hwchase17/langchain/files/11850301/implosion_wiki.txt)\r\n[spacex_wiki.txt](https://github.com/hwchase17/langchain/files/11850303/spacex_wiki.txt)\r\n\r\n\r\n\n\n### Expected behavior\n\nIt is expected that information from both documents can be retreived when the vectordb is loaded from persistant location.\r\nHowever, only the first embedded document can be retreived.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6657/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6657/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6656",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6656/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6656/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6656/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6656",
        "id": 1771723540,
        "node_id": "PR_kwDOIPDwls5Twy9n",
        "number": 6656,
        "title": "bump 210",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T16:19:56Z",
        "updated_at": "2023-06-23T16:37:59Z",
        "closed_at": "2023-06-23T16:37:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6656",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6656",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6656.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6656.patch",
            "merged_at": "2023-06-23T16:37:58Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6656/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6656/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6654",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6654/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6654/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6654/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6654",
        "id": 1771671290,
        "node_id": "I_kwDOIPDwls5pmY76",
        "number": 6654,
        "title": "WhatsAppChatLoader doesn't extract messages exported from WhatsApp",
        "user": {
            "login": "augtheo",
            "id": 16444359,
            "node_id": "MDQ6VXNlcjE2NDQ0MzU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/16444359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/augtheo",
            "html_url": "https://github.com/augtheo",
            "followers_url": "https://api.github.com/users/augtheo/followers",
            "following_url": "https://api.github.com/users/augtheo/following{/other_user}",
            "gists_url": "https://api.github.com/users/augtheo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/augtheo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/augtheo/subscriptions",
            "organizations_url": "https://api.github.com/users/augtheo/orgs",
            "repos_url": "https://api.github.com/users/augtheo/repos",
            "events_url": "https://api.github.com/users/augtheo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/augtheo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-23T15:42:11Z",
        "updated_at": "2023-06-26T09:16:16Z",
        "closed_at": "2023-06-26T09:16:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain 0.0.208\r\nArchcraft x86_64 \r\nPython 3.11.3\n\n### Who can help?\n\n@eyurtsev \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Vector Stores / Retrievers\n- [X] Document Loaders\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Export Chat from Whatsapp\r\n2. The exported chat contains messages that aren't  being extracted by the regex. Example : \r\n`7/19/22, 11:26\u202fpm - User: Message`\r\n\r\nhttps://github.com/hwchase17/langchain/blob/980c8651743b653f994ad6b97a27b0fa31ee92b4/langchain/document_loaders/whatsapp_chat.py#L43\r\n\r\nThere are two issues here: \r\n1. The regex is looking for a space character but in my exported message there was a unicode NNBSP character (U+202F)\r\n2. AM/PM are expected in capital case whereas my export was in small case.\n\n### Expected behavior\n\nMessage is parsed successfully.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6654/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6654/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6652",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6652/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6652/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6652/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6652",
        "id": 1771536293,
        "node_id": "PR_kwDOIPDwls5TwKJr",
        "number": 6652,
        "title": "ChatVertexAI broken - Fix error with sending context in params",
        "user": {
            "login": "HassanOuda",
            "id": 2914618,
            "node_id": "MDQ6VXNlcjI5MTQ2MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2914618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HassanOuda",
            "html_url": "https://github.com/HassanOuda",
            "followers_url": "https://api.github.com/users/HassanOuda/followers",
            "following_url": "https://api.github.com/users/HassanOuda/following{/other_user}",
            "gists_url": "https://api.github.com/users/HassanOuda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HassanOuda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HassanOuda/subscriptions",
            "organizations_url": "https://api.github.com/users/HassanOuda/orgs",
            "repos_url": "https://api.github.com/users/HassanOuda/repos",
            "events_url": "https://api.github.com/users/HassanOuda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HassanOuda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-23T14:13:43Z",
        "updated_at": "2023-06-24T16:05:31Z",
        "closed_at": "2023-06-23T20:38:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6652",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6652",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6652.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6652.patch",
            "merged_at": "2023-06-23T20:38:21Z"
        },
        "body": "vertex Ai chat is broken right now. That is because context is in params and chat.send_message doesn't accept that as a params.\r\n\r\n  - Closes issue  [ChatVertexAI Error: _ChatSessionBase.send_message() got an unexpected keyword argument 'context' #6610](https://github.com/hwchase17/langchain/issues/6610)\r\n\r\n@dev2049\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6652/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6652/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6651",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6651/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6651/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6651/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6651",
        "id": 1771531070,
        "node_id": "I_kwDOIPDwls5pl2s-",
        "number": 6651,
        "title": "Allow users to purchase tokens for more search results",
        "user": {
            "login": "stakodiak",
            "id": 1082786,
            "node_id": "MDQ6VXNlcjEwODI3ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1082786?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stakodiak",
            "html_url": "https://github.com/stakodiak",
            "followers_url": "https://api.github.com/users/stakodiak/followers",
            "following_url": "https://api.github.com/users/stakodiak/following{/other_user}",
            "gists_url": "https://api.github.com/users/stakodiak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stakodiak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stakodiak/subscriptions",
            "organizations_url": "https://api.github.com/users/stakodiak/orgs",
            "repos_url": "https://api.github.com/users/stakodiak/repos",
            "events_url": "https://api.github.com/users/stakodiak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stakodiak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T14:10:15Z",
        "updated_at": "2023-09-29T16:05:33Z",
        "closed_at": "2023-09-29T16:05:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nSince the doc refactor, users are now limited to four search results per query. \r\n<img width=\"837\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/1082786/e340d78c-b8bb-4242-93bc-0d96d4514b44\">\r\n\r\nI think users should be able to purchase tokens if they would like to be able to access more search results, like perhaps 1 token per 10 extra results. This would enable functionality similar to the previous search functions, which would return up to 50 results.\r\n\r\nTokens could also be used for respecting `@media (prefers-color-scheme: dark)` since right now my laptop is not rated high enough for the default brightness and I would not like to blow out my display. Lastly, I would be willing to pay 5 tokens to increase the font weight, since it is unfortunately not very accessible for people with low vision, though that price should probably be determined by what the market will bear.\n\n### Motivation\n\nMotivation: find broad array code definitions and usage examples when trying to integrate a piece of the library into my application.\r\n\r\nRelated to #6300. \r\n\r\nWill allow users to surface relevant information without having to implement custom crawler/indexer for the docs. \n\n### Your contribution\n\nI will happily serve as QA tester to test the amount of search results returned. I don't think my sunglasses offer enough protection to test whether the docs site respects the dark-mode CSS media query.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6651/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6651/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6650",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6650/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6650/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6650/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6650",
        "id": 1771530370,
        "node_id": "I_kwDOIPDwls5pl2iC",
        "number": 6650,
        "title": "[AzureChatOpenAI] openai_api_type can't be changed from the default 'azure' value",
        "user": {
            "login": "gerlaxrex",
            "id": 36633875,
            "node_id": "MDQ6VXNlcjM2NjMzODc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/36633875?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gerlaxrex",
            "html_url": "https://github.com/gerlaxrex",
            "followers_url": "https://api.github.com/users/gerlaxrex/followers",
            "following_url": "https://api.github.com/users/gerlaxrex/following{/other_user}",
            "gists_url": "https://api.github.com/users/gerlaxrex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gerlaxrex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gerlaxrex/subscriptions",
            "organizations_url": "https://api.github.com/users/gerlaxrex/orgs",
            "repos_url": "https://api.github.com/users/gerlaxrex/repos",
            "events_url": "https://api.github.com/users/gerlaxrex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gerlaxrex/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T14:09:47Z",
        "updated_at": "2023-08-04T03:21:42Z",
        "closed_at": "2023-08-04T03:21:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHello,\r\n\r\nduring the development of an application that needs to authenticate to Azure services and use the wrapper [AzureChatOpenAi](https://github.com/hwchase17/langchain/blob/master/langchain/chat_models/azure_openai.py), we encountered an error due to the fact that the model could not use the 'azure_ad' type.\r\n\r\nIt seems that this class sets the openai_api_type always to the set default value of 'azure' even if we have an environment variable called 'OPENAI_API_TYPE' specifying 'azure_ad'.\r\n\r\nWhy is it so?\n\n### Who can help?\n\n@hwchase17 \r\n@agola11\r\n\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nanswering_llm=AzureChatOpenAI(\r\n        deployment_name=ANSWERING_MODEL_CONFIG.model_name,\r\n        model_name=ANSWERING_MODEL_CONFIG.model_type, #\"gpt-3.5-turbo\"\r\n        openai_api_type=\"azure_ad\", # IF THIS IS NOT EXPLICITLY PASSED IT FAILS\r\n        openai_api_key=auth_token,\r\n        temperature=ANSWERING_MODEL_CONFIG.temperature,\r\n        max_tokens=ANSWERING_MODEL_CONFIG.max_tokens\r\n    )\n\n### Expected behavior\n\nWe expect the wrapper to take the value of the environmental variable correctly.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6650/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6650/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6649",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6649/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6649/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6649/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6649",
        "id": 1771492635,
        "node_id": "PR_kwDOIPDwls5TwAr5",
        "number": 6649,
        "title": "Openning up documentation notebooks for contribution and adding information for documentation",
        "user": {
            "login": "bhashithe",
            "id": 13556459,
            "node_id": "MDQ6VXNlcjEzNTU2NDU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13556459?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bhashithe",
            "html_url": "https://github.com/bhashithe",
            "followers_url": "https://api.github.com/users/bhashithe/followers",
            "following_url": "https://api.github.com/users/bhashithe/following{/other_user}",
            "gists_url": "https://api.github.com/users/bhashithe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bhashithe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bhashithe/subscriptions",
            "organizations_url": "https://api.github.com/users/bhashithe/orgs",
            "repos_url": "https://api.github.com/users/bhashithe/repos",
            "events_url": "https://api.github.com/users/bhashithe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bhashithe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-23T13:45:22Z",
        "updated_at": "2023-07-12T20:25:34Z",
        "closed_at": "2023-07-12T20:25:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6649",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6649",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6649.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6649.patch",
            "merged_at": null
        },
        "body": "  - Description: The documentation was ignored by the .gitignore and this allows contribution to the documentation by opening the documentation by unignoring the notebook files.\r\n  - Issue: Closes #6356 \r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6649/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6649/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6647",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6647/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6647/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6647/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6647",
        "id": 1771365975,
        "node_id": "PR_kwDOIPDwls5TvlCN",
        "number": 6647,
        "title": "Preserved custom keys in RetrievalQA",
        "user": {
            "login": "Atom-101",
            "id": 24207380,
            "node_id": "MDQ6VXNlcjI0MjA3Mzgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/24207380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Atom-101",
            "html_url": "https://github.com/Atom-101",
            "followers_url": "https://api.github.com/users/Atom-101/followers",
            "following_url": "https://api.github.com/users/Atom-101/following{/other_user}",
            "gists_url": "https://api.github.com/users/Atom-101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Atom-101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Atom-101/subscriptions",
            "organizations_url": "https://api.github.com/users/Atom-101/orgs",
            "repos_url": "https://api.github.com/users/Atom-101/repos",
            "events_url": "https://api.github.com/users/Atom-101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Atom-101/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-23T12:20:13Z",
        "updated_at": "2023-10-14T14:38:02Z",
        "closed_at": "2023-10-14T14:38:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6647",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6647",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6647.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6647.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Tag maintainer:  @rlancemartin, @eyurtsev,\r\n\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n\r\n# Description\r\n\r\nCurrently `RetrievalQA` drops any extra keys in the prompt apart from the memory and user input. So if I want a prompt like this:\r\n```python\r\n\"\"\"You are a friendly bot talking to a human.\r\nUse the following pieces of context to answer the users question.\r\n----------------\r\nContext relevant to the question is: \\n{context}\r\n----------------\r\nRecent conversation history is: \\n{history}\r\n----------------\r\nYou also have the following information:  \\n{extra_context1}\\n{extra_context2}\r\n----------------\r\n\r\nHuman: {query}\r\nAI:\r\n\"\"\"\r\n```\r\nHere `context` is retrieved from the database, `history` comes from memory and `query` is the last input provided by the user. If some extra context has to be provided apart from conversation history and database, like `extra_context1` and `extra_context2`, `RetrievalQA` cannot currently handle it.\r\n\r\nWith this change one can simply provide extra keys in in the `.run()` function of `RetrievalQA`. Like so:\r\n```python\r\nqa = KwargsRetrievalQA.from_chain_type(\r\n    llm=ChatOpenAI(),\r\n    chain_type='stuff',\r\n    retriever=retriever,\r\n    verbose=False,\r\n    chain_type_kwargs={\r\n        \"verbose\": True,\r\n        \"prompt\": prompt_template,\r\n        \"memory\": memory,\r\n    }\r\n)\r\n\r\ninp = input(\"Human: \")\r\nquery = inp\r\n\r\nresponse = qa.run(\r\n    query=query,\r\n    history=memory,\r\n    extra_context1=extra_context1,\r\n    extra_context2=extra_context2,\r\n)\r\n```\r\n\r\n# Maintainer\r\n@rlancemartin ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6647/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6647/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6645",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6645/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6645/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6645/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6645",
        "id": 1771335088,
        "node_id": "PR_kwDOIPDwls5TveQn",
        "number": 6645,
        "title": "adds doc_content_chars_max argument to WikipediaLoader",
        "user": {
            "login": "eLafo",
            "id": 93491,
            "node_id": "MDQ6VXNlcjkzNDkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/93491?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eLafo",
            "html_url": "https://github.com/eLafo",
            "followers_url": "https://api.github.com/users/eLafo/followers",
            "following_url": "https://api.github.com/users/eLafo/following{/other_user}",
            "gists_url": "https://api.github.com/users/eLafo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eLafo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eLafo/subscriptions",
            "organizations_url": "https://api.github.com/users/eLafo/orgs",
            "repos_url": "https://api.github.com/users/eLafo/repos",
            "events_url": "https://api.github.com/users/eLafo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eLafo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-23T11:57:51Z",
        "updated_at": "2023-06-26T12:59:32Z",
        "closed_at": "2023-06-23T22:22:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6645",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6645",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6645.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6645.patch",
            "merged_at": "2023-06-23T22:22:10Z"
        },
        "body": "# Description\r\nIt adds a new initialization param in `WikipediaLoader` so we can override the `doc_content_chars_max` param used in `WikipediaAPIWrapper` under the hood, e.g:\r\n\r\n```python\r\nfrom langchain.document_loaders import WikipediaLoader\r\n\r\n# doc_content_chars_max is the new init param\r\nloader = WikipediaLoader(query=\"python\", doc_content_chars_max=90000)\r\n```\r\n\r\n## Decisions\r\n`doc_content_chars_max` default value will be 4000, because it's the current value\r\nI have added pycode comments\r\n\r\n# Issue\r\n#6639\r\n\r\n# Dependencies\r\nNone\r\n\r\n# Mantainer\r\n@rlancemartin, @eyurtsev\r\n\r\n# Twitter handle\r\n[@elafo](https://twitter.com/elafo)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6645/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6645/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6644",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6644/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6644/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6644/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6644",
        "id": 1771313441,
        "node_id": "PR_kwDOIPDwls5TvZld",
        "number": 6644,
        "title": "Changed generate_prompt.py",
        "user": {
            "login": "shashankverma05",
            "id": 29744661,
            "node_id": "MDQ6VXNlcjI5NzQ0NjYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29744661?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shashankverma05",
            "html_url": "https://github.com/shashankverma05",
            "followers_url": "https://api.github.com/users/shashankverma05/followers",
            "following_url": "https://api.github.com/users/shashankverma05/following{/other_user}",
            "gists_url": "https://api.github.com/users/shashankverma05/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shashankverma05/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shashankverma05/subscriptions",
            "organizations_url": "https://api.github.com/users/shashankverma05/orgs",
            "repos_url": "https://api.github.com/users/shashankverma05/repos",
            "events_url": "https://api.github.com/users/shashankverma05/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shashankverma05/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-23T11:40:18Z",
        "updated_at": "2023-06-23T22:48:34Z",
        "closed_at": "2023-06-23T22:48:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6644",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6644",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6644.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6644.patch",
            "merged_at": "2023-06-23T22:48:34Z"
        },
        "body": "Modified regex for Fix: ValueError: Could not parse output\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: ValueError: Could not parse output:  RegexParser(regex='QUESTION: (.*?)\\\\nANSWER: (.*)', output_keys=['query', 'answer'], default_output_key=None)\r\n  \r\n![Web capture_23-6-2023_17623_colab](https://github.com/hwchase17/langchain/assets/29744661/291432ff-5472-44d4-abb8-d53c4e2e96f7)\r\n\r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6644/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6644/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6643",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6643/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6643/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6643/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6643",
        "id": 1771298502,
        "node_id": "I_kwDOIPDwls5pk97G",
        "number": 6643,
        "title": "Installation Issue with Langchain Package - 'predict_messages' Function Not Available in Pip Version 0.0.209",
        "user": {
            "login": "tarekbadrshalaan",
            "id": 31471186,
            "node_id": "MDQ6VXNlcjMxNDcxMTg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/31471186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tarekbadrshalaan",
            "html_url": "https://github.com/tarekbadrshalaan",
            "followers_url": "https://api.github.com/users/tarekbadrshalaan/followers",
            "following_url": "https://api.github.com/users/tarekbadrshalaan/following{/other_user}",
            "gists_url": "https://api.github.com/users/tarekbadrshalaan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tarekbadrshalaan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tarekbadrshalaan/subscriptions",
            "organizations_url": "https://api.github.com/users/tarekbadrshalaan/orgs",
            "repos_url": "https://api.github.com/users/tarekbadrshalaan/repos",
            "events_url": "https://api.github.com/users/tarekbadrshalaan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tarekbadrshalaan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-23T11:27:58Z",
        "updated_at": "2023-10-01T16:05:48Z",
        "closed_at": "2023-10-01T16:05:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nPython 3.11.3\r\nMacOs\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI encountered a problem during my initial installation of the Langchain package. I adhered to the installation instructions provided at https://python.langchain.com/docs/get_started/installation.\r\n\r\nThe command I used for installation was pip install langchain, which resulted in the installation of Langchain version 0.0.209.\r\n\r\nHowever, when I attempted to execute the following code:\r\n\r\n```\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.schema import (\r\n    AIMessage,\r\n    HumanMessage,\r\n    SystemMessage\r\n)\r\nchat = ChatOpenAI()\r\nres = chat.predict_messages([HumanMessage(\r\n    content=\"Translate this sentence from English to French. I love programming.\")])\r\nprint(res.content)\r\n```\r\n\r\nI received an error message stating that the `predict_messages` function was not available. It appears that the package version available on pip does not align with the latest version on the GitHub repository.\r\n\r\nInterestingly, when I installed the package from the cloned repository, it worked as expected.\n\n### Expected behavior\n\nAfter installing the Langchain package using pip install langchain, I should be able to import the OpenAI module from `langchain.chat_models` and use the predict function without any issues. The `predict_messages` function should be available and functional in the pip version of the package, just as it is in the version available in the GitHub repository.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6643/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6643/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6642",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6642/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6642/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6642/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6642",
        "id": 1771287642,
        "node_id": "I_kwDOIPDwls5pk7Ra",
        "number": 6642,
        "title": "Tokenize before OpenAI call issues",
        "user": {
            "login": "paulthemagno",
            "id": 38130299,
            "node_id": "MDQ6VXNlcjM4MTMwMjk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/38130299?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulthemagno",
            "html_url": "https://github.com/paulthemagno",
            "followers_url": "https://api.github.com/users/paulthemagno/followers",
            "following_url": "https://api.github.com/users/paulthemagno/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulthemagno/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulthemagno/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulthemagno/subscriptions",
            "organizations_url": "https://api.github.com/users/paulthemagno/orgs",
            "repos_url": "https://api.github.com/users/paulthemagno/repos",
            "events_url": "https://api.github.com/users/paulthemagno/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulthemagno/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-23T11:21:02Z",
        "updated_at": "2023-07-12T13:21:20Z",
        "closed_at": "2023-07-12T13:21:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI would like to know how many **tokens** the tokenizer would generate for the **prompt** doing the **OpenAI** call, but I'm finding issues in reproducing the real call.\r\nIndeed I'm trying two methods (that internally use `tiktoken` library if I'm not wrong) found in the documentation:\r\n\r\n- [`get_num_tokens`](https://api.python.langchain.com/en/latest/modules/llms.html#langchain.llms.AI21.get_num_tokens)\r\n- [`get_num_tokens_from_messages`](https://api.python.langchain.com/en/latest/modules/llms.html#langchain.llms.AI21.get_num_tokens_from_messages) \r\n\r\nThen I check the number of prompt tokens with the callback `get_openai_callback` the understand if the calculation was correct:\r\n```python\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.schema import HumanMessage, SystemMessage, AIMessage\r\nfrom langchain.callbacks import get_openai_callback\r\n\r\nmodels_name = [\"text-davinci-003\", \"gpt-3.5-turbo-0301\", \"gpt-3.5-turbo-0613\"]\r\nfor model_name in models_name:\r\n    print(f\"----{model_name}----\")\r\n    llm = OpenAI(model_name = model_name)\r\n    print(llm)\r\n    text = \"Hello world\"\r\n    tokens = llm.get_num_tokens(text)\r\n    print(f\"1) get_num_tokens: {tokens}\")\r\n\r\n    human_message = HumanMessage(content=text)\r\n    system_message = SystemMessage(content=text)\r\n    ai_message = AIMessage(content=text)\r\n    tokens = llm.get_num_tokens_from_messages([human_message]), llm.get_num_tokens_from_messages([system_message]), llm.get_num_tokens_from_messages([ai_message])\r\n    print(f\"2) get_num_tokens_from_messages: {tokens}\")\r\n\r\n    with get_openai_callback() as cb: \r\n        llm_response = llm(text)\r\n        print(f\"3) callback: {cb}\")\r\n```\r\n\r\nThe output is:\r\n```\r\n----text-davinci-003----\r\nOpenAI\r\nParams: {'model_name': 'text-davinci-003', 'temperature': 0.7, 'max_tokens': 256, 'top_p': 1, 'frequency_penalty': 0, 'presence_penalty': 0, 'n': 1, 'request_timeout': None, 'logit_bias': {}}\r\n1) get_num_tokens: 2\r\n2) get_num_tokens_from_messages: (4, 4, 4)\r\n3) callback: Tokens Used: 23\r\n\tPrompt Tokens: 2\r\n\tCompletion Tokens: 21\r\nSuccessful Requests: 1\r\nTotal Cost (USD): $0.00045999999999999996\r\n----gpt-3.5-turbo-0301----\r\nOpenAIChat\r\nParams: {'model_name': 'gpt-3.5-turbo-0301'}\r\n1) get_num_tokens: 2\r\n2) get_num_tokens_from_messages: (4, 4, 4)\r\n3) callback: Tokens Used: 50\r\n\tPrompt Tokens: 10\r\n\tCompletion Tokens: 40\r\nSuccessful Requests: 1\r\nTotal Cost (USD): $0.0001\r\n----gpt-3.5-turbo-0613----\r\nOpenAIChat\r\nParams: {'model_name': 'gpt-3.5-turbo-0613'}\r\n1) get_num_tokens: 2\r\n2) get_num_tokens_from_messages: (4, 4, 4)\r\n3) callback: Tokens Used: 18\r\n\tPrompt Tokens: 9\r\n\tCompletion Tokens: 9\r\nSuccessful Requests: 1\r\nTotal Cost (USD): $0.0\r\n```\r\n\r\nI understand that each model has a different way to count the tokens, for example **text-davinci-003** has the same number between `get_num_tokens` output and the callback. The other two models: **gpt-3.5-turbo-0301** and **gpt-3.5-turbo-0613** seems to have respectively 6 and 5 tokens more in the callback compared to `get_num_tokens_from_messages`.\r\n\r\nSo how I can reproduce exactly the calculation of the token in the real call? Which is the official function used in it?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6642/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6642/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6641",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6641/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6641/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6641/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6641",
        "id": 1771224942,
        "node_id": "I_kwDOIPDwls5pkr9u",
        "number": 6641,
        "title": "\u662f\u5426\u6709fine tuning LLAMA\u9884\u8bad\u7ec3\u6a21\u578b\u529f\u80fd",
        "user": {
            "login": "guijuzhejiang",
            "id": 57936895,
            "node_id": "MDQ6VXNlcjU3OTM2ODk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/57936895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guijuzhejiang",
            "html_url": "https://github.com/guijuzhejiang",
            "followers_url": "https://api.github.com/users/guijuzhejiang/followers",
            "following_url": "https://api.github.com/users/guijuzhejiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/guijuzhejiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guijuzhejiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guijuzhejiang/subscriptions",
            "organizations_url": "https://api.github.com/users/guijuzhejiang/orgs",
            "repos_url": "https://api.github.com/users/guijuzhejiang/repos",
            "events_url": "https://api.github.com/users/guijuzhejiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guijuzhejiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T10:34:28Z",
        "updated_at": "2023-09-29T16:05:43Z",
        "closed_at": "2023-09-29T16:05:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\u56e0\u4e3aLLAMA\u6ca1\u6709\u4e2d\u6587\u6570\u636e\uff0c\u60f3\u7528\u4e2d\u6587\u6570\u636efine tuning LLAMA\u6a21\u578b\uff0c\u8bf7\u95eelangchain\u6709\u8fd9\u4e2a\u529f\u80fd\u5417\uff1f",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6641/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6641/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6640",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6640/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6640/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6640/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6640",
        "id": 1771222506,
        "node_id": "I_kwDOIPDwls5pkrXq",
        "number": 6640,
        "title": "sql_db_list_tables returning different order each time making caching impossible",
        "user": {
            "login": "phihung",
            "id": 5902432,
            "node_id": "MDQ6VXNlcjU5MDI0MzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5902432?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phihung",
            "html_url": "https://github.com/phihung",
            "followers_url": "https://api.github.com/users/phihung/followers",
            "following_url": "https://api.github.com/users/phihung/following{/other_user}",
            "gists_url": "https://api.github.com/users/phihung/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/phihung/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phihung/subscriptions",
            "organizations_url": "https://api.github.com/users/phihung/orgs",
            "repos_url": "https://api.github.com/users/phihung/repos",
            "events_url": "https://api.github.com/users/phihung/events{/privacy}",
            "received_events_url": "https://api.github.com/users/phihung/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-23T10:32:43Z",
        "updated_at": "2023-09-30T16:05:48Z",
        "closed_at": "2023-09-30T16:05:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.207\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nfrom langchain.sql_database import SQLDatabase\r\n\r\ndb = SQLDatabase.from_uri(\"sqlite:///sample.db\",)\r\ndb.get_usable_table_names()  # Change table names order each time the application is retarted\r\n```\r\n\r\nCurrent implementation\r\n```python\r\nclass SQLDatabase:\r\n    def get_usable_table_names(self) -> Iterable[str]:\r\n        if self._include_tables:\r\n              return self._include_tables\r\n        return self._all_tables - self._ignore_tables  # THIS IS A SET\r\n\r\nclass ListSQLDatabaseTool(BaseSQLDatabaseTool, BaseTool):\r\n    def _run(self, tool_input: str = \"\", ...) -> str:\r\n        return \", \".join(self.db.get_usable_table_names())  # ORDER CHANGES EACH RUN\r\n```\n\n### Expected behavior\n\n```python\r\nclass ListSQLDatabaseTool(BaseSQLDatabaseTool, BaseTool):\r\n    def _run(self, tool_input: str = \"\", ...) -> str:\r\n        return \", \".join(sorted(self.db.get_usable_table_names()))\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6640/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6640/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6639",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6639/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6639/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6639/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6639",
        "id": 1771205138,
        "node_id": "I_kwDOIPDwls5pknIS",
        "number": 6639,
        "title": "Issue: Set doc_content_chars_max with WikipediaLoader",
        "user": {
            "login": "eLafo",
            "id": 93491,
            "node_id": "MDQ6VXNlcjkzNDkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/93491?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eLafo",
            "html_url": "https://github.com/eLafo",
            "followers_url": "https://api.github.com/users/eLafo/followers",
            "following_url": "https://api.github.com/users/eLafo/following{/other_user}",
            "gists_url": "https://api.github.com/users/eLafo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eLafo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eLafo/subscriptions",
            "organizations_url": "https://api.github.com/users/eLafo/orgs",
            "repos_url": "https://api.github.com/users/eLafo/repos",
            "events_url": "https://api.github.com/users/eLafo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eLafo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-23T10:20:04Z",
        "updated_at": "2023-10-30T09:11:52Z",
        "closed_at": "2023-09-29T16:05:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nIn order to read all the text of wikipedia page, we would need to allow overriding the hard limit of 4000 characters set in `WikipediaAPIWrapper`\r\n\r\n### Suggestion:\r\n\r\nJust add a new argument to `WikipediaLoader` named `doc_content_chars_max` (the very same name that uses `WikipediaAPIWrapper` under the hood and use it when instancing the client.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6639/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6639/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6638",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6638/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6638/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6638/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6638",
        "id": 1771189299,
        "node_id": "I_kwDOIPDwls5pkjQz",
        "number": 6638,
        "title": "how to pass additional variables using kwargs to CustomLLM",
        "user": {
            "login": "shrinath-suresh",
            "id": 63862647,
            "node_id": "MDQ6VXNlcjYzODYyNjQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/63862647?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shrinath-suresh",
            "html_url": "https://github.com/shrinath-suresh",
            "followers_url": "https://api.github.com/users/shrinath-suresh/followers",
            "following_url": "https://api.github.com/users/shrinath-suresh/following{/other_user}",
            "gists_url": "https://api.github.com/users/shrinath-suresh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shrinath-suresh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shrinath-suresh/subscriptions",
            "organizations_url": "https://api.github.com/users/shrinath-suresh/orgs",
            "repos_url": "https://api.github.com/users/shrinath-suresh/repos",
            "events_url": "https://api.github.com/users/shrinath-suresh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shrinath-suresh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-23T10:09:31Z",
        "updated_at": "2023-10-04T14:38:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain - 0.0.198\r\nplatform - ubuntu\r\npython - 3.10.11\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nObjective is to pass additional variables to `_call` method in CustomLLM.\r\n\r\nColab Link - https://colab.research.google.com/drive/19VSmSEBq5D0MDXQ3CF0rrmOdGjdaELUj?usp=sharing \r\n\r\nSample code:\r\n\r\n```\r\nfrom langchain import PromptTemplate, LLMChain\r\nfrom langchain.llms.base import LLM\r\nfrom transformers import AutoModelForCausalLM\r\nfrom transformers import AutoTokenizer\r\n\r\nmodel_name = \"facebook/opt-350m\"\r\nmodel = AutoModelForCausalLM.from_pretrained(model_name)\r\n\r\ntokenizer = AutoTokenizer.from_pretrained(model_name)\r\n\r\n\r\nclass CustomLLM(LLM):\r\n    def _call(self, prompt, stop=None, **kwargs) -> str:\r\n        print(\"Kwargs: \", kwargs)\r\n        inputs = tokenizer([prompt], return_tensors=\"pt\")\r\n\r\n        response = model.generate(**inputs, max_new_tokens=128)\r\n        response = tokenizer.decode(response[0])\r\n        return response\r\n\r\n    @property\r\n    def _identifying_params(self):\r\n        return {\"name_of_model\": model_name}\r\n\r\n    @property\r\n    def _llm_type(self) -> str:\r\n        return \"custom\"\r\n\r\n\r\nllm = CustomLLM()\r\n\r\nprompt_template = \"Answer the question - {question}\"\r\n\r\nprompt = PromptTemplate(template=prompt_template, input_variables=[\"question\"])\r\n\r\nllm_chain = LLMChain(prompt=prompt, llm=llm)\r\n```\r\n\r\n\n\n### Expected behavior\n\n### Scenario1\r\n\r\npassing additional parameter `foo=123`\r\n```\r\nresult = llm_chain.run({\"question\":\"What is the weather in LA and SF\"},  foo=123)\r\n```\r\nFollowing error is thrown\r\n```\r\nValueError: `run` supported with either positional arguments or keyword arguments but not both. Got args: ({'question': 'What is the weather in LA and SF'},) and kwargs: {'foo': 123}.\r\n```\r\n\r\n### Scenario2\r\nif we pass it as a dictionary - `{'foo': 123}`\r\n```\r\nresult = llm_chain.run({\"question\":\"What is the weather in LA and SF\"},  {\"foo\":123})\r\n```\r\nFollowing error is thrown\r\n\r\n```\r\nValueError: `run` supports only one positional argument.\r\n```\r\n\r\n### Scenario3\r\nif we pass everything together\r\n```\r\nresult = llm_chain.run({\"question\":\"What is the weather in LA and SF\", \"foo\":123})\r\n```\r\n\r\nThe code works, but the kwargs in CustomLLM - `_call` is still empty. i guess, the chain is safely ignoring the variables which are not part of prompt template.\r\n\r\nIs there any way to pass the additional parameter to the kwargs of CustomLLM - `_call` method without changing the prompt template?\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6638/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6638/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6637",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6637/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6637/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6637/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6637",
        "id": 1771161521,
        "node_id": "I_kwDOIPDwls5pkcex",
        "number": 6637,
        "title": "STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION finishes chain BEFORE using a tool",
        "user": {
            "login": "FerAtTheFringe",
            "id": 109070512,
            "node_id": "U_kgDOBoBIsA",
            "avatar_url": "https://avatars.githubusercontent.com/u/109070512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FerAtTheFringe",
            "html_url": "https://github.com/FerAtTheFringe",
            "followers_url": "https://api.github.com/users/FerAtTheFringe/followers",
            "following_url": "https://api.github.com/users/FerAtTheFringe/following{/other_user}",
            "gists_url": "https://api.github.com/users/FerAtTheFringe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FerAtTheFringe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FerAtTheFringe/subscriptions",
            "organizations_url": "https://api.github.com/users/FerAtTheFringe/orgs",
            "repos_url": "https://api.github.com/users/FerAtTheFringe/repos",
            "events_url": "https://api.github.com/users/FerAtTheFringe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FerAtTheFringe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2023-06-23T09:50:41Z",
        "updated_at": "2023-11-22T03:42:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI've recently changed to use this agent since I started getting errors with `chat-conversational-react-description` (about it not being able to use multi-input tools). I've noticed that it often finishes a chain telling the user that it'll make a search/use a tool but it never does (because the chain is already finished).\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThis is how the agent is set up\r\n```python\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.chains.conversation.memory import ConversationBufferWindowMemory\r\nfrom langchain.agents import AgentType, initialize_agent\r\nfrom agent_tools.comparables_tool import ComparablesTool\r\n# from agent_tools.duck_search_tool import duck_search\r\nfrom langchain.prompts import SystemMessagePromptTemplate, PromptTemplate\r\nfrom agent_tools.python_repl_tool import PythonREPL\r\nfrom token_counter import get_token_count\r\nfrom langchain.prompts import MessagesPlaceholder\r\nfrom langchain.memory import ConversationBufferMemory\r\n\r\n\r\ntools = [PythonREPL(), ComparablesTool()]\r\n\r\nchat_history = MessagesPlaceholder(variable_name=\"chat_history\")\r\nmemory = ConversationBufferMemory(\r\n    memory_key=\"chat_history\", return_messages=True)\r\n\r\ngpt = ChatOpenAI(\r\n    temperature=0.2,\r\n    model_name='gpt-3.5-turbo-16k',\r\n    verbose=True\r\n)\r\n\r\nconversational_agent = initialize_agent(\r\n    agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,\r\n    tools=tools,\r\n    llm=gpt,\r\n    verbose=True,\r\n    max_iterations=10,\r\n    memory=memory,\r\n    agent_kwargs={\r\n        \"memory_prompts\": [chat_history],\r\n        \"input_variables\": [\"input\", \"agent_scratchpad\", \"chat_history\"]\r\n    }\r\n)\r\n\r\nasync def get_response(user_message: str) -> str:\r\n\r\n    return await conversational_agent.arun(user_message)\r\n```\r\n\r\nAnd this is what's on the terminal:\r\n```python\r\nFerAtTheFringe#1080 said: \"Hey I need to find apartments in madrid with at least 3 rooms\" (general)\r\n\u2190[1m> Entering new  chain...\u2190[0m\r\n\u2190[32;1m\u2190[1;3mSure! I can help you find apartments in Madrid with at least 3 rooms. Let me search for some options for you.\u2190[0m\r\n\u2190[1m> Finished chain.\u2190[0m\r\n```\n\n### Expected behavior\n\n```python\r\nFerAtTheFringe#1080 said: \"Hey I need to find apartments in madrid with at least 3 rooms\" (general)\r\n\u2190[1m> Entering new  chain...\u2190[0m\r\n\u2190[32;1m\u2190[1;3m  \"action\": \"get_comparables\",\r\n  \"action_input\": {\r\n    \"latitude\": \"38.9921979\",\r\n    \"longitude\": \"-1.878099\",\r\n    \"rooms\": \"5\",\r\n    \"nresults\": \"10\"\r\n  }\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6637/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6637/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6636",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6636/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6636/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6636/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6636",
        "id": 1771057110,
        "node_id": "I_kwDOIPDwls5pkC_W",
        "number": 6636,
        "title": "'ConversationSummaryMemory' has no attribute 'from_messages'",
        "user": {
            "login": "jbkoh",
            "id": 1572627,
            "node_id": "MDQ6VXNlcjE1NzI2Mjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1572627?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jbkoh",
            "html_url": "https://github.com/jbkoh",
            "followers_url": "https://api.github.com/users/jbkoh/followers",
            "following_url": "https://api.github.com/users/jbkoh/following{/other_user}",
            "gists_url": "https://api.github.com/users/jbkoh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jbkoh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jbkoh/subscriptions",
            "organizations_url": "https://api.github.com/users/jbkoh/orgs",
            "repos_url": "https://api.github.com/users/jbkoh/repos",
            "events_url": "https://api.github.com/users/jbkoh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jbkoh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-23T08:37:14Z",
        "updated_at": "2023-09-29T16:05:58Z",
        "closed_at": "2023-09-29T16:05:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nUbuntu 20.04\r\nPython 3.10\r\nlangchain 0.0.166\n\n### Who can help?\n\n@hwchase17 @agola11\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [X] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThis code is retrieved from the official website\r\nhttps://python.langchain.com/docs/modules/memory/how_to/summary#initializing-with-messages\r\n\r\n```python\r\n\r\nfrom langchain.memory import ConversationSummaryMemory, ChatMessageHistory\r\nfrom langchain.llms import OpenAI\r\nfrom dotenv import load_dotenv\r\n\r\nload_dotenv()\r\n\r\nhistory = ChatMessageHistory()\r\nhistory.add_user_message(\"hi\")\r\nhistory.add_ai_message(\"hi there!\")\r\nmemory = ConversationSummaryMemory.from_messages(llm=OpenAI(temperature=0), chat_memory=history, return_messages=True)\r\n```\r\n\r\nThe above code will throw out an exception\r\n```\r\nAttributeError: type object 'ConversationSummaryMemory' has no attribute 'from_messages'\r\n```\r\n\r\nI guess the class method has been deprecated?\n\n### Expected behavior\n\nIt passes.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6636/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6636/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6635",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6635/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6635/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6635/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6635",
        "id": 1771023299,
        "node_id": "I_kwDOIPDwls5pj6vD",
        "number": 6635,
        "title": "ValidationError: 1 validation error for ConversationalRetrievalChain chain_type_kwargs extra fields not permitted (type=value_error.extra)",
        "user": {
            "login": "levalencia",
            "id": 6962857,
            "node_id": "MDQ6VXNlcjY5NjI4NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6962857?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/levalencia",
            "html_url": "https://github.com/levalencia",
            "followers_url": "https://api.github.com/users/levalencia/followers",
            "following_url": "https://api.github.com/users/levalencia/following{/other_user}",
            "gists_url": "https://api.github.com/users/levalencia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/levalencia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/levalencia/subscriptions",
            "organizations_url": "https://api.github.com/users/levalencia/orgs",
            "repos_url": "https://api.github.com/users/levalencia/repos",
            "events_url": "https://api.github.com/users/levalencia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/levalencia/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-06-23T08:13:12Z",
        "updated_at": "2023-11-03T04:33:18Z",
        "closed_at": "2023-07-14T05:54:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain               0.0.206\r\npython 3.11.3\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nCode \r\n```\r\n\r\ntfretriever = TFIDFRetriever.from_texts(\r\n            [\"My name is Luis Valencia\",\r\n            \"I am 70 years old\",\r\n            \"I like gardening, baking and hockey\"])\r\n        \r\n        template = \"\"\"\r\n            Use the following context (delimited by <ctx></ctx>) and the chat history (delimited by <hs></hs>) to answer the question:\r\n            ------\r\n            <ctx>\r\n            {context}\r\n            </ctx>\r\n            ------\r\n            <hs>\r\n            {chat_history}\r\n            </hs>\r\n            ------\r\n            {question}\r\n            Answer:\r\n            \"\"\"\r\n        \r\n        prompt = PromptTemplate(\r\n            input_variables=[\"chat_history\", \"context\", \"question\"],\r\n            template=template,\r\n            )\r\n        \r\n        st.session_state['chain'] = chain = ConversationalRetrievalChain.from_llm(llm, \r\n                                                                                vectordb.as_retriever(),\r\n                                                                                memory=memory,\r\n                                                                                  chain_type_kwargs={\r\n                                                                                    \"verbose\": True,\r\n                                                                                    \"prompt\": prompt,\r\n                                                                                    \"memory\": ConversationBufferMemory(\r\n                                                                                        memory_key=\"chat_history\",\r\n                                                                                        input_key=\"question\"),\r\n                                                                                })\r\n\r\n```\r\n\r\nError:\r\n\r\nValidationError: 1 validation error for ConversationalRetrievalChain chain_type_kwargs extra fields not permitted (type=value_error.extra)\n\n### Expected behavior\n\nI should be able to provide custom context to my conversational retrieval chain, without custom prompt it works and gets good answers from vector db, but I cant use custom prompts",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6635/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6635/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6634",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6634/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6634/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6634/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6634",
        "id": 1770965108,
        "node_id": "PR_kwDOIPDwls5TuOG7",
        "number": 6634,
        "title": "PowerBI: catch outdated token",
        "user": {
            "login": "eavanvalkenburg",
            "id": 13749212,
            "node_id": "MDQ6VXNlcjEzNzQ5MjEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13749212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eavanvalkenburg",
            "html_url": "https://github.com/eavanvalkenburg",
            "followers_url": "https://api.github.com/users/eavanvalkenburg/followers",
            "following_url": "https://api.github.com/users/eavanvalkenburg/following{/other_user}",
            "gists_url": "https://api.github.com/users/eavanvalkenburg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eavanvalkenburg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eavanvalkenburg/subscriptions",
            "organizations_url": "https://api.github.com/users/eavanvalkenburg/orgs",
            "repos_url": "https://api.github.com/users/eavanvalkenburg/repos",
            "events_url": "https://api.github.com/users/eavanvalkenburg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eavanvalkenburg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-23T07:28:00Z",
        "updated_at": "2023-06-23T22:01:09Z",
        "closed_at": "2023-06-23T22:01:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6634",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6634",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6634.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6634.patch",
            "merged_at": "2023-06-23T22:01:09Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\nThis adds just a small tweak to catch the error that says the token is expired rather then retrying.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6634/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6634/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6631",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6631/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6631/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6631/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6631",
        "id": 1770856353,
        "node_id": "I_kwDOIPDwls5pjR-h",
        "number": 6631,
        "title": "Github issues instead of Github repo?",
        "user": {
            "login": "StefanENC",
            "id": 57289608,
            "node_id": "MDQ6VXNlcjU3Mjg5NjA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/57289608?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/StefanENC",
            "html_url": "https://github.com/StefanENC",
            "followers_url": "https://api.github.com/users/StefanENC/followers",
            "following_url": "https://api.github.com/users/StefanENC/following{/other_user}",
            "gists_url": "https://api.github.com/users/StefanENC/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/StefanENC/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/StefanENC/subscriptions",
            "organizations_url": "https://api.github.com/users/StefanENC/orgs",
            "repos_url": "https://api.github.com/users/StefanENC/repos",
            "events_url": "https://api.github.com/users/StefanENC/events{/privacy}",
            "received_events_url": "https://api.github.com/users/StefanENC/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T06:21:35Z",
        "updated_at": "2023-09-29T16:06:04Z",
        "closed_at": "2023-09-29T16:06:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWhy does the langchain js version have a github repo document loader and this one can only load github issues?\n\n### Motivation\n\n-\n\n### Your contribution\n\n-",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6631/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6631/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6630",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6630/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6630/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6630/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6630",
        "id": 1770853281,
        "node_id": "I_kwDOIPDwls5pjROh",
        "number": 6630,
        "title": "Can't use arun acall, no return and can't stop",
        "user": {
            "login": "foxone9",
            "id": 115121349,
            "node_id": "U_kgDOBtycxQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/115121349?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/foxone9",
            "html_url": "https://github.com/foxone9",
            "followers_url": "https://api.github.com/users/foxone9/followers",
            "following_url": "https://api.github.com/users/foxone9/following{/other_user}",
            "gists_url": "https://api.github.com/users/foxone9/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/foxone9/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/foxone9/subscriptions",
            "organizations_url": "https://api.github.com/users/foxone9/orgs",
            "repos_url": "https://api.github.com/users/foxone9/repos",
            "events_url": "https://api.github.com/users/foxone9/events{/privacy}",
            "received_events_url": "https://api.github.com/users/foxone9/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T06:18:54Z",
        "updated_at": "2023-09-29T16:06:09Z",
        "closed_at": "2023-09-29T16:06:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain-0.0.209\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [X] Async\n\n### Reproduction\n\n`import asyncio\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.prompts import PromptTemplate\r\nfrom langchain.chains import LLMChain\r\n\r\n\r\n\r\nasync def async_generate(chain):\r\n    resp = await chain.arun(product=\"toothpaste\")\r\n    print(resp)\r\n\r\n\r\nasync def generate_concurrently():\r\n    llm = OpenAI(temperature=0.9)\r\n    prompt = PromptTemplate(\r\n        input_variables=[\"product\"],\r\n        template=\"What is a good name for a company that makes {product}?\",\r\n    )\r\n    chain = LLMChain(llm=llm, prompt=prompt)\r\n    tasks = [async_generate(chain) for _ in range(3)]\r\n    await asyncio.gather(*tasks)\r\n\r\nasyncio.run(generate_concurrently())`\r\n\r\nno error and no answer until timeout\r\nRetrying langchain.llms.openai.acompletion_with_retry.<locals>._completion_with_retry in 4.0 seconds...\r\nI know this message mean it is working  but no  retrun  and can't stop\r\n\r\nand   the same problem in  Jupyter, code like this\r\nmy code in Jupyter\r\n`import asyncio\r\n\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.prompts import PromptTemplate\r\nfrom langchain.chains import LLMChain\r\n\r\n\r\n\r\nasync def async_generate(chain):\r\n    resp = await chain.arun(product=\"toothpaste\")\r\n    print(resp)\r\n\r\n\r\nasync def generate_concurrently():\r\n    llm = OpenAI(temperature=0.9)\r\n    prompt = PromptTemplate(\r\n        input_variables=[\"product\"],\r\n        template=\"What is a good name for a company that makes {product}?\",\r\n    )\r\n    chain = LLMChain(llm=llm, prompt=prompt)\r\n    tasks = [async_generate(chain) for _ in range(3)]\r\n    await asyncio.gather(*tasks)\r\n\r\nawait generate_concurrently()`\r\n\n\n### Expected behavior\n\nno error and no answer until timeout\r\nRetrying langchain.llms.openai.acompletion_with_retry.<locals>._completion_with_retry in 4.0 seconds...\r\nI know this message mean it is working  but no  retrun  and can't stop\r\n\r\nand   the same problem in  Jupyter",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6630/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6630/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6629",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6629/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6629/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6629/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6629",
        "id": 1770776581,
        "node_id": "PR_kwDOIPDwls5TtpRj",
        "number": 6629,
        "title": "Update to RunOnDataset helper functions to accept evaluator callbacks",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T04:58:01Z",
        "updated_at": "2023-06-27T06:58:14Z",
        "closed_at": "2023-06-27T06:58:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6629",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6629",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6629.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6629.patch",
            "merged_at": "2023-06-27T06:58:13Z"
        },
        "body": "Also improve docstrings and update the tracing datasets notebook to focus on \"debug, evaluate, monitor\"",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6629/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6629/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6628",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6628/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6628/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6628/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6628",
        "id": 1770741393,
        "node_id": "I_kwDOIPDwls5pi16R",
        "number": 6628,
        "title": "Issue: How to print the complete prompt that chain used",
        "user": {
            "login": "LeiSanity",
            "id": 100346263,
            "node_id": "U_kgDOBfsplw",
            "avatar_url": "https://avatars.githubusercontent.com/u/100346263?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LeiSanity",
            "html_url": "https://github.com/LeiSanity",
            "followers_url": "https://api.github.com/users/LeiSanity/followers",
            "following_url": "https://api.github.com/users/LeiSanity/following{/other_user}",
            "gists_url": "https://api.github.com/users/LeiSanity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LeiSanity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LeiSanity/subscriptions",
            "organizations_url": "https://api.github.com/users/LeiSanity/orgs",
            "repos_url": "https://api.github.com/users/LeiSanity/repos",
            "events_url": "https://api.github.com/users/LeiSanity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LeiSanity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-23T04:03:35Z",
        "updated_at": "2023-11-16T13:33:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nqa = ConversationalRetrievalChain.from_llm(AzureChatOpenAI(deployment_name=\"gpt-35-turbo\"), db.as_retriever(), memory=memory)\r\nprint(qa.combine_docs_chain.llm_chain.prompt)\r\n\r\nChatPromptTemplate(input_variables=['question', 'context'], output_parser=None, partial_variables={}, messages=[SystemMessagePromptTemplate(prompt=PromptTemplate(input_variables=['context'], output_parser=None, partial_variables={}, template=\"Use the following pieces of context to answer the users question. \\nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\\n----------------\\n{context}\", template_format='f-string', validate_template=True), additional_kwargs={}), HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['question'], output_parser=None, partial_variables={}, template='{question}', template_format='f-string', validate_template=True), additional_kwargs={})])\r\n\r\nHow can I get the complete prompt includes questions and context?\r\n\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6628/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6628/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6627",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6627/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6627/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6627/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6627",
        "id": 1770729226,
        "node_id": "I_kwDOIPDwls5piy8K",
        "number": 6627,
        "title": "Critical Vulnerability Blocking Deployment",
        "user": {
            "login": "lppier",
            "id": 1635202,
            "node_id": "MDQ6VXNlcjE2MzUyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1635202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lppier",
            "html_url": "https://github.com/lppier",
            "followers_url": "https://api.github.com/users/lppier/followers",
            "following_url": "https://api.github.com/users/lppier/following{/other_user}",
            "gists_url": "https://api.github.com/users/lppier/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lppier/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lppier/subscriptions",
            "organizations_url": "https://api.github.com/users/lppier/orgs",
            "repos_url": "https://api.github.com/users/lppier/repos",
            "events_url": "https://api.github.com/users/lppier/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lppier/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-06-23T03:47:23Z",
        "updated_at": "2023-08-28T21:35:45Z",
        "closed_at": "2023-08-28T21:35:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain 0.0.209, Python 3.8.17\r\nhttps://security.snyk.io/vuln/SNYK-PYTHON-LANGCHAIN-5725807\r\n\r\nHi, we are deploying an app in our environment to production with langchain as one of the packages. \r\nToday, on Snyk this critical vulnerability showed up, and as a result we're blocked from deploying as Snyk flagged this out as critical. \r\n\r\nAre there any plans to fix this soon? \r\n\r\nThank you very much. \r\n<img width=\"1383\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/1635202/81aa2179-7c10-4f3c-9fa4-11042f43a9be\">\r\n\r\n\r\n### Who can help?\r\n@hwchase17 @dev2049 @vowelparrot  @bborn @Jflick58 @duckdoom4 @verm\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n\r\n### Reproduction\r\n\r\nMy requirements.txt\r\n\r\n#\r\n# This file is autogenerated by pip-compile with Python\r\n# by the following command:\r\n#\r\n#    pip-compile --allow-unsafe --output-file=requirements.txt --resolver=backtracking requirements.in\r\n#\r\naioboto3==11.2.0\r\n    # via python-commons\r\naiobotocore[boto3]==2.5.0\r\n    # via aioboto3\r\naiohttp==3.8.4\r\n    # via\r\n    #   aiobotocore\r\n    #   langchain\r\n    #   openai\r\naioitertools==0.11.0\r\n    # via aiobotocore\r\naiosignal==1.3.1\r\n    # via aiohttp\r\nalembic==1.10.4\r\n    # via -r requirements.in\r\nanyio==3.7.0\r\n    # via\r\n    #   httpcore\r\n    #   starlette\r\n    #   watchfiles\r\nasync-timeout==4.0.2\r\n    # via\r\n    #   aiohttp\r\n    #   langchain\r\nasyncpg==0.27.0\r\n    # via -r requirements.in\r\nattrs==23.1.0\r\n    # via\r\n    #   aiohttp\r\n    #   pytest\r\nboto3==1.26.76\r\n    # via aiobotocore\r\nbotocore==1.29.76\r\n    # via\r\n    #   aiobotocore\r\n    #   boto3\r\n    #   s3transfer\r\ncertifi==2023.5.7\r\n    # via\r\n    #   httpcore\r\n    #   httpx\r\n    #   python-commons\r\n    #   requests\r\ncffi==1.15.1\r\n    # via cryptography\r\ncharset-normalizer==3.1.0\r\n    # via\r\n    #   aiohttp\r\n    #   python-commons\r\n    #   requests\r\nclick==8.1.3\r\n    # via uvicorn\r\ncoverage==7.2.7\r\n    # via pytest-cov\r\ncryptography==41.0.1\r\n    # via\r\n    #   pyopenssl\r\n    #   python-commons\r\ndataclasses-json==0.5.8\r\n    # via langchain\r\ndnspython==2.3.0\r\n    # via email-validator\r\nemail-validator==1.3.1\r\n    # via -r requirements.in\r\nexceptiongroup==1.1.1\r\n    # via anyio\r\nfastapi==0.95.2\r\n    # via -r requirements.in\r\nfrozenlist==1.3.3\r\n    # via\r\n    #   aiohttp\r\n    #   aiosignal\r\ngreenlet==2.0.2\r\n    # via sqlalchemy\r\ngunicorn==20.1.0\r\n    # via python-commons\r\nh11==0.14.0\r\n    # via\r\n    #   httpcore\r\n    #   uvicorn\r\nhttpcore==0.17.2\r\n    # via httpx\r\nhttptools==0.5.0\r\n    # via uvicorn\r\nhttpx==0.24.1\r\n    # via python-commons\r\nidna==3.4\r\n    # via\r\n    #   anyio\r\n    #   email-validator\r\n    #   httpx\r\n    #   requests\r\n    #   yarl\r\niniconfig==2.0.0\r\n    # via pytest\r\njmespath==1.0.1\r\n    # via\r\n    #   boto3\r\n    #   botocore\r\nlangchain==0.0.209\r\n    # via -r requirements.in\r\nlangchainplus-sdk==0.0.16\r\n    # via langchain\r\nloguru==0.7.0\r\n    # via python-commons\r\nmako==1.2.4\r\n    # via alembic\r\nmarkdown-it-py==3.0.0\r\n    # via rich\r\nmarkupsafe==2.1.3\r\n    # via mako\r\nmarshmallow==3.19.0\r\n    # via\r\n    #   dataclasses-json\r\n    #   marshmallow-enum\r\nmarshmallow-enum==1.5.1\r\n    # via dataclasses-json\r\nmdurl==0.1.2\r\n    # via markdown-it-py\r\nmultidict==6.0.4\r\n    # via\r\n    #   aiohttp\r\n    #   yarl\r\nmypy-extensions==1.0.0\r\n    # via typing-inspect\r\nnumexpr==2.8.4\r\n    # via langchain\r\nnumpy==1.24.3\r\n    # via\r\n    #   -r requirements.in\r\n    #   langchain\r\n    #   numexpr\r\nopenai==0.27.8\r\n    # via -r requirements.in\r\nopenapi-schema-pydantic==1.2.4\r\n    # via langchain\r\npackaging==23.1\r\n    # via\r\n    #   marshmallow\r\n    #   pytest\r\npluggy==1.2.0\r\n    # via pytest\r\npy==1.11.0\r\n    # via pytest\r\npycparser==2.21\r\n    # via cffi\r\npydantic==1.10.9\r\n    # via\r\n    #   fastapi\r\n    #   langchain\r\n    #   langchainplus-sdk\r\n    #   openapi-schema-pydantic\r\n    #   python-commons\r\npygments==2.15.1\r\n    # via rich\r\npyopenssl==23.2.0\r\n    # via python-commons\r\npytest==6.2.5\r\n    # via\r\n    #   -r requirements.in\r\n    #   pytest-asyncio\r\n    #   pytest-cov\r\n    #   pytest-mock\r\npytest-asyncio==0.18.3\r\n    # via -r requirements.in\r\npytest-cov==2.12.1\r\n    # via -r requirements.in\r\npytest-mock==3.6.1\r\n    # via -r requirements.in\r\npython-commons @ ## masked internal repo ## \r\n    # via -r requirements.in\r\npython-dateutil==2.8.2\r\n    # via botocore\r\npython-dotenv==1.0.0\r\n    # via\r\n    #   -r requirements.in\r\n    #   uvicorn\r\npyyaml==6.0\r\n    # via\r\n    #   langchain\r\n    #   uvicorn\r\nregex==2023.6.3\r\n    # via tiktoken\r\nrequests==2.31.0\r\n    # via\r\n    #   langchain\r\n    #   langchainplus-sdk\r\n    #   openai\r\n    #   tiktoken\r\nrich==13.4.2\r\n    # via python-commons\r\ns3transfer==0.6.1\r\n    # via boto3\r\nsix==1.16.0\r\n    # via python-dateutil\r\nsniffio==1.3.0\r\n    # via\r\n    #   anyio\r\n    #   httpcore\r\n    #   httpx\r\nsqlalchemy[asyncio]==2.0.16\r\n    # via\r\n    #   -r requirements.in\r\n    #   alembic\r\n    #   langchain\r\nsse-starlette==1.6.1\r\n    # via -r requirements.in\r\nstarlette==0.27.0\r\n    # via\r\n    #   fastapi\r\n    #   python-commons\r\n    #   sse-starlette\r\ntenacity==8.2.2\r\n    # via\r\n    #   langchain\r\n    #   langchainplus-sdk\r\ntiktoken==0.4.0\r\n    # via -r requirements.in\r\ntoml==0.10.2\r\n    # via\r\n    #   pytest\r\n    #   pytest-cov\r\ntqdm==4.65.0\r\n    # via openai\r\ntyping-extensions==4.6.3\r\n    # via\r\n    #   aioitertools\r\n    #   alembic\r\n    #   pydantic\r\n    #   sqlalchemy\r\n    #   starlette\r\n    #   typing-inspect\r\ntyping-inspect==0.9.0\r\n    # via dataclasses-json\r\nurllib3==1.26.16\r\n    # via\r\n    #   botocore\r\n    #   python-commons\r\n    #   requests\r\nuvicorn[standard]==0.21.1\r\n    # via\r\n    #   -r requirements.in\r\n    #   python-commons\r\nuvloop==0.17.0\r\n    # via uvicorn\r\nwatchfiles==0.19.0\r\n    # via uvicorn\r\nwebsockets==11.0.3\r\n    # via uvicorn\r\nwrapt==1.15.0\r\n    # via aiobotocore\r\nyarl==1.9.2\r\n    # via aiohttp\r\n\r\n# The following packages are considered to be unsafe in a requirements file:\r\nsetuptools==68.0.0\r\n    # via\r\n    #   gunicorn\r\n    #   python-commons\r\n\r\n\r\n### Expected behavior\r\n\r\nCritical vulnerability would have to be fixed for us to deploy, thanks. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6627/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6627/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6626",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6626/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6626/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6626/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6626",
        "id": 1770721710,
        "node_id": "PR_kwDOIPDwls5Ttdoy",
        "number": 6626,
        "title": "docstrings: top-level 1",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-23T03:34:22Z",
        "updated_at": "2023-07-05T04:33:41Z",
        "closed_at": "2023-06-23T22:49:45Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6626",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6626",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6626.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6626.patch",
            "merged_at": "2023-06-23T22:49:45Z"
        },
        "body": "This PR targets the `API Reference` documentation.\r\n- Several classes and functions missed `docstrings`. These docstrings were created.\r\n- In several places this\r\n\r\n```\r\nexcept ImportError:\r\n        raise ValueError(\r\n```\r\n\r\n        was replaced to \r\n\r\n```\r\nexcept ImportError:\r\n        raise ImportError(\r\n```\r\n\r\n\r\n@hwchase17  @dev2049 - please review :)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6626/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6626/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6625",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6625/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6625/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6625/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6625",
        "id": 1770717207,
        "node_id": "PR_kwDOIPDwls5Ttctk",
        "number": 6625,
        "title": "Fix the markdown rendering issue with a code block inside a markdown code block",
        "user": {
            "login": "yaohui-wyh",
            "id": 3115235,
            "node_id": "MDQ6VXNlcjMxMTUyMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3115235?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yaohui-wyh",
            "html_url": "https://github.com/yaohui-wyh",
            "followers_url": "https://api.github.com/users/yaohui-wyh/followers",
            "following_url": "https://api.github.com/users/yaohui-wyh/following{/other_user}",
            "gists_url": "https://api.github.com/users/yaohui-wyh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yaohui-wyh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yaohui-wyh/subscriptions",
            "organizations_url": "https://api.github.com/users/yaohui-wyh/orgs",
            "repos_url": "https://api.github.com/users/yaohui-wyh/repos",
            "events_url": "https://api.github.com/users/yaohui-wyh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yaohui-wyh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-23T03:27:00Z",
        "updated_at": "2023-07-12T20:29:26Z",
        "closed_at": "2023-07-12T20:29:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6625",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6625",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6625.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6625.patch",
            "merged_at": "2023-07-12T20:29:25Z"
        },
        "body": "### Description\r\n\r\n- Fix the markdown rendering issue with a code block inside a markdown, using a different number of backticks for the delimiters.\r\n\r\nCurrent doc site: <https://python.langchain.com/docs/modules/data_connection/document_transformers/text_splitters/code_splitter#markdown>\r\n\r\nAfter fix:\r\n<img width=\"480\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/3115235/d9921d59-64e6-4a34-9c62-79743667f528\">\r\n\r\n\r\n### Who can review\r\n\r\nPTAL @dev2049 \r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6625/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6625/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6624",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6624/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6624/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6624/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6624",
        "id": 1770691161,
        "node_id": "I_kwDOIPDwls5pippZ",
        "number": 6624,
        "title": "OpenAIMultiFunctionsAgent KeyError: 'actions' on custom tools",
        "user": {
            "login": "gururise",
            "id": 4380009,
            "node_id": "MDQ6VXNlcjQzODAwMDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4380009?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gururise",
            "html_url": "https://github.com/gururise",
            "followers_url": "https://api.github.com/users/gururise/followers",
            "following_url": "https://api.github.com/users/gururise/following{/other_user}",
            "gists_url": "https://api.github.com/users/gururise/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gururise/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gururise/subscriptions",
            "organizations_url": "https://api.github.com/users/gururise/orgs",
            "repos_url": "https://api.github.com/users/gururise/repos",
            "events_url": "https://api.github.com/users/gururise/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gururise/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-06-23T02:49:01Z",
        "updated_at": "2023-11-13T23:23:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain 0.0.209\r\n\r\nThe recent commit #6518 provided an OpenAIMultiFunctionsAgent class.\r\n\r\nThis MultiFunctions agent fails often when using Custom Tools that worked fine with the OpenAIFunctionsAgent.  \r\n\r\n\r\n\r\n```\r\nFile \"/home/gene/endpoints/app/routers/query.py\", line 44, in query3\r\n    result = await agent.acall(inputs={\"input\":query.query})\r\n  File \"/home/gene/endpoints/venv/lib/python3.10/site-packages/langchain/chains/base.py\", line 215, in acall\r\n    raise e\r\n  File \"/home/gene/endpoints/venv/lib/python3.10/site-packages/langchain/chains/base.py\", line 209, in acall\r\n    await self._acall(inputs, run_manager=run_manager)\r\n  File \"/home/gene/endpoints/venv/lib/python3.10/site-packages/langchain/agents/agent.py\", line 1006, in _acall\r\n    next_step_output = await self._atake_next_step(\r\n  File \"/home/gene/endpoints/venv/lib/python3.10/site-packages/langchain/agents/agent.py\", line 853, in _atake_next_step\r\n    output = await self.agent.aplan(\r\n  File \"/home/gene/endpoints/venv/lib/python3.10/site-packages/langchain/agents/openai_functions_multi_agent/base.py\", line 301, in aplan\r\n    agent_decision = _parse_ai_message(predicted_message)\r\n  File \"/home/gene/endpoints/venv/lib/python3.10/site-packages/langchain/agents/openai_functions_multi_agent/base.py\", line 110, in _parse_ai_message\r\n    tools = json.loads(function_call[\"arguments\"])[\"actions\"]\r\nKeyError: 'actions'\r\n```\r\n\r\n**Example tool that FAILS:**\r\n```\r\nfrom typing import Optional, Type\r\nfrom langchain.tools import BaseTool\r\nfrom pydantic import BaseModel, Field\r\nfrom langchain.callbacks.manager import AsyncCallbackManagerForToolRun, CallbackManagerForToolRun\r\n\r\nclass ProductInput(BaseModel):\r\n    prod_name: str = Field(description=\"Product Name or Type of Product\")\r\n\r\nclass CustomProductTool(BaseTool):\r\n    name : str = \"price_lookup\"\r\n    description : str = \"useful to look up pricing for a specific product or product type and shopping url of products offered by the Company's online website.\"\r\n    args_schema: Type[BaseModel] = ProductInput\r\n\r\n    def _run(self, prod_name: str, run_manager: Optional[CallbackManagerForToolRun] = None) -> dict:\r\n         # custom code here\r\n         products = {}\r\n         return products\r\n\r\n    async def _arun(self, prod_name: str,  run_manager: Optional[AsyncCallbackManagerForToolRun] = None) -> dict:\r\n        return self._run(prod_name)\r\n```\r\n\r\n**Example tool that WORKS:**\r\n```\r\nfrom typing import Optional, Type\r\nfrom langchain.tools import BaseTool\r\nfrom ..src.OrderStatus import func_get_order_status, afunc_get_order_status\r\nfrom langchain.callbacks.manager import AsyncCallbackManagerForToolRun, CallbackManagerForToolRun\r\nfrom pydantic import BaseModel, Field\r\n\r\nclass OrderInput(BaseModel):\r\n    order_num: str = Field(description=\"order number\")\r\n\r\nclass CustomOrderTool(BaseTool):\r\n    name = \"order_status\"\r\n    description = \"useful for when you need to look up the shipping status of an order.\"\r\n    args_schema: Type[BaseModel] = OrderInput\r\n\r\n    def _run(self, order_num: str, run_manager: Optional[CallbackManagerForToolRun] = None) -> dict:\r\n        # Your custom logic here\r\n        return func_get_order_status(order_num)\r\n\r\n    async def _arun(self, order_num: str, run_manager: Optional[AsyncCallbackManagerForToolRun] = None) -> dict:\r\n        return await afunc_get_order_status(order_num)\r\n```\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nInstantiate a OpenAIMultiFunctionAgent:\r\n`agent = initialize_agent(tools,llm,agent=AgentType.OPENAI_MULTI_FUNCTIONS, verbose=True)`\r\n\r\nCreate a custom tool (example above):\r\n```\r\n    tools=[\r\n        CustomOrderTool(return_direct=False),\r\n        CustomQAToolSources(llm=llm,vectorstore=general_vectorstore),\r\n        CustomProductTool(return_direct=False),\r\n        CustomEscalateTool(return_direct=False)\r\n    ]\r\n```\r\n\r\nCall agent:\r\n```\r\nresult = await agent.acall(inputs={\"input\":query.query})\r\n```\r\n\r\n### Expected behavior\r\n\r\nTools are very similar to each other, not sure why one would work and the other fails.  Might have something to do with the different description lengths?  As far as I can tell the structure of the args_schema are the same between the two tools. Both tools work fine on OpenAIFunctionAgent.\r\n\r\nI expected tools would work on OpenAIMultiFunctionAgent.  Instead, **KeyError: 'actions'** results.  Somehow the transformation of langchain tools to OpenAI function schema is not working as expected for OpenAIMultiFunctionAgent.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6624/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6624/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6623",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6623/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6623/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6623/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6623",
        "id": 1770671932,
        "node_id": "PR_kwDOIPDwls5TtTRC",
        "number": 6623,
        "title": "Merge pull request #1 from hwchase17/master",
        "user": {
            "login": "zhangqinghua",
            "id": 10104054,
            "node_id": "MDQ6VXNlcjEwMTA0MDU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/10104054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhangqinghua",
            "html_url": "https://github.com/zhangqinghua",
            "followers_url": "https://api.github.com/users/zhangqinghua/followers",
            "following_url": "https://api.github.com/users/zhangqinghua/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhangqinghua/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhangqinghua/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhangqinghua/subscriptions",
            "organizations_url": "https://api.github.com/users/zhangqinghua/orgs",
            "repos_url": "https://api.github.com/users/zhangqinghua/repos",
            "events_url": "https://api.github.com/users/zhangqinghua/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhangqinghua/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-23T02:16:31Z",
        "updated_at": "2023-06-23T22:50:34Z",
        "closed_at": "2023-06-23T22:50:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6623",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6623",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6623.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6623.patch",
            "merged_at": null
        },
        "body": "test\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6623/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6623/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6622",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6622/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6622/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6622/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6622",
        "id": 1770604569,
        "node_id": "PR_kwDOIPDwls5TtI86",
        "number": 6622,
        "title": "fix(docs): broken link for OpenLLM",
        "user": {
            "login": "aarnphm",
            "id": 29749331,
            "node_id": "MDQ6VXNlcjI5NzQ5MzMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29749331?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aarnphm",
            "html_url": "https://github.com/aarnphm",
            "followers_url": "https://api.github.com/users/aarnphm/followers",
            "following_url": "https://api.github.com/users/aarnphm/following{/other_user}",
            "gists_url": "https://api.github.com/users/aarnphm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aarnphm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aarnphm/subscriptions",
            "organizations_url": "https://api.github.com/users/aarnphm/orgs",
            "repos_url": "https://api.github.com/users/aarnphm/repos",
            "events_url": "https://api.github.com/users/aarnphm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aarnphm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-23T01:27:58Z",
        "updated_at": "2023-06-24T00:48:33Z",
        "closed_at": "2023-06-23T20:59:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6622",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6622",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6622.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6622.patch",
            "merged_at": "2023-06-23T20:59:17Z"
        },
        "body": "This link for the notebook of OpenLLM is not migrated to the new format\n\nSigned-off-by: Aaron <29749331+aarnphm@users.noreply.github.com>\n\n<!-- Thank you for contributing to LangChain!\n\nReplace this comment with:\n  - Description: a description of the change,\n  - Issue: the issue # it fixes (if applicable),\n  - Dependencies: any dependencies required for this change,\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\n\nIf you're adding a new integration, please include:\n  1. a test for the integration, preferably unit tests that do not rely on network access,\n  2. an example notebook showing its use.\n\nMaintainer responsibilities:\n  - General / Misc / if you don't know who to tag: @dev2049\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\n  - Models / Prompts: @hwchase17, @dev2049\n  - Memory: @hwchase17\n  - Agents / Tools / Toolkits: @vowelparrot\n  - Tracing / Callbacks: @agola11\n  - Async: @agola11\n\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\n\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\n -->\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6622/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6622/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6621",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6621/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6621/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6621/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6621",
        "id": 1770602411,
        "node_id": "I_kwDOIPDwls5piT-r",
        "number": 6621,
        "title": "Variable or Conditional Toolbox",
        "user": {
            "login": "newsbubbles",
            "id": 1012779,
            "node_id": "MDQ6VXNlcjEwMTI3Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1012779?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/newsbubbles",
            "html_url": "https://github.com/newsbubbles",
            "followers_url": "https://api.github.com/users/newsbubbles/followers",
            "following_url": "https://api.github.com/users/newsbubbles/following{/other_user}",
            "gists_url": "https://api.github.com/users/newsbubbles/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/newsbubbles/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/newsbubbles/subscriptions",
            "organizations_url": "https://api.github.com/users/newsbubbles/orgs",
            "repos_url": "https://api.github.com/users/newsbubbles/repos",
            "events_url": "https://api.github.com/users/newsbubbles/events{/privacy}",
            "received_events_url": "https://api.github.com/users/newsbubbles/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T01:26:22Z",
        "updated_at": "2023-09-29T16:06:14Z",
        "closed_at": "2023-09-29T16:06:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nHow can I make a toolset be dependent on some situation?\r\nIn the examples I have seen so far and from what I have been able to piece together from reading code, awhile ago (you guys work fast)... is there a way to make it so that I can only make certain tools available to an Agent at certain times beyond changing the actual tools stack myself in the Agent?\r\n\n\n### Motivation\n\nThe idea is to keep the agent prompt template as lean as possible.  The goal is to be able to do something like leading an agent through a process with varying toolboxes given the step that it is on.  I have seen that it is possible using function calling, but is it just possible in any type of Agent? \n\n### Your contribution\n\nThis is a feature request.  I can make a contribution of looking at the code and adding this, but I am not sure if it is already possible or planned seeing as you move fast!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6621/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6621/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6620",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6620/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6620/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6620/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6620",
        "id": 1770580833,
        "node_id": "I_kwDOIPDwls5piOth",
        "number": 6620,
        "title": "How can I implement a custom LangChain class wrapper (LLM model/Agent) for replit-code-v1-3b model?",
        "user": {
            "login": "smith-co",
            "id": 102386930,
            "node_id": "U_kgDOBhpM8g",
            "avatar_url": "https://avatars.githubusercontent.com/u/102386930?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smith-co",
            "html_url": "https://github.com/smith-co",
            "followers_url": "https://api.github.com/users/smith-co/followers",
            "following_url": "https://api.github.com/users/smith-co/following{/other_user}",
            "gists_url": "https://api.github.com/users/smith-co/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smith-co/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smith-co/subscriptions",
            "organizations_url": "https://api.github.com/users/smith-co/orgs",
            "repos_url": "https://api.github.com/users/smith-co/repos",
            "events_url": "https://api.github.com/users/smith-co/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smith-co/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T00:59:38Z",
        "updated_at": "2023-09-29T16:06:18Z",
        "closed_at": "2023-09-29T16:06:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nIs it possible to integrate [replit-code-v1-3b](https://replicate.com/replit/replit-code-v1-3b) as an [LLM Model](https://python.langchain.com/en/latest/modules/models.html) or an [Agent](https://python.langchain.com/en/latest/modules/agents.html) with [LangChain](https://github.com/hwchase17/langchain), and [chain](https://python.langchain.com/en/latest/modules/chains.html) it in a complex usecase?\r\n\r\n\r\n### Suggestion:\r\n\r\nAny help / hints on the same would be appreciated!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6620/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6620/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6619",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6619/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6619/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6619/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6619",
        "id": 1770563613,
        "node_id": "I_kwDOIPDwls5piKgd",
        "number": 6619,
        "title": "Truncate HF pipeline response",
        "user": {
            "login": "geodra",
            "id": 42205330,
            "node_id": "MDQ6VXNlcjQyMjA1MzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/42205330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/geodra",
            "html_url": "https://github.com/geodra",
            "followers_url": "https://api.github.com/users/geodra/followers",
            "following_url": "https://api.github.com/users/geodra/following{/other_user}",
            "gists_url": "https://api.github.com/users/geodra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/geodra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/geodra/subscriptions",
            "organizations_url": "https://api.github.com/users/geodra/orgs",
            "repos_url": "https://api.github.com/users/geodra/repos",
            "events_url": "https://api.github.com/users/geodra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/geodra/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T00:30:59Z",
        "updated_at": "2023-09-29T16:06:24Z",
        "closed_at": "2023-09-29T16:06:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "For models like -> \"h2oai/h2ogpt-gm-oasst1-en-2048-falcon-7b-v2\" the generated output doesn't contain the prompt. So it is wrong to filter the first characters of the response.\r\n\r\nhttps://github.com/hwchase17/langchain/blob/9d42621fa4385e519f702b7005d475781033188c/langchain/llms/huggingface_pipeline.py#L172C13-L172C64\r\n\r\nhttps://huggingface.co/h2oai/h2ogpt-gm-oasst1-en-2048-falcon-7b-v2/blob/main/h2oai_pipeline.py",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6619/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6619/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6618",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6618/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6618/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6618/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6618",
        "id": 1770546185,
        "node_id": "I_kwDOIPDwls5piGQJ",
        "number": 6618,
        "title": "How can I integrate SerpAPI with custom ChatGLM model",
        "user": {
            "login": "successzy",
            "id": 17405629,
            "node_id": "MDQ6VXNlcjE3NDA1NjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/17405629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/successzy",
            "html_url": "https://github.com/successzy",
            "followers_url": "https://api.github.com/users/successzy/followers",
            "following_url": "https://api.github.com/users/successzy/following{/other_user}",
            "gists_url": "https://api.github.com/users/successzy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/successzy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/successzy/subscriptions",
            "organizations_url": "https://api.github.com/users/successzy/orgs",
            "repos_url": "https://api.github.com/users/successzy/repos",
            "events_url": "https://api.github.com/users/successzy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/successzy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-23T00:05:19Z",
        "updated_at": "2023-10-01T16:05:53Z",
        "closed_at": "2023-10-01T16:05:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nHello, Team\r\n\r\nHow can I integrate SerpAPI with custom ChatGLM model. It looks like my code is not correct and I can't find useful information from internet. Hope post here can help me to resolve this issue. Thanks in advcance.\r\n```\r\nimport time\r\nimport logging\r\nimport requests\r\nfrom typing import Optional, List, Dict, Mapping, Any\r\n\r\nimport langchain\r\nfrom langchain.llms.base import LLM\r\n# from langchain.cache import InMemoryCache\r\n\r\n#------------------------------\r\nimport os\r\nos.environ[\"SERPAPI_API_KEY\"] = '44eafc5bc26834f931324798f8e370e5c5039578dde6ef7a67918f24ed00599f'\r\n\r\nfrom langchain.agents import load_tools\r\nfrom langchain.agents import initialize_agent\r\nfrom langchain.agents import AgentType\r\n#------------------------------\r\n\r\nlogging.basicConfig(level=logging.INFO)\r\n# \u542f\u52a8llm\u7684\u7f13\u5b58\r\n# langchain.llm_cache = InMemoryCache()\r\n\r\nclass ChatGLM(LLM):\r\n    # \u6a21\u578b\u670d\u52a1url\r\n    url = \"http://18.183.251.31:8000\"\r\n\r\n    @property\r\n    def _llm_type(self) -> str:\r\n        return \"chatglm\"\r\n\r\n    def _construct_query(self, prompt: str) -> Dict:\r\n        \"\"\"\u6784\u9020\u8bf7\u6c42\u4f53\r\n        \"\"\"\r\n        query = {\r\n            \"prompt\": prompt\r\n        }\r\n        return query\r\n\r\n    @classmethod\r\n    def _post(cls, url: str, query: Dict) -> Any:\r\n        \"\"\"POST\u8bf7\u6c42\r\n        \"\"\"\r\n        _headers = {\"Content_Type\": \"application/json\"}\r\n        with requests.session() as sess:\r\n            resp = sess.post(url,\r\n                             json=query,\r\n                             headers=_headers,\r\n                             timeout=60)\r\n        return resp\r\n\r\n    def _call(self, prompt: str, stop: Optional[List[str]] = None) -> str:\r\n        \"\"\"_call\r\n        \"\"\"\r\n        # construct query\r\n        query = self._construct_query(prompt=prompt)\r\n        print(query)\r\n\r\n        # post\r\n        resp = self._post(url=self.url, query=query)\r\n\r\n        if resp.status_code == 200:\r\n            resp_json = resp.json()\r\n            predictions = resp_json[\"response\"]\r\n            return predictions\r\n        else:\r\n            return \"\u8bf7\u6c42\u6a21\u578b\"\r\n\r\n    @property\r\n    def _identifying_params(self) -> Mapping[str, Any]:\r\n        \"\"\"Get the identifying parameters.\r\n        \"\"\"\r\n        _param_dict = {\r\n            \"url\": self.url\r\n        }\r\n        return _param_dict\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    llm = ChatGLM()\r\n\r\n    # ------------------------------\r\n    tools = load_tools([\"serpapi\"], llm=llm)\r\n    agent = initialize_agent(tools, llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)\r\n    agent.run(\"What's the date today? What great events have taken place today in history?\")\r\n    # ------------------------------\r\n\r\n    # while True:\r\n    #     prompt = input(\"Human: \")\r\n    #\r\n    #     begin_time = time.time() * 1000\r\n    #     # \u8bf7\u6c42\u6a21\u578b\r\n    #     response = llm(prompt, stop=[\"you\"])\r\n    #     end_time = time.time() * 1000\r\n    #     used_time = round(end_time - begin_time, 3)\r\n    #     # logging.info(f\"chatGLM process time: {used_time}ms\")\r\n    #     print(\"chatGLM process time %s\" % {used_time})\r\n    #     print(f\"ChatGLM: {response}\")\r\n```\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6618/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6618/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6617",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6617/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6617/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6617/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6617",
        "id": 1770528462,
        "node_id": "I_kwDOIPDwls5piB7O",
        "number": 6617,
        "title": "Dynamic fields for BaseModels in PydanticOutputParser? ",
        "user": {
            "login": "lfoppiano",
            "id": 15426,
            "node_id": "MDQ6VXNlcjE1NDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/15426?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lfoppiano",
            "html_url": "https://github.com/lfoppiano",
            "followers_url": "https://api.github.com/users/lfoppiano/followers",
            "following_url": "https://api.github.com/users/lfoppiano/following{/other_user}",
            "gists_url": "https://api.github.com/users/lfoppiano/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lfoppiano/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lfoppiano/subscriptions",
            "organizations_url": "https://api.github.com/users/lfoppiano/orgs",
            "repos_url": "https://api.github.com/users/lfoppiano/repos",
            "events_url": "https://api.github.com/users/lfoppiano/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lfoppiano/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-22T23:40:52Z",
        "updated_at": "2023-09-21T21:15:46Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nI have the following BaseModel: \r\n\r\n```python\r\nclass MainMagnetClass(BaseModel):\r\n    main_materials: List[str] = Field(description=\"main material\")\r\n    additional_doping_elements: List[str] = Field(description=\"doping\")\r\n```\r\nwhich can be instantiated as: \r\n\r\n```python\r\ninstance = PydanticOutputParser(pydantic_object=MainMagnetClass)\r\n```\r\n\r\nI would like to know if there is a way to dynamically load the description of the two fields. \r\n\r\nI tried with `construct()` but it doesn't seems to work. \r\n\r\nThe reason is that I'm generating a set of queries and for each of them I want to have different \"description\" for the PydanticOutputParser that is going to be used. \r\n\r\n### Suggestion:\r\n\r\nI would load a dict with the fields and their description and pass it to the object so that I could override the default descriptions.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6617/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6617/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6616",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6616/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6616/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6616/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6616",
        "id": 1770523892,
        "node_id": "PR_kwDOIPDwls5Ts3wl",
        "number": 6616,
        "title": "Kendra retriever api",
        "user": {
            "login": "3coins",
            "id": 289369,
            "node_id": "MDQ6VXNlcjI4OTM2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/289369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/3coins",
            "html_url": "https://github.com/3coins",
            "followers_url": "https://api.github.com/users/3coins/followers",
            "following_url": "https://api.github.com/users/3coins/following{/other_user}",
            "gists_url": "https://api.github.com/users/3coins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/3coins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/3coins/subscriptions",
            "organizations_url": "https://api.github.com/users/3coins/orgs",
            "repos_url": "https://api.github.com/users/3coins/repos",
            "events_url": "https://api.github.com/users/3coins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/3coins/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-06-22T23:32:57Z",
        "updated_at": "2023-06-23T22:33:35Z",
        "closed_at": "2023-06-23T21:59:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6616",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6616",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6616.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6616.patch",
            "merged_at": "2023-06-23T21:59:36Z"
        },
        "body": "## Description\r\nReplaces [Kendra Retriever](https://github.com/hwchase17/langchain/blob/master/langchain/retrievers/aws_kendra_index_retriever.py) with an updated version that uses the new [retriever API](https://docs.aws.amazon.com/kendra/latest/dg/searching-retrieve.html) which is better suited for retrieval augmented generation (RAG) systems.\r\n\r\n**Note**: This change requires the latest version (1.26.159) of boto3 to work. `pip install -U boto3` to upgrade the boto3 version.\r\n\r\ncc @hupe1980\r\ncc @dev2049\r\n\r\n\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6616/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6616/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6615",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6615/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6615/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6615/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6615",
        "id": 1770522784,
        "node_id": "PR_kwDOIPDwls5Ts3hf",
        "number": 6615,
        "title": "Update String Evaluator",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-22T23:31:00Z",
        "updated_at": "2023-06-26T21:16:16Z",
        "closed_at": "2023-06-26T21:16:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6615",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6615",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6615.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6615.patch",
            "merged_at": "2023-06-26T21:16:15Z"
        },
        "body": "- Add protocol for `evaluate_strings` \r\n- Move the criteria evaluator out so it's not restricted to being applied on traced runs",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6615/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6615/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6614",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6614/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6614/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6614/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6614",
        "id": 1770474562,
        "node_id": "PR_kwDOIPDwls5TstLs",
        "number": 6614,
        "title": "Add enum fields to parameters when constructing openai function requests",
        "user": {
            "login": "lowzhao",
            "id": 29053541,
            "node_id": "MDQ6VXNlcjI5MDUzNTQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29053541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lowzhao",
            "html_url": "https://github.com/lowzhao",
            "followers_url": "https://api.github.com/users/lowzhao/followers",
            "following_url": "https://api.github.com/users/lowzhao/following{/other_user}",
            "gists_url": "https://api.github.com/users/lowzhao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lowzhao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lowzhao/subscriptions",
            "organizations_url": "https://api.github.com/users/lowzhao/orgs",
            "repos_url": "https://api.github.com/users/lowzhao/repos",
            "events_url": "https://api.github.com/users/lowzhao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lowzhao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-22T22:29:03Z",
        "updated_at": "2023-11-07T03:56:32Z",
        "closed_at": "2023-11-07T03:56:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6614",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6614",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6614.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6614.patch",
            "merged_at": null
        },
        "body": "**Description:** Added `add_enum_properties` into `format_tool_to_openai_function` which adds enum details from `tools.arg_schema.schema()` into OpenAI Functions API requests, to make the response more relevant; similar to how enum is used in [this tutorial](https://platform.openai.com/docs/guides/gpt/function-calling) for the `[\"celsius\", \"fahrenheit\"]`. \r\n\r\nThere are several cases where an enum in the parameters where pydantic handles differently not as a simple `\"enum\"` key in the schema, most were covered in the unit test here `tests/unit_tests/tools/test_convert_to_openai.py`.\r\n\r\n**Issue:** None\r\n**Dependencies:** N/A\r\n**Tag maintainers:** @vowelparrot\r\n**Twitter handle:** ZhiHaoLow\r\n\r\nIt's my first time here, if there are any things that need amendment please let me know. \r\n\r\nOpenAI Functions seems promising and fun and hope I can contribute more! \ud83d\ude04 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6614/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6614/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6612",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6612/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6612/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6612/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6612",
        "id": 1770424567,
        "node_id": "PR_kwDOIPDwls5TsikQ",
        "number": 6612,
        "title": "GuardrailsOutputParser, added pydantic support.",
        "user": {
            "login": "simonbutt",
            "id": 61481718,
            "node_id": "MDQ6VXNlcjYxNDgxNzE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/61481718?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/simonbutt",
            "html_url": "https://github.com/simonbutt",
            "followers_url": "https://api.github.com/users/simonbutt/followers",
            "following_url": "https://api.github.com/users/simonbutt/following{/other_user}",
            "gists_url": "https://api.github.com/users/simonbutt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/simonbutt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/simonbutt/subscriptions",
            "organizations_url": "https://api.github.com/users/simonbutt/orgs",
            "repos_url": "https://api.github.com/users/simonbutt/repos",
            "events_url": "https://api.github.com/users/simonbutt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/simonbutt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-22T21:33:50Z",
        "updated_at": "2023-06-29T01:09:53Z",
        "closed_at": "2023-06-29T01:09:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6612",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6612",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6612.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6612.patch",
            "merged_at": null
        },
        "body": "**Description**: Added `from_rail_pydantic` to `GuardrailsOutputParser` which maps to the `guardrails.Guard.from_pydantic` method recently added and offers the option to use pydantic BaseModel classes instead of RAIL spec to define the guardrails Guard.\r\n**Issue**: None\r\n**Dependencies**: N/A\r\n**Tag maintainers**:   @dev2049 @hwchase17 \r\n\r\nThis is my first time contributing to this repo, lmk if anything else needs adding.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6612/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6612/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6611",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6611/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6611/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6611/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6611",
        "id": 1770409209,
        "node_id": "PR_kwDOIPDwls5TsfVr",
        "number": 6611,
        "title": "Fix grammar mistake in base.py in planners",
        "user": {
            "login": "northern-64bit",
            "id": 75195383,
            "node_id": "MDQ6VXNlcjc1MTk1Mzgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/75195383?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/northern-64bit",
            "html_url": "https://github.com/northern-64bit",
            "followers_url": "https://api.github.com/users/northern-64bit/followers",
            "following_url": "https://api.github.com/users/northern-64bit/following{/other_user}",
            "gists_url": "https://api.github.com/users/northern-64bit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/northern-64bit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/northern-64bit/subscriptions",
            "organizations_url": "https://api.github.com/users/northern-64bit/orgs",
            "repos_url": "https://api.github.com/users/northern-64bit/repos",
            "events_url": "https://api.github.com/users/northern-64bit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/northern-64bit/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-22T21:18:28Z",
        "updated_at": "2023-06-23T22:23:07Z",
        "closed_at": "2023-06-23T21:47:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6611",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6611",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6611.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6611.patch",
            "merged_at": "2023-06-23T21:47:10Z"
        },
        "body": "Fix a typo in `langchain/experimental/plan_and_execute/planners/base.py`, by changing \"Given input, decided what to do.\" to \"Given input, decide what to do.\"\r\n\r\nThis is in the docstring for functions running LLM chains which shall create a plan, \"decided\" does not make any sense in this context.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6611/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6611/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6610",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6610/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6610/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6610/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6610",
        "id": 1770383094,
        "node_id": "I_kwDOIPDwls5pheb2",
        "number": 6610,
        "title": "ChatVertexAI Error: _ChatSessionBase.send_message() got an unexpected keyword argument 'context'",
        "user": {
            "login": "vishalsrao",
            "id": 36671559,
            "node_id": "MDQ6VXNlcjM2NjcxNTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/36671559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vishalsrao",
            "html_url": "https://github.com/vishalsrao",
            "followers_url": "https://api.github.com/users/vishalsrao/followers",
            "following_url": "https://api.github.com/users/vishalsrao/following{/other_user}",
            "gists_url": "https://api.github.com/users/vishalsrao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vishalsrao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vishalsrao/subscriptions",
            "organizations_url": "https://api.github.com/users/vishalsrao/orgs",
            "repos_url": "https://api.github.com/users/vishalsrao/repos",
            "events_url": "https://api.github.com/users/vishalsrao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vishalsrao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-22T20:56:38Z",
        "updated_at": "2023-06-26T17:21:02Z",
        "closed_at": "2023-06-26T17:21:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain version: 0.0.209\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nhttps://python.langchain.com/docs/modules/model_io/models/chat/integrations/google_vertex_ai_palm\n\n### Expected behavior\n\nI get an error saying \"TypeError: _ChatSessionBase.send_message() got an unexpected keyword argument 'context'\" when I run `chat(messages)` command mentioned in https://python.langchain.com/docs/modules/model_io/models/chat/integrations/google_vertex_ai_palm. \r\n\r\nThis is probably because ChatSession.send_message does not have the argument 'context' and ChatVertexAI._generate automatically adds the context argument to params since chat-bison being a non-code model.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6610/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6610/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6609",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6609/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6609/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6609/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6609",
        "id": 1770378439,
        "node_id": "PR_kwDOIPDwls5TsYsI",
        "number": 6609,
        "title": "Session deletion method in motorhead memory",
        "user": {
            "login": "hragbalian",
            "id": 5995255,
            "node_id": "MDQ6VXNlcjU5OTUyNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5995255?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hragbalian",
            "html_url": "https://github.com/hragbalian",
            "followers_url": "https://api.github.com/users/hragbalian/followers",
            "following_url": "https://api.github.com/users/hragbalian/following{/other_user}",
            "gists_url": "https://api.github.com/users/hragbalian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hragbalian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hragbalian/subscriptions",
            "organizations_url": "https://api.github.com/users/hragbalian/orgs",
            "repos_url": "https://api.github.com/users/hragbalian/repos",
            "events_url": "https://api.github.com/users/hragbalian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hragbalian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-22T20:53:25Z",
        "updated_at": "2023-06-24T04:27:43Z",
        "closed_at": "2023-06-24T04:27:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6609",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6609",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6609.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6609.patch",
            "merged_at": "2023-06-24T04:27:43Z"
        },
        "body": "Motorhead Memory module didn't support deletion of a session.  Added a method to enable deletion.  \r\n\r\n@hwchase17\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6609/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6609/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6608",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6608/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6608/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6608/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6608",
        "id": 1770352279,
        "node_id": "I_kwDOIPDwls5phW6X",
        "number": 6608,
        "title": "RetrievalQA.from_chain_type does not release GPU memory when given ChromaDB context",
        "user": {
            "login": "JasonMaggard",
            "id": 62868198,
            "node_id": "MDQ6VXNlcjYyODY4MTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/62868198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JasonMaggard",
            "html_url": "https://github.com/JasonMaggard",
            "followers_url": "https://api.github.com/users/JasonMaggard/followers",
            "following_url": "https://api.github.com/users/JasonMaggard/following{/other_user}",
            "gists_url": "https://api.github.com/users/JasonMaggard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JasonMaggard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JasonMaggard/subscriptions",
            "organizations_url": "https://api.github.com/users/JasonMaggard/orgs",
            "repos_url": "https://api.github.com/users/JasonMaggard/repos",
            "events_url": "https://api.github.com/users/JasonMaggard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JasonMaggard/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-22T20:31:11Z",
        "updated_at": "2023-11-22T09:12:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nWhen querying with no context (emptyStore below) GPU memory goes up to 8GB and after the chain completes, GPU memory goes back down to 630MB.\r\n\r\nWhen using a ChromaDB to provide vector context, GPU memory is never released. Memory usage goes up to 8GB and stays there. Once enough calls have been made, the program will crash with an out of memory error.\r\n\r\nI have tried manually deleting the variables associated with the DB and langchain, running garbage collection... I am unable to free this GPU memory. Is there a manual method to free this memory that I could employ or some other workaround?\r\n\r\nI started with using langchain 201 and noticed the issue. The issue persists when using the latest 209.\r\n\r\n```\r\ndef queryGpt(query):\r\n    # Get our llm and embeddings\r\n    llm = get_llm()\r\n    embeddings = get_embeddings()\r\n    # Even if the user does not specify a vector store to use, it is necessary\r\n    # to pass in a retriever to the RetrievalQA chain.\r\n    docs = [\r\n        Document(page_content=\"\"),\r\n        Document(page_content=\"\"),\r\n        Document(page_content=\"\"),\r\n        Document(page_content=\"\"),\r\n    ]\r\n    emptyStore = Chroma.from_documents(docs)\r\n    retriever = emptyStore.as_retriever()\r\n\r\n    if request.content_type == \"application/json\":\r\n        data = request.get_json()\r\n        store_id = data.get(\"store_id\")\r\n        store_collection = data.get(\"store_collection\")\r\n        if store_id and store_collection:\r\n            vector_stores = load_vector_stores()\r\n            found: VectorStore | None = None\r\n            for store in vector_stores:\r\n                if store[\"id\"] == store_id:\r\n                    found = store\r\n            if not found:\r\n                print(f\"Warning: vector store not found id:{store_id}\")\r\n            else:\r\n                # print(f\"Using vector store '{found['name']}' id:{found['id']} collection {store_collection}\")\r\n                client = get_chroma_instance(found[\"dirname\"])\r\n                # embeddings = HuggingFaceEmbeddings(model_name=embeddings_model_name)\r\n                db = Chroma(\r\n                    client=client,\r\n                    embedding_function=embeddings,\r\n                    collection_name=store_collection,\r\n                )\r\n                retriever = db.as_retriever()\r\n    print('Answering question')\r\n    qa = RetrievalQA.from_chain_type(llm=llm, chain_type=\"stuff\", retriever=retriever)\r\n\r\n    # Get the answer from the chain\r\n    res = qa(query)\r\n```\r\n\r\nWe are using the latest Vicuna 13b. With `all-MiniLM-L6-v2` used for the embeddings.\r\n\r\nWe are in Azure using Tesla GPU's. Ubuntu 20.04. Cuda 12.1.\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nRun a QA chain with a ChromaDB enabled.\n\n### Expected behavior\n\nI would expect the memory to be freed upon completion of the chain.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6608/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6608/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6607",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6607/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6607/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6607/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6607",
        "id": 1770336476,
        "node_id": "PR_kwDOIPDwls5TsPms",
        "number": 6607,
        "title": "Fix ray-project/Aviary integration",
        "user": {
            "login": "kouroshHakha",
            "id": 31483498,
            "node_id": "MDQ6VXNlcjMxNDgzNDk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/31483498?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kouroshHakha",
            "html_url": "https://github.com/kouroshHakha",
            "followers_url": "https://api.github.com/users/kouroshHakha/followers",
            "following_url": "https://api.github.com/users/kouroshHakha/following{/other_user}",
            "gists_url": "https://api.github.com/users/kouroshHakha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kouroshHakha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kouroshHakha/subscriptions",
            "organizations_url": "https://api.github.com/users/kouroshHakha/orgs",
            "repos_url": "https://api.github.com/users/kouroshHakha/repos",
            "events_url": "https://api.github.com/users/kouroshHakha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kouroshHakha/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-22T20:17:20Z",
        "updated_at": "2023-06-23T21:49:55Z",
        "closed_at": "2023-06-23T21:49:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6607",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6607",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6607.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6607.patch",
            "merged_at": "2023-06-23T21:49:54Z"
        },
        "body": "  - Description: The aviary integration has changed url link. This PR provide fix for those changes and also it makes providing the input URL optional to the API (since they can be set via env variables).\r\n  - Issue: N/A\r\n  - Dependencies: N/A\r\n  - Tag maintainer: @dev2049, @hwchase17 \r\n  - Twitter handle: N/A",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6607/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6607/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6606",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6606/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6606/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6606/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6606",
        "id": 1770326709,
        "node_id": "I_kwDOIPDwls5phQq1",
        "number": 6606,
        "title": "For JSON loaders - like a Figma Design - similarity does not work, and ends up with the wrong output. ",
        "user": {
            "login": "ankitmaloo",
            "id": 4458389,
            "node_id": "MDQ6VXNlcjQ0NTgzODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4458389?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ankitmaloo",
            "html_url": "https://github.com/ankitmaloo",
            "followers_url": "https://api.github.com/users/ankitmaloo/followers",
            "following_url": "https://api.github.com/users/ankitmaloo/following{/other_user}",
            "gists_url": "https://api.github.com/users/ankitmaloo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ankitmaloo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ankitmaloo/subscriptions",
            "organizations_url": "https://api.github.com/users/ankitmaloo/orgs",
            "repos_url": "https://api.github.com/users/ankitmaloo/repos",
            "events_url": "https://api.github.com/users/ankitmaloo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ankitmaloo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-22T20:09:41Z",
        "updated_at": "2023-09-30T16:05:58Z",
        "closed_at": "2023-09-30T16:05:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nTried on Colab. \r\n\r\nVersion: [v0.0.209](https://github.com/hwchase17/langchain/releases/tag/v0.0.209)\r\n\r\nPlatform: Google Colab\r\n\r\nPython: 3.10\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n\r\n### Information\r\n\r\n- [x] The official example notebooks/scripts\r\n- [x] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n1. Take a Figma file and use Langchain's Figma plugin to get the JSON from API. \r\n2. Use the index = VectorstoreIndexCreator().from_loaders([figma_loader]) to get the index. \r\n3. And then create doc retriever using figma_doc_retriever = index.vectorstore.as_retriever()\r\n\r\nWhen we query ChatGPT/LLMs, the way code works is that it breaks the original document into parts, and finds similarity. Great for unstructured documents, but bad for JSON - breaks the structure and does not carry the right content either. So, for example, this function \r\n\r\nrelevant_nodes = figma_doc_retriever.get_relevant_documents(\"Slack Integration\")\r\n\r\nwhich calculates similarity to get the nearest nodes, gave me this output: \r\n\r\n[Document(page_content='name: Dark Mode\\nlastModified: 2023-06-19T07:26:34Z\\nthumbnailUrl: \\nversion: 3676773001\\nrole: owner\\neditorType: figma\\nlinkAccess: view\\nnodes: \\n10:138: \\ndocument: \\nid: 10:138\\nname: Slack Integration\\ntype: FRAME\\nscrollBehavior: SCROLLS\\nblendMode: PASS_THROUGH\\nchildren: \\nid: 10:139\\nname: div.sc-dwFxSa\\ntype: FRAME\\nscrollBehavior: SCROLLS\\nblendMode: PASS_THROUGH\\nchildren: \\nid: 10:140\\nname: Main\\ntype: FRAME\\nscrollBehavior: SCROLLS\\nblendMode: PASS_THROUGH\\nchildren: \\nid: 10:141\\nname: div.sc-iAVVkm\\ntype: FRAME\\nscrollBehavior: SCROLLS\\nblendMode: PASS_THROUGH\\nchildren: \\nid: 10:142\\nname: div.sc-bcXHqe\\ntype: FRAME\\nscrollBehavior: SCROLLS\\nblendMode: PASS_THROUGH', metadata={'source': ''}),\r\n\r\n Document(page_content='id: 10:178\\nname: Send project updates to a Slack channel\\ntype: TEXT\\nscrollBehavior: SCROLLS\\nblendMode: PASS_THROUGH\\nabsoluteBoundingBox: \\nx: -3084.0\\ny: 3199.0\\nwidth: 250.0\\nheight: 16.0\\n\\nabsoluteRenderBounds: \\nx: -3083.335205078125\\ny: 3202.1669921875\\nwidth: 247.89453125\\nheight: 12.4921875\\n\\nconstraints: \\nvertical: TOP\\nhorizontal: LEFT\\n\\nlayoutAlign: INHERIT\\nlayoutGrow: 0.0\\nfills: \\nblendMode: NORMAL\\ntype: SOLID\\ncolor: \\nr: 0.9960784316062927\\ng: 1.0\\nb: 0.9960784316062927\\na: 1.0\\n\\n\\nstrokes: \\nstrokeWeight: 1.0\\nstrokeAlign: OUTSIDE\\neffects: \\ncharacters: Send project updates to a Slack channel\\nstyle: \\nfontFamily: Inter\\nfontPostScriptName: None\\nfontWeight: 500\\ntextAutoResize: WIDTH_AND_HEIGHT\\nfontSize: 13.0\\ntextAlignHorizontal: LEFT\\ntextAlignVertical: CENTER\\nletterSpacing: 0.0\\nlineHeightPx: 15.732954025268555\\nlineHeightPercent: 100.0\\nlineHeightUnit: INTRINSIC_%\\n\\nlayoutVersion: 3\\ncharacterStyleOverrides: \\nstyleOverrideTable: \\n\\nlineTypes: NONE\\nlineIndentations: 0', metadata={'source': ''}),\r\n\r\n(2 more such nodes)\r\n\r\n\r\n### Expected behavior\r\n\r\nFor JSON, it should start from the innermost json, and then work the way backwards (especially for Figma) to enable LLM with more precise understanding of the structure and also get the output as desired. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6606/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6606/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6605",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6605/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6605/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6605/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6605",
        "id": 1770248491,
        "node_id": "PR_kwDOIPDwls5Tr8S5",
        "number": 6605,
        "title": "feat: add MultiStrategy output parser",
        "user": {
            "login": "blob42",
            "id": 210457,
            "node_id": "MDQ6VXNlcjIxMDQ1Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/210457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blob42",
            "html_url": "https://github.com/blob42",
            "followers_url": "https://api.github.com/users/blob42/followers",
            "following_url": "https://api.github.com/users/blob42/following{/other_user}",
            "gists_url": "https://api.github.com/users/blob42/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blob42/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blob42/subscriptions",
            "organizations_url": "https://api.github.com/users/blob42/orgs",
            "repos_url": "https://api.github.com/users/blob42/repos",
            "events_url": "https://api.github.com/users/blob42/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blob42/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-06-22T19:08:37Z",
        "updated_at": "2023-11-23T16:49:23Z",
        "closed_at": "2023-11-23T16:49:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6605",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6605",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6605.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6605.patch",
            "merged_at": null
        },
        "body": "**tldr**: fancy name for brute forcing multiple parsing functions before giving up with an exception.\r\n\r\n\r\n#### Description:\r\n\r\n- This PR introduces a new type of output parser interface and implementation that can try multiple strategies\r\n- A strategy is a tuple-like class of `(parser, predicate, name=None)` *see strategies.py*\r\n- Strategies are tried if predicate is True\r\n- Strategies are tried in order, allows for fallbacks\r\n- New strategies can be added to handle new output errors and coverd by unit tests.\r\n- Base interface allows existing parsers to implement it\r\n\r\n```python\r\n# strategies can be defined like this\r\n    parse_strategies = (\r\n        ParseStrategy(parse_raw_json, is_json),\r\n        ParseStrategy(code_block, lambda text: text.find('```') != -1), name=\"md_code_block\"),\r\n        ...,\r\n        ParseStrategy(fallback, lambda _:True)\r\n    )\r\n    \r\n    # then passed to the implementer:\r\n    my_parser = MyMultiParser(parse_strategies)\r\n```\r\n\r\nIn this first pass I implemented a ConvoOutputParser that implements multi strategy. I also implemented some example parsing strategies that can handle most exceptions on nested code blocks in json. *see the tests and test outputs*\r\n\r\n Looking for feedback if this is something worth pursuing and whether the code organization is right.\r\n\r\n\r\n\r\n @hwchase17, @dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6605/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6605/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6604",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6604/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6604/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6604/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6604",
        "id": 1770241538,
        "node_id": "PR_kwDOIPDwls5Tr6xf",
        "number": 6604,
        "title": "fix minor typo in vector_db_qa.mdx",
        "user": {
            "login": "chris-lovejoy",
            "id": 35599865,
            "node_id": "MDQ6VXNlcjM1NTk5ODY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/35599865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chris-lovejoy",
            "html_url": "https://github.com/chris-lovejoy",
            "followers_url": "https://api.github.com/users/chris-lovejoy/followers",
            "following_url": "https://api.github.com/users/chris-lovejoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/chris-lovejoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chris-lovejoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chris-lovejoy/subscriptions",
            "organizations_url": "https://api.github.com/users/chris-lovejoy/orgs",
            "repos_url": "https://api.github.com/users/chris-lovejoy/repos",
            "events_url": "https://api.github.com/users/chris-lovejoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chris-lovejoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-22T19:03:33Z",
        "updated_at": "2023-06-23T21:57:38Z",
        "closed_at": "2023-06-23T21:57:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6604",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6604",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6604.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6604.patch",
            "merged_at": "2023-06-23T21:57:37Z"
        },
        "body": "  - Description: minor typo fixed - doesn't instead of does. No other changes.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6604/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6604/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6603",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6603/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6603/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6603/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6603",
        "id": 1770174307,
        "node_id": "PR_kwDOIPDwls5TrsJM",
        "number": 6603,
        "title": "Just corrected a small inconsistency on a doc page",
        "user": {
            "login": "kambleakash0",
            "id": 11428589,
            "node_id": "MDQ6VXNlcjExNDI4NTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11428589?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kambleakash0",
            "html_url": "https://github.com/kambleakash0",
            "followers_url": "https://api.github.com/users/kambleakash0/followers",
            "following_url": "https://api.github.com/users/kambleakash0/following{/other_user}",
            "gists_url": "https://api.github.com/users/kambleakash0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kambleakash0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kambleakash0/subscriptions",
            "organizations_url": "https://api.github.com/users/kambleakash0/orgs",
            "repos_url": "https://api.github.com/users/kambleakash0/repos",
            "events_url": "https://api.github.com/users/kambleakash0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kambleakash0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-22T18:13:05Z",
        "updated_at": "2023-06-23T23:09:29Z",
        "closed_at": "2023-06-23T23:09:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6603",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6603",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6603.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6603.patch",
            "merged_at": "2023-06-23T23:09:29Z"
        },
        "body": "### Just corrected a small inconsistency on a doc page (not exactly a typo, per se)\r\n  - Description: There was inconsistency due to the use of single quotes at one place on the [Squential Chains](https://python.langchain.com/docs/modules/chains/foundational/sequential_chains) page of the docs, \r\n  - Issue: NA,\r\n  - Dependencies: NA,\r\n  - Tag maintainer: @dev2049,\r\n  - Twitter handle: kambleakash0\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6603/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6603/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6602",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6602/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6602/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6602/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6602",
        "id": 1770128237,
        "node_id": "PR_kwDOIPDwls5Trh_3",
        "number": 6602,
        "title": "Add an MlflowRetrieverEvaluator Chain",
        "user": {
            "login": "liangz1",
            "id": 7851093,
            "node_id": "MDQ6VXNlcjc4NTEwOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7851093?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liangz1",
            "html_url": "https://github.com/liangz1",
            "followers_url": "https://api.github.com/users/liangz1/followers",
            "following_url": "https://api.github.com/users/liangz1/following{/other_user}",
            "gists_url": "https://api.github.com/users/liangz1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liangz1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liangz1/subscriptions",
            "organizations_url": "https://api.github.com/users/liangz1/orgs",
            "repos_url": "https://api.github.com/users/liangz1/repos",
            "events_url": "https://api.github.com/users/liangz1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liangz1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-22T17:37:54Z",
        "updated_at": "2023-07-11T23:17:44Z",
        "closed_at": "2023-07-11T23:17:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6602",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6602",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6602.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6602.patch",
            "merged_at": null
        },
        "body": "Description:\r\nThis PR adds a new Chain called `MlflowRetrieverEvaluator`, which is a wrapper of a retriever object used in the `RetrievalQA` chain. The wrapper is used for logging the retriever part to MLflow, in order to evaluate the retrieval model separately.\r\n\r\nA bit more context about what the MlflowRetrieverEvaluator chain is supposed to be used for: When a user is developing a `RetrievalQA` chain, they may want to evaluate the retriever by itself, without sending the documents to an llm. Tools will be provided to help the evaluation in `mlflow.evaluate()`. In order to use the `mlflow.evaluate()`, the retriever needs to be logged as an mlflow langchain flavor model, which accepts a Chain. So we introduce the `MlflowRetrieverEvaluator` Chain, which is essentially a wrapper around the retriever object.\r\n\r\nSome notes:\r\n1. If a user doesn't want to evaluate the retriever by itself, their code would not be affected. (We are not proposing to force all the retrievers to be wrapped in this chain.)\r\n2. If a user want to evaluate the retriever by itself, they can leverage the new `MlflowRetrieverEvaluator` chain to do the evaluation. However, this doesn't change how their `RetrievalQA` chain works.\r\n\r\nSee https://github.com/mlflow/mlflow/pull/8808 for more context.\r\n\r\n@dev2049 @hwchase17 \r\n\r\nThis PR enables the following use case with MLflow:\r\n\r\n```python\r\n# I have a retrieval model: db\r\nembeddings = OpenAIEmbeddings()\r\ndb = FAISS.load_local(local_dir, embeddings)\r\n\r\n# I can log db using mlflow langchain flavor:\r\n# First, wrap the retriever in the MlflowRetrieverEvaluator Chain\r\n# Added to LangChain in this PR https://github.com/hwchase17/langchain/pull/6602\r\nfrom langchain.chains.retriever import MlflowRetrieverEvaluator\r\nretriever_evaluator = MlflowRetrieverEvaluator(retriever=db.as_retriever())\r\n\r\n# Second, define the loader_fn and persist_dir, as with RetrievalQA Chain\r\ndef load_retriever(persist_directory):\r\n    embeddings = OpenAIEmbeddings()\r\n    vectorstore = FAISS.load_local(persist_directory, embeddings)\r\n    return vectorstore.as_retriever()\r\nlocal_dir = '/Users/liang.zhang/faiss_index'\r\n\r\n# Third, log the model\r\nlogged_model = mlflow.langchain.log_model(retriever_evaluator, \"retriever_evaluator\", loader_fn=load_retriever, persist_dir=local_dir)\r\n\r\n# You can load the model in pyfunc flavor:\r\nloaded_model = mlflow.pyfunc.load_model(logged_model.model_uri)\r\n\r\n# You can retrieve the documents by running predict:\r\nloaded_model.predict([{\"query\": \"What did the president say about Ketanji Brown Jackson\"}])\r\n\r\n# The return value is the same as\r\n# db.as_retriever().get_relevant_documents(\"What did the president say about Ketanji Brown Jackson\")\r\n```\r\nThe return value of the last statement:\r\n\r\n```\r\n[[Document(lc_kwargs={'page_content': 'Tonight. I call on the Senate to: Pass the Freedom to Vote Act. Pass the John Lewis Voting Rights Act. And while you\u2019re at it, pass the Disclose Act so Americans can know who is funding our elections. \\n\\nTonight, I\u2019d like to honor someone who has dedicated his life to serve this country: Justice Stephen Breyer\u2014an Army veteran, Constitutional scholar, and retiring Justice of the United States Supreme Court. Justice Breyer, thank you for your service. \\n\\nOne of the most serious constitutional responsibilities a President has is nominating someone to serve on the United States Supreme Court. \\n\\nAnd I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation\u2019s top legal minds, who will continue Justice Breyer\u2019s legacy of excellence.', 'metadata': {'source': '/Users/liang.zhang/langchain/docs/modules/state_of_the_union.txt'}}, page_content='Tonight. I call on the Senate to: Pass the Freedom to Vote Act. Pass the John Lewis Voting Rights Act. And while you\u2019re at it, pass the Disclose Act so Americans can know who is funding our elections. \\n\\nTonight, I\u2019d like to honor someone who has dedicated his life to serve this country: Justice Stephen Breyer\u2014an Army veteran, Constitutional scholar, and retiring Justice of the United States Supreme Court. Justice Breyer, thank you for your service. \\n\\nOne of the most serious constitutional responsibilities a President has is nominating someone to serve on the United States Supreme Court. \\n\\nAnd I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation\u2019s top legal minds, who will continue Justice Breyer\u2019s legacy of excellence.', metadata={'source': '/Users/liang.zhang/langchain/docs/modules/state_of_the_union.txt'}),\r\n  Document(lc_kwargs={'page_content': 'A former top litigator in private practice. A former federal public defender. And from a family of public school educators and police officers. A consensus builder. Since she\u2019s been nominated, she\u2019s received a broad range of support\u2014from the Fraternal Order of Police to former judges appointed by Democrats and Republicans. \\n\\nAnd if we are to advance liberty and justice, we need to secure the Border and fix the immigration system. \\n\\nWe can do both. At our border, we\u2019ve installed new technology like cutting-edge scanners to better detect drug smuggling.  \\n\\nWe\u2019ve set up joint patrols with Mexico and Guatemala to catch more human traffickers.  \\n\\nWe\u2019re putting in place dedicated immigration judges so families fleeing persecution and violence can have their cases heard faster. \\n\\nWe\u2019re securing commitments and supporting partners in South and Central America to host more refugees and secure their own borders.', 'metadata': {'source': '/Users/liang.zhang/langchain/docs/modules/state_of_the_union.txt'}}, page_content='A former top litigator in private practice. A former federal public defender. And from a family of public school educators and police officers. A consensus builder. Since she\u2019s been nominated, she\u2019s received a broad range of support\u2014from the Fraternal Order of Police to former judges appointed by Democrats and Republicans. \\n\\nAnd if we are to advance liberty and justice, we need to secure the Border and fix the immigration system. \\n\\nWe can do both. At our border, we\u2019ve installed new technology like cutting-edge scanners to better detect drug smuggling.  \\n\\nWe\u2019ve set up joint patrols with Mexico and Guatemala to catch more human traffickers.  \\n\\nWe\u2019re putting in place dedicated immigration judges so families fleeing persecution and violence can have their cases heard faster. \\n\\nWe\u2019re securing commitments and supporting partners in South and Central America to host more refugees and secure their own borders.', metadata={'source': '/Users/liang.zhang/langchain/docs/modules/state_of_the_union.txt'}),\r\n  Document(lc_kwargs={'page_content': 'And for our LGBTQ+ Americans, let\u2019s finally get the bipartisan Equality Act to my desk. The onslaught of state laws targeting transgender Americans and their families is wrong. \\n\\nAs I said last year, especially to our younger transgender Americans, I will always have your back as your President, so you can be yourself and reach your God-given potential. \\n\\nWhile it often appears that we never agree, that isn\u2019t true. I signed 80 bipartisan bills into law last year. From preventing government shutdowns to protecting Asian-Americans from still-too-common hate crimes to reforming military justice. \\n\\nAnd soon, we\u2019ll strengthen the Violence Against Women Act that I first wrote three decades ago. It is important for us to show the nation that we can come together and do big things. \\n\\nSo tonight I\u2019m offering a Unity Agenda for the Nation. Four big things we can do together.  \\n\\nFirst, beat the opioid epidemic.', 'metadata': {'source': '/Users/liang.zhang/langchain/docs/modules/state_of_the_union.txt'}}, page_content='And for our LGBTQ+ Americans, let\u2019s finally get the bipartisan Equality Act to my desk. The onslaught of state laws targeting transgender Americans and their families is wrong. \\n\\nAs I said last year, especially to our younger transgender Americans, I will always have your back as your President, so you can be yourself and reach your God-given potential. \\n\\nWhile it often appears that we never agree, that isn\u2019t true. I signed 80 bipartisan bills into law last year. From preventing government shutdowns to protecting Asian-Americans from still-too-common hate crimes to reforming military justice. \\n\\nAnd soon, we\u2019ll strengthen the Violence Against Women Act that I first wrote three decades ago. It is important for us to show the nation that we can come together and do big things. \\n\\nSo tonight I\u2019m offering a Unity Agenda for the Nation. Four big things we can do together.  \\n\\nFirst, beat the opioid epidemic.', metadata={'source': '/Users/liang.zhang/langchain/docs/modules/state_of_the_union.txt'}),\r\n  Document(lc_kwargs={'page_content': 'Tonight, I\u2019m announcing a crackdown on these companies overcharging American businesses and consumers. \\n\\nAnd as Wall Street firms take over more nursing homes, quality in those homes has gone down and costs have gone up.  \\n\\nThat ends on my watch. \\n\\nMedicare is going to set higher standards for nursing homes and make sure your loved ones get the care they deserve and expect. \\n\\nWe\u2019ll also cut costs and keep the economy going strong by giving workers a fair shot, provide more training and apprenticeships, hire them based on their skills not degrees. \\n\\nLet\u2019s pass the Paycheck Fairness Act and paid leave.  \\n\\nRaise the minimum wage to $15 an hour and extend the Child Tax Credit, so no one has to raise a family in poverty. \\n\\nLet\u2019s increase Pell Grants and increase our historic support of HBCUs, and invest in what Jill\u2014our First Lady who teaches full-time\u2014calls America\u2019s best-kept secret: community colleges.', 'metadata': {'source': '/Users/liang.zhang/langchain/docs/modules/state_of_the_union.txt'}}, page_content='Tonight, I\u2019m announcing a crackdown on these companies overcharging American businesses and consumers. \\n\\nAnd as Wall Street firms take over more nursing homes, quality in those homes has gone down and costs have gone up.  \\n\\nThat ends on my watch. \\n\\nMedicare is going to set higher standards for nursing homes and make sure your loved ones get the care they deserve and expect. \\n\\nWe\u2019ll also cut costs and keep the economy going strong by giving workers a fair shot, provide more training and apprenticeships, hire them based on their skills not degrees. \\n\\nLet\u2019s pass the Paycheck Fairness Act and paid leave.  \\n\\nRaise the minimum wage to $15 an hour and extend the Child Tax Credit, so no one has to raise a family in poverty. \\n\\nLet\u2019s increase Pell Grants and increase our historic support of HBCUs, and invest in what Jill\u2014our First Lady who teaches full-time\u2014calls America\u2019s best-kept secret: community colleges.', metadata={'source': '/Users/liang.zhang/langchain/docs/modules/state_of_the_union.txt'})]]\r\n```\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6602/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6602/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6601",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6601/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6601/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6601/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6601",
        "id": 1770072830,
        "node_id": "PR_kwDOIPDwls5TrV8D",
        "number": 6601,
        "title": "Fix typo in myscale_self_query.ipynb",
        "user": {
            "login": "eltociear",
            "id": 22633385,
            "node_id": "MDQ6VXNlcjIyNjMzMzg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22633385?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eltociear",
            "html_url": "https://github.com/eltociear",
            "followers_url": "https://api.github.com/users/eltociear/followers",
            "following_url": "https://api.github.com/users/eltociear/following{/other_user}",
            "gists_url": "https://api.github.com/users/eltociear/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eltociear/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eltociear/subscriptions",
            "organizations_url": "https://api.github.com/users/eltociear/orgs",
            "repos_url": "https://api.github.com/users/eltociear/repos",
            "events_url": "https://api.github.com/users/eltociear/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eltociear/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-22T16:58:26Z",
        "updated_at": "2023-06-23T21:57:13Z",
        "closed_at": "2023-06-23T21:57:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6601",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6601",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6601.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6601.patch",
            "merged_at": "2023-06-23T21:57:13Z"
        },
        "body": "lenth -> length\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6601/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6601/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6600",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6600/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6600/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6600/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6600",
        "id": 1770046553,
        "node_id": "PR_kwDOIPDwls5TrQQ_",
        "number": 6600,
        "title": "feat: added tqdm progress bar to UnstructuredURLLoader",
        "user": {
            "login": "chip-davis",
            "id": 62909360,
            "node_id": "MDQ6VXNlcjYyOTA5MzYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/62909360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chip-davis",
            "html_url": "https://github.com/chip-davis",
            "followers_url": "https://api.github.com/users/chip-davis/followers",
            "following_url": "https://api.github.com/users/chip-davis/following{/other_user}",
            "gists_url": "https://api.github.com/users/chip-davis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chip-davis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chip-davis/subscriptions",
            "organizations_url": "https://api.github.com/users/chip-davis/orgs",
            "repos_url": "https://api.github.com/users/chip-davis/repos",
            "events_url": "https://api.github.com/users/chip-davis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chip-davis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-22T16:36:53Z",
        "updated_at": "2023-06-27T15:42:54Z",
        "closed_at": "2023-06-25T19:41:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6600",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6600",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6600.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6600.patch",
            "merged_at": "2023-06-25T19:41:25Z"
        },
        "body": "- Description: Adds a simple progress bar with tqdm when using UnstructuredURLLoader. Exposes new paramater `show_progress_bar`. Very simple PR. \r\n- Issue: N/A\r\n- Dependencies: N/A\r\n- Tag maintainer: @rlancemartin @eyurtsev \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6600/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6600/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6599",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6599/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6599/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6599/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6599",
        "id": 1769997382,
        "node_id": "I_kwDOIPDwls5pgARG",
        "number": 6599,
        "title": "response does not call the plugin",
        "user": {
            "login": "leonardotorresaltez",
            "id": 6289630,
            "node_id": "MDQ6VXNlcjYyODk2MzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6289630?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leonardotorresaltez",
            "html_url": "https://github.com/leonardotorresaltez",
            "followers_url": "https://api.github.com/users/leonardotorresaltez/followers",
            "following_url": "https://api.github.com/users/leonardotorresaltez/following{/other_user}",
            "gists_url": "https://api.github.com/users/leonardotorresaltez/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leonardotorresaltez/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leonardotorresaltez/subscriptions",
            "organizations_url": "https://api.github.com/users/leonardotorresaltez/orgs",
            "repos_url": "https://api.github.com/users/leonardotorresaltez/repos",
            "events_url": "https://api.github.com/users/leonardotorresaltez/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leonardotorresaltez/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-22T16:03:31Z",
        "updated_at": "2023-10-23T16:07:42Z",
        "closed_at": "2023-10-23T16:07:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHello, \r\n\r\nWhen using AIPluginTool with ChatOpenAI\r\n\r\nsometimes the chain call the plugin and sometimes the response is like \"the user can call the url ... to get the response\" . Why is it?\r\n\r\n\r\nMy code:\r\n\r\n\r\n\r\n\r\nimport os\r\n\r\nimport openai\r\nfrom dotenv import load_dotenv, find_dotenv\r\nfrom langchain.chat_models import ChatOpenAI\r\n\r\nfrom langchain.tools import AIPluginTool\r\nfrom langchain.agents import load_tools, ConversationalChatAgent, ZeroShotAgent\r\nfrom langchain.chains.conversation.memory import ConversationBufferWindowMemory\r\nfrom langchain.agents.agent import AgentExecutor\r\n\r\n\r\n\r\n\r\ntool = AIPluginTool.from_plugin_url(\"http://localhost:5003/.well-known/ai-plugin.json\")\r\ntools2 = load_tools([\"requests_get\"] )\r\n\r\ntools = [tool,tools2[0]]\r\n\r\n\r\n_ = load_dotenv(find_dotenv()) #read local .env file\r\nopenai.api_key = os.getenv('OPENAI_API_KEY')\r\n\r\nllm=ChatOpenAI(\r\n    openai_api_key=os.getenv('OPENAI_API_KEY'),\r\n    temperature=0,\r\n    model_name='gpt-3.5-turbo'\r\n)\r\n\r\n\r\nprefix = \"\"\"Have a conversation with a human, answering the following questions as best you can. You have access to the following tools:\"\"\"\r\n\r\n\r\nmemory = ConversationBufferWindowMemory(\r\n    memory_key=\"chat_history\",  \r\n    k=5,\r\n    return_messages=True\r\n)\r\n\r\n\r\ncustom_agent = ConversationalChatAgent.from_llm_and_tools(llm=llm, tools=tools, system_message=prefix)\r\n\r\n\r\nagent_executor = AgentExecutor.from_agent_and_tools(agent=custom_agent, tools=tools, memory=memory)\r\nagent_executor.verbose = True\r\n\r\n\r\nprint(\r\n    agent_executor.agent.llm_chain.prompt\r\n)\r\n\r\nresp = agent_executor.run(input=\"What are my store orders  for userId Leo ?\")\r\n\r\nprint(\r\n    resp\r\n)\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nexecute the code , two or three times. you will get a different response\n\n### Expected behavior\n\ncall the plugin and get the response from http://localhost:5003/order/Leo\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6599/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6599/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6597",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6597/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6597/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6597/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6597",
        "id": 1769970133,
        "node_id": "I_kwDOIPDwls5pf5nV",
        "number": 6597,
        "title": "Issue: why SQLAlchemy 2.0 is forced?",
        "user": {
            "login": "adamcohenhillel",
            "id": 633840,
            "node_id": "MDQ6VXNlcjYzMzg0MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/633840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adamcohenhillel",
            "html_url": "https://github.com/adamcohenhillel",
            "followers_url": "https://api.github.com/users/adamcohenhillel/followers",
            "following_url": "https://api.github.com/users/adamcohenhillel/following{/other_user}",
            "gists_url": "https://api.github.com/users/adamcohenhillel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adamcohenhillel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adamcohenhillel/subscriptions",
            "organizations_url": "https://api.github.com/users/adamcohenhillel/orgs",
            "repos_url": "https://api.github.com/users/adamcohenhillel/repos",
            "events_url": "https://api.github.com/users/adamcohenhillel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adamcohenhillel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-22T15:48:15Z",
        "updated_at": "2023-09-28T16:05:39Z",
        "closed_at": "2023-09-28T16:05:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nI need to upgrade our Langchain version due to a security issue flagged in version 0.0.27 (see https://security.snyk.io/vuln/SNYK-PYTHON-LANGCHAIN-5411357).\r\n\r\nHowever, I can't do this because Langchain depends on SQLAlchemy 2.0, while we use 1.4.\r\n\r\n1. Why is SQLALchemy 2.0 needed? It might be useful for a tiny feature out of all the Langchain functionality...\r\n2. SQLAlchemy 1.4 is still more widely used than 2.0\r\n\r\n### Suggestion:\r\n\r\nNot forcing 2.0, but >1.4 - should support the same syntax -> https://docs.sqlalchemy.org/en/14/",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6597/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6597/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6596",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6596/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6596/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6596/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6596",
        "id": 1769968762,
        "node_id": "I_kwDOIPDwls5pf5R6",
        "number": 6596,
        "title": "ImportError: cannot import name 'RetrievalQAWithSourcesChain' from 'langchain.chains'",
        "user": {
            "login": "tomatefarcie123",
            "id": 132527413,
            "node_id": "U_kgDOB-Y1NQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/132527413?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomatefarcie123",
            "html_url": "https://github.com/tomatefarcie123",
            "followers_url": "https://api.github.com/users/tomatefarcie123/followers",
            "following_url": "https://api.github.com/users/tomatefarcie123/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomatefarcie123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomatefarcie123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomatefarcie123/subscriptions",
            "organizations_url": "https://api.github.com/users/tomatefarcie123/orgs",
            "repos_url": "https://api.github.com/users/tomatefarcie123/repos",
            "events_url": "https://api.github.com/users/tomatefarcie123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomatefarcie123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-22T15:47:32Z",
        "updated_at": "2023-06-28T16:18:28Z",
        "closed_at": "2023-06-28T16:18:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain 0.27\r\nPython 3.7\r\nAmazon Linux\n\n### Who can help?\n\n@ag\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nAt launch, after recreating python venv and reinstalling latest version of langchain the error message is:\r\nImportError: cannot import name 'RetrievalQAWithSourcesChain' from 'langchain.chains'\n\n### Expected behavior\n\nThis import should not cause an error.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6596/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6596/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6595",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6595/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6595/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6595/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6595",
        "id": 1769955648,
        "node_id": "PR_kwDOIPDwls5Tq8Ty",
        "number": 6595,
        "title": "Fix Typo",
        "user": {
            "login": "SaarthakMaini",
            "id": 94912101,
            "node_id": "U_kgDOBag-ZQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/94912101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SaarthakMaini",
            "html_url": "https://github.com/SaarthakMaini",
            "followers_url": "https://api.github.com/users/SaarthakMaini/followers",
            "following_url": "https://api.github.com/users/SaarthakMaini/following{/other_user}",
            "gists_url": "https://api.github.com/users/SaarthakMaini/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SaarthakMaini/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SaarthakMaini/subscriptions",
            "organizations_url": "https://api.github.com/users/SaarthakMaini/orgs",
            "repos_url": "https://api.github.com/users/SaarthakMaini/repos",
            "events_url": "https://api.github.com/users/SaarthakMaini/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SaarthakMaini/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-22T15:40:50Z",
        "updated_at": "2023-06-23T21:56:55Z",
        "closed_at": "2023-06-23T21:56:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6595",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6595",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6595.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6595.patch",
            "merged_at": "2023-06-23T21:56:54Z"
        },
        "body": "Resolves #6582 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6595/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6595/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]