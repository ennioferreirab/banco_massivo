[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5294",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5294/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5294/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5294/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5294",
        "id": 1727460382,
        "node_id": "I_kwDOIPDwls5m9vQe",
        "number": 5294,
        "title": "Issue: security concerns with `exec()` via multiple agents and Shell tool",
        "user": {
            "login": "juppytt",
            "id": 46583939,
            "node_id": "MDQ6VXNlcjQ2NTgzOTM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/46583939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juppytt",
            "html_url": "https://github.com/juppytt",
            "followers_url": "https://api.github.com/users/juppytt/followers",
            "following_url": "https://api.github.com/users/juppytt/following{/other_user}",
            "gists_url": "https://api.github.com/users/juppytt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juppytt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juppytt/subscriptions",
            "organizations_url": "https://api.github.com/users/juppytt/orgs",
            "repos_url": "https://api.github.com/users/juppytt/repos",
            "events_url": "https://api.github.com/users/juppytt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juppytt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-26T11:38:23Z",
        "updated_at": "2023-09-26T16:06:39Z",
        "closed_at": "2023-09-26T16:06:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\n\r\nTL;DR: The use of exec() in agents can lead to remote code execution vulnerabilities. Some Huggingface projects use such agents, despite the potential harm of LLM-generated Python code.\r\n\r\n\r\n#1026 and #814 discuss the security concerns regarding the use of `exec()` in llm_math chain.  The comments in #1026 proposed methods to sandbox the code execution, but due to environmental issues, the code was patched to replace `exec()` with `numexpr.evaluate()` (#2943). This restricted the execution capabilities to mathematical functionalities only. This bug was assigned the CVE number CVE-2023-29374. \r\n\r\nAs shown in the above issues, the usage of `exec()` in a chain can pose a significant security risk, especially when the chain is running on a remote machine. This seems common scenario for projects in Huggingface. \r\n\r\nHowever, in the latest langchain, `exec()` is still used in `PythonReplTool` and `PythonAstReplTool`. \r\nhttps://github.com/hwchase17/langchain/blob/aec642febb3daa7dbb6a19996aac2efa92bbf1bd/langchain/tools/python/tool.py#L55\r\n\r\nhttps://github.com/hwchase17/langchain/blob/aec642febb3daa7dbb6a19996aac2efa92bbf1bd/langchain/tools/python/tool.py#L102\r\n\r\nThese functions are called by Pandas Dataframe Agent, Spark Dataframe Agent, CSV Agent. It seems they are intentionally designed to pass the LLM output to `PythonAstTool` or `PythonAstReplTool` to execute the LLM-generated code in the machine.\r\n\r\nThe documentation for these agents explicitly states that they should be used with caution since LLM-generated Python code can be potentially harmful. For instance:\r\nhttps://github.com/hwchase17/langchain/blob/aec642febb3daa7dbb6a19996aac2efa92bbf1bd/docs/modules/agents/toolkits/examples/pandas.ipynb#L12\r\n\r\nDespite this, I have observed several projects in Huggingface using `create_pandas_dataframe_agent` and `create_csv_agent`.\r\n\r\n\r\n\r\n\r\n\r\n### Suggestion:\r\n\r\n\r\nFixing this issue as done in llm_math chain seems challenging.\r\nSimply restricting the LLM-generated code to Pandas and Spark execution might not be sufficient because there are still numerous malicious tasks that can be performed using those APIs. For instance, Pandas can read and write files.\r\n\r\nMeanwhile, it seems crucial to emphasize the security concerns related to LLM-generated code for the overall security of LLM apps. Merely limiting execution to specific frameworks or APIs may not fully address the underlying security risks. \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5294/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5294/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5293",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5293/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5293/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5293/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5293",
        "id": 1727452361,
        "node_id": "PR_kwDOIPDwls5Rbnz_",
        "number": 5293,
        "title": "Implemented appending arbitrary messages",
        "user": {
            "login": "eavanvalkenburg",
            "id": 13749212,
            "node_id": "MDQ6VXNlcjEzNzQ5MjEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13749212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eavanvalkenburg",
            "html_url": "https://github.com/eavanvalkenburg",
            "followers_url": "https://api.github.com/users/eavanvalkenburg/followers",
            "following_url": "https://api.github.com/users/eavanvalkenburg/following{/other_user}",
            "gists_url": "https://api.github.com/users/eavanvalkenburg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eavanvalkenburg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eavanvalkenburg/subscriptions",
            "organizations_url": "https://api.github.com/users/eavanvalkenburg/orgs",
            "repos_url": "https://api.github.com/users/eavanvalkenburg/repos",
            "events_url": "https://api.github.com/users/eavanvalkenburg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eavanvalkenburg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-26T11:33:01Z",
        "updated_at": "2023-05-29T17:37:37Z",
        "closed_at": "2023-05-29T14:19:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5293",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5293",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5293.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5293.patch",
            "merged_at": "2023-05-29T14:19:00Z"
        },
        "body": "# Implemented appending arbitrary messages to the base chat message history, the in-memory and cosmos ones.\n\n<!--\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\n\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\n\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\n-->\n\nAs discussed this is the alternative way instead of #4480, with a add_message method added that takes a BaseMessage as input, so that the user can control what is in the base message like kwargs.\n\n<!-- Remove if not applicable -->\n\nFixes # (issue)\n\n## Before submitting\n\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\n\n## Who can review?\n\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\n\n@hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5293/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5293/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5292",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5292/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5292/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5292/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5292",
        "id": 1727439533,
        "node_id": "PR_kwDOIPDwls5Rbk6A",
        "number": 5292,
        "title": "added cosmos kwargs option",
        "user": {
            "login": "eavanvalkenburg",
            "id": 13749212,
            "node_id": "MDQ6VXNlcjEzNzQ5MjEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13749212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eavanvalkenburg",
            "html_url": "https://github.com/eavanvalkenburg",
            "followers_url": "https://api.github.com/users/eavanvalkenburg/followers",
            "following_url": "https://api.github.com/users/eavanvalkenburg/following{/other_user}",
            "gists_url": "https://api.github.com/users/eavanvalkenburg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eavanvalkenburg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eavanvalkenburg/subscriptions",
            "organizations_url": "https://api.github.com/users/eavanvalkenburg/orgs",
            "repos_url": "https://api.github.com/users/eavanvalkenburg/repos",
            "events_url": "https://api.github.com/users/eavanvalkenburg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eavanvalkenburg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-26T11:25:55Z",
        "updated_at": "2023-06-30T06:38:35Z",
        "closed_at": "2023-05-28T04:19:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5292",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5292",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5292.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5292.patch",
            "merged_at": "2023-05-28T04:19:41Z"
        },
        "body": "# Added the ability to pass kwargs to cosmos client constructor\n\nThe cosmos client has a ton of options that can be set, so allowing those to be passed to the constructor from the chat memory constructor with this PR.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5292/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5292/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5291",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5291/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5291/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5291/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5291",
        "id": 1727389177,
        "node_id": "PR_kwDOIPDwls5RbZsY",
        "number": 5291,
        "title": "Add an example to make the prompt more robust",
        "user": {
            "login": "pengqu123",
            "id": 82029664,
            "node_id": "MDQ6VXNlcjgyMDI5NjY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/82029664?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pengqu123",
            "html_url": "https://github.com/pengqu123",
            "followers_url": "https://api.github.com/users/pengqu123/followers",
            "following_url": "https://api.github.com/users/pengqu123/following{/other_user}",
            "gists_url": "https://api.github.com/users/pengqu123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pengqu123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pengqu123/subscriptions",
            "organizations_url": "https://api.github.com/users/pengqu123/orgs",
            "repos_url": "https://api.github.com/users/pengqu123/repos",
            "events_url": "https://api.github.com/users/pengqu123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pengqu123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-26T10:56:39Z",
        "updated_at": "2023-05-26T13:32:36Z",
        "closed_at": "2023-05-26T13:32:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5291",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5291",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5291.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5291.patch",
            "merged_at": "2023-05-26T13:32:36Z"
        },
        "body": "I am trying the opensource model for llm_math.  and I possibly found a typical problem.  chatgpt knows ** and always change a^b into  a**b(chatgpt doesn't think ^ is xor),  and opensource model prefer a^b.  so if my quesion is   29^(1/5) or the fifth root of 29,  I will get the error \"_TypeError: unsupported operand type(s) for ^: 'int' and 'float'_'\" from _\"numexpr.evaluate(\"29^(1/5)\")\"_.  Then  I add this example, the model is able to solve questions like \"a^b\", \"the square of a\", \"the fifth root of a\" by using **",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5291/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5291/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5290",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5290/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5290/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5290/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5290",
        "id": 1727277259,
        "node_id": "PR_kwDOIPDwls5RbBCJ",
        "number": 5290,
        "title": "Better docs for weaviate hybrid search",
        "user": {
            "login": "hsm207",
            "id": 2398765,
            "node_id": "MDQ6VXNlcjIzOTg3NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2398765?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hsm207",
            "html_url": "https://github.com/hsm207",
            "followers_url": "https://api.github.com/users/hsm207/followers",
            "following_url": "https://api.github.com/users/hsm207/following{/other_user}",
            "gists_url": "https://api.github.com/users/hsm207/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hsm207/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hsm207/subscriptions",
            "organizations_url": "https://api.github.com/users/hsm207/orgs",
            "repos_url": "https://api.github.com/users/hsm207/repos",
            "events_url": "https://api.github.com/users/hsm207/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hsm207/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-26T09:44:43Z",
        "updated_at": "2023-05-26T16:52:25Z",
        "closed_at": "2023-05-26T16:30:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5290",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5290",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5290.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5290.patch",
            "merged_at": "2023-05-26T16:30:42Z"
        },
        "body": "# Better docs for weaviate hybrid search\n\n<!--\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\n\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\n\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\n-->\n\n<!-- Remove if not applicable -->\n\nFixes: NA\n\n## Before submitting\n\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\n\n## Who can review?\n\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\n\n<!-- For a quicker response, figure out the right person to tag with @\n\n        @hwchase17 - project lead\n\n        Tracing / Callbacks\n        - @agola11\n\n        Async\n        - @agola11\n\n        DataLoaders\n        - @eyurtsev\n\n        Models\n        - @hwchase17\n        - @agola11\n\n        Agents / Tools / Toolkits\n        - @vowelparrot\n        \n        VectorStores / Retrievers / Memory\n        - @dev2049\n        \n -->\n@dev2049",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5290/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5290/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5289",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5289/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5289/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5289/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5289",
        "id": 1727217498,
        "node_id": "I_kwDOIPDwls5m8z9a",
        "number": 5289,
        "title": "support history in LLMChain and LLM",
        "user": {
            "login": "xiaoyaolangzhi",
            "id": 15037766,
            "node_id": "MDQ6VXNlcjE1MDM3NzY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/15037766?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xiaoyaolangzhi",
            "html_url": "https://github.com/xiaoyaolangzhi",
            "followers_url": "https://api.github.com/users/xiaoyaolangzhi/followers",
            "following_url": "https://api.github.com/users/xiaoyaolangzhi/following{/other_user}",
            "gists_url": "https://api.github.com/users/xiaoyaolangzhi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xiaoyaolangzhi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xiaoyaolangzhi/subscriptions",
            "organizations_url": "https://api.github.com/users/xiaoyaolangzhi/orgs",
            "repos_url": "https://api.github.com/users/xiaoyaolangzhi/repos",
            "events_url": "https://api.github.com/users/xiaoyaolangzhi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xiaoyaolangzhi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-26T09:11:16Z",
        "updated_at": "2023-09-10T16:11:37Z",
        "closed_at": "2023-09-10T16:11:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nIt's very userful when use the history paremeter.\r\n\r\n```\r\nhistory = [(\"who are you\", \" i'm a ai\")]\r\n\r\nllm = OpenAI()\r\nllm(\"hello\", history)\r\n\r\nllm = LLMChain({ llm, prompt })\r\nllm({\"query\": \"hello\", \"history\": history})\r\n```\r\n\r\n### Motivation\r\n\r\n*\r\n\r\n### Your contribution\r\n\r\n*",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5289/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5289/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5286",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5286/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5286/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5286/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5286",
        "id": 1727005383,
        "node_id": "I_kwDOIPDwls5m8ALH",
        "number": 5286,
        "title": "SQL chain generates extra add on question if I use ChatOpenAI inplace of OpenAI",
        "user": {
            "login": "charanhu",
            "id": 52596822,
            "node_id": "MDQ6VXNlcjUyNTk2ODIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/52596822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charanhu",
            "html_url": "https://github.com/charanhu",
            "followers_url": "https://api.github.com/users/charanhu/followers",
            "following_url": "https://api.github.com/users/charanhu/following{/other_user}",
            "gists_url": "https://api.github.com/users/charanhu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charanhu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charanhu/subscriptions",
            "organizations_url": "https://api.github.com/users/charanhu/orgs",
            "repos_url": "https://api.github.com/users/charanhu/repos",
            "events_url": "https://api.github.com/users/charanhu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charanhu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-05-26T06:48:08Z",
        "updated_at": "2023-10-16T22:55:29Z",
        "closed_at": "2023-09-26T16:06:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n`import os\r\nfrom langchain import OpenAI, SQLDatabase, SQLDatabaseChain\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom dotenv import load_dotenv\r\nload_dotenv()\r\nos.environ[\"OPENAI_API_KEY\"] = os.getenv(\"OPENAI_API_KEY\")\r\ndb = SQLDatabase.from_uri(\"sqlite:///data/data.db\")\r\nllm = ChatOpenAI(temperature=0, verbose=True)\r\ndb_chain = SQLDatabaseChain.from_llm(llm, db, verbose=True)\r\nres = db_chain.run(\"total sales by each region?\")\r\nprint(res)`\r\n\r\n![image](https://github.com/hwchase17/langchain/assets/52596822/fbfa65bc-398b-43f1-a506-0e7a5cd57221)\r\n\r\n\r\n\r\nBut If I use text-davinici, It generates single result.\r\n\r\n`import os\r\nfrom langchain import OpenAI, SQLDatabase, SQLDatabaseChain\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom dotenv import load_dotenv\r\nload_dotenv()\r\nos.environ[\"OPENAI_API_KEY\"] = os.getenv(\"OPENAI_API_KEY\")\r\ndb = SQLDatabase.from_uri(\"sqlite:///data/data.db\")\r\nllm = OpenAI(temperature=0, verbose=True)\r\ndb_chain = SQLDatabaseChain.from_llm(llm, db, verbose=True)\r\nres = db_chain.run(\"total sales by each region?\")\r\nprint(res)`\r\n\r\n![text-davinici](https://github.com/hwchase17/langchain/assets/52596822/1ccd746c-5951-42c1-85f6-1530827c1029)\r\n\r\n\r\n\r\nhow to overcome this issue in **\"ChatOpenAI\"**?\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nimport os\r\nfrom langchain import OpenAI, SQLDatabase, SQLDatabaseChain\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom dotenv import load_dotenv\r\nload_dotenv()\r\nos.environ[\"OPENAI_API_KEY\"] = os.getenv(\"OPENAI_API_KEY\")\r\ndb = SQLDatabase.from_uri(\"sqlite:///data/data.db\")\r\nllm = ChatOpenAI(temperature=0, verbose=True)\r\ndb_chain = SQLDatabaseChain.from_llm(llm, db, verbose=True)\r\nres = db_chain.run(\"total sales by each region?\")\r\nprint(res)\n\n### Expected behavior\n\nI need one answer that is for user input query only. But after the answer It again adding a question by itself. Extra add on question and query not needed in **ChatOpenAI**",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5286/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5286/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5284",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5284/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5284/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5284/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5284",
        "id": 1726931734,
        "node_id": "I_kwDOIPDwls5m7uMW",
        "number": 5284,
        "title": "change tuple sql result to dict sql result",
        "user": {
            "login": "BriskyGates",
            "id": 34669414,
            "node_id": "MDQ6VXNlcjM0NjY5NDE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/34669414?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BriskyGates",
            "html_url": "https://github.com/BriskyGates",
            "followers_url": "https://api.github.com/users/BriskyGates/followers",
            "following_url": "https://api.github.com/users/BriskyGates/following{/other_user}",
            "gists_url": "https://api.github.com/users/BriskyGates/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BriskyGates/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BriskyGates/subscriptions",
            "organizations_url": "https://api.github.com/users/BriskyGates/orgs",
            "repos_url": "https://api.github.com/users/BriskyGates/repos",
            "events_url": "https://api.github.com/users/BriskyGates/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BriskyGates/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-26T05:27:36Z",
        "updated_at": "2023-09-18T16:10:51Z",
        "closed_at": "2023-09-18T16:10:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nHey guys,thanks for your amazing work, if I want to get a dictionary SQL result instead of the default tuple in SQLDatabaseChain, what settings do I need to change?\r\n\n\n### Motivation\n\nWithout database table header fields, the articles generated by LLM may contain errors.\n\n### Your contribution\n\nI am currently diving into the codes and see how to deal with it",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5284/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5284/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5283",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5283/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5283/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5283/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5283",
        "id": 1726925790,
        "node_id": "I_kwDOIPDwls5m7sve",
        "number": 5283,
        "title": "Stop logic should be optimezed to be compatible with \"Conversation 1:\"",
        "user": {
            "login": "xulicong",
            "id": 9657266,
            "node_id": "MDQ6VXNlcjk2NTcyNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9657266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xulicong",
            "html_url": "https://github.com/xulicong",
            "followers_url": "https://api.github.com/users/xulicong/followers",
            "following_url": "https://api.github.com/users/xulicong/following{/other_user}",
            "gists_url": "https://api.github.com/users/xulicong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xulicong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xulicong/subscriptions",
            "organizations_url": "https://api.github.com/users/xulicong/orgs",
            "repos_url": "https://api.github.com/users/xulicong/repos",
            "events_url": "https://api.github.com/users/xulicong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xulicong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-26T05:21:00Z",
        "updated_at": "2023-09-10T16:11:42Z",
        "closed_at": "2023-09-10T16:11:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nwindows\n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThe llm will generate the content below in some cases:\r\nAction 1: xxx\r\nAction Input 1: xxx\r\nObservation 1: xxx\r\n\r\nregex = (\r\n            r\"Action\\s*\\d*\\s*:[\\s]*(.*?)[\\s]*Action\\s*\\d*\\s*Input\\s*\\d*\\s*:[\\s]*(.*)\"\r\n        )\r\nThe regex above in langchian.mrkl.output_parser can match the Action and Action Input in the following scenario:\r\nAction 1: xxx\r\nAction Input 1: xxx\r\nbut the stop list is still be ['\\nObservation:', '\\n\\tObservation:'] which can not stop the generation by llm, because the llm will generate the 'Observation 1: ... '.\n\n### Expected behavior\n\nOptimize stop logic to solve this problem",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5283/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5283/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5282",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5282/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5282/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5282/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5282",
        "id": 1726921671,
        "node_id": "PR_kwDOIPDwls5RZ0zg",
        "number": 5282,
        "title": "docs: `ecosystem/integrations` update 2",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-26T05:16:23Z",
        "updated_at": "2023-05-29T15:24:39Z",
        "closed_at": "2023-05-29T14:19:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5282",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5282",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5282.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5282.patch",
            "merged_at": "2023-05-29T14:19:44Z"
        },
        "body": "# docs: ecosystem/integrations update 2\r\n\r\n#5219 - part 1 \r\nThe second part of this update (parts are independent of each other! no overlap):\r\n\r\n- added diffbot.md\r\n- updated confluence.ipynb; added confluence.md\r\n- updated college_confidential.md\r\n- updated openai.md\r\n- added blackboard.md\r\n- added bilibili.md\r\n- added azure_blob_storage.md\r\n- added azlyrics.md\r\n- added aws_s3.md\r\n\r\n## Who can review?\r\n\r\n@hwchase17@agola11\r\n@agola11\r\n @vowelparrot\r\n @dev2049\r\n \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5282/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5282/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5281",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5281/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5281/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5281/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5281",
        "id": 1726905598,
        "node_id": "PR_kwDOIPDwls5RZxT1",
        "number": 5281,
        "title": "Docs: Concise intro",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528810,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-26T04:55:31Z",
        "updated_at": "2023-06-22T08:20:05Z",
        "closed_at": "2023-06-22T08:20:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5281",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5281",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5281.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5281.patch",
            "merged_at": null
        },
        "body": "Make doc intro concise\r\n\r\nhttps://python.langchain.com/en/dev2049-concise_get_started/",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5281/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5281/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5280",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5280/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5280/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5280/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5280",
        "id": 1726903889,
        "node_id": "I_kwDOIPDwls5m7nZR",
        "number": 5280,
        "title": "Sitemap - add filtering by modified date",
        "user": {
            "login": "rhabal",
            "id": 1269282,
            "node_id": "MDQ6VXNlcjEyNjkyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1269282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rhabal",
            "html_url": "https://github.com/rhabal",
            "followers_url": "https://api.github.com/users/rhabal/followers",
            "following_url": "https://api.github.com/users/rhabal/following{/other_user}",
            "gists_url": "https://api.github.com/users/rhabal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rhabal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rhabal/subscriptions",
            "organizations_url": "https://api.github.com/users/rhabal/orgs",
            "repos_url": "https://api.github.com/users/rhabal/repos",
            "events_url": "https://api.github.com/users/rhabal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rhabal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-26T04:52:49Z",
        "updated_at": "2023-09-10T16:11:47Z",
        "closed_at": "2023-09-10T16:11:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\n\r\n\r\nloader = SitemapLoader(\r\n    \"https://langchain.readthedocs.io/sitemap.xml\",\r\n    filter_modified_dates=[\"2023-\", \"2022-12-\"]\r\n)\r\ndocuments = loader.load()\n\n### Motivation\n\n Provide enhanced filtering on larger sites\n\n### Your contribution\n\nProvide enhanced filtering on larger sites",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5280/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5280/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5279",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5279/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5279/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5279/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5279",
        "id": 1726889243,
        "node_id": "I_kwDOIPDwls5m7j0b",
        "number": 5279,
        "title": "Issue Passing in Credential to VertexAI model",
        "user": {
            "login": "jmho",
            "id": 59701887,
            "node_id": "MDQ6VXNlcjU5NzAxODg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/59701887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jmho",
            "html_url": "https://github.com/jmho",
            "followers_url": "https://api.github.com/users/jmho/followers",
            "following_url": "https://api.github.com/users/jmho/following{/other_user}",
            "gists_url": "https://api.github.com/users/jmho/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jmho/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jmho/subscriptions",
            "organizations_url": "https://api.github.com/users/jmho/orgs",
            "repos_url": "https://api.github.com/users/jmho/repos",
            "events_url": "https://api.github.com/users/jmho/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jmho/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-26T04:34:54Z",
        "updated_at": "2023-05-26T15:31:04Z",
        "closed_at": "2023-05-26T15:31:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain==0.0.180\r\ngoogle-cloud-aiplatform==1.25.0\r\n\r\nHave Google Cloud CLI and ran and logged in using `gcloud auth login`\r\n\r\nRunning locally and online in Google Colab\r\n\r\n### Who can help?\r\n\r\n@hwchase17 @hwchase17 @agola11\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nhttps://colab.research.google.com/drive/19QGMptiCn49fu4i5ZQ0ygfR74ktQFQlb?usp=sharing\r\n\r\nUnexpected behavior`field \"credentials\" not yet prepared so type is still a ForwardRef, you might need to call VertexAI.update_forward_refs().` seems to only appear if you pass in any credenitial valid or invalid to the vertexai wrapper from langchain.\r\n\r\n### The error \r\n\r\nThis code should not throw `field \"credentials\" not yet prepared so type is still a ForwardRef, you might need to call VertexAI.update_forward_refs().`. It should either not throw any errors, if the credentials, project_Id, and location are correct. Or, if there is an issue with one of params, it should throw a specific error from the `vertexai.init` call below but it doesn't seem to be reaching it if a credential is passed in.\r\n\r\n```\r\nvertexai.init(project=project_id,location=location,credentials=credentials,)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5279/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5279/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5278",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5278/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5278/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5278/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5278",
        "id": 1726867648,
        "node_id": "I_kwDOIPDwls5m7ejA",
        "number": 5278,
        "title": "VertexAI ChatModel implementation misses few-shot \"examples\"",
        "user": {
            "login": "bent-verbiage",
            "id": 941131,
            "node_id": "MDQ6VXNlcjk0MTEzMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/941131?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bent-verbiage",
            "html_url": "https://github.com/bent-verbiage",
            "followers_url": "https://api.github.com/users/bent-verbiage/followers",
            "following_url": "https://api.github.com/users/bent-verbiage/following{/other_user}",
            "gists_url": "https://api.github.com/users/bent-verbiage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bent-verbiage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bent-verbiage/subscriptions",
            "organizations_url": "https://api.github.com/users/bent-verbiage/orgs",
            "repos_url": "https://api.github.com/users/bent-verbiage/repos",
            "events_url": "https://api.github.com/users/bent-verbiage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bent-verbiage/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-26T04:02:46Z",
        "updated_at": "2023-09-15T22:13:02Z",
        "closed_at": "2023-08-31T17:11:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain==0.0.180\r\npython==3.10\r\ngoogle-cloud-aiplatform==1.25.0\r\n\r\n\r\n### Who can help?\r\n\r\n@hwc\r\n\r\n### Information\r\n\r\n- [] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nDebatable if this is a bug or a missing feature, but I'd argue that the Vertex implementation is missing an important element -> Even though I'm excited to have the support now.\r\n\r\nUsing the [VertexAI documentation for chat](https://cloud.google.com/vertex-ai/docs/generative-ai/chat/test-chat-prompts), you can initialise the chat model like the below (emphasis mine). \r\nThe list of \"examples\" functions as a separate instruction (few-shot), not as part of the chat history. This is different from how OpenAI does it.\r\n\r\nThe current langchain implementation doesn't seem to have an option to submit examples, instead it combining all messages in the chat-history. That would lead to unexpected results if you used if for your examples.\r\n\r\n```\r\ndef chat_question(context=None, examples=[], chat_instruction=None):\r\n\r\n    chat_model = ChatModel.from_pretrained(\"chat-bison@001\")\r\n    parameters = {\r\n    \"temperature\": .0,\r\n    \"max_output_tokens\": 300,\r\n    \"top_p\": 0.3,\r\n    \"top_k\": 3,\r\n    }\r\n\r\n    chat = chat_model.start_chat(\r\n        context=context,\r\n        **examples=examples**\r\n    )\r\n\r\n    response = chat.send_message(chat_instruction, **parameters)\r\n    return response\r\n```\r\n\r\n### Expected behavior\r\n\r\nAllow for a set of examples to be passed in when setting up the ChatVertexAI or when using the chat() function. \r\n\r\nApologies if I've missed a way to do this.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5278/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5278/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5277",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5277/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5277/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5277/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5277",
        "id": 1726855450,
        "node_id": "I_kwDOIPDwls5m7bka",
        "number": 5277,
        "title": "when i create ClientChatOpenAI error",
        "user": {
            "login": "LayneHu",
            "id": 17290086,
            "node_id": "MDQ6VXNlcjE3MjkwMDg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/17290086?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LayneHu",
            "html_url": "https://github.com/LayneHu",
            "followers_url": "https://api.github.com/users/LayneHu/followers",
            "following_url": "https://api.github.com/users/LayneHu/following{/other_user}",
            "gists_url": "https://api.github.com/users/LayneHu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LayneHu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LayneHu/subscriptions",
            "organizations_url": "https://api.github.com/users/LayneHu/orgs",
            "repos_url": "https://api.github.com/users/LayneHu/repos",
            "events_url": "https://api.github.com/users/LayneHu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LayneHu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-26T03:42:55Z",
        "updated_at": "2023-09-10T16:11:53Z",
        "closed_at": "2023-09-10T16:11:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nCannot specify both model and engine\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1\u3001i create ClientChatOpenAI the code like this:\r\n```python\r\n\"\"\"Azure OpenAI chat wrapper.\"\"\"\r\nfrom __future__ import annotations\r\n\r\nimport logging\r\nfrom typing import Any, Dict\r\n\r\nfrom pydantic import root_validator\r\n\r\nfrom langchain.chat_models.openai import ChatOpenAI\r\nfrom langchain.utils import get_from_dict_or_env\r\n\r\nlogger = logging.getLogger(__name__)\r\n\r\n\r\nclass ClientChatOpenAI(ChatOpenAI):\r\n    deployment_name: str = \"\"\r\n    openai_api_base: str = \"\"\r\n    openai_api_key: str = \"\"\r\n    openai_organization: str = \"\"\r\n\r\n    @root_validator()\r\n    def validate_environment(cls, values: Dict) -> Dict:\r\n        \"\"\"Validate that api key and python package exists in environment.\"\"\"\r\n        openai_api_key = get_from_dict_or_env(\r\n            values,\r\n            \"openai_api_key\",\r\n            \"OPENAI_API_KEY\",\r\n        )\r\n        openai_api_base = get_from_dict_or_env(\r\n            values,\r\n            \"openai_api_base\",\r\n            \"OPENAI_API_BASE\",\r\n        )\r\n        openai_organization = get_from_dict_or_env(\r\n            values,\r\n            \"openai_organization\",\r\n            \"OPENAI_ORGANIZATION\",\r\n            default=\"\",\r\n        )\r\n        try:\r\n            import openai\r\n\r\n            openai.api_base = openai_api_base\r\n            openai.api_key = openai_api_key\r\n            if openai_organization:\r\n                openai.organization = openai_organization\r\n        except ImportError:\r\n            raise ValueError(\r\n                \"Could not import openai python package. \"\r\n                \"Please install it with `pip install openai`.\"\r\n            )\r\n        try:\r\n            values[\"client\"] = openai.ChatCompletion\r\n        except AttributeError:\r\n            raise ValueError(\r\n                \"`openai` has no `ChatCompletion` attribute, this is likely \"\r\n                \"due to an old version of the openai package. Try upgrading it \"\r\n                \"with `pip install --upgrade openai`.\"\r\n            )\r\n        if values[\"n\"] < 1:\r\n            raise ValueError(\"n must be at least 1.\")\r\n        if values[\"n\"] > 1 and values[\"streaming\"]:\r\n            raise ValueError(\"n must be 1 when streaming.\")\r\n        return values\r\n\r\n    @property\r\n    def _default_params(self) -> Dict[str, Any]:\r\n        \"\"\"Get the default parameters for calling OpenAI API.\"\"\"\r\n        return {\r\n            **super()._default_params,\r\n            \"engine\": self.deployment_name,\r\n        }\r\n\r\n``` \r\n2.use code\r\n```python\r\nchat = ClientChatOpenAI(\r\n        temperature=0,\r\n        streaming=True,\r\n        openai_api_key=os.getenv(\"OPENAI_CONFIG_0_API_KEY\"),\r\n        openai_api_base=os.getenv(\"OPENAI_CONFIG_0_END_POINT\"),\r\n    )\r\n    batch_messages = [\r\n        [SystemMessage(content=\"\u4f60\u662fai\u52a9\u624b.\"), HumanMessage(content=chat_request.prompts)],\r\n    ]\r\n    result = chat.generate(batch_messages)\r\n    print(result.llm_output[\"token_usage\"])\r\n    return result\r\n```\n\n### Expected behavior\n\ni think code is ok",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5277/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5277/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5276",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5276/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5276/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5276/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5276",
        "id": 1726853363,
        "node_id": "I_kwDOIPDwls5m7bDz",
        "number": 5276,
        "title": "python SDK can't query documents from an existing collection",
        "user": {
            "login": "qlql489",
            "id": 10767590,
            "node_id": "MDQ6VXNlcjEwNzY3NTkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/10767590?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qlql489",
            "html_url": "https://github.com/qlql489",
            "followers_url": "https://api.github.com/users/qlql489/followers",
            "following_url": "https://api.github.com/users/qlql489/following{/other_user}",
            "gists_url": "https://api.github.com/users/qlql489/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/qlql489/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/qlql489/subscriptions",
            "organizations_url": "https://api.github.com/users/qlql489/orgs",
            "repos_url": "https://api.github.com/users/qlql489/repos",
            "events_url": "https://api.github.com/users/qlql489/events{/privacy}",
            "received_events_url": "https://api.github.com/users/qlql489/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-26T03:40:09Z",
        "updated_at": "2023-06-01T00:28:00Z",
        "closed_at": "2023-06-01T00:28:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nIn the JS SDK of Milvus, there is a function to query documents from an existing collection, while in the Python SDK, this function is not available. Instead, the collection can be constructed using the following way:\r\n```python\r\nvector_db = Milvus.from_documents(\r\n    docs,\r\n    embeddings,\r\n    connection_args={\"host\": \"127.0.0.1\", \"port\": \"19530\"},\r\n)\r\n```\n\n### Motivation\n\nI cannot ask multiple questions\n\n### Your contribution\n\nno",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5276/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5276/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5275",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5275/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5275/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5275/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5275",
        "id": 1726669439,
        "node_id": "I_kwDOIPDwls5m6uJ_",
        "number": 5275,
        "title": "When initializing ChatVertexAI fastapi thread pool becomes unaccessible ",
        "user": {
            "login": "bjk95",
            "id": 41258773,
            "node_id": "MDQ6VXNlcjQxMjU4Nzcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/41258773?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bjk95",
            "html_url": "https://github.com/bjk95",
            "followers_url": "https://api.github.com/users/bjk95/followers",
            "following_url": "https://api.github.com/users/bjk95/following{/other_user}",
            "gists_url": "https://api.github.com/users/bjk95/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bjk95/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bjk95/subscriptions",
            "organizations_url": "https://api.github.com/users/bjk95/orgs",
            "repos_url": "https://api.github.com/users/bjk95/repos",
            "events_url": "https://api.github.com/users/bjk95/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bjk95/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-26T00:48:15Z",
        "updated_at": "2023-09-10T16:11:57Z",
        "closed_at": "2023-09-10T16:11:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nWhen I initialise ChatVeretexAI in a fastAPI app the thread pool never returns to idle blocking the server returning the below error.\r\n\r\nE0526 10:18:51.289447000 4300375424 thread_pool.cc:230]                Waiting for thread pool to idle before forking\r\n\r\non langchain 0.180\n\n### Who can help?\n\n@hwchase17\r\n@agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nInitialise ChatVertexAI in a fastapi app. ChatOpenAI works fine.\n\n### Expected behavior\n\nDon't error",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5275/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5275/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5274",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5274/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5274/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5274/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5274",
        "id": 1726644384,
        "node_id": "PR_kwDOIPDwls5RY4BL",
        "number": 5274,
        "title": "added more examples for chatbots and question answering",
        "user": {
            "login": "mikayelh",
            "id": 47828027,
            "node_id": "MDQ6VXNlcjQ3ODI4MDI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/47828027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikayelh",
            "html_url": "https://github.com/mikayelh",
            "followers_url": "https://api.github.com/users/mikayelh/followers",
            "following_url": "https://api.github.com/users/mikayelh/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikayelh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikayelh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikayelh/subscriptions",
            "organizations_url": "https://api.github.com/users/mikayelh/orgs",
            "repos_url": "https://api.github.com/users/mikayelh/repos",
            "events_url": "https://api.github.com/users/mikayelh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikayelh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528836,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvRA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/wontfix",
                "name": "wontfix",
                "color": "ffffff",
                "default": true,
                "description": "This will not be worked on"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-26T00:27:28Z",
        "updated_at": "2023-07-15T02:10:52Z",
        "closed_at": "2023-07-15T02:10:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5274",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5274",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5274.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5274.patch",
            "merged_at": null
        },
        "body": "# More end-to-end examples with LangChain \ud83d\ude80 \r\n\r\nHiya, I added more examples for chatbots and question answering \r\n1. [JarvisBase](https://github.com/peterw/JarvisBase): An end-to-end Customer Support assistant that transcribes user voice, performs Question Answering over a scraped documentation base, & answers in natural language. \r\n2. [PDF Analysis Slack Chatbot](https://github.com/hollaugo/slack-financial-analysis-chatbot): Build an end-to-end Slack chatbot that chats with multiple PDF files (financial analysis in this case).\r\n3. [Question Answering over multiple PDFs](https://www.activeloop.ai/resources/ultimate-guide-to-lang-chain-deep-lake-build-chat-gpt-to-answer-questions-on-your-financial-data/): An intro guide for building a chat with multiple PDFs solution.\r\n\r\n# Who can review?\r\n\r\nforgot to tag @hwchase17 - sorry! \r\n ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5274/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5274/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5273",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5273/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5273/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5273/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5273",
        "id": 1726597095,
        "node_id": "PR_kwDOIPDwls5RYt4k",
        "number": 5273,
        "title": "OpenAI lint",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-25T23:11:08Z",
        "updated_at": "2023-05-25T23:20:08Z",
        "closed_at": "2023-05-25T23:20:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5273",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5273",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5273.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5273.patch",
            "merged_at": "2023-05-25T23:20:07Z"
        },
        "body": "Causing lint issues if you have openai installed, annoying for local dev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5273/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5273/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5272",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5272/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5272/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5272/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5272",
        "id": 1726578754,
        "node_id": "PR_kwDOIPDwls5RYp6T",
        "number": 5272,
        "title": "Fixed typo: 'ouput' to 'output' in all documentation",
        "user": {
            "login": "deepblue",
            "id": 2792,
            "node_id": "MDQ6VXNlcjI3OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/deepblue",
            "html_url": "https://github.com/deepblue",
            "followers_url": "https://api.github.com/users/deepblue/followers",
            "following_url": "https://api.github.com/users/deepblue/following{/other_user}",
            "gists_url": "https://api.github.com/users/deepblue/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/deepblue/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/deepblue/subscriptions",
            "organizations_url": "https://api.github.com/users/deepblue/orgs",
            "repos_url": "https://api.github.com/users/deepblue/repos",
            "events_url": "https://api.github.com/users/deepblue/events{/privacy}",
            "received_events_url": "https://api.github.com/users/deepblue/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-25T22:47:35Z",
        "updated_at": "2023-05-26T02:18:32Z",
        "closed_at": "2023-05-26T02:18:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5272",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5272",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5272.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5272.patch",
            "merged_at": "2023-05-26T02:18:32Z"
        },
        "body": "# Fixed typo: 'ouput' to 'output' in all documentation\r\n\r\nIn this instance, the typo 'ouput' was amended to 'output' in all occurrences within the documentation. There are no dependencies required for this change.\r\n\r\n\r\n## Who can review?\r\n\r\n@hwchase17\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5272/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5272/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5271",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5271/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5271/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5271/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5271",
        "id": 1726558628,
        "node_id": "I_kwDOIPDwls5m6TGk",
        "number": 5271,
        "title": "ZeroShotAgent fails with ShellTool due to quotes in llm output",
        "user": {
            "login": "bmcclanahan",
            "id": 3519757,
            "node_id": "MDQ6VXNlcjM1MTk3NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3519757?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmcclanahan",
            "html_url": "https://github.com/bmcclanahan",
            "followers_url": "https://api.github.com/users/bmcclanahan/followers",
            "following_url": "https://api.github.com/users/bmcclanahan/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmcclanahan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmcclanahan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmcclanahan/subscriptions",
            "organizations_url": "https://api.github.com/users/bmcclanahan/orgs",
            "repos_url": "https://api.github.com/users/bmcclanahan/repos",
            "events_url": "https://api.github.com/users/bmcclanahan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmcclanahan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-25T22:18:12Z",
        "updated_at": "2023-10-08T16:06:56Z",
        "closed_at": "2023-10-08T16:06:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/hwchase17/langchain/blob/7652d2abb01208fd51115e34e18b066824e7d921/langchain/agents/mrkl/output_parser.py#L47\r\n\r\nDue to the line above the `ShellTool` fails when using it with the `ZeroShotAgent`. In using `langchain.OpenAI` as the `llm` I encountered a scenario where ChatGPT provides a string surrounded by single quotes for `Action Input:`. This causes the ShellTool not to recognize the input command because it is surrounded by single quotes which aren't stripped (I get a command not found error). This could easily be fixed by stripping single quotes from `action_input`. \r\n\r\n```\r\nreturn AgentAction(action, action_input.strip(\" \").strip('\"').strip(\"'\"), text) \r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5271/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5271/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5270",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5270/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5270/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5270/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5270",
        "id": 1726507623,
        "node_id": "I_kwDOIPDwls5m6Gpn",
        "number": 5270,
        "title": "use_query_checker for VertexAI fails",
        "user": {
            "login": "steven-levey-sp",
            "id": 72816356,
            "node_id": "MDQ6VXNlcjcyODE2MzU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/72816356?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/steven-levey-sp",
            "html_url": "https://github.com/steven-levey-sp",
            "followers_url": "https://api.github.com/users/steven-levey-sp/followers",
            "following_url": "https://api.github.com/users/steven-levey-sp/following{/other_user}",
            "gists_url": "https://api.github.com/users/steven-levey-sp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/steven-levey-sp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/steven-levey-sp/subscriptions",
            "organizations_url": "https://api.github.com/users/steven-levey-sp/orgs",
            "repos_url": "https://api.github.com/users/steven-levey-sp/repos",
            "events_url": "https://api.github.com/users/steven-levey-sp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/steven-levey-sp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-25T21:22:26Z",
        "updated_at": "2023-10-05T16:09:44Z",
        "closed_at": "2023-10-05T16:09:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain==0.0.180\r\ngoogle-cloud-aiplatform==1.25.0\r\nSQLAlchemy==2.0.15\r\nduckdb==0.8.0\r\nduckdb-engine==0.7.3\r\n\r\nRunning inside GCP Vertex AI Notebook (Jupyter Lab essentially jupyterlab==3.4.8)\r\npython 3.7\r\n\r\n### Who can help?\r\n\r\n@Jflick58 \r\n@lkuligin \r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n1. Create the Vertex AI LLM (using latest version of LangChain)\r\n\r\n`from langchain.llms import VertexAI\r\n\r\npalmllm = VertexAI(model_name='text-bison@001',\r\n    max_output_tokens=256,\r\n    temperature=0.2,\r\n    top_p=0.1,\r\n    top_k=40,\r\n    verbose=True)`\r\n\r\n2. Setup the db engine for duckdb in this case\r\n\r\n`engine = create_engine(\"duckdb:///dw.db\")`\r\n\r\n\r\n2. Then create the chain using SQLDatabaseChain (Note the use of use_query_checker=True)\r\n\r\n`#Setup the DB\r\ndb = SQLDatabase(engine=engine,metadata=MetaData(bind=engine),include_tables=[table_name])\r\n\r\n#Setup the chain\r\ndb_chain = SQLDatabaseChain.from_llm(palmllm,db,verbose=True,use_query_checker=True,prompt=PROMPT,return_intermediate_steps=True,top_k=3)`\r\n\r\n\r\n4. Run a query against the chain (Notice the SQLQuery: The query is correct) (It is as if its trying to execute \"The query is correct\" as SQL\"\r\n\r\n`> Entering new SQLDatabaseChain chain...\r\nHow many countries are there\r\nSQLQuery:The query is correct.`\r\n\r\nThis is the error returned:\r\n\r\n`ProgrammingError: (duckdb.ParserException) Parser Error: syntax error at or near \"The\"\r\nLINE 1: The query is correct.\r\n        ^\r\n[SQL: The query is correct.]\r\n(Background on this error at: https://sqlalche.me/e/14/f405)`\r\n\r\nIMPORTANT:\r\n- If I remove the \"use_query_checker=True\" then everything works well.\r\n- If I use the OpenAI LLM and dont change anything (except the LLM), then it works with the \"use_query_checker=True\" setting.\r\n\r\nThis relates to [#5049](https://github.com/hwchase17/langchain/pull/5049)\r\n\r\n### Expected behavior\r\n\r\nI believe the intention of that flag \"use_query_checker=True\" is to validate the SQL and allow the chain to recover from a simple syntax error. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5270/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5270/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5269",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5269/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5269/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5269/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5269",
        "id": 1726486276,
        "node_id": "I_kwDOIPDwls5m6BcE",
        "number": 5269,
        "title": "pandas dataframe agent generates correct Action Input, but returns incorrect result",
        "user": {
            "login": "ayush-1506",
            "id": 49805996,
            "node_id": "MDQ6VXNlcjQ5ODA1OTk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/49805996?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ayush-1506",
            "html_url": "https://github.com/ayush-1506",
            "followers_url": "https://api.github.com/users/ayush-1506/followers",
            "following_url": "https://api.github.com/users/ayush-1506/following{/other_user}",
            "gists_url": "https://api.github.com/users/ayush-1506/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ayush-1506/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ayush-1506/subscriptions",
            "organizations_url": "https://api.github.com/users/ayush-1506/orgs",
            "repos_url": "https://api.github.com/users/ayush-1506/repos",
            "events_url": "https://api.github.com/users/ayush-1506/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ayush-1506/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-05-25T21:03:00Z",
        "updated_at": "2023-11-03T16:08:07Z",
        "closed_at": "2023-11-03T16:08:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version: 0.0.180\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [x] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI'm running the example from docs: https://python.langchain.com/en/latest/modules/agents/toolkits/examples/pandas.html. \r\n\r\n`agent.run(\"how many people are 28 years old?\")`\r\n\r\ngives:\r\n```\r\n> Entering new AgentExecutor chain...\r\nThought: I need to use the `df` dataframe to find how many people are 28 years old.\r\nAction: python_repl_ast\r\nAction Input: df['Age'] == 28\r\nObservation: 0\r\nThought: There are no people 28 years old.\r\nFinal Answer: 0\r\n```\r\n\r\nIn other cases, the Action Input the LLM calculates is correct, but the observation (result of applying this action on the dataframe) is incorrect. This makes me believe that the LLM isn't at fault here.\r\n\n\n### Expected behavior\n\nShould return 25.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5269/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5269/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5268",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5268/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5268/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5268/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5268",
        "id": 1726479097,
        "node_id": "PR_kwDOIPDwls5RYUKY",
        "number": 5268,
        "title": "Added pipline args to `HuggingFacePipeline.from_model_id`",
        "user": {
            "login": "solomspd",
            "id": 40343437,
            "node_id": "MDQ6VXNlcjQwMzQzNDM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/40343437?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/solomspd",
            "html_url": "https://github.com/solomspd",
            "followers_url": "https://api.github.com/users/solomspd/followers",
            "following_url": "https://api.github.com/users/solomspd/following{/other_user}",
            "gists_url": "https://api.github.com/users/solomspd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/solomspd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/solomspd/subscriptions",
            "organizations_url": "https://api.github.com/users/solomspd/orgs",
            "repos_url": "https://api.github.com/users/solomspd/repos",
            "events_url": "https://api.github.com/users/solomspd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/solomspd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-25T20:56:15Z",
        "updated_at": "2023-05-26T00:54:52Z",
        "closed_at": "2023-05-26T00:54:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5268",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5268",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5268.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5268.patch",
            "merged_at": "2023-05-26T00:54:52Z"
        },
        "body": "The current `HuggingFacePipeline.from_model_id` does not allow passing of pipeline arguments to the transformer pipeline.\r\nThis PR enables adding important pipeline parameters like setting `max_new_tokens` for example.\r\nPrevious to this PR it would be necessary to manually create the pipeline through huggingface transformers then handing it to langchain.\r\n\r\nFor example instead of this\r\n```py\r\nmodel_id = \"gpt2\"\r\ntokenizer = AutoTokenizer.from_pretrained(model_id)\r\nmodel = AutoModelForCausalLM.from_pretrained(model_id)\r\npipe = pipeline(\r\n    \"text-generation\", model=model, tokenizer=tokenizer, max_new_tokens=10\r\n)\r\nhf = HuggingFacePipeline(pipeline=pipe)\r\n```\r\nYou can write this\r\n```py\r\nhf = HuggingFacePipeline.from_model_id(\r\n    model_id=\"gpt2\", task=\"text-generation\", pipeline_kwargs={\"max_new_tokens\": 10}\r\n)\r\n```\r\n\r\n## Who can review?\r\n@hwchase17\r\n@agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5268/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5268/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5267",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5267/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5267/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5267/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5267",
        "id": 1726448140,
        "node_id": "PR_kwDOIPDwls5RYNZs",
        "number": 5267,
        "title": "Zep sdk version",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-25T20:29:17Z",
        "updated_at": "2023-05-25T20:42:11Z",
        "closed_at": "2023-05-25T20:42:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5267",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5267",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5267.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5267.patch",
            "merged_at": "2023-05-25T20:42:11Z"
        },
        "body": "zep-python's sync methods no longer need an asyncio wrapper. This was causing issues with FastAPI deployment.\r\nZep also now supports putting and getting of arbitrary message metadata.\r\n\r\nBump zep-python version to v0.30\r\n\r\nRemove nest-asyncio from Zep example notebooks.\r\n\r\nModify tests to include metadata.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5267/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5267/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5266",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5266/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5266/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5266/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5266",
        "id": 1726411036,
        "node_id": "I_kwDOIPDwls5m5vEc",
        "number": 5266,
        "title": "Issue: RetrievalQA -> ConversationalChatAgent -> AgentExecutor gives no response if document-related",
        "user": {
            "login": "ronasuti",
            "id": 5325389,
            "node_id": "MDQ6VXNlcjUzMjUzODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5325389?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ronasuti",
            "html_url": "https://github.com/ronasuti",
            "followers_url": "https://api.github.com/users/ronasuti/followers",
            "following_url": "https://api.github.com/users/ronasuti/following{/other_user}",
            "gists_url": "https://api.github.com/users/ronasuti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ronasuti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ronasuti/subscriptions",
            "organizations_url": "https://api.github.com/users/ronasuti/orgs",
            "repos_url": "https://api.github.com/users/ronasuti/repos",
            "events_url": "https://api.github.com/users/ronasuti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ronasuti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-05-25T19:58:01Z",
        "updated_at": "2023-09-18T16:10:56Z",
        "closed_at": "2023-09-18T16:10:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi everybody,\r\n\r\nI'm working with an LLM setup inspired from @pelyhe 's implementation #4573 .\r\nIt uses a RetrievalQA that queries a persistent embedded ChromaDB, then feeds it into a ConversationalChatAgent and then an AgentExecutor.\r\n\r\nCurrently, this setup works for only basic situations which definitely have nothing to do with documents. Once I ask it something document relevant, it gives an empty response. I have a nagging suspicion I've simply wired things up incorrectly, but it's not clear how to fix it.\r\n```\r\n@st.cache_resource\r\ndef load_agent():\r\n    vectorstore = Chroma(persist_directory=CHROMA_DIR)\r\n\r\n    basic_prompt_template = \"\"\"If the context is not relevant, \r\n    please answer the question by using your own knowledge about the topic.\r\n    \r\n    ###Context:\r\n    {context}\r\n    ###Human:\r\n    {question}\r\n    ###Assistant:\r\n    \"\"\"\r\n\r\n    prompt = PromptTemplate(\r\n        template=basic_prompt_template, input_variables=[\"context\", \"question\"]\r\n    )\r\n\r\n    system_msg = \"You are a helpful assistant.\"\r\n\r\n    chain_type_kwargs = {\"prompt\": prompt}\r\n    # Time to initialize the LLM, as late as possible so everything not requiring the LLM instance to fail fast\r\n    llm = GPT4All(\r\n        model=MODEL,\r\n        verbose=True,\r\n    )\r\n\r\n    # Initialise QA chain for document-relevant queries\r\n    qa = RetrievalQA.from_chain_type(\r\n        llm=llm,\r\n        chain_type=\"stuff\",\r\n        retriever=vectorstore.as_retriever(),\r\n        chain_type_kwargs=chain_type_kwargs,\r\n    )\r\n\r\n    tools = [\r\n        Tool(\r\n            name=\"Document tool\",\r\n            func=qa.run,\r\n            description=\"useful for when you need to answer questions from documents.\",\r\n        ),\r\n    ]\r\n\r\n    agent = ConversationalChatAgent.from_llm_and_tools(\r\n        llm=llm, tools=tools, system_message=system_msg, verbose=True\r\n    )\r\n\r\n    return AgentExecutor.from_agent_and_tools(\r\n        agent=agent,\r\n        tools=tools,\r\n        verbose=True,\r\n        memory=ConversationBufferMemory(\r\n            memory_key=\"chat_history\", return_messages=True\r\n        ),\r\n    )\r\n\r\n\r\nagent = load_agent()\r\n\r\n###########################\r\n# Streamlit UI operation. #\r\n###########################\r\nif \"generated\" not in st.session_state:\r\n    st.session_state[\"generated\"] = []\r\n\r\nif \"past\" not in st.session_state:\r\n    st.session_state[\"past\"] = []\r\n\r\n\r\ndef get_text():\r\n    input_text = st.text_input(label=\"\", key=\"question\")\r\n    return input_text\r\n\r\n\r\nuser_input = get_text()\r\n\r\nif user_input:\r\n    try:\r\n        output = agent.run(input=user_input)\r\n    except ValueError as e:\r\n        output = str(e)\r\n        if not output.startswith(\"Could not parse LLM output: \"):\r\n            raise Exception(output)\r\n        output = output.removeprefix(\"Could not parse LLM output: \").removesuffix(\"`\")\r\n    st.session_state.past.append(user_input)\r\n    st.session_state.generated.append(output)\r\n\r\nif st.session_state[\"generated\"]:\r\n    for i in range(len(st.session_state[\"generated\"]) - 1, -1, -1):\r\n        message(st.session_state[\"generated\"][i], key=str(i))\r\n        message(st.session_state[\"past\"][i], is_user=True, key=str(i) + \"_user\")\r\n```\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5266/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5266/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5265",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5265/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5265/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5265/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5265",
        "id": 1726405860,
        "node_id": "PR_kwDOIPDwls5RYEMo",
        "number": 5265,
        "title": "Fixed regression in JoplinLoader's get note url",
        "user": {
            "login": "alondmnt",
            "id": 17462125,
            "node_id": "MDQ6VXNlcjE3NDYyMTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/17462125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alondmnt",
            "html_url": "https://github.com/alondmnt",
            "followers_url": "https://api.github.com/users/alondmnt/followers",
            "following_url": "https://api.github.com/users/alondmnt/following{/other_user}",
            "gists_url": "https://api.github.com/users/alondmnt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alondmnt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alondmnt/subscriptions",
            "organizations_url": "https://api.github.com/users/alondmnt/orgs",
            "repos_url": "https://api.github.com/users/alondmnt/repos",
            "events_url": "https://api.github.com/users/alondmnt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alondmnt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-25T19:53:47Z",
        "updated_at": "2023-05-25T20:10:22Z",
        "closed_at": "2023-05-25T20:10:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5265",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5265",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5265.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5265.patch",
            "merged_at": "2023-05-25T20:10:11Z"
        },
        "body": "Fixes a regression in JoplinLoader that was introduced during the code review (bad `page` wildcard in _get_note_url).\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@dev2049\r\n@leo-gan\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5265/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5265/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5264",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5264/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5264/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5264/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5264",
        "id": 1726337382,
        "node_id": "I_kwDOIPDwls5m5dFm",
        "number": 5264,
        "title": "UnstructuredMarkdownLoader resulting in `zipfile.BadZipFile: File is not a zip file`",
        "user": {
            "login": "abhishekbhakat",
            "id": 43564549,
            "node_id": "MDQ6VXNlcjQzNTY0NTQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/43564549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abhishekbhakat",
            "html_url": "https://github.com/abhishekbhakat",
            "followers_url": "https://api.github.com/users/abhishekbhakat/followers",
            "following_url": "https://api.github.com/users/abhishekbhakat/following{/other_user}",
            "gists_url": "https://api.github.com/users/abhishekbhakat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abhishekbhakat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abhishekbhakat/subscriptions",
            "organizations_url": "https://api.github.com/users/abhishekbhakat/orgs",
            "repos_url": "https://api.github.com/users/abhishekbhakat/repos",
            "events_url": "https://api.github.com/users/abhishekbhakat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abhishekbhakat/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-05-25T18:59:18Z",
        "updated_at": "2023-11-29T17:55:26Z",
        "closed_at": "2023-11-29T17:55:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n```\r\nlangchain==0.0.180\r\nPython 3.11.3 (tags/v3.11.3:f3909b8, Apr  4 2023, 23:49:59) [MSC v.1934 64 bit (AMD64)] on win32\r\nWindows 11\r\n```\n\n### Who can help?\n\n@eyurtsev\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nPython Code\r\n```\r\nfrom langchain.document_loaders import UnstructuredMarkdownLoader\r\nmarkdown_path = r\"Pyspy.md\"\r\nloader = UnstructuredMarkdownLoader(markdown_path)\r\ndata = loader.load()\r\n```\r\n\r\nMarkdown file `Pyspy.md`\r\n```\r\n    ```\r\n     .pip/bin/py-spy top -p 70\r\n    ```\r\n```\r\n\r\n\n\n### Expected behavior\n\nIt should result in List[Document] in data",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5264/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5264/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5263",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5263/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5263/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5263/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5263",
        "id": 1726334702,
        "node_id": "PR_kwDOIPDwls5RX0k1",
        "number": 5263,
        "title": "Zep SDK Version Update",
        "user": {
            "login": "danielchalef",
            "id": 131175,
            "node_id": "MDQ6VXNlcjEzMTE3NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/131175?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danielchalef",
            "html_url": "https://github.com/danielchalef",
            "followers_url": "https://api.github.com/users/danielchalef/followers",
            "following_url": "https://api.github.com/users/danielchalef/following{/other_user}",
            "gists_url": "https://api.github.com/users/danielchalef/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danielchalef/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danielchalef/subscriptions",
            "organizations_url": "https://api.github.com/users/danielchalef/orgs",
            "repos_url": "https://api.github.com/users/danielchalef/repos",
            "events_url": "https://api.github.com/users/danielchalef/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danielchalef/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-25T18:57:29Z",
        "updated_at": "2023-06-25T23:16:31Z",
        "closed_at": "2023-05-25T20:42:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5263",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5263",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5263.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5263.patch",
            "merged_at": null
        },
        "body": "# Zep SDK Version Update\r\n\r\nzep-python's sync methods no longer need an asyncio wrapper. This was causing issues with FastAPI deployment.\r\nZep also now supports putting and getting of arbitrary message metadata.\r\n\r\n- Bump zep-python version to v0.30\r\n- Remove `nest-asyncio` from Zep example notebooks.\r\n- Modify tests to include metadata.\r\n\r\n     \r\n    - @dev2049\r\n      ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5263/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5263/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5262",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5262/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5262/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5262/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5262",
        "id": 1726293593,
        "node_id": "I_kwDOIPDwls5m5SZZ",
        "number": 5262,
        "title": "Assertion Error when using VertexAIEmbeddings with faiss vectorstore",
        "user": {
            "login": "bhanu-pappala",
            "id": 67595337,
            "node_id": "MDQ6VXNlcjY3NTk1MzM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/67595337?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bhanu-pappala",
            "html_url": "https://github.com/bhanu-pappala",
            "followers_url": "https://api.github.com/users/bhanu-pappala/followers",
            "following_url": "https://api.github.com/users/bhanu-pappala/following{/other_user}",
            "gists_url": "https://api.github.com/users/bhanu-pappala/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bhanu-pappala/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bhanu-pappala/subscriptions",
            "organizations_url": "https://api.github.com/users/bhanu-pappala/orgs",
            "repos_url": "https://api.github.com/users/bhanu-pappala/repos",
            "events_url": "https://api.github.com/users/bhanu-pappala/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bhanu-pappala/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-25T18:28:41Z",
        "updated_at": "2023-12-03T15:54:34Z",
        "closed_at": "2023-09-14T16:08:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "```\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\memory\\vectorstore.py in save_context(self, inputs, outputs)\r\n     67         \"\"\"Save context from this conversation to buffer.\"\"\"\r\n     68         documents = self._form_documents(inputs, outputs)\r\n---> 69         self.retriever.add_documents(documents)\r\n     70 \r\n     71     def clear(self) -> None:\r\n\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\vectorstores\\base.py in add_documents(self, documents, **kwargs)\r\n    413     def add_documents(self, documents: List[Document], **kwargs: Any) -> List[str]:\r\n    414         \"\"\"Add documents to vectorstore.\"\"\"\r\n--> 415         return self.vectorstore.add_documents(documents, **kwargs)\r\n    416 \r\n    417     async def aadd_documents(\r\n\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\vectorstores\\base.py in add_documents(self, documents, **kwargs)\r\n     60         texts = [doc.page_content for doc in documents]\r\n     61         metadatas = [doc.metadata for doc in documents]\r\n---> 62         return self.add_texts(texts, metadatas, **kwargs)\r\n     63 \r\n     64     async def aadd_documents(\r\n\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\vectorstores\\faiss.py in add_texts(self, texts, metadatas, ids, **kwargs)\r\n    150         # Embed and create the documents.\r\n    151         embeddings = [self.embedding_function(text) for text in texts]\r\n--> 152         return self.__add(texts, embeddings, metadatas=metadatas, ids=ids, **kwargs)\r\n    153 \r\n    154     def add_embeddings(\r\n\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\vectorstores\\faiss.py in __add(self, texts, embeddings, metadatas, ids, **kwargs)\r\n    117         if self._normalize_L2:\r\n    118             faiss.normalize_L2(vector)\r\n--> 119         self.index.add(vector)\r\n    120         # Get list of index, id, and docs.\r\n    121         full_info = [(starting_len + i, ids[i], doc) for i, doc in enumerate(documents)]\r\n\r\n~\\Anaconda3\\lib\\site-packages\\faiss\\class_wrappers.py in replacement_add(self, x)\r\n    226 \r\n    227         n, d = x.shape\r\n--> 228         assert d == self.d\r\n    229         x = np.ascontiguousarray(x, dtype='float32')\r\n    230         self.add_c(n, swig_ptr(x))\r\n\r\nAssertionError: \r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5262/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5262/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5261",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5261/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5261/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5261/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5261",
        "id": 1726268544,
        "node_id": "PR_kwDOIPDwls5RXmKj",
        "number": 5261,
        "title": "Support bigquery dialect - SQL",
        "user": {
            "login": "HassanOuda",
            "id": 2914618,
            "node_id": "MDQ6VXNlcjI5MTQ2MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2914618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HassanOuda",
            "html_url": "https://github.com/HassanOuda",
            "followers_url": "https://api.github.com/users/HassanOuda/followers",
            "following_url": "https://api.github.com/users/HassanOuda/following{/other_user}",
            "gists_url": "https://api.github.com/users/HassanOuda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HassanOuda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HassanOuda/subscriptions",
            "organizations_url": "https://api.github.com/users/HassanOuda/orgs",
            "repos_url": "https://api.github.com/users/HassanOuda/repos",
            "events_url": "https://api.github.com/users/HassanOuda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HassanOuda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-25T18:09:09Z",
        "updated_at": "2023-05-26T01:19:18Z",
        "closed_at": "2023-05-26T01:19:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5261",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5261",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5261.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5261.patch",
            "merged_at": "2023-05-26T01:19:18Z"
        },
        "body": "# Your PR Title (What it does)\r\n\r\nAdding an if statement to deal with bigquery sql dialect. When I use bigquery dialect before, it failed while using SET search_path TO. So added a condition to set dataset as the schema parameter which is equivalent to SET search_path TO . I have tested and it works.\r\n\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n@dev2049\r\n     ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5261/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5261/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5260",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5260/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5260/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5260/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5260",
        "id": 1726213799,
        "node_id": "PR_kwDOIPDwls5RXaOj",
        "number": 5260,
        "title": "Build an abstract dialogue model using classes and methods to represent different dialogue elements",
        "user": {
            "login": "glide-the",
            "id": 16206043,
            "node_id": "MDQ6VXNlcjE2MjA2MDQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/16206043?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glide-the",
            "html_url": "https://github.com/glide-the",
            "followers_url": "https://api.github.com/users/glide-the/followers",
            "following_url": "https://api.github.com/users/glide-the/following{/other_user}",
            "gists_url": "https://api.github.com/users/glide-the/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/glide-the/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glide-the/subscriptions",
            "organizations_url": "https://api.github.com/users/glide-the/orgs",
            "repos_url": "https://api.github.com/users/glide-the/repos",
            "events_url": "https://api.github.com/users/glide-the/events{/privacy}",
            "received_events_url": "https://api.github.com/users/glide-the/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-25T17:25:47Z",
        "updated_at": "2023-06-07T17:05:57Z",
        "closed_at": "2023-06-07T17:05:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5260",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5260",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5260.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5260.patch",
            "merged_at": null
        },
        "body": "# Build an abstract dialogue model using classes and methods to represent different dialogue elements\r\n\r\n\r\nFixes # None\r\n\r\n## Before submitting\r\n\r\n\r\nIf you want to review, please refer to the quick start example provided in langchain/chains/dialogue_answering/__main__.py. You may need to set the openaikey and the following startup parameters: --dialogue-path: the location of the dialogue file, --embedding-model: the HuggingFaceEmbeddings model to use (defaults to GanymedeNil/text2vec-large-chinese) if not specified.\r\n\r\nRegarding the format of the dialogue file, please refer to the following information:\r\n```text\r\nsun:\r\nHas the offline model been run?\r\n\r\nglide-the:\r\nYes, it has been run, but the results are not very satisfactory.\r\n\r\nglide-the:\r\nIt lacks chat intelligence and falls far behind in terms of logic and reasoning.\r\n\r\nsun:\r\nAre you available for voice chat?\r\n\r\nglide-the:\r\nI'm considering using this offline model: https://huggingface.co/chat\r\n\r\nglide-the:\r\nvoice chat okay.\r\n\r\nglide-the:\r\nYou can take a look at the dev_agent branch of the langchain-chatglm project.\r\n\r\nglide-the:\r\nThere's a dialogue model question-answering example under the agent.\r\n\r\nsun:\r\nAlright.\r\n\r\nglide-the:\r\nThe specified chat record file is exported from WeChat.\r\n```\r\n## Who can review?\r\n\r\n\r\nIncluding lorader and agent applications\r\n\r\n\r\n- @eyurtsev\r\n- @vowelparrot\r\n- @dev2049\r\n \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5260/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5260/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5259",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5259/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5259/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5259/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5259",
        "id": 1726206459,
        "node_id": "PR_kwDOIPDwls5RXYpI",
        "number": 5259,
        "title": "feat: support for shopping search in SerpApi",
        "user": {
            "login": "aymenfurter",
            "id": 20464460,
            "node_id": "MDQ6VXNlcjIwNDY0NDYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/20464460?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aymenfurter",
            "html_url": "https://github.com/aymenfurter",
            "followers_url": "https://api.github.com/users/aymenfurter/followers",
            "following_url": "https://api.github.com/users/aymenfurter/following{/other_user}",
            "gists_url": "https://api.github.com/users/aymenfurter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aymenfurter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aymenfurter/subscriptions",
            "organizations_url": "https://api.github.com/users/aymenfurter/orgs",
            "repos_url": "https://api.github.com/users/aymenfurter/repos",
            "events_url": "https://api.github.com/users/aymenfurter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aymenfurter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-25T17:20:08Z",
        "updated_at": "2023-05-28T22:23:26Z",
        "closed_at": "2023-05-28T04:20:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5259",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5259",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5259.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5259.patch",
            "merged_at": "2023-05-28T04:20:25Z"
        },
        "body": "# Support for shopping search in SerpApi\r\n\r\n## Who can review?\r\n@vowelparrot",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5259/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5259/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5258",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5258/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5258/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5258/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5258",
        "id": 1726151388,
        "node_id": "I_kwDOIPDwls5m4vrc",
        "number": 5258,
        "title": "Internal error encountered when using VertexAI in ConversationalRetrievalChain",
        "user": {
            "login": "bhanu-pappala",
            "id": 67595337,
            "node_id": "MDQ6VXNlcjY3NTk1MzM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/67595337?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bhanu-pappala",
            "html_url": "https://github.com/bhanu-pappala",
            "followers_url": "https://api.github.com/users/bhanu-pappala/followers",
            "following_url": "https://api.github.com/users/bhanu-pappala/following{/other_user}",
            "gists_url": "https://api.github.com/users/bhanu-pappala/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bhanu-pappala/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bhanu-pappala/subscriptions",
            "organizations_url": "https://api.github.com/users/bhanu-pappala/orgs",
            "repos_url": "https://api.github.com/users/bhanu-pappala/repos",
            "events_url": "https://api.github.com/users/bhanu-pappala/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bhanu-pappala/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-25T16:38:50Z",
        "updated_at": "2023-09-10T16:12:07Z",
        "closed_at": "2023-09-10T16:12:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "```\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\chat_models\\base.py in generate_prompt(self, prompts, stop, callbacks)\r\n    141     ) -> LLMResult:\r\n    142         prompt_messages = [p.to_messages() for p in prompts]\r\n--> 143         return self.generate(prompt_messages, stop=stop, callbacks=callbacks)\r\n    144 \r\n    145     async def agenerate_prompt(\r\n\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\chat_models\\base.py in generate(self, messages, stop, callbacks)\r\n     89         except (KeyboardInterrupt, Exception) as e:\r\n     90             run_manager.on_llm_error(e)\r\n---> 91             raise e\r\n     92         llm_output = self._combine_llm_outputs([res.llm_output for res in results])\r\n     93         generations = [res.generations for res in results]\r\n\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\chat_models\\base.py in generate(self, messages, stop, callbacks)\r\n     81         )\r\n     82         try:\r\n---> 83             results = [\r\n     84                 self._generate(m, stop=stop, run_manager=run_manager)\r\n     85                 if new_arg_supported\r\n\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\chat_models\\base.py in <listcomp>(.0)\r\n     82         try:\r\n     83             results = [\r\n---> 84                 self._generate(m, stop=stop, run_manager=run_manager)\r\n     85                 if new_arg_supported\r\n     86                 else self._generate(m, stop=stop)\r\n\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\chat_models\\vertexai.py in _generate(self, messages, stop, run_manager)\r\n    123         for pair in history.history:\r\n    124             chat._history.append((pair.question.content, pair.answer.content))\r\n--> 125         response = chat.send_message(question.content)\r\n    126         text = self._enforce_stop_words(response.text, stop)\r\n    127         return ChatResult(generations=[ChatGeneration(message=AIMessage(content=text))])\r\n\r\n~\\Anaconda3\\lib\\site-packages\\vertexai\\language_models\\_language_models.py in send_message(self, message, max_output_tokens, temperature, top_k, top_p)\r\n    676             ]\r\n    677 \r\n--> 678         prediction_response = self._model._endpoint.predict(\r\n    679             instances=[prediction_instance],\r\n    680             parameters=prediction_parameters,\r\n\r\n~\\Anaconda3\\lib\\site-packages\\google\\cloud\\aiplatform\\models.py in predict(self, instances, parameters, timeout, use_raw_predict)\r\n   1544             )\r\n   1545         else:\r\n-> 1546             prediction_response = self._prediction_client.predict(\r\n   1547                 endpoint=self._gca_resource.name,\r\n   1548                 instances=instances,\r\n\r\n~\\Anaconda3\\lib\\site-packages\\google\\cloud\\aiplatform_v1\\services\\prediction_service\\client.py in predict(self, request, endpoint, instances, parameters, retry, timeout, metadata)\r\n    600 \r\n    601         # Send the request.\r\n--> 602         response = rpc(\r\n    603             request,\r\n    604             retry=retry,\r\n\r\n~\\Anaconda3\\lib\\site-packages\\google\\api_core\\gapic_v1\\method.py in __call__(self, timeout, retry, *args, **kwargs)\r\n    111             kwargs[\"metadata\"] = metadata\r\n    112 \r\n--> 113         return wrapped_func(*args, **kwargs)\r\n    114 \r\n    115 \r\n\r\n~\\Anaconda3\\lib\\site-packages\\google\\api_core\\grpc_helpers.py in error_remapped_callable(*args, **kwargs)\r\n     72             return callable_(*args, **kwargs)\r\n     73         except grpc.RpcError as exc:\r\n---> 74             raise exceptions.from_grpc_error(exc) from exc\r\n     75 \r\n     76     return error_remapped_callable\r\n\r\nInternalServerError: 500 Internal error encountered.\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5258/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5258/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5257",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5257/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5257/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5257/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5257",
        "id": 1726136467,
        "node_id": "I_kwDOIPDwls5m4sCT",
        "number": 5257,
        "title": "Github integration",
        "user": {
            "login": "mudler",
            "id": 2420543,
            "node_id": "MDQ6VXNlcjI0MjA1NDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2420543?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mudler",
            "html_url": "https://github.com/mudler",
            "followers_url": "https://api.github.com/users/mudler/followers",
            "following_url": "https://api.github.com/users/mudler/following{/other_user}",
            "gists_url": "https://api.github.com/users/mudler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mudler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mudler/subscriptions",
            "organizations_url": "https://api.github.com/users/mudler/orgs",
            "repos_url": "https://api.github.com/users/mudler/repos",
            "events_url": "https://api.github.com/users/mudler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mudler/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-05-25T16:27:21Z",
        "updated_at": "2023-11-29T21:21:01Z",
        "closed_at": "2023-05-30T03:11:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWould be amazing to scan and get all the contents from the Github API, such as PRs, Issues and Discussions.\n\n### Motivation\n\nthis would allows to ask questions on the history of the project, issues that other users might have found, and much more!\n\n### Your contribution\n\nNot really a python developer here, would take me a while to figure out all the changes required.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5257/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5257/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5256",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5256/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5256/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5256/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5256",
        "id": 1726133919,
        "node_id": "I_kwDOIPDwls5m4raf",
        "number": 5256,
        "title": "Add integration for LocalAI",
        "user": {
            "login": "mudler",
            "id": 2420543,
            "node_id": "MDQ6VXNlcjI0MjA1NDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2420543?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mudler",
            "html_url": "https://github.com/mudler",
            "followers_url": "https://api.github.com/users/mudler/followers",
            "following_url": "https://api.github.com/users/mudler/following{/other_user}",
            "gists_url": "https://api.github.com/users/mudler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mudler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mudler/subscriptions",
            "organizations_url": "https://api.github.com/users/mudler/orgs",
            "repos_url": "https://api.github.com/users/mudler/repos",
            "events_url": "https://api.github.com/users/mudler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mudler/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4899415699,
                "node_id": "LA_kwDOIPDwls8AAAABJAcmkw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/llms",
                "name": "llms",
                "color": "7CDBB2",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-25T16:25:18Z",
        "updated_at": "2023-12-05T12:06:22Z",
        "closed_at": "2023-09-18T16:11:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nIntegration with LocalAI and with its extended endpoints to download models from the gallery.\n\n### Motivation\n\nLocalAI is a self-hosted OpenAI drop-in replacement with support for multiple model families: https://github.com/go-skynet/LocalAI\n\n### Your contribution\n\nNot a python guru, so might take few cycles away here.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5256/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5256/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5255",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5255/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5255/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5255/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5255",
        "id": 1726121249,
        "node_id": "I_kwDOIPDwls5m4oUh",
        "number": 5255,
        "title": "Inconsistent documentation for langchain.chains.FlareChain",
        "user": {
            "login": "james-310110",
            "id": 36966103,
            "node_id": "MDQ6VXNlcjM2OTY2MTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/36966103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/james-310110",
            "html_url": "https://github.com/james-310110",
            "followers_url": "https://api.github.com/users/james-310110/followers",
            "following_url": "https://api.github.com/users/james-310110/following{/other_user}",
            "gists_url": "https://api.github.com/users/james-310110/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/james-310110/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/james-310110/subscriptions",
            "organizations_url": "https://api.github.com/users/james-310110/orgs",
            "repos_url": "https://api.github.com/users/james-310110/repos",
            "events_url": "https://api.github.com/users/james-310110/events{/privacy}",
            "received_events_url": "https://api.github.com/users/james-310110/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528810,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-25T16:15:17Z",
        "updated_at": "2023-09-10T16:12:14Z",
        "closed_at": "2023-09-10T16:12:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question\r\nWill there be future updates where we are allowed to customize answer_gen_llm when using FlareChain?\r\n\r\n### Context\r\nIn the [documentation](https://python.langchain.com/en/latest/modules/chains/examples/flare.html) it says that:\r\n\r\nIn order to set up this chain, we will need three things:\r\n- An LLM to generate the answer\r\n- An LLM to generate hypothetical questions to use in retrieval\r\n- A retriever to use to look up answers for\r\n\r\nHowever, the example code only allows specification for the question_gen_llm, not the answer_gen_llm. \r\n\r\nAfter referencing the [code](https://github.com/hwchase17/langchain/blob/9c0cb90997db9eb2e2a736df458d39fd7bec8ffb/langchain/chains/flare/base.py) for FlareChain, it seems that the answer_gen_llm is initialized as `OpenAI(max_tokens=32, model_kwargs={\"logprobs\": 1}, temperature=0)`, which default to `\"text-davinci-003\"` as no model_name is specified.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5255/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5255/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5254",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5254/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5254/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5254/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5254",
        "id": 1726041996,
        "node_id": "I_kwDOIPDwls5m4U-M",
        "number": 5254,
        "title": "Issue: <Streaming mode not work for Sequential Chains>",
        "user": {
            "login": "SaaS1973",
            "id": 122426952,
            "node_id": "U_kgDOB0wWSA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122426952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SaaS1973",
            "html_url": "https://github.com/SaaS1973",
            "followers_url": "https://api.github.com/users/SaaS1973/followers",
            "following_url": "https://api.github.com/users/SaaS1973/following{/other_user}",
            "gists_url": "https://api.github.com/users/SaaS1973/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SaaS1973/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SaaS1973/subscriptions",
            "organizations_url": "https://api.github.com/users/SaaS1973/orgs",
            "repos_url": "https://api.github.com/users/SaaS1973/repos",
            "events_url": "https://api.github.com/users/SaaS1973/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SaaS1973/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-25T15:25:01Z",
        "updated_at": "2023-09-10T16:12:18Z",
        "closed_at": "2023-09-10T16:12:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nhi, team:\r\n\r\nI created Chain_A and Chain_B and set streaming=True for both of them.\r\n\r\noverall_chain = SequentialChain(\r\n    chains=[chain_A, chain_B],\r\n    input_variables=[\"era\", \"title\"],\r\n    output_variables=[\"synopsis\", \"review\"],\r\n    verbose=True)\r\n\r\nHowever, the streaming does not work.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5254/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5254/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5252",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5252/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5252/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5252/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5252",
        "id": 1725950539,
        "node_id": "I_kwDOIPDwls5m3-pL",
        "number": 5252,
        "title": "how to monitoring the new files after directory loader class used",
        "user": {
            "login": "jamsnrihk",
            "id": 134043330,
            "node_id": "U_kgDOB_1Wwg",
            "avatar_url": "https://avatars.githubusercontent.com/u/134043330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamsnrihk",
            "html_url": "https://github.com/jamsnrihk",
            "followers_url": "https://api.github.com/users/jamsnrihk/followers",
            "following_url": "https://api.github.com/users/jamsnrihk/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamsnrihk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamsnrihk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamsnrihk/subscriptions",
            "organizations_url": "https://api.github.com/users/jamsnrihk/orgs",
            "repos_url": "https://api.github.com/users/jamsnrihk/repos",
            "events_url": "https://api.github.com/users/jamsnrihk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamsnrihk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-25T14:33:02Z",
        "updated_at": "2023-09-14T16:09:01Z",
        "closed_at": "2023-09-14T16:09:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI am using langchain + openai api to create a chatbot for private data, i can use langchain directory loader class to load files from a directory, but if any new files added to that directory, how to automatically load it?\n\n### Motivation\n\nhttps://python.langchain.com/en/latest/modules/indexes/document_loaders/examples/file_directory.html\n\n### Your contribution\n\nif can solve the problem, it will be good for company to use it for internal knowdege base share.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5252/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5252/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5250",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5250/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5250/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5250/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5250",
        "id": 1725907294,
        "node_id": "PR_kwDOIPDwls5RWX8K",
        "number": 5250,
        "title": "Docs link custom agent page in getting started",
        "user": {
            "login": "JanilsWoerst",
            "id": 109829076,
            "node_id": "U_kgDOBovb1A",
            "avatar_url": "https://avatars.githubusercontent.com/u/109829076?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JanilsWoerst",
            "html_url": "https://github.com/JanilsWoerst",
            "followers_url": "https://api.github.com/users/JanilsWoerst/followers",
            "following_url": "https://api.github.com/users/JanilsWoerst/following{/other_user}",
            "gists_url": "https://api.github.com/users/JanilsWoerst/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JanilsWoerst/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JanilsWoerst/subscriptions",
            "organizations_url": "https://api.github.com/users/JanilsWoerst/orgs",
            "repos_url": "https://api.github.com/users/JanilsWoerst/repos",
            "events_url": "https://api.github.com/users/JanilsWoerst/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JanilsWoerst/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-25T14:08:43Z",
        "updated_at": "2023-05-25T20:11:31Z",
        "closed_at": "2023-05-25T20:11:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5250",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5250",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5250.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5250.patch",
            "merged_at": "2023-05-25T20:11:30Z"
        },
        "body": "# Docs: link custom agent page in getting started\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5250/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5250/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5249",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5249/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5249/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5249/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5249",
        "id": 1725901643,
        "node_id": "I_kwDOIPDwls5m3ytL",
        "number": 5249,
        "title": "Issue: Add topics to the GitHub repos",
        "user": {
            "login": "Decryptu",
            "id": 90518536,
            "node_id": "MDQ6VXNlcjkwNTE4NTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/90518536?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Decryptu",
            "html_url": "https://github.com/Decryptu",
            "followers_url": "https://api.github.com/users/Decryptu/followers",
            "following_url": "https://api.github.com/users/Decryptu/following{/other_user}",
            "gists_url": "https://api.github.com/users/Decryptu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Decryptu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Decryptu/subscriptions",
            "organizations_url": "https://api.github.com/users/Decryptu/orgs",
            "repos_url": "https://api.github.com/users/Decryptu/repos",
            "events_url": "https://api.github.com/users/Decryptu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Decryptu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-25T14:05:59Z",
        "updated_at": "2023-12-09T16:06:41Z",
        "closed_at": "2023-12-09T16:06:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHello, would it be possible to add the topics (tags) to the repositories, it would be easier to find and organize them afterward. And its also usefull for external tools that are fetching github API to track repos ! Here is an example from HuggingFace :\r\n.\r\n<img width=\"538\" alt=\"Capture d\u2019e\u0301cran 2023-05-25 a\u0300 15 58 11\" src=\"https://github.com/hwchase17/langchain/assets/90518536/8a0029ad-6c44-426b-bc9d-2b01fcad46a7\">\r\n.\r\nAnd here is a more specific screenshot in case I'm using the wrong words (sry not english) : \r\n.\r\n<img width=\"1440\" alt=\"Capture d\u2019e\u0301cran 2023-05-25 a\u0300 16 03 40\" src=\"https://github.com/hwchase17/langchain/assets/90518536/5aa4574d-1ae4-4bca-8ad5-044f3ce4a3cf\">\r\n\n\n### Suggestion:\n\nI think you already know how, clicking the button on the repo page, then in about > topics, adding stuff like \"python\" \"ai\" \"artificial intelligence\" etc... thank you ! \ud83d\ude03 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5249/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5249/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5248",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5248/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5248/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5248/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5248",
        "id": 1725879506,
        "node_id": "PR_kwDOIPDwls5RWRzw",
        "number": 5248,
        "title": "bump 180",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-25T13:54:23Z",
        "updated_at": "2023-05-25T14:09:51Z",
        "closed_at": "2023-05-25T14:09:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5248",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5248",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5248.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5248.patch",
            "merged_at": "2023-05-25T14:09:50Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5248/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5248/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5247",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5247/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5247/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5247/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5247",
        "id": 1725870922,
        "node_id": "PR_kwDOIPDwls5RWP9p",
        "number": 5247,
        "title": "Weaviate: Add QnA with sources example",
        "user": {
            "login": "hsm207",
            "id": 2398765,
            "node_id": "MDQ6VXNlcjIzOTg3NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2398765?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hsm207",
            "html_url": "https://github.com/hsm207",
            "followers_url": "https://api.github.com/users/hsm207/followers",
            "following_url": "https://api.github.com/users/hsm207/following{/other_user}",
            "gists_url": "https://api.github.com/users/hsm207/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hsm207/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hsm207/subscriptions",
            "organizations_url": "https://api.github.com/users/hsm207/orgs",
            "repos_url": "https://api.github.com/users/hsm207/repos",
            "events_url": "https://api.github.com/users/hsm207/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hsm207/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-25T13:49:21Z",
        "updated_at": "2023-05-25T13:59:12Z",
        "closed_at": "2023-05-25T13:58:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5247",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5247",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5247.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5247.patch",
            "merged_at": "2023-05-25T13:58:34Z"
        },
        "body": "# Add QnA with sources example \n\n<!--\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\n\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\n\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\n-->\n\n<!-- Remove if not applicable -->\n\nFixes: see https://stackoverflow.com/questions/76207160/langchain-doesnt-work-with-weaviate-vector-database-getting-valueerror/76210017#76210017\n\n## Before submitting\n\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\n\n## Who can review?\n\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\n\n<!-- For a quicker response, figure out the right person to tag with @\n\n        @hwchase17 - project lead\n\n        Tracing / Callbacks\n        - @agola11\n\n        Async\n        - @agola11\n\n        DataLoaders\n        - @eyurtsev\n\n        Models\n        - @hwchase17\n        - @agola11\n\n        Agents / Tools / Toolkits\n        - @vowelparrot\n        \n        VectorStores / Retrievers / Memory\n        - @dev2049\n        \n -->\n@dev2049",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5247/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5247/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5246",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5246/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5246/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5246/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5246",
        "id": 1725841983,
        "node_id": "PR_kwDOIPDwls5RWJyu",
        "number": 5246,
        "title": "Added the option of specifying a proxy for the OpenAI API",
        "user": {
            "login": "ymaurer",
            "id": 14054229,
            "node_id": "MDQ6VXNlcjE0MDU0MjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14054229?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ymaurer",
            "html_url": "https://github.com/ymaurer",
            "followers_url": "https://api.github.com/users/ymaurer/followers",
            "following_url": "https://api.github.com/users/ymaurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/ymaurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ymaurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ymaurer/subscriptions",
            "organizations_url": "https://api.github.com/users/ymaurer/orgs",
            "repos_url": "https://api.github.com/users/ymaurer/repos",
            "events_url": "https://api.github.com/users/ymaurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ymaurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-25T13:33:17Z",
        "updated_at": "2023-05-25T16:50:26Z",
        "closed_at": "2023-05-25T16:50:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5246",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5246",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5246.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5246.patch",
            "merged_at": "2023-05-25T16:50:26Z"
        },
        "body": "# Added the option of specifying a proxy for the OpenAI API\r\n\r\nFixes #5243\r\n\r\nIt affects the OpenAI Models\r\n        - @hwchase17\r\n        - @agola11",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5246/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5246/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5245",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5245/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5245/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5245/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5245",
        "id": 1725833687,
        "node_id": "I_kwDOIPDwls5m3iHX",
        "number": 5245,
        "title": "Issue: import 'LLMContentHandler' from 'langchain.llms.sagemaker_endpoint failing",
        "user": {
            "login": "shridhars",
            "id": 3861617,
            "node_id": "MDQ6VXNlcjM4NjE2MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3861617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shridhars",
            "html_url": "https://github.com/shridhars",
            "followers_url": "https://api.github.com/users/shridhars/followers",
            "following_url": "https://api.github.com/users/shridhars/following{/other_user}",
            "gists_url": "https://api.github.com/users/shridhars/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shridhars/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shridhars/subscriptions",
            "organizations_url": "https://api.github.com/users/shridhars/orgs",
            "repos_url": "https://api.github.com/users/shridhars/repos",
            "events_url": "https://api.github.com/users/shridhars/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shridhars/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-25T13:28:29Z",
        "updated_at": "2023-09-14T16:09:07Z",
        "closed_at": "2023-09-14T16:09:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n`!pip3 install langchain==0.0.179 boto3`\r\n\r\nAfter installing langchain using the above command and trying to run the example mentioned in\r\n\r\n[](https://python.langchain.com/en/latest/modules/models/llms/integrations/sagemaker.html)\r\n\r\nGetting the below error.\r\n\r\n`ImportError:` cannot import name 'LLMContentHandler' from 'langchain.llms.sagemaker_endpoint' `(/opt/conda/lib/python3.10/site-packages/langchain/llms/sagemaker_endpoint.py)`\r\n\r\nAm I missing something\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5245/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5245/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5244",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5244/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5244/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5244/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5244",
        "id": 1725828732,
        "node_id": "PR_kwDOIPDwls5RWG5-",
        "number": 5244,
        "title": "Fix typo in docstring of RetryWithErrorOutputParser",
        "user": {
            "login": "mwinterde",
            "id": 60154509,
            "node_id": "MDQ6VXNlcjYwMTU0NTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/60154509?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mwinterde",
            "html_url": "https://github.com/mwinterde",
            "followers_url": "https://api.github.com/users/mwinterde/followers",
            "following_url": "https://api.github.com/users/mwinterde/following{/other_user}",
            "gists_url": "https://api.github.com/users/mwinterde/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mwinterde/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mwinterde/subscriptions",
            "organizations_url": "https://api.github.com/users/mwinterde/orgs",
            "repos_url": "https://api.github.com/users/mwinterde/repos",
            "events_url": "https://api.github.com/users/mwinterde/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mwinterde/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-25T13:25:30Z",
        "updated_at": "2023-05-25T13:59:31Z",
        "closed_at": "2023-05-25T13:59:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5244",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5244",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5244.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5244.patch",
            "merged_at": "2023-05-25T13:59:31Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5244/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5244/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5243",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5243/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5243/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5243/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5243",
        "id": 1725784636,
        "node_id": "I_kwDOIPDwls5m3WI8",
        "number": 5243,
        "title": "Add possibility to set a proxy for openai API access",
        "user": {
            "login": "ymaurer",
            "id": 14054229,
            "node_id": "MDQ6VXNlcjE0MDU0MjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14054229?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ymaurer",
            "html_url": "https://github.com/ymaurer",
            "followers_url": "https://api.github.com/users/ymaurer/followers",
            "following_url": "https://api.github.com/users/ymaurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/ymaurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ymaurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ymaurer/subscriptions",
            "organizations_url": "https://api.github.com/users/ymaurer/orgs",
            "repos_url": "https://api.github.com/users/ymaurer/repos",
            "events_url": "https://api.github.com/users/ymaurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ymaurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-25T13:00:09Z",
        "updated_at": "2023-05-25T16:50:27Z",
        "closed_at": "2023-05-25T16:50:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nFor a deployment behind a corporate proxy, it's useful to be able to access the API by specifying an explicit proxy. \n\n### Motivation\n\nCurrently it's possible to do this by setting the environment variables http_proxy / https_proxy to set a proxy for the whole python interpreter. However this then prevents access to other internal servers. accessing other network resources (e.g. a vector database on a different server, corporate S3 storage etc.) should not go through the proxy. So it's important to be able to just proxy requests for externally hosted APIs. We are working with the OpenAI API and currently we cannot both access those and our qdrant database on another server.\n\n### Your contribution\n\nSince the openai python package supports the proxy parameter, this is relatively easy to implement for the OpenAI API. I'll submit a PR.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5243/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5243/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5242",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5242/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5242/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5242/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5242",
        "id": 1725751778,
        "node_id": "I_kwDOIPDwls5m3OHi",
        "number": 5242,
        "title": "'numpy._DTypeMeta' object is not subscriptable",
        "user": {
            "login": "prashantkanuru",
            "id": 79887087,
            "node_id": "MDQ6VXNlcjc5ODg3MDg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/79887087?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prashantkanuru",
            "html_url": "https://github.com/prashantkanuru",
            "followers_url": "https://api.github.com/users/prashantkanuru/followers",
            "following_url": "https://api.github.com/users/prashantkanuru/following{/other_user}",
            "gists_url": "https://api.github.com/users/prashantkanuru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prashantkanuru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prashantkanuru/subscriptions",
            "organizations_url": "https://api.github.com/users/prashantkanuru/orgs",
            "repos_url": "https://api.github.com/users/prashantkanuru/repos",
            "events_url": "https://api.github.com/users/prashantkanuru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prashantkanuru/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-25T12:43:16Z",
        "updated_at": "2023-09-12T16:13:19Z",
        "closed_at": "2023-09-12T16:13:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI am using langchain version of 0.0.176 and hitting the error of 'numpy._DTypeMeta' object is not subscriptable while using Chroma DB for carrying out any operation. \n\n### Who can help?\n\n@hwchase17  - please help me out with this error -- do I need to upgrade the version of Langchain to overcome this problem\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nCode snippets producing this behavior\r\n1. docsearch=Chroma.from_texts(texts,embeddings,metadatas=[{\"source\":str(i)} for i in range(len(texts))]).as_retriever()\r\n2. docsearch=Chroma.from_texts(texts,embeddings)\r\nquery=\"....\"\r\ndocs=docsearch.similarity_search(query)\r\n3. db1=Chroma.from_documents(docs_1,embeddings)\n\n### Expected behavior\n\nShould be able to use ChromaDb as a retriever without hitting any error.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5242/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5242/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5241",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5241/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5241/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5241/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5241",
        "id": 1725733180,
        "node_id": "I_kwDOIPDwls5m3Jk8",
        "number": 5241,
        "title": "Issue: How to make a request into an agent/tool",
        "user": {
            "login": "cosmin-z",
            "id": 61350549,
            "node_id": "MDQ6VXNlcjYxMzUwNTQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/61350549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cosmin-z",
            "html_url": "https://github.com/cosmin-z",
            "followers_url": "https://api.github.com/users/cosmin-z/followers",
            "following_url": "https://api.github.com/users/cosmin-z/following{/other_user}",
            "gists_url": "https://api.github.com/users/cosmin-z/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cosmin-z/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cosmin-z/subscriptions",
            "organizations_url": "https://api.github.com/users/cosmin-z/orgs",
            "repos_url": "https://api.github.com/users/cosmin-z/repos",
            "events_url": "https://api.github.com/users/cosmin-z/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cosmin-z/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-25T12:31:15Z",
        "updated_at": "2023-09-10T16:12:38Z",
        "closed_at": "2023-09-10T16:12:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nHi everybody, does anyone know if there is a way to make a post request using a custom agent/tool? The idea is when the user need a specific thing  the agent intercept it and the custom tool make it. I can't find anything useful in the documentation, the fact is that when I try it doesn't work.\r\n\r\nIn my case I have:\r\n\r\n`class FlowTool(BaseTool):\r\n    name = \"Call To Max\"\r\n    description = \"use the run function when the user ask to make a call to Max. You don't need any parameter\"\r\n\r\n    def _run(self):\r\n        url = \"https://ex.mex.com/web\"\r\n        data = {\r\n            \"prova\": 'ciao'\r\n        }\r\n        response = requests.post(url, json=data, verify=False)\r\n        return 'done'\r\n     \r\n\r\n    def _arun(self, radius: int):\r\n        raise NotImplementedError(\"This tool does not support async\")`\r\n        \r\n        \r\n        \r\n`tools = [FlowTool()]\r\nagent = initialize_agent(\r\n    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,\r\n    tools=tools,\r\n    llm=llm,\r\n    verbose=True,\r\n    max_iterations=3,\r\n    early_stopping_method='generate',\r\n)`\r\n\r\n\r\n`agent(\"Can you make a call to mex?\")`\r\n\r\n\r\nThank you for helping me\r\n\r\n\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5241/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5241/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5240",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5240/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5240/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5240/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5240",
        "id": 1725728622,
        "node_id": "PR_kwDOIPDwls5RVw8Q",
        "number": 5240,
        "title": "Resolve error in StructuredOutputParser docs",
        "user": {
            "login": "mwinterde",
            "id": 60154509,
            "node_id": "MDQ6VXNlcjYwMTU0NTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/60154509?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mwinterde",
            "html_url": "https://github.com/mwinterde",
            "followers_url": "https://api.github.com/users/mwinterde/followers",
            "following_url": "https://api.github.com/users/mwinterde/following{/other_user}",
            "gists_url": "https://api.github.com/users/mwinterde/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mwinterde/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mwinterde/subscriptions",
            "organizations_url": "https://api.github.com/users/mwinterde/orgs",
            "repos_url": "https://api.github.com/users/mwinterde/repos",
            "events_url": "https://api.github.com/users/mwinterde/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mwinterde/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-25T12:28:10Z",
        "updated_at": "2023-05-25T14:47:26Z",
        "closed_at": "2023-05-25T14:47:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5240",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5240",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5240.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5240.patch",
            "merged_at": "2023-05-25T14:47:26Z"
        },
        "body": "# Resolve error in StructuredOutputParser docs\r\n\r\nDocumentation for `StructuredOutputParser` currently not reproducible, that is, `output_parser.parse(output)` raises an error because the LLM returns a response with an invalid format\r\n\r\n```python\r\n_input = prompt.format_prompt(question=\"what's the capital of france\")\r\noutput = model(_input.to_string())\r\n\r\noutput\r\n\r\n# ?\r\n#\r\n# ```json\r\n# {\r\n# \t\"answer\": \"Paris\",\r\n# \t\"source\": \"https://www.worldatlas.com/articles/what-is-the-capital-of-france.html\"\r\n# }\r\n# ```\r\n```\r\n\r\nWas fixed by adding a question mark to the prompt",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5240/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5240/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5239",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5239/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5239/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5239/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5239",
        "id": 1725718432,
        "node_id": "I_kwDOIPDwls5m3F-g",
        "number": 5239,
        "title": "Issue: ElasticsearchEmbeddings does not work on hosted elasticsearch (Platinum) ",
        "user": {
            "login": "lemig",
            "id": 78766,
            "node_id": "MDQ6VXNlcjc4NzY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/78766?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lemig",
            "html_url": "https://github.com/lemig",
            "followers_url": "https://api.github.com/users/lemig/followers",
            "following_url": "https://api.github.com/users/lemig/following{/other_user}",
            "gists_url": "https://api.github.com/users/lemig/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lemig/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lemig/subscriptions",
            "organizations_url": "https://api.github.com/users/lemig/orgs",
            "repos_url": "https://api.github.com/users/lemig/repos",
            "events_url": "https://api.github.com/users/lemig/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lemig/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jeffvestal",
            "id": 53237856,
            "node_id": "MDQ6VXNlcjUzMjM3ODU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/53237856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffvestal",
            "html_url": "https://github.com/jeffvestal",
            "followers_url": "https://api.github.com/users/jeffvestal/followers",
            "following_url": "https://api.github.com/users/jeffvestal/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffvestal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffvestal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffvestal/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffvestal/orgs",
            "repos_url": "https://api.github.com/users/jeffvestal/repos",
            "events_url": "https://api.github.com/users/jeffvestal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffvestal/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jeffvestal",
                "id": 53237856,
                "node_id": "MDQ6VXNlcjUzMjM3ODU2",
                "avatar_url": "https://avatars.githubusercontent.com/u/53237856?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jeffvestal",
                "html_url": "https://github.com/jeffvestal",
                "followers_url": "https://api.github.com/users/jeffvestal/followers",
                "following_url": "https://api.github.com/users/jeffvestal/following{/other_user}",
                "gists_url": "https://api.github.com/users/jeffvestal/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jeffvestal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jeffvestal/subscriptions",
                "organizations_url": "https://api.github.com/users/jeffvestal/orgs",
                "repos_url": "https://api.github.com/users/jeffvestal/repos",
                "events_url": "https://api.github.com/users/jeffvestal/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jeffvestal/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-25T12:21:19Z",
        "updated_at": "2023-05-31T07:40:33Z",
        "closed_at": "2023-05-31T07:40:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nLangChain 0.0.179,  hosted elasticsearch (Platinum edition)\r\n\r\nV0.0.179 introduced elasticsearch embeddings, great! \r\n\r\nBut it is only implemented for elastic cloud.\r\n\r\nI want to be able to do embeddings on my own elastic cluster.\r\n\r\n@jeffvestal @derickson\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5239/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5239/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5237",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5237/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5237/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5237/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5237",
        "id": 1725616952,
        "node_id": "I_kwDOIPDwls5m2tM4",
        "number": 5237,
        "title": "Token limit reached trying to use plugin",
        "user": {
            "login": "daniellefranca96",
            "id": 134293046,
            "node_id": "U_kgDOCAEmNg",
            "avatar_url": "https://avatars.githubusercontent.com/u/134293046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daniellefranca96",
            "html_url": "https://github.com/daniellefranca96",
            "followers_url": "https://api.github.com/users/daniellefranca96/followers",
            "following_url": "https://api.github.com/users/daniellefranca96/following{/other_user}",
            "gists_url": "https://api.github.com/users/daniellefranca96/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daniellefranca96/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daniellefranca96/subscriptions",
            "organizations_url": "https://api.github.com/users/daniellefranca96/orgs",
            "repos_url": "https://api.github.com/users/daniellefranca96/repos",
            "events_url": "https://api.github.com/users/daniellefranca96/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daniellefranca96/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-25T11:17:24Z",
        "updated_at": "2023-09-10T16:12:44Z",
        "closed_at": "2023-09-10T16:12:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nWhen i try to use chatgpt plugin with agents like showed in the documentantion, some plugins like the MediumPluginGPT will reach the token limit during the task and give an error.\r\n\r\n![image](https://github.com/hwchase17/langchain/assets/134293046/940e6342-6396-4910-be08-117567d5bfdc)\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nhttps://colab.research.google.com/drive/1Pya_AaPucsgw__OJa0Xho1u8OI1xFqYB#scrollTo=Ri2RPTKrxF6b\n\n### Expected behavior\n\nShould return the ten new most recent about AI",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5237/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5237/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5236",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5236/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5236/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5236/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5236",
        "id": 1725576992,
        "node_id": "I_kwDOIPDwls5m2jcg",
        "number": 5236,
        "title": "Slots Filling in Langchain",
        "user": {
            "login": "Sadaf-Syeda",
            "id": 59745163,
            "node_id": "MDQ6VXNlcjU5NzQ1MTYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/59745163?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sadaf-Syeda",
            "html_url": "https://github.com/Sadaf-Syeda",
            "followers_url": "https://api.github.com/users/Sadaf-Syeda/followers",
            "following_url": "https://api.github.com/users/Sadaf-Syeda/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sadaf-Syeda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sadaf-Syeda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sadaf-Syeda/subscriptions",
            "organizations_url": "https://api.github.com/users/Sadaf-Syeda/orgs",
            "repos_url": "https://api.github.com/users/Sadaf-Syeda/repos",
            "events_url": "https://api.github.com/users/Sadaf-Syeda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sadaf-Syeda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-25T10:50:38Z",
        "updated_at": "2023-09-17T13:10:59Z",
        "closed_at": "2023-09-15T16:10:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI need to use OpenAPI for calling an API , but that API needs some params in body, and that value needs to be taken from User, \r\nI need to understand the way that can take slots name that needs to be filled from user , is there any wat to do this?\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [X] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nNeed code\n\n### Expected behavior\n\nSlots filling from user ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5236/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5236/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5235",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5235/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5235/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5235/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5235",
        "id": 1725555032,
        "node_id": "I_kwDOIPDwls5m2eFY",
        "number": 5235,
        "title": "Support for ttl in DynamoDBChatMessageHistory",
        "user": {
            "login": "Benyuel",
            "id": 5361725,
            "node_id": "MDQ6VXNlcjUzNjE3MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5361725?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Benyuel",
            "html_url": "https://github.com/Benyuel",
            "followers_url": "https://api.github.com/users/Benyuel/followers",
            "following_url": "https://api.github.com/users/Benyuel/following{/other_user}",
            "gists_url": "https://api.github.com/users/Benyuel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Benyuel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Benyuel/subscriptions",
            "organizations_url": "https://api.github.com/users/Benyuel/orgs",
            "repos_url": "https://api.github.com/users/Benyuel/repos",
            "events_url": "https://api.github.com/users/Benyuel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Benyuel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-25T10:35:27Z",
        "updated_at": "2023-11-24T14:35:31Z",
        "closed_at": "2023-09-10T16:12:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nAllow a user to specify a record ttl for messages/sessions persisted to dynamodb in https://github.com/hwchase17/langchain/blob/5cfa72a130f675c8da5963a11d416f553f692e72/langchain/memory/chat_message_histories/dynamodb.py#L17-L20.\n\n### Motivation\n\nThis will allow automated purging of chat history after a specified time period.  \n\n### Your contribution\n\nMaybe, depends on my available time.  ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5235/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5235/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5234",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5234/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5234/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5234/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5234",
        "id": 1725509252,
        "node_id": "I_kwDOIPDwls5m2S6E",
        "number": 5234,
        "title": "Make Redis Vector database operations Asynchronous",
        "user": {
            "login": "Octforce",
            "id": 131253681,
            "node_id": "U_kgDOB9LFsQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/131253681?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Octforce",
            "html_url": "https://github.com/Octforce",
            "followers_url": "https://api.github.com/users/Octforce/followers",
            "following_url": "https://api.github.com/users/Octforce/following{/other_user}",
            "gists_url": "https://api.github.com/users/Octforce/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Octforce/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Octforce/subscriptions",
            "organizations_url": "https://api.github.com/users/Octforce/orgs",
            "repos_url": "https://api.github.com/users/Octforce/repos",
            "events_url": "https://api.github.com/users/Octforce/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Octforce/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-25T10:04:53Z",
        "updated_at": "2023-09-25T16:07:01Z",
        "closed_at": "2023-09-25T16:07:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nThere are other vector database that support the use of async in Langchain, adding Redis to those list would be better for programmers who use asynchronous programming in python. I believe with package like aioredis, this should be easily achievable.\r\n\r\n### Motivation\r\n\r\nThe motivation to to be able to support python async programmers with this feature and also to boost performance when querying from the vector store and inserting data into the vector store.\r\n\r\n### Your contribution\r\n\r\nI can contribute by opening a PR or by testing the code once it is done.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5234/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5234/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5233",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5233/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5233/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5233/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5233",
        "id": 1725368096,
        "node_id": "I_kwDOIPDwls5m1wcg",
        "number": 5233,
        "title": "ChatVertexAI is not imported",
        "user": {
            "login": "marouane-tradelab",
            "id": 10705961,
            "node_id": "MDQ6VXNlcjEwNzA1OTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/10705961?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marouane-tradelab",
            "html_url": "https://github.com/marouane-tradelab",
            "followers_url": "https://api.github.com/users/marouane-tradelab/followers",
            "following_url": "https://api.github.com/users/marouane-tradelab/following{/other_user}",
            "gists_url": "https://api.github.com/users/marouane-tradelab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marouane-tradelab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marouane-tradelab/subscriptions",
            "organizations_url": "https://api.github.com/users/marouane-tradelab/orgs",
            "repos_url": "https://api.github.com/users/marouane-tradelab/repos",
            "events_url": "https://api.github.com/users/marouane-tradelab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marouane-tradelab/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-25T08:46:26Z",
        "updated_at": "2023-06-02T11:55:03Z",
        "closed_at": "2023-06-02T11:55:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHello, \r\n\r\nI'm trying to use ChatVertexAI and I noticed that the following import is not working : \r\n\r\n```python \r\nfrom langchain.chat_models import ChatVertexAI\r\n```\r\nBut this one is working correctly : \r\n```python\r\nfrom langchain.chat_models.vertexai import ChatVertexAI\r\n```\r\n\n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. install the main branch: `pip install git+https://github.com/hwchase17/langchain.git`\r\n2. try to import `from langchain.chat_models import ChatVertexAI`\r\n3. try to import `from langchain.chat_models.vertexai import ChatVertexAI`\r\n\n\n### Expected behavior\n\nThe import `from langchain.chat_models import ChatVertexAI` should work",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5233/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5233/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5232",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5232/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5232/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5232/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5232",
        "id": 1725346001,
        "node_id": "PR_kwDOIPDwls5RUdLR",
        "number": 5232,
        "title": "remove extra \"\\n\" to ensure that the format of the description, examp\u2026",
        "user": {
            "login": "pengqu123",
            "id": 82029664,
            "node_id": "MDQ6VXNlcjgyMDI5NjY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/82029664?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pengqu123",
            "html_url": "https://github.com/pengqu123",
            "followers_url": "https://api.github.com/users/pengqu123/followers",
            "following_url": "https://api.github.com/users/pengqu123/following{/other_user}",
            "gists_url": "https://api.github.com/users/pengqu123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pengqu123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pengqu123/subscriptions",
            "organizations_url": "https://api.github.com/users/pengqu123/orgs",
            "repos_url": "https://api.github.com/users/pengqu123/repos",
            "events_url": "https://api.github.com/users/pengqu123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pengqu123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-25T08:32:08Z",
        "updated_at": "2023-05-25T14:46:39Z",
        "closed_at": "2023-05-25T14:46:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5232",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5232",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5232.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5232.patch",
            "merged_at": "2023-05-25T14:46:39Z"
        },
        "body": "remove extra \"\\n\" to ensure that the format of the description, example, and prompt&generation are completely consistent.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5232/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5232/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5231",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5231/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5231/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5231/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5231",
        "id": 1725320729,
        "node_id": "PR_kwDOIPDwls5RUXwM",
        "number": 5231,
        "title": "remove extra \"\\n\" to ensure that the format of the description, example, and prompt&generation are totally consistent.",
        "user": {
            "login": "pengqu123",
            "id": 82029664,
            "node_id": "MDQ6VXNlcjgyMDI5NjY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/82029664?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pengqu123",
            "html_url": "https://github.com/pengqu123",
            "followers_url": "https://api.github.com/users/pengqu123/followers",
            "following_url": "https://api.github.com/users/pengqu123/following{/other_user}",
            "gists_url": "https://api.github.com/users/pengqu123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pengqu123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pengqu123/subscriptions",
            "organizations_url": "https://api.github.com/users/pengqu123/orgs",
            "repos_url": "https://api.github.com/users/pengqu123/repos",
            "events_url": "https://api.github.com/users/pengqu123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pengqu123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-25T08:16:05Z",
        "updated_at": "2023-05-25T08:16:56Z",
        "closed_at": "2023-05-25T08:16:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5231",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5231",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5231.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5231.patch",
            "merged_at": null
        },
        "body": "# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5231/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5231/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5229",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5229/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5229/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5229/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5229",
        "id": 1725213622,
        "node_id": "I_kwDOIPDwls5m1Ku2",
        "number": 5229,
        "title": "AsyncCallbacks : Wrong document and stuck when running in terminal ,which finnal turn out to be error retry",
        "user": {
            "login": "jianglanCao",
            "id": 37798223,
            "node_id": "MDQ6VXNlcjM3Nzk4MjIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/37798223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jianglanCao",
            "html_url": "https://github.com/jianglanCao",
            "followers_url": "https://api.github.com/users/jianglanCao/followers",
            "following_url": "https://api.github.com/users/jianglanCao/following{/other_user}",
            "gists_url": "https://api.github.com/users/jianglanCao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jianglanCao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jianglanCao/subscriptions",
            "organizations_url": "https://api.github.com/users/jianglanCao/orgs",
            "repos_url": "https://api.github.com/users/jianglanCao/repos",
            "events_url": "https://api.github.com/users/jianglanCao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jianglanCao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-25T07:02:21Z",
        "updated_at": "2023-10-02T16:07:46Z",
        "closed_at": "2023-10-02T16:07:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\ncode snippet:\r\nhttps://python.langchain.com/en/latest/modules/callbacks/getting_started.html?highlight=callbacks#async-callbacks\r\npython:Python 3.9.6\r\nlangchain :Version: 0.0.178\r\n\n\n### Who can help?\n\n@agola11 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [X] Callbacks/Tracing\n- [X] Async\n\n### Reproduction\n\n\r\n1.copy the source code of  Async Callbacks from documentation\r\n  the code is wrong ,including syntax error to await outside the async function and missing import module or functions.\r\n\r\n2.after making a litte fix,run it again.\r\n  the code is :   \r\nimport asyncio,logging\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom typing import Any, Dict, List\r\nfrom langchain.schema import LLMResult,HumanMessage\r\nfrom langchain.callbacks.base import AsyncCallbackHandler,BaseCallbackHandler\r\n\r\nclass MyCustomSyncHandler(BaseCallbackHandler):\r\n    def on_llm_new_token(self, token: str, **kwargs) -> None:\r\n        print(f\"Sync handler being called in a `thread_pool_executor`: token: {token}\")\r\n\r\nclass MyCustomAsyncHandler(AsyncCallbackHandler):\r\n    \"\"\"Async callback handler that can be used to handle callbacks from langchain.\"\"\"\r\n\r\n    async def on_llm_start(\r\n        self, serialized: Dict[str, Any], prompts: List[str], **kwargs: Any\r\n    ) -> None:\r\n        \"\"\"Run when chain starts running.\"\"\"\r\n        print(\"zzzz....\")\r\n        await asyncio.sleep(0.3)\r\n        class_name = serialized[\"name\"]\r\n        print(\"Hi! I just woke up. Your llm is starting\")\r\n\r\n    async def on_llm_end(self, response: LLMResult, **kwargs: Any) -> None:\r\n        \"\"\"Run when chain ends running.\"\"\"\r\n        print(\"zzzz....\")\r\n        await asyncio.sleep(0.3)\r\n        print(\"Hi! I just woke up. Your llm is ending\")\r\n\r\n# To enable streaming, we pass in `streaming=True` to the ChatModel constructor\r\n# Additionally, we pass in a list with our custom handler\r\nasync def main():\r\n\r\n    chat = ChatOpenAI(openai_api_key=\"xxxxxx\",max_tokens=25, streaming=True, callbacks=[MyCustomSyncHandler(), MyCustomAsyncHandler()])\r\n\r\n    await chat.agenerate([[HumanMessage(content=\"Tell me a joke\")]])\r\n\r\nasyncio.run(main())\r\n\r\n3.it can not be acted as thew documentation showed, it stuck as the following\r\n   ![image](https://github.com/hwchase17/langchain/assets/37798223/6be6af3e-6741-4b9c-bcfb-28ec349906f2)\r\n\r\n\r\n\n\n### Expected behavior\n\nshould act as the documentation said",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5229/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5229/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5227",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5227/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5227/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5227/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5227",
        "id": 1725018973,
        "node_id": "I_kwDOIPDwls5m0bNd",
        "number": 5227,
        "title": "Issue: Dataframe with conversation agent for chat models",
        "user": {
            "login": "Rashie",
            "id": 10414892,
            "node_id": "MDQ6VXNlcjEwNDE0ODky",
            "avatar_url": "https://avatars.githubusercontent.com/u/10414892?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Rashie",
            "html_url": "https://github.com/Rashie",
            "followers_url": "https://api.github.com/users/Rashie/followers",
            "following_url": "https://api.github.com/users/Rashie/following{/other_user}",
            "gists_url": "https://api.github.com/users/Rashie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Rashie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Rashie/subscriptions",
            "organizations_url": "https://api.github.com/users/Rashie/orgs",
            "repos_url": "https://api.github.com/users/Rashie/repos",
            "events_url": "https://api.github.com/users/Rashie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Rashie/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-25T03:26:09Z",
        "updated_at": "2023-09-10T16:12:59Z",
        "closed_at": "2023-09-10T16:12:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\r\n\r\nI want to build a langchain which can\r\n\u2022 can chat with human on greetings etc\r\nAnd\r\n\u2022 can do what the create_csv_agent does \r\nAnd \r\n\u2022 has a memory.\r\n\r\nSo i was using a conversational agent for chat models to do this with memory buffer\r\n\r\nIt is able to perform 1 and 3 from the things i want. I also gave \r\ntools = [PythonAstREPLTool(locals={\"df\": df})] as the tools to this agent. \r\n\r\n But i am confused where i should give the dataframe df for the chat model similar to how we give for create_csv_agent. \r\n\r\nI tried giving it in the prompt by doing prompt.partial but i got an error saying partial method not implemented for chatprompttemplate.\r\n\r\nI want the chat model to know that it has access to the df dataframe and questions like \"what are top 2 issues \" should be answered using that dataframe. \r\n\r\nRight now, it outputs saying that, sure i can provide top 2 issues, but please provide information on what data you want me to work on.\r\n\r\nCan you help on this? Please let me know if you need additional information \r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5227/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5227/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5226",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5226/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5226/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5226/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5226",
        "id": 1724948886,
        "node_id": "I_kwDOIPDwls5m0KGW",
        "number": 5226,
        "title": "Write File action_input issues. How to handle when action input is large",
        "user": {
            "login": "abhaybhargav",
            "id": 4427607,
            "node_id": "MDQ6VXNlcjQ0Mjc2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4427607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abhaybhargav",
            "html_url": "https://github.com/abhaybhargav",
            "followers_url": "https://api.github.com/users/abhaybhargav/followers",
            "following_url": "https://api.github.com/users/abhaybhargav/following{/other_user}",
            "gists_url": "https://api.github.com/users/abhaybhargav/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abhaybhargav/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abhaybhargav/subscriptions",
            "organizations_url": "https://api.github.com/users/abhaybhargav/orgs",
            "repos_url": "https://api.github.com/users/abhaybhargav/repos",
            "events_url": "https://api.github.com/users/abhaybhargav/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abhaybhargav/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-25T01:38:22Z",
        "updated_at": "2023-10-24T16:08:23Z",
        "closed_at": "2023-10-24T16:08:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nI am trying to use the File System tools to generate some boilerplate source code using OpenAI's APIs, and the chain works, but does not write the file to the file-system. \r\n\r\nI think it is because there's an issue with the size of the text that needs to be written to the file, the agent fails to execute\r\n\r\nMy code is as follows\r\n\r\n```python\r\n\r\nimport os\r\nfrom langchain.tools.file_management import *\r\nfrom langchain.agents.agent_toolkits import FileManagementToolkit\r\nfrom langchain.llms.openai import OpenAI\r\nfrom langchain.agents import initialize_agent, Tool\r\nfrom langchain.agents import AgentType\r\nfrom dotenv import load_dotenv\r\n\r\nload_dotenv()\r\n\r\ntoolkit = FileManagementToolkit()\r\nwrite_files = toolkit.get_tools()[5]\r\nlist_files = toolkit.get_tools()[6]\r\nread_files = toolkit.get_tools()[4]\r\nllm = OpenAI(temperature=0)\r\ntools = [\r\n    Tool(\r\n        name=\"Write Files to directory\",\r\n        func = write_files.run,\r\n        description = \"useful for when you need to write files to a local file system\"\r\n    ),\r\n    Tool(\r\n        name=\"List Files in directory\",\r\n        func = list_files.run,\r\n        description = \"useful for when you need to list files in a local file system\"\r\n    ),\r\n    Tool(\r\n        name=\"Read Files in directory\",\r\n        func = read_files.run,\r\n        description = \"useful for when you need to read files in a local file system\"\r\n    )\r\n]\r\n\r\nself_write_files_git = initialize_agent(\r\n    tools,\r\n    llm,\r\n    agent = AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,\r\n    verbose = True\r\n)\r\nself_write_files_git.run(\"Generate a source code for a boilerplate Python Flask Application\")\r\n\r\n```\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [X] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce\r\n\r\n1. My original source code is this\r\n\r\n```python\r\n\r\nimport os\r\nfrom langchain.tools.file_management import *\r\nfrom langchain.agents.agent_toolkits import FileManagementToolkit\r\nfrom langchain.llms.openai import OpenAI\r\nfrom langchain.agents import initialize_agent, Tool\r\nfrom langchain.agents import AgentType\r\nfrom dotenv import load_dotenv\r\n\r\nload_dotenv()\r\n\r\ntoolkit = FileManagementToolkit()\r\nwrite_files = toolkit.get_tools()[5]\r\nlist_files = toolkit.get_tools()[6]\r\nread_files = toolkit.get_tools()[4]\r\nllm = OpenAI(temperature=0)\r\ntools = [\r\n    Tool(\r\n        name=\"Write Files to directory\",\r\n        func = write_files.run,\r\n        description = \"useful for when you need to write files to a local file system\"\r\n    ),\r\n    Tool(\r\n        name=\"List Files in directory\",\r\n        func = list_files.run,\r\n        description = \"useful for when you need to list files in a local file system\"\r\n    ),\r\n    Tool(\r\n        name=\"Read Files in directory\",\r\n        func = read_files.run,\r\n        description = \"useful for when you need to read files in a local file system\"\r\n    )\r\n]\r\n\r\nself_write_files_git = initialize_agent(\r\n    tools,\r\n    llm,\r\n    agent = AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,\r\n    verbose = True\r\n)\r\nself_write_files_git.run(\"Generate a source code for a boilerplate Python Flask Application\")\r\n\r\n```\r\n\r\n2. You can use it with a Jupyter Notebook/etc to run it you'll see the following\r\n\r\nAgentExecutor creates the right action input, but the action_input seems cut off (JSON not properly formatted) and as a result, likely doesnt write to the filesystem \r\n\r\n### Expected behavior\r\n\r\nBased on the plan, which shows up, I would assume that it would write it to the file-system",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5226/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5226/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5225",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5225/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5225/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5225/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5225",
        "id": 1724924866,
        "node_id": "I_kwDOIPDwls5m0EPC",
        "number": 5225,
        "title": "Issue:How to use callback functions in a Langchain sequential chain",
        "user": {
            "login": "vencent-debug",
            "id": 62237353,
            "node_id": "MDQ6VXNlcjYyMjM3MzUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/62237353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vencent-debug",
            "html_url": "https://github.com/vencent-debug",
            "followers_url": "https://api.github.com/users/vencent-debug/followers",
            "following_url": "https://api.github.com/users/vencent-debug/following{/other_user}",
            "gists_url": "https://api.github.com/users/vencent-debug/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vencent-debug/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vencent-debug/subscriptions",
            "organizations_url": "https://api.github.com/users/vencent-debug/orgs",
            "repos_url": "https://api.github.com/users/vencent-debug/repos",
            "events_url": "https://api.github.com/users/vencent-debug/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vencent-debug/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-25T01:00:58Z",
        "updated_at": "2023-11-20T13:09:03Z",
        "closed_at": "2023-10-28T16:06:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHow to use callback functions in a Langchain sequential chain, such as 1->2->3. I want to loop through the 2 function n times in the middle, where the output of the 2 function is its input. At the end of the loop, the output of the 2 function is input to the 3 function, and the final result is obtained\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5225/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5225/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5224",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5224/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5224/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5224/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5224",
        "id": 1724922616,
        "node_id": "I_kwDOIPDwls5m0Dr4",
        "number": 5224,
        "title": "PALChain loading fails",
        "user": {
            "login": "liangz1",
            "id": 7851093,
            "node_id": "MDQ6VXNlcjc4NTEwOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7851093?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liangz1",
            "html_url": "https://github.com/liangz1",
            "followers_url": "https://api.github.com/users/liangz1/followers",
            "following_url": "https://api.github.com/users/liangz1/following{/other_user}",
            "gists_url": "https://api.github.com/users/liangz1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liangz1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liangz1/subscriptions",
            "organizations_url": "https://api.github.com/users/liangz1/orgs",
            "repos_url": "https://api.github.com/users/liangz1/repos",
            "events_url": "https://api.github.com/users/liangz1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liangz1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-25T00:58:09Z",
        "updated_at": "2023-05-29T13:44:48Z",
        "closed_at": "2023-05-29T13:44:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.176\n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nfrom langchain.chains import PALChain\r\nfrom langchain import OpenAI\r\n\r\nllm = OpenAI(temperature=0, max_tokens=512)\r\npal_chain = PALChain.from_math_prompt(llm, verbose=True)\r\nquestion = \"Jan has three times the number of pets as Marcia. Marcia has two more pets than Cindy. If Cindy has four pets, how many total pets do the three have?\"\r\npal_chain.save(\"/Users/liang.zhang/pal_chain.yaml\")\r\nloaded_chain = load_chain(\"/Users/liang.zhang/pal_chain.yaml\")\r\n```\r\nError:\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nInput In [17], in <cell line: 1>()\r\n----> 1 loaded_chain = load_chain(\"/Users/liang.zhang/pal_chain.yaml\")\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/langchain/chains/loading.py:449, in load_chain(path, **kwargs)\r\n    447     return hub_result\r\n    448 else:\r\n--> 449     return _load_chain_from_file(path, **kwargs)\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/langchain/chains/loading.py:476, in _load_chain_from_file(file, **kwargs)\r\n    473     config[\"memory\"] = kwargs.pop(\"memory\")\r\n    475 # Load the chain from the config now.\r\n--> 476 return load_chain_from_config(config, **kwargs)\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/langchain/chains/loading.py:439, in load_chain_from_config(config, **kwargs)\r\n    436     raise ValueError(f\"Loading {config_type} chain not supported\")\r\n    438 chain_loader = type_to_loader_dict[config_type]\r\n--> 439 return chain_loader(config, **kwargs)\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/langchain/chains/loading.py:234, in _load_pal_chain(config, **kwargs)\r\n    232 if \"llm\" in config:\r\n    233     llm_config = config.pop(\"llm\")\r\n--> 234     llm = load_llm_from_config(llm_config)\r\n    235 elif \"llm_path\" in config:\r\n    236     llm = load_llm(config.pop(\"llm_path\"))\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/langchain/llms/loading.py:14, in load_llm_from_config(config)\r\n     12 def load_llm_from_config(config: dict) -> BaseLLM:\r\n     13     \"\"\"Load LLM from Config Dict.\"\"\"\r\n---> 14     if \"_type\" not in config:\r\n     15         raise ValueError(\"Must specify an LLM Type in config\")\r\n     16     config_type = config.pop(\"_type\")\r\n\r\nTypeError: argument of type 'NoneType' is not iterable\r\n```\r\n\n\n### Expected behavior\n\nNo errors should occur.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5224/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5224/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5223",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5223/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5223/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5223/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5223",
        "id": 1724903846,
        "node_id": "PR_kwDOIPDwls5RS_gD",
        "number": 5223,
        "title": "Remove API key from docs",
        "user": {
            "login": "kbressem",
            "id": 37253540,
            "node_id": "MDQ6VXNlcjM3MjUzNTQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/37253540?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kbressem",
            "html_url": "https://github.com/kbressem",
            "followers_url": "https://api.github.com/users/kbressem/followers",
            "following_url": "https://api.github.com/users/kbressem/following{/other_user}",
            "gists_url": "https://api.github.com/users/kbressem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kbressem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kbressem/subscriptions",
            "organizations_url": "https://api.github.com/users/kbressem/orgs",
            "repos_url": "https://api.github.com/users/kbressem/repos",
            "events_url": "https://api.github.com/users/kbressem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kbressem/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-25T00:28:00Z",
        "updated_at": "2023-05-25T05:25:40Z",
        "closed_at": "2023-05-25T05:25:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5223",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5223",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5223.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5223.patch",
            "merged_at": "2023-05-25T05:25:40Z"
        },
        "body": "I found an API key for `serpapi_api_key` while reading the docs. It seems to have been modified very recently. Removed it in this PR @hwchase17 - project lead\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5223/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5223/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5222",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5222/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5222/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5222/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5222",
        "id": 1724876860,
        "node_id": "PR_kwDOIPDwls5RS5vP",
        "number": 5222,
        "title": "fix a mistake in concepts.md",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T23:46:56Z",
        "updated_at": "2023-05-25T15:31:38Z",
        "closed_at": "2023-05-25T04:47:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5222",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5222",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5222.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5222.patch",
            "merged_at": "2023-05-25T04:47:23Z"
        },
        "body": "# fix a mistake in concepts.md\r\n\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5222/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5222/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5221",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5221/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5221/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5221/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5221",
        "id": 1724874802,
        "node_id": "PR_kwDOIPDwls5RS5RS",
        "number": 5221,
        "title": "feat: add Momento as a standard cache and chat message history provider",
        "user": {
            "login": "malandis",
            "id": 3690240,
            "node_id": "MDQ6VXNlcjM2OTAyNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3690240?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malandis",
            "html_url": "https://github.com/malandis",
            "followers_url": "https://api.github.com/users/malandis/followers",
            "following_url": "https://api.github.com/users/malandis/following{/other_user}",
            "gists_url": "https://api.github.com/users/malandis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malandis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malandis/subscriptions",
            "organizations_url": "https://api.github.com/users/malandis/orgs",
            "repos_url": "https://api.github.com/users/malandis/repos",
            "events_url": "https://api.github.com/users/malandis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malandis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-24T23:44:38Z",
        "updated_at": "2023-05-26T02:13:21Z",
        "closed_at": "2023-05-26T02:13:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5221",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5221",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5221.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5221.patch",
            "merged_at": "2023-05-26T02:13:21Z"
        },
        "body": "# Add Momento as a standard cache and chat message history provider\r\n\r\nThis PR adds Momento as a standard caching provider. Implements the interface, adds integration tests, and documentation. We also add Momento as a chat history message provider along with integration tests, and documentation.\r\n\r\n[Momento](https://www.gomomento.com/) is a fully serverless cache. Similar to S3 or DynamoDB, it requires zero configuration, infrastructure management, and is instantly available. Users sign up for free and get 50GB of data in/out for free every month.\r\n\r\n## Before submitting\r\n\r\n\u2705 We have added documentation, notebooks, and integration tests demonstrating usage.\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n\r\ncc @hwchase17  @dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5221/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5221/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5220",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5220/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5220/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5220/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5220",
        "id": 1724865109,
        "node_id": "PR_kwDOIPDwls5RS3HN",
        "number": 5220,
        "title": "Change Default GoogleDriveLoader Behavior to not Load Trashed Files (issue #5104)",
        "user": {
            "login": "NickL77",
            "id": 8673939,
            "node_id": "MDQ6VXNlcjg2NzM5Mzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8673939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NickL77",
            "html_url": "https://github.com/NickL77",
            "followers_url": "https://api.github.com/users/NickL77/followers",
            "following_url": "https://api.github.com/users/NickL77/following{/other_user}",
            "gists_url": "https://api.github.com/users/NickL77/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NickL77/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NickL77/subscriptions",
            "organizations_url": "https://api.github.com/users/NickL77/orgs",
            "repos_url": "https://api.github.com/users/NickL77/repos",
            "events_url": "https://api.github.com/users/NickL77/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NickL77/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T23:32:37Z",
        "updated_at": "2023-05-25T07:49:17Z",
        "closed_at": "2023-05-25T05:26:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5220",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5220",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5220.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5220.patch",
            "merged_at": "2023-05-25T05:26:18Z"
        },
        "body": "# Change Default GoogleDriveLoader Behavior to not Load Trashed Files (issue #5104)\r\n\r\nFixes #5104\r\n\r\nIf the previous behavior of loading files that used to live in the folder, but are now trashed, you can use the `load_trashed_files` parameter:\r\n\r\n```\r\nloader = GoogleDriveLoader(\r\n    folder_id=\"1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5\",\r\n    recursive=False,\r\n    load_trashed_files=True\r\n)\r\n```\r\n\r\nAs not loading trashed files should be expected behavior, should we\r\n1. even provide the `load_trashed_files` parameter?\r\n2. add documentation? Feels most users will stick with default behavior\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\nDataLoaders\r\n- @eyurtsev\r\n\r\nTwitter: [@nicholasliu77](https://twitter.com/nicholasliu77)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5220/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5220/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5219",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5219/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5219/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5219/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5219",
        "id": 1724850211,
        "node_id": "PR_kwDOIPDwls5RSz55",
        "number": 5219,
        "title": "docs: `ecosystem/integrations` update 1",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T23:12:37Z",
        "updated_at": "2023-05-29T15:24:51Z",
        "closed_at": "2023-05-29T14:25:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5219",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5219",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5219.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5219.patch",
            "merged_at": "2023-05-29T14:25:17Z"
        },
        "body": "# docs: ecosystem/integrations update\r\n\r\nIt is the first in a series of `ecosystem/integrations` updates.\r\n\r\nThe ecosystem/integrations list is missing many integrations.\r\nI'm adding the missing integrations in a consistent format: \r\n1. description of the integrated system\r\n2. `Installation and Setup` section with 'pip install ...`, Key setup, and other necessary settings\r\n3. Sections like `LLM`, `Text Embedding Models`, `Chat Models`... with links to correspondent examples and imports of the used classes.\r\n\r\nThis PR keeps new docs, that are presented in the `docs/modules/models/text_embedding/examples` but missed in the `ecosystem/integrations`. The next PRs will cover the next example sections.\r\n\r\nAlso updated `integrations.rst`: added the `Dependencies` section with a link to the packages used in LangChain.\r\n\r\n## Who can review?\r\n\r\n@hwchase17\r\n@eyurtsev\r\n@dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5219/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5219/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5218",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5218/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5218/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5218/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5218",
        "id": 1724840210,
        "node_id": "PR_kwDOIPDwls5RSxu6",
        "number": 5218,
        "title": "Add C Transformers for GGML Models",
        "user": {
            "login": "marella",
            "id": 1623046,
            "node_id": "MDQ6VXNlcjE2MjMwNDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1623046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marella",
            "html_url": "https://github.com/marella",
            "followers_url": "https://api.github.com/users/marella/followers",
            "following_url": "https://api.github.com/users/marella/following{/other_user}",
            "gists_url": "https://api.github.com/users/marella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marella/subscriptions",
            "organizations_url": "https://api.github.com/users/marella/orgs",
            "repos_url": "https://api.github.com/users/marella/repos",
            "events_url": "https://api.github.com/users/marella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marella/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4899415699,
                "node_id": "LA_kwDOIPDwls8AAAABJAcmkw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/llms",
                "name": "llms",
                "color": "7CDBB2",
                "default": false,
                "description": ""
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T22:59:29Z",
        "updated_at": "2023-05-26T13:24:45Z",
        "closed_at": "2023-05-25T20:42:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5218",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5218",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5218.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5218.patch",
            "merged_at": "2023-05-25T20:42:44Z"
        },
        "body": "# Add C Transformers for GGML Models\r\n\r\nHi,\r\n\r\nI created Python bindings for the GGML models: https://github.com/marella/ctransformers\r\n\r\nCurrently it supports GPT-2, GPT-J, GPT-NeoX, LLaMA, MPT, etc. See [Supported Models](https://github.com/marella/ctransformers#supported-models).\r\n\r\n\r\nIt provides a unified interface for all models:\r\n\r\n```python\r\nfrom langchain.llms import CTransformers\r\n\r\nllm = CTransformers(model='/path/to/ggml-gpt-2.bin', model_type='gpt2')\r\n\r\nprint(llm('AI is going to'))\r\n```\r\n\r\nIt can be used with models hosted on the Hugging Face Hub:\r\n\r\n```py\r\nllm = CTransformers(model='marella/gpt-2-ggml')\r\n```\r\n\r\nIt supports streaming:\r\n\r\n```py\r\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\n\r\nllm = CTransformers(model='marella/gpt-2-ggml', callbacks=[StreamingStdOutCallbackHandler()])\r\n```\r\n\r\nPlease see [README](https://github.com/marella/ctransformers#readme) for more details.\r\n\r\n---\r\n\r\n@hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5218/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5218/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5217",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5217/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5217/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5217/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5217",
        "id": 1724833952,
        "node_id": "PR_kwDOIPDwls5RSwXG",
        "number": 5217,
        "title": "Update the parameters of the<openai. embedding. create>interface",
        "user": {
            "login": "WuKe-CN",
            "id": 107195630,
            "node_id": "U_kgDOBmOs7g",
            "avatar_url": "https://avatars.githubusercontent.com/u/107195630?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/WuKe-CN",
            "html_url": "https://github.com/WuKe-CN",
            "followers_url": "https://api.github.com/users/WuKe-CN/followers",
            "following_url": "https://api.github.com/users/WuKe-CN/following{/other_user}",
            "gists_url": "https://api.github.com/users/WuKe-CN/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/WuKe-CN/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/WuKe-CN/subscriptions",
            "organizations_url": "https://api.github.com/users/WuKe-CN/orgs",
            "repos_url": "https://api.github.com/users/WuKe-CN/repos",
            "events_url": "https://api.github.com/users/WuKe-CN/events{/privacy}",
            "received_events_url": "https://api.github.com/users/WuKe-CN/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-24T22:51:27Z",
        "updated_at": "2023-05-26T09:25:08Z",
        "closed_at": "2023-05-26T09:25:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5217",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5217",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5217.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5217.patch",
            "merged_at": null
        },
        "body": "# Update the parameters of the<openai. embedding. create>interface,restored interface validity\r\n\r\n<!--\r\n\r\nIn the latest version, the parameters for calling the embedding.create interface are engine, input, and so on. Due to the existence of engine, the program will report an error. The specific error is that the interface is not supported. After checking the official website of openai, it is found that the parameters required for this interface are module (which is exactly what I have corrected), input, and user (not required). I found that all engine related interfaces are currently deprecated, and according to the previous code comments, The services for Azure have not appeared on the official website either\r\n\r\n-->\r\nI changed all the engine parameters in the program to modles, and marked out other unnecessary parameters. It should be noted that I did not add user to the parameter list because I was afraid of unexpected errors, as this parameter is not a required item. I used \"/embedding/test_ openai.py\" and it has been tested. the test results are normal\r\n\r\nIt should be noted that I use \"make integration_tests\" When testing, the program did not test\"/embedding/test_ Openai.py\", which resulted in the error report not mentioning this error. I think this may also be a bug. To verify the effectiveness of the modification, I debugged this separate test file and found that the existing version reported an error. After the modification, the test passed\r\n\r\n\r\nI did not add a new integration, I only restored the effectiveness of the interface mentioned above. I tested the test units involved in the modified files separately and found that the modified files can pass the test normally!\r\n\r\n\r\n\r\n-@hwchase17\r\n\r\n-@agola11",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5217/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5217/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5216",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5216/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5216/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5216/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5216",
        "id": 1724823695,
        "node_id": "PR_kwDOIPDwls5RSuIo",
        "number": 5216,
        "title": "OpenSearch top k parameter fix",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-24T22:36:19Z",
        "updated_at": "2023-05-25T16:51:25Z",
        "closed_at": "2023-05-25T16:51:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5216",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5216",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5216.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5216.patch",
            "merged_at": "2023-05-25T16:51:24Z"
        },
        "body": "For most queries it's the `size` parameter that determines final number of documents to return. Since our abstractions refer to this as `k`, set this to be `k` everywhere instead of expecting a separate param. Would be great to have someone more familiar with OpenSearch validate that this is reasonable (e.g. that having `size` and what OpenSearch calls `k` be the same won't lead to any strange behavior). cc @naveentatikonda \r\n\r\nCloses #5212 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5216/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5216/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5215",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5215/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5215/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5215/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5215",
        "id": 1724798523,
        "node_id": "I_kwDOIPDwls5mzlY7",
        "number": 5215,
        "title": "openai.error.AuthenticationError: <empty message>",
        "user": {
            "login": "grumpyp",
            "id": 75830792,
            "node_id": "MDQ6VXNlcjc1ODMwNzky",
            "avatar_url": "https://avatars.githubusercontent.com/u/75830792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/grumpyp",
            "html_url": "https://github.com/grumpyp",
            "followers_url": "https://api.github.com/users/grumpyp/followers",
            "following_url": "https://api.github.com/users/grumpyp/following{/other_user}",
            "gists_url": "https://api.github.com/users/grumpyp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/grumpyp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/grumpyp/subscriptions",
            "organizations_url": "https://api.github.com/users/grumpyp/orgs",
            "repos_url": "https://api.github.com/users/grumpyp/repos",
            "events_url": "https://api.github.com/users/grumpyp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/grumpyp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-24T22:04:59Z",
        "updated_at": "2023-09-18T16:11:06Z",
        "closed_at": "2023-09-18T16:11:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.178\r\npython3.11\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n\r\n```\r\n @staticmethod\r\n    def embeddings(texts: List[Document]):\r\n        embeddings = OpenAIEmbeddings()\r\n        vectordb = Chroma.from_documents(texts, embeddings, persist_directory=\"chroma_db\", collection_name=\"aixplora\")\r\n        return vectordb\r\n```\r\n\r\nends up in `openai.error.AuthenticationError: <empty message>`\r\n\r\n\r\nmore context here: https://github.com/grumpyp/aixplora/blob/main/backend/embeddings/index_files.py\r\n\r\nThis happened just a few hours ago btw! Before it was running, so possibly a bug which came with a release.\r\n\n\n### Expected behavior\n\nNo error! - just embedding into my chroma db :)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5215/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5215/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5214",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5214/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5214/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5214/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5214",
        "id": 1724751785,
        "node_id": "PR_kwDOIPDwls5RSena",
        "number": 5214,
        "title": "Create async copy of from_text() inside GraphIndexCreator.",
        "user": {
            "login": "maspotts",
            "id": 4096446,
            "node_id": "MDQ6VXNlcjQwOTY0NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4096446?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maspotts",
            "html_url": "https://github.com/maspotts",
            "followers_url": "https://api.github.com/users/maspotts/followers",
            "following_url": "https://api.github.com/users/maspotts/following{/other_user}",
            "gists_url": "https://api.github.com/users/maspotts/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maspotts/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maspotts/subscriptions",
            "organizations_url": "https://api.github.com/users/maspotts/orgs",
            "repos_url": "https://api.github.com/users/maspotts/repos",
            "events_url": "https://api.github.com/users/maspotts/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maspotts/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T21:17:53Z",
        "updated_at": "2023-05-25T04:54:13Z",
        "closed_at": "2023-05-25T04:54:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5214",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5214",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5214.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5214.patch",
            "merged_at": "2023-05-25T04:54:12Z"
        },
        "body": "Copies `GraphIndexCreator.from_text()` to make an async version called `GraphIndexCreator.afrom_text()`.\r\n\r\nThis is (should be) a trivial change: it just adds a copy of `GraphIndexCreator.from_text()` which is async and awaits a call to `chain.apredict()` instead of `chain.predict()`.  There is no unit test for GraphIndexCreator, and I did not create one, but this code works for me locally.\r\n\r\n@agola11 @hwchase17\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5214/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5214/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5213",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5213/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5213/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5213/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5213",
        "id": 1724727105,
        "node_id": "PR_kwDOIPDwls5RSZKD",
        "number": 5213,
        "title": "add option to pass openai key to langchain plus command",
        "user": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T20:58:11Z",
        "updated_at": "2023-05-24T21:05:04Z",
        "closed_at": "2023-05-24T21:05:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5213",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5213",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5213.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5213.patch",
            "merged_at": "2023-05-24T21:05:03Z"
        },
        "body": "# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5213/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5213/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5212",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5212/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5212/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5212/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5212",
        "id": 1724714949,
        "node_id": "I_kwDOIPDwls5mzQ_F",
        "number": 5212,
        "title": "OpenSearch VectorStore cannot return more than 4 retrieved result. ",
        "user": {
            "login": "gsdssn",
            "id": 26447525,
            "node_id": "MDQ6VXNlcjI2NDQ3NTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/26447525?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gsdssn",
            "html_url": "https://github.com/gsdssn",
            "followers_url": "https://api.github.com/users/gsdssn/followers",
            "following_url": "https://api.github.com/users/gsdssn/following{/other_user}",
            "gists_url": "https://api.github.com/users/gsdssn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gsdssn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gsdssn/subscriptions",
            "organizations_url": "https://api.github.com/users/gsdssn/orgs",
            "repos_url": "https://api.github.com/users/gsdssn/repos",
            "events_url": "https://api.github.com/users/gsdssn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gsdssn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-24T20:49:47Z",
        "updated_at": "2023-05-25T16:51:25Z",
        "closed_at": "2023-05-25T16:51:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Using the following script, I can only return maximum 4 documents.  With k = 1, k= 2, k=3, k = 4, k =5, k=6, ...  similarity_search_with_score returns 1, 2, 3, 4, 4, 4... docs. \r\n\r\n    opensearch_url = \"xxxxxxxxx.com\"\r\n    docsearch = OpenSearchVectorSearch.from_documents(docs, \r\n                                                      embedding = HuggingFaceEmbeddings(), \r\n                                                      opensearch_url=opensearch_url, \r\n                                                      index_name=\"my_index_name\")\r\n    retrieved_docs = docsearch.similarity_search_with_score(query, k=10)\r\n\r\nThis only return 4 documents even though I have len(docs) = 90+. Tried various indexes and various queries. Confirmed the issue is persistent. \r\nFind a [related issue](https://github.com/hwchase17/langchain/issues/1946) (also max out at 4 regardless of k) for Chroma.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5212/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5212/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5210",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5210/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5210/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5210/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5210",
        "id": 1724609382,
        "node_id": "I_kwDOIPDwls5my3Nm",
        "number": 5210,
        "title": "GPT4All chat error with async calls",
        "user": {
            "login": "PiotrPmr",
            "id": 113363598,
            "node_id": "U_kgDOBsHKjg",
            "avatar_url": "https://avatars.githubusercontent.com/u/113363598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PiotrPmr",
            "html_url": "https://github.com/PiotrPmr",
            "followers_url": "https://api.github.com/users/PiotrPmr/followers",
            "following_url": "https://api.github.com/users/PiotrPmr/following{/other_user}",
            "gists_url": "https://api.github.com/users/PiotrPmr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PiotrPmr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PiotrPmr/subscriptions",
            "organizations_url": "https://api.github.com/users/PiotrPmr/orgs",
            "repos_url": "https://api.github.com/users/PiotrPmr/repos",
            "events_url": "https://api.github.com/users/PiotrPmr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PiotrPmr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 23,
        "created_at": "2023-05-24T19:27:35Z",
        "updated_at": "2023-12-09T18:07:38Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, I believe this issue is related to this one: #1372 \r\n\r\nI'm using GPT4All integration and get the following error after running `ConversationalRetrievalChain` with `AsyncCallbackManager`:\r\n`ERROR:root:Async generation not implemented for this LLM.`\r\nChanging to `CallbackManager` does not fix anything.\r\n\r\nThe issue is model-agnostic, i.e., I have used _ggml-gpt4all-j-v1.3-groovy.bin_ and _ggml-mpt-7b-base.bin_. The LangChain version I'm using is `0.0.179`. Any ideas how this can be potentially solved or should we just wait for a new release fixing it?\r\n\r\n### Suggestion:\r\n\r\nRelease a fix, similar as in #1372",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5210/reactions",
            "total_count": 5,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 4
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5210/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5209",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5209/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5209/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5209/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5209",
        "id": 1724587758,
        "node_id": "I_kwDOIPDwls5myx7u",
        "number": 5209,
        "title": "Enable chains (MapReduce, Refine, ...) for Chat Models.",
        "user": {
            "login": "ankitarya1019",
            "id": 53930292,
            "node_id": "MDQ6VXNlcjUzOTMwMjky",
            "avatar_url": "https://avatars.githubusercontent.com/u/53930292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ankitarya1019",
            "html_url": "https://github.com/ankitarya1019",
            "followers_url": "https://api.github.com/users/ankitarya1019/followers",
            "following_url": "https://api.github.com/users/ankitarya1019/following{/other_user}",
            "gists_url": "https://api.github.com/users/ankitarya1019/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ankitarya1019/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ankitarya1019/subscriptions",
            "organizations_url": "https://api.github.com/users/ankitarya1019/orgs",
            "repos_url": "https://api.github.com/users/ankitarya1019/repos",
            "events_url": "https://api.github.com/users/ankitarya1019/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ankitarya1019/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-24T19:09:24Z",
        "updated_at": "2023-05-24T20:38:29Z",
        "closed_at": "2023-05-24T20:38:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nEnable chains for Chat Models.\r\n\r\nI spend some time looking at the following docs:\r\nhttps://python.langchain.com/en/latest/modules/chains/index_examples/summarize.html\r\nhttps://docs.langchain.com/docs/components/chains/index_related_chains\r\n\r\nas well looking into the codebase, it seems this works only for completion models not Chat Models. \n\n### Motivation\n\nI would like use GPT-4 which is only available via Completions endpoint. I am currently building the chain manually, but I see value in native support in langchain for better codebase and easy access for others.\n\n### Your contribution\n\nI can help by submitting a PR, assuming I am not missing something obvious and this is already supported. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5209/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5209/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5208",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5208/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5208/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5208/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5208",
        "id": 1724571925,
        "node_id": "PR_kwDOIPDwls5RR3Ah",
        "number": 5208,
        "title": "nit",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T18:57:54Z",
        "updated_at": "2023-05-24T19:52:21Z",
        "closed_at": "2023-05-24T19:52:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5208",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5208",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5208.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5208.patch",
            "merged_at": "2023-05-24T19:52:20Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5208/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5208/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5207",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5207/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5207/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5207/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5207",
        "id": 1724543505,
        "node_id": "I_kwDOIPDwls5mynIR",
        "number": 5207,
        "title": "Chroma integration .from_documents() isn't working",
        "user": {
            "login": "grumpyp",
            "id": 75830792,
            "node_id": "MDQ6VXNlcjc1ODMwNzky",
            "avatar_url": "https://avatars.githubusercontent.com/u/75830792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/grumpyp",
            "html_url": "https://github.com/grumpyp",
            "followers_url": "https://api.github.com/users/grumpyp/followers",
            "following_url": "https://api.github.com/users/grumpyp/following{/other_user}",
            "gists_url": "https://api.github.com/users/grumpyp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/grumpyp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/grumpyp/subscriptions",
            "organizations_url": "https://api.github.com/users/grumpyp/orgs",
            "repos_url": "https://api.github.com/users/grumpyp/repos",
            "events_url": "https://api.github.com/users/grumpyp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/grumpyp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-24T18:34:51Z",
        "updated_at": "2023-09-18T16:11:11Z",
        "closed_at": "2023-09-18T16:11:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.178\r\nPython 3.11.2\r\n\n\n### Who can help?\n\n@agola11 @hwchase17 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n`chroma.from_documents(texts, embeddings, persist_directory=\"chroma_db\", collection_name=\"x\")`\r\n\r\n```   \r\nquery_texts = \"tell me about whatsmyserp policy\"\r\n        res = collection.query(\r\n                query_texts=query_texts,\r\n                n_results=n_results,\r\n                where=where or None,\r\n                where_document=where_document or None\r\n            )\r\n```\r\n\r\nprinting res \r\n`{'ids': [[]], 'embeddings': None, 'documents': [[]], 'metadatas': [[]], 'distances': [[0.3748544454574585]]}` \r\n\r\nI believe it doesn't create the collection itself or something related to that, cause if I create the collection myself before it seems to work.\r\n\r\nMore information and our discussion in the thread of the Chroma discord: \r\nhttps://discord.com/channels/1073293645303795742/1110965198904369374\r\n\r\n\n\n### Expected behavior\n\nIt should at least return the related documents,.. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5207/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5207/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5206",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5206/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5206/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5206/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5206",
        "id": 1724541232,
        "node_id": "PR_kwDOIPDwls5RRwUR",
        "number": 5206,
        "title": "Fix SQLAlchemy truncating text when it is too big",
        "user": {
            "login": "wsantos",
            "id": 164633,
            "node_id": "MDQ6VXNlcjE2NDYzMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/164633?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wsantos",
            "html_url": "https://github.com/wsantos",
            "followers_url": "https://api.github.com/users/wsantos/followers",
            "following_url": "https://api.github.com/users/wsantos/following{/other_user}",
            "gists_url": "https://api.github.com/users/wsantos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wsantos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wsantos/subscriptions",
            "organizations_url": "https://api.github.com/users/wsantos/orgs",
            "repos_url": "https://api.github.com/users/wsantos/repos",
            "events_url": "https://api.github.com/users/wsantos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wsantos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-24T18:32:56Z",
        "updated_at": "2023-06-02T01:33:31Z",
        "closed_at": "2023-06-02T01:33:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5206",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5206",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5206.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5206.patch",
            "merged_at": "2023-06-02T01:33:31Z"
        },
        "body": "# Fixes SQLAlchemy truncating the result if you have a big/text column with many chars.\r\n\r\nSQLAlchemy truncates columns if you try to convert a Row or Sequence to a string directly\r\n\r\nFor comparison:\r\n\r\n- Before:\r\n```[('Harrison', 'That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio ... (2 characters truncated) ... hat is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio ')]```\r\n\r\n- After:\r\n```[('Harrison', 'That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio That is my Bio ')]```\r\n\r\n\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\nI'm not sure who to tag for chains, maybe @vowelparrot ?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5206/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5206/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5205",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5205/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5205/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5205/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5205",
        "id": 1724516597,
        "node_id": "I_kwDOIPDwls5mygj1",
        "number": 5205,
        "title": "I don't think Self-querying with Chroma is right",
        "user": {
            "login": "Badrul-Goomblepop",
            "id": 132761159,
            "node_id": "U_kgDOB-nGRw",
            "avatar_url": "https://avatars.githubusercontent.com/u/132761159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Badrul-Goomblepop",
            "html_url": "https://github.com/Badrul-Goomblepop",
            "followers_url": "https://api.github.com/users/Badrul-Goomblepop/followers",
            "following_url": "https://api.github.com/users/Badrul-Goomblepop/following{/other_user}",
            "gists_url": "https://api.github.com/users/Badrul-Goomblepop/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Badrul-Goomblepop/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Badrul-Goomblepop/subscriptions",
            "organizations_url": "https://api.github.com/users/Badrul-Goomblepop/orgs",
            "repos_url": "https://api.github.com/users/Badrul-Goomblepop/repos",
            "events_url": "https://api.github.com/users/Badrul-Goomblepop/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Badrul-Goomblepop/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-24T18:13:30Z",
        "updated_at": "2023-09-11T16:57:00Z",
        "closed_at": "2023-09-11T16:57:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHere is the link to the tutorial: https://python.langchain.com/en/latest/modules/indexes/retrievers/examples/chroma_self_query.html\r\n\r\nYou can see on the page that the results do not seem to correlate to the question.  First question about dinosaurs brings back two movies that are nothing to do with dinosaurs. Then last question asking about 2 movies about dinosaurs brings back 3 movies - 2 of which are nothing to do with dinosaurs.\r\n\r\nIn fact I found I can type \"What are some movies about cabbages?\" and get back 3 random movie results.\r\n\r\nThis tutorial doesn't seem to work.\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nFollow the tutorial - in fact just read the the tutorial.\n\n### Expected behavior\n\nIt should either bring back only movies matching your query, or if it brings back more than one it should give a score as to how confident it is. Right now it seems almost pointless.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5205/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5205/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5203",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5203/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5203/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5203/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5203",
        "id": 1724375986,
        "node_id": "I_kwDOIPDwls5mx-Oy",
        "number": 5203,
        "title": "Issue: Customizing 'structured_format_instructions' for Non-English Languages",
        "user": {
            "login": "luc-kalaora",
            "id": 1401927,
            "node_id": "MDQ6VXNlcjE0MDE5Mjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1401927?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luc-kalaora",
            "html_url": "https://github.com/luc-kalaora",
            "followers_url": "https://api.github.com/users/luc-kalaora/followers",
            "following_url": "https://api.github.com/users/luc-kalaora/following{/other_user}",
            "gists_url": "https://api.github.com/users/luc-kalaora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luc-kalaora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luc-kalaora/subscriptions",
            "organizations_url": "https://api.github.com/users/luc-kalaora/orgs",
            "repos_url": "https://api.github.com/users/luc-kalaora/repos",
            "events_url": "https://api.github.com/users/luc-kalaora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luc-kalaora/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-24T16:32:42Z",
        "updated_at": "2023-10-12T12:31:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "HI, I have a requirement to customize the format instructions for multiple languages.\r\n\r\nSpecifically, I need to make modifications to the output_parser.get_format_instructions() string. This function currently utilizes the following structured format instructions:\r\n\r\n```\r\nSTRUCTURED_FORMAT_INSTRUCTIONS = \"\"\"The output should be a markdown code snippet formatted in the following schema, including the leading and trailing \"\r\n\r\njson\" and \"\r\n\r\n\":\r\n\r\n{{\r\n{format}\r\n}}\r\n```\r\nTo modify this value, I have considered the following approach:\r\n\r\n> langchain.output_parsers.structured.STRUCTURED_FORMAT_INSTRUCTIONS = \"\"\"traduction of the string below\"\"\"\r\n\r\nHowever, please note that this approach is not thread-safe. If multiple users are simultaneously using my application with different languages, there is a risk of interference between their settings.\r\n\r\nCould you please advise on the appropriate solution for this issue?\r\n\r\nHow i can do? May i miss something?\r\n\r\nThanks for your help\r\n\r\n### Suggestion:\r\n\r\nA solution could be to change  get_format_instructions(self) -> str function by adding a string params def get_format_instructions(self, cust_str_format_instructions) -> str:\r\n\r\nAnother solution is to create a class inherited from  StructuredOutputParser\r\n\r\n```\r\nfrom langchain.output_parsers.structured import _get_sub_string\r\nfrom langchain.output_parsers.format_instructions import STRUCTURED_FORMAT_INSTRUCTIONS\r\nfrom typing import List, Any\r\n\r\n\r\n\r\nfrom pydantic import Field\r\n\r\nclass CustomStructuredOutputParser(StructuredOutputParser):\r\n    language: str = Field(default=None)\r\n    cust_struct_format_instructions: str = Field(default=None)\r\n\r\n    def __init__(self, response_schemas: List[ResponseSchema], **data: Any):\r\n        super().__init__(response_schemas=response_schemas, **data)\r\n        if self.language == \"fr_FR\":\r\n            self.cust_struct_format_instructions = \"\"\"La sortie doit \u00eatre un extrait de code au format markdown, format\u00e9 selon le sch\u00e9ma suivant, en incluant le d\u00e9but et la fin \"\\`\\`\\`json\" et \"\\`\\`\\`\":\r\n\r\n            ```json\r\n            {{\r\n            {format}\r\n            }}\r\n            ```\"\"\"\r\n\r\n    @classmethod\r\n    def from_response_schemas(\r\n        cls, response_schemas: List[ResponseSchema], language: str = None, cust_struct_format_instructions: str = None\r\n    ) -> 'CustomStructuredOutputParser':\r\n        return cls(response_schemas=response_schemas, language=language, cust_struct_format_instructions=cust_struct_format_instructions)\r\n\r\n    def get_format_instructions(self) -> str:\r\n        schema_str = \"\\n\".join(\r\n                [_get_sub_string(schema) for schema in self.response_schemas]\r\n            )\r\n        if self.cust_struct_format_instructions:\r\n            return self.cust_struct_format_instructions.format(format=schema_str)\r\n        return STRUCTURED_FORMAT_INSTRUCTIONS.format(format=schema_str)\r\n\r\n\r\n\r\nsummary_response_schemas = [\r\n    ResponseSchema(name=\"resum\u00e9\", description=\"Fournissez un r\u00e9sum\u00e9 en une ou deux phrases.\"),\r\n    ResponseSchema(name=\"types_r\u00e9ponses\", description=\"Fournissez un objet JSON contenant jusqu'\u00e0 4 types de r\u00e9ponses distincts en tant que cl\u00e9s, et une description pour chaque type de r\u00e9ponse en tant que valeurs.\"),\r\n]\r\n\r\nsummary_output_parser = CustomStructuredOutputParser.from_response_schemas(summary_response_schemas, language='EN_US')\r\n\r\nsummary_output_parser.get_format_instructions()\r\n```\r\n\r\nThe problem is that if you are modifying the code, I have to maintain it.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5203/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5203/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5202",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5202/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5202/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5202/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5202",
        "id": 1724346533,
        "node_id": "I_kwDOIPDwls5mx3Cl",
        "number": 5202,
        "title": "Issue: Wrong condition to raise ValueError in LLMChain.prep_prompts",
        "user": {
            "login": "azuur",
            "id": 44506730,
            "node_id": "MDQ6VXNlcjQ0NTA2NzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/44506730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/azuur",
            "html_url": "https://github.com/azuur",
            "followers_url": "https://api.github.com/users/azuur/followers",
            "following_url": "https://api.github.com/users/azuur/following{/other_user}",
            "gists_url": "https://api.github.com/users/azuur/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/azuur/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/azuur/subscriptions",
            "organizations_url": "https://api.github.com/users/azuur/orgs",
            "repos_url": "https://api.github.com/users/azuur/repos",
            "events_url": "https://api.github.com/users/azuur/events{/privacy}",
            "received_events_url": "https://api.github.com/users/azuur/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-24T16:13:55Z",
        "updated_at": "2023-09-10T16:13:04Z",
        "closed_at": "2023-09-10T16:13:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Wrong condition to raise ValueError in LLMChain.prep_prompts\r\n\r\nIn `LLMChain`, in the `prep_prompts` method, a `ValueError` may be raised on lines 112-114:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/fd866d1801793d22dca5cabe200df4f2b80fa7a4/langchain/chains/llm.py#L100-L114\r\n\r\nThe issue is that the condition that raises this `ValueError` does not accurately capture the `ValueError`'s message. \r\n\r\nSuppose `\"stop\" in input_list[0]`, but `\"stop\"` is not a key in any of the remaining inputs in `input_list`. Then the condition\r\n```python\r\n\"stop\" in inputs and inputs[\"stop\"] != stop\r\n```\r\nis false for all `inputs` in `input_list`. For `input_list[0]`, it is false by definition of `stop` (`stop` is `input_list[0][\"stop\"]`), and for any other `inputs` in `input_list` it is false in this hypothetical scenario because `stop` is not a key in `inputs`.\r\n\r\nThus, in this scenario, the ValueError will not be raised, even though it should be.\r\n\r\n### Suggestion:\r\n\r\nThe condition on line 111 can be changed to\r\n\r\n```python\r\nstop is not None and \"stop\" in inputs and inputs[\"stop\"] != stop\r\n```\r\n\r\nto accurately produce the desired behavior.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5202/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5202/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5201",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5201/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5201/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5201/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5201",
        "id": 1724326797,
        "node_id": "PR_kwDOIPDwls5RRB2a",
        "number": 5201,
        "title": "Improve weaviate vectorstore docs",
        "user": {
            "login": "hsm207",
            "id": 2398765,
            "node_id": "MDQ6VXNlcjIzOTg3NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2398765?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hsm207",
            "html_url": "https://github.com/hsm207",
            "followers_url": "https://api.github.com/users/hsm207/followers",
            "following_url": "https://api.github.com/users/hsm207/following{/other_user}",
            "gists_url": "https://api.github.com/users/hsm207/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hsm207/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hsm207/subscriptions",
            "organizations_url": "https://api.github.com/users/hsm207/orgs",
            "repos_url": "https://api.github.com/users/hsm207/repos",
            "events_url": "https://api.github.com/users/hsm207/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hsm207/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T16:03:08Z",
        "updated_at": "2023-05-24T16:35:29Z",
        "closed_at": "2023-05-24T16:31:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5201",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5201",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5201.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5201.patch",
            "merged_at": "2023-05-24T16:31:49Z"
        },
        "body": "# Improve weaviate vectorstore docs\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes: NA\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n@dev2049",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5201/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5201/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5200",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5200/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5200/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5200/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5200",
        "id": 1724185363,
        "node_id": "PR_kwDOIPDwls5RQiyX",
        "number": 5200,
        "title": "bump 179",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T14:51:24Z",
        "updated_at": "2023-05-24T14:55:28Z",
        "closed_at": "2023-05-24T14:55:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5200",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5200",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5200.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5200.patch",
            "merged_at": "2023-05-24T14:55:27Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5200/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5200/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5199",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5199/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5199/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5199/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5199",
        "id": 1724140220,
        "node_id": "I_kwDOIPDwls5mxEq8",
        "number": 5199,
        "title": "Embeddings vectors from FAISS objects",
        "user": {
            "login": "geg00",
            "id": 10646838,
            "node_id": "MDQ6VXNlcjEwNjQ2ODM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/10646838?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/geg00",
            "html_url": "https://github.com/geg00",
            "followers_url": "https://api.github.com/users/geg00/followers",
            "following_url": "https://api.github.com/users/geg00/following{/other_user}",
            "gists_url": "https://api.github.com/users/geg00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/geg00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/geg00/subscriptions",
            "organizations_url": "https://api.github.com/users/geg00/orgs",
            "repos_url": "https://api.github.com/users/geg00/repos",
            "events_url": "https://api.github.com/users/geg00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/geg00/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-24T14:30:23Z",
        "updated_at": "2023-09-18T16:11:16Z",
        "closed_at": "2023-09-18T16:11:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm using FAISS in memory and I need to obtain the vector of embeddings.\r\n\r\ntext_splitter =  RecursiveCharacterTextSplitter(chunk_size=1500, chunk_overlap=100, separators=[\"\\n\\n\", \"\\n\", \"\\t\", '. '])\r\ndocuments = text_splitter.split_documents(docs)\r\ntotal_chuks = len(documents)\r\nfor i, d in enumerate(documents):\r\n    d.metadata['paragraph'] = f'Paragraph: {i+1} of {total_chuks}' \r\nemb = OpenAIEmbeddings(chunk_size=1)\r\nvs = FAISS.from_documents(documents=documents, embedding=emb)\r\n\r\nI need to obtain the vector embeddings from OpenAIEmbeddings\r\n\r\nI'm trying to create a KMeans from the vector indices to clusted the data for searching\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5199/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5199/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5198",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5198/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5198/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5198/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5198",
        "id": 1724071207,
        "node_id": "PR_kwDOIPDwls5RQJon",
        "number": 5198,
        "title": "Reduce number of calls in Tracer",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-24T13:58:33Z",
        "updated_at": "2023-05-31T17:16:55Z",
        "closed_at": "2023-05-31T17:16:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5198",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5198",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5198.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5198.patch",
            "merged_at": null
        },
        "body": "Handle session creation on the BE to avoid needing to `ensure_session()`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5198/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5198/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5197",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5197/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5197/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5197/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5197",
        "id": 1724012906,
        "node_id": "PR_kwDOIPDwls5RP8sd",
        "number": 5197,
        "title": "Add 'status' command to get server status",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T13:33:45Z",
        "updated_at": "2023-05-24T21:43:17Z",
        "closed_at": "2023-05-24T21:43:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5197",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5197",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5197.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5197.patch",
            "merged_at": "2023-05-24T21:43:16Z"
        },
        "body": "\r\nExample:\r\n\r\n\r\n```\r\n$ langchain plus start --expose\r\n...\r\n$ langchain plus status\r\nThe LangChainPlus server is currently running.\r\n\r\nService             Status         Published Ports\r\nlangchain-backend   Up 40 seconds  1984\r\nlangchain-db        Up 41 seconds  5433\r\nlangchain-frontend  Up 40 seconds  80\r\nngrok               Up 41 seconds  4040\r\n\r\nTo connect, set the following environment variables in your LangChain application:\r\nLANGCHAIN_TRACING_V2=true\r\nLANGCHAIN_ENDPOINT=https://5cef-70-23-89-158.ngrok.io\r\n\r\n$ langchain plus stop\r\n$ langchain plus status\r\nThe LangChainPlus server is not running.\r\n$ langchain plus start\r\nThe LangChainPlus server is currently running.\r\n\r\nService             Status        Published Ports\r\nlangchain-backend   Up 5 seconds  1984\r\nlangchain-db        Up 6 seconds  5433\r\nlangchain-frontend  Up 5 seconds  80\r\n\r\nTo connect, set the following environment variables in your LangChain application:\r\nLANGCHAIN_TRACING_V2=true\r\nLANGCHAIN_ENDPOINT=http://localhost:1984\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5197/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5197/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5196",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5196/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5196/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5196/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5196",
        "id": 1723981709,
        "node_id": "PR_kwDOIPDwls5RP2DE",
        "number": 5196,
        "title": "Support Redis Sentinel database connections",
        "user": {
            "login": "sseide",
            "id": 5168949,
            "node_id": "MDQ6VXNlcjUxNjg5NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5168949?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sseide",
            "html_url": "https://github.com/sseide",
            "followers_url": "https://api.github.com/users/sseide/followers",
            "following_url": "https://api.github.com/users/sseide/following{/other_user}",
            "gists_url": "https://api.github.com/users/sseide/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sseide/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sseide/subscriptions",
            "organizations_url": "https://api.github.com/users/sseide/orgs",
            "repos_url": "https://api.github.com/users/sseide/repos",
            "events_url": "https://api.github.com/users/sseide/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sseide/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "baskaryan",
                "id": 22008038,
                "node_id": "MDQ6VXNlcjIyMDA4MDM4",
                "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/baskaryan",
                "html_url": "https://github.com/baskaryan",
                "followers_url": "https://api.github.com/users/baskaryan/followers",
                "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
                "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
                "organizations_url": "https://api.github.com/users/baskaryan/orgs",
                "repos_url": "https://api.github.com/users/baskaryan/repos",
                "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/baskaryan/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-24T13:20:58Z",
        "updated_at": "2023-07-17T14:18:52Z",
        "closed_at": "2023-07-17T14:18:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5196",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5196",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5196.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5196.patch",
            "merged_at": "2023-07-17T14:18:51Z"
        },
        "body": "# Support Redis Sentinel database connections\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\nThis PR adds the support to connect not only to Redis standalone servers but High Availability Replication sets too (https://redis.io/docs/management/sentinel/)\r\nRedis Replica Sets have on Master allowing to write data and 2+ replicas with read-only access to the data. The additional Redis Sentinel instances monitor all server and reconfigure the RW-Master on the fly if it comes unavailable.\r\n\r\nTherefore all connections must be made through the Sentinels the query the current master for a read-write connection. This PR adds basic support to also allow a redis connection url specifying a Sentinel as Redis connection. \r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\nRedis documentation and Jupyter notebook with Redis examples are updated to mention how to connect to a redis Replica Set with Sentinels\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n  VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        - \r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n\r\nRemark - i did not found test cases for Redis server connections to add new cases here. Therefor i tests the new utility class locally with different kind of setups to make sure different connection urls are working as expected. But no test case here as part of this PR.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5196/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5196/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5195",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5195/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5195/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5195/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5195",
        "id": 1723907172,
        "node_id": "I_kwDOIPDwls5mwLxk",
        "number": 5195,
        "title": "openai.api_key in OpenAIEmbeddings  is unsafe  on  concurrency",
        "user": {
            "login": "richweng001",
            "id": 134506323,
            "node_id": "U_kgDOCARnUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/134506323?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/richweng001",
            "html_url": "https://github.com/richweng001",
            "followers_url": "https://api.github.com/users/richweng001/followers",
            "following_url": "https://api.github.com/users/richweng001/following{/other_user}",
            "gists_url": "https://api.github.com/users/richweng001/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/richweng001/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/richweng001/subscriptions",
            "organizations_url": "https://api.github.com/users/richweng001/orgs",
            "repos_url": "https://api.github.com/users/richweng001/repos",
            "events_url": "https://api.github.com/users/richweng001/events{/privacy}",
            "received_events_url": "https://api.github.com/users/richweng001/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-24T12:45:23Z",
        "updated_at": "2023-09-18T16:11:21Z",
        "closed_at": "2023-09-18T16:11:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlike:\r\nimport openai\r\nopenai.api_key = openai_api_key\r\n\r\nproblem:\r\napi_key is a global variable, it is not safe on concurrency  if we have different api_keys to be used concurrency.  api_key will out of control.\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nuse local variable\n\n### Expected behavior\n\nto be fix",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5195/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5195/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5194",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5194/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5194/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5194/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5194",
        "id": 1723868812,
        "node_id": "PR_kwDOIPDwls5RPdiQ",
        "number": 5194,
        "title": "Fixes scope of query Session in PGVector",
        "user": {
            "login": "ninjapenguin",
            "id": 38786,
            "node_id": "MDQ6VXNlcjM4Nzg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/38786?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ninjapenguin",
            "html_url": "https://github.com/ninjapenguin",
            "followers_url": "https://api.github.com/users/ninjapenguin/followers",
            "following_url": "https://api.github.com/users/ninjapenguin/following{/other_user}",
            "gists_url": "https://api.github.com/users/ninjapenguin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ninjapenguin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ninjapenguin/subscriptions",
            "organizations_url": "https://api.github.com/users/ninjapenguin/orgs",
            "repos_url": "https://api.github.com/users/ninjapenguin/repos",
            "events_url": "https://api.github.com/users/ninjapenguin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ninjapenguin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-24T12:26:38Z",
        "updated_at": "2023-05-24T17:37:50Z",
        "closed_at": "2023-05-24T17:37:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5194",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5194",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5194.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5194.patch",
            "merged_at": "2023-05-24T17:37:46Z"
        },
        "body": "`vectorstore.PGVector`: The transactional boundary should be increased to cover the query itself\r\n\r\nCurrently, within the `similarity_search_with_score_by_vector` the transactional boundary (created via the `Session` call) does not include the select query being made.\r\n\r\nThis can result in un-intended consequences when interacting with the PGVector instance methods directly\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\nFor a quicker response, figure out the right person to tag with @\r\n        \r\nVectorStores / Retrievers / Memory\r\n- @dev2049\r\n        \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5194/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5194/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5193",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5193/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5193/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5193/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5193",
        "id": 1723864164,
        "node_id": "PR_kwDOIPDwls5RPcin",
        "number": 5193,
        "title": "Add Delete Session Method",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T12:23:39Z",
        "updated_at": "2023-05-24T21:06:05Z",
        "closed_at": "2023-05-24T21:06:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5193",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5193",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5193.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5193.patch",
            "merged_at": "2023-05-24T21:06:04Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5193/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5193/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5192",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5192/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5192/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5192/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5192",
        "id": 1723805840,
        "node_id": "PR_kwDOIPDwls5RPPrj",
        "number": 5192,
        "title": "Log warning",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T11:51:20Z",
        "updated_at": "2023-05-24T21:05:14Z",
        "closed_at": "2023-05-24T21:05:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5192",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5192",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5192.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5192.patch",
            "merged_at": "2023-05-24T21:05:13Z"
        },
        "body": "Changes debug log to warning log when LC Tracer fails to instantiate",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5192/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5192/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5191",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5191/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5191/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5191/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5191",
        "id": 1723748960,
        "node_id": "I_kwDOIPDwls5mvlJg",
        "number": 5191,
        "title": "Support personal access token (PAT) in ConfluenceLoader",
        "user": {
            "login": "EricSpeidel",
            "id": 12648651,
            "node_id": "MDQ6VXNlcjEyNjQ4NjUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12648651?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EricSpeidel",
            "html_url": "https://github.com/EricSpeidel",
            "followers_url": "https://api.github.com/users/EricSpeidel/followers",
            "following_url": "https://api.github.com/users/EricSpeidel/following{/other_user}",
            "gists_url": "https://api.github.com/users/EricSpeidel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EricSpeidel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EricSpeidel/subscriptions",
            "organizations_url": "https://api.github.com/users/EricSpeidel/orgs",
            "repos_url": "https://api.github.com/users/EricSpeidel/repos",
            "events_url": "https://api.github.com/users/EricSpeidel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EricSpeidel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-24T11:15:54Z",
        "updated_at": "2023-06-03T21:57:51Z",
        "closed_at": "2023-06-03T21:57:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nThe [Atlassian API](https://atlassian-python-api.readthedocs.io/) (including Confluence) supports just passing a PAT (as token=<PAT>) to authenticate as a user, unfortunately the LangChain abstraction doesn't. \r\n\r\n### Suggestion:\r\n\r\nAdd an optional \"token\" parameter to ConfluenceLoader and use it to authenticate within as an alternative to api_key/password/oauth.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5191/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5191/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5190",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5190/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5190/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5190/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5190",
        "id": 1723654346,
        "node_id": "PR_kwDOIPDwls5ROubW",
        "number": 5190,
        "title": "Allow to specify ID when adding to the FAISS vectorstore.",
        "user": {
            "login": "atisharma",
            "id": 1932398,
            "node_id": "MDQ6VXNlcjE5MzIzOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1932398?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atisharma",
            "html_url": "https://github.com/atisharma",
            "followers_url": "https://api.github.com/users/atisharma/followers",
            "following_url": "https://api.github.com/users/atisharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/atisharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atisharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atisharma/subscriptions",
            "organizations_url": "https://api.github.com/users/atisharma/orgs",
            "repos_url": "https://api.github.com/users/atisharma/repos",
            "events_url": "https://api.github.com/users/atisharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atisharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hwchase17",
                "id": 11986836,
                "node_id": "MDQ6VXNlcjExOTg2ODM2",
                "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hwchase17",
                "html_url": "https://github.com/hwchase17",
                "followers_url": "https://api.github.com/users/hwchase17/followers",
                "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
                "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
                "organizations_url": "https://api.github.com/users/hwchase17/orgs",
                "repos_url": "https://api.github.com/users/hwchase17/repos",
                "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hwchase17/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-24T10:19:48Z",
        "updated_at": "2023-05-25T08:50:07Z",
        "closed_at": "2023-05-25T05:26:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5190",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5190",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5190.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5190.patch",
            "merged_at": "2023-05-25T05:26:47Z"
        },
        "body": "# Allow to specify ID when adding to the FAISS vectorstore\r\n\r\nThis change allows unique IDs to be specified when adding documents / embeddings to a faiss vectorstore.\r\n\r\n- This reflects the current approach with the chroma vectorstore.\r\n- It allows rejection of inserts on duplicate IDs\r\n- will allow deletion / update by searching on deterministic ID (such as a hash).\r\n- If not specified, a random UUID is generated (as per previous behaviour, so non-breaking).\r\n\r\nThis commit fixes #5065 and #3896 and should fix #2699 indirectly. I've tested adding and merging.\r\n\r\nKindly tagging @Xmaster6y @dev2049 for review.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5190/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5190/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5189",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5189/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5189/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5189/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5189",
        "id": 1723625166,
        "node_id": "PR_kwDOIPDwls5ROoAd",
        "number": 5189,
        "title": "Update rellm_experimental.ipynb",
        "user": {
            "login": "eltociear",
            "id": 22633385,
            "node_id": "MDQ6VXNlcjIyNjMzMzg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22633385?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eltociear",
            "html_url": "https://github.com/eltociear",
            "followers_url": "https://api.github.com/users/eltociear/followers",
            "following_url": "https://api.github.com/users/eltociear/following{/other_user}",
            "gists_url": "https://api.github.com/users/eltociear/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eltociear/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eltociear/subscriptions",
            "organizations_url": "https://api.github.com/users/eltociear/orgs",
            "repos_url": "https://api.github.com/users/eltociear/repos",
            "events_url": "https://api.github.com/users/eltociear/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eltociear/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T10:02:19Z",
        "updated_at": "2023-05-24T11:41:00Z",
        "closed_at": "2023-05-24T11:41:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5189",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5189",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5189.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5189.patch",
            "merged_at": "2023-05-24T11:41:00Z"
        },
        "body": "\r\n\r\n# Your PR Title (What it does)\r\n\r\nHuggingFace -> Hugging Face\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5189/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5189/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5188",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5188/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5188/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5188/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5188",
        "id": 1723618860,
        "node_id": "I_kwDOIPDwls5mvFYs",
        "number": 5188,
        "title": "Answer from the SQLDatabaseChain does not output when using the Agent 'conversational-react-description'",
        "user": {
            "login": "pressembrero",
            "id": 108784595,
            "node_id": "U_kgDOBnvr0w",
            "avatar_url": "https://avatars.githubusercontent.com/u/108784595?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pressembrero",
            "html_url": "https://github.com/pressembrero",
            "followers_url": "https://api.github.com/users/pressembrero/followers",
            "following_url": "https://api.github.com/users/pressembrero/following{/other_user}",
            "gists_url": "https://api.github.com/users/pressembrero/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pressembrero/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pressembrero/subscriptions",
            "organizations_url": "https://api.github.com/users/pressembrero/orgs",
            "repos_url": "https://api.github.com/users/pressembrero/repos",
            "events_url": "https://api.github.com/users/pressembrero/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pressembrero/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-24T09:59:16Z",
        "updated_at": "2023-10-24T05:51:11Z",
        "closed_at": "2023-09-10T16:13:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n**MacOS Ventura Version 13.3.1\r\nLangChain==0.0.178**\r\n\r\n**When querying the database, the answer does not show in the terminal. Instead, the AI response is always: \"Is there anything else I can help you with?\". The response seems fine when not using the SQL tool.** \r\n\r\n```\r\ndb_chain = SQLDatabaseChain.from_llm(llm=llm, db=sql_database, verbose=True)\r\nsql_tool = Tool(\r\n    name='Student DB',\r\n    func=db_chain.run,\r\n    description=\"Useful for when you need to answer questions regarding the students, their information, attendance, and anything regarding the database. \"\r\n)\r\n\r\ntools = load_tools(\r\n    [\"llm-math\"],\r\n    llm=llm\r\n)\r\n\r\ntools.append(sql_tool)\r\n\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\")\r\n\r\nconversational_agent = initialize_agent(\r\n    agent='conversational-react-description',\r\n    tools=tools,\r\n    llm=llm,\r\n    verbose=True,\r\n    memory=memory\r\n    \r\n)\r\nconversational_agent.run(input=\"Who were sick last May 22, 2023?\")\r\n```\r\nHere is the output in the terminal:\r\n\r\n<img width=\"1480\" alt=\"Screenshot 2023-05-24 at 17 50 14\" src=\"https://github.com/hwchase17/langchain/assets/108784595/47a86e82-f7d3-4a46-9a8f-5a9ec1d1d17a\">\r\n\r\nI always get the AI response instead that of the answer in 'Observation'. \r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [X] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSteps to reproduce the behavior:\r\n\r\n1. create sqldatabasechain\r\n2. create custom too for sql querying\r\n3. use agent type conversational-react-description\r\n4. output answer\n\n### Expected behavior\n\nI would like that the output of the chain, when using the sql tool, is the Query output and not the \"Is there anything else I can help you with?\" AI response. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5188/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5188/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5187",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5187/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5187/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5187/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5187",
        "id": 1723569792,
        "node_id": "I_kwDOIPDwls5mu5aA",
        "number": 5187,
        "title": "Issue: LlamaCPP still uses cpu after passing the n_gpu_layer param",
        "user": {
            "login": "allthatido",
            "id": 10551664,
            "node_id": "MDQ6VXNlcjEwNTUxNjY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/10551664?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/allthatido",
            "html_url": "https://github.com/allthatido",
            "followers_url": "https://api.github.com/users/allthatido/followers",
            "following_url": "https://api.github.com/users/allthatido/following{/other_user}",
            "gists_url": "https://api.github.com/users/allthatido/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/allthatido/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/allthatido/subscriptions",
            "organizations_url": "https://api.github.com/users/allthatido/orgs",
            "repos_url": "https://api.github.com/users/allthatido/repos",
            "events_url": "https://api.github.com/users/allthatido/events{/privacy}",
            "received_events_url": "https://api.github.com/users/allthatido/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-24T09:34:07Z",
        "updated_at": "2023-08-17T10:12:23Z",
        "closed_at": "2023-05-24T19:36:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nLangchain == 0.0.178\r\nllama-cpp-python == 0.1.54\r\n\r\nLLM def: \r\n\r\n`callback_manager = CallbackManager([StreamingStdOutCallbackHandler()])`\r\n`llm = LlamaCpp(model_path=f\"{self.llm_path}/{self.selection}.bin\", n_gpu_layers=25, n_ctx=1024, n_threads=8, callback_manager=callback_manager, verbose=True)`\r\n\r\nLoaded model info:\r\n\r\n> llama.cpp: loading model from models/gpt4all-13B/gpt4all-13B.bin\r\n> llama_model_load_internal: format     = ggjt v3 (latest)\r\n> llama_model_load_internal: n_vocab    = 32000\r\n> llama_model_load_internal: n_ctx      = 1024\r\n> llama_model_load_internal: n_embd     = 5120\r\n> llama_model_load_internal: n_mult     = 256\r\n> llama_model_load_internal: n_head     = 40\r\n> llama_model_load_internal: n_layer    = 40\r\n> llama_model_load_internal: n_rot      = 128\r\n> llama_model_load_internal: ftype      = 9 (mostly Q5_1)\r\n> llama_model_load_internal: n_ff       = 13824\r\n> llama_model_load_internal: n_parts    = 1\r\n> llama_model_load_internal: model size = 13B\r\n> llama_model_load_internal: ggml ctx size =    0.09 MB\r\n> llama_model_load_internal: mem required  = 11359.05 MB (+ 1608.00 MB per state)\r\n> .\r\n> llama_init_from_file: kv self size  =  800.00 MB\r\n> AVX = 1 | AVX2 = 1 | AVX512 = 0 | AVX512_VBMI = 0 | AVX512_VNNI = 0 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | VSX = 0 |\r\n\r\nI do not see any info regarding no of layers offloaded to gpu. \r\n\r\n### Code Repo:\r\n[GitHub](https://github.com/allthatido/FileGPT)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5187/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5187/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5186",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5186/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5186/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5186/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5186",
        "id": 1723561148,
        "node_id": "I_kwDOIPDwls5mu3S8",
        "number": 5186,
        "title": "Bug in openapi agent planner",
        "user": {
            "login": "Srajangpt1",
            "id": 10047986,
            "node_id": "MDQ6VXNlcjEwMDQ3OTg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/10047986?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Srajangpt1",
            "html_url": "https://github.com/Srajangpt1",
            "followers_url": "https://api.github.com/users/Srajangpt1/followers",
            "following_url": "https://api.github.com/users/Srajangpt1/following{/other_user}",
            "gists_url": "https://api.github.com/users/Srajangpt1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Srajangpt1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Srajangpt1/subscriptions",
            "organizations_url": "https://api.github.com/users/Srajangpt1/orgs",
            "repos_url": "https://api.github.com/users/Srajangpt1/repos",
            "events_url": "https://api.github.com/users/Srajangpt1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Srajangpt1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-24T09:29:23Z",
        "updated_at": "2023-09-18T16:11:26Z",
        "closed_at": "2023-09-18T16:11:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLatest, macOS ventura, 3.8/11\r\n\r\nIt seems to be a bug when calling the server in create_openapi_agent. This is returning only the first letter of the server. Please see attached. \r\n<img width=\"616\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/10047986/11b95d67-e05b-406e-a1f1-c35ef3da6abe\">\r\n\r\n\r\n### Who can help?\r\n\r\n@vowelparrot \r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n1. Create a new openapi_spec\r\n2. Edit the server field\r\n3. Create new openapi agent --> planner.create_openapi_agent(new_spec, requests_wrapper, llm)\r\n4. I am also using gpt-3.5-turbo model (although it doesn't matter)\r\n5. You could also just printout `spec.servers[0][\"url\"]`\r\n\r\n### Expected behavior\r\n\r\nThe openapi agent should be initialized with the url as `base_url`\r\n\r\nRemoving `[0][\"url\"]` from `spec.servers[0][\"url\"]` should fix it",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5186/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5186/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5185",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5185/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5185/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5185/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5185",
        "id": 1723554467,
        "node_id": "PR_kwDOIPDwls5ROYey",
        "number": 5185,
        "title": "adjust docarray docstrings",
        "user": {
            "login": "jupyterjazz",
            "id": 45267439,
            "node_id": "MDQ6VXNlcjQ1MjY3NDM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/45267439?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jupyterjazz",
            "html_url": "https://github.com/jupyterjazz",
            "followers_url": "https://api.github.com/users/jupyterjazz/followers",
            "following_url": "https://api.github.com/users/jupyterjazz/following{/other_user}",
            "gists_url": "https://api.github.com/users/jupyterjazz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jupyterjazz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jupyterjazz/subscriptions",
            "organizations_url": "https://api.github.com/users/jupyterjazz/orgs",
            "repos_url": "https://api.github.com/users/jupyterjazz/repos",
            "events_url": "https://api.github.com/users/jupyterjazz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jupyterjazz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T09:25:41Z",
        "updated_at": "2023-05-24T14:50:36Z",
        "closed_at": "2023-05-24T14:50:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5185",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5185",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5185.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5185.patch",
            "merged_at": "2023-05-24T14:50:36Z"
        },
        "body": "Follow up of https://github.com/hwchase17/langchain/pull/5015\r\n\r\nThanks for catching this! \r\n\r\nJust a small PR to adjust couple of strings to these changes",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5185/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5185/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]