[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13301",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13301/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13301/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13301/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13301",
        "id": 1991363571,
        "node_id": "PR_kwDOIPDwls5fVnQ-",
        "number": 13301,
        "title": "DOCS: cleanup docs directory",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T19:49:02Z",
        "updated_at": "2023-11-14T01:38:46Z",
        "closed_at": "2023-11-14T01:38:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13301",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13301",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13301.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13301.patch",
            "merged_at": "2023-11-14T01:38:46Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13301/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13301/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13300",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13300/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13300/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13300/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13300",
        "id": 1991352396,
        "node_id": "PR_kwDOIPDwls5fVkyv",
        "number": 13300,
        "title": "Library Licenses",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T19:41:51Z",
        "updated_at": "2023-11-29T01:34:28Z",
        "closed_at": "2023-11-29T01:34:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13300",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13300",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13300.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13300.patch",
            "merged_at": "2023-11-29T01:34:27Z"
        },
        "body": "Same change as #8403 but in other libs\r\n\r\nalso updates (c) LangChain Inc. instead of @hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13300/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13300/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13299",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13299/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13299/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13299/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13299",
        "id": 1991273744,
        "node_id": "PR_kwDOIPDwls5fVTXu",
        "number": 13299,
        "title": "bugfix in using search_kwargs in Vectara retriever",
        "user": {
            "login": "ofermend",
            "id": 1823547,
            "node_id": "MDQ6VXNlcjE4MjM1NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1823547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ofermend",
            "html_url": "https://github.com/ofermend",
            "followers_url": "https://api.github.com/users/ofermend/followers",
            "following_url": "https://api.github.com/users/ofermend/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofermend/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ofermend/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofermend/subscriptions",
            "organizations_url": "https://api.github.com/users/ofermend/orgs",
            "repos_url": "https://api.github.com/users/ofermend/repos",
            "events_url": "https://api.github.com/users/ofermend/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ofermend/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-13T18:59:31Z",
        "updated_at": "2023-11-20T17:44:44Z",
        "closed_at": "2023-11-20T17:44:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13299",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13299",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13299.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13299.patch",
            "merged_at": "2023-11-20T17:44:43Z"
        },
        "body": "  - **Description:** fix a bug that prevented as_retriever() in Vectara to use the desired input arguments\r\n  - **Issue:** as_retriever did not pass the arguments properly\r\n  - **Tag maintainer:** @baskaryan\r\n  - **Twitter handle:** @ofermend\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13299/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13299/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13298",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13298/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13298/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13298/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13298",
        "id": 1991268858,
        "node_id": "PR_kwDOIPDwls5fVSTM",
        "number": 13298,
        "title": "Update main readme",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T18:56:17Z",
        "updated_at": "2023-11-14T01:37:55Z",
        "closed_at": "2023-11-14T01:37:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13298",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13298",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13298.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13298.patch",
            "merged_at": "2023-11-14T01:37:54Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13298/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13298/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13297",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13297/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13297/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13297/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13297",
        "id": 1991188870,
        "node_id": "PR_kwDOIPDwls5fVAm-",
        "number": 13297,
        "title": "Fix issue where response_if_no_docs_found is not implemented on async\u2026",
        "user": {
            "login": "sudranga",
            "id": 12044110,
            "node_id": "MDQ6VXNlcjEyMDQ0MTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/12044110?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sudranga",
            "html_url": "https://github.com/sudranga",
            "followers_url": "https://api.github.com/users/sudranga/followers",
            "following_url": "https://api.github.com/users/sudranga/following{/other_user}",
            "gists_url": "https://api.github.com/users/sudranga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sudranga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sudranga/subscriptions",
            "organizations_url": "https://api.github.com/users/sudranga/orgs",
            "repos_url": "https://api.github.com/users/sudranga/repos",
            "events_url": "https://api.github.com/users/sudranga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sudranga/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T18:09:00Z",
        "updated_at": "2023-11-30T03:06:13Z",
        "closed_at": "2023-11-30T03:06:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13297",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13297",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13297.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13297.patch",
            "merged_at": "2023-11-30T03:06:13Z"
        },
        "body": "Response_if_no_docs_found is not implemented in ConversationalRetrievalChain for async code paths. Implemented it and added test cases\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13297/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13297/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13296",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13296/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13296/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13296/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13296",
        "id": 1991113905,
        "node_id": "PR_kwDOIPDwls5fUwKl",
        "number": 13296,
        "title": "Update error message in evaluation runner",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T17:24:31Z",
        "updated_at": "2023-11-13T19:03:21Z",
        "closed_at": "2023-11-13T19:03:20Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13296",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13296",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13296.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13296.patch",
            "merged_at": "2023-11-13T19:03:20Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13296/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13296/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13295",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13295/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13295/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13295/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13295",
        "id": 1991066462,
        "node_id": "I_kwDOIPDwls52rUNe",
        "number": 13295,
        "title": "Langchain Template for RAG using Opensearch ",
        "user": {
            "login": "dhrubo-os",
            "id": 109556906,
            "node_id": "U_kgDOBoe0qg",
            "avatar_url": "https://avatars.githubusercontent.com/u/109556906?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhrubo-os",
            "html_url": "https://github.com/dhrubo-os",
            "followers_url": "https://api.github.com/users/dhrubo-os/followers",
            "following_url": "https://api.github.com/users/dhrubo-os/following{/other_user}",
            "gists_url": "https://api.github.com/users/dhrubo-os/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dhrubo-os/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dhrubo-os/subscriptions",
            "organizations_url": "https://api.github.com/users/dhrubo-os/orgs",
            "repos_url": "https://api.github.com/users/dhrubo-os/repos",
            "events_url": "https://api.github.com/users/dhrubo-os/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dhrubo-os/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-13T16:58:01Z",
        "updated_at": "2023-11-13T16:58:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWe have several RAG templates in [langchain template](https://github.com/langchain-ai/langchain/tree/master/templates) using other vector DB except Opensearch. \r\n\r\nWe need to add a similar template for Opensearch also as opensearch support the same feature. \r\n\r\nAs a first step we will start with OpenAI and then we expand this to other LLMs including Bedrock.\n\n### Motivation\n\nOpensearch supports this feature and it will be super helpful for opensearch users. \n\n### Your contribution\n\nI will take the initiative to raise PR on this issue.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13295/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13295/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13294",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13294/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13294/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13294/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13294",
        "id": 1990959224,
        "node_id": "PR_kwDOIPDwls5fUOVW",
        "number": 13294,
        "title": "Add rag google vertex ai search template",
        "user": {
            "login": "juan-calvo-datatonic",
            "id": 82172964,
            "node_id": "MDQ6VXNlcjgyMTcyOTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/82172964?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juan-calvo-datatonic",
            "html_url": "https://github.com/juan-calvo-datatonic",
            "followers_url": "https://api.github.com/users/juan-calvo-datatonic/followers",
            "following_url": "https://api.github.com/users/juan-calvo-datatonic/following{/other_user}",
            "gists_url": "https://api.github.com/users/juan-calvo-datatonic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juan-calvo-datatonic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juan-calvo-datatonic/subscriptions",
            "organizations_url": "https://api.github.com/users/juan-calvo-datatonic/orgs",
            "repos_url": "https://api.github.com/users/juan-calvo-datatonic/repos",
            "events_url": "https://api.github.com/users/juan-calvo-datatonic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juan-calvo-datatonic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6154420538,
                "node_id": "LA_kwDOIPDwls8AAAABbtUBOg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/template",
                "name": "template",
                "color": "145FB1",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T16:00:33Z",
        "updated_at": "2023-11-13T16:45:36Z",
        "closed_at": "2023-11-13T16:45:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13294",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13294",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13294.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13294.patch",
            "merged_at": "2023-11-13T16:45:36Z"
        },
        "body": "\r\n  - **Description:** This is a template demonstrating how to utilize Google Vertex AI Search in conjunction with ChatVertexAI()",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13294/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13294/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13293",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13293/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13293/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13293/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13293",
        "id": 1990849619,
        "node_id": "PR_kwDOIPDwls5fT2kp",
        "number": 13293,
        "title": "fixed a concurrency bug in abatch",
        "user": {
            "login": "lkuligin",
            "id": 11026406,
            "node_id": "MDQ6VXNlcjExMDI2NDA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11026406?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lkuligin",
            "html_url": "https://github.com/lkuligin",
            "followers_url": "https://api.github.com/users/lkuligin/followers",
            "following_url": "https://api.github.com/users/lkuligin/following{/other_user}",
            "gists_url": "https://api.github.com/users/lkuligin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lkuligin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lkuligin/subscriptions",
            "organizations_url": "https://api.github.com/users/lkuligin/orgs",
            "repos_url": "https://api.github.com/users/lkuligin/repos",
            "events_url": "https://api.github.com/users/lkuligin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lkuligin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-13T15:05:02Z",
        "updated_at": "2023-11-29T19:56:12Z",
        "closed_at": "2023-11-29T19:56:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13293",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13293",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13293.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13293.patch",
            "merged_at": null
        },
        "body": "Replace this entire comment with:\r\n  - **Description:** made `abatch` actually concurrent \r\n  - **Issue:** it processed batch sequentially before\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13293/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13293/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13291",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13291/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13291/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13291/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13291",
        "id": 1990699489,
        "node_id": "I_kwDOIPDwls52p6nh",
        "number": 13291,
        "title": "Context retrieval ",
        "user": {
            "login": "stbedoya",
            "id": 17913665,
            "node_id": "MDQ6VXNlcjE3OTEzNjY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/17913665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stbedoya",
            "html_url": "https://github.com/stbedoya",
            "followers_url": "https://api.github.com/users/stbedoya/followers",
            "following_url": "https://api.github.com/users/stbedoya/following{/other_user}",
            "gists_url": "https://api.github.com/users/stbedoya/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stbedoya/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stbedoya/subscriptions",
            "organizations_url": "https://api.github.com/users/stbedoya/orgs",
            "repos_url": "https://api.github.com/users/stbedoya/repos",
            "events_url": "https://api.github.com/users/stbedoya/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stbedoya/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-13T13:48:33Z",
        "updated_at": "2023-11-13T13:59:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLinux and langchain \r\n\r\n\r\n\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [X] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nI am currently implementing a RAG chatbot using `ConversationBufferMemory` and `ConversationalRetrievalChain`as follow: \r\n\r\n```\r\n memory = ConversationBufferMemory(\r\n        memory_key=\"chat_history\",\r\n        output_key=\"answer\",\r\n        return_messages=True,\r\n    )\r\n```\r\n\r\n    chain = ConversationalRetrievalChain.from_llm(\r\n        llm,\r\n        chain_type=\"stuff\",\r\n        retriever=db.as_retriever(search_kwargs={\"k\": 1}),\r\n        memory=memory,\r\n        combine_docs_chain_kwargs={\"prompt\": PROMPT},\r\n        return_source_documents=True,\r\n        verbose=True,\r\n    )`\r\nWhere PROMPT is a prompt template that inputs chat_history, context and question. \r\n\r\n### Expected behavior\r\n\r\nI would like the retrieval chain and memory chain to keep track of the context i.e. instead of updating the context with the retrieved documents every time a user input a new question, I can keep track of the context.\r\nMy end goal is to have a function that takes into the old context, validate if retrieval of new documents is necessary, and if those documents can replace the new context or they need to be append to the old context. Is there a way to do this?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13291/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13291/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13290",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13290/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13290/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13290/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13290",
        "id": 1990492825,
        "node_id": "PR_kwDOIPDwls5fSoa8",
        "number": 13290,
        "title": "Improve openai callback",
        "user": {
            "login": "IsakNyberg",
            "id": 36712644,
            "node_id": "MDQ6VXNlcjM2NzEyNjQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/36712644?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IsakNyberg",
            "html_url": "https://github.com/IsakNyberg",
            "followers_url": "https://api.github.com/users/IsakNyberg/followers",
            "following_url": "https://api.github.com/users/IsakNyberg/following{/other_user}",
            "gists_url": "https://api.github.com/users/IsakNyberg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IsakNyberg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IsakNyberg/subscriptions",
            "organizations_url": "https://api.github.com/users/IsakNyberg/orgs",
            "repos_url": "https://api.github.com/users/IsakNyberg/repos",
            "events_url": "https://api.github.com/users/IsakNyberg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IsakNyberg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T11:48:54Z",
        "updated_at": "2023-11-14T08:20:13Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13290",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13290",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13290.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13290.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n\r\nAs we discussed in #12994 the current callback only returns 0 when the cost fails to calculate. This way it will raise an error instead to prevent users to falsely relying on an incorrect cost. I also improved the copy functions so that the actually create a new instance of the object and does not just return the same object. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13290/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13290/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13289",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13289/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13289/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13289/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13289",
        "id": 1990442921,
        "node_id": "I_kwDOIPDwls52o7-p",
        "number": 13289,
        "title": "Issue: Create async streaming custom LLM",
        "user": {
            "login": "Nikita-Sherstnev",
            "id": 45091811,
            "node_id": "MDQ6VXNlcjQ1MDkxODEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45091811?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nikita-Sherstnev",
            "html_url": "https://github.com/Nikita-Sherstnev",
            "followers_url": "https://api.github.com/users/Nikita-Sherstnev/followers",
            "following_url": "https://api.github.com/users/Nikita-Sherstnev/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nikita-Sherstnev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nikita-Sherstnev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nikita-Sherstnev/subscriptions",
            "organizations_url": "https://api.github.com/users/Nikita-Sherstnev/orgs",
            "repos_url": "https://api.github.com/users/Nikita-Sherstnev/repos",
            "events_url": "https://api.github.com/users/Nikita-Sherstnev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nikita-Sherstnev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-13T11:20:02Z",
        "updated_at": "2023-11-13T19:06:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI currently have an OLLAMA model running locally. I aim to develop a CustomLLM model that supports asynchronous streaming to interface with this model. However, the OLLAMA adapter provided by LangChain lacks support for these specific features. How can I accomplish this integration?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13289/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13289/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13288",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13288/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13288/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13288/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13288",
        "id": 1990415478,
        "node_id": "I_kwDOIPDwls52o1R2",
        "number": 13288,
        "title": "Incorporate Memory inside ElasticsearchDatabaseChain",
        "user": {
            "login": "ZohaibRamzan",
            "id": 48449038,
            "node_id": "MDQ6VXNlcjQ4NDQ5MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/48449038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZohaibRamzan",
            "html_url": "https://github.com/ZohaibRamzan",
            "followers_url": "https://api.github.com/users/ZohaibRamzan/followers",
            "following_url": "https://api.github.com/users/ZohaibRamzan/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZohaibRamzan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZohaibRamzan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZohaibRamzan/subscriptions",
            "organizations_url": "https://api.github.com/users/ZohaibRamzan/orgs",
            "repos_url": "https://api.github.com/users/ZohaibRamzan/repos",
            "events_url": "https://api.github.com/users/ZohaibRamzan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZohaibRamzan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6077048506,
                "node_id": "LA_kwDOIPDwls8AAAABajhmug",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20elasticsearch",
                "name": "integration: elasticsearch",
                "color": "DAB5EC",
                "default": false,
                "description": "Related to elastic/elasticsearch integrations"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-13T11:02:36Z",
        "updated_at": "2023-11-14T07:58:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am working with an elastic search index running locally via a docker container. Now I want to incorporate memory so that an elastic search query can be handled just like a chat. How can I do that so that every time the question I asked from the previous answers? It should prepare the es query accordingly.\r\n\r\nHere is the sample code:\r\n\r\n\r\n```\r\nfrom elasticsearch import Elasticsearch\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.chains.elasticsearch_database import ElasticsearchDatabaseChain\r\nimport os\r\nimport openai\r\nfrom dotenv import load_dotenv\r\nimport json\r\nfrom langchain.prompts import HumanMessagePromptTemplate, AIMessagePromptTemplate\r\nfrom langchain.schema import HumanMessage, AIMessage\r\nfrom langchain.memory import ConversationBufferMemory\r\nfrom langchain.prompts import PromptTemplate\r\n\r\nload_dotenv()\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = os.getenv('OPENAI_API_KEY')\r\n\r\nELASTIC_SEARCH_SERVER = \"http://localhost:9200\"\r\ndb = Elasticsearch(ELASTIC_SEARCH_SERVER)\r\n\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\")\r\n\r\nPROMPT_TEMPLATE = \"\"\"Given an input question, create a syntactically correct Elasticsearch query to run. Unless the user specifies in their question a specific number of examples they wish to obtain, always limit your query to at most {top_k} results. You can order the results by a relevant column to return the most interesting examples in the database.\r\n\r\nUnless told to do not query for all the columns from a specific index, only ask for a the few relevant columns given the question.\r\n\r\nPay attention to use only the column names that you can see in the mapping description. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which index. Return the query as valid json.\r\n\r\nUse the following format:\r\n\r\nQuestion: Question here\r\nESQuery: Elasticsearch Query formatted as json\r\n\"\"\"\r\n\r\nPROMPT_SUFFIX = \"\"\"Only use the following Elasticsearch indices:\r\n{indices_info}\r\n\r\n\r\nQuestion: {input}\r\nESQuery:\"\"\"\r\nquery_Prompt=PROMPT_TEMPLATE + PROMPT_SUFFIX\r\nPROMPT = PromptTemplate.from_template(\r\n    query_Prompt,\r\n)\r\n\r\n\r\n\r\nDEFAULT_ANSWER_TEMPLATE = \"\"\"Given an input question and relevant data from a database, answer the user question.\r\nOnly provide answer to me.\r\n\r\nUse the following format:\r\n\r\nQuestion: {input}\r\nData: {data}\r\n\r\nAnswer:\"\"\"\r\n\r\nANSWER_PROMPT = PromptTemplate.from_template(DEFAULT_ANSWER_TEMPLATE)\r\n\r\nllm = ChatOpenAI(model_name=\"gpt-3.5-turbo\", temperature=0)\r\nchain = ElasticsearchDatabaseChain.from_llm(llm=llm, database=db, query_prompt=PROMPT, answer_prompt=ANSWER_PROMPT ,verbose=True, memory=memory)\r\n\r\nwhile True:\r\n    # Get user input\r\n    user_input = input(\"Ask a question (or type 'exit' to end): \")\r\n\r\n    if user_input.lower() == 'exit':\r\n        break\r\n\r\n\r\n    # Invoke the chat model with the user's question\r\n    chain_answer = chain.invoke(user_input)\r\n\r\n```\r\n\r\nWhat could be the solution? Currently, it is not working if the following question is related to the previous answer.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13288/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13288/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13287",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13287/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13287/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13287/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13287",
        "id": 1990201859,
        "node_id": "PR_kwDOIPDwls5fRo-v",
        "number": 13287,
        "title": "add cookbook for RAG with baidu QIANFAN and elasticsearch",
        "user": {
            "login": "wemysschen",
            "id": 38650638,
            "node_id": "MDQ6VXNlcjM4NjUwNjM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/38650638?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wemysschen",
            "html_url": "https://github.com/wemysschen",
            "followers_url": "https://api.github.com/users/wemysschen/followers",
            "following_url": "https://api.github.com/users/wemysschen/following{/other_user}",
            "gists_url": "https://api.github.com/users/wemysschen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wemysschen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wemysschen/subscriptions",
            "organizations_url": "https://api.github.com/users/wemysschen/orgs",
            "repos_url": "https://api.github.com/users/wemysschen/repos",
            "events_url": "https://api.github.com/users/wemysschen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wemysschen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6077048506,
                "node_id": "LA_kwDOIPDwls8AAAABajhmug",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20elasticsearch",
                "name": "integration: elasticsearch",
                "color": "DAB5EC",
                "default": false,
                "description": "Related to elastic/elasticsearch integrations"
            },
            {
                "id": 6154420538,
                "node_id": "LA_kwDOIPDwls8AAAABbtUBOg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/template",
                "name": "template",
                "color": "145FB1",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T09:09:55Z",
        "updated_at": "2023-11-13T22:45:25Z",
        "closed_at": "2023-11-13T22:45:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13287",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13287",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13287.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13287.patch",
            "merged_at": "2023-11-13T22:45:25Z"
        },
        "body": " **Description:** \r\nAdd cookbook for RAG with baidu QIANFAN and elasticsearch.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13287/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13287/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13286",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13286/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13286/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13286/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13286",
        "id": 1990163579,
        "node_id": "I_kwDOIPDwls52n3x7",
        "number": 13286,
        "title": "Support for Text Embedding Inference (TEI) from HuggingFace",
        "user": {
            "login": "Steinkreis",
            "id": 89245186,
            "node_id": "MDQ6VXNlcjg5MjQ1MTg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/89245186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Steinkreis",
            "html_url": "https://github.com/Steinkreis",
            "followers_url": "https://api.github.com/users/Steinkreis/followers",
            "following_url": "https://api.github.com/users/Steinkreis/following{/other_user}",
            "gists_url": "https://api.github.com/users/Steinkreis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Steinkreis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Steinkreis/subscriptions",
            "organizations_url": "https://api.github.com/users/Steinkreis/orgs",
            "repos_url": "https://api.github.com/users/Steinkreis/repos",
            "events_url": "https://api.github.com/users/Steinkreis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Steinkreis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-13T08:52:10Z",
        "updated_at": "2023-11-29T04:18:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nSimilar to Text Generation Inference (TGI) for LLMs, HuggingFace created an inference server for text embeddings models called Text Embedding Inference (TEI). \r\nSee: https://github.com/huggingface/text-embeddings-inference\r\nCould you integrate TEI into the supported LangChain text embedding models or do you guys already plan to do this? \n\n### Motivation\n\nWe currently develop a rag based chat app and plan to deploy the components as microservices (LLM, DB, Embedding Model). Currently the only other suitable solution for us would be to use SagemakerEndpointEmbeddings. However being able to use TEI would be a great benefit.\n\n### Your contribution\n\nI work as an ML Engineer and could probably assist in some way if necessary.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13286/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13286/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13285",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13285/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13285/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13285/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13285",
        "id": 1990145452,
        "node_id": "PR_kwDOIPDwls5fRciQ",
        "number": 13285,
        "title": "Update index.mdx",
        "user": {
            "login": "NPuhlmann",
            "id": 21239020,
            "node_id": "MDQ6VXNlcjIxMjM5MDIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/21239020?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NPuhlmann",
            "html_url": "https://github.com/NPuhlmann",
            "followers_url": "https://api.github.com/users/NPuhlmann/followers",
            "following_url": "https://api.github.com/users/NPuhlmann/following{/other_user}",
            "gists_url": "https://api.github.com/users/NPuhlmann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NPuhlmann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NPuhlmann/subscriptions",
            "organizations_url": "https://api.github.com/users/NPuhlmann/orgs",
            "repos_url": "https://api.github.com/users/NPuhlmann/repos",
            "events_url": "https://api.github.com/users/NPuhlmann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NPuhlmann/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T08:41:40Z",
        "updated_at": "2023-11-30T03:06:34Z",
        "closed_at": "2023-11-30T03:06:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13285",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13285",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13285.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13285.patch",
            "merged_at": "2023-11-30T03:06:34Z"
        },
        "body": "grammar correction\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13285/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13285/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13284",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13284/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13284/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13284/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13284",
        "id": 1990129379,
        "node_id": "I_kwDOIPDwls52nvbj",
        "number": 13284,
        "title": "NotFoundError: Error code: 404 - {'error': {'code': '404', 'message': 'Resource not found'}} when using openai==1.2.3 and langchain==0.0.335",
        "user": {
            "login": "glejdis",
            "id": 53597226,
            "node_id": "MDQ6VXNlcjUzNTk3MjI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/53597226?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glejdis",
            "html_url": "https://github.com/glejdis",
            "followers_url": "https://api.github.com/users/glejdis/followers",
            "following_url": "https://api.github.com/users/glejdis/following{/other_user}",
            "gists_url": "https://api.github.com/users/glejdis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/glejdis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glejdis/subscriptions",
            "organizations_url": "https://api.github.com/users/glejdis/orgs",
            "repos_url": "https://api.github.com/users/glejdis/repos",
            "events_url": "https://api.github.com/users/glejdis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/glejdis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-11-13T08:30:39Z",
        "updated_at": "2023-12-05T23:37:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nfrom langchain.chat_models import AzureChatOpenAI\r\n\r\nllm_chat = AzureChatOpenAI(deployment_name=\"gpt-4_32k\", model_name = 'gpt-4-32k', openai_api_version=openai.api_version, temperature=0)\r\n\r\nfrom langchain.chains import LLMChain\r\nfrom langchain.prompts import PromptTemplate\r\n\r\nprompt = PromptTemplate(\r\n    input_variables = [\"text\"],\r\n    template=\"{text}\"\r\n)\r\n\r\nllmchain = LLMChain(llm=llm_chat, prompt=prompt)\r\nllmchain.run(text)\r\n\r\nNotFoundError: Error code: 404 - {'error': {'code': '404', 'message': 'Resource not found'}}\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nopenai==1.2.3 and langchain==0.0.335\r\n\r\nfrom langchain.chat_models import AzureChatOpenAI\r\ntext = \"Where is Germany located?\"\r\nllm_chat = AzureChatOpenAI(deployment_name=\"gpt-4_32k\", model_name = 'gpt-4-32k', openai_api_version=openai.api_version, temperature=0)\r\n\r\nfrom langchain.chains import LLMChain\r\nfrom langchain.prompts import PromptTemplate\r\n\r\nprompt = PromptTemplate(\r\n    input_variables = [\"text\"],\r\n    template=\"{text}\"\r\n)\r\n\r\nllmchain = LLMChain(llm=llm_chat, prompt=prompt)\r\nllmchain.run(text)\n\n### Expected behavior\n\nIn europe",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13284/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13284/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13283",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13283/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13283/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13283/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13283",
        "id": 1990101660,
        "node_id": "I_kwDOIPDwls52noqc",
        "number": 13283,
        "title": "Replacing the correct code with GPT-4 will result in an error",
        "user": {
            "login": "Gaia-Wu",
            "id": 94101986,
            "node_id": "U_kgDOBZvh4g",
            "avatar_url": "https://avatars.githubusercontent.com/u/94101986?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gaia-Wu",
            "html_url": "https://github.com/Gaia-Wu",
            "followers_url": "https://api.github.com/users/Gaia-Wu/followers",
            "following_url": "https://api.github.com/users/Gaia-Wu/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gaia-Wu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gaia-Wu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gaia-Wu/subscriptions",
            "organizations_url": "https://api.github.com/users/Gaia-Wu/orgs",
            "repos_url": "https://api.github.com/users/Gaia-Wu/repos",
            "events_url": "https://api.github.com/users/Gaia-Wu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gaia-Wu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-13T08:16:48Z",
        "updated_at": "2023-11-13T08:27:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n**my code\uff1a**\r\n\r\nfrom langchain.document_loaders import PyPDFLoader, TextLoader, PyMuPDFLoader\r\nfrom langchain.chat_models import ChatOpenAI\r\n\r\nfrom langchain.chains import QAGenerationChain\r\nfrom langchain.prompts.prompt import PromptTemplate\r\n\r\nloader_pdf = PyMuPDFLoader(\"/Users/11.pdf\")\r\n\r\ndoc_pdf = loader_pdf.load()\r\n\r\nllm = ChatOpenAI(temperature=0.1,model_name=\"gpt-3.5-turbo-16k\")\r\ntempl = \"\"\"You are a smart assistant designed to help high school teachers come up with reading comprehension questions.\r\nGiven a piece of text, you must come up with a question and answer pair that can be used to test a student's reading comprehension abilities.\r\nWhen coming up with this question/answer pair, you must respond in the following format in Chinese:\r\n```\r\n{{\r\n    \"question\": \"$YOUR_QUESTION_HERE\",\r\n    \"answer\": \"$THE_ANSWER_HERE\"\r\n}}\r\n```\r\n\r\nEverything between the ``` must be valid json.\r\n\r\nPlease come up with a question/answer pair, in the specified JSON format, for the following text:\r\n----------------\r\n{text}\"\"\"\r\n\r\nprompt = PromptTemplate.from_template(templ)\r\nchain = QAGenerationChain.from_llm(llm=llm, prompt=prompt)\r\n\r\ndoc_ = ''\r\nfor i in doc_pdf:\r\n    doc_ += i.page_content\r\n\r\nprint(doc_)\r\nqa_pdf = chain.run(doc_)\r\n\r\n\r\nThis code can run correctly and have results.\r\nBut when \u201cmodel_name='gpt-4' \u201d, an error is reported.\r\nWhat is it???\r\n\r\n**the error\uff1a**\r\n---------------------------------------------------------------------------\r\nJSONDecodeError                           Traceback (most recent call last)\r\nCell In[22], line 1\r\n----> 1 qa_pdf = chain.run(doc_)\r\n\r\nFile ~/anaconda3/envs/langchain-py311/lib/python3.11/site-packages/langchain/chains/base.py:505, in Chain.run(self, callbacks, tags, metadata, *args, **kwargs)\r\n    503     if len(args) != 1:\r\n    504         raise ValueError(\"`run` supports only one positional argument.\")\r\n--> 505     return self(args[0], callbacks=callbacks, tags=tags, metadata=metadata)[\r\n    506         _output_key\r\n    507     ]\r\n    509 if kwargs and not args:\r\n    510     return self(kwargs, callbacks=callbacks, tags=tags, metadata=metadata)[\r\n    511         _output_key\r\n    512     ]\r\n\r\nFile ~/anaconda3/envs/langchain-py311/lib/python3.11/site-packages/langchain/chains/base.py:310, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, metadata, run_name, include_run_info)\r\n    308 except BaseException as e:\r\n    309     run_manager.on_chain_error(e)\r\n--> 310     raise e\r\n    311 run_manager.on_chain_end(outputs)\r\n    312 final_outputs: Dict[str, Any] = self.prep_outputs(\r\n    313     inputs, outputs, return_only_outputs\r\n    314 )\r\n\r\nFile ~/anaconda3/envs/langchain-py311/lib/python3.11/site-packages/langchain/chains/base.py:304, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, metadata, run_name, include_run_info)\r\n    297 run_manager = callback_manager.on_chain_start(\r\n    298     dumpd(self),\r\n    299     inputs,\r\n    300     name=run_name,\r\n    301 )\r\n    302 try:\r\n    303     outputs = (\r\n--> 304         self._call(inputs, run_manager=run_manager)\r\n    305         if new_arg_supported\r\n    306         else self._call(inputs)\r\n    307     )\r\n    308 except BaseException as e:\r\n    309     run_manager.on_chain_error(e)\r\n\r\nFile ~/anaconda3/envs/langchain-py311/lib/python3.11/site-packages/langchain/chains/qa_generation/base.py:75, in QAGenerationChain._call(self, inputs, run_manager)\r\n     71 docs = self.text_splitter.create_documents([inputs[self.input_key]])\r\n     72 results = self.llm_chain.generate(\r\n     73     [{\"text\": d.page_content} for d in docs], run_manager=run_manager\r\n     74 )\r\n---> 75 print(results)\r\n     76 qa = [json.loads(res[0].text) for res in results.generations]\r\n     77 return {self.output_key: qa}\r\n\r\nFile ~/anaconda3/envs/langchain-py311/lib/python3.11/site-packages/langchain/chains/qa_generation/base.py:75, in <listcomp>(.0)\r\n     71 docs = self.text_splitter.create_documents([inputs[self.input_key]])\r\n     72 results = self.llm_chain.generate(\r\n     73     [{\"text\": d.page_content} for d in docs], run_manager=run_manager\r\n     74 )\r\n---> 75 print(results)\r\n     76 qa = [json.loads(res[0].text) for res in results.generations]\r\n     77 return {self.output_key: qa}\r\n\r\nFile ~/anaconda3/envs/langchain-py311/lib/python3.11/json/__init__.py:346, in loads(s, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)\r\n    341     s = s.decode(detect_encoding(s), 'surrogatepass')\r\n    343 if (cls is None and object_hook is None and\r\n    344         parse_int is None and parse_float is None and\r\n    345         parse_constant is None and object_pairs_hook is None and not kw):\r\n--> 346     return _default_decoder.decode(s)\r\n    347 if cls is None:\r\n    348     cls = JSONDecoder\r\n\r\nFile ~/anaconda3/envs/langchain-py311/lib/python3.11/json/decoder.py:337, in JSONDecoder.decode(self, s, _w)\r\n    332 def decode(self, s, _w=WHITESPACE.match):\r\n    333     \"\"\"Return the Python representation of ``s`` (a ``str`` instance\r\n    334     containing a JSON document).\r\n    335 \r\n    336     \"\"\"\r\n--> 337     obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n    338     end = _w(s, end).end()\r\n    339     if end != len(s):\r\n\r\nFile ~/anaconda3/envs/langchain-py311/lib/python3.11/json/decoder.py:355, in JSONDecoder.raw_decode(self, s, idx)\r\n    353     obj, end = self.scan_once(s, idx)\r\n    354 except StopIteration as err:\r\n--> 355     raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\n    356 return obj, end\r\n\r\nJSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13283/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13283/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13282",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13282/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13282/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13282/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13282",
        "id": 1990059585,
        "node_id": "I_kwDOIPDwls52neZB",
        "number": 13282,
        "title": "Use \"parse_file\" in class \"ConversationBufferMemory\" raise a ValidationError",
        "user": {
            "login": "Natmat626",
            "id": 102717046,
            "node_id": "U_kgDOBh9Wdg",
            "avatar_url": "https://avatars.githubusercontent.com/u/102717046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Natmat626",
            "html_url": "https://github.com/Natmat626",
            "followers_url": "https://api.github.com/users/Natmat626/followers",
            "following_url": "https://api.github.com/users/Natmat626/following{/other_user}",
            "gists_url": "https://api.github.com/users/Natmat626/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Natmat626/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Natmat626/subscriptions",
            "organizations_url": "https://api.github.com/users/Natmat626/orgs",
            "repos_url": "https://api.github.com/users/Natmat626/repos",
            "events_url": "https://api.github.com/users/Natmat626/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Natmat626/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-13T07:47:40Z",
        "updated_at": "2023-11-28T10:45:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nPlatform:Windows\r\nLangChain:0.0.335\r\npython:3.9.12\n\n### Who can help?\n\n@eyurtsev @hwchase17 @hwchase17\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [X] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nHere is my code:\r\n\r\nfrom langchain.memory import ConversationBufferMemory\r\nimport langchain.load\r\n\r\nChatMemory = ConversationBufferMemory()\r\nChatMemory.chat_memory.add_ai_message(\"Hello\")\r\nChatMemory.chat_memory.add_user_message(\"HI\")\r\ntojson = ChatMemory.json()\r\n\r\nwith open('E:\\\\memory.json', 'w') as file:\r\n    file.write(tojson)\r\n    file.close()\r\n\r\nParserChatMemory = ConversationBufferMemory.parse_file('E:\\\\memory.json')\n\n### Expected behavior\n\nRegarding the parse_file method in ConversationBufferMemory, there is not much introduction in the document, and I have not found a similar problem description. However, saving Memory into a file/or generating it from a file is a normal requirement, but when I execute parse_file This method throws a \"ValidationError\", the complete description is as follows:\r\n\r\nValidationError: 1 validation error for ConversationBufferMemory\r\nchat_memory\r\n  instance of BaseChatMessageHistory expected (type=type_error.arbitrary_type; expected_arbitrary_type=BaseChatMessageHistory)\r\n\r\nIf there is any violation of my operation, please tell me, thank you very much",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13282/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13282/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13281",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13281/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13281/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13281/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13281",
        "id": 1990054092,
        "node_id": "I_kwDOIPDwls52ndDM",
        "number": 13281,
        "title": "Utilize metadata during retrieval in ConversationalRetrieval and PGvector",
        "user": {
            "login": "toobashahid210",
            "id": 102026619,
            "node_id": "U_kgDOBhTNew",
            "avatar_url": "https://avatars.githubusercontent.com/u/102026619?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/toobashahid210",
            "html_url": "https://github.com/toobashahid210",
            "followers_url": "https://api.github.com/users/toobashahid210/followers",
            "following_url": "https://api.github.com/users/toobashahid210/following{/other_user}",
            "gists_url": "https://api.github.com/users/toobashahid210/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/toobashahid210/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/toobashahid210/subscriptions",
            "organizations_url": "https://api.github.com/users/toobashahid210/orgs",
            "repos_url": "https://api.github.com/users/toobashahid210/repos",
            "events_url": "https://api.github.com/users/toobashahid210/events{/privacy}",
            "received_events_url": "https://api.github.com/users/toobashahid210/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-13T07:43:07Z",
        "updated_at": "2023-11-15T14:08:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\r\nI am using PGvector as retriever in my Conversational Retriever Chain. \r\nin my document there is some meta information saved like topic, keywords etc. \r\n\r\nhow can use this meta information in retrieval instead of only using content? \r\n\r\nWould appreciate any solution for this. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13281/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13281/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13280",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13280/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13280/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13280/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13280",
        "id": 1990051152,
        "node_id": "PR_kwDOIPDwls5fRH_p",
        "number": 13280,
        "title": "Ollama pass kwargs as options instead of top",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-13T07:40:40Z",
        "updated_at": "2023-11-13T18:28:48Z",
        "closed_at": "2023-11-13T18:28:47Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13280",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13280",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13280.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13280.patch",
            "merged_at": "2023-11-13T18:28:47Z"
        },
        "body": "Noticed params are really in `options` instead while reviewing #12895 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13280/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13280/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13279",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13279/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13279/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13279/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13279",
        "id": 1990021102,
        "node_id": "I_kwDOIPDwls52nU_u",
        "number": 13279,
        "title": "qa retrieval",
        "user": {
            "login": "4entertainment",
            "id": 58992739,
            "node_id": "MDQ6VXNlcjU4OTkyNzM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/58992739?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/4entertainment",
            "html_url": "https://github.com/4entertainment",
            "followers_url": "https://api.github.com/users/4entertainment/followers",
            "following_url": "https://api.github.com/users/4entertainment/following{/other_user}",
            "gists_url": "https://api.github.com/users/4entertainment/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/4entertainment/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/4entertainment/subscriptions",
            "organizations_url": "https://api.github.com/users/4entertainment/orgs",
            "repos_url": "https://api.github.com/users/4entertainment/repos",
            "events_url": "https://api.github.com/users/4entertainment/events{/privacy}",
            "received_events_url": "https://api.github.com/users/4entertainment/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-13T07:15:53Z",
        "updated_at": "2023-11-13T07:40:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\ni should qa over an document using retrieval. i should not use any large language model. i can only use embedding model. here is my code:\r\n\r\n```\r\n# import\r\nfrom langchain.embeddings.sentence_transformer import SentenceTransformerEmbeddings\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.document_loaders import TextLoader\r\nfrom silly import no_ssl_verification\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.prompts import ChatPromptTemplate\r\nfrom langchain.schema import StrOutputParser\r\nfrom langchain.schema.runnable import RunnablePassthrough\r\nfrom langchain.chains import RetrievalQA\r\nfrom langchain.document_loaders import TextLoader\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.vectorstores import Chroma\r\n\r\n\r\nwith no_ssl_verification():\r\n    # load the document and split it into chunks\r\n    loader = TextLoader(\"state_of_the_union.txt\")\r\n    documents = loader.load()\r\n\r\n    # split it into chunks\r\n    text_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\n    docs = text_splitter.split_documents(documents)\r\n\r\n    # create the open-source embedding function\r\n    embedding_function = SentenceTransformerEmbeddings(model_name=\"all-MiniLM-L6-v2\")\r\n    # hfemb = HuggingFaceEmbeddings()\r\n    # load it into Chroma\r\n    db = Chroma.from_documents(docs, embedding_function)\r\n    # query it\r\n    query = \"What did the president say about Ketanji Brown Jackson\"\r\n    docs = db.similarity_search(query)\r\n\r\n    # print results\r\n    print(docs[0].page_content)\r\n    qa = RetrievalQA.from_chain_type(llm=OpenAI(), chain_type=\"stuff\", retriever=docsearch.as_retriever())\r\n\r\n    query = \"What did the president say about Ketanji Brown Jackson\"\r\n    qa.run(query)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n```\r\n\r\nhow can i change this code with not using any llm in \"qa = RetrievalQA.from_chain_type(llm=OpenAI(), chain_type=\"stuff\", retriever=docsearch.as_retriever())\"\r\n\r\n\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13279/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13279/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13278",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13278/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13278/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13278/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13278",
        "id": 1989993127,
        "node_id": "I_kwDOIPDwls52nOKn",
        "number": 13278,
        "title": "retrieval embedding",
        "user": {
            "login": "4entertainment",
            "id": 58992739,
            "node_id": "MDQ6VXNlcjU4OTkyNzM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/58992739?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/4entertainment",
            "html_url": "https://github.com/4entertainment",
            "followers_url": "https://api.github.com/users/4entertainment/followers",
            "following_url": "https://api.github.com/users/4entertainment/following{/other_user}",
            "gists_url": "https://api.github.com/users/4entertainment/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/4entertainment/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/4entertainment/subscriptions",
            "organizations_url": "https://api.github.com/users/4entertainment/orgs",
            "repos_url": "https://api.github.com/users/4entertainment/repos",
            "events_url": "https://api.github.com/users/4entertainment/events{/privacy}",
            "received_events_url": "https://api.github.com/users/4entertainment/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-13T06:49:13Z",
        "updated_at": "2023-12-04T04:59:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\ni fix the code as following:\r\n\r\n```\r\n# import\r\nfrom langchain.embeddings.sentence_transformer import SentenceTransformerEmbeddings\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.document_loaders import TextLoader\r\nfrom silly import no_ssl_verification\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\n\r\nwith no_ssl_verification():\r\n    # load the document and split it into chunks\r\n    loader = TextLoader(\"paul_graham/paul_graham_essay.txt\")\r\n    documents = loader.load()\r\n\r\n    # split it into chunks\r\n    text_splitter = CharacterTextSplitter(chunk_size=2000, chunk_overlap=0)\r\n    docs = text_splitter.split_documents(documents)\r\n\r\n    # create the open-source embedding function\r\n    embedding_function = SentenceTransformerEmbeddings(model_name=\"all-MiniLM-L6-v2\")\r\n    # hfemb = HuggingFaceEmbeddings()\r\n    # load it into Chroma\r\n    db = Chroma.from_documents(docs, embedding_function)\r\n\r\n    # query it\r\n    query = \"What were the two main things the author worked on before college?\"\r\n    docs = db.similarity_search(query)\r\n\r\n    # print results\r\n    print(docs[0].page_content)\r\n```\r\n\r\ni get following output:\r\n\r\n\"I was nervous about money, because I could sense that Interleaf was on the way down. Freelance Lisp hacking work was very rare, and I didn't want to have to program in another language, which in those days would have meant C++ if I was lucky. So with my unerring nose for financial opportunity, I decided to write another book on Lisp. This would be a popular book, the sort of book that could be used as a textbook. I imagined myself living frugally off the royalties and spending all my time painting. (The painting on the cover of this book, ANSI Common Lisp, is one that I painted around this time.)\r\n\r\nThe best thing about New York for me was the presence of Idelle and Julian Weber. Idelle Weber was a painter, one of the early photorealists, and I'd taken her painting class at Harvard. I've never known a teacher more beloved by her students. Large numbers of former students kept in touch with her, including me. After I moved to New York I became her de facto studio assistant.\r\n\r\nShe liked to paint on big, square canvases, 4 to 5 feet on a side. One day in late 1994 as I was stretching one of these monsters there was something on the radio about a famous fund manager. He wasn't that much older than me, and was super rich. The thought suddenly occurred to me: why don't I become rich? Then I'll be able to work on whatever I want.\r\n\r\nMeanwhile I'd been hearing more and more about this new thing called the World Wide Web. Robert Morris showed it to me when I visited him in Cambridge, where he was now in grad school at Harvard. It seemed to me that the web would be a big deal. I'd seen what graphical user interfaces had done for the popularity of microcomputers. It seemed like the web would do the same for the internet.\"\r\n\r\nbu i should get \"Before college the two main things I worked on, outside of school, were writing and programming.\"\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13278/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13278/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13277",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13277/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13277/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13277/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13277",
        "id": 1989982161,
        "node_id": "I_kwDOIPDwls52nLfR",
        "number": 13277,
        "title": "how to use SQLDatabaseSequentialChain",
        "user": {
            "login": "Gzxl",
            "id": 6359205,
            "node_id": "MDQ6VXNlcjYzNTkyMDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6359205?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gzxl",
            "html_url": "https://github.com/Gzxl",
            "followers_url": "https://api.github.com/users/Gzxl/followers",
            "following_url": "https://api.github.com/users/Gzxl/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gzxl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gzxl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gzxl/subscriptions",
            "organizations_url": "https://api.github.com/users/Gzxl/orgs",
            "repos_url": "https://api.github.com/users/Gzxl/repos",
            "events_url": "https://api.github.com/users/Gzxl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gzxl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-13T06:38:26Z",
        "updated_at": "2023-11-13T06:44:21Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "how can I use SQLDatabaseSequentialChain  to reduce the number of tokens for llms\uff0ccan you give me some example or demo\uff0cI dont find useful info from the docs",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13277/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13277/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13276",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13276/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13276/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13276/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13276",
        "id": 1989960245,
        "node_id": "I_kwDOIPDwls52nGI1",
        "number": 13276,
        "title": "turkish embedding",
        "user": {
            "login": "4entertainment",
            "id": 58992739,
            "node_id": "MDQ6VXNlcjU4OTkyNzM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/58992739?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/4entertainment",
            "html_url": "https://github.com/4entertainment",
            "followers_url": "https://api.github.com/users/4entertainment/followers",
            "following_url": "https://api.github.com/users/4entertainment/following{/other_user}",
            "gists_url": "https://api.github.com/users/4entertainment/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/4entertainment/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/4entertainment/subscriptions",
            "organizations_url": "https://api.github.com/users/4entertainment/orgs",
            "repos_url": "https://api.github.com/users/4entertainment/repos",
            "events_url": "https://api.github.com/users/4entertainment/events{/privacy}",
            "received_events_url": "https://api.github.com/users/4entertainment/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-13T06:15:51Z",
        "updated_at": "2023-11-30T15:23:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\ni have the following code for q&a system with retrieval mechanism:\r\n\r\n```\r\n# import\r\nfrom langchain.embeddings.sentence_transformer import SentenceTransformerEmbeddings\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.document_loaders import TextLoader\r\nfrom silly import no_ssl_verification\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\n\r\nwith no_ssl_verification():\r\n    # load the document and split it into chunks\r\n    loader = TextLoader(\"paul_graham/paul_graham_essay.txt\")\r\n    documents = loader.load()\r\n\r\n    # split it into chunks\r\n    text_splitter = CharacterTextSplitter(chunk_size=2000, chunk_overlap=0)\r\n    docs = text_splitter.split_documents(documents)\r\n\r\n    # create the open-source embedding function\r\n    embedding_function = SentenceTransformerEmbeddings(model_name=\"all-MiniLM-L6-v2\")\r\n    # hfemb = HuggingFaceEmbeddings()\r\n    # load it into Chroma\r\n    db = Chroma.from_documents(docs, embedding_function)\r\n\r\n    # query it\r\n    query = \"What were the two main things the author worked on before college?\"\r\n    docs = db.similarity_search(query)\r\n\r\n    # print results\r\n    print(docs[0].page_content)\r\n```\r\n\r\n\r\ni should do this retrieval in turkish dataset. so i should use turkish embeddings. how can i do that in my code?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13276/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13276/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13275",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13275/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13275/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13275/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13275",
        "id": 1989950234,
        "node_id": "I_kwDOIPDwls52nDsa",
        "number": 13275,
        "title": "FAISS save_local / load_local don't be aware of avx2",
        "user": {
            "login": "blue-hope",
            "id": 38323921,
            "node_id": "MDQ6VXNlcjM4MzIzOTIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/38323921?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blue-hope",
            "html_url": "https://github.com/blue-hope",
            "followers_url": "https://api.github.com/users/blue-hope/followers",
            "following_url": "https://api.github.com/users/blue-hope/following{/other_user}",
            "gists_url": "https://api.github.com/users/blue-hope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blue-hope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blue-hope/subscriptions",
            "organizations_url": "https://api.github.com/users/blue-hope/orgs",
            "repos_url": "https://api.github.com/users/blue-hope/repos",
            "events_url": "https://api.github.com/users/blue-hope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blue-hope/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-13T06:05:42Z",
        "updated_at": "2023-11-13T06:23:55Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\n```\r\ncat /proc/version\r\n=> Linux version 5.15.107+\r\ncat /etc/debian_version\r\n=> 10.13\r\nimport langchain\r\nlangchain.__version__\r\n=> '0.0.334'\r\n```\r\n\r\nI spent some time to debug why the function signature `search` is different between linux / macos m1.\r\nI found that in macos, because it has arm arch, doesn't have swigfaiss_avx2.py file on download wheel.\r\nBesides, in linux, because it has amd64 arch, which support avx2, has swigfaiss_avx2.py.\r\n\nHere's the amd64 example:\r\nIf I make faiss vector store using `from_documents` like\r\n\r\n```py\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\n\r\ndocs = [] # some documents\r\nvs = FAISS.from_documents(docs, OpenAIEmbeddings())\r\nvs.index\r\n# <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at> >\r\nvs.index.search\r\n<bound method handle_Index.<locals>.replacement_search of <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at> >>\r\n```\r\nIt is delived from swigfaiss_avx2's IndexFlatL2, and it's search method is replaced by `replacement_search` in faiss.__init__.py intentionally.\r\n\r\nBut, when we save this to local and load like:\r\n\r\n```py\r\nvs.save_local(\"faiss\", \"abcd.index\")\r\nvs2 = FAISS.load_local(\"faiss\", OpenAIEmbeddings(), \"abcd.index\")\r\nvs2.index\r\n<faiss.swigfaiss.IndexFlat; proxy of <Swig Object of type 'faiss::IndexFlat *' at> >\r\nvs2.index.search\r\n<bound method IndexFlat.search of <faiss.swigfaiss.IndexFlat; proxy of <Swig Object of type 'faiss::IndexFlat *' at> >>\r\n```\r\n\r\nWe can see that the vector store : vs2 is the IndexFlat of swigfaiss.py, not swigfaiss_avx2.py\r\n\r\nI don't know whether the save process is problem, or the load process is problem, but I think it's quite a big bug because two `search` signatures are totally different.\r\n\r\n```py\r\nimport inspect\r\n\r\ninspect.signature(vs.index.search)\r\n# <Signature (x, k, *, params=None, D=None, I=None)>\r\ninspect.signature(vs2.index.search)\r\n# <Signautre (n, x, k, distances, labels, params=None)>\r\n```\r\n\r\nBesides, I found the `FAISS_NO_AVX2` is not work, too because when using the flag,\r\nthe `replacement_search` is not wrapped the original `search` method at all.\r\nlike explained in https://github.com/langchain-ai/langchain/issues/8857\r\n\r\nSo, how can I use the local save / load mechanism in amd64 arch?\r\n(arm doesn't have any problem) \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nYou can refer to my issue above.\n\n### Expected behavior\n\nCan use save/load faiss vectorstore machanism with avx2 IndexFlat in amd64 so that method `search` can wrapped properly by `replacement_search`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13275/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13275/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13274",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13274/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13274/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13274/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13274",
        "id": 1989888375,
        "node_id": "PR_kwDOIPDwls5fQkn1",
        "number": 13274,
        "title": "update pdf document loaders' metadata source to url for online pdf",
        "user": {
            "login": "123-fake-st",
            "id": 34491334,
            "node_id": "MDQ6VXNlcjM0NDkxMzM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/34491334?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/123-fake-st",
            "html_url": "https://github.com/123-fake-st",
            "followers_url": "https://api.github.com/users/123-fake-st/followers",
            "following_url": "https://api.github.com/users/123-fake-st/following{/other_user}",
            "gists_url": "https://api.github.com/users/123-fake-st/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/123-fake-st/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/123-fake-st/subscriptions",
            "organizations_url": "https://api.github.com/users/123-fake-st/orgs",
            "repos_url": "https://api.github.com/users/123-fake-st/repos",
            "events_url": "https://api.github.com/users/123-fake-st/events{/privacy}",
            "received_events_url": "https://api.github.com/users/123-fake-st/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-13T04:52:12Z",
        "updated_at": "2023-12-01T23:27:37Z",
        "closed_at": "2023-11-29T20:07:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13274",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13274",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13274.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13274.patch",
            "merged_at": "2023-11-29T20:07:46Z"
        },
        "body": "  - **Description:** Update 5 pdf document loaders in `langchain.document_loaders.pdf`, to store a url in the metadata (instead of a temporary, local file path) if the user provides a web path to a pdf: `PyPDFium2Loader`, `PDFMinerLoader`, `PDFMinerPDFasHTMLLoader`, `PyMuPDFLoader`, and `PDFPlumberLoader` were updated.\r\n      - The updates follow the approach used to update `PyPDFLoader` for the same behavior in #12092 \r\n      - The `PyMuPDFLoader` changes required additional work in updating `langchain.document_loaders.parsers.pdf.PyMuPDFParser` to be able to process either an `io.BufferedReader` (from local pdf) or `io.BytesIO` (from online pdf)\r\n      - The `PDFMinerPDFasHTMLLoader` change used a simpler approach since the metadata is assigned by the loader and not the parser\r\n  - **Issue:** Fixes #7034\r\n  - **Dependencies:** None\r\n\r\n\r\n```python\r\n# PyPDFium2Loader example:\r\n# old behavior\r\n>>> from langchain.document_loaders import PyPDFium2Loader\r\n>>> loader = PyPDFium2Loader('https://arxiv.org/pdf/1706.03762.pdf')\r\n>>> docs = loader.load()\r\n>>> docs[0].metadata\r\n{'source': '/var/folders/7z/d5dt407n673drh1f5cm8spj40000gn/T/tmpm5oqa92f/tmp.pdf', 'page': 0}\r\n\r\n# new behavior\r\n>>> from langchain.document_loaders import PyPDFium2Loader\r\n>>> loader = PyPDFium2Loader('https://arxiv.org/pdf/1706.03762.pdf')\r\n>>> docs = loader.load()\r\n>>> docs[0].metadata\r\n{'source': 'https://arxiv.org/pdf/1706.03762.pdf', 'page': 0}\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13274/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13274/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13273",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13273/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13273/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13273/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13273",
        "id": 1989857834,
        "node_id": "I_kwDOIPDwls52mtIq",
        "number": 13273,
        "title": "AWS LangChain using bedrock: Setting Relevance Score Function",
        "user": {
            "login": "mansourshams",
            "id": 46978885,
            "node_id": "MDQ6VXNlcjQ2OTc4ODg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/46978885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mansourshams",
            "html_url": "https://github.com/mansourshams",
            "followers_url": "https://api.github.com/users/mansourshams/followers",
            "following_url": "https://api.github.com/users/mansourshams/following{/other_user}",
            "gists_url": "https://api.github.com/users/mansourshams/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mansourshams/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mansourshams/subscriptions",
            "organizations_url": "https://api.github.com/users/mansourshams/orgs",
            "repos_url": "https://api.github.com/users/mansourshams/repos",
            "events_url": "https://api.github.com/users/mansourshams/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mansourshams/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5959659008,
                "node_id": "LA_kwDOIPDwls8AAAABYzkuAA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20aws",
                "name": "integration: aws",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to Amazon Web Services (AWS) integrations"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 17,
        "created_at": "2023-11-13T04:15:41Z",
        "updated_at": "2023-12-10T23:00:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nThank you for your great help. I have issue with setting the score function (I have AWS LangChain using bedrock). What I have is:\r\n\r\nfrom langchain.vectorstores import FAISS\r\nloader = CSVLoader(\"./rag_data/a.csv\") \r\ndocuments_aws = loader.load() \r\ndocs = CharacterTextSplitter(chunk_size=2000, chunk_overlap=400, separator=\",\").split_documents(documents_aws)\r\n\r\ndef custom_score(i):\r\n    #return 1 - 1 / (1 + np.exp(i))\r\n    return 1\r\n\r\nvectorstore_faiss_aws = FAISS.from_documents(documents=docs,embedding = br_embeddings)\r\nvectorstore_faiss_aws.relevance_score_function=custom_score\r\n\r\n\r\nThis made no difference in the scores (did not give any errors either as I am getting large negative numbers and the vectorstore_faiss_aws.similarity_search_with_relevance_scores is indifferent to the score_threshold value)\r\n\r\n\r\nThen I tried:\r\nvectorstore_faiss_aws = FAISS(relevance_score_fn=custom_score).from_documents(documents=docs,embedding = br_embeddings)\r\n\r\nand it gave the following error:\r\n FAISS.__init__() missing 4 required positional arguments: 'embedding_function', 'index', 'docstore', and 'index_to_docstore_id'\r\n\r\n\r\nYour advice is highly appreciated\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThe code is included:\r\n\r\nfrom langchain.vectorstores import FAISS\r\nloader = CSVLoader(\"./rag_data/a.csv\") \r\ndocuments_aws = loader.load() \r\ndocs = CharacterTextSplitter(chunk_size=2000, chunk_overlap=400, separator=\",\").split_documents(documents_aws)\r\n\r\ndef custom_score(i):\r\n    #return 1 - 1 / (1 + np.exp(i))\r\n    return 1\r\n\r\nvectorstore_faiss_aws = FAISS.from_documents(documents=docs,embedding = br_embeddings)\r\nvectorstore_faiss_aws.relevance_score_function=custom_score\n\n### Expected behavior\n\nThe score to be in the range of 0 and 1 and the vectorstore_faiss_aws.similarity_search_with_relevance_scores to react to score_threshold",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13273/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13273/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13272",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13272/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13272/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13272/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13272",
        "id": 1989806582,
        "node_id": "PR_kwDOIPDwls5fQS1b",
        "number": 13272,
        "title": "Cookbook for multi-modal RAG eval",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T03:12:09Z",
        "updated_at": "2023-11-13T22:26:03Z",
        "closed_at": "2023-11-13T22:26:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13272",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13272",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13272.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13272.patch",
            "merged_at": "2023-11-13T22:26:02Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13272/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13272/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13271",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13271/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13271/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13271/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13271",
        "id": 1989795517,
        "node_id": "I_kwDOIPDwls52md69",
        "number": 13271,
        "title": "https://python.langchain.com/docs/modules/model_io/models/llms/integrations/sagemaker ",
        "user": {
            "login": "Jiegenglyu",
            "id": 132128642,
            "node_id": "U_kgDOB-Afgg",
            "avatar_url": "https://avatars.githubusercontent.com/u/132128642?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jiegenglyu",
            "html_url": "https://github.com/Jiegenglyu",
            "followers_url": "https://api.github.com/users/Jiegenglyu/followers",
            "following_url": "https://api.github.com/users/Jiegenglyu/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jiegenglyu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jiegenglyu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jiegenglyu/subscriptions",
            "organizations_url": "https://api.github.com/users/Jiegenglyu/orgs",
            "repos_url": "https://api.github.com/users/Jiegenglyu/repos",
            "events_url": "https://api.github.com/users/Jiegenglyu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jiegenglyu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5959659008,
                "node_id": "LA_kwDOIPDwls8AAAABYzkuAA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20aws",
                "name": "integration: aws",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to Amazon Web Services (AWS) integrations"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-13T02:59:08Z",
        "updated_at": "2023-11-13T03:45:21Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nI am  try to use sagemaker endpoint to use the embedding model, but I am confused about using EmbeddingsContentHandler, after trying I figure out how to define the transform_input function, but the transform_output did not work as expected, it give out some errors, which like \r\n    **embeddings = response_json[0][\"embedding\"]\r\nTypeError: list indices must be integers or slices, not str**,  I would be really garteful it someone konw how to sove it\r\nmy ContentHandler function is :\r\nclass ContentHandler(EmbeddingsContentHandler):\r\n    content_type = \"application/json\"\r\n    accepts = \"application/json\"\r\n\r\n    def transform_input(self, prompt: str, model_kwargs={}) -> bytes:\r\n        input_str = json.dumps({\"inputs\": prompt, **model_kwargs})\r\n        return input_str.encode(\"utf-8\")\r\n\r\n    def transform_output(self, output: bytes) -> str:\r\n        response_json = json.loads(output.read().decode(\"utf-8\"))\r\n        embeddings = response_json[0][\"embedding\"]\r\n        return embeddings\r\n\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13271/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13271/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13270",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13270/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13270/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13270/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13270",
        "id": 1989733972,
        "node_id": "I_kwDOIPDwls52mO5U",
        "number": 13270,
        "title": "Chain/Agent Builder",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T01:44:32Z",
        "updated_at": "2023-11-13T01:44:52Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThe LangChail modules can be naturally used to build something like OpenAI GPTs builder.\r\nMy understanding is, LangChain needs to add descriptions and description_embeddings to all integrations/chains/agents (not only to the tools). It allows to build the Super Agent aka Agent Builder. \n\n### Motivation\n\nLangChain's space (in terms of integrations/chains/agents) is bigger than OpenAI's. Let's use this.\n\n### Your contribution\n\nI can help with documentations, examples,ut-s",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13270/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13270/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13269",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13269/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13269/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13269/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13269",
        "id": 1989724142,
        "node_id": "PR_kwDOIPDwls5fQBKV",
        "number": 13269,
        "title": "Support Vald secure connection",
        "user": {
            "login": "mtanig",
            "id": 19747513,
            "node_id": "MDQ6VXNlcjE5NzQ3NTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19747513?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mtanig",
            "html_url": "https://github.com/mtanig",
            "followers_url": "https://api.github.com/users/mtanig/followers",
            "following_url": "https://api.github.com/users/mtanig/following{/other_user}",
            "gists_url": "https://api.github.com/users/mtanig/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mtanig/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mtanig/subscriptions",
            "organizations_url": "https://api.github.com/users/mtanig/orgs",
            "repos_url": "https://api.github.com/users/mtanig/repos",
            "events_url": "https://api.github.com/users/mtanig/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mtanig/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-13T01:32:29Z",
        "updated_at": "2023-11-30T05:03:05Z",
        "closed_at": "2023-11-30T03:07:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13269",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13269",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13269.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13269.patch",
            "merged_at": "2023-11-30T03:07:29Z"
        },
        "body": " **Description:** \r\nWhen using Vald, only insecure grpc connection was supported, so secure connection is now supported.\r\nIn addition, grpc metadata can be added to Vald requests to enable authentication with a token.\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13269/reactions",
            "total_count": 4,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13269/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13268",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13268/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13268/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13268/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13268",
        "id": 1989630478,
        "node_id": "I_kwDOIPDwls52l1oO",
        "number": 13268,
        "title": "Issue: gpt3.5-turbo-1106 responds differently from the OpenAI playground ",
        "user": {
            "login": "ziqizhang",
            "id": 3355885,
            "node_id": "MDQ6VXNlcjMzNTU4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3355885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ziqizhang",
            "html_url": "https://github.com/ziqizhang",
            "followers_url": "https://api.github.com/users/ziqizhang/followers",
            "following_url": "https://api.github.com/users/ziqizhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ziqizhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ziqizhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ziqizhang/subscriptions",
            "organizations_url": "https://api.github.com/users/ziqizhang/orgs",
            "repos_url": "https://api.github.com/users/ziqizhang/repos",
            "events_url": "https://api.github.com/users/ziqizhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ziqizhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-12T23:20:38Z",
        "updated_at": "2023-11-13T13:20:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\n- Langchain version: 0.0.335\r\n- Affected LLM: chatgpt 3.5 turbo 1106 (NOT affecting: gpt 3.5 turbo 16k, gpt4, gpt4 turbo preview)\r\n- Code template, similar to:\r\n\r\n`llm=ChatOpenAI(model_name='gpt-3.5-turbo-1106',\r\n                         openai_api_key=openai_key\r\n                         )`\r\n`memory = ConversationBufferMemory()`\r\n`conversation = ConversationChain(\r\n        llm=llm, memory=memory\r\n    )`\r\n\r\n`conversation.predict(input='my instructions')\r\n`\r\n\r\n**The problem**\r\nWhen the identical instructions and parameters are used in the API and the open ai playground, model responds radically different. The open ai playground responds as expected, producing answers. While the API through langchain always returns 'I cannot fufil your request'.\r\n\r\n**suspected causes**\r\nOpen AI made an upgrade to its API to 1.x, and as far as I know Langchain now only works with open ai 0.28.1. Could that be the reason?\r\n\r\nThanks\r\n\r\n\r\n**UPDATE 13 Nov:**\r\nI further tested my prompts with OpenAI api 1.2.3 alone, without langchain and everything works fine:\r\n- First I put my prompts into the OpenAI playground, which produced responses\r\n- Second I 'view source' > 'copy', put the python code into a .py file, edited out the last AI response and ran the code = I got the response I wanted.\r\n- Third I tested the same prompt with langchain 0.0.335 (openai 0.28.1) this time, and I always get 'I cannot fulfil this request'.\r\n\r\nI know that langchain adds a little bit of context to every request and my prompts did consist of two rounds of chats and thus my code uses memory. I don't know which part of this is problematic.\r\n\r\nAgain, this problem does not occur with gpt-3.5-turbo, or gpt-4, or gpt-4-turbo, only **'gpt-3.5-turbo-1106'**\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13268/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13268/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13267",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13267/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13267/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13267/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13267",
        "id": 1989585088,
        "node_id": "PR_kwDOIPDwls5fPjaR",
        "number": 13267,
        "title": "Pgvector template",
        "user": {
            "login": "manuel-soria",
            "id": 66525873,
            "node_id": "MDQ6VXNlcjY2NTI1ODcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/66525873?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manuel-soria",
            "html_url": "https://github.com/manuel-soria",
            "followers_url": "https://api.github.com/users/manuel-soria/followers",
            "following_url": "https://api.github.com/users/manuel-soria/following{/other_user}",
            "gists_url": "https://api.github.com/users/manuel-soria/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manuel-soria/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manuel-soria/subscriptions",
            "organizations_url": "https://api.github.com/users/manuel-soria/orgs",
            "repos_url": "https://api.github.com/users/manuel-soria/repos",
            "events_url": "https://api.github.com/users/manuel-soria/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manuel-soria/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-12T21:33:45Z",
        "updated_at": "2023-11-14T15:47:49Z",
        "closed_at": "2023-11-14T15:47:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13267",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13267",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13267.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13267.patch",
            "merged_at": "2023-11-14T15:47:48Z"
        },
        "body": "Including pvector template, adapting what is covered in the [cookbook](https://github.com/langchain-ai/langchain/blob/master/cookbook/retrieval_in_sql.ipynb).\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13267/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13267/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13266",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13266/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13266/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13266/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13266",
        "id": 1989580812,
        "node_id": "PR_kwDOIPDwls5fPikH",
        "number": 13266,
        "title": "Fix serialization issue in Matching Engine Vector Store",
        "user": {
            "login": "konstantin-spiess",
            "id": 22649845,
            "node_id": "MDQ6VXNlcjIyNjQ5ODQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22649845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/konstantin-spiess",
            "html_url": "https://github.com/konstantin-spiess",
            "followers_url": "https://api.github.com/users/konstantin-spiess/followers",
            "following_url": "https://api.github.com/users/konstantin-spiess/following{/other_user}",
            "gists_url": "https://api.github.com/users/konstantin-spiess/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/konstantin-spiess/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/konstantin-spiess/subscriptions",
            "organizations_url": "https://api.github.com/users/konstantin-spiess/orgs",
            "repos_url": "https://api.github.com/users/konstantin-spiess/repos",
            "events_url": "https://api.github.com/users/konstantin-spiess/events{/privacy}",
            "received_events_url": "https://api.github.com/users/konstantin-spiess/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-12T21:20:07Z",
        "updated_at": "2023-11-13T19:04:12Z",
        "closed_at": "2023-11-13T19:04:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13266",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13266",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13266.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13266.patch",
            "merged_at": "2023-11-13T19:04:12Z"
        },
        "body": "  - **Description:** Fixed a serialization issue in the add_texts method of the Matching Engine Vector Store caused by a typo, leading to an attempt to serialize the json module itself.\r\n  - **Issue:** #12154 \r\n  - **Dependencies:** ./.\r\n  - **Tag maintainer:**",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13266/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13266/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13265",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13265/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13265/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13265/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13265",
        "id": 1989575966,
        "node_id": "PR_kwDOIPDwls5fPhnh",
        "number": 13265,
        "title": "Updated DocugamiLoader with better support for hierarchical chunks",
        "user": {
            "login": "tjaffri",
            "id": 749277,
            "node_id": "MDQ6VXNlcjc0OTI3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/749277?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjaffri",
            "html_url": "https://github.com/tjaffri",
            "followers_url": "https://api.github.com/users/tjaffri/followers",
            "following_url": "https://api.github.com/users/tjaffri/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjaffri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjaffri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjaffri/subscriptions",
            "organizations_url": "https://api.github.com/users/tjaffri/orgs",
            "repos_url": "https://api.github.com/users/tjaffri/repos",
            "events_url": "https://api.github.com/users/tjaffri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjaffri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714144,
                "node_id": "LA_kwDOIPDwls8AAAABc3-roA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XXL",
                "name": "size:XXL",
                "color": "5319E7",
                "default": false,
                "description": "This PR changes 1000+ lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-12T21:05:50Z",
        "updated_at": "2023-11-28T23:56:22Z",
        "closed_at": "2023-11-28T23:56:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13265",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13265",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13265.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13265.patch",
            "merged_at": "2023-11-28T23:56:22Z"
        },
        "body": "There are the following main changes in this PR:\r\n\r\n1. Rewrite of the DocugamiLoader to not do any XML parsing of the DGML format internally, and instead use the dgml-utils library we are separately working on. This is a very lightweight dependency.\r\n2. Added MMR search type as an option to multi-vector retriever, similar to other retrievers. MMR is especially useful when using Docugami for RAG since we deal with large sets of documents within which a few might be duplicates and straight similarity based search doesn't give great results in many cases.\r\n\r\nWe are @docugami on twitter, and I am @tjaffri ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13265/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13265/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13264",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13264/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13264/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13264/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13264",
        "id": 1989566807,
        "node_id": "PR_kwDOIPDwls5fPfut",
        "number": 13264,
        "title": "Mask PipelineAI API Key",
        "user": {
            "login": "faisale",
            "id": 17710618,
            "node_id": "MDQ6VXNlcjE3NzEwNjE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/17710618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faisale",
            "html_url": "https://github.com/faisale",
            "followers_url": "https://api.github.com/users/faisale/followers",
            "following_url": "https://api.github.com/users/faisale/following{/other_user}",
            "gists_url": "https://api.github.com/users/faisale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faisale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faisale/subscriptions",
            "organizations_url": "https://api.github.com/users/faisale/orgs",
            "repos_url": "https://api.github.com/users/faisale/repos",
            "events_url": "https://api.github.com/users/faisale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faisale/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-12T20:47:21Z",
        "updated_at": "2023-11-29T19:57:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13264",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13264",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13264.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13264.patch",
            "merged_at": null
        },
        "body": "**Description:** Add masking of the API key for Mystic AI's PipelineAI when printed.\r\n**Issue:** #12165\r\n**Dependencies:** None\r\n**Tag maintainer:** @eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13264/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13264/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13263",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13263/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13263/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13263/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13263",
        "id": 1989546510,
        "node_id": "I_kwDOIPDwls52lhIO",
        "number": 13263,
        "title": "Import error in lanchain/vectorstores/azuresearch.py",
        "user": {
            "login": "yallapragada",
            "id": 5558988,
            "node_id": "MDQ6VXNlcjU1NTg5ODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5558988?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yallapragada",
            "html_url": "https://github.com/yallapragada",
            "followers_url": "https://api.github.com/users/yallapragada/followers",
            "following_url": "https://api.github.com/users/yallapragada/following{/other_user}",
            "gists_url": "https://api.github.com/users/yallapragada/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yallapragada/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yallapragada/subscriptions",
            "organizations_url": "https://api.github.com/users/yallapragada/orgs",
            "repos_url": "https://api.github.com/users/yallapragada/repos",
            "events_url": "https://api.github.com/users/yallapragada/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yallapragada/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-12T20:01:20Z",
        "updated_at": "2023-11-12T20:06:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am testing a simple RAG implementation with Azure Cognitive Search. I am seeing a \"cannot import name 'Vector' from azure.search.documents.models\" error when I invoke my chain. Origin of my error is line 434 in lanchain/vectorstores/azuresearch.py (from azure.search.documents.models import Vector)\r\n\r\nthis is the relevant code snippet, I get the import error when I execute rag_chain.invoke(question)\r\n\r\nfrom langchain.schema.runnable import RunnablePassthrough\r\nfrom langchain.prompts import ChatPromptTemplate\r\nfrom langchain.chat_models.azure_openai import AzureChatOpenAI\r\n\r\nquestion = \"my question..\"\r\n\r\n-- vector_store is initialized using AzureSearch(), not including that snippet here --\r\nretriever = vector_store.as_retriever()\r\n\r\ntemplate = ''' \r\nAnswer the question based on the following context: \r\n{context}\r\n\r\nQuestion: {question} \r\n'''\r\n\r\nprompt = ChatPromptTemplate.from_template(template=template)\r\n\r\nllm = AzureChatOpenAI( deployment_name='MY_DEPLOYMENT_NAME', model_name='MY_MODEL', openai_api_base=MY_AZURE_OPENAI_ENDPOINT, openai_api_key=MY_AZURE_OPENAI_KEY, openai_api_version='2023-05-15', openai_api_type='azure' )\r\n\r\nrag_chain = {'context' : retriever, 'question' : RunnablePassthrough} | prompt | llm \r\nrag_chain.invoke(question)\r\n\r\n--------------\r\n\r\nmy package versions\r\n\r\nlangchain==0.0.331\r\nazure-search-documents==11.4.0b11\r\nazure-core==1.29.5\r\nopenai==0.28.1\r\n\r\n_Originally posted by @yallapragada in https://github.com/langchain-ai/langchain/discussions/13245_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13263/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13263/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13262",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13262/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13262/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13262/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13262",
        "id": 1989532235,
        "node_id": "PR_kwDOIPDwls5fPYwG",
        "number": 13262,
        "title": "bump openai",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-12T19:16:43Z",
        "updated_at": "2023-11-15T00:50:24Z",
        "closed_at": "2023-11-15T00:50:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13262",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13262",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13262.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13262.patch",
            "merged_at": "2023-11-15T00:50:23Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13262/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13262/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13261",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13261/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13261/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13261/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13261",
        "id": 1989532137,
        "node_id": "PR_kwDOIPDwls5fPYu0",
        "number": 13261,
        "title": "bump 335",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-12T19:16:24Z",
        "updated_at": "2023-11-12T19:30:27Z",
        "closed_at": "2023-11-12T19:30:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13261",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13261",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13261.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13261.patch",
            "merged_at": "2023-11-12T19:30:26Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13261/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13261/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13260",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13260/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13260/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13260/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13260",
        "id": 1989525266,
        "node_id": "PR_kwDOIPDwls5fPXYk",
        "number": 13260,
        "title": "Add missing filter to max_marginal_relevance_search inner call to max_marginal_relevance_search_by_vector",
        "user": {
            "login": "Frank995",
            "id": 47689966,
            "node_id": "MDQ6VXNlcjQ3Njg5OTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/47689966?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Frank995",
            "html_url": "https://github.com/Frank995",
            "followers_url": "https://api.github.com/users/Frank995/followers",
            "following_url": "https://api.github.com/users/Frank995/following{/other_user}",
            "gists_url": "https://api.github.com/users/Frank995/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Frank995/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Frank995/subscriptions",
            "organizations_url": "https://api.github.com/users/Frank995/orgs",
            "repos_url": "https://api.github.com/users/Frank995/repos",
            "events_url": "https://api.github.com/users/Frank995/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Frank995/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-12T18:54:08Z",
        "updated_at": "2023-11-13T18:31:35Z",
        "closed_at": "2023-11-13T18:31:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13260",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13260",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13260.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13260.patch",
            "merged_at": "2023-11-13T18:31:35Z"
        },
        "body": "When calling max_marginal_relevance_search from PGVector the filter param is not carried over to max_marginal_relevance_search_by_vector",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13260/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13260/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13259",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13259/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13259/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13259/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13259",
        "id": 1989515485,
        "node_id": "PR_kwDOIPDwls5fPVfT",
        "number": 13259,
        "title": "Add remove_comments option (default True): do not extract html comments",
        "user": {
            "login": "petervandenabeele",
            "id": 55656,
            "node_id": "MDQ6VXNlcjU1NjU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/55656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petervandenabeele",
            "html_url": "https://github.com/petervandenabeele",
            "followers_url": "https://api.github.com/users/petervandenabeele/followers",
            "following_url": "https://api.github.com/users/petervandenabeele/following{/other_user}",
            "gists_url": "https://api.github.com/users/petervandenabeele/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petervandenabeele/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petervandenabeele/subscriptions",
            "organizations_url": "https://api.github.com/users/petervandenabeele/orgs",
            "repos_url": "https://api.github.com/users/petervandenabeele/repos",
            "events_url": "https://api.github.com/users/petervandenabeele/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petervandenabeele/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-12T18:22:31Z",
        "updated_at": "2023-11-29T19:59:40Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13259",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13259",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13259.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13259.patch",
            "merged_at": null
        },
        "body": "  - **Description:** add `remove_comments` option (default: True): do not extract html _comments_, \r\n  - **Issue:** None,\r\n  - **Dependencies:** None,\r\n  - **Tag maintainer:** @nfcampos ,\r\n  - **Twitter handle:** peter_v\r\n\r\nI ran `make format`, `make lint` and `make test`.\r\n\r\nDiscussion: I my use case, I prefer to not have the comments in the extracted text:\r\n* e.g. from a Google tag that is added in the html as comment\r\n* e.g. content that the authors have temporarily hidden to make it non visible to the regular reader\r\n\r\nRemoving the comments makes the extracted text more alike the intended text to be seen by the reader.\r\n\r\n\r\n**Choice to make:** do we prefer to make the default for this `remove_comments` option to be True or False?\r\nI have changed it to True in a second commit, since that is how I would prefer to use it by default. Have the\r\ncleaned text (without technical Google tags etc.) and also closer to the actually visible and intended content.\r\nI am not sure what is best aligned with the conventions of langchain in general ...\r\n\r\n\r\nINITIAL VERSION (new version above):\r\n~**Choice to make:** do we prefer to make the default for this `ignore_comments` option to be True or False?\r\nI have set it to False now to be backwards compatible. On the other hand, I would use it mostly with True.\r\nI am not sure what is best aligned with the conventions of langchain in general ...~",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13259/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13259/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13257",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13257/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13257/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13257/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13257",
        "id": 1989495483,
        "node_id": "PR_kwDOIPDwls5fPRoE",
        "number": 13257,
        "title": "Added support for a Pandas DataFrame OutputParser",
        "user": {
            "login": "RohanDey02",
            "id": 58871401,
            "node_id": "MDQ6VXNlcjU4ODcxNDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/58871401?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RohanDey02",
            "html_url": "https://github.com/RohanDey02",
            "followers_url": "https://api.github.com/users/RohanDey02/followers",
            "following_url": "https://api.github.com/users/RohanDey02/following{/other_user}",
            "gists_url": "https://api.github.com/users/RohanDey02/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RohanDey02/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RohanDey02/subscriptions",
            "organizations_url": "https://api.github.com/users/RohanDey02/orgs",
            "repos_url": "https://api.github.com/users/RohanDey02/repos",
            "events_url": "https://api.github.com/users/RohanDey02/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RohanDey02/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714130,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rkg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XL",
                "name": "size:XL",
                "color": "D4C5F9",
                "default": false,
                "description": "This PR changes 500-999 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-12T17:20:17Z",
        "updated_at": "2023-11-30T03:09:34Z",
        "closed_at": "2023-11-30T03:08:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13257",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13257",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13257.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13257.patch",
            "merged_at": "2023-11-30T03:08:50Z"
        },
        "body": "**Description:**\r\n\r\nAdded support for a Pandas DataFrame OutputParser with format instructions, along with unit tests and a demo notebook. Namely, we've added the ability to request data from a DataFrame, have the LLM parse the request, and then use that request to retrieve a well-formatted response.\r\n\r\nWithin LangChain, it seamlessly integrates with language models like OpenAI's `text-davinci-003`, facilitating streamlined interaction using the format instructions (just like the other output parsers).\r\n\r\nThis parser structures its requests as `<operation/column/row>[<optional_array_params>]`. The instructions detail permissible operations, valid columns, and array formats, ensuring clarity and adherence to the required format.\r\n\r\nFor example:\r\n\r\n- When the LLM receives the input: \"Retrieve the mean of `num_legs` from rows 1 to 3.\"\r\n- The provided format instructions guide the LLM to structure the request as: \"mean:num_legs[1..3]\".\r\n\r\nThe parser processes this formatted request, leveraging the LLM's understanding to extract the mean of `num_legs` from rows 1 to 3 within the Pandas DataFrame.\r\n\r\nThis integration allows users to communicate requests naturally, with the LLM transforming these instructions into structured commands understood by the `PandasDataFrameOutputParser`. The format instructions act as a bridge between natural language queries and precise DataFrame operations, optimizing communication and data retrieval.\r\n\r\n**Issue:**\r\n\r\n- https://github.com/langchain-ai/langchain/issues/11532\r\n\r\n**Dependencies:**\r\n\r\nNo additional dependencies :)\r\n\r\n**Tag maintainer:**\r\n\r\n@baskaryan \r\n\r\n**Twitter handle:**\r\n\r\nNo need. :)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13257/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13257/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13256",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13256/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13256/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13256/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13256",
        "id": 1989494128,
        "node_id": "I_kwDOIPDwls52lUVw",
        "number": 13256,
        "title": "ImportError: cannot import name 'BabyAGI' from 'langchain_experimental' ",
        "user": {
            "login": "ajicar",
            "id": 100798411,
            "node_id": "U_kgDOBgIPyw",
            "avatar_url": "https://avatars.githubusercontent.com/u/100798411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajicar",
            "html_url": "https://github.com/ajicar",
            "followers_url": "https://api.github.com/users/ajicar/followers",
            "following_url": "https://api.github.com/users/ajicar/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajicar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajicar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajicar/subscriptions",
            "organizations_url": "https://api.github.com/users/ajicar/orgs",
            "repos_url": "https://api.github.com/users/ajicar/repos",
            "events_url": "https://api.github.com/users/ajicar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajicar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-12T17:16:05Z",
        "updated_at": "2023-11-12T17:24:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI can not import BabyAGI\r\n\r\nfrom langchain_experimental import BabyAGI\r\n\r\nThe langchain version is:\r\n\r\npip show langchain\r\nName: langchain\r\nVersion: 0.0.334\r\nSummary: Building applications with LLMs through composability\r\nHome-page: https://github.com/langchain-ai/langchain\r\nAuthor:\r\nAuthor-email:\r\nLicense: MIT\r\nLocation: c:\\users\\test\\anaconda3\\envs\\nenv\\lib\\site-packages\r\nRequires: aiohttp, anyio, async-timeout, dataclasses-json, jsonpatch, langsmith, numpy, pydantic, PyYAML, requests, SQLAlchemy, tenacity\r\nRequired-by: langchain-experimental\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nimport dotenv\r\nfrom dotenv import load_dotenv\r\nload_dotenv()\r\nimport os\r\n\r\nimport langchain\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nimport faiss\r\nfrom langchain.vectorstores import FAISS\r\nfrom langchain.docstore import InMemoryDocstore\r\n\r\n# Define the embedding model\r\nembeddings_model = OpenAIEmbeddings(model=\"text-embedding-ada-002\")\r\n\r\n# Initialize the vectorstore\r\nembedding_size = 1536\r\nindex = faiss.IndexFlatL2(embedding_size)\r\nvectorstore = FAISS(embeddings_model, index, InMemoryDocstore({}), {})\r\n\r\nfrom langchain.llms  import OpenAI\r\nfrom langchain_experimental import BabyAGI\n\n### Expected behavior\n\nI want to be able  to execute:\r\n\r\n# Define the embedding model\r\nembeddings_model = OpenAIEmbeddings(model=\"text-embedding-ada-002\")",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13256/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13256/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13255",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13255/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13255/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13255/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13255",
        "id": 1989440076,
        "node_id": "I_kwDOIPDwls52lHJM",
        "number": 13255,
        "title": "OpenAI Assistant in Python ",
        "user": {
            "login": "keenborder786",
            "id": 45242107,
            "node_id": "MDQ6VXNlcjQ1MjQyMTA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/45242107?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/keenborder786",
            "html_url": "https://github.com/keenborder786",
            "followers_url": "https://api.github.com/users/keenborder786/followers",
            "following_url": "https://api.github.com/users/keenborder786/following{/other_user}",
            "gists_url": "https://api.github.com/users/keenborder786/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/keenborder786/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/keenborder786/subscriptions",
            "organizations_url": "https://api.github.com/users/keenborder786/orgs",
            "repos_url": "https://api.github.com/users/keenborder786/repos",
            "events_url": "https://api.github.com/users/keenborder786/events{/privacy}",
            "received_events_url": "https://api.github.com/users/keenborder786/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-12T14:58:55Z",
        "updated_at": "2023-11-26T14:48:34Z",
        "closed_at": "2023-11-26T14:48:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI hope this message finds you well. I noticed that OpenAI has recently unveiled their Assistant API, and I observed that the Langchain framework in JavaScript has already implemented an agent utilizing this new API. Could you kindly provide information on when this integration will be extended to Python?\r\n\r\nFor your reference, here is the documentation for the JavaScript implementation: [JavaScript Doc Reference](https://js.langchain.com/docs/modules/agents/agent_types/openai_assistant).\r\n\r\nThank you for your assistance.\n\n### Motivation\n\nThis is a new feature from OpenAI and will be really useful for building LLM-based Apps which needs to utilize code generation feature.\n\n### Your contribution\n\nN/A",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13255/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13255/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13254",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13254/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13254/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13254/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13254",
        "id": 1989384478,
        "node_id": "PR_kwDOIPDwls5fO7Da",
        "number": 13254,
        "title": "Add `SagemakerAsyncEndpoint` to use sagemaker async endpoints",
        "user": {
            "login": "MikeWklm",
            "id": 32307744,
            "node_id": "MDQ6VXNlcjMyMzA3NzQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/32307744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MikeWklm",
            "html_url": "https://github.com/MikeWklm",
            "followers_url": "https://api.github.com/users/MikeWklm/followers",
            "following_url": "https://api.github.com/users/MikeWklm/following{/other_user}",
            "gists_url": "https://api.github.com/users/MikeWklm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MikeWklm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MikeWklm/subscriptions",
            "organizations_url": "https://api.github.com/users/MikeWklm/orgs",
            "repos_url": "https://api.github.com/users/MikeWklm/repos",
            "events_url": "https://api.github.com/users/MikeWklm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MikeWklm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 5959659008,
                "node_id": "LA_kwDOIPDwls8AAAABYzkuAA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20aws",
                "name": "integration: aws",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to Amazon Web Services (AWS) integrations"
            },
            {
                "id": 6232714144,
                "node_id": "LA_kwDOIPDwls8AAAABc3-roA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XXL",
                "name": "size:XXL",
                "color": "5319E7",
                "default": false,
                "description": "This PR changes 1000+ lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-12T12:38:49Z",
        "updated_at": "2023-11-25T14:13:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13254",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13254",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13254.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13254.patch",
            "merged_at": null
        },
        "body": "  - **Description:** Add a SagemakerAsyncEndpoint to be able to use not only realtime inference Endpoints. Started from #6940 and added some enhancements. Moreover, fixed documentation issues for SagemakerEndpoint as well.\r\n  - **Issue:** does not apply\r\n  - **Dependencies:** no additional dependencies\r\n  - **Tag maintainer:** \r\n  - **Twitter handle:** small and no thanks :-)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13254/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13254/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13253",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13253/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13253/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13253/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13253",
        "id": 1989315299,
        "node_id": "PR_kwDOIPDwls5fOtGx",
        "number": 13253,
        "title": "Add a `MultiFieldRetriever` to search content and metadata at the sametime.",
        "user": {
            "login": "DayuanJiang",
            "id": 34411969,
            "node_id": "MDQ6VXNlcjM0NDExOTY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/34411969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DayuanJiang",
            "html_url": "https://github.com/DayuanJiang",
            "followers_url": "https://api.github.com/users/DayuanJiang/followers",
            "following_url": "https://api.github.com/users/DayuanJiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/DayuanJiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DayuanJiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DayuanJiang/subscriptions",
            "organizations_url": "https://api.github.com/users/DayuanJiang/orgs",
            "repos_url": "https://api.github.com/users/DayuanJiang/repos",
            "events_url": "https://api.github.com/users/DayuanJiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DayuanJiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-12T09:05:52Z",
        "updated_at": "2023-12-09T13:37:31Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13253",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13253",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13253.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13253.patch",
            "merged_at": null
        },
        "body": "  - **Description:** I created the `MultiFieldRetriever` to search not only the content of a document but also its metadata. The difference between it and the `Self-query Retriever` is that the `MultiFieldRetriever` merges the document's content and metadata and performs a single search, rather than searching the content first and then filtering the results by metadata. **You can see how it works in the [document notebook ](https://github.com/langchain-ai/langchain/blob/008618d38a3f8329c5aef4f2eb1f5da4f1e89401/docs/docs/modules/data_connection/retrievers/multi_field.ipynb)\r\n  \r\n  - **Dependencies:** No\r\n  - **Tag maintainer:** @baskaryan \r\n  - **Twitter handle:** DayuanJian21687",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13253/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13253/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13252",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13252/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13252/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13252/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13252",
        "id": 1989269241,
        "node_id": "PR_kwDOIPDwls5fOjwO",
        "number": 13252,
        "title": "docs: align custom_tool document headers",
        "user": {
            "login": "edwardzjl",
            "id": 7287580,
            "node_id": "MDQ6VXNlcjcyODc1ODA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7287580?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edwardzjl",
            "html_url": "https://github.com/edwardzjl",
            "followers_url": "https://api.github.com/users/edwardzjl/followers",
            "following_url": "https://api.github.com/users/edwardzjl/following{/other_user}",
            "gists_url": "https://api.github.com/users/edwardzjl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edwardzjl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edwardzjl/subscriptions",
            "organizations_url": "https://api.github.com/users/edwardzjl/orgs",
            "repos_url": "https://api.github.com/users/edwardzjl/repos",
            "events_url": "https://api.github.com/users/edwardzjl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edwardzjl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-12T07:07:51Z",
        "updated_at": "2023-11-13T17:03:56Z",
        "closed_at": "2023-11-13T17:03:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13252",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13252",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13252.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13252.patch",
            "merged_at": "2023-11-13T17:03:56Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n\r\nOn the [Defining Custom Tools](https://python.langchain.com/docs/modules/agents/tools/custom_tools) page, there's a 'Subclassing the BaseTool class' paragraph under the 'Completely New Tools - String Input and Output' header. Also there's another 'Subclassing the BaseTool' paragraph under no header, which I think may belong to the 'Custom Structured Tools' header.\r\n\r\nAnother thing is, there's a 'Using the tool decorator' and a 'Using the decorator' paragraph, I think should belong to 'Completely New Tools - String Input and Output' and 'Custom Structured Tools' separately.\r\n\r\nThis PR moves those paragraphs to corresponding headers.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13252/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13252/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13251",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13251/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13251/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13251/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13251",
        "id": 1989262646,
        "node_id": "I_kwDOIPDwls52kb02",
        "number": 13251,
        "title": "Any time I try to use a openAPI API that requires auth, the openapi_chain call fails. ",
        "user": {
            "login": "krish240574",
            "id": 4938230,
            "node_id": "MDQ6VXNlcjQ5MzgyMzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4938230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/krish240574",
            "html_url": "https://github.com/krish240574",
            "followers_url": "https://api.github.com/users/krish240574/followers",
            "following_url": "https://api.github.com/users/krish240574/following{/other_user}",
            "gists_url": "https://api.github.com/users/krish240574/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/krish240574/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/krish240574/subscriptions",
            "organizations_url": "https://api.github.com/users/krish240574/orgs",
            "repos_url": "https://api.github.com/users/krish240574/repos",
            "events_url": "https://api.github.com/users/krish240574/events{/privacy}",
            "received_events_url": "https://api.github.com/users/krish240574/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-11-12T06:43:23Z",
        "updated_at": "2023-11-15T13:50:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain                 0.0.334\r\npython                      3.11.5\r\n\r\n### Who can help?\r\n@hwchase17 \r\n\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [X] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nhubspot_chain = get_openapi_chain(\"https://api.hubspot.com/api-catalog-public/v1/apis/crm/v3/objects/companies\",\r\nheaders={\"Authorization\": \"Bearer <My Hubspot API token>\"})\r\n\r\nhubspot_chain(\"Fetch all contacts in my CRM, please\")\r\n \r\n I get the error : \r\nBadRequestError: Error code: 400 - {'error': {'message': \"'get__crm_v3_objects_companies_{companyId}_getById' does not match '^[a-zA-Z0-9_-]{1,64}$' - 'functions.1.name'\", 'type': 'invalid_request_error', 'param': None, 'code': None}}\r\n\r\nThis happens with other APIs too, I've tried the following :\r\n1. OpenAPI\r\n2. Asana\r\n3. Hubspot\r\n4. Slack\r\nNone work. \r\n\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nThe API calls should work, I should get response to my natural language requests, which should get internally mapped to actions, as specified in the OpenAPI specs I've supplied. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13251/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13251/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13250",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13250/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13250/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13250/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13250",
        "id": 1989259330,
        "node_id": "I_kwDOIPDwls52kbBC",
        "number": 13250,
        "title": "Issue: How to use other natural languages besides English?",
        "user": {
            "login": "f3rn4nd0-c354r",
            "id": 6833155,
            "node_id": "MDQ6VXNlcjY4MzMxNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6833155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/f3rn4nd0-c354r",
            "html_url": "https://github.com/f3rn4nd0-c354r",
            "followers_url": "https://api.github.com/users/f3rn4nd0-c354r/followers",
            "following_url": "https://api.github.com/users/f3rn4nd0-c354r/following{/other_user}",
            "gists_url": "https://api.github.com/users/f3rn4nd0-c354r/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/f3rn4nd0-c354r/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/f3rn4nd0-c354r/subscriptions",
            "organizations_url": "https://api.github.com/users/f3rn4nd0-c354r/orgs",
            "repos_url": "https://api.github.com/users/f3rn4nd0-c354r/repos",
            "events_url": "https://api.github.com/users/f3rn4nd0-c354r/events{/privacy}",
            "received_events_url": "https://api.github.com/users/f3rn4nd0-c354r/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-12T06:28:49Z",
        "updated_at": "2023-11-13T22:48:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHello,\r\nThanks for this framework. It's making everyone's work simpler!\r\n\r\nI'm using an LLM model to infer data from Portuguese websites, and expecting answers in Portuguese. But some of Langchain features, namely the \"Get format instructions\" for Output Parses come written in English. I'm not sure what the best approach would be here.\r\n\r\nShould I do all my prompting in English, and just add \"Answer in Portuguese\" at the end?\r\n\r\nShould this be a feature in Langchain, and if so, how would it work?\r\n\r\nI'm not sure asking the community to translate it would be the right approach, because this is not just about translation, but making sure the prompts work correctly. I would be fine with some api call to replace the English text with my translation, but that doesn't seem to be part of the public API at the moment.\r\n\r\nThanks,\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13250/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13250/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13249",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13249/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13249/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13249/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13249",
        "id": 1989251097,
        "node_id": "I_kwDOIPDwls52kZAZ",
        "number": 13249,
        "title": "why when the system doesn't find the answer to the user's question, show hadith still appears?",
        "user": {
            "login": "Irfan123fw",
            "id": 106759624,
            "node_id": "U_kgDOBl0FyA",
            "avatar_url": "https://avatars.githubusercontent.com/u/106759624?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Irfan123fw",
            "html_url": "https://github.com/Irfan123fw",
            "followers_url": "https://api.github.com/users/Irfan123fw/followers",
            "following_url": "https://api.github.com/users/Irfan123fw/following{/other_user}",
            "gists_url": "https://api.github.com/users/Irfan123fw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Irfan123fw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Irfan123fw/subscriptions",
            "organizations_url": "https://api.github.com/users/Irfan123fw/orgs",
            "repos_url": "https://api.github.com/users/Irfan123fw/repos",
            "events_url": "https://api.github.com/users/Irfan123fw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Irfan123fw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 21,
        "created_at": "2023-11-12T05:49:18Z",
        "updated_at": "2023-11-12T08:59:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "async def query(update: Update, context: CallbackContext):\r\n  global chain, metadatas, texts\r\n\r\n  if chain is None:\r\n      await context.bot.send_message(\r\n          chat_id=update.effective_chat.id,\r\n          text=\"Please load the chain first using /load\")\r\n      return\r\n\r\n  user_query = update.message.text\r\n\r\n  cb = AsyncFinalIteratorCallbackHandler()\r\n  cb.stream_final_answer = True\r\n  cb.answer_prefix_tokens = [\"FINAL\", \"ANSWER\"]\r\n\r\n  cb.answer_reached = True\r\n  res = await chain.acall(user_query, callbacks=[cb])\r\n  answer = res[\"answer\"]\r\n  sources = res.get(\"source_documents\", [])\r\n  context.user_data['sources'] = sources\r\n\r\n  await context.bot.send_message(chat_id=update.effective_chat.id, text=answer)\r\n\r\n  for idx, source in enumerate(sources, start=1):\r\n      source_name = source.metadata.get(\"source\", f\"Unknown Source {idx}\").replace(\".\", \"\")\r\n      keyboard = [[InlineKeyboardButton(\"Show Hadith\", callback_data=str(idx))]]\r\n\r\n      await context.bot.send_message(chat_id=update.effective_chat.id,\r\n                                     text=f\"{idx}. {source_name}\",\r\n                                     reply_markup=InlineKeyboardMarkup(keyboard))\r\n\r\n\r\n\r\n### Idea or request for content:\r\n\r\nplease help me, if the system cannot find the user's answer based on the existing context then the show hadith will not be displayed either the source name or keyboard\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13249/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13249/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13248",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13248/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13248/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13248/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13248",
        "id": 1989246246,
        "node_id": "PR_kwDOIPDwls5fOfbt",
        "number": 13248,
        "title": "Add docugami-kg-rag template",
        "user": {
            "login": "kenzie28",
            "id": 53704749,
            "node_id": "MDQ6VXNlcjUzNzA0NzQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/53704749?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kenzie28",
            "html_url": "https://github.com/kenzie28",
            "followers_url": "https://api.github.com/users/kenzie28/followers",
            "following_url": "https://api.github.com/users/kenzie28/following{/other_user}",
            "gists_url": "https://api.github.com/users/kenzie28/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kenzie28/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kenzie28/subscriptions",
            "organizations_url": "https://api.github.com/users/kenzie28/orgs",
            "repos_url": "https://api.github.com/users/kenzie28/repos",
            "events_url": "https://api.github.com/users/kenzie28/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kenzie28/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6154420538,
                "node_id": "LA_kwDOIPDwls8AAAABbtUBOg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/template",
                "name": "template",
                "color": "145FB1",
                "default": false,
                "description": ""
            },
            {
                "id": 6232714144,
                "node_id": "LA_kwDOIPDwls8AAAABc3-roA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XXL",
                "name": "size:XXL",
                "color": "5319E7",
                "default": false,
                "description": "This PR changes 1000+ lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-12T05:26:08Z",
        "updated_at": "2023-12-04T20:55:12Z",
        "closed_at": "2023-12-04T20:55:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13248",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13248",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13248.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13248.patch",
            "merged_at": null
        },
        "body": "**Description**: Adds a new template that uses the Docugami Loader for KG-RAG conversation. This template contains a reference architecture for Retrieval Augmented Generation against a set of documents using Docugami's XML Knowledge Graph (KG-RAG).\r\n\r\nMore information found in the [README](https://github.com/docugami/langchain/tree/kgrag/template/templates/docugami-kg-rag#readme)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13248/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13248/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13247",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13247/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13247/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13247/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13247",
        "id": 1989233891,
        "node_id": "I_kwDOIPDwls52kUzj",
        "number": 13247,
        "title": "Issue: <openai APIConnectionError>",
        "user": {
            "login": "zhangleinice",
            "id": 33247284,
            "node_id": "MDQ6VXNlcjMzMjQ3Mjg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/33247284?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhangleinice",
            "html_url": "https://github.com/zhangleinice",
            "followers_url": "https://api.github.com/users/zhangleinice/followers",
            "following_url": "https://api.github.com/users/zhangleinice/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhangleinice/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhangleinice/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhangleinice/subscriptions",
            "organizations_url": "https://api.github.com/users/zhangleinice/orgs",
            "repos_url": "https://api.github.com/users/zhangleinice/repos",
            "events_url": "https://api.github.com/users/zhangleinice/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhangleinice/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-12T04:30:51Z",
        "updated_at": "2023-11-12T05:09:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\n```\r\nimport uvicorn\r\nimport os\r\n\r\nfrom typing import AsyncIterable, Awaitable\r\nfrom dotenv import load_dotenv\r\nfrom fastapi import FastAPI\r\nfrom fastapi.responses import FileResponse, StreamingResponse\r\nfrom langchain.callbacks import AsyncIteratorCallbackHandler\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.schema import HumanMessage, ChatMessage\r\nimport asyncio\r\n\r\nasync def wait_done(fn, event):\r\n    try:\r\n        await fn\r\n    except Exception as e:\r\n        print('error', e)\r\n        event.set()\r\n    finally:\r\n        event.set()\r\n\r\nasync def call_openai(question):\r\n    callback = AsyncIteratorCallbackHandler()\r\n    model = ChatOpenAI(\r\n        openai_api_key= os.environ[\"OPENAI_API_KEY\"],\r\n        streaming=True, \r\n        callbacks=[callback]\r\n    )\r\n\r\n    print('question', question)\r\n    coroutine = wait_done(model.agenerate(messages=[[HumanMessage(content=question)]]), callback.done)\r\n    task = asyncio.create_task(coroutine)\r\n    print('task', task)\r\n    print('coroutine', callback.aiter())\r\n\r\n    async for token in callback.aiter():\r\n        yield f\"{token}\"\r\n\r\n    await task\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/\")\r\nasync def homepage():\r\n    return FileResponse('static/index.html')\r\n\r\n@app.post(\"/ask\")\r\ndef ask(body: dict):\r\n    print('body', body)\r\n    # return call_openai(body['question'])\r\n    return StreamingResponse(call_openai(body['question']), media_type=\"text/event-stream\")\r\n\r\nif __name__ == \"__main__\":\r\n   uvicorn.run(host=\"127.0.0.1\", port=8888, app=app)\r\n```\r\n   \r\n   \r\n   run it:\r\n   \r\n(venv) (base) zhanglei@zhangleideMacBook-Pro chatbot % python server.py                                                                                                \r\nINFO:     Started server process [46402]\r\nINFO:     Waiting for application startup.\r\nINFO:     Application startup complete.\r\nINFO:     Uvicorn running on http://127.0.0.1:8888 (Press CTRL+C to quit)\r\nINFO:     127.0.0.1:53273 - \"GET / HTTP/1.1\" 200 OK\r\nbody {'question': '\u4f60\u597d'}\r\nINFO:     127.0.0.1:53273 - \"POST /ask HTTP/1.1\" 200 OK\r\nquestion \u4f60\u597d\r\nquestion \u4f60\u597d\r\ntask <Task pending name='Task-6' coro=<wait_done() running at /Users/zhanglei/Desktop/github/chatbot/server.py:21>>\r\ncoroutine <async_generator object AsyncIteratorCallbackHandler.aiter at 0x117158e40>\r\nRetrying langchain.chat_models.openai.acompletion_with_retry.<locals>._completion_with_retry in 4.0 seconds as it raised APIConnectionError: Error communicating with OpenAI.\r\n   \r\n \r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13247/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13247/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13246",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13246/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13246/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13246/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13246",
        "id": 1989197947,
        "node_id": "I_kwDOIPDwls52kMB7",
        "number": 13246,
        "title": "when i use map_reduce type, error appear",
        "user": {
            "login": "songsh",
            "id": 2272252,
            "node_id": "MDQ6VXNlcjIyNzIyNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2272252?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/songsh",
            "html_url": "https://github.com/songsh",
            "followers_url": "https://api.github.com/users/songsh/followers",
            "following_url": "https://api.github.com/users/songsh/following{/other_user}",
            "gists_url": "https://api.github.com/users/songsh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/songsh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/songsh/subscriptions",
            "organizations_url": "https://api.github.com/users/songsh/orgs",
            "repos_url": "https://api.github.com/users/songsh/repos",
            "events_url": "https://api.github.com/users/songsh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/songsh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-12T02:00:07Z",
        "updated_at": "2023-11-12T02:06:38Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nwhen chain_type='stuff', normal\r\nwhen \r\nchain_type = 'map_reduce', error:\r\n  1 validation error for RetrievalQA\r\nquestion_prompt\r\n  extra fields not permitted (type=value_error.extra)\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13246/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13246/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13244",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13244/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13244/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13244/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13244",
        "id": 1989151435,
        "node_id": "PR_kwDOIPDwls5fOMdU",
        "number": 13244,
        "title": "Add new models to openai callback",
        "user": {
            "login": "IsakNyberg",
            "id": 36712644,
            "node_id": "MDQ6VXNlcjM2NzEyNjQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/36712644?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IsakNyberg",
            "html_url": "https://github.com/IsakNyberg",
            "followers_url": "https://api.github.com/users/IsakNyberg/followers",
            "following_url": "https://api.github.com/users/IsakNyberg/following{/other_user}",
            "gists_url": "https://api.github.com/users/IsakNyberg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IsakNyberg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IsakNyberg/subscriptions",
            "organizations_url": "https://api.github.com/users/IsakNyberg/orgs",
            "repos_url": "https://api.github.com/users/IsakNyberg/repos",
            "events_url": "https://api.github.com/users/IsakNyberg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IsakNyberg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-11T23:08:55Z",
        "updated_at": "2023-11-12T20:01:20Z",
        "closed_at": "2023-11-12T20:01:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13244",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13244",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13244.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13244.patch",
            "merged_at": "2023-11-12T20:01:20Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n**Description:** Adding the new models to the openai callback function, info taken from [model announcement](https://platform.openai.com/docs/models) and [pricing](https://openai.com/pricing)\r\n\r\nA short description for a short PR :)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13244/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13244/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13243",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13243/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13243/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13243/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13243",
        "id": 1989132716,
        "node_id": "PR_kwDOIPDwls5fOI0F",
        "number": 13243,
        "title": "update tools",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-11T21:59:04Z",
        "updated_at": "2023-11-12T18:22:55Z",
        "closed_at": "2023-11-12T18:22:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13243",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13243",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13243.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13243.patch",
            "merged_at": "2023-11-12T18:22:54Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13243/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13243/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13242",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13242/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13242/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13242/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13242",
        "id": 1989042216,
        "node_id": "I_kwDOIPDwls52jmAo",
        "number": 13242,
        "title": "I get a `NotImplementedError` when I use `docsearch.as_retriever` with `similarity_score_threshold`",
        "user": {
            "login": "younes-io",
            "id": 3153107,
            "node_id": "MDQ6VXNlcjMxNTMxMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3153107?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/younes-io",
            "html_url": "https://github.com/younes-io",
            "followers_url": "https://api.github.com/users/younes-io/followers",
            "following_url": "https://api.github.com/users/younes-io/following{/other_user}",
            "gists_url": "https://api.github.com/users/younes-io/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/younes-io/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/younes-io/subscriptions",
            "organizations_url": "https://api.github.com/users/younes-io/orgs",
            "repos_url": "https://api.github.com/users/younes-io/repos",
            "events_url": "https://api.github.com/users/younes-io/events{/privacy}",
            "received_events_url": "https://api.github.com/users/younes-io/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-11T17:04:13Z",
        "updated_at": "2023-11-13T13:05:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Discussed in https://github.com/langchain-ai/langchain/discussions/12799\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **younes-io** November  2, 2023</sup>\r\nI have an `NotImplementedError: ` error when I run this code:\r\n\r\n\r\n```python\r\nembeddings = OpenAIEmbeddings(deployment=embedding_model, chunk_size=1)\r\ndocsearch = OpenSearchVectorSearch(index_name=index_company_docs, embedding_function=embeddings,opensearch_url=opensearch_url, http_auth=('user', auth))\r\n\r\ndoc_retriever = docsearch.as_retriever(\r\n                search_type=\"similarity_score_threshold\",\r\n                search_kwargs={'score_threshold': 0.8}\r\n            )\r\n\r\n\r\nqa = RetrievalQAWithSourcesChain.from_chain_type(\r\n    memory=memory,\r\n    llm=llm,\r\n    chain_type=\"stuff\",  # See other types of chains here\r\n    retriever=doc_retriever,\r\n    return_source_documents=True,\r\n    verbose=True,\r\n    chain_type_kwargs=chain_type_kwargs,\r\n)\r\n\r\nresponse = qa({\"question\": \"When was the company founded?\"})\r\n\r\n```</div>",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13242/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13242/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13241",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13241/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13241/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13241/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13241",
        "id": 1988907431,
        "node_id": "I_kwDOIPDwls52jFGn",
        "number": 13241,
        "title": "@tool decorator for StructuredTool.from_function doesn't fill in the `__name__` attribute correctly",
        "user": {
            "login": "MbBrainz",
            "id": 35366788,
            "node_id": "MDQ6VXNlcjM1MzY2Nzg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/35366788?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MbBrainz",
            "html_url": "https://github.com/MbBrainz",
            "followers_url": "https://api.github.com/users/MbBrainz/followers",
            "following_url": "https://api.github.com/users/MbBrainz/following{/other_user}",
            "gists_url": "https://api.github.com/users/MbBrainz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MbBrainz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MbBrainz/subscriptions",
            "organizations_url": "https://api.github.com/users/MbBrainz/orgs",
            "repos_url": "https://api.github.com/users/MbBrainz/repos",
            "events_url": "https://api.github.com/users/MbBrainz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MbBrainz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-11T11:37:37Z",
        "updated_at": "2023-11-11T12:14:23Z",
        "closed_at": "2023-11-11T12:14:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nMacos: 13.4.1 (apple silicon M1)\r\npython version 3.10.13\r\nrelevant packages: \r\nlangchain \t\t\t\t0.0.334\r\npydantic\t\t\t\t\t1.10.13\r\npydantic_core\t\t\t2.10.1\r\n\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nhttps://colab.research.google.com/drive/18d2UIFd3LHwkD3ml6_OydetvytKNnoBW?usp=sharing\r\n\r\n1. `from langchain.tools import tool`\r\n2. define a simple structured function\r\n3. Use `StructuredTool.from_function(simple_function)`\r\n\r\n\n\n### Expected behavior\n\nI expected that it would either work, or tell me that the @tool decorator is not meant to be used with StructuredTool. This is not specified anywhere in the docs or code.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13241/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13241/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13240",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13240/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13240/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13240/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13240",
        "id": 1988811402,
        "node_id": "PR_kwDOIPDwls5fNHow",
        "number": 13240,
        "title": "Add dockerfile template",
        "user": {
            "login": "langchain-infra",
            "id": 144731603,
            "node_id": "U_kgDOCKBt0w",
            "avatar_url": "https://avatars.githubusercontent.com/u/144731603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/langchain-infra",
            "html_url": "https://github.com/langchain-infra",
            "followers_url": "https://api.github.com/users/langchain-infra/followers",
            "following_url": "https://api.github.com/users/langchain-infra/following{/other_user}",
            "gists_url": "https://api.github.com/users/langchain-infra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/langchain-infra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/langchain-infra/subscriptions",
            "organizations_url": "https://api.github.com/users/langchain-infra/orgs",
            "repos_url": "https://api.github.com/users/langchain-infra/repos",
            "events_url": "https://api.github.com/users/langchain-infra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/langchain-infra/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-11T07:26:50Z",
        "updated_at": "2023-11-13T15:33:02Z",
        "closed_at": "2023-11-13T15:33:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13240",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13240",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13240.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13240.patch",
            "merged_at": "2023-11-13T15:33:01Z"
        },
        "body": "Description: This pr adds a dockerfile to an app template for easy containerization of your production application.\r\nDependencies: None\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13240/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13240/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13239",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13239/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13239/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13239/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13239",
        "id": 1988805221,
        "node_id": "PR_kwDOIPDwls5fNGRf",
        "number": 13239,
        "title": "Fix typo in timescalevector.ipynb",
        "user": {
            "login": "eltociear",
            "id": 22633385,
            "node_id": "MDQ6VXNlcjIyNjMzMzg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22633385?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eltociear",
            "html_url": "https://github.com/eltociear",
            "followers_url": "https://api.github.com/users/eltociear/followers",
            "following_url": "https://api.github.com/users/eltociear/following{/other_user}",
            "gists_url": "https://api.github.com/users/eltociear/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eltociear/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eltociear/subscriptions",
            "organizations_url": "https://api.github.com/users/eltociear/orgs",
            "repos_url": "https://api.github.com/users/eltociear/repos",
            "events_url": "https://api.github.com/users/eltociear/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eltociear/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-11T07:17:03Z",
        "updated_at": "2023-11-13T17:03:08Z",
        "closed_at": "2023-11-13T17:03:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13239",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13239",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13239.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13239.patch",
            "merged_at": "2023-11-13T17:03:08Z"
        },
        "body": "enviornment -> environment\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13239/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13239/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13238",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13238/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13238/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13238/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13238",
        "id": 1988722501,
        "node_id": "I_kwDOIPDwls52iX9F",
        "number": 13238,
        "title": "Trouble Accessing Document ID in WeaviateHybridSearchRetriever Results",
        "user": {
            "login": "blockfer-rp",
            "id": 58490353,
            "node_id": "MDQ6VXNlcjU4NDkwMzUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/58490353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blockfer-rp",
            "html_url": "https://github.com/blockfer-rp",
            "followers_url": "https://api.github.com/users/blockfer-rp/followers",
            "following_url": "https://api.github.com/users/blockfer-rp/following{/other_user}",
            "gists_url": "https://api.github.com/users/blockfer-rp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blockfer-rp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blockfer-rp/subscriptions",
            "organizations_url": "https://api.github.com/users/blockfer-rp/orgs",
            "repos_url": "https://api.github.com/users/blockfer-rp/repos",
            "events_url": "https://api.github.com/users/blockfer-rp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blockfer-rp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-11T04:39:30Z",
        "updated_at": "2023-11-11T08:51:07Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain: 0.0.334\r\npython: 3.11.6\r\nweaviate-client: 3.25.3\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI am trying to implement the WeaviateHybridSearchRetriever to retrieve documents from Weaviate. My schema indicates the document ID is stored in the _id field based on the shardingConfig.\r\n\r\nWhen setting up the retriever, I included _id in the attributes list:\r\n````\r\nhybrid_retriever = WeaviateHybridSearchRetriever(\r\n  attributes=[\"_id\", \"aliases\", \"categoryid\", \"name\", \"page_content\", \"ticker\"]\r\n)\r\n````\r\nHowever, when I try to access _id on the returned Document objects, I get an error that _id is not found.\r\n\r\nFor example:\r\n\r\n````\r\nresults = hybrid_retriever.get_relevant_documents(query=\"some query\")\r\nprint(results[0]._id) # Error!_id not found\r\n````\r\n\r\nI have tried variations like id, document_id instead of _id but still cannot seem to access the document ID field.\r\n\r\n\r\nAny suggestions on what I am missing or doing wrong when trying to retrieve the document ID from the Weaviate results using the _id field specified in the schema?\r\n\r\nLet me know if any other details would be helpful in troubleshooting this issue!\r\n\r\n**Schema Details**\r\n````\r\n{\r\n   \"classes\":[\r\n      {\r\n         \"class\":\"Category_taxonomy\",\r\n         \"invertedIndexConfig\":{\r\n            \"bm25\":{\r\n               \"b\":0.75,\r\n               \"k1\":1.2\r\n            },\r\n            \"cleanupIntervalSeconds\":60,\r\n            \"stopwords\":{\r\n               \"additions\":\"None\",\r\n               \"preset\":\"en\",\r\n               \"removals\":\"None\"\r\n            }\r\n         },\r\n         \"moduleConfig\":{\r\n            \"text2vec-openai\":{\r\n               \"baseURL\":\"https://api.openai.com\",\r\n               \"model\":\"ada\",\r\n               \"modelVersion\":\"002\",\r\n               \"type\":\"text\",\r\n               \"vectorizeClassName\":true\r\n            }\r\n         },\r\n         \"multiTenancyConfig\":{\r\n            \"enabled\":false\r\n         },\r\n         \"properties\":[\r\n            {\r\n               \"dataType\":[\r\n                  \"text\"\r\n               ],\r\n               \"description\":\"Content of the page\",\r\n               \"indexFilterable\":true,\r\n               \"indexSearchable\":true,\r\n               \"moduleConfig\":{\r\n                  \"text2vec-openai\":{\r\n                     \"skip\":false,\r\n                     \"vectorizePropertyName\":false\r\n                  }\r\n               },\r\n               \"name\":\"page_content\",\r\n               \"tokenization\":\"word\"\r\n            },\r\n            {\r\n               \"dataType\":[\r\n                  \"number\"\r\n               ],\r\n               \"description\":\"Identifier for the category\",\r\n               \"indexFilterable\":true,\r\n               \"indexSearchable\":false,\r\n               \"moduleConfig\":{\r\n                  \"text2vec-openai\":{\r\n                     \"skip\":false,\r\n                     \"vectorizePropertyName\":false\r\n                  }\r\n               },\r\n               \"name\":\"categoryid\"\r\n            },\r\n            {\r\n               \"dataType\":[\r\n                  \"text\"\r\n               ],\r\n               \"description\":\"Ticker symbol\",\r\n               \"indexFilterable\":true,\r\n               \"indexSearchable\":true,\r\n               \"moduleConfig\":{\r\n                  \"text2vec-openai\":{\r\n                     \"skip\":false,\r\n                     \"vectorizePropertyName\":false\r\n                  }\r\n               },\r\n               \"name\":\"ticker\",\r\n               \"tokenization\":\"word\"\r\n            },\r\n            {\r\n               \"dataType\":[\r\n                  \"text\"\r\n               ],\r\n               \"description\":\"Name of the entity\",\r\n               \"indexFilterable\":true,\r\n               \"indexSearchable\":true,\r\n               \"moduleConfig\":{\r\n                  \"text2vec-openai\":{\r\n                     \"skip\":false,\r\n                     \"vectorizePropertyName\":false\r\n                  }\r\n               },\r\n               \"name\":\"name\",\r\n               \"tokenization\":\"word\"\r\n            },\r\n            {\r\n               \"dataType\":[\r\n                  \"text\"\r\n               ],\r\n               \"description\":\"Aliases for the entity\",\r\n               \"indexFilterable\":true,\r\n               \"indexSearchable\":true,\r\n               \"moduleConfig\":{\r\n                  \"text2vec-openai\":{\r\n                     \"skip\":false,\r\n                     \"vectorizePropertyName\":false\r\n                  }\r\n               },\r\n               \"name\":\"aliases\",\r\n               \"tokenization\":\"word\"\r\n            }\r\n         ],\r\n         \"replicationConfig\":{\r\n            \"factor\":1\r\n         },\r\n         \"shardingConfig\":{\r\n            \"virtualPerPhysical\":128,\r\n            \"desiredCount\":1,\r\n            \"actualCount\":1,\r\n            \"desiredVirtualCount\":128,\r\n            \"actualVirtualCount\":128,\r\n            \"key\":\"_id\",\r\n            \"strategy\":\"hash\",\r\n            \"function\":\"murmur3\"\r\n         },\r\n         \"vectorIndexConfig\":{\r\n            \"skip\":false,\r\n            \"cleanupIntervalSeconds\":300,\r\n            \"maxConnections\":64,\r\n            \"efConstruction\":128,\r\n            \"ef\":-1,\r\n            \"dynamicEfMin\":100,\r\n            \"dynamicEfMax\":500,\r\n            \"dynamicEfFactor\":8,\r\n            \"vectorCacheMaxObjects\":1000000000000,\r\n            \"flatSearchCutoff\":40000,\r\n            \"distance\":\"cosine\",\r\n            \"pq\":{\r\n               \"enabled\":false,\r\n               \"bitCompression\":false,\r\n               \"segments\":0,\r\n               \"centroids\":256,\r\n               \"trainingLimit\":100000,\r\n               \"encoder\":{\r\n                  \"type\":\"kmeans\",\r\n                  \"distribution\":\"log-normal\"\r\n               }\r\n            }\r\n         },\r\n         \"vectorIndexType\":\"hnsw\",\r\n         \"vectorizer\":\"text2vec-openai\"\r\n      }\r\n   ]\r\n}\r\n````\r\n\r\n**Example Document**\r\n````\r\n{\r\n    \"class\": \"Category_taxonomy\",\r\n    \"creationTimeUnix\": 1699553747601,\r\n    \"id\": \"ad092eb1-e4a6-4d93-a7d2-c507c33c3837\",\r\n    \"lastUpdateTimeUnix\": 1699553747601,\r\n    \"properties\": {\r\n        \"aliases\": \"Binance Coin, Binance Smart Chain\",\r\n        \"categoryid\": 569,\r\n        \"name\": \"BNB\",\r\n        \"page_content\": \"ticker: bnb\\nname: BNB\\naliases: Binance Coin, Binance Smart Chain\",\r\n        \"ticker\": \"bnb\"\r\n    },\r\n    \"vectorWeights\": null\r\n}\r\n````\r\n\r\nExample Search Result\r\n````\r\n{\r\n   \"status\":\"success\",\r\n   \"results\":[\r\n      {\r\n         \"page_content\":\"ticker: bnb\\nname: BNB\\naliases: Binance Coin, Binance Smart Chain\",\r\n         \"metadata\":{\r\n            \"_additional\":{\r\n               \"explainScore\":\"(vector) [-0.0067740963 -0.03091735 0.00511335 0.0016186031 -0.016120477 0.017543973 -0.0072548385 -0.023063144 0.015246399 -0.0020884196]...  \\n(hybrid) Document ad092eb1-e4a6-4d93-a7d2-c507c33c3837 contributed 0.00819672131147541 to the score\",\r\n               \"score\":\"0.008196721\"\r\n            },\r\n            \"aliases\":\"Binance Coin, Binance Smart Chain\",\r\n            \"categoryid\":569,\r\n            \"name\":\"BNB\",\r\n            \"ticker\":\"bnb\"\r\n         },\r\n         \"type\":\"Document\"\r\n      }\r\n   ]\r\n}\r\n````\r\n\r\nApp Code\r\n\r\n````\r\n# Prepare global variables\r\nWEAVIATE_URL = os.getenv('WEAVIATE_URL')\r\nWEAVIATE_API_KEY = os.getenv('WEAVIATE_API_KEY')\r\nOPENAI_API_KEY = os.getenv('OPENAI_API_KEY')\r\nINDEX_NAME = \"Category_taxonomy\"\r\nTEXT_KEY = \"page_content\"\r\n\r\n# Dependency provider function for Weaviate client\r\ndef get_weaviate_vectorstore():\r\n    # Initialize the Weaviate client with API key authentication\r\n    client = weaviate.Client(\r\n        url=WEAVIATE_URL, \r\n        auth_client_secret=weaviate.AuthApiKey(WEAVIATE_API_KEY),\r\n        additional_headers={\r\n            \"X-Openai-Api-Key\": OPENAI_API_KEY,\r\n        }\r\n    )\r\n\r\n    # Initialize embeddings with a specified model\r\n    embeddings = OpenAIEmbeddings(openai_api_key=OPENAI_API_KEY, model='text-embedding-ada-002')\r\n\r\n    # Initialize vector store with attributes and schema\r\n    vectorstore = Weaviate(\r\n        client=client,\r\n        index_name=INDEX_NAME,\r\n        text_key=TEXT_KEY,\r\n        embedding=embeddings,\r\n        attributes=[\"aliases\", \"categoryid\", \"name\", \"page_content\", \"ticker\"],\r\n        by_text=False\r\n    )\r\n    return client, vectorstore\r\n\r\ndef get_weaviate_hybrid_retriever(k: int = 5):\r\n    # Directly call the function to get the client and vectorstore\r\n    client, vectorstore = get_weaviate_vectorstore()\r\n    \r\n    # Instantiate the retriever with the settings from the vectorstore\r\n    hybrid_retriever = WeaviateHybridSearchRetriever(\r\n        client=client,\r\n        index_name=INDEX_NAME,\r\n        text_key=TEXT_KEY,\r\n        attributes=[\"aliases\", \"categoryid\", \"name\", \"page_content\", \"ticker\"],\r\n        k=k,\r\n        create_schema_if_missing=True\r\n    )\r\n    return hybrid_retriever\r\n\r\nasync def parse_query_params(request: Request) -> Dict[str, List[Any]]:\r\n    parsed_values = defaultdict(list)\r\n\r\n    for key, value in request.query_params.multi_items():\r\n        # Append the value for any key directly\r\n        parsed_values[key].append(value)\r\n\r\n    return parsed_values\r\n\r\n@router.get(\"/hybrid_search_category_taxonomy/\")\r\nasync def hybrid_search_category_taxonomy(parsed_values: Dict[str, List[Any]] = Depends(parse_query_params), query: Optional[str] = None, k: int = 5):\r\n    categoryids = parsed_values.get('categoryid', [])\r\n    tickers = parsed_values.get('ticker', [])\r\n    names = parsed_values.get('name', [])\r\n    aliasess = parsed_values.get('aliases', [])\r\n\r\n    # Use a partial function to pass 'k' to 'get_weaviate_hybrid_retriever'\r\n    retriever = get_weaviate_hybrid_retriever(k=k)\r\n    \r\n    # Initialize the where_filter with an 'And' operator if there are any filters provided\r\n    logging.info(\r\n        f\"query: {query}, \"\r\n        f\"categoryID: {categoryids}, \"\r\n        f\"ticker: {tickers}, \"\r\n        f\"name: {names}, \"\r\n        f\"aliases: {aliasess}, \"\r\n        f\"k: {k}\"\r\n    )\r\n\r\n    # Adjustments to reference parameters from 'parse_query_params'\r\n    where_filter = {\"operator\": \"And\", \"operands\": []} if any([categoryids, tickers, names, aliasess]) else None\r\n    \r\n    # Add filters for categoryid and ticker with the 'Equal' operator\r\n    if categoryids:\r\n        category_operands = [{\"path\": [\"categoryid\"], \"operator\": \"Equal\", \"valueNumber\": cid} for cid in categoryids]\r\n        if category_operands:\r\n            where_filter[\"operands\"].append({\"operator\": \"Or\", \"operands\": category_operands})\r\n        \r\n    if tickers:\r\n        ticker_operands = [{\"path\": [\"ticker\"], \"operator\": \"Equal\", \"valueText\": ticker} for ticker in tickers]\r\n        if ticker_operands:\r\n            where_filter[\"operands\"].append({\"operator\": \"Or\", \"operands\": ticker_operands})\r\n    \r\n    if names:\r\n        name_operands = [{\"path\": [\"name\"], \"operator\": \"Equal\", \"valueText\": name} for name in names]\r\n        if name_operands:\r\n            where_filter[\"operands\"].append({\"operator\": \"Or\", \"operands\": name_operands})\r\n    \r\n    if aliasess:\r\n        aliases_operands = [{\"path\": [\"aliases\"], \"operator\": \"Equal\", \"valueText\": aliases} for aliases in aliasess]\r\n        if aliases_operands:\r\n            where_filter[\"operands\"].append({\"operator\": \"Or\", \"operands\": aliases_operands})\r\n    \r\n    try:\r\n        # Format the results for the response\r\n        effective_query = \" \" if not query or not query.strip() else query\r\n\r\n        # Log the where_filter before fetching documents\r\n        logging.info(f\"where_filter being used: {where_filter}\")\r\n        \r\n        # Fetch the relevant documents using the hybrid retriever instance\r\n        results = retriever.get_relevant_documents(effective_query, where_filter=where_filter, score=True)\r\n\r\n        # Format the results for the response\r\n        response_data = [vars(doc) for doc in results]\r\n        \r\n        return {\"status\": \"success\", \"results\": response_data}\r\n    except Exception as e:\r\n        logger.error(f\"Error while processing request: {str(e)}\", exc_info=True)\r\n        raise HTTPException(detail=str(e), status_code=500)\r\n````\n\n### Expected behavior\n\n**Expected Behavior**\r\n\r\nWhen using the WeaviateHybridSearchRetriever for document retrieval, I expect that including the _id attribute in the attributes list will allow me to access the document ID of each retrieved document without any issues. Specifically, after setting up the WeaviateHybridSearchRetriever like so:\r\n\r\n````\r\nhybrid_retriever = WeaviateHybridSearchRetriever(\r\n    attributes=[\"_id\", \"aliases\", \"categoryid\", \"name\", \"page_content\", \"ticker\"]\r\n)\r\n````\r\n\r\nI anticipate that executing a query and attempting to print the _id of the first result should successfully return the unique identifier of the document, as per the below code snippet:\r\n\r\n````\r\nresults = hybrid_retriever.get_relevant_documents(query=\"some query\")\r\nprint(results[0]._id)  # Expecting this to print the _id of the first result\r\n````\r\n\r\nIn this scenario, my expectation is that the _id field, being specified in the attributes parameter, should be readily accessible in each Document object returned by the get_relevant_documents method. This behavior is crucial for my application as it relies on the unique document IDs for further processing and analysis of the retrieved data.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13238/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13238/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13237",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13237/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13237/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13237/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13237",
        "id": 1988720679,
        "node_id": "PR_kwDOIPDwls5fMzyo",
        "number": 13237,
        "title": "Add OpenAI API v1 support for ChatAnyscale and fixed a bug with openai_api_key",
        "user": {
            "login": "kylehh",
            "id": 24217337,
            "node_id": "MDQ6VXNlcjI0MjE3MzM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/24217337?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kylehh",
            "html_url": "https://github.com/kylehh",
            "followers_url": "https://api.github.com/users/kylehh/followers",
            "following_url": "https://api.github.com/users/kylehh/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylehh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kylehh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylehh/subscriptions",
            "organizations_url": "https://api.github.com/users/kylehh/orgs",
            "repos_url": "https://api.github.com/users/kylehh/repos",
            "events_url": "https://api.github.com/users/kylehh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kylehh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-11T04:33:50Z",
        "updated_at": "2023-11-13T17:02:02Z",
        "closed_at": "2023-11-13T17:01:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13237",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13237",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13237.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13237.patch",
            "merged_at": "2023-11-13T17:01:54Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n1. Add OpenAI API v1 support\r\n2. Fixed a bug to call `get_secret_value` on a str value (values[\"openai_api_key\"])\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13237/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13237/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13236",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13236/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13236/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13236/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13236",
        "id": 1988719895,
        "node_id": "PR_kwDOIPDwls5fMzoO",
        "number": 13236,
        "title": "Move OAI assistants to langchain and add callbacks",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-11T04:31:37Z",
        "updated_at": "2023-11-24T08:49:43Z",
        "closed_at": "2023-11-14T01:42:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13236",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13236",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13236.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13236.patch",
            "merged_at": "2023-11-14T01:42:07Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13236/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13236/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13234",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13234/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13234/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13234/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13234",
        "id": 1988660318,
        "node_id": "I_kwDOIPDwls52iIxe",
        "number": 13234,
        "title": "If i assign two SemanticSimilarityExampleSelector with different data in different variable but it combines",
        "user": {
            "login": "Renukumar-R",
            "id": 117875193,
            "node_id": "U_kgDOBwah-Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/117875193?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Renukumar-R",
            "html_url": "https://github.com/Renukumar-R",
            "followers_url": "https://api.github.com/users/Renukumar-R/followers",
            "following_url": "https://api.github.com/users/Renukumar-R/following{/other_user}",
            "gists_url": "https://api.github.com/users/Renukumar-R/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Renukumar-R/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Renukumar-R/subscriptions",
            "organizations_url": "https://api.github.com/users/Renukumar-R/orgs",
            "repos_url": "https://api.github.com/users/Renukumar-R/repos",
            "events_url": "https://api.github.com/users/Renukumar-R/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Renukumar-R/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-11T02:23:06Z",
        "updated_at": "2023-11-11T05:35:01Z",
        "closed_at": "2023-11-11T05:35:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI'm using colab\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.prompts.example_selector.semantic_similarity import SemanticSimilarityExampleSelector\r\n\r\nkey_selector = SemanticSimilarityExampleSelector(vectorstore=few_shots,k=2)\r\n\r\nfew_shots_selector = SemanticSimilarityExampleSelector(vectorstore=few_shots,k=2)\r\n\r\nkey_selector.select_examples({\"All\": \"who is in Bengaluru?\"})\r\n\r\n# It's return from few_shots_selector\n\n### Expected behavior\n\nkey_selector.select_examples({\"All\": \"who is in Bengaluru?\"})\r\n\r\nit's need to return from key_selector",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13234/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13234/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13233",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13233/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13233/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13233/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13233",
        "id": 1988652580,
        "node_id": "I_kwDOIPDwls52iG4k",
        "number": 13233,
        "title": "Issue: <ConversationalRetrievalChain.from_llm and  partition_pdf  >",
        "user": {
            "login": "pengkang1991",
            "id": 49478192,
            "node_id": "MDQ6VXNlcjQ5NDc4MTky",
            "avatar_url": "https://avatars.githubusercontent.com/u/49478192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pengkang1991",
            "html_url": "https://github.com/pengkang1991",
            "followers_url": "https://api.github.com/users/pengkang1991/followers",
            "following_url": "https://api.github.com/users/pengkang1991/following{/other_user}",
            "gists_url": "https://api.github.com/users/pengkang1991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pengkang1991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pengkang1991/subscriptions",
            "organizations_url": "https://api.github.com/users/pengkang1991/orgs",
            "repos_url": "https://api.github.com/users/pengkang1991/repos",
            "events_url": "https://api.github.com/users/pengkang1991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pengkang1991/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-11T02:10:50Z",
        "updated_at": "2023-11-11T02:19:25Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nWhy did I follow the tutorial below to generate vector library data, but I wanted to use ConversationalRetrievalChain.from_llm to answer my question, but couldn't answer the question? Or can I only answer with chain?\r\n\r\n\r\nhttps://github.com/langchain-ai/langchain/blob/master/cookbook/Semi_Structured_RAG.ipynb?ref=blog.langchain.dev\r\n\r\n\r\ncode show as below:\r\n\r\ndef read_item(query=Body(..., embed=True)):\r\n    question=query\r\n    print(question)\r\n    embeddings = OpenAIEmbeddings()\r\n    vector_store_path = r\"/mnt/PD/VS\"\r\n    docsearch = Chroma(persist_directory=vector_store_path, embedding_function=embeddings)\r\n\r\n\r\n    # Build prompt\r\n    template = \"\"\"Use the following pieces of context to answer the question at the end. \\\r\n    If you don't know the answer, just say that you don't know, don't try to make up an answer. \\\r\n    Use three sentences maximum. Keep the answer as concise as possible. Always say \"thanks for asking!\" \\\r\n    at the end of the answer.\r\n    {context}\r\n    {chat_history}\r\n    Question: {question}\r\n    Helpful Answer:\"\"\"\r\n\r\n    # Build prompt\r\n\r\n\r\n    #QA_CHAIN_PROMPT = PromptTemplate.from_template(template)\r\n    prompt = PromptTemplate(\r\n    input_variables=[\"chat_history\", \"context\", \"question\"],\r\n    template=template,\r\n)\r\n\r\n    store = InMemoryStore()\r\n    id_key = \"doc_id\"\r\n\r\n    # The retriever (empty to start)\r\n    retriever = MultiVectorRetriever(\r\n        vectorstore=docsearch,\r\n        docstore=store,\r\n        id_key=id_key,\r\n    )\r\n\r\n    llm = OpenAI(\r\n        temperature=0,max_tokens=1024,\r\n        model_name=\"gpt-4-1106-preview\"\r\n    )\r\n    memory = ConversationKGMemory(llm=llm,memory_key='chat_history',return_messages=True,output_key='answer')\r\n    qa = ConversationalRetrievalChain.from_llm(\r\n        llm=llm,\r\n        chain_type=\"stuff\",\r\n        retriever=retriever,\r\n        memory=memory,\r\n        return_source_documents=True,\r\n        return_generated_question=True,\r\n        combine_docs_chain_kwargs={'prompt': prompt}\r\n    )\r\n    # \u8fdb\u884c\u95ee\u7b54\r\n    result = qa({\"question\": question})\r\n    #print(qa.combine_documents_chain.memory)\r\n    return  result\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13233/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13233/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13232",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13232/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13232/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13232/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13232",
        "id": 1988624195,
        "node_id": "PR_kwDOIPDwls5fMfD1",
        "number": 13232,
        "title": "PGVector needs to close its connection if it is garbage collected",
        "user": {
            "login": "Sumukh",
            "id": 882381,
            "node_id": "MDQ6VXNlcjg4MjM4MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/882381?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sumukh",
            "html_url": "https://github.com/Sumukh",
            "followers_url": "https://api.github.com/users/Sumukh/followers",
            "following_url": "https://api.github.com/users/Sumukh/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sumukh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sumukh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sumukh/subscriptions",
            "organizations_url": "https://api.github.com/users/Sumukh/orgs",
            "repos_url": "https://api.github.com/users/Sumukh/repos",
            "events_url": "https://api.github.com/users/Sumukh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sumukh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-11T01:07:46Z",
        "updated_at": "2023-11-15T22:59:29Z",
        "closed_at": "2023-11-15T20:34:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13232",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13232",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13232.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13232.patch",
            "merged_at": "2023-11-15T20:34:37Z"
        },
        "body": "Description: Without this change, PGVector was using lots of connections and would eventually be unable to keep making connections. \r\nIssue: Resolves #9696 \r\nDependencies: None \r\nTwitter: @sumukhsridhara \r\n\r\nMore context: \r\n\r\nThe `__del__` method gets called when the object is about to be garbage collected.  Without this, users (like us) have run into errors like the below \r\n\r\n```\r\npsql: FATAL: remaining connection slots are reserved for non-replication superuser connections\r\n```\r\n\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13232/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13232/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13231",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13231/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13231/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13231/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13231",
        "id": 1988591377,
        "node_id": "PR_kwDOIPDwls5fMX6K",
        "number": 13231,
        "title": "feat(llms): support Openai API v1 for Azure OpenAI completions",
        "user": {
            "login": "mspronesti",
            "id": 44113430,
            "node_id": "MDQ6VXNlcjQ0MTEzNDMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/44113430?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mspronesti",
            "html_url": "https://github.com/mspronesti",
            "followers_url": "https://api.github.com/users/mspronesti/followers",
            "following_url": "https://api.github.com/users/mspronesti/following{/other_user}",
            "gists_url": "https://api.github.com/users/mspronesti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mspronesti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mspronesti/subscriptions",
            "organizations_url": "https://api.github.com/users/mspronesti/orgs",
            "repos_url": "https://api.github.com/users/mspronesti/repos",
            "events_url": "https://api.github.com/users/mspronesti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mspronesti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-11T00:13:58Z",
        "updated_at": "2023-11-14T20:10:19Z",
        "closed_at": "2023-11-14T20:10:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13231",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13231",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13231.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13231.patch",
            "merged_at": "2023-11-14T20:10:18Z"
        },
        "body": "Hi,\r\nthis PR adds support for OpenAI API v1 for Azure OpenAI completion API.\r\n@baskaryan @hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13231/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13231/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13230",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13230/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13230/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13230/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13230",
        "id": 1988539254,
        "node_id": "I_kwDOIPDwls52hrN2",
        "number": 13230,
        "title": "load_summarize_chain with map_reduce error : InvalidRequestError: This model's maximum context length is 8192 tokens. However, your messages resulted in 13516 tokens. Please reduce the length of the messages.",
        "user": {
            "login": "manasatramalinga",
            "id": 77706350,
            "node_id": "MDQ6VXNlcjc3NzA2MzUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/77706350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manasatramalinga",
            "html_url": "https://github.com/manasatramalinga",
            "followers_url": "https://api.github.com/users/manasatramalinga/followers",
            "following_url": "https://api.github.com/users/manasatramalinga/following{/other_user}",
            "gists_url": "https://api.github.com/users/manasatramalinga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manasatramalinga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manasatramalinga/subscriptions",
            "organizations_url": "https://api.github.com/users/manasatramalinga/orgs",
            "repos_url": "https://api.github.com/users/manasatramalinga/repos",
            "events_url": "https://api.github.com/users/manasatramalinga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manasatramalinga/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-10T23:05:46Z",
        "updated_at": "2023-11-10T23:20:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.docstore.document import Document\r\nfrom langchain.chains.summarize import load_summarize_chain\r\nfrom fastapi.encoders import jsonable_encoder\r\nfrom langchain.chains.mapreduce import MapReduceChain\r\nfrom time import monotonic\r\n\r\ngpt_4_8k_max_tokens = 8000 #https://platform.openai.com/docs/models/gpt-4\r\ntext_splitter = CharacterTextSplitter.from_tiktoken_encoder(model_name=model_name, chunk_size=gpt_4_8k_max_tokens, chunk_overlap=0) \r\nverbose = False\r\n\r\n# Initialize output dataframe with all the columns in the patient history class\r\ncolumn_names = list(PatientHistory.model_fields.keys())\r\ndf_AOAI_extracted_text = pd.DataFrame(columns=column_names)\r\n\r\n# Create documents from the input text\r\ntexts = text_splitter.split_text(test_text) \r\ndocs = [Document(page_content=t) for t in texts]\r\nprint(f\"Number of Documents {len(docs)}\")\r\n\r\n# Count the number of tokens in the document\r\nnum_tokens = num_tokens_from_string(test_text, model_name)\r\nprint(f\"Number of Tokens {num_tokens}\")\r\n\r\n# call langchain summarizer to get the output for the given prompt\r\nsummaries = []\r\nif num_tokens < gpt_4_8k_max_tokens:\r\n#Stuffing is the simplest method, whereby you simply stuff all the related data into the prompt as context to pass to the language model. This is implemented in LangChain as the StuffDocumentsChain.\r\n#This method is sutable for smaller piece of data.\r\n        \r\n    chain = load_summarize_chain(llm, chain_type=\"stuff\", prompt=TABLE_PROMPT, verbose=verbose)\r\nelse:      \r\n        #MapReduceDocumentsChain is an advanced document processing technique that extends the capabilities of the conventional MapReduce framework. \r\n        #It goes beyond the typical MapReduce approach by executing a distinct prompt to consolidate the initial outputs. \r\n        #This method is designed to generate a thorough and cohesive summary or response that encompasses the entire document.\r\n    print('mapreduce')\r\n    chain = load_summarize_chain(llm, chain_type=\"map_reduce\", map_prompt=TABLE_PROMPT, combine_prompt=TABLE_PROMPT, verbose=verbose, return_intermediate_steps=False)\r\n\r\nstart_time = monotonic()\r\nsummary = chain.run(docs)\r\nprint(summary)\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.docstore.document import Document\r\nfrom langchain.chains.summarize import load_summarize_chain\r\nfrom fastapi.encoders import jsonable_encoder\r\nfrom langchain.chains.mapreduce import MapReduceChain\r\nfrom time import monotonic\r\n\r\ngpt_4_8k_max_tokens = 8000 #https://platform.openai.com/docs/models/gpt-4\r\ntext_splitter = CharacterTextSplitter.from_tiktoken_encoder(model_name=model_name, chunk_size=gpt_4_8k_max_tokens, chunk_overlap=0) \r\nverbose = False\r\n\r\n# Initialize output dataframe with all the columns in the patient history class\r\ncolumn_names = list(PatientHistory.model_fields.keys())\r\ndf_AOAI_extracted_text = pd.DataFrame(columns=column_names)\r\n\r\n# Create documents from the input text\r\ntexts = text_splitter.split_text(test_text) \r\ndocs = [Document(page_content=t) for t in texts]\r\nprint(f\"Number of Documents {len(docs)}\")\r\n\r\n# Count the number of tokens in the document\r\nnum_tokens = num_tokens_from_string(test_text, model_name)\r\nprint(f\"Number of Tokens {num_tokens}\")\r\n\r\n# call langchain summarizer to get the output for the given prompt\r\nsummaries = []\r\nif num_tokens < gpt_4_8k_max_tokens:\r\n#Stuffing is the simplest method, whereby you simply stuff all the related data into the prompt as context to pass to the language model. This is implemented in LangChain as the StuffDocumentsChain.\r\n#This method is sutable for smaller piece of data.\r\n        \r\n    chain = load_summarize_chain(llm, chain_type=\"stuff\", prompt=TABLE_PROMPT, verbose=verbose)\r\nelse:      \r\n        #MapReduceDocumentsChain is an advanced document processing technique that extends the capabilities of the conventional MapReduce framework. \r\n        #It goes beyond the typical MapReduce approach by executing a distinct prompt to consolidate the initial outputs. \r\n        #This method is designed to generate a thorough and cohesive summary or response that encompasses the entire document.\r\n    print('mapreduce')\r\n    chain = load_summarize_chain(llm, chain_type=\"map_reduce\", map_prompt=TABLE_PROMPT, combine_prompt=TABLE_PROMPT, verbose=verbose, return_intermediate_steps=False)\r\n\r\nstart_time = monotonic()\r\nsummary = chain.run(docs)\r\nprint(summary)\n\n### Expected behavior\n\nShould go through all docs and provide the summary",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13230/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13230/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13229",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13229/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13229/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13229/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13229",
        "id": 1988517020,
        "node_id": "PR_kwDOIPDwls5fMHuE",
        "number": 13229,
        "title": "Fix \"additional_kwargs[\"arguments\"] already exists in this message, but with a different type.\" for Azure openai API. ",
        "user": {
            "login": "superken01",
            "id": 22494723,
            "node_id": "MDQ6VXNlcjIyNDk0NzIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/22494723?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/superken01",
            "html_url": "https://github.com/superken01",
            "followers_url": "https://api.github.com/users/superken01/followers",
            "following_url": "https://api.github.com/users/superken01/following{/other_user}",
            "gists_url": "https://api.github.com/users/superken01/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/superken01/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/superken01/subscriptions",
            "organizations_url": "https://api.github.com/users/superken01/orgs",
            "repos_url": "https://api.github.com/users/superken01/repos",
            "events_url": "https://api.github.com/users/superken01/events{/privacy}",
            "received_events_url": "https://api.github.com/users/superken01/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-11-10T22:46:51Z",
        "updated_at": "2023-12-05T03:58:49Z",
        "closed_at": "2023-12-05T03:58:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13229",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13229",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13229.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13229.patch",
            "merged_at": null
        },
        "body": "\r\n  - **Description:** This PR addresses an issue with the OpenAI API streaming response, where initially the key (arguments) is provided but the value is None. Subsequently, it updates with {\"arguments\": \"{\\n\"}, leading to a type inconsistency that causes an exception. The specific error encountered is ValueError: additional_kwargs[\"arguments\"] already exists in this message, but with a different type. This change aims to resolve this inconsistency and ensure smooth API interactions.\r\n  - **Issue:** None.\r\n  - **Dependencies:** None.\r\n  - **Tag maintainer:** @eyurtsev,\r\n  ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13229/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13229/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13228",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13228/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13228/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13228/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13228",
        "id": 1988516863,
        "node_id": "PR_kwDOIPDwls5fMHsD",
        "number": 13228,
        "title": "Fix Document Loader Unit Test - Docusaurus",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-10T22:46:35Z",
        "updated_at": "2023-11-10T22:52:02Z",
        "closed_at": "2023-11-10T22:52:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13228",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13228",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13228.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13228.patch",
            "merged_at": "2023-11-10T22:52:01Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13228/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13228/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13227",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13227/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13227/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13227/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13227",
        "id": 1988500031,
        "node_id": "PR_kwDOIPDwls5fMD-S",
        "number": 13227,
        "title": "Image template",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-10T22:27:58Z",
        "updated_at": "2023-12-11T22:38:18Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13227",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13227",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13227.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13227.patch",
            "merged_at": null
        },
        "body": "example usage\r\n```python\r\nffrom langchain.prompts import ChatPromptTemplate\r\n\r\nprompt = ChatPromptTemplate.from_messages([\r\n    (\"system\", \"foo bar\"),\r\n    (\"human\", [\r\n        \"{question}\",\r\n        {\"text\": \"{second_question}\"},\r\n        # image with var name 'first_image' and no preset values\r\n        {\"image_url\": \"{first_image}\"}, \r\n        # image with var name 'second_image' and preset \"detail\" level\r\n        {\"image_url\": {\"variable_name\": \"second_image\", \"detail\": \"low\"}}, \r\n        # constant image, not a var\r\n        {\"type\": \"image_url\", \"image_url\": {\"url\": \"https://python.langchain.com/assets/images/langchain_stack-f195a2c417953cb5828f76e5f9039c9f.png\"}}]), \r\n])\r\nprompt.format_messages(\r\n    question=\"what's the difference between these images\", \r\n    second_question=\"what's upppppp\",\r\n    # specify an image path and other params\r\n    first_image={\r\n        \"path\": \"/Users/bagatur/Downloads/LangChain Stack - V8.png\", \r\n        \"detail\":\"auto\"\r\n    }, \r\n    # specify just a url. preset value \"detail\": \"low\" will be attached\r\n    second_image=\"data:blah\"\r\n)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13227/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13227/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13226",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13226/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13226/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13226/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13226",
        "id": 1988476987,
        "node_id": "PR_kwDOIPDwls5fL-21",
        "number": 13226,
        "title": "Supply format to Ollama",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-10T22:06:07Z",
        "updated_at": "2023-11-17T18:15:04Z",
        "closed_at": "2023-11-17T18:15:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13226",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13226",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13226.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13226.patch",
            "merged_at": null
        },
        "body": "JSON mode: https://github.com/jmorganca/ollama/blob/main/docs/api.md#json-mode",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13226/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13226/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13224",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13224/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13224/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13224/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13224",
        "id": 1988305077,
        "node_id": "I_kwDOIPDwls52gyC1",
        "number": 13224,
        "title": "Warning: model not found. Using cl100k_base encoding. with  Azure Openai and  load_summarize_chain when I am trying to implement map_reduce",
        "user": {
            "login": "GonzaloMoreno",
            "id": 7675634,
            "node_id": "MDQ6VXNlcjc2NzU2MzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7675634?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GonzaloMoreno",
            "html_url": "https://github.com/GonzaloMoreno",
            "followers_url": "https://api.github.com/users/GonzaloMoreno/followers",
            "following_url": "https://api.github.com/users/GonzaloMoreno/following{/other_user}",
            "gists_url": "https://api.github.com/users/GonzaloMoreno/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GonzaloMoreno/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GonzaloMoreno/subscriptions",
            "organizations_url": "https://api.github.com/users/GonzaloMoreno/orgs",
            "repos_url": "https://api.github.com/users/GonzaloMoreno/repos",
            "events_url": "https://api.github.com/users/GonzaloMoreno/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GonzaloMoreno/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-10T20:00:32Z",
        "updated_at": "2023-11-10T20:31:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nHi:  I have tried several strategies to implement  map reduce summarization using Azure OpenAi and Langchain . My model is \"gpt-35-turbo-16k\".\r\n\r\n\r\nI have tried several experiments but always get to the same warning: \r\n\r\nfrom langchain.schema.document import Document\r\nfrom langchain.chains.mapreduce import MapReduceChain\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.document_loaders import TextLoader\r\nllm_summary = AzureChatOpenAI(\r\n            openai_api_base= azure_api_base,\r\n            openai_api_version=azure_openai_api_version,\r\n            deployment_name=azure_deployment_name,\r\n            openai_api_key=azure_openai_api_key,\r\n            openai_api_type= azure_api_type,\r\n            model_name=azure_model_name,\r\n            temperature=azure_model_temperature\r\n            \r\n    )\r\n\r\ntext=\"\"\"The ReduceDocumentsChain handles taking the document mapping results and reducing them into a single output.\\\r\n        It wraps a generic CombineDocumentsChain (like StuffDocumentsChain) but adds the ability to collapse documents before passing it \r\n        to the CombineDocumentsChain if their cumulative size exceeds token_max. In this example, we can actually re-use our chain for combining\r\n        our docs to also collapse our docs.\"\"\"\r\n        \r\ntext1=\"\"\" You can continue with your English studies and never use Inversion in sentences. That\u2019s perfectly okay. However, if you are preparing for a Cambridge or IELTS exam or other exams or situations where you need to demonstrate an extensive use of English, you will be expected to know about Inversion.\r\n\r\nLet\u2019s start with why and when. After all, if you don\u2019t know why we use Inversion, you won\u2019t know when to use it.\r\n\r\nWHY & WHEN do we use INVERSION?\r\nInversion is mainly used for EMPHASIS. The expressions used (never, rarely, no sooner, only then, etc.) have much more impact when used at the beginning of a sentence than the more common pronoun subject, especially as most of  them are negative.\r\nNegatives are more dramatic. Consider negative contractions: don\u2019t, won\u2019t, can\u2019t, haven\u2019t, etc. They usually have strong stress in English whilst positive contractions: I\u2019m, he\u2019ll, she\u2019s, we\u2019ve, I\u2019d, etc. usually have weak stress. \r\n\"\"\"\r\n\r\n\r\n\r\n\r\ndoc= [Document(page_content=text1)]\r\n\r\n\r\nchain = load_summarize_chain(llm_summary, chain_type=\"map_reduce\") #chain_type=\"map_reduce\"\r\n\r\nchain.run(doc)`\r\n\r\n\r\n\r\n\r\nand Strategy 2 with text_splitter: \r\n\r\n`from langchain import PromptTemplate\r\nfrom langchain.chains.summarize import load_summarize_chain\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\n\r\n\r\ntext_splitter = RecursiveCharacterTextSplitter(chunk_size=5000, chunk_overlap=50)\r\nchunks = text_splitter.create_documents([text1])\r\n\r\nchain = load_summarize_chain(\r\n    llm_summary,\r\n    chain_type='map_reduce',\r\n    verbose=False\r\n)\r\nsummary = chain.run(chunks)\r\nsummary\r\n\r\nI always get the same output:\r\n\r\n<img width=\"1473\" alt=\"image\" src=\"https://github.com/langchain-ai/langchain/assets/7675634/fc871a72-4f5f-43ff-9725-52a718ebaeac\">\r\n\r\n\r\nI have some questions:\r\n\r\n1) How to fix this warning?\r\n2) Can I trust in the output when the model is not found? \r\n\r\n\r\n\r\n\r\n### Who can help?\r\n\r\n@agola11\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nrun this chunks of code in any notebook\r\n\r\n### Expected behavior\r\n\r\nI want to fix this warning helping to langchain to find the model.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13224/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13224/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13223",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13223/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13223/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13223/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13223",
        "id": 1988302139,
        "node_id": "PR_kwDOIPDwls5fLYAD",
        "number": 13223,
        "title": "Comprehend moderation: update to default threshold and callback property for prompt safety",
        "user": {
            "login": "nikhilkjha",
            "id": 48101485,
            "node_id": "MDQ6VXNlcjQ4MTAxNDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/48101485?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikhilkjha",
            "html_url": "https://github.com/nikhilkjha",
            "followers_url": "https://api.github.com/users/nikhilkjha/followers",
            "following_url": "https://api.github.com/users/nikhilkjha/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikhilkjha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikhilkjha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikhilkjha/subscriptions",
            "organizations_url": "https://api.github.com/users/nikhilkjha/orgs",
            "repos_url": "https://api.github.com/users/nikhilkjha/repos",
            "events_url": "https://api.github.com/users/nikhilkjha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikhilkjha/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-10T19:57:51Z",
        "updated_at": "2023-11-13T19:06:38Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13223",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13223",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13223.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13223.patch",
            "merged_at": null
        },
        "body": "This PR has following minor updates:\r\n\r\n1. Updated the callback block for `prompt safety`. The callback property name was incorrect.\r\n2. Updated the default threshold for prompt safety from 0.5 to 0.8.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13223/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13223/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13222",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13222/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13222/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13222/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13222",
        "id": 1988290829,
        "node_id": "PR_kwDOIPDwls5fLVaN",
        "number": 13222,
        "title": "Add mongo parent template to index",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-10T19:51:59Z",
        "updated_at": "2023-11-10T19:56:45Z",
        "closed_at": "2023-11-10T19:56:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13222",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13222",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13222.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13222.patch",
            "merged_at": "2023-11-10T19:56:44Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13222/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13222/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13221",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13221/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13221/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13221/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13221",
        "id": 1988288620,
        "node_id": "PR_kwDOIPDwls5fLU6k",
        "number": 13221,
        "title": "fleet_context docs update",
        "user": {
            "login": "adrwz",
            "id": 44193474,
            "node_id": "MDQ6VXNlcjQ0MTkzNDc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/44193474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adrwz",
            "html_url": "https://github.com/adrwz",
            "followers_url": "https://api.github.com/users/adrwz/followers",
            "following_url": "https://api.github.com/users/adrwz/following{/other_user}",
            "gists_url": "https://api.github.com/users/adrwz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adrwz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adrwz/subscriptions",
            "organizations_url": "https://api.github.com/users/adrwz/orgs",
            "repos_url": "https://api.github.com/users/adrwz/repos",
            "events_url": "https://api.github.com/users/adrwz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adrwz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-10T19:50:43Z",
        "updated_at": "2023-11-10T22:53:57Z",
        "closed_at": "2023-11-10T22:53:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13221",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13221",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13221.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13221.patch",
            "merged_at": "2023-11-10T22:53:57Z"
        },
        "body": "\r\n  - **Description:** Changed the fleet_context documentation to use `context.download_embeddings()` from the latest release from our package. More details here: https://github.com/fleet-ai/context/tree/main#api\r\n  - **Issue:** n/a\r\n  - **Dependencies:** n/a\r\n  - **Tag maintainer:** @baskaryan \r\n  - **Twitter handle:** @andrewthezhou\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13221/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13221/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13219",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13219/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13219/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13219/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13219",
        "id": 1988265325,
        "node_id": "PR_kwDOIPDwls5fLPu6",
        "number": 13219,
        "title": "Upgrade cohere embedding model to v3",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-10T19:36:09Z",
        "updated_at": "2023-11-11T00:25:59Z",
        "closed_at": "2023-11-11T00:25:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13219",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13219",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13219.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13219.patch",
            "merged_at": "2023-11-11T00:25:58Z"
        },
        "body": "Just updates API docs, doesn't change default param from 2.0 (could be breaking change)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13219/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13219/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13218",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13218/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13218/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13218/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13218",
        "id": 1988218361,
        "node_id": "I_kwDOIPDwls52gc35",
        "number": 13218,
        "title": "Vector Search on GCP Private Network gives AttributeError: 'MatchingEngineIndexEndpoint' object has no attribute '_public_match_client'",
        "user": {
            "login": "zuojung",
            "id": 21340796,
            "node_id": "MDQ6VXNlcjIxMzQwNzk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/21340796?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zuojung",
            "html_url": "https://github.com/zuojung",
            "followers_url": "https://api.github.com/users/zuojung/followers",
            "following_url": "https://api.github.com/users/zuojung/following{/other_user}",
            "gists_url": "https://api.github.com/users/zuojung/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zuojung/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zuojung/subscriptions",
            "organizations_url": "https://api.github.com/users/zuojung/orgs",
            "repos_url": "https://api.github.com/users/zuojung/repos",
            "events_url": "https://api.github.com/users/zuojung/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zuojung/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-10T19:10:23Z",
        "updated_at": "2023-11-10T19:17:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain                     0.0.332\r\nPython 3.10.12 \r\nPlatform: GCP\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nCode to reproduce the problem:\r\n```\r\nfrom google.cloud import aiplatform\r\nfrom langchain.embeddings import VertexAIEmbeddings\r\nfrom langchain.vectorstores.matching_engine import MatchingEngine\r\n\r\nembeddings = VertexAIEmbeddings()\r\nembeddings\r\n\r\nvector_store = MatchingEngine.from_components(\r\n    index_id=INDEX,\r\n    region=REGION,\r\n    embedding=embeddings,\r\n    project_id=PROJECT_ID,\r\n    endpoint_id=ENDPOINT,\r\n    gcs_bucket_name=DOCS_EMBEDDING)\r\n\r\nvector_store.similarity_search('hello world', k=8)\r\n```\r\n\r\nTraceback:\r\n```Traceback (most recent call last):\r\n  File \"/opt/conda/envs/classifier/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3526, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-13-c6115207e7f5>\", line 1, in <module>\r\n    relevant_documentation = vector_store.similarity_search('hello world', k=8)\r\n  File \"/opt/conda/envs/classifier/lib/python3.10/site-packages/langchain/vectorstores/matching_engine.py\", line 291, in similarity_search\r\n    docs_and_scores = self.similarity_search_with_score(\r\n  File \"/opt/conda/envs/classifier/lib/python3.10/site-packages/langchain/vectorstores/matching_engine.py\", line 202, in similarity_search_with_score\r\n    return self.similarity_search_by_vector_with_score(\r\n  File \"/opt/conda/envs/classifier/lib/python3.10/site-packages/langchain/vectorstores/matching_engine.py\", line 234, in similarity_search_by_vector_with_score\r\n    if self.endpoint._public_match_client:\r\nAttributeError: 'MatchingEngineIndexEndpoint' object has no attribute '_public_match_client'\r\n```\r\n\r\n**Expected Behavior**: \r\nNo Error\r\n\r\n**Analysis**:\r\nThe newest changes in https://github.com/langchain-ai/langchain/pull/10056 added the following to matching engine. [Source](https://github.com/langchain-ai/langchain/blob/869df62736f9084864ab907e7ec5736dd19f05d4/libs/langchain/langchain/vectorstores/matching_engine.py#L234)\r\n\r\n`if self.endpoint._public_match_client:`\r\n\r\nHowever, in GCP's MatchingEngineIndexEndpoint Class, object _public_match_client does not get instantiated until the following check passes. [Source](https://github.com/googleapis/python-aiplatform/blob/fcf05cb6da15c83e91e6ce5f20ab3e6649983685/google/cloud/aiplatform/matching_engine/matching_engine_index_endpoint.py#L132-L133)\r\n\r\n```\r\n        if self.public_endpoint_domain_name:\r\n            self._public_match_client = self._instantiate_public_match_client()\r\n``` \r\n\r\nTherefore I think the if self.endpoint._public_match_client check may be preventing all Private Network users from using vector search with matching Engine. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13218/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13218/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13217",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13217/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13217/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13217/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13217",
        "id": 1988199428,
        "node_id": "PR_kwDOIPDwls5fLA2h",
        "number": 13217,
        "title": "Bagatur/langserve blurb",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-10T18:56:44Z",
        "updated_at": "2023-11-10T19:05:45Z",
        "closed_at": "2023-11-10T19:05:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13217",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13217",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13217.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13217.patch",
            "merged_at": "2023-11-10T19:05:44Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13217/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13217/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13216",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13216/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13216/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13216/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13216",
        "id": 1988191412,
        "node_id": "PR_kwDOIPDwls5fK_CJ",
        "number": 13216,
        "title": "Adding support for amazon personalize Integration",
        "user": {
            "login": "pranava-amzn",
            "id": 119924780,
            "node_id": "U_kgDOByXoLA",
            "avatar_url": "https://avatars.githubusercontent.com/u/119924780?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranava-amzn",
            "html_url": "https://github.com/pranava-amzn",
            "followers_url": "https://api.github.com/users/pranava-amzn/followers",
            "following_url": "https://api.github.com/users/pranava-amzn/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranava-amzn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranava-amzn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranava-amzn/subscriptions",
            "organizations_url": "https://api.github.com/users/pranava-amzn/orgs",
            "repos_url": "https://api.github.com/users/pranava-amzn/repos",
            "events_url": "https://api.github.com/users/pranava-amzn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranava-amzn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 5959659008,
                "node_id": "LA_kwDOIPDwls8AAAABYzkuAA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20aws",
                "name": "integration: aws",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to Amazon Web Services (AWS) integrations"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-11-10T18:51:54Z",
        "updated_at": "2023-12-05T18:48:10Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13216",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13216",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13216.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13216.patch",
            "merged_at": null
        },
        "body": "## Amazon Personalize support on Langchain\r\n\r\nThis PR introduces an integration with [Amazon Personalize](https://aws.amazon.com/personalize/) to help you to retrieve recommendations and use them in your natural language applications. This integration provides two new components:\r\n\r\n\r\n1. An `AmazonPersonalize` client, that provides a wrapper around the Amazon Personalize API.\r\n2. An `AmazonPersonalizeChain`, that provides a chain to pull in recommendations using the client, and then generating the response in natural language. \r\n\r\nHere is some sample code to explain the usage.\r\n\r\n```python\r\nfrom langchain.utilities import AmazonPersonalize\r\nfrom langchain.chains import AmazonPersonalizeChain\r\nfrom langchain.llms.bedrock import Bedrock\r\n\r\nrecommender_arn = \"<insert_arn>\"\r\n\r\nclient=AmazonPersonalize(\r\n    credentials_profile_name=\"default\",\r\n    region_name=\"us-west-2\",\r\n    recommender_arn=recommender_arn\r\n)\r\nbedrock_llm = Bedrock(\r\n    model_id=\"anthropic.claude-v2\", \r\n    region_name=\"us-west-2\"\r\n)\r\n\r\nchain = AmazonPersonalizeChain.from_llm(\r\n    llm=bedrock_llm, \r\n    client=client\r\n)\r\nresponse = chain({'user_id': '1'})\r\n```\r\n\r\n\r\nReviewer: @3coins",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13216/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13216/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13214",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13214/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13214/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13214/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13214",
        "id": 1988103953,
        "node_id": "PR_kwDOIPDwls5fKrdz",
        "number": 13214,
        "title": "vectara rag mq",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-10T18:04:10Z",
        "updated_at": "2023-11-10T18:08:46Z",
        "closed_at": "2023-11-10T18:08:45Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13214",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13214",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13214.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13214.patch",
            "merged_at": "2023-11-10T18:08:45Z"
        },
        "body": "Description: another Vectara template for MultiQuery RAG flow\r\nTwitter handle: @ofermend\r\n\r\nFixes to #13106 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13214/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13214/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13213",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13213/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13213/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13213/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13213",
        "id": 1988083143,
        "node_id": "PR_kwDOIPDwls5fKm2L",
        "number": 13213,
        "title": "update stack diagram",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-10T17:50:20Z",
        "updated_at": "2023-11-11T00:51:45Z",
        "closed_at": "2023-11-11T00:50:20Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13213",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13213",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13213.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13213.patch",
            "merged_at": "2023-11-11T00:50:20Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13213/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13213/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13212",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13212/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13212/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13212/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13212",
        "id": 1988074823,
        "node_id": "PR_kwDOIPDwls5fKlCm",
        "number": 13212,
        "title": "Add token usage tracker module",
        "user": {
            "login": "mrtj",
            "id": 3469711,
            "node_id": "MDQ6VXNlcjM0Njk3MTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3469711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrtj",
            "html_url": "https://github.com/mrtj",
            "followers_url": "https://api.github.com/users/mrtj/followers",
            "following_url": "https://api.github.com/users/mrtj/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrtj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrtj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrtj/subscriptions",
            "organizations_url": "https://api.github.com/users/mrtj/orgs",
            "repos_url": "https://api.github.com/users/mrtj/repos",
            "events_url": "https://api.github.com/users/mrtj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrtj/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 5959659008,
                "node_id": "LA_kwDOIPDwls8AAAABYzkuAA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20aws",
                "name": "integration: aws",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to Amazon Web Services (AWS) integrations"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-10T17:43:13Z",
        "updated_at": "2023-11-20T10:33:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13212",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13212",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13212.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13212.patch",
            "merged_at": null
        },
        "body": "  - **Description:** A new, flexible, extensible token usage tracker module \r\n  - **Dependencies:** only optional dependencies base on the LLM used,\r\n  - **Tag maintainer:** @agola11 @baskaryan @hwchase17 \r\n  - **Twitter handle:** jtolgyesi\r\n\r\nThe highly customizable `token_usage` module  offers to track the number of consumed tokens, measure the latency of the LLM responses, and even estimate the usage cost of your application. You can analyze the token usage of your application directly from the code, or send the usage data to a metrics repository such as Amazon CloudWatch.\r\n\r\nThe `token_usage` module splits the task of collecting the usage metrics from the LLMs via standard Callbacks in the `handlers` submodule, and the processing of the collected metrics in the `reporters` submodule.\r\n\r\nSome LLM APIs (for example, OpenAI) sends you back the number of consumed tokens after each call. Other APIs do not provide such usage information. In this case you can configure a `LocalTokenUsageCallbackHandler` instance to track the token usage directly on client side (your application's code).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13212/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13212/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13211",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13211/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13211/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13211/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13211",
        "id": 1988019456,
        "node_id": "PR_kwDOIPDwls5fKYr1",
        "number": 13211,
        "title": "bump 334",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-10T17:11:36Z",
        "updated_at": "2023-11-10T17:43:30Z",
        "closed_at": "2023-11-10T17:43:30Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13211",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13211",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13211.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13211.patch",
            "merged_at": "2023-11-10T17:43:30Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13211/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13211/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13210",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13210/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13210/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13210/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13210",
        "id": 1988018999,
        "node_id": "PR_kwDOIPDwls5fKYlP",
        "number": 13210,
        "title": "fix: Reduce post-processing time for `DocAIParser`",
        "user": {
            "login": "holtskinner",
            "id": 13262395,
            "node_id": "MDQ6VXNlcjEzMjYyMzk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/13262395?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holtskinner",
            "html_url": "https://github.com/holtskinner",
            "followers_url": "https://api.github.com/users/holtskinner/followers",
            "following_url": "https://api.github.com/users/holtskinner/following{/other_user}",
            "gists_url": "https://api.github.com/users/holtskinner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holtskinner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holtskinner/subscriptions",
            "organizations_url": "https://api.github.com/users/holtskinner/orgs",
            "repos_url": "https://api.github.com/users/holtskinner/repos",
            "events_url": "https://api.github.com/users/holtskinner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holtskinner/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-10T17:11:15Z",
        "updated_at": "2023-11-27T18:47:23Z",
        "closed_at": "2023-11-20T17:41:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13210",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13210",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13210.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13210.patch",
            "merged_at": "2023-11-20T17:41:44Z"
        },
        "body": "- Remove `WrappedDocument` introduced in https://github.com/langchain-ai/langchain/pull/11413\r\n  - https://github.com/googleapis/python-documentai-toolbox/issues/198 in Document AI Toolbox to improve initialization time for `WrappedDocument` object.\r\n\r\n@lkuligin\r\n\r\n@baskaryan\r\n\r\n@hwchase17\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13210/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13210/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13209",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13209/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13209/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13209/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13209",
        "id": 1987985303,
        "node_id": "PR_kwDOIPDwls5fKRIC",
        "number": 13209,
        "title": "Delegate to from_template",
        "user": {
            "login": "msopacua",
            "id": 144725145,
            "node_id": "U_kgDOCKBUmQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/144725145?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/msopacua",
            "html_url": "https://github.com/msopacua",
            "followers_url": "https://api.github.com/users/msopacua/followers",
            "following_url": "https://api.github.com/users/msopacua/following{/other_user}",
            "gists_url": "https://api.github.com/users/msopacua/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/msopacua/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/msopacua/subscriptions",
            "organizations_url": "https://api.github.com/users/msopacua/orgs",
            "repos_url": "https://api.github.com/users/msopacua/repos",
            "events_url": "https://api.github.com/users/msopacua/events{/privacy}",
            "received_events_url": "https://api.github.com/users/msopacua/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-10T16:49:46Z",
        "updated_at": "2023-12-05T04:05:40Z",
        "closed_at": "2023-12-05T04:05:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13209",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13209",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13209.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13209.patch",
            "merged_at": "2023-12-05T04:05:40Z"
        },
        "body": "-**Description:** Delegate from_file to from_template() so that they behave identical. Keep a deprecation in place for `input_variables`.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13209/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13209/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13208",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13208/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13208/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13208/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13208",
        "id": 1987973792,
        "node_id": "PR_kwDOIPDwls5fKOnM",
        "number": 13208,
        "title": "Update",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-10T16:41:53Z",
        "updated_at": "2023-11-12T19:30:36Z",
        "closed_at": "2023-11-12T19:29:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13208",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13208",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13208.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13208.patch",
            "merged_at": "2023-11-12T19:29:25Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13208/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13208/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13207",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13207/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13207/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13207/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13207",
        "id": 1987968887,
        "node_id": "PR_kwDOIPDwls5fKNif",
        "number": 13207,
        "title": "Mask API key for SerpApi.com tools",
        "user": {
            "login": "ilyazub",
            "id": 282605,
            "node_id": "MDQ6VXNlcjI4MjYwNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/282605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ilyazub",
            "html_url": "https://github.com/ilyazub",
            "followers_url": "https://api.github.com/users/ilyazub/followers",
            "following_url": "https://api.github.com/users/ilyazub/following{/other_user}",
            "gists_url": "https://api.github.com/users/ilyazub/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ilyazub/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ilyazub/subscriptions",
            "organizations_url": "https://api.github.com/users/ilyazub/orgs",
            "repos_url": "https://api.github.com/users/ilyazub/repos",
            "events_url": "https://api.github.com/users/ilyazub/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ilyazub/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-10T16:38:23Z",
        "updated_at": "2023-11-10T16:51:05Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13207",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13207",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13207.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13207.patch",
            "merged_at": null
        },
        "body": "* **Description:** Mask API key for SerpApi.com tools.\r\n  * Mask SerpApi API key in `SerpAPIWrapper` and `GoogleScholarAPIWrapper`\r\n  * Use [`SerpApiClient#pagination`](https://github.com/serpapi/google-search-results-python#pagination-using-iterator) in the Google Scholar Search Tool (related to https://github.com/langchain-ai/langchain/issues/11513)\r\n* **Issue:** https://github.com/langchain-ai/langchain/issues/12165\r\n* **Tag maintainer:** @eyurtsev\r\n\r\n@keenborder786, please review the changes in `GoogleScholarAPIWrapper`.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13207/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13207/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13205",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13205/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13205/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13205/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13205",
        "id": 1987928368,
        "node_id": "PR_kwDOIPDwls5fKEjE",
        "number": 13205,
        "title": "Update README.md - Added notebook for extraction_openai_tools ",
        "user": {
            "login": "shauryr",
            "id": 12604876,
            "node_id": "MDQ6VXNlcjEyNjA0ODc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/12604876?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shauryr",
            "html_url": "https://github.com/shauryr",
            "followers_url": "https://api.github.com/users/shauryr/followers",
            "following_url": "https://api.github.com/users/shauryr/following{/other_user}",
            "gists_url": "https://api.github.com/users/shauryr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shauryr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shauryr/subscriptions",
            "organizations_url": "https://api.github.com/users/shauryr/orgs",
            "repos_url": "https://api.github.com/users/shauryr/repos",
            "events_url": "https://api.github.com/users/shauryr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shauryr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-10T16:14:19Z",
        "updated_at": "2023-11-13T08:12:47Z",
        "closed_at": "2023-11-13T08:12:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13205",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13205",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13205.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13205.patch",
            "merged_at": "2023-11-13T08:12:47Z"
        },
        "body": "added Parallel Function Calling for Structured Data Extraction notebook\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13205/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13205/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13204",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13204/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13204/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13204/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13204",
        "id": 1987788713,
        "node_id": "I_kwDOIPDwls52ez-p",
        "number": 13204,
        "title": "NameError: name '_httpx_client' is not defined",
        "user": {
            "login": "gregbird101",
            "id": 15308172,
            "node_id": "MDQ6VXNlcjE1MzA4MTcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/15308172?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gregbird101",
            "html_url": "https://github.com/gregbird101",
            "followers_url": "https://api.github.com/users/gregbird101/followers",
            "following_url": "https://api.github.com/users/gregbird101/following{/other_user}",
            "gists_url": "https://api.github.com/users/gregbird101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gregbird101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gregbird101/subscriptions",
            "organizations_url": "https://api.github.com/users/gregbird101/orgs",
            "repos_url": "https://api.github.com/users/gregbird101/repos",
            "events_url": "https://api.github.com/users/gregbird101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gregbird101/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-10T14:58:08Z",
        "updated_at": "2023-11-10T16:53:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHello All,\r\n\r\nI have just installed the helm chart with some small additions to the basic values.yaml and the \"langchain-langsmith-backend\" contain keeps breaking with the following error, Has anyone had this before?\r\nINFO: Started server process [1]\r\n--\r\nFri, Nov 10 2023 2:41:24 pm | INFO: Waiting for application startup.\r\nFri, Nov 10 2023 2:41:24 pm | INFO: Application startup complete.\r\nFri, Nov 10 2023 2:41:24 pm | INFO: Uvicorn running on http://0.0.0.0:1984 (Press CTRL+C to quit)\r\nFri, Nov 10 2023 2:42:18 pm | INFO: Shutting down\r\nFri, Nov 10 2023 2:42:18 pm | INFO: Waiting for application shutdown.\r\nFri, Nov 10 2023 2:42:19 pm | ERROR:root:Error closing httpx client for clickhouse name '_httpx_client' is not defined\r\nFri, Nov 10 2023 2:42:19 pm | Traceback (most recent call last):\r\nFri, Nov 10 2023 2:42:19 pm | File \"/code/smith-backend/app/main.py\", line 140, in shutdown_event\r\nFri, Nov 10 2023 2:42:19 pm | File \"/code/lc_database/lc_database/clickhouse.py\", line 36, in close_clickhouse_client\r\nFri, Nov 10 2023 2:42:19 pm | await _httpx_client.aclose()\r\nFri, Nov 10 2023 2:42:19 pm | ^^^^^^^^^^^^^\r\nFri, Nov 10 2023 2:42:19 pm | NameError: name '_httpx_client' is not defined\r\nFri, Nov 10 2023 2:42:19 pm | INFO: Application shutdown complete.\r\nFri, Nov 10 2023 2:42:19 pm | INFO: Finished server process [1]\r\n\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nhelm repo add langchain https://langchain-ai.github.io/helm/\r\nhelm install langchain/langsmith . --values values.yaml --namespace it-dev-langchain\r\n\r\nRunning this on an on prem Rancher cluster.\n\n### Expected behavior\n\nThe contain runs normally.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13204/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13204/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13203",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13203/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13203/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13203/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13203",
        "id": 1987785903,
        "node_id": "PR_kwDOIPDwls5fJlIg",
        "number": 13203,
        "title": "Fix #11737 issue (extra_tools option of create_pandas_dataframe_agent is not working)",
        "user": {
            "login": "eunhye1kim",
            "id": 2021971,
            "node_id": "MDQ6VXNlcjIwMjE5NzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2021971?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eunhye1kim",
            "html_url": "https://github.com/eunhye1kim",
            "followers_url": "https://api.github.com/users/eunhye1kim/followers",
            "following_url": "https://api.github.com/users/eunhye1kim/following{/other_user}",
            "gists_url": "https://api.github.com/users/eunhye1kim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eunhye1kim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eunhye1kim/subscriptions",
            "organizations_url": "https://api.github.com/users/eunhye1kim/orgs",
            "repos_url": "https://api.github.com/users/eunhye1kim/repos",
            "events_url": "https://api.github.com/users/eunhye1kim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eunhye1kim/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-10T14:56:24Z",
        "updated_at": "2023-12-05T04:54:08Z",
        "closed_at": "2023-12-05T04:54:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13203",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13203",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13203.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13203.patch",
            "merged_at": "2023-12-05T04:54:08Z"
        },
        "body": "  - **Description:** Fix #11737 issue (extra_tools option of create_pandas_dataframe_agent is not working), \r\n  - **Issue:** #11737 ,\r\n  - **Dependencies:** no,\r\n  - **Tag maintainer:** @baskaryan, @eyurtsev, @hwchase17 I needed this method at work, so I modified it myself and used it. There is a similar issue(#11737) and PR(#13018) of @PyroGenesis, so I combined my code at the original PR. \r\n  You may be busy, but it would be great help for me if you checked. Thank you.\r\n  - **Twitter handle:** @lunara_x \r\n\r\nIf you need an .ipynb example about this, please tag me. \r\nI will share what I am working on after removing any work-related content.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13203/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13203/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13202",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13202/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13202/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13202/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13202",
        "id": 1987762764,
        "node_id": "I_kwDOIPDwls52etpM",
        "number": 13202,
        "title": "Inconsistent output format of ChatVertexAI compared to ChatOpenAI",
        "user": {
            "login": "smttsp",
            "id": 4594945,
            "node_id": "MDQ6VXNlcjQ1OTQ5NDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4594945?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smttsp",
            "html_url": "https://github.com/smttsp",
            "followers_url": "https://api.github.com/users/smttsp/followers",
            "following_url": "https://api.github.com/users/smttsp/following{/other_user}",
            "gists_url": "https://api.github.com/users/smttsp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smttsp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smttsp/subscriptions",
            "organizations_url": "https://api.github.com/users/smttsp/orgs",
            "repos_url": "https://api.github.com/users/smttsp/repos",
            "events_url": "https://api.github.com/users/smttsp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smttsp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-10T14:42:40Z",
        "updated_at": "2023-11-10T14:45:38Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nI tried to use `ChatVertexAI` as a replacement for `ChatOpenAI` as the latter is quite slow these days. \r\n\r\nI have this code for Chat OpenAI\r\n\r\n```\r\ntemplate_string = \"\"\" # some explanation\r\ngive me suggestions in JSON format where the suggestions are a list of dictionaries with the following keys:        \r\n      - before:\r\n      - after:\r\n      - reason:\r\n\"\"\"\r\n\r\nchat = ChatOpenAI(\r\n    temperature=0.0,\r\n    openai_api_key=self.session_info.openai_api_key,\r\n    model=llm_model,\r\n)\r\n\r\nprompt_template = ChatPromptTemplate.from_template(template_string)\r\n\r\nservice_messages = prompt_template.format_messages(\r\n    text=self.text\r\n)\r\nresponse = chat(service_messages)\r\ninfo = json.loads(response.content)\r\n```\r\n\r\nThen I print `response.content`, here is the format as expected:\r\n\r\n```\r\n[{\"before\": ..., \"after\": ...}, ...]\r\n```\r\n\r\nThen I use `ChatVertexAI` with the same `template_string`\r\n\r\n```\r\nchat = ChatVertexAI(\r\n    temperature=0.0,\r\n    google_api_key=google_api_key,\r\n    model=\"codechat-bison\",\r\n    max_output_tokens=2048,\r\n)\r\n\r\nprompt_template = ChatPromptTemplate.from_template(template_string)\r\n\r\nservice_messages = prompt_template.format_messages(\r\n    text=self.text\r\n)\r\nresponse = chat(service_messages)\r\n```\r\n\r\nI print the `response.content` coming from Vertex AI and the output format is encapsulated by \r\n```(3 backticks)JSON [{...}] (3 backticks)```. To make `response.content` the same, I used the following code\r\n\r\n```\r\njson_match = re.search(r'```JSON(.*?)\\n```', response.content, re.DOTALL)\r\n\r\nif json_match:\r\n    json_data = json_match.group(1).strip()\r\n    info = json.loads(json_data)\r\nelse:\r\n    info = {}\r\n    print(\"No JSON data found in the input string.\")\r\n```\r\n\r\nI am not sure of the potential failures of this solution, but unless this is intentional, it might be better to make it consistent. \r\n\r\nI will try to use the other LLMs and see how others work.\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [X] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nI shared my codes above, but the steps are:\r\n\r\n1. setting up openai_api_key\r\n2. setting up gcp environment\r\n3. running ChatOpenAI\r\n4. running ChatVertexAI\r\n5. comparing the responses (i.e. `response.content`)\r\n\r\n### Expected behavior\r\n\r\nMy expectation is to obtain the outputs of different models the same way. i.e., `json.loads` should output a list of dictionary in each case. Users should not have to deal with `regex` to obtain the data in the expected format.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13202/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13202/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13201",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13201/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13201/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13201/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13201",
        "id": 1987751503,
        "node_id": "PR_kwDOIPDwls5fJdj-",
        "number": 13201,
        "title": "dalle add model parameter",
        "user": {
            "login": "AzeWZ",
            "id": 9207920,
            "node_id": "MDQ6VXNlcjkyMDc5MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9207920?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AzeWZ",
            "html_url": "https://github.com/AzeWZ",
            "followers_url": "https://api.github.com/users/AzeWZ/followers",
            "following_url": "https://api.github.com/users/AzeWZ/following{/other_user}",
            "gists_url": "https://api.github.com/users/AzeWZ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AzeWZ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AzeWZ/subscriptions",
            "organizations_url": "https://api.github.com/users/AzeWZ/orgs",
            "repos_url": "https://api.github.com/users/AzeWZ/repos",
            "events_url": "https://api.github.com/users/AzeWZ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AzeWZ/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-10T14:36:10Z",
        "updated_at": "2023-11-13T08:09:21Z",
        "closed_at": "2023-11-13T08:09:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13201",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13201",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13201.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13201.patch",
            "merged_at": "2023-11-13T08:09:20Z"
        },
        "body": "\r\n  - **Description:** dalle_image_generator adding a new model parameter,\r\n  - **Issue:** N/A,\r\n  - **Dependencies:** \r\n  - **Tag maintainer: @hwchase17\r\n  - **Twitter handle:** \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13201/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13201/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13200",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13200/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13200/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13200/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13200",
        "id": 1987751284,
        "node_id": "PR_kwDOIPDwls5fJdhA",
        "number": 13200,
        "title": "Adds an in-memory implementation of RecordManager",
        "user": {
            "login": "pprados",
            "id": 204694,
            "node_id": "MDQ6VXNlcjIwNDY5NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/204694?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pprados",
            "html_url": "https://github.com/pprados",
            "followers_url": "https://api.github.com/users/pprados/followers",
            "following_url": "https://api.github.com/users/pprados/following{/other_user}",
            "gists_url": "https://api.github.com/users/pprados/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pprados/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pprados/subscriptions",
            "organizations_url": "https://api.github.com/users/pprados/orgs",
            "repos_url": "https://api.github.com/users/pprados/repos",
            "events_url": "https://api.github.com/users/pprados/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pprados/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-10T14:36:01Z",
        "updated_at": "2023-12-06T09:08:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13200",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13200",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13200.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13200.patch",
            "merged_at": null
        },
        "body": "**Description:**\r\nlangchain offers three technologies to save data:\r\n- [vectorstore](https://python.langchain.com/docs/modules/data_connection/vectorstores/)\r\n- [docstore](https://js.langchain.com/docs/api/schema/classes/Docstore)\r\n- [record manager](https://python.langchain.com/docs/modules/data_connection/indexing)\r\n\r\nIf you want to combine these technologies in a sample persistence stategy you need a common implementation for each. `DocStore` propose `InMemoryDocstore`. \r\n\r\nWe propose the class `MemoryRecordManager` to complete the system.\r\n\r\nThis is the prelude to another full-request, which needs a consistent combination of persistence components.\r\n\r\n**Tag maintainer:**\r\n@baskaryan\r\n\r\n**Twitter handle:**\r\n@pprados\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13200/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13200/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13199",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13199/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13199/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13199/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13199",
        "id": 1987735492,
        "node_id": "I_kwDOIPDwls52em_E",
        "number": 13199,
        "title": "More than 800 errors detected with the latest version of mypy",
        "user": {
            "login": "pprados",
            "id": 204694,
            "node_id": "MDQ6VXNlcjIwNDY5NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/204694?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pprados",
            "html_url": "https://github.com/pprados",
            "followers_url": "https://api.github.com/users/pprados/followers",
            "following_url": "https://api.github.com/users/pprados/following{/other_user}",
            "gists_url": "https://api.github.com/users/pprados/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pprados/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pprados/subscriptions",
            "organizations_url": "https://api.github.com/users/pprados/orgs",
            "repos_url": "https://api.github.com/users/pprados/repos",
            "events_url": "https://api.github.com/users/pprados/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pprados/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-10T14:26:34Z",
        "updated_at": "2023-11-11T08:43:03Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain 0.0.333\r\n\n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [X] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [X] Output Parsers\n- [X] Document Loaders\n- [X] Vector Stores / Retrievers\n- [X] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [X] Chains\n- [X] Callbacks/Tracing\n- [X] Async\n\n### Reproduction\n\nThe current mypy crash with  `make lint` and propose to install the last master version.\r\nSo, after a `git clone` and `poetry install --with dev,test,lint`, run\r\n\r\n```bash\r\npip install git+https://github.com/python/mypy.git\r\nmake lint\r\n```\r\n**Mypy found 834 errors in 238 files**\n\n### Expected behavior\n\n0 errors",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13199/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13199/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13197",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13197/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13197/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13197/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13197",
        "id": 1987672041,
        "node_id": "I_kwDOIPDwls52eXfp",
        "number": 13197,
        "title": "MlflowAIGatewayEmbeddings : Default Batch size incompatible with Azure OpenAI text-embedding-ada-002",
        "user": {
            "login": "coltonpeltier-db",
            "id": 111309923,
            "node_id": "U_kgDOBqJ0Yw",
            "avatar_url": "https://avatars.githubusercontent.com/u/111309923?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coltonpeltier-db",
            "html_url": "https://github.com/coltonpeltier-db",
            "followers_url": "https://api.github.com/users/coltonpeltier-db/followers",
            "following_url": "https://api.github.com/users/coltonpeltier-db/following{/other_user}",
            "gists_url": "https://api.github.com/users/coltonpeltier-db/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/coltonpeltier-db/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/coltonpeltier-db/subscriptions",
            "organizations_url": "https://api.github.com/users/coltonpeltier-db/orgs",
            "repos_url": "https://api.github.com/users/coltonpeltier-db/repos",
            "events_url": "https://api.github.com/users/coltonpeltier-db/events{/privacy}",
            "received_events_url": "https://api.github.com/users/coltonpeltier-db/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-10T13:52:34Z",
        "updated_at": "2023-11-10T14:40:38Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nThe text-embedding-ada-002 OpenAI embedding model on Azure OpenAI has a maximum batch size of 16. MlflowAIGatewayEmbeddings has a hard-coded batch size of 20 which results in it being unusable with Azure OpenAI's text-embedding-ada-002.\r\n\r\nThe best fix would be to allow a configurable batchsize as an argument to MlflowAIGatewayEmbeddings,\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Create a gateway route to the text-embedding-ada-002 on azure openai\r\n```\r\nROUTE_NAME = \"azure-ada-002\"\r\n\r\n# Try to delete the route if it already exists\r\ntry:\r\n    delete_route(ROUTE_NAME)\r\n    print(\"Route deleted\")\r\nexcept:\r\n    print(\"Route does not exist, creating..\")\r\n\r\ncreate_route(\r\n    name=ROUTE_NAME,\r\n    route_type=\"llm/v1/embeddings\",\r\n    model = {\r\n        \"name\" : \"text-embedding-ada-002\",\r\n        \"provider\" : \"openai\",\r\n        \"openai_config\" : {\r\n            \"openai_api_type\" : azure_openai_type,\r\n            \"openai_api_key\": azure_openai_key,\r\n            \"openai_deployment_name\": \"ada-embed-v1\",\r\n            \"openai_api_base\": azure_openai_base,\r\n            \"openai_api_version\": \"2023-05-15\"\r\n        }\r\n    }\r\n)\r\n```\r\n2.  Initialize the `MlflowAIGatewayEmbeddings` and try to embed more than 16 documents\r\n```\r\nfrom langchain.embeddings import MlflowAIGatewayEmbeddings\r\nimport pandas as pd\r\n\r\nazure_ada = MlflowAIGatewayEmbeddings(route=\"azure-ada-002\")\r\n\r\ntest_strings = [\r\n    \"aaaa\" for i in range(20)\r\n]\r\nazure_ada.embed_documents(test_strings)\r\n```\r\n3. Observe the error\r\n```\r\nHTTPError: 400 Client Error: Bad Request for url: https://ohio.cloud.databricks.com/gateway/azure-ada-002/invocations. Response text: {\r\n  \"error\": {\r\n    \"message\": \"Too many inputs. The max number of inputs is 16.  We hope to increase the number of inputs per request soon. Please contact us through an Azure support request at: https://go.microsoft.com/fwlink/?linkid=2213926 for further questions.\",\r\n    \"type\": \"invalid_request_error\",\r\n    \"param\": null,\r\n    \"code\": null\r\n  }\r\n}\r\n```\n\n### Expected behavior\n\nI should be able to use the `MlflowAIGatewayEmbeddings` class with Azure OpenAI.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13197/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13197/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13196",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13196/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13196/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13196/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13196",
        "id": 1987564233,
        "node_id": "I_kwDOIPDwls52d9LJ",
        "number": 13196,
        "title": "langchain Retrieval",
        "user": {
            "login": "4entertainment",
            "id": 58992739,
            "node_id": "MDQ6VXNlcjU4OTkyNzM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/58992739?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/4entertainment",
            "html_url": "https://github.com/4entertainment",
            "followers_url": "https://api.github.com/users/4entertainment/followers",
            "following_url": "https://api.github.com/users/4entertainment/following{/other_user}",
            "gists_url": "https://api.github.com/users/4entertainment/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/4entertainment/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/4entertainment/subscriptions",
            "organizations_url": "https://api.github.com/users/4entertainment/orgs",
            "repos_url": "https://api.github.com/users/4entertainment/repos",
            "events_url": "https://api.github.com/users/4entertainment/events{/privacy}",
            "received_events_url": "https://api.github.com/users/4entertainment/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-10T12:47:23Z",
        "updated_at": "2023-11-16T05:15:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\ni have the following code:\r\n\r\n```\r\n# import\r\nfrom langchain.embeddings.sentence_transformer import SentenceTransformerEmbeddings\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.document_loaders import TextLoader\r\nfrom silly import no_ssl_verification\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\n\r\nwith no_ssl_verification():\r\n    # load the document and split it into chunks\r\n    loader = TextLoader(\"state_of_the_union.txt\")\r\n    documents = loader.load()\r\n\r\n    # split it into chunks\r\n    text_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\n    docs = text_splitter.split_documents(documents)\r\n\r\n    # create the open-source embedding function\r\n    embedding_function = SentenceTransformerEmbeddings(model_name=\"all-MiniLM-L6-v2\")\r\n    # hfemb = HuggingFaceEmbeddings()\r\n    # load it into Chroma\r\n    db = Chroma.from_documents(docs, embedding_function)\r\n\r\n    # query it\r\n    query = \"What did the president say about Ketanji Brown Jackson\"\r\n    docs = db.similarity_search(query)\r\n\r\n    # print results\r\n    print(docs[0].page_content)\r\n```\r\ni must use retrieval mechanism. and i am using Turkish language data. please change my code \r\n\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13196/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13196/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13195",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13195/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13195/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13195/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13195",
        "id": 1987527709,
        "node_id": "I_kwDOIPDwls52d0Qd",
        "number": 13195,
        "title": "Example for chat chain with documents retrieval and history capability ",
        "user": {
            "login": "afedotov-align",
            "id": 91598042,
            "node_id": "U_kgDOBXWs2g",
            "avatar_url": "https://avatars.githubusercontent.com/u/91598042?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/afedotov-align",
            "html_url": "https://github.com/afedotov-align",
            "followers_url": "https://api.github.com/users/afedotov-align/followers",
            "following_url": "https://api.github.com/users/afedotov-align/following{/other_user}",
            "gists_url": "https://api.github.com/users/afedotov-align/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/afedotov-align/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/afedotov-align/subscriptions",
            "organizations_url": "https://api.github.com/users/afedotov-align/orgs",
            "repos_url": "https://api.github.com/users/afedotov-align/repos",
            "events_url": "https://api.github.com/users/afedotov-align/events{/privacy}",
            "received_events_url": "https://api.github.com/users/afedotov-align/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-10T12:23:44Z",
        "updated_at": "2023-11-10T12:34:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLatest langchain, Mac\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nHi Community,\r\n\r\nI'm trying to build a chain with Chroma database as context, AzureOpenAI embeddings and AzureOpenAI GPT model.\r\n\r\nThe following libs work fine for me and doing their work\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.chat_models import AzureChatOpenAI\r\n\r\nBut I can't figure out how to build the chain itself and what kind of chain I should use.\r\nCould you kindly provide any suggestions?\r\n\r\nThanks, Artem.\n\n### Expected behavior\n\nDesired behaviour: \r\n- user asks question\r\n- code searches it in Chroma using AzureOpenAI embeddings to transform text\r\n- In prompt for AzureOpenAI GPT there is context with info retrieved from Chroma and current chat history with Human/AI questions and answers\r\n- Also there should be a custom prompt template used\r\n- Also I want to wrap it in Flask server, so users chat history could be stored in session with username as key until it's forcibly cleared",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13195/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13195/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13194",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13194/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13194/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13194/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13194",
        "id": 1987527490,
        "node_id": "I_kwDOIPDwls52d0NC",
        "number": 13194,
        "title": "The Agent is not using Custom Tools.",
        "user": {
            "login": "baonhat1802",
            "id": 74585577,
            "node_id": "MDQ6VXNlcjc0NTg1NTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/74585577?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baonhat1802",
            "html_url": "https://github.com/baonhat1802",
            "followers_url": "https://api.github.com/users/baonhat1802/followers",
            "following_url": "https://api.github.com/users/baonhat1802/following{/other_user}",
            "gists_url": "https://api.github.com/users/baonhat1802/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baonhat1802/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baonhat1802/subscriptions",
            "organizations_url": "https://api.github.com/users/baonhat1802/orgs",
            "repos_url": "https://api.github.com/users/baonhat1802/repos",
            "events_url": "https://api.github.com/users/baonhat1802/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baonhat1802/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-11-10T12:23:33Z",
        "updated_at": "2023-11-17T14:19:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nI just updated langchain to newest version and my Agent is not working anymore. \r\n\r\nTool structure : \r\n\r\n ```\r\nclass Data_Retriever(BaseModel):\r\n    db : Any\r\n   \r\n    class Config:\r\n        extra = Extra.forbid\r\n\r\n    def run(self,request) -> str:\r\n        data = self.db.get(request)\r\n        return data\r\n```\r\n\r\nWhen Agent uses the above tool, it will always stop at \"Action Input\" step : \r\n\r\n```\r\n> Entering new AgentExecutor chain...\r\n\r\nAI: Thought: Do I need to use a tool? Yes\r\nAction: Data_Retriever\r\nAction Input: DATA \r\n\r\n> Finished chain.\r\n``` \r\n\r\nDoes anyone know how to fix this ? I'm using langchain==0.0.332\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [X] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```from langchain.tools import BaseTool, StructuredTool, Tool, tool\r\nfrom langchain.agents import AgentType, initialize_agent,load_tools\r\n\r\ntools = [\r\n        Tool(\r\n        name=\"Music Search\",\r\n        func=lambda x: \"'All I Want For Christmas Is You' by Mariah Carey.\", # Mock Function\r\n        description=\"A Music search engine. Use this more than the normal search if the question is about Music, like 'who is the singer of yesterday?' or 'what is the most popular song in 2022?'\",\r\n        ),\r\n        ]\r\n\r\nagent = initialize_agent(\r\n            agent=AgentType.CONVERSATIONAL_REACT_DESCRIPTION, \r\n            tools=tools, \r\n            llm=llm, \r\n            verbose=True)\r\n\r\nagent.run(input = \"Random song\")\r\n```\r\n### Expected behavior\r\n\r\nThe output should be All I Want For Christmas Is You' by Mariah Carey.\r\n\r\n\r\nMy agent stopped once it hit the action input step.\r\n\r\n> Entering new AgentExecutor chain...\r\nAI: Thought: Do I need to use a tool? Yes\r\nAction: Music Search\r\nAction Input: \"Random song\"\r\n\r\n\r\n> Finished chain.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13194/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13194/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13193",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13193/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13193/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13193/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13193",
        "id": 1987471005,
        "node_id": "PR_kwDOIPDwls5fIgDz",
        "number": 13193,
        "title": "Templates/rag lancedb",
        "user": {
            "login": "akashAD98",
            "id": 62583018,
            "node_id": "MDQ6VXNlcjYyNTgzMDE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/62583018?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akashAD98",
            "html_url": "https://github.com/akashAD98",
            "followers_url": "https://api.github.com/users/akashAD98/followers",
            "following_url": "https://api.github.com/users/akashAD98/following{/other_user}",
            "gists_url": "https://api.github.com/users/akashAD98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akashAD98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akashAD98/subscriptions",
            "organizations_url": "https://api.github.com/users/akashAD98/orgs",
            "repos_url": "https://api.github.com/users/akashAD98/repos",
            "events_url": "https://api.github.com/users/akashAD98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akashAD98/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6154420538,
                "node_id": "LA_kwDOIPDwls8AAAABbtUBOg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/template",
                "name": "template",
                "color": "145FB1",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-11-10T11:45:58Z",
        "updated_at": "2023-11-15T14:11:17Z",
        "closed_at": "2023-11-11T00:50:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13193",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13193",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13193.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13193.patch",
            "merged_at": null
        },
        "body": "added template code for lancedb ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13193/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13193/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]