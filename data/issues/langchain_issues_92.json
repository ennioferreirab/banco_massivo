[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4761",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4761/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4761/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4761/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4761",
        "id": 1711167457,
        "node_id": "PR_kwDOIPDwls5QkgQO",
        "number": 4761,
        "title": "[nit] Simplify Spark Creation Validation Check A Little Bit",
        "user": {
            "login": "skcoirz",
            "id": 62768671,
            "node_id": "MDQ6VXNlcjYyNzY4Njcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/62768671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skcoirz",
            "html_url": "https://github.com/skcoirz",
            "followers_url": "https://api.github.com/users/skcoirz/followers",
            "following_url": "https://api.github.com/users/skcoirz/following{/other_user}",
            "gists_url": "https://api.github.com/users/skcoirz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skcoirz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skcoirz/subscriptions",
            "organizations_url": "https://api.github.com/users/skcoirz/orgs",
            "repos_url": "https://api.github.com/users/skcoirz/repos",
            "events_url": "https://api.github.com/users/skcoirz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skcoirz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T03:37:01Z",
        "updated_at": "2023-05-19T01:57:55Z",
        "closed_at": "2023-05-19T01:57:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4761",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4761",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4761.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4761.patch",
            "merged_at": "2023-05-19T01:57:54Z"
        },
        "body": "- simplify the validation check a little bit.\r\n- re-tested in jupyter notebook.\r\n\r\nReviewer: @hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4761/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4761/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4760",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4760/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4760/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4760/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4760",
        "id": 1711078576,
        "node_id": "PR_kwDOIPDwls5QkNXB",
        "number": 4760,
        "title": "Update Tracing Walkthrough",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T01:48:26Z",
        "updated_at": "2023-05-16T13:26:44Z",
        "closed_at": "2023-05-16T13:26:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4760",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4760",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4760.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4760.patch",
            "merged_at": "2023-05-16T13:26:43Z"
        },
        "body": "Add client methods to read / list runs and sessions.\r\n\r\nUpdate walkthrough to:\r\n- Let the user create a dataset from the runs without going to the UI\r\n- Use the new CLI command to start the server",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4760/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4760/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4759",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4759/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4759/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4759/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4759",
        "id": 1711067591,
        "node_id": "I_kwDOIPDwls5l_NHH",
        "number": 4759,
        "title": "\u5982\u4f55\u4fee\u6539langchain\u5305\u9ed8\u8ba4\u8bbf\u95eeapi.openai.com\u8bf7\u6c42\u5730\u5740\uff0c\u6211\u9700\u8981\u901a\u8fc7\u4ee3\u7406\u8bbf\u95eeapi.openai.com ",
        "user": {
            "login": "liuyang77886",
            "id": 11556791,
            "node_id": "MDQ6VXNlcjExNTU2Nzkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/11556791?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liuyang77886",
            "html_url": "https://github.com/liuyang77886",
            "followers_url": "https://api.github.com/users/liuyang77886/followers",
            "following_url": "https://api.github.com/users/liuyang77886/following{/other_user}",
            "gists_url": "https://api.github.com/users/liuyang77886/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liuyang77886/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liuyang77886/subscriptions",
            "organizations_url": "https://api.github.com/users/liuyang77886/orgs",
            "repos_url": "https://api.github.com/users/liuyang77886/repos",
            "events_url": "https://api.github.com/users/liuyang77886/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liuyang77886/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-16T01:32:10Z",
        "updated_at": "2023-12-06T17:46:15Z",
        "closed_at": "2023-12-06T17:46:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\n\u672c\u5730\u5c40\u57df\u7f51\u7f51\u7edc\u53d7\u9650\uff0c\u9700\u8981\u901a\u8fc7\u53cd\u5411\u4ee3\u7406\u8bbf\u95eeapi.openai.com\u5730\u5740\uff0c\u8bf7\u95ee\u5982\u4f55\u4fee\u6539langchain\u5305\u8bbf\u95eechatgpt\u7684\u5730\u5740\u4e3a\u6211\u7684\u4ee3\u7406\u5730\u5740\n\n### Motivation\n\n\u672c\u5730\u5c40\u57df\u7f51\u7f51\u7edc\u53d7\u9650\uff0c\u9700\u8981\u901a\u8fc7\u53cd\u5411\u4ee3\u7406\u8bbf\u95eeapi.openai.com\u5730\u5740\uff0c\u8bf7\u95ee\u5982\u4f55\u4fee\u6539langchain\u5305\u8bbf\u95eechatgpt\u7684\u5730\u5740\u4e3a\u6211\u7684\u4ee3\u7406\u5730\u5740\n\n### Your contribution\n\n\u6211\u4f7f\u7528\u7684\u9879\u76ee\u662fgpt4-pdf-chatbot-langchain",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4759/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4759/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4758",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4758/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4758/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4758/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4758",
        "id": 1711061467,
        "node_id": "PR_kwDOIPDwls5QkJ2s",
        "number": 4758,
        "title": "Adds check for `docker-compose` vs `docker compose`",
        "user": {
            "login": "EvanOman",
            "id": 1807879,
            "node_id": "MDQ6VXNlcjE4MDc4Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1807879?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EvanOman",
            "html_url": "https://github.com/EvanOman",
            "followers_url": "https://api.github.com/users/EvanOman/followers",
            "following_url": "https://api.github.com/users/EvanOman/following{/other_user}",
            "gists_url": "https://api.github.com/users/EvanOman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EvanOman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EvanOman/subscriptions",
            "organizations_url": "https://api.github.com/users/EvanOman/orgs",
            "repos_url": "https://api.github.com/users/EvanOman/repos",
            "events_url": "https://api.github.com/users/EvanOman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EvanOman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-16T01:24:06Z",
        "updated_at": "2023-05-31T09:23:00Z",
        "closed_at": "2023-05-16T06:11:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4758",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4758",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4758.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4758.patch",
            "merged_at": null
        },
        "body": "# Adds check for `docker-compose` vs `docker compose`\r\n\r\n`server.py` now checks for `docker compose` and falls back to `docker-compose` (also prints explanatory message if both are missing_\r\n\r\nFixes #935 \r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested: @agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4758/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4758/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4757",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4757/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4757/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4757/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4757",
        "id": 1711055714,
        "node_id": "I_kwDOIPDwls5l_KNi",
        "number": 4757,
        "title": "Have resolved\uff1aGPTcache :[Errno 63] File name too long: \"similar_cache_[('_type', 'openai'), ('best_of', 2), ('frequency_penalty', 0), ('logit_bias', {}), ('max_tokens', 256), ('model_name', 'text-davinci-002'), ('n', 2), ('presence_penalty', 0), ('request_timeout', None), ('stop', None), ('temperature', 0.7), ('top_p', 1)]",
        "user": {
            "login": "shuyhere",
            "id": 109142402,
            "node_id": "U_kgDOBoFhgg",
            "avatar_url": "https://avatars.githubusercontent.com/u/109142402?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shuyhere",
            "html_url": "https://github.com/shuyhere",
            "followers_url": "https://api.github.com/users/shuyhere/followers",
            "following_url": "https://api.github.com/users/shuyhere/following{/other_user}",
            "gists_url": "https://api.github.com/users/shuyhere/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shuyhere/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shuyhere/subscriptions",
            "organizations_url": "https://api.github.com/users/shuyhere/orgs",
            "repos_url": "https://api.github.com/users/shuyhere/repos",
            "events_url": "https://api.github.com/users/shuyhere/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shuyhere/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-16T01:14:21Z",
        "updated_at": "2023-05-19T23:35:38Z",
        "closed_at": "2023-05-19T23:35:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain=0.017 python=3.9.16 \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [X] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [X] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\n\r\nfrom gptcache import Cache\r\nfrom gptcache.manager.factory import manager_factory\r\nfrom gptcache.processor.pre import get_prompt\r\nfrom langchain.cache import GPTCache\r\nimport hashlib\r\n\r\n# Avoid multiple caches using the same file, causing different llm model caches to affect each other\r\n\r\ndef get_hashed_name(name):\r\n    return hashlib.sha256(name.encode()).hexdigest()\r\n\r\ndef init_gptcache(cache_obj: Cache, llm: str):\r\n    hashed_llm = get_hashed_name(llm)\r\n    cache_obj.init(\r\n        pre_embedding_func=get_prompt,\r\n        data_manager=manager_factory(manager=\"map\", data_dir=f\"map_cache_{hashed_llm}\"),\r\n    )\r\n\r\nlangchain.llm_cache = GPTCache(init_gptcache)\r\n\r\nllm(\"Tell me a joke\")\r\n```\r\n\n\n### Expected behavior\n\nimport hashlib",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4757/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4757/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4756",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4756/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4756/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4756/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4756",
        "id": 1711052281,
        "node_id": "I_kwDOIPDwls5l_JX5",
        "number": 4756,
        "title": "search_type \"similarity_score_threshold\" is missing on async aget_relevant_documents",
        "user": {
            "login": "bnassivet",
            "id": 42321180,
            "node_id": "MDQ6VXNlcjQyMzIxMTgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/42321180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bnassivet",
            "html_url": "https://github.com/bnassivet",
            "followers_url": "https://api.github.com/users/bnassivet/followers",
            "following_url": "https://api.github.com/users/bnassivet/following{/other_user}",
            "gists_url": "https://api.github.com/users/bnassivet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bnassivet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bnassivet/subscriptions",
            "organizations_url": "https://api.github.com/users/bnassivet/orgs",
            "repos_url": "https://api.github.com/users/bnassivet/repos",
            "events_url": "https://api.github.com/users/bnassivet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bnassivet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-16T01:10:03Z",
        "updated_at": "2023-06-06T12:39:39Z",
        "closed_at": "2023-06-06T12:38:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nCapability to retrieve relevance scores along with document  has been added to VectorStoreRetriever as part of PR#4359.\r\nThe search_type == \"similarity_score_threshold\" alternative is handled in the sync flow (VectorStoreRetriever.get_relevant_documents) but not in the async flow (VectorStoreRetriever.aget_relevant_documents).\r\n\r\nThis request is to add handling of search_type  \"similarity_score_threshold\" to the VectorStoreRetriever async flow.\n\n### Motivation\n\nThe feature is necessary to get relevancy/similarity scores as part of a chatbot using ConversationalRetrievalChain and vector stores in streaming (thus async) mode.\r\nPrevous PR implementing search_type == \"similarity_score_threshold\": https://github.com/hwchase17/langchain/pull/4359\n\n### Your contribution\n\nI can eventually work on this feature and submit a PR after setting up the whole environment (it would be my first PR on this project though)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4756/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4756/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4755",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4755/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4755/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4755/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4755",
        "id": 1711051594,
        "node_id": "I_kwDOIPDwls5l_JNK",
        "number": 4755,
        "title": "Question: Does Chat Model support caching?",
        "user": {
            "login": "elBarkey",
            "id": 6080684,
            "node_id": "MDQ6VXNlcjYwODA2ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6080684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/elBarkey",
            "html_url": "https://github.com/elBarkey",
            "followers_url": "https://api.github.com/users/elBarkey/followers",
            "following_url": "https://api.github.com/users/elBarkey/following{/other_user}",
            "gists_url": "https://api.github.com/users/elBarkey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/elBarkey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/elBarkey/subscriptions",
            "organizations_url": "https://api.github.com/users/elBarkey/orgs",
            "repos_url": "https://api.github.com/users/elBarkey/repos",
            "events_url": "https://api.github.com/users/elBarkey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/elBarkey/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-16T01:09:04Z",
        "updated_at": "2023-05-16T01:23:30Z",
        "closed_at": "2023-05-16T01:23:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\ni just tried the [gptcache](https://python.langchain.com/en/latest/modules/models/llms/examples/llm_caching.html?highlight=cache#gptcache) using ChatOpenAI\r\n```python\r\nfrom gptcache import Cache\r\nfrom gptcache.adapter.api import init_similar_cache\r\nfrom langchain.cache import GPTCache\r\n\r\n# Avoid multiple caches using the same file, causing different llm model caches to affect each other\r\n\r\ndef init_gptcache(cache_obj: Cache, llm):\r\n    init_similar_cache(cache_obj=cache_obj, data_dir=f\"similar_cache_{llm}\")\r\n\r\nlangchain.llm_cache = GPTCache(init_gptcache)\r\n```\r\n```python\r\n%%time\r\nllm([HumanMessage(content=\"Translate this sentence from English to Bahasa Indonesia. I love programming.\")])\r\n```\r\n```\r\nCPU times: user 30 ms, sys: 1.96 ms, total: 31.9 ms\r\nWall time: 1.15 s\r\nAIMessage(content='Saya suka pemrograman.', additional_kwargs={}, example=False)\r\n```\r\n```python\r\n%%time\r\nllm([HumanMessage(content=\"Translate this sentence from English to Bahasa Indonesia. I love programming.\")])\r\n```\r\n```\r\nCPU times: user 4.15 ms, sys: 1.91 ms, total: 6.05 ms\r\nWall time: 1.34 s\r\nAIMessage(content='Saya suka pemrograman.', additional_kwargs={}, example=False)\r\n```\r\n\r\nthe second execution runs longer, obviously that the cache is miss hit.\r\ncan anyone confirm?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4755/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4755/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4754",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4754/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4754/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4754/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4754",
        "id": 1711047565,
        "node_id": "PR_kwDOIPDwls5QkG6W",
        "number": 4754,
        "title": "Cadlabs/python tool sanitization",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-16T01:04:35Z",
        "updated_at": "2023-05-18T02:46:13Z",
        "closed_at": "2023-05-18T02:46:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4754",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4754",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4754.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4754.patch",
            "merged_at": "2023-05-18T02:46:12Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4754/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4754/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4753",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4753/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4753/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4753/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4753",
        "id": 1711033073,
        "node_id": "PR_kwDOIPDwls5QkED1",
        "number": 4753,
        "title": "Removes leftover embedding_function name / doc references from chroma/atlas vectorstores",
        "user": {
            "login": "EvanOman",
            "id": 1807879,
            "node_id": "MDQ6VXNlcjE4MDc4Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1807879?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EvanOman",
            "html_url": "https://github.com/EvanOman",
            "followers_url": "https://api.github.com/users/EvanOman/followers",
            "following_url": "https://api.github.com/users/EvanOman/following{/other_user}",
            "gists_url": "https://api.github.com/users/EvanOman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EvanOman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EvanOman/subscriptions",
            "organizations_url": "https://api.github.com/users/EvanOman/orgs",
            "repos_url": "https://api.github.com/users/EvanOman/repos",
            "events_url": "https://api.github.com/users/EvanOman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EvanOman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-05-16T00:44:06Z",
        "updated_at": "2023-11-07T04:25:33Z",
        "closed_at": "2023-11-07T04:25:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4753",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4753",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4753.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4753.patch",
            "merged_at": null
        },
        "body": "\r\n\r\n# Removes leftover embedding_function name / doc references from chroma/atlas vectorstores\r\n\r\nThe Chroma and Atlas vector stores had been refactored to use a `Embeddings` instance rather than an `embedding_function`.\r\n\r\nThis PR cleans up a few variable names and comments which still used the old name `embedding_function` but used the new `Embeddings` object. This should make those sections of the code more readable.\r\n\r\n## Who can review?\r\n\r\nAnybody, but @dev2049 in particular\r\n        ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4753/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4753/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4752",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4752/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4752/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4752/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4752",
        "id": 1710996090,
        "node_id": "I_kwDOIPDwls5l-7p6",
        "number": 4752,
        "title": "LLM Not Receiving prompt ARGS",
        "user": {
            "login": "Tajcore",
            "id": 45900878,
            "node_id": "MDQ6VXNlcjQ1OTAwODc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/45900878?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Tajcore",
            "html_url": "https://github.com/Tajcore",
            "followers_url": "https://api.github.com/users/Tajcore/followers",
            "following_url": "https://api.github.com/users/Tajcore/following{/other_user}",
            "gists_url": "https://api.github.com/users/Tajcore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Tajcore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Tajcore/subscriptions",
            "organizations_url": "https://api.github.com/users/Tajcore/orgs",
            "repos_url": "https://api.github.com/users/Tajcore/repos",
            "events_url": "https://api.github.com/users/Tajcore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Tajcore/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T23:51:55Z",
        "updated_at": "2023-06-03T21:41:05Z",
        "closed_at": "2023-06-03T21:41:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\n0.0.170, Linux-5.15.90.1-microsoft-standard-WSL2-x86_64-with-glibc2.31, Python 3.9\r\n```python\r\n    Generative_Result_Message = \"\"\"Given the following schema table, sql query and sql result. Provide a human readable answer to the question\r\n    {sql_answering_document}\r\n    Question: {question}\r\n    Resulting Query: {sql_query}\r\n\r\n    \r\n    Return only the answer to the question and create your own human readable answer based off the sql result and sql query\r\n    \r\n    Below is the query result:\r\n    \"\"\"\r\n\r\n    SQL_RESULT_PROMPT = PromptTemplate(\r\n        input_variables=[\"question\", \"sql_query\", \"sql_answering_document\"],\r\n        template=Generative_Result_Message,\r\n    )\r\n\r\n        generative_result_llm = ChatOpenAI(\r\n            model_name=\"gpt-4\",\r\n            temperature=self.temperature,\r\n            openai_api_key=settings.OPENAI_API_KEY,\r\n            client=get_client(),\r\n        )\r\n\r\n        generative_result_llm_chain = LLMChain(\r\n            llm=generative_result_llm, prompt=self.SQL_RESULT_PROMPT\r\n        )\r\n\r\n        generative_result_reduce_chain = StuffDocumentsChain(\r\n            llm_chain=generative_result_llm_chain,\r\n            document_variable_name=\"sql_answering_document\",\r\n        )\r\n\r\n        combine_documents = MapReduceDocumentsChain(\r\n            llm_chain=generative_result_llm_chain,\r\n            combine_document_chain=generative_result_reduce_chain,\r\n            document_variable_name=\"sql_answering_document\",\r\n        )\r\n\r\n        map_reduce = MapReduceChain(\r\n            combine_documents_chain=combine_documents,\r\n            text_splitter=CharacterTextSplitter(),\r\n        )\r\n\r\n      result =  map_reduce.run(\r\n      {\r\n                            \"question\": document[\"generated_question\"],\r\n                            \"sql_query\": sql_query,\r\n                            \"sql_answering_document\": \"sql_answering_document\",\r\n                            \"input_text\": query_result\r\n                        })\r\n      \r\n```\r\n\r\nThis is the error log I'm getting \r\n\r\n> \r\n>     answer = map_reduce(\r\n>   File \"/usr/local/lib/python3.9/site-packages/langchain/chains/base.py\", line 142, in __call__\r\n>     raise e\r\n>   File \"/usr/local/lib/python3.9/site-packages/langchain/chains/base.py\", line 136, in __call__\r\n>     self._call(inputs, run_manager=run_manager)\r\n>   File \"/usr/local/lib/python3.9/site-packages/langchain/chains/mapreduce.py\", line 89, in _call\r\n>     outputs = self.combine_documents_chain.run(\r\n>   File \"/usr/local/lib/python3.9/site-packages/langchain/chains/base.py\", line 243, in run\r\n>     return self(kwargs, callbacks=callbacks)[self.output_keys[0]]\r\n>   File \"/usr/local/lib/python3.9/site-packages/langchain/chains/base.py\", line 142, in __call__\r\n>     raise e\r\n>   File \"/usr/local/lib/python3.9/site-packages/langchain/chains/base.py\", line 136, in __call__\r\n>     self._call(inputs, run_manager=run_manager)\r\n>   File \"/usr/local/lib/python3.9/site-packages/langchain/chains/combine_documents/base.py\", line 84, in _call\r\n>     output, extra_return_dict = self.combine_docs(\r\n>   File \"/usr/local/lib/python3.9/site-packages/langchain/chains/combine_documents/map_reduce.py\", line 144, in combine_docs\r\n>     results = self.llm_chain.apply(\r\n>   File \"/usr/local/lib/python3.9/site-packages/langchain/chains/llm.py\", line 160, in apply\r\n>     raise e\r\n>   File \"/usr/local/lib/python3.9/site-packages/langchain/chains/llm.py\", line 157, in apply\r\n>     response = self.generate(input_list, run_manager=run_manager)\r\n>   File \"/usr/local/lib/python3.9/site-packages/langchain/chains/llm.py\", line 80, in generate\r\n>     prompts, stop = self.prep_prompts(input_list, run_manager=run_manager)\r\n>   File \"/usr/local/lib/python3.9/site-packages/langchain/chains/llm.py\", line 108, in prep_prompts\r\n>     selected_inputs = {k: inputs[k] for k in self.prompt.input_variables}\r\n>   File \"/usr/local/lib/python3.9/site-packages/langchain/chains/llm.py\", line 108, in <dictcomp>\r\n>     selected_inputs = {k: inputs[k] for k in self.prompt.input_variables}\r\n> KeyError: 'question'\r\n> \r\n\r\n\r\n\r\nWhen I inspected the affected library files and log the data before the method that's triggering the error this is the output\r\n\r\n\r\n> [2023-05-15 23:39:46,775: INFO/ForkPoolWorker-7] kwargs in chains/base.py (part two) kwargs: {'input_documents': [Document(page_content=\"[('2-3 times a week', 4), ('Twice a month', 2), ('Once a week', 2), ('On occasions', 1)]\", metadata={})]} args: ()\r\n> [2023-05-15 23:39:46,775: INFO/ForkPoolWorker-7] inputs from library file: {'input_documents': [Document(page_content=\"[('2-3 times a week', 4), ('Twice a month', 2), ('Once a week', 2), ('On occasions', 1)]\", metadata={})]}\r\n> [2023-05-15 23:39:46,776: INFO/ForkPoolWorker-7] input listings from prep_prompts [{'sql_answering_document': \"[('2-3 times a week', 4), ('Twice a month', 2), ('Once a week', 2), ('On occasions', 1)]\"}]\r\n\r\n\r\nWhich is weird, I'm not sure why the prompt inputs would not include the one from the llm I setup\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nN/A\n\n### Expected behavior\n\nN/A",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4752/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4752/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4751",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4751/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4751/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4751/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4751",
        "id": 1710993376,
        "node_id": "PR_kwDOIPDwls5Qj7sh",
        "number": 4751,
        "title": "Fix Async Shared Resource Bug",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T23:46:47Z",
        "updated_at": "2023-05-16T00:04:02Z",
        "closed_at": "2023-05-16T00:04:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4751",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4751",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4751.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4751.patch",
            "merged_at": "2023-05-16T00:04:02Z"
        },
        "body": "Use an async queue to distribute tracers rather than inappropriately sharing a single one",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4751/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4751/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4750",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4750/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4750/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4750/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4750",
        "id": 1710963827,
        "node_id": "PR_kwDOIPDwls5Qj1iC",
        "number": 4750,
        "title": "Revert \"Make serpapi base url configurable via env (#4402)\"",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T23:03:21Z",
        "updated_at": "2023-05-15T23:17:17Z",
        "closed_at": "2023-05-15T23:17:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4750",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4750",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4750.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4750.patch",
            "merged_at": "2023-05-15T23:17:16Z"
        },
        "body": "This reverts commit 5111bec54071e42a7865766dc8bb8dc72c1d13b4.\r\n\r\nThis PR introduced a bug in the async API (the `url` param isn't bound); it also didn't update the synchronous API correctly, which makes it error-prone (the behavior of the async and sync endpoints would be different)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4750/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4750/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4749",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4749/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4749/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4749/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4749",
        "id": 1710954947,
        "node_id": "PR_kwDOIPDwls5QjzkR",
        "number": 4749,
        "title": "(WIP) Harrison/serialize chat",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T22:55:36Z",
        "updated_at": "2023-08-11T22:46:22Z",
        "closed_at": "2023-08-11T22:46:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4749",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4749",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4749.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4749.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4749/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4749/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4748",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4748/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4748/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4748/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4748",
        "id": 1710923362,
        "node_id": "PR_kwDOIPDwls5Qjs-H",
        "number": 4748,
        "title": "docs: added `additional_resources` folder",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-15T22:14:39Z",
        "updated_at": "2023-05-16T00:12:48Z",
        "closed_at": "2023-05-16T00:12:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4748",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4748",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4748.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4748.patch",
            "merged_at": "2023-05-16T00:12:48Z"
        },
        "body": "# docs: added `additional_resources` folder\r\n\r\nThe additional resource files were inside the doc top-level folder, which polluted the top-level folder.\r\n- added the `additional_resources` folder and moved correspondent files to this folder;\r\n- fixed a broken link to the \"Model comparison\" page (model_laboratory notebook)\r\n- fixed a broken link to one of the YouTube videos (sorry, it is not directly related to this PR) \r\n\r\n## Who can review?\r\n\r\n@dev2049\r\n    ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4748/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4748/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4747",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4747/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4747/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4747/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4747",
        "id": 1710887466,
        "node_id": "PR_kwDOIPDwls5QjlfJ",
        "number": 4747,
        "title": "Fix for syntax when setting search_path for Snowflake database",
        "user": {
            "login": "aboland",
            "id": 13659025,
            "node_id": "MDQ6VXNlcjEzNjU5MDI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/13659025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aboland",
            "html_url": "https://github.com/aboland",
            "followers_url": "https://api.github.com/users/aboland/followers",
            "following_url": "https://api.github.com/users/aboland/following{/other_user}",
            "gists_url": "https://api.github.com/users/aboland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aboland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aboland/subscriptions",
            "organizations_url": "https://api.github.com/users/aboland/orgs",
            "repos_url": "https://api.github.com/users/aboland/repos",
            "events_url": "https://api.github.com/users/aboland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aboland/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T21:47:04Z",
        "updated_at": "2023-05-19T03:30:39Z",
        "closed_at": "2023-05-19T03:30:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4747",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4747",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4747.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4747.patch",
            "merged_at": "2023-05-19T03:30:38Z"
        },
        "body": "# Fixes syntax for setting Snowflake database search_path\r\n\r\nAn error occurs when using a Snowflake database and providing a schema argument. \r\nI have updated the syntax to run a Snowflake specific query when the database dialect is 'snowflake'.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4747/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4747/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4746",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4746/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4746/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4746/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4746",
        "id": 1710823670,
        "node_id": "PR_kwDOIPDwls5QjXiC",
        "number": 4746,
        "title": "added new links to `Tutorials` and `YouTube` pages",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T21:02:46Z",
        "updated_at": "2023-05-15T21:33:17Z",
        "closed_at": "2023-05-15T21:32:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4746",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4746",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4746.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4746.patch",
            "merged_at": "2023-05-15T21:32:48Z"
        },
        "body": "# Added new links to `Tutorials` and `YouTube` pages\r\n\r\n- added an official LangChain YouTube channel :)\r\n- added new tutorials and videos (only videos with enough subscriber or view numbers)\r\n- added a \"New video\" icon \r\n\r\n## Who can review?\r\n\r\n@dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4746/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4746/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4745",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4745/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4745/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4745/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4745",
        "id": 1710822260,
        "node_id": "PR_kwDOIPDwls5QjXOB",
        "number": 4745,
        "title": "Update utils.py to make headless an optional argument",
        "user": {
            "login": "d3n7",
            "id": 29033313,
            "node_id": "MDQ6VXNlcjI5MDMzMzEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/29033313?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/d3n7",
            "html_url": "https://github.com/d3n7",
            "followers_url": "https://api.github.com/users/d3n7/followers",
            "following_url": "https://api.github.com/users/d3n7/following{/other_user}",
            "gists_url": "https://api.github.com/users/d3n7/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/d3n7/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/d3n7/subscriptions",
            "organizations_url": "https://api.github.com/users/d3n7/orgs",
            "repos_url": "https://api.github.com/users/d3n7/repos",
            "events_url": "https://api.github.com/users/d3n7/events{/privacy}",
            "received_events_url": "https://api.github.com/users/d3n7/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-15T21:01:53Z",
        "updated_at": "2023-05-16T00:29:07Z",
        "closed_at": "2023-05-16T00:29:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4745",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4745",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4745.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4745.patch",
            "merged_at": "2023-05-16T00:29:07Z"
        },
        "body": "Making headless an optional argument for create_async_playwright_browser() and create_sync_playwright_browser()\r\nBy default no functionality is changed.\r\n\r\nThis allows for disabled people to use a web browser intelligently with their voice, for example, while still seeing the content on the screen. As well as many other use cases\r\n\r\nRelevant reviewer: @vowelparrot ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4745/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4745/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4744",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4744/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4744/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4744/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4744",
        "id": 1710790420,
        "node_id": "PR_kwDOIPDwls5QjQbP",
        "number": 4744,
        "title": "Update playwright utils.py to make headless an optional argument",
        "user": {
            "login": "d3n7",
            "id": 29033313,
            "node_id": "MDQ6VXNlcjI5MDMzMzEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/29033313?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/d3n7",
            "html_url": "https://github.com/d3n7",
            "followers_url": "https://api.github.com/users/d3n7/followers",
            "following_url": "https://api.github.com/users/d3n7/following{/other_user}",
            "gists_url": "https://api.github.com/users/d3n7/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/d3n7/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/d3n7/subscriptions",
            "organizations_url": "https://api.github.com/users/d3n7/orgs",
            "repos_url": "https://api.github.com/users/d3n7/repos",
            "events_url": "https://api.github.com/users/d3n7/events{/privacy}",
            "received_events_url": "https://api.github.com/users/d3n7/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T20:39:04Z",
        "updated_at": "2023-05-15T21:25:09Z",
        "closed_at": "2023-05-15T20:58:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4744",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4744",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4744.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4744.patch",
            "merged_at": null
        },
        "body": "Making the headless argument optional would allow for disabled individuals to use a browser with their voice for example, while still being able to actually see the content. Along with many other use cases I imagine\r\nRelevant reviewer: @vowelparrot \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4744/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4744/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4743",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4743/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4743/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4743/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4743",
        "id": 1710750362,
        "node_id": "I_kwDOIPDwls5l9_qa",
        "number": 4743,
        "title": "How to stop the stream? and does it stop the openai charging?",
        "user": {
            "login": "mysteriousHerb",
            "id": 13511170,
            "node_id": "MDQ6VXNlcjEzNTExMTcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/13511170?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mysteriousHerb",
            "html_url": "https://github.com/mysteriousHerb",
            "followers_url": "https://api.github.com/users/mysteriousHerb/followers",
            "following_url": "https://api.github.com/users/mysteriousHerb/following{/other_user}",
            "gists_url": "https://api.github.com/users/mysteriousHerb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mysteriousHerb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mysteriousHerb/subscriptions",
            "organizations_url": "https://api.github.com/users/mysteriousHerb/orgs",
            "repos_url": "https://api.github.com/users/mysteriousHerb/repos",
            "events_url": "https://api.github.com/users/mysteriousHerb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mysteriousHerb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-15T20:07:08Z",
        "updated_at": "2023-09-28T01:36:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHow do I stop the stream when using callbacks like async callback?\r\n\r\nWhen I stop the stream, does the openAI still charges the remainders of the generation? \n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4743/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4743/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4742",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4742/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4742/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4742/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4742",
        "id": 1710614532,
        "node_id": "I_kwDOIPDwls5l9egE",
        "number": 4742,
        "title": "Issue: Weaviate: why similarity_search uses with_near_text?",
        "user": {
            "login": "hsm207",
            "id": 2398765,
            "node_id": "MDQ6VXNlcjIzOTg3NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2398765?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hsm207",
            "html_url": "https://github.com/hsm207",
            "followers_url": "https://api.github.com/users/hsm207/followers",
            "following_url": "https://api.github.com/users/hsm207/following{/other_user}",
            "gists_url": "https://api.github.com/users/hsm207/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hsm207/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hsm207/subscriptions",
            "organizations_url": "https://api.github.com/users/hsm207/orgs",
            "repos_url": "https://api.github.com/users/hsm207/repos",
            "events_url": "https://api.github.com/users/hsm207/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hsm207/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-15T18:37:07Z",
        "updated_at": "2023-05-17T02:43:16Z",
        "closed_at": "2023-05-17T02:43:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n[similarity_search](https://github.com/hwchase17/langchain/blob/09587a32014bb3fd9233d7a567c8935c17fe901e/langchain/vectorstores/weaviate.py#L174-L175) in weaviate uses near_text.\r\n\r\nThis requires weaviate to be set up with a [text2vec module](https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules).\r\n\r\nAt the same time, the weaviate also takes an [embedding model](https://github.com/hwchase17/langchain/blob/09587a32014bb3fd9233d7a567c8935c17fe901e/langchain/vectorstores/weaviate.py#L86) as one of it's init parameters.\r\n\r\nWhy don't we use the embedding model to vectorize the search query and then use weaviate's near_vector operator to do the search?\n\n### Suggestion:\n\nIf a user is using langchain with weaviate, we can assume that they want to use langchain's features to generate the embeddings and as such, will not have any text2vec module enabled.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4742/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4742/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4741",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4741/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4741/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4741/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4741",
        "id": 1710613028,
        "node_id": "PR_kwDOIPDwls5Qip93",
        "number": 4741,
        "title": "Only run linkcheck against docs dir on PR",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T18:35:52Z",
        "updated_at": "2023-05-15T18:40:45Z",
        "closed_at": "2023-05-15T18:40:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4741",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4741",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4741.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4741.patch",
            "merged_at": "2023-05-15T18:40:44Z"
        },
        "body": "# Only run linkchecker on direct changes to docs\n\nThis is a stop-gap that will speed up PRs.\n\nSome broken links can slip through if they're embedded in doc-strings inside\nthe codebase.\n\nBut we'll still be running the linkchecker on master. \n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4741/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4741/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4740",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4740/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4740/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4740/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4740",
        "id": 1710601175,
        "node_id": "PR_kwDOIPDwls5QinY0",
        "number": 4740,
        "title": "Check poetry lock file",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T18:27:08Z",
        "updated_at": "2023-05-15T18:38:02Z",
        "closed_at": "2023-05-15T18:38:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4740",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4740",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4740.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4740.patch",
            "merged_at": "2023-05-15T18:38:01Z"
        },
        "body": "# Check poetry lock file on CI\n\nThis PR checks that the lock file is up to date using poetry lock --check.\n\nAs part of this PR, a new lock file was generated.\n\n\n## Before submitting\n\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\n\n## Who can review?\n\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\n\n<!-- For a quicker response, figure out the right person to tag with @\n\n        @hwchase17 - project lead\n\n        Tracing / Callbacks\n        - @agola11\n\n        Async\n        - @agola11\n\n        DataLoaders\n        - @eyurtsev\n\n        Models\n        - @hwchase17\n        - @agola11\n\n        Agents / Tools / Toolkits\n        - @vowelparrot\n        \n        VectorStores / Retrievers / Memory\n        - @dev2049\n        \n -->\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4740/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4740/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4739",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4739/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4739/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4739/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4739",
        "id": 1710549708,
        "node_id": "PR_kwDOIPDwls5Qib9X",
        "number": 4739,
        "title": "llama-cpp: add gpu layers parameter",
        "user": {
            "login": "hilarious-viking",
            "id": 27341699,
            "node_id": "MDQ6VXNlcjI3MzQxNjk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/27341699?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hilarious-viking",
            "html_url": "https://github.com/hilarious-viking",
            "followers_url": "https://api.github.com/users/hilarious-viking/followers",
            "following_url": "https://api.github.com/users/hilarious-viking/following{/other_user}",
            "gists_url": "https://api.github.com/users/hilarious-viking/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hilarious-viking/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hilarious-viking/subscriptions",
            "organizations_url": "https://api.github.com/users/hilarious-viking/orgs",
            "repos_url": "https://api.github.com/users/hilarious-viking/repos",
            "events_url": "https://api.github.com/users/hilarious-viking/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hilarious-viking/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-15T17:54:11Z",
        "updated_at": "2023-05-18T10:15:52Z",
        "closed_at": "2023-05-15T23:01:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4739",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4739",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4739.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4739.patch",
            "merged_at": "2023-05-15T23:01:48Z"
        },
        "body": "# Adds gpu layers parameter to llama.cpp wrapper\r\n\r\nAfter a change:\r\n`llm = LlamaCpp(model_path=..., n_gpu_layers=3)`\r\n\r\nOutput:\r\n```\r\n....\r\nllama_model_load_internal: [cublas] offloading 3 layers to GPU\r\n....\r\nllama_model_load_internal: [cublas] total VRAM used: 1148 MB\r\nllama_init_from_file: kv self size  = 3120.00 MB\r\nAVX = 1 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 1 | SSE3 = 1 | VSX = 0 | \r\n\r\nwhat do you know about 'HUNTER X HUNTER'\r\n\r\n> Entering new AgentExecutor chain...\r\n\r\nI should look up information on Hunter x Hunter.\r\nAction: wikipedia\r\nAction Input: Hunter x Hunter\r\nObservation: Page: Hunter \u00d7 Hunter\r\nSummary: Hunter \u00d7 Hunter (stylized as HUNTER\u00d7HUNTER and pronounced \"hunter hunter\") is a Japanese manga series...\r\n```\r\n\r\nFor review:\r\n- @hwchase17\r\n- @agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4739/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4739/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4738",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4738/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4738/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4738/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4738",
        "id": 1710499528,
        "node_id": "I_kwDOIPDwls5l9CbI",
        "number": 4738,
        "title": " LlamaCppEmbeddings crashing (reboot) Linux Kubuntu 23.04 machine",
        "user": {
            "login": "Free-Radical",
            "id": 753154,
            "node_id": "MDQ6VXNlcjc1MzE1NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/753154?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Free-Radical",
            "html_url": "https://github.com/Free-Radical",
            "followers_url": "https://api.github.com/users/Free-Radical/followers",
            "following_url": "https://api.github.com/users/Free-Radical/following{/other_user}",
            "gists_url": "https://api.github.com/users/Free-Radical/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Free-Radical/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Free-Radical/subscriptions",
            "organizations_url": "https://api.github.com/users/Free-Radical/orgs",
            "repos_url": "https://api.github.com/users/Free-Radical/repos",
            "events_url": "https://api.github.com/users/Free-Radical/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Free-Radical/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-15T17:15:38Z",
        "updated_at": "2023-09-10T16:17:24Z",
        "closed_at": "2023-09-10T16:17:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain 0.0.166\r\nPython 3.10.9\r\nOperating System: Kubuntu 23.04\r\nKDE Plasma Version: 5.27.4\r\nKDE Frameworks Version: 5.104.0\r\nQt Version: 5.15.8\r\nKernel Version: 6.2.0-20-generic (64-bit)\r\nGraphics Platform: X11\r\nProcessors: 12 \u00d7 AMD Ryzen 5 5600X 6-Core Processor\r\nMemory: 31.2 GiB of RAM\r\nGraphics Processor: NVIDIA GeForce GTX 1080/PCIe/SSE2\n\n### Who can help?\n\n@hwchase17 @agola11\r\n\r\n\r\n\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n### Steps to reproduce\r\n\r\n`git clone https://github.com/imartinez/privateGPT`\r\n\r\n(follow project instructions)\r\n\r\n```\r\npip install -r requirements.txt\r\n\r\nwget https://gpt4all.io/models/ggml-gpt4all-j-v1.3-groovy.bin\r\nwget https://huggingface.co/Pi3141/alpaca-native-7B-ggml/resolve/397e872bf4c83f4c642317a5bf65ce84a105786e/ggml-model-q4_0.bin\r\n\r\nmkdir ./models\r\nmv *.bin ./models/\r\n\r\ncp example.env .env\r\n\r\npython ingest.py\r\npython privateGPT.py\r\n \r\n```\n\n### Expected behavior\n\nwhile `ingest.py` or `privateGPT.py` is running the machine should crash (turn off)\r\n\r\ndebugger shows crash occurs at, `ingest.py`:\r\n\r\n`llama = LlamaCppEmbeddings(model_path=llama_embeddings_model, n_ctx=model_n_ctx)`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4738/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4738/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4737",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4737/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4737/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4737/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4737",
        "id": 1710451460,
        "node_id": "PR_kwDOIPDwls5QiGsc",
        "number": 4737,
        "title": "Adds Reflexion (solves #2316) ",
        "user": {
            "login": "UmerHA",
            "id": 40663591,
            "node_id": "MDQ6VXNlcjQwNjYzNTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/40663591?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UmerHA",
            "html_url": "https://github.com/UmerHA",
            "followers_url": "https://api.github.com/users/UmerHA/followers",
            "following_url": "https://api.github.com/users/UmerHA/following{/other_user}",
            "gists_url": "https://api.github.com/users/UmerHA/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UmerHA/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UmerHA/subscriptions",
            "organizations_url": "https://api.github.com/users/UmerHA/orgs",
            "repos_url": "https://api.github.com/users/UmerHA/repos",
            "events_url": "https://api.github.com/users/UmerHA/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UmerHA/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2023-05-15T16:45:10Z",
        "updated_at": "2023-11-07T19:51:47Z",
        "closed_at": "2023-11-07T19:51:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4737",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4737",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4737.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4737.patch",
            "merged_at": null
        },
        "body": "# Adds Reflexion (solves #2316) \r\n\r\nIntroduces the concept of trials to AgentExecutor and implements Reflexion as re-try method.\r\nI.e., when the Agent fails, it thinks about what it could have done better & attempts the task again.\r\nBased on https://arxiv.org/abs/2303.11366.\r\n\r\nFixes #2316\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n@vowelparrot\r\n\r\nTwitter: [@UmerHAdil](https://twitter.com/@UmerHAdil) | Discord: RicChilligerDude#7589",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4737/reactions",
            "total_count": 6,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 6,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4737/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4736",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4736/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4736/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4736/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4736",
        "id": 1710433310,
        "node_id": "I_kwDOIPDwls5l8yQe",
        "number": 4736,
        "title": "Identical Docstring for `ConversationalChatAgent` and `ConversationalAgent`.",
        "user": {
            "login": "PhilipMay",
            "id": 229382,
            "node_id": "MDQ6VXNlcjIyOTM4Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/229382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PhilipMay",
            "html_url": "https://github.com/PhilipMay",
            "followers_url": "https://api.github.com/users/PhilipMay/followers",
            "following_url": "https://api.github.com/users/PhilipMay/following{/other_user}",
            "gists_url": "https://api.github.com/users/PhilipMay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PhilipMay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PhilipMay/subscriptions",
            "organizations_url": "https://api.github.com/users/PhilipMay/orgs",
            "repos_url": "https://api.github.com/users/PhilipMay/repos",
            "events_url": "https://api.github.com/users/PhilipMay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PhilipMay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-15T16:30:08Z",
        "updated_at": "2023-12-13T16:01:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nMain branch.\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nDocstring for `ConversationalChatAgent` and `ConversationalAgent` is identical. The user does not know the difference between the two classes. \r\n\r\nhttps://github.com/hwchase17/langchain/blob/c70ae562b466ba9a6d0f587ab935fd9abee2bc87/langchain/agents/conversational_chat/base.py#L36-L37\r\n\r\nhttps://github.com/hwchase17/langchain/blob/c70ae562b466ba9a6d0f587ab935fd9abee2bc87/langchain/agents/conversational/base.py#L20-L21\n\n### Expected behavior\n\nThe difference should be explained in the doctring.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4736/reactions",
            "total_count": 7,
            "+1": 7,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4736/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4735",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4735/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4735/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4735/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4735",
        "id": 1710420039,
        "node_id": "PR_kwDOIPDwls5QiAAA",
        "number": 4735,
        "title": "Docugami docs: First cell should be a title cell",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-15T16:19:49Z",
        "updated_at": "2023-05-16T17:12:22Z",
        "closed_at": "2023-05-16T17:12:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4735",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4735",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4735.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4735.patch",
            "merged_at": "2023-05-16T17:12:15Z"
        },
        "body": "# Make first cell a title in docugami docs\n\nThis makes the first cell a title cell in docugami notebook\n\n## Before submitting\n\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\n\n## Who can review?\n\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\n\n<!-- For a quicker response, figure out the right person to tag with @\n\n        @hwchase17 - project lead\n\n        Tracing / Callbacks\n        - @agola11\n\n        Async\n        - @agola11\n\n        DataLoaders\n        - @eyurtsev\n\n        Models\n        - @hwchase17\n        - @agola11\n\n        Agents / Tools / Toolkits\n        - @vowelparrot\n        \n        VectorStores / Retrievers / Memory\n        - @dev2049\n        \n -->\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4735/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4735/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4734",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4734/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4734/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4734/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4734",
        "id": 1710398688,
        "node_id": "PR_kwDOIPDwls5Qh7XT",
        "number": 4734,
        "title": "docs: `Concepts`",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-15T16:05:20Z",
        "updated_at": "2023-05-15T20:54:54Z",
        "closed_at": "2023-05-15T18:09:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4734",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4734",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4734.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4734.patch",
            "merged_at": "2023-05-15T18:09:25Z"
        },
        "body": "# glossary.md renamed as concepts.md and moved under the Getting Started \r\n\r\nsmall PR.\r\n`Concepts` looks right to the point. It is moved under Getting Started (typical place). Previously it was lost in the Additional Resources section.\r\n\r\n## Who can review?\r\n\r\n @hwchase17 \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4734/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4734/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4733",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4733/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4733/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4733/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4733",
        "id": 1710395944,
        "node_id": "PR_kwDOIPDwls5Qh6vg",
        "number": 4733,
        "title": "bump version to 170",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T16:04:05Z",
        "updated_at": "2023-05-15T16:21:01Z",
        "closed_at": "2023-05-15T16:21:00Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4733",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4733",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4733.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4733.patch",
            "merged_at": "2023-05-15T16:21:00Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4733/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4733/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4732",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4732/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4732/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4732/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4732",
        "id": 1710388766,
        "node_id": "PR_kwDOIPDwls5Qh5H4",
        "number": 4732,
        "title": "Support multi gpu inference for HuggingFaceEmbeddings",
        "user": {
            "login": "huliang2016",
            "id": 8418336,
            "node_id": "MDQ6VXNlcjg0MTgzMzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8418336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huliang2016",
            "html_url": "https://github.com/huliang2016",
            "followers_url": "https://api.github.com/users/huliang2016/followers",
            "following_url": "https://api.github.com/users/huliang2016/following{/other_user}",
            "gists_url": "https://api.github.com/users/huliang2016/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huliang2016/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huliang2016/subscriptions",
            "organizations_url": "https://api.github.com/users/huliang2016/orgs",
            "repos_url": "https://api.github.com/users/huliang2016/repos",
            "events_url": "https://api.github.com/users/huliang2016/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huliang2016/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-15T16:00:34Z",
        "updated_at": "2023-08-11T22:55:49Z",
        "closed_at": "2023-08-11T22:55:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4732",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4732",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4732.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4732.patch",
            "merged_at": "2023-08-11T22:55:44Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4732/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4732/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4731",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4731/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4731/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4731/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4731",
        "id": 1710376092,
        "node_id": "PR_kwDOIPDwls5Qh2U8",
        "number": 4731,
        "title": "Variation on query retriever",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T15:53:10Z",
        "updated_at": "2023-07-26T16:56:20Z",
        "closed_at": "2023-07-26T16:56:20Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4731",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4731",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4731.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4731.patch",
            "merged_at": null
        },
        "body": "# Variation on query retriever\n\nVariation on query retriever\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4731/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4731/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4730",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4730/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4730/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4730/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4730",
        "id": 1710317818,
        "node_id": "I_kwDOIPDwls5l8WD6",
        "number": 4730,
        "title": "How about using the prompts in the Chameleon paper?",
        "user": {
            "login": "seeflood",
            "id": 26001097,
            "node_id": "MDQ6VXNlcjI2MDAxMDk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/26001097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seeflood",
            "html_url": "https://github.com/seeflood",
            "followers_url": "https://api.github.com/users/seeflood/followers",
            "following_url": "https://api.github.com/users/seeflood/following{/other_user}",
            "gists_url": "https://api.github.com/users/seeflood/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seeflood/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seeflood/subscriptions",
            "organizations_url": "https://api.github.com/users/seeflood/orgs",
            "repos_url": "https://api.github.com/users/seeflood/repos",
            "events_url": "https://api.github.com/users/seeflood/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seeflood/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-15T15:17:46Z",
        "updated_at": "2023-09-10T16:17:29Z",
        "closed_at": "2023-09-10T16:17:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nIn the [Chameleon paper](https://arxiv.org/abs/2304.09842), there are some prompt tricks different from langchain, such as:\r\n1. There is a planner responsible for generating \"steps to use the tool\"\r\nFor example, a generated \"steps\" looks like:\r\n![image](https://github.com/hwchase17/langchain/assets/26001097/3a770cf8-12bc-4be5-a035-ac6c259cdde7)\r\n\r\nLangchain also has the [\"Plan and Execute\" feature](https://python.langchain.com/en/latest/modules/agents/plan_and_execute.html) , but each step in the generated plan is a text goal, not a tool. For example:\r\n<img width=\"775\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/26001097/2ba714d4-3937-429c-8fde-e9be50836eb1\">\r\n\r\nI'm not sure which of the two is better\r\n\r\n2. Heuristically verify the plan generated by the planner\r\nIn the paper, the author used some rules to verify whether the generated steps are valid, such as verifying that \"step x must be before step y, otherwise it will be considered invalid\".\r\nAt present, langchain don't have such a mechanism. Maybe we can add this feature?\r\n\r\n### Motivation\r\n\r\nTo make the plan more accurate\r\n\r\n### Your contribution\r\n\r\nI'm a python noob, maybe I can help coding",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4730/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4730/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4729",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4729/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4729/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4729/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4729",
        "id": 1710304154,
        "node_id": "PR_kwDOIPDwls5Qhmpo",
        "number": 4729,
        "title": "YouTube Loader: Replace regexp with built-in parsing",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T15:10:31Z",
        "updated_at": "2023-05-15T15:34:43Z",
        "closed_at": "2023-05-15T15:34:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4729",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4729",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4729.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4729.patch",
            "merged_at": "2023-05-15T15:34:42Z"
        },
        "body": "# Youtube loader\n\nReplace url parsing logic\n\n## Before submitting\n\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\n\n## Who can review?\n\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\n\n<!-- For a quicker response, figure out the right person to tag with @\n\n        @hwchase17 - project lead\n\n        Tracing / Callbacks\n        - @agola11\n\n        Async\n        - @agola11\n\n        DataLoaders\n        - @eyurtsev\n\n        Models\n        - @hwchase17\n        - @agola11\n\n        Agents / Tools / Toolkits\n        - @vowelparrot\n        \n        VectorStores / Retrievers / Memory\n        - @dev2049\n        \n -->\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4729/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4729/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4728",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4728/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4728/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4728/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4728",
        "id": 1710288233,
        "node_id": "I_kwDOIPDwls5l8O1p",
        "number": 4728,
        "title": "Summarization Notebook: No module named 'tiktoken'",
        "user": {
            "login": "garystafford",
            "id": 1365830,
            "node_id": "MDQ6VXNlcjEzNjU4MzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1365830?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garystafford",
            "html_url": "https://github.com/garystafford",
            "followers_url": "https://api.github.com/users/garystafford/followers",
            "following_url": "https://api.github.com/users/garystafford/following{/other_user}",
            "gists_url": "https://api.github.com/users/garystafford/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garystafford/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garystafford/subscriptions",
            "organizations_url": "https://api.github.com/users/garystafford/orgs",
            "repos_url": "https://api.github.com/users/garystafford/repos",
            "events_url": "https://api.github.com/users/garystafford/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garystafford/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-15T15:02:38Z",
        "updated_at": "2023-09-12T16:15:11Z",
        "closed_at": "2023-09-12T16:15:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain: 0.0.169\r\nPython: 3.10.10\r\nMacOS: 12.6.5 (21G531)\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nWhen running the notebook featured here: [https://python.langchain.com/en/latest/modules/chains/index_examples/summarize.html](https://python.langchain.com/en/latest/modules/chains/index_examples/summarize.html), the following cell will fail.\r\n\r\n```python\r\nchain = load_summarize_chain(llm, chain_type=\"map_reduce\")\r\nchain.run(docs)\r\n```\r\n\r\nUnless you have pre-installed `tiktoken`, you will receive an error:\r\n```text\r\n---------------------------------------------------------------------------\r\nModuleNotFoundError                       Traceback (most recent call last)\r\nFile [/usr/local/lib/python3.10/site-packages/langchain/llms/openai.py:464](https://file+.vscode-resource.vscode-cdn.net/usr/local/lib/python3.10/site-packages/langchain/llms/openai.py:464), in BaseOpenAI.get_num_tokens(self, text)\r\n    463 try:\r\n--> 464     import tiktoken\r\n    465 except ImportError:\r\n\r\nModuleNotFoundError: No module named 'tiktoken'\r\n```\r\n\r\nInstalling `tiktoken` solves the immediate issue.\r\n\r\n```python\r\n%pip install tiktoken\r\n```\r\n\r\n\n\n### Expected behavior\n\nThe notebook runs without errors.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4728/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4728/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4727",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4727/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4727/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4727/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4727",
        "id": 1710224440,
        "node_id": "PR_kwDOIPDwls5QhVXK",
        "number": 4727,
        "title": "Docugami DataLoader",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-15T14:27:35Z",
        "updated_at": "2023-05-15T16:22:29Z",
        "closed_at": "2023-05-15T14:53:00Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4727",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4727",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4727.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4727.patch",
            "merged_at": "2023-05-15T14:53:00Z"
        },
        "body": "### Adds a document loader for Docugami\n\nSpecifically:\n\n1. Adds a data loader that talks to the [Docugami](http://docugami.com) API to download processed documents as semantic XML\n2. Parses the semantic XML into chunks, with additional metadata capturing chunk semantics\n3. Adds a detailed notebook showing how you can use additional metadata returned by Docugami for techniques like the [self-querying retriever](https://python.langchain.com/en/latest/modules/indexes/retrievers/examples/self_query_retriever.html)\n4. Adds an integration test, and related documentation\n\nHere is an example of a result that is not possible without the capabilities added by Docugami (from the notebook):\n\n<img width=\"1585\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/749277/bb6c1ce3-13dc-4349-a53b-de16681fdd5b\">\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4727/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4727/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4725",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4725/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4725/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4725/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4725",
        "id": 1710092666,
        "node_id": "PR_kwDOIPDwls5Qg4xD",
        "number": 4725,
        "title": "Update Makefile (typo)",
        "user": {
            "login": "whoissqr",
            "id": 4846507,
            "node_id": "MDQ6VXNlcjQ4NDY1MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4846507?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/whoissqr",
            "html_url": "https://github.com/whoissqr",
            "followers_url": "https://api.github.com/users/whoissqr/followers",
            "following_url": "https://api.github.com/users/whoissqr/following{/other_user}",
            "gists_url": "https://api.github.com/users/whoissqr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/whoissqr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/whoissqr/subscriptions",
            "organizations_url": "https://api.github.com/users/whoissqr/orgs",
            "repos_url": "https://api.github.com/users/whoissqr/repos",
            "events_url": "https://api.github.com/users/whoissqr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/whoissqr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-15T13:20:45Z",
        "updated_at": "2023-05-15T14:34:50Z",
        "closed_at": "2023-05-15T14:34:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4725",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4725",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4725.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4725.patch",
            "merged_at": "2023-05-15T14:34:44Z"
        },
        "body": "# Update minor typo in makefile",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4725/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4725/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4724",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4724/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4724/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4724/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4724",
        "id": 1710079527,
        "node_id": "I_kwDOIPDwls5l7b4n",
        "number": 4724,
        "title": "Enums Don't Work Well With Structured Agent",
        "user": {
            "login": "jordanparker6",
            "id": 29700471,
            "node_id": "MDQ6VXNlcjI5NzAwNDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29700471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordanparker6",
            "html_url": "https://github.com/jordanparker6",
            "followers_url": "https://api.github.com/users/jordanparker6/followers",
            "following_url": "https://api.github.com/users/jordanparker6/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordanparker6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordanparker6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordanparker6/subscriptions",
            "organizations_url": "https://api.github.com/users/jordanparker6/orgs",
            "repos_url": "https://api.github.com/users/jordanparker6/repos",
            "events_url": "https://api.github.com/users/jordanparker6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordanparker6/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-15T13:13:07Z",
        "updated_at": "2023-10-15T16:07:13Z",
        "closed_at": "2023-10-15T16:07:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nEnum's don't work well with the structured agent. The data validation works fine, but it would be great if we took the ideas from the `StructuredChatOutputParserWithRetries` and applied it to the StructuredTool's. \r\n\r\nFor example, when a validation error raises due to an enum breach, parse the error message into an LLM with the schema and input and get it to fix the tool input prior to continuing. \r\n\r\nThis would make the StructuredTools more robust IMO.\r\n\r\nThis may be a step to far, but it would also be nice to be able to handle these validation errors in different ways: \r\n1.  Correct the error similar to the `StructuredChatOutputParserWithRetries`;\r\n2. Use a different tool that might collect some additional information from the user or tool.\r\n\r\n\n\n### Motivation\n\nI would like to constrain the input parameters of my StructuredTools to an enum so I can avoid bugs.\n\n### Your contribution\n\nI am happy to raise a PR for the parser code but I would need to seek guidance from a maintainer if and how this would work with the existing flow of the software.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4724/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4724/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4723",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4723/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4723/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4723/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4723",
        "id": 1709929358,
        "node_id": "PR_kwDOIPDwls5QgU1i",
        "number": 4723,
        "title": "Update click.py to pass errors back to Agent",
        "user": {
            "login": "d3n7",
            "id": 29033313,
            "node_id": "MDQ6VXNlcjI5MDMzMzEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/29033313?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/d3n7",
            "html_url": "https://github.com/d3n7",
            "followers_url": "https://api.github.com/users/d3n7/followers",
            "following_url": "https://api.github.com/users/d3n7/following{/other_user}",
            "gists_url": "https://api.github.com/users/d3n7/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/d3n7/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/d3n7/subscriptions",
            "organizations_url": "https://api.github.com/users/d3n7/orgs",
            "repos_url": "https://api.github.com/users/d3n7/repos",
            "events_url": "https://api.github.com/users/d3n7/events{/privacy}",
            "received_events_url": "https://api.github.com/users/d3n7/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-15T11:49:42Z",
        "updated_at": "2023-05-15T16:42:42Z",
        "closed_at": "2023-05-15T14:54:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4723",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4723",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4723.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4723.patch",
            "merged_at": "2023-05-15T14:54:08Z"
        },
        "body": "Instead of halting the entire program if this tool encounters an error, it should pass the error back to the agent to decide what to do.\r\nNote: I would like credit (this github account) if this gets merged. thanks :)\r\n\r\nThis may be best suited for @vowelparrot to review.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4723/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4723/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4722",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4722/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4722/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4722/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4722",
        "id": 1709924459,
        "node_id": "I_kwDOIPDwls5l62Br",
        "number": 4722,
        "title": "ConversationalRetrievalChain doesn't work with memory",
        "user": {
            "login": "DhavalThkkar",
            "id": 16734921,
            "node_id": "MDQ6VXNlcjE2NzM0OTIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/16734921?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DhavalThkkar",
            "html_url": "https://github.com/DhavalThkkar",
            "followers_url": "https://api.github.com/users/DhavalThkkar/followers",
            "following_url": "https://api.github.com/users/DhavalThkkar/following{/other_user}",
            "gists_url": "https://api.github.com/users/DhavalThkkar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DhavalThkkar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DhavalThkkar/subscriptions",
            "organizations_url": "https://api.github.com/users/DhavalThkkar/orgs",
            "repos_url": "https://api.github.com/users/DhavalThkkar/repos",
            "events_url": "https://api.github.com/users/DhavalThkkar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DhavalThkkar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-05-15T11:46:00Z",
        "updated_at": "2023-09-28T16:06:54Z",
        "closed_at": "2023-09-28T16:06:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n```\r\nlangchain version==0.0.169\r\npython=3.10.10\r\nplatform=dev_containers\r\n```\r\n\r\nThe code given below is not able to utilise memory for answering questions with references\n\n### Who can help?\n\n@hwchase17 \r\n@agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [X] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nUse the following code with the necessary changes on your end to replicate:\r\n```\r\nfrom dotenv import load_dotenv, find_dotenv\r\nfrom qdrant_client import QdrantClient\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.vectorstores import Qdrant\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.memory import ConversationBufferMemory, RedisChatMessageHistory\r\n\r\nimport os\r\nfrom loguru import logger\r\n\r\nimport redis\r\n\r\n# Load environment variables from .env file\r\nload_dotenv(find_dotenv(\"../app/.env\"))\r\nurl = os.environ.get(\"QDRANT_URL\")\r\ncollection_name = os.environ.get(\"QDRANT_COLLECTION_NAME\")\r\nopenai_api_key = os.environ.get(\"OPENAI_API_KEY\")\r\nredis_host = os.environ.get(\"REDIS_HOST\")\r\nredis_port = os.environ.get(\"REDIS_PORT\")\r\n\r\n# Initialize Qdrant client and vector database\r\nif url is not None and collection_name is not None:\r\n    client = QdrantClient(url=url, prefer_grpc=True)\r\n    embeddings = OpenAIEmbeddings(openai_api_key=openai_api_key)\r\n    vectordb = Qdrant(client, collection_name, embeddings.embed_query)\r\nelse:\r\n    logger.error(\"Qdrant URL or Collection Name not set in environment variables\")\r\n\r\n# Initialize the LLM\r\nif openai_api_key is not None:\r\n    llm = ChatOpenAI(openai_api_key=openai_api_key, temperature=0, model_name=\"gpt-3.5-turbo\")\r\nelse:\r\n    logger.error(\"OpenAI API key not set in environment variables\")\r\n\r\nfrom langchain.memory import ConversationBufferMemory\r\nmemory = ConversationBufferMemory(\r\n    memory_key=\"chat_history\",\r\n    return_messages=True,\r\n    output_key=\"answer\"\r\n)\r\n\r\ndef get_chat_history(inputs) -> str:\r\n    res = []\r\n    for message in inputs:\r\n        if isinstance(message, dict) and \"content\" in message:\r\n            res.append(message[\"content\"])\r\n    return \"\\n\".join(res)\r\n\r\nfrom langchain.prompts import PromptTemplate\r\n\r\ntemplate = \"\"\"Answer the question in your own words as truthfully as possible from the context given to you.\r\nIf you do not know the answer to the question, simply respond with \"I don't know. Can you ask another question\".\r\nIf questions are asked where there is no relevant context available, simply respond with \"I don't know. Please ask a question relevant to the documents\"\r\nContext: {context}\r\n\r\n\r\n{chat_history}\r\nHuman: {question}\r\nAssistant:\"\"\"\r\n\r\nprompt = PromptTemplate(\r\n    input_variables=[\"context\", \"chat_history\", \"question\"], template=template\r\n)\r\n\r\n# Create the custom chain\r\nif llm is not None and vectordb is not None:\r\n    chain = ConversationalRetrievalChain.from_llm(\r\n        llm=llm, retriever=vectordb.as_retriever(), memory=memory,\r\n        get_chat_history=get_chat_history, return_source_documents=True,\r\n        combine_docs_chain_kwargs={'prompt': prompt})\r\nelse:\r\n    logger.error(\"LLM or Vector Database not initialized\")\r\n\r\n# Initialize Redis connection\r\nif redis_host is not None and redis_port is not None:\r\n    redis_client = redis.Redis(host=redis_host, port=redis_port)\r\nelse:\r\n    logger.error(\"Redis host or port not set in environment variables\")\r\n\r\nsession_id = \"sample_id\"\r\n# Retrieve chat history for session from Redis\r\nchat_history = redis_client.get(session_id)\r\nif chat_history is None:\r\n    # If chat history does not exist, create a new one\r\n    chat_history = RedisChatMessageHistory(session_id, url=f\"redis://{redis_host}:{redis_port}\")\r\nelse:\r\n    # If chat history exists, deserialize it from Redis\r\n    chat_history = RedisChatMessageHistory.deserialize(chat_history, url=f\"redis://{redis_host}:{redis_port}\")\r\n\r\n# Retrieve answer from chain\r\nchain({\"question\": \"Who is Harry potter?\", \"chat_history\": chat_history.messages})\r\nchain({\"question\": \"What are his qualities?\", \"chat_history\": chat_history.messages})\r\n\r\n```\n\n### Expected behavior\n\n`What are his qualities?` should return Harry Potter's qualities and not `I don't know. Please ask a question relevant to the documents.`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4722/reactions",
            "total_count": 9,
            "+1": 9,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4722/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4721",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4721/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4721/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4721/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4721",
        "id": 1709909759,
        "node_id": "PR_kwDOIPDwls5QgQlt",
        "number": 4721,
        "title": "Add summarization task type for HuggingFace APIs",
        "user": {
            "login": "whuwxl",
            "id": 1821371,
            "node_id": "MDQ6VXNlcjE4MjEzNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1821371?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/whuwxl",
            "html_url": "https://github.com/whuwxl",
            "followers_url": "https://api.github.com/users/whuwxl/followers",
            "following_url": "https://api.github.com/users/whuwxl/following{/other_user}",
            "gists_url": "https://api.github.com/users/whuwxl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/whuwxl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/whuwxl/subscriptions",
            "organizations_url": "https://api.github.com/users/whuwxl/orgs",
            "repos_url": "https://api.github.com/users/whuwxl/repos",
            "events_url": "https://api.github.com/users/whuwxl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/whuwxl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T11:36:35Z",
        "updated_at": "2023-05-15T23:26:17Z",
        "closed_at": "2023-05-15T23:26:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4721",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4721",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4721.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4721.patch",
            "merged_at": "2023-05-15T23:26:17Z"
        },
        "body": "# Add summarization task type for HuggingFace APIs\r\n\r\nAdd summarization task type for HuggingFace APIs.\r\nThis task type is described by [HuggingFace inference API](https://huggingface.co/docs/api-inference/detailed_parameters#summarization-task)\r\n\r\nMy project utilizes LangChain to connect multiple LLMs, including various HuggingFace models that support the summarization task. Integrating this task type is highly convenient and beneficial.\r\n\r\nFixes #4720\r\n\r\n## Who can review?\r\n\r\nI guess: @hwchase17 @agola11 @dev2049\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4721/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4721/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4720",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4720/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4720/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4720/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4720",
        "id": 1709886048,
        "node_id": "I_kwDOIPDwls5l6spg",
        "number": 4720,
        "title": "Add summarization task type for HuggingFace APIs",
        "user": {
            "login": "whuwxl",
            "id": 1821371,
            "node_id": "MDQ6VXNlcjE4MjEzNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1821371?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/whuwxl",
            "html_url": "https://github.com/whuwxl",
            "followers_url": "https://api.github.com/users/whuwxl/followers",
            "following_url": "https://api.github.com/users/whuwxl/following{/other_user}",
            "gists_url": "https://api.github.com/users/whuwxl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/whuwxl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/whuwxl/subscriptions",
            "organizations_url": "https://api.github.com/users/whuwxl/orgs",
            "repos_url": "https://api.github.com/users/whuwxl/repos",
            "events_url": "https://api.github.com/users/whuwxl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/whuwxl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T11:23:49Z",
        "updated_at": "2023-05-15T23:26:20Z",
        "closed_at": "2023-05-15T23:26:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nAdd summarization task type for HuggingFace APIs.\r\nThis task type is described by [HuggingFace inference API](https://huggingface.co/docs/api-inference/detailed_parameters#summarization-task)\n\n### Motivation\n\nMy project utilizes LangChain to connect multiple LLMs, including various HuggingFace models that support the summarization task. Integrating this task type is highly convenient and beneficial.\n\n### Your contribution\n\nI will submit a PR.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4720/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4720/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4719",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4719/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4719/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4719/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4719",
        "id": 1709864344,
        "node_id": "PR_kwDOIPDwls5QgGgK",
        "number": 4719,
        "title": "Bibtex integration for document loader and retriever",
        "user": {
            "login": "wavefrontshaping",
            "id": 22410786,
            "node_id": "MDQ6VXNlcjIyNDEwNzg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/22410786?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wavefrontshaping",
            "html_url": "https://github.com/wavefrontshaping",
            "followers_url": "https://api.github.com/users/wavefrontshaping/followers",
            "following_url": "https://api.github.com/users/wavefrontshaping/following{/other_user}",
            "gists_url": "https://api.github.com/users/wavefrontshaping/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wavefrontshaping/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wavefrontshaping/subscriptions",
            "organizations_url": "https://api.github.com/users/wavefrontshaping/orgs",
            "repos_url": "https://api.github.com/users/wavefrontshaping/repos",
            "events_url": "https://api.github.com/users/wavefrontshaping/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wavefrontshaping/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5463330795,
                "node_id": "LA_kwDOIPDwls8AAAABRaPP6w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20test",
                "name": "needs test",
                "color": "E99695",
                "default": false,
                "description": "PR needs to be updated with tests"
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-05-15T11:09:33Z",
        "updated_at": "2023-05-23T16:14:13Z",
        "closed_at": "2023-05-23T16:14:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4719",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4719",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4719.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4719.patch",
            "merged_at": null
        },
        "body": "# Bibtex integration\r\n\r\nWrap bibtexparser to retrieve a list of docs from a bibtex file.\r\n* Get the metadata from the bibtex entries\r\n* `page_content` get from the local pdf referenced in the `file` field of the bibtex entry using `pymupdf`\r\n* If no valid pdf file, `page_content` set to the `abstract` field of the bibtex entry\r\n* Support Zotero flavour using regex to get the file path\r\n* Added usage example in `docs/modules/indexes/document_loaders/examples/bibtex.ipynb`\r\n\r\n## Who can review?\r\n\r\nMy best guess: @eyurtsev, @dev2049\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4719/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4719/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4718",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4718/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4718/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4718/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4718",
        "id": 1709831906,
        "node_id": "I_kwDOIPDwls5l6fbi",
        "number": 4718,
        "title": "Qdrant filtering methods",
        "user": {
            "login": "dagthomas",
            "id": 4311672,
            "node_id": "MDQ6VXNlcjQzMTE2NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4311672?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dagthomas",
            "html_url": "https://github.com/dagthomas",
            "followers_url": "https://api.github.com/users/dagthomas/followers",
            "following_url": "https://api.github.com/users/dagthomas/following{/other_user}",
            "gists_url": "https://api.github.com/users/dagthomas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dagthomas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dagthomas/subscriptions",
            "organizations_url": "https://api.github.com/users/dagthomas/orgs",
            "repos_url": "https://api.github.com/users/dagthomas/repos",
            "events_url": "https://api.github.com/users/dagthomas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dagthomas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-15T10:49:29Z",
        "updated_at": "2023-09-15T22:12:57Z",
        "closed_at": "2023-09-12T16:15:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThe qdrant vector store has \"must\" in filter, is it possible to add \"must_not\" and/or \"should\" as well? \r\n\r\nRef: https://qdrant.tech/documentation/filtering/\n\n### Motivation\n\nHaving a filter is really nice, but its hard to use row level authorization without \"must_not\" \r\n\r\nSo we can say \"must\" include ID and \"must_not\" include ID2\r\n\r\nTo be able to filter correctly\n\n### Your contribution\n\nI am a front-end developer, and hoping someone with python competance can handle this.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4718/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4718/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4717",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4717/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4717/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4717/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4717",
        "id": 1709788758,
        "node_id": "PR_kwDOIPDwls5Qf14v",
        "number": 4717,
        "title": "fixed on_llm issue",
        "user": {
            "login": "bjk95",
            "id": 41258773,
            "node_id": "MDQ6VXNlcjQxMjU4Nzcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/41258773?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bjk95",
            "html_url": "https://github.com/bjk95",
            "followers_url": "https://api.github.com/users/bjk95/followers",
            "following_url": "https://api.github.com/users/bjk95/following{/other_user}",
            "gists_url": "https://api.github.com/users/bjk95/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bjk95/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bjk95/subscriptions",
            "organizations_url": "https://api.github.com/users/bjk95/orgs",
            "repos_url": "https://api.github.com/users/bjk95/repos",
            "events_url": "https://api.github.com/users/bjk95/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bjk95/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T10:24:20Z",
        "updated_at": "2023-05-16T01:36:22Z",
        "closed_at": "2023-05-16T01:36:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4717",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4717",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4717.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4717.patch",
            "merged_at": "2023-05-16T01:36:22Z"
        },
        "body": "#  object has no attribute 'on_llm'\r\n\r\n\r\nFixes #4714 \r\n\r\n\r\n@hwchase17 @agola1 @dev2049\r\n        \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4717/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4717/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4716",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4716/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4716/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4716/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4716",
        "id": 1709729606,
        "node_id": "I_kwDOIPDwls5l6GdG",
        "number": 4716,
        "title": "Issue: Is it possible to add system message with the prompt?",
        "user": {
            "login": "pelyhe",
            "id": 75569619,
            "node_id": "MDQ6VXNlcjc1NTY5NjE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/75569619?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pelyhe",
            "html_url": "https://github.com/pelyhe",
            "followers_url": "https://api.github.com/users/pelyhe/followers",
            "following_url": "https://api.github.com/users/pelyhe/following{/other_user}",
            "gists_url": "https://api.github.com/users/pelyhe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pelyhe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pelyhe/subscriptions",
            "organizations_url": "https://api.github.com/users/pelyhe/orgs",
            "repos_url": "https://api.github.com/users/pelyhe/repos",
            "events_url": "https://api.github.com/users/pelyhe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pelyhe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-15T09:51:06Z",
        "updated_at": "2023-09-10T16:17:39Z",
        "closed_at": "2023-09-10T16:17:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI created an AgentExecutor with the ConversationalChatAgent and I could pass a system message as I initialize the agent executor. Is it possible to add system messages to individual prompts, not just one in the beginning? My code:\r\n\r\n```\r\nfrom langchain import PromptTemplate\r\nfrom langchain.agents import ConversationalChatAgent, Tool, AgentExecutor\r\nimport pickle\r\nimport os\r\nimport datetime\r\nimport logging\r\n# from controllers.user_controller import UserController\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.document_loaders import DirectoryLoader\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\n# from langchain.vectorstores import FAISS\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.chains import RetrievalQA\r\n\r\nclass ChatController(object):\r\n    def __init__(self):\r\n        self._create_chat_agent()\r\n\r\n    def _create_chat_agent(self):\r\n\r\n        self.llm = OpenAI(temperature=0, top_p=0.2, presence_penalty=0.4, frequency_penalty=0.2)\r\n        embeddings = OpenAIEmbeddings()\r\n        persist_directory = 'myvectordb'\r\n        vectorstore = Chroma(persist_directory=persist_directory, embedding_function = embeddings)\r\n\r\n\r\n        prompt_template = \"\"\"If the context is not relevant, \r\n        please answer the question by using your own knowledge about the topic\r\n        \r\n        {context}\r\n        \r\n        Question: {question}\r\n        \"\"\"\r\n\r\n        PROMPT = PromptTemplate(\r\n            template=prompt_template, input_variables=[\"context\", \"question\"]\r\n        )\r\n\r\n        chain_type_kwargs = {\"prompt\": PROMPT}\r\n        # Initialise Langchain - QA chain\r\n        qa = RetrievalQA.from_chain_type(llm=self.llm, \r\n                                         chain_type=\"stuff\", \r\n                                         retriever=vectorstore.as_retriever(), \r\n                                         chain_type_kwargs=chain_type_kwargs)\r\n\r\n        tools = [\r\n            Tool(\r\n                name=\"Document tool\",\r\n                func=qa.run,\r\n                description=\"useful for when you need to answer questions.\"\r\n            ),\r\n        ]\r\n\r\n        system_msg = \"You are a helpful assistant.\"\r\n\r\n        agent = ConversationalChatAgent.from_llm_and_tools(\r\n            llm=self.llm,\r\n            tools=tools,\r\n            system_message=system_msg\r\n        )\r\n\r\n        self.chat_agent = AgentExecutor.from_agent_and_tools(\r\n            agent=agent, tools=tools, verbose=True, memory=ConversationBufferMemory(memory_key=\"chat_history\", \r\n                                                                                    return_messages=True)\r\n        )\r\n\r\n    def askAI(self, prompt: str):\r\n        response = self.chat_agent.run(input=prompt)\r\n\r\n        return {\"answer\": response}\r\n```\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4716/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4716/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4715",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4715/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4715/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4715/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4715",
        "id": 1709434878,
        "node_id": "I_kwDOIPDwls5l4-f-",
        "number": 4715,
        "title": "Streaming Responses As Ouput Using FastAPI Support",
        "user": {
            "login": "hussamsayeed",
            "id": 46478199,
            "node_id": "MDQ6VXNlcjQ2NDc4MTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/46478199?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hussamsayeed",
            "html_url": "https://github.com/hussamsayeed",
            "followers_url": "https://api.github.com/users/hussamsayeed/followers",
            "following_url": "https://api.github.com/users/hussamsayeed/following{/other_user}",
            "gists_url": "https://api.github.com/users/hussamsayeed/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hussamsayeed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hussamsayeed/subscriptions",
            "organizations_url": "https://api.github.com/users/hussamsayeed/orgs",
            "repos_url": "https://api.github.com/users/hussamsayeed/repos",
            "events_url": "https://api.github.com/users/hussamsayeed/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hussamsayeed/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 16,
        "created_at": "2023-05-15T06:56:02Z",
        "updated_at": "2023-09-30T16:07:19Z",
        "closed_at": "2023-09-30T16:07:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nRight now, streaming in LLM's are can be seen in stdout in terminals but not as output responses. I'm using conversation chain where i see my output in the terminal as streaming but not while return the output through API.\n\n### Motivation\n\nResponses may get started typing and the user may have some patience for his/her query. because if the prompt, context is lengthier there is a delay in response too. Above implementation can helps\n\n### Your contribution\n\n-",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4715/reactions",
            "total_count": 10,
            "+1": 10,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4715/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4714",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4714/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4714/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4714/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4714",
        "id": 1709405469,
        "node_id": "I_kwDOIPDwls5l43Ud",
        "number": 4714,
        "title": "Error in on_llm callback: 'AsyncIteratorCallbackHandler' object has no attribute 'on_llm'",
        "user": {
            "login": "princelai",
            "id": 508885,
            "node_id": "MDQ6VXNlcjUwODg4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/508885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/princelai",
            "html_url": "https://github.com/princelai",
            "followers_url": "https://api.github.com/users/princelai/followers",
            "following_url": "https://api.github.com/users/princelai/following{/other_user}",
            "gists_url": "https://api.github.com/users/princelai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/princelai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/princelai/subscriptions",
            "organizations_url": "https://api.github.com/users/princelai/orgs",
            "repos_url": "https://api.github.com/users/princelai/repos",
            "events_url": "https://api.github.com/users/princelai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/princelai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-15T06:30:00Z",
        "updated_at": "2023-05-16T01:36:23Z",
        "closed_at": "2023-05-16T01:36:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain version:0.0.168\r\npython version 3.10\n\n### Who can help?\n\n@agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [X] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nWhen using the RetrievalQA chain, an error message \"Error in on_llm callback: 'AsyncIteratorCallbackHandler' object has no attribute 'on_llm'\"\r\n\r\nThis code can run at version 0.0.164\r\n\r\n```python\r\n\r\nclass Chain:\r\n    def __init__(self):\r\n        self.cb_mngr_stdout = AsyncCallbackManager([StreamingStdOutCallbackHandler()])\r\n        self.cb_mngr_aiter = AsyncCallbackManager([AsyncIteratorCallbackHandler()])\r\n        self.qa_stream = None\r\n        self.qa = None\r\n\r\n        self.make_chain()\r\n\r\n    def make_chain(self):\r\n        chain_type_kwargs = {\"prompt\": MyPrompt.get_retrieval_prompt()}\r\n        qa = RetrievalQA.from_chain_type(llm=ChatOpenAI(model_name=\"gpt-3.5-turbo\", max_tokens=1500, temperature=.1), chain_type=\"stuff\",\r\n                                         retriever=Retrieval.vectordb.as_retriever(search_kwargs={\"k\": Retrieval.context_num}),\r\n                                         chain_type_kwargs=chain_type_kwargs, return_source_documents=True)\r\n        qa_stream = RetrievalQA.from_chain_type(llm=ChatOpenAI(model_name=\"gpt-3.5-turbo\", max_tokens=1500, temperature=.1,\r\n                                                               streaming=True, callback_manager=self.cb_mngr_aiter),\r\n                                                chain_type=\"stuff\", retriever=Retrieval.vectordb.as_retriever(search_kwargs={\"k\": Retrieval.context_num}),\r\n                                                chain_type_kwargs=chain_type_kwargs, return_source_documents=True)\r\n        self.qa = qa\r\n        self.qa_stream = qa_stream\r\n\r\n```\r\n\r\ncall function\r\n```python\r\nresp = await chains.qa.acall({\"query\": \"xxxxxxx\"}) # no problem\r\nresp = await chains.qa_stream.acall({\"query\": \"xxxxxxxx\"}) # error\r\n```\n\n### Expected behavior\n\nself.qa_stream return result like self.qa,or like langchain version 0.0.164",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4714/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4714/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4713",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4713/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4713/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4713/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4713",
        "id": 1709360279,
        "node_id": "PR_kwDOIPDwls5QeZlQ",
        "number": 4713,
        "title": "Add from_file method to message prompt template",
        "user": {
            "login": "charosen",
            "id": 12933334,
            "node_id": "MDQ6VXNlcjEyOTMzMzM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/12933334?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charosen",
            "html_url": "https://github.com/charosen",
            "followers_url": "https://api.github.com/users/charosen/followers",
            "following_url": "https://api.github.com/users/charosen/following{/other_user}",
            "gists_url": "https://api.github.com/users/charosen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charosen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charosen/subscriptions",
            "organizations_url": "https://api.github.com/users/charosen/orgs",
            "repos_url": "https://api.github.com/users/charosen/repos",
            "events_url": "https://api.github.com/users/charosen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charosen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-15T05:48:43Z",
        "updated_at": "2023-05-16T23:25:17Z",
        "closed_at": "2023-05-16T23:25:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4713",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4713",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4713.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4713.patch",
            "merged_at": "2023-05-16T23:25:17Z"
        },
        "body": "# Add from_file method to message prompt template\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\n**Feature**: This PR adds `from_file` class method to BaseStringMessagePromptTemplate. This is useful to help user to create message prompt templates directly from template files, including `ChatMessagePromptTemplate`, `HumanMessagePromptTemplate`, `AIMessagePromptTemplate` & `SystemMessagePromptTemplate`.\r\n\r\n**Tests**: Unit tests have been added in this PR.\r\n\r\n\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n\r\n@hwchase17 @agola11 please have a look, thanks\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4713/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4713/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4712",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4712/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4712/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4712/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4712",
        "id": 1709359146,
        "node_id": "PR_kwDOIPDwls5QeZUw",
        "number": 4712,
        "title": "modify class ElasticVectorSearch constructor",
        "user": {
            "login": "zhou-yong-long",
            "id": 54322222,
            "node_id": "MDQ6VXNlcjU0MzIyMjIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/54322222?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhou-yong-long",
            "html_url": "https://github.com/zhou-yong-long",
            "followers_url": "https://api.github.com/users/zhou-yong-long/followers",
            "following_url": "https://api.github.com/users/zhou-yong-long/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhou-yong-long/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhou-yong-long/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhou-yong-long/subscriptions",
            "organizations_url": "https://api.github.com/users/zhou-yong-long/orgs",
            "repos_url": "https://api.github.com/users/zhou-yong-long/repos",
            "events_url": "https://api.github.com/users/zhou-yong-long/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhou-yong-long/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-15T05:47:59Z",
        "updated_at": "2023-08-11T22:04:58Z",
        "closed_at": "2023-08-11T22:04:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4712",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4712",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4712.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4712.patch",
            "merged_at": null
        },
        "body": "The original constructor can only fill in urls, which is not enough.\r\n\r\nThis PR mainly changes the constructor of the object, because previously it was only possible to fill in urls and not support any more ways to use connections.\r\n<img width=\"623\" alt=\"image\" src=\"https://github.com/zhou-yong-long/langchain/assets/54322222/1217d47a-0f90-4d77-bcfe-91568adf1e4d\">\r\n\r\n@dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4712/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4712/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4711",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4711/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4711/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4711/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4711",
        "id": 1709341947,
        "node_id": "I_kwDOIPDwls5l4nz7",
        "number": 4711,
        "title": "Support for user parameter in OpenAI Embeddings Create class, which exists in OpenAI API",
        "user": {
            "login": "sujithjoseph",
            "id": 4584598,
            "node_id": "MDQ6VXNlcjQ1ODQ1OTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4584598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sujithjoseph",
            "html_url": "https://github.com/sujithjoseph",
            "followers_url": "https://api.github.com/users/sujithjoseph/followers",
            "following_url": "https://api.github.com/users/sujithjoseph/following{/other_user}",
            "gists_url": "https://api.github.com/users/sujithjoseph/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sujithjoseph/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sujithjoseph/subscriptions",
            "organizations_url": "https://api.github.com/users/sujithjoseph/orgs",
            "repos_url": "https://api.github.com/users/sujithjoseph/repos",
            "events_url": "https://api.github.com/users/sujithjoseph/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sujithjoseph/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-15T05:26:16Z",
        "updated_at": "2023-12-09T16:06:51Z",
        "closed_at": "2023-12-09T16:06:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nhttps://platform.openai.com/docs/api-reference/embeddings/create?lang=python supports a user parameter, where we can pass user details to the openai api. https://github.com/hwchase17/langchain/blob/master/langchain/embeddings/openai.py#L66 can take a user parameter (optional) , which needs to be passed via embed_with_retry function. \n\n### Motivation\n\nWe use it to track user details - could be appkey etc. \n\n### Your contribution\n\nYes, can create a PR. Please let me know process .",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4711/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4711/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4710",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4710/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4710/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4710/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4710",
        "id": 1709303133,
        "node_id": "I_kwDOIPDwls5l4eVd",
        "number": 4710,
        "title": "How to use return_source_documents to also extract similarity score??",
        "user": {
            "login": "virdi16",
            "id": 108087527,
            "node_id": "U_kgDOBnFI5w",
            "avatar_url": "https://avatars.githubusercontent.com/u/108087527?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/virdi16",
            "html_url": "https://github.com/virdi16",
            "followers_url": "https://api.github.com/users/virdi16/followers",
            "following_url": "https://api.github.com/users/virdi16/following{/other_user}",
            "gists_url": "https://api.github.com/users/virdi16/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/virdi16/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/virdi16/subscriptions",
            "organizations_url": "https://api.github.com/users/virdi16/orgs",
            "repos_url": "https://api.github.com/users/virdi16/repos",
            "events_url": "https://api.github.com/users/virdi16/events{/privacy}",
            "received_events_url": "https://api.github.com/users/virdi16/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-05-15T04:44:31Z",
        "updated_at": "2023-11-28T16:40:38Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I was using RetrievalQA.from_chain_type, to which I had passed parameters as:-\n\n`RetrievalQA.from_chain_type(llm, chain_type, retriever = chroma_db.as_retriever(), return_source_documents = True)`\n\nHere, \nreturn_source_documents = True, only returns the chunks from which it generated the response. _Is there a way in which I can get similarity score also returned for matched chunks_ (say if there are 4 chunks it found most relevant to query, how to get scores in decreasing order based on similarity)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4710/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 3,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4710/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4709",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4709/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4709/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4709/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4709",
        "id": 1709273563,
        "node_id": "PR_kwDOIPDwls5QeG_w",
        "number": 4709,
        "title": "changed cohere.py to update the default model of embedding",
        "user": {
            "login": "rajib76",
            "id": 16340036,
            "node_id": "MDQ6VXNlcjE2MzQwMDM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16340036?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rajib76",
            "html_url": "https://github.com/rajib76",
            "followers_url": "https://api.github.com/users/rajib76/followers",
            "following_url": "https://api.github.com/users/rajib76/following{/other_user}",
            "gists_url": "https://api.github.com/users/rajib76/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rajib76/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rajib76/subscriptions",
            "organizations_url": "https://api.github.com/users/rajib76/orgs",
            "repos_url": "https://api.github.com/users/rajib76/repos",
            "events_url": "https://api.github.com/users/rajib76/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rajib76/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-15T04:02:06Z",
        "updated_at": "2023-05-16T23:27:23Z",
        "closed_at": "2023-05-16T23:27:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4709",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4709",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4709.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4709.patch",
            "merged_at": "2023-05-16T23:27:23Z"
        },
        "body": "# The cohere embedding model do not use large, small. It is deprecated. Changed the modules default model\r\n\r\n<!--\r\nI have added the solution to issue#4694\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # 4694\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4709/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4709/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4707",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4707/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4707/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4707/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4707",
        "id": 1709255125,
        "node_id": "PR_kwDOIPDwls5QeDPj",
        "number": 4707,
        "title": "Harrison/add top k",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-15T03:31:23Z",
        "updated_at": "2023-05-15T16:09:23Z",
        "closed_at": "2023-05-15T16:09:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4707",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4707",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4707.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4707.patch",
            "merged_at": "2023-05-15T16:09:22Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4707/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4707/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4706",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4706/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4706/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4706/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4706",
        "id": 1709244168,
        "node_id": "PR_kwDOIPDwls5QeA6a",
        "number": 4706,
        "title": "Update the milvus example",
        "user": {
            "login": "shiyu22",
            "id": 53459423,
            "node_id": "MDQ6VXNlcjUzNDU5NDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/53459423?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shiyu22",
            "html_url": "https://github.com/shiyu22",
            "followers_url": "https://api.github.com/users/shiyu22/followers",
            "following_url": "https://api.github.com/users/shiyu22/following{/other_user}",
            "gists_url": "https://api.github.com/users/shiyu22/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shiyu22/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shiyu22/subscriptions",
            "organizations_url": "https://api.github.com/users/shiyu22/orgs",
            "repos_url": "https://api.github.com/users/shiyu22/repos",
            "events_url": "https://api.github.com/users/shiyu22/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shiyu22/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-15T03:18:33Z",
        "updated_at": "2023-05-15T23:16:57Z",
        "closed_at": "2023-05-15T23:16:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4706",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4706",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4706.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4706.patch",
            "merged_at": "2023-05-15T23:16:57Z"
        },
        "body": "# Fix issue when running example\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\n- add the query content\r\n- update the `user` parameter with Zilliz\r\n\r\n\r\n\r\n## Who can review?\r\n\r\n- VectorStores @dev2049\r\n       \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4706/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4706/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4705",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4705/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4705/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4705/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4705",
        "id": 1709223812,
        "node_id": "PR_kwDOIPDwls5Qd8iU",
        "number": 4705,
        "title": "Harrison/pdfplumber",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T02:56:30Z",
        "updated_at": "2023-05-15T02:58:13Z",
        "closed_at": "2023-05-15T02:58:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4705",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4705",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4705.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4705.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4705/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4705/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4704",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4704/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4704/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4704/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4704",
        "id": 1709201201,
        "node_id": "PR_kwDOIPDwls5Qd38Y",
        "number": 4704,
        "title": "Harrison/sitemap local",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T02:15:18Z",
        "updated_at": "2023-05-15T05:04:40Z",
        "closed_at": "2023-05-15T05:04:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4704",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4704",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4704.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4704.patch",
            "merged_at": "2023-05-15T05:04:39Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4704/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4704/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4703",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4703/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4703/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4703/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4703",
        "id": 1709196707,
        "node_id": "I_kwDOIPDwls5l4EWj",
        "number": 4703,
        "title": "DOC: SQL Chain Example - Customise Prompt",
        "user": {
            "login": "Data-drone",
            "id": 4410493,
            "node_id": "MDQ6VXNlcjQ0MTA0OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4410493?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Data-drone",
            "html_url": "https://github.com/Data-drone",
            "followers_url": "https://api.github.com/users/Data-drone/followers",
            "following_url": "https://api.github.com/users/Data-drone/following{/other_user}",
            "gists_url": "https://api.github.com/users/Data-drone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Data-drone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Data-drone/subscriptions",
            "organizations_url": "https://api.github.com/users/Data-drone/orgs",
            "repos_url": "https://api.github.com/users/Data-drone/repos",
            "events_url": "https://api.github.com/users/Data-drone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Data-drone/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 17,
        "created_at": "2023-05-15T02:10:11Z",
        "updated_at": "2023-10-19T16:08:23Z",
        "closed_at": "2023-10-19T16:08:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nhttps://python.langchain.com/en/latest/modules/chains/examples/sqlite.html#customize-prompt\r\n\r\nWhen looking at the Cutomize prompt example, the subsequent `db_chain.run()` command is just like the pre-prompt chain.\r\n\r\nIt is currently like:\r\n\r\n`db_chain.run(\"How many employees are there in the foobar table?\")`\r\n\r\nShouldn't it be something like:\r\n\r\n`db_chain.run({'input': \"How many employees are there in the foobar table?\", 'table':'foobar', 'dialect':'testing'})` \r\n\r\nSince we added the prompt to the db_chain\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4703/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4703/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4702",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4702/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4702/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4702/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4702",
        "id": 1709188074,
        "node_id": "PR_kwDOIPDwls5Qd1Ag",
        "number": 4702,
        "title": "Support Databricks in SQLDatabase",
        "user": {
            "login": "gengliangwang",
            "id": 1097932,
            "node_id": "MDQ6VXNlcjEwOTc5MzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1097932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gengliangwang",
            "html_url": "https://github.com/gengliangwang",
            "followers_url": "https://api.github.com/users/gengliangwang/followers",
            "following_url": "https://api.github.com/users/gengliangwang/following{/other_user}",
            "gists_url": "https://api.github.com/users/gengliangwang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gengliangwang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gengliangwang/subscriptions",
            "organizations_url": "https://api.github.com/users/gengliangwang/orgs",
            "repos_url": "https://api.github.com/users/gengliangwang/repos",
            "events_url": "https://api.github.com/users/gengliangwang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gengliangwang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-15T02:03:20Z",
        "updated_at": "2023-05-19T07:42:07Z",
        "closed_at": "2023-05-19T07:42:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4702",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4702",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4702.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4702.patch",
            "merged_at": "2023-05-19T07:42:06Z"
        },
        "body": "This PR adds support for Databricks runtime and Databricks SQL by using [Databricks SQL Connector for Python](https://docs.databricks.com/dev-tools/python-sql-connector.html).\r\nAs a cloud data platform, accessing Databricks requires a URL as follows \r\n  `databricks://token:{api_token}@{hostname}?http_path={http_path}&catalog={catalog}&schema={schema}`.  \r\n\r\n **The URL is **complicated** and it may take users a while to figure it out**. Since the fields `api_token`/`hostname`/`http_path` fields are known in the Databricks notebook, I am proposing a new method `from_databricks` to simplify the connection to Databricks.\r\n\r\n## In Databricks Notebook\r\nAfter changes, Databricks users only need to specify the `catalog` and `schema` field when using langchain.\r\n<img width=\"881\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/1097932/984b4c57-4c2d-489d-b060-5f4918ef2f37\">\r\n\r\n## In Jupyter Notebook\r\nThe method can be used on the local setup as well:\r\n<img width=\"678\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/1097932/142e8805-a6ef-4919-b28e-9796ca31ef19\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4702/reactions",
            "total_count": 3,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4702/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4701",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4701/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4701/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4701/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4701",
        "id": 1709185765,
        "node_id": "PR_kwDOIPDwls5Qd0fT",
        "number": 4701,
        "title": "add async default",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T02:01:20Z",
        "updated_at": "2023-05-15T15:57:31Z",
        "closed_at": "2023-05-15T15:57:30Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4701",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4701",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4701.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4701.patch",
            "merged_at": "2023-05-15T15:57:30Z"
        },
        "body": "a spin on https://github.com/hwchase17/langchain/pull/4300/files#diff-4f16071d58cd34fb3ec5cd5089e9dbd6fb06574c25c76b4d573827f8a2f48e96",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4701/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4701/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4700",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4700/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4700/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4700/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4700",
        "id": 1709176343,
        "node_id": "PR_kwDOIPDwls5Qdyay",
        "number": 4700,
        "title": "Update huggingface_tools.ipynb",
        "user": {
            "login": "anamhira47",
            "id": 7093246,
            "node_id": "MDQ6VXNlcjcwOTMyNDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7093246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anamhira47",
            "html_url": "https://github.com/anamhira47",
            "followers_url": "https://api.github.com/users/anamhira47/followers",
            "following_url": "https://api.github.com/users/anamhira47/following{/other_user}",
            "gists_url": "https://api.github.com/users/anamhira47/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anamhira47/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anamhira47/subscriptions",
            "organizations_url": "https://api.github.com/users/anamhira47/orgs",
            "repos_url": "https://api.github.com/users/anamhira47/repos",
            "events_url": "https://api.github.com/users/anamhira47/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anamhira47/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-15T01:51:38Z",
        "updated_at": "2023-05-16T23:28:28Z",
        "closed_at": "2023-05-16T23:28:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4700",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4700",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4700.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4700.patch",
            "merged_at": "2023-05-16T23:28:27Z"
        },
        "body": "Typo in notebook, 'uprade' -> 'upgrade'\r\n\r\n# Typo in HuggingFace_tools documentation\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4700/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4700/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4699",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4699/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4699/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4699/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4699",
        "id": 1709158681,
        "node_id": "PR_kwDOIPDwls5Qduq3",
        "number": 4699,
        "title": "Dev2049/docs edit0",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-15T01:26:05Z",
        "updated_at": "2023-05-15T22:20:38Z",
        "closed_at": "2023-05-15T22:20:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4699",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4699",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4699.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4699.patch",
            "merged_at": "2023-05-15T22:20:37Z"
        },
        "body": "# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4699/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4699/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4698",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4698/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4698/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4698/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4698",
        "id": 1709147370,
        "node_id": "PR_kwDOIPDwls5QdsRp",
        "number": 4698,
        "title": "Harrison/telegram chat loader",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T01:05:42Z",
        "updated_at": "2023-05-15T05:04:28Z",
        "closed_at": "2023-05-15T05:04:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4698",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4698",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4698.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4698.patch",
            "merged_at": "2023-05-15T05:04:27Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4698/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4698/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4697",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4697/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4697/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4697/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4697",
        "id": 1709140210,
        "node_id": "PR_kwDOIPDwls5Qdq1p",
        "number": 4697,
        "title": "Add Patch to stream runs",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-15T00:48:42Z",
        "updated_at": "2023-05-29T20:42:10Z",
        "closed_at": "2023-05-29T20:42:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4697",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4697",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4697.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4697.patch",
            "merged_at": null
        },
        "body": "Enable Create -> Patch flow for real-time tracing",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4697/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4697/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4696",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4696/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4696/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4696/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4696",
        "id": 1709134743,
        "node_id": "PR_kwDOIPDwls5Qdpyy",
        "number": 4696,
        "title": "console callback verbose",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-15T00:32:09Z",
        "updated_at": "2023-05-17T01:28:44Z",
        "closed_at": "2023-05-17T01:28:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4696",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4696",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4696.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4696.patch",
            "merged_at": "2023-05-17T01:28:43Z"
        },
        "body": "add verbose callback\r\n\r\ncan be triggered by\r\n\r\n```\r\nimport langchain\r\nlangchain.debug=True\r\n```\r\n![Screenshot 2023-05-14 at 5 32 02 PM](https://github.com/hwchase17/langchain/assets/11986836/dc3e5f55-1b51-4741-b277-7597dfdca02a)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4696/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4696/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4695",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4695/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4695/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4695/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4695",
        "id": 1709126525,
        "node_id": "PR_kwDOIPDwls5QdoRk",
        "number": 4695,
        "title": "Add Server Command",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T00:15:51Z",
        "updated_at": "2023-05-16T00:44:31Z",
        "closed_at": "2023-05-16T00:44:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4695",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4695",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4695.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4695.patch",
            "merged_at": "2023-05-16T00:44:30Z"
        },
        "body": "Run v2 server in detached mode to avoid logging to the terminal",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4695/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4695/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4694",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4694/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4694/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4694/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4694",
        "id": 1709123191,
        "node_id": "I_kwDOIPDwls5l3yZ3",
        "number": 4694,
        "title": "Issue: The cohere embedding model has the model defaulted to large. These names are deprecated",
        "user": {
            "login": "rajib76",
            "id": 16340036,
            "node_id": "MDQ6VXNlcjE2MzQwMDM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16340036?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rajib76",
            "html_url": "https://github.com/rajib76",
            "followers_url": "https://api.github.com/users/rajib76/followers",
            "following_url": "https://api.github.com/users/rajib76/following{/other_user}",
            "gists_url": "https://api.github.com/users/rajib76/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rajib76/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rajib76/subscriptions",
            "organizations_url": "https://api.github.com/users/rajib76/orgs",
            "repos_url": "https://api.github.com/users/rajib76/repos",
            "events_url": "https://api.github.com/users/rajib76/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rajib76/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-15T00:09:11Z",
        "updated_at": "2023-05-16T23:27:25Z",
        "closed_at": "2023-05-16T23:27:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nThe embedding models of cohere are \r\n\r\n1. embed-english-light-v2.0\r\n2. embed-english-v2.0\r\n3. embed-multilingual-v2.0\r\n\r\nThe corresponding embedding wrapper in langchain will need to reflect that. Currently it is defaulted to large\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4694/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4694/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4693",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4693/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4693/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4693/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4693",
        "id": 1709108468,
        "node_id": "PR_kwDOIPDwls5QdkuQ",
        "number": 4693,
        "title": "Harrison/datetime parser",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-14T23:19:05Z",
        "updated_at": "2023-05-29T14:52:31Z",
        "closed_at": "2023-05-29T14:52:30Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4693",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4693",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4693.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4693.patch",
            "merged_at": "2023-05-29T14:52:30Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4693/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4693/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4692",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4692/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4692/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4692/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4692",
        "id": 1709106195,
        "node_id": "I_kwDOIPDwls5l3uQT",
        "number": 4692,
        "title": "Ability to get the character or the line and line character positions from a split text",
        "user": {
            "login": "huntrontrakkr",
            "id": 13161355,
            "node_id": "MDQ6VXNlcjEzMTYxMzU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/13161355?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huntrontrakkr",
            "html_url": "https://github.com/huntrontrakkr",
            "followers_url": "https://api.github.com/users/huntrontrakkr/followers",
            "following_url": "https://api.github.com/users/huntrontrakkr/following{/other_user}",
            "gists_url": "https://api.github.com/users/huntrontrakkr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huntrontrakkr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huntrontrakkr/subscriptions",
            "organizations_url": "https://api.github.com/users/huntrontrakkr/orgs",
            "repos_url": "https://api.github.com/users/huntrontrakkr/repos",
            "events_url": "https://api.github.com/users/huntrontrakkr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huntrontrakkr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-14T23:10:03Z",
        "updated_at": "2023-09-10T16:17:45Z",
        "closed_at": "2023-09-10T16:17:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nIt would be nice to have the ability to get the positions of the extracted texts - i.e. the beginning and end (character position) of the split text from the text body, or the line and line character position of the extracted text.\n\n### Motivation\n\nI'm working on a way ingest a code repo into a vector store and link it to a graph database. The line and character position would be incredibly useful in the metadata to interface the two. This could provide a richer context for tracking data positions and could offer mechanisms for testing.\n\n### Your contribution\n\nI'd be happy to submit a PR regarding this if it makes sense to others.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4692/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4692/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4691",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4691/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4691/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4691/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4691",
        "id": 1709105507,
        "node_id": "PR_kwDOIPDwls5QdkLp",
        "number": 4691,
        "title": "Add Environment Info to Run",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-14T23:07:22Z",
        "updated_at": "2023-05-15T15:38:51Z",
        "closed_at": "2023-05-15T15:38:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4691",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4691",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4691.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4691.patch",
            "merged_at": "2023-05-15T15:38:49Z"
        },
        "body": "Store the environment info within the `extra` fields of the Run\r\n\r\n<img width=\"764\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/130414180/3e100bd6-bacb-4dd2-9e39-d54f06831531\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4691/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4691/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4690",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4690/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4690/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4690/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4690",
        "id": 1709102621,
        "node_id": "I_kwDOIPDwls5l3tYd",
        "number": 4690,
        "title": "SQLDatabaseChain did not read PostgreSQL database table information correctly",
        "user": {
            "login": "Chesterguan",
            "id": 31426497,
            "node_id": "MDQ6VXNlcjMxNDI2NDk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/31426497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Chesterguan",
            "html_url": "https://github.com/Chesterguan",
            "followers_url": "https://api.github.com/users/Chesterguan/followers",
            "following_url": "https://api.github.com/users/Chesterguan/following{/other_user}",
            "gists_url": "https://api.github.com/users/Chesterguan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Chesterguan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Chesterguan/subscriptions",
            "organizations_url": "https://api.github.com/users/Chesterguan/orgs",
            "repos_url": "https://api.github.com/users/Chesterguan/repos",
            "events_url": "https://api.github.com/users/Chesterguan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Chesterguan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-14T22:58:23Z",
        "updated_at": "2023-09-28T15:42:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain version: 0.0.168\r\nOS: Mac\r\n\r\n\n\n### Who can help?\n\n@eyurtsev \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nHi, I am trying to play with SQLDatabaseChain and I tried to connect it with the PostgreSQL database. \r\n\r\nI tested with the URL, and it works well with the SQLAlchemy engine and I was able to execute queries successfully. \r\n\r\nHere are my codes to use SQLDatabasechain:\r\n```Python\r\n\r\ndb = SQLDatabase.from_uri(url, \r\n                              sample_rows_in_table_info = 10, \r\n                              )\r\n```\r\nHowever, it keeps showing that there are no tables. I used `db.get_table_info()`, it always return an empty set. \r\n\r\nDo you have any ideas ?\r\n\r\nAppreciate!\n\n### Expected behavior\n\nI expected it can inspect the schema correctly.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4690/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4690/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4689",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4689/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4689/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4689/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4689",
        "id": 1709102187,
        "node_id": "PR_kwDOIPDwls5QdjkH",
        "number": 4689,
        "title": "Harrison/param notion db",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-14T22:56:59Z",
        "updated_at": "2023-05-15T01:26:27Z",
        "closed_at": "2023-05-15T01:26:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4689",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4689",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4689.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4689.patch",
            "merged_at": "2023-05-15T01:26:26Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4689/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4689/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4688",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4688/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4688/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4688/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4688",
        "id": 1709100576,
        "node_id": "PR_kwDOIPDwls5QdjQu",
        "number": 4688,
        "title": "add warning for combined memory",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-14T22:49:24Z",
        "updated_at": "2023-05-15T01:26:18Z",
        "closed_at": "2023-05-15T01:26:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4688",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4688",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4688.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4688.patch",
            "merged_at": "2023-05-15T01:26:17Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4688/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4688/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4687",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4687/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4687/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4687/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4687",
        "id": 1709094382,
        "node_id": "PR_kwDOIPDwls5QdiJs",
        "number": 4687,
        "title": "dont have openai_api_version by default",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-14T22:21:17Z",
        "updated_at": "2023-05-15T16:53:30Z",
        "closed_at": "2023-05-15T01:26:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4687",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4687",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4687.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4687.patch",
            "merged_at": "2023-05-15T01:26:08Z"
        },
        "body": "an alternative to https://github.com/hwchase17/langchain/pull/4234/files",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4687/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4687/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4686",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4686/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4686/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4686/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4686",
        "id": 1709091376,
        "node_id": "PR_kwDOIPDwls5Qdhj2",
        "number": 4686,
        "title": "Harrison/json loader fix",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-14T22:09:19Z",
        "updated_at": "2023-05-15T01:26:00Z",
        "closed_at": "2023-05-15T01:25:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4686",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4686",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4686.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4686.patch",
            "merged_at": "2023-05-15T01:25:59Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4686/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4686/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4685",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4685/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4685/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4685/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4685",
        "id": 1709086617,
        "node_id": "PR_kwDOIPDwls5Qdgo8",
        "number": 4685,
        "title": "Harrison/typing of return",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-14T21:49:01Z",
        "updated_at": "2023-05-15T01:25:51Z",
        "closed_at": "2023-05-15T01:25:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4685",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4685",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4685.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4685.patch",
            "merged_at": "2023-05-15T01:25:51Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4685/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4685/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4684",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4684/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4684/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4684/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4684",
        "id": 1709054913,
        "node_id": "I_kwDOIPDwls5l3hvB",
        "number": 4684,
        "title": "Issue: TypeError: string indices must be integers when retrieving messages from PostgreSQL",
        "user": {
            "login": "lordskyzw",
            "id": 68661064,
            "node_id": "MDQ6VXNlcjY4NjYxMDY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/68661064?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lordskyzw",
            "html_url": "https://github.com/lordskyzw",
            "followers_url": "https://api.github.com/users/lordskyzw/followers",
            "following_url": "https://api.github.com/users/lordskyzw/following{/other_user}",
            "gists_url": "https://api.github.com/users/lordskyzw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lordskyzw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lordskyzw/subscriptions",
            "organizations_url": "https://api.github.com/users/lordskyzw/orgs",
            "repos_url": "https://api.github.com/users/lordskyzw/repos",
            "events_url": "https://api.github.com/users/lordskyzw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lordskyzw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-14T19:53:52Z",
        "updated_at": "2023-12-03T16:07:36Z",
        "closed_at": "2023-12-03T16:07:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI encountered a `TypeError: string indices must be integers` error when using the library to retrieve chat messages from a PostgreSQL database. This error occurs specifically in the `messages_from_dict` function.\r\n\r\nUpon further investigation, it appears that the error arises when trying to access the \"type\" field of a message dictionary. The `messages_from_dict` function is expected to convert a list of dictionaries into a list of `BaseMessage` objects, but it fails to handle the dictionary properly.\r\n\r\nTo reproduce the issue, follow these steps:\r\n1. Set up the library to use a PostgreSQL database as the chat message history storage.\r\n2. Start a conversation and exchange messages.\r\n3. Retrieve the chat history using the `messages` property of the `PostgresChatMessageHistory` class.\r\n\r\nThe error occurs when the `messages` property executes the following code snippet:\r\n\r\n```python\r\nitems = [record[\"message\"] for record in self.cursor.fetchall()]\r\nmessages = messages_from_dict(items)\r\nThe messages_from_dict function attempts to convert each dictionary in the items list to a BaseMessage object. However, it fails to properly handle the dictionary structure, resulting in the TypeError.\r\n\r\n\r\n\r\nEnvironment:\r\n\r\n    Library version: [Specify library version]\r\n    Python version: [Specify Python version]\r\n    PostgreSQL version: [Specify PostgreSQL version]\r\n    Operating system: [Specify operating system]\n\n### Suggestion:\n\nTo resolve this issue, the implementation of the messages_from_dict function needs to be reviewed and updated accordingly. It should correctly handle the structure of each message dictionary and create BaseMessage objects with the expected attributes.\r\n\r\nAdditionally, it would be helpful to provide clearer documentation or examples on how to set up the PostgreSQL chat message history and ensure the expected structure of the messages stored in the message_store table.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4684/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4684/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4683",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4683/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4683/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4683/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4683",
        "id": 1709050595,
        "node_id": "PR_kwDOIPDwls5QdZke",
        "number": 4683,
        "title": "Fixing DeepLake Overwrite Flag",
        "user": {
            "login": "anihamde",
            "id": 4054461,
            "node_id": "MDQ6VXNlcjQwNTQ0NjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4054461?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anihamde",
            "html_url": "https://github.com/anihamde",
            "followers_url": "https://api.github.com/users/anihamde/followers",
            "following_url": "https://api.github.com/users/anihamde/following{/other_user}",
            "gists_url": "https://api.github.com/users/anihamde/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anihamde/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anihamde/subscriptions",
            "organizations_url": "https://api.github.com/users/anihamde/orgs",
            "repos_url": "https://api.github.com/users/anihamde/repos",
            "events_url": "https://api.github.com/users/anihamde/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anihamde/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-14T19:35:59Z",
        "updated_at": "2023-05-16T00:39:17Z",
        "closed_at": "2023-05-16T00:39:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4683",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4683",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4683.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4683.patch",
            "merged_at": "2023-05-16T00:39:16Z"
        },
        "body": "# Fix DeepLake Overwrite Flag Issue\r\n\r\nFixes Issue #4682: essentially, setting overwrite to False in the DeepLake constructor still triggers an overwrite, because the logic is just checking for the presence of \"overwrite\" in kwargs. The fix is simple--just add some checks to inspect if \"overwrite\" in kwargs AND kwargs[\"overwrite\"]==True. \r\n\r\nAdded a new test in tests/integration_tests/vectorstores/test_deeplake.py to reflect the desired behavior.\r\n\r\nTagging @dev2049 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4683/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4683/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4682",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4682/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4682/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4682/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4682",
        "id": 1709045521,
        "node_id": "I_kwDOIPDwls5l3fcR",
        "number": 4682,
        "title": "Setting overwrite to False on DeepLake constructor still overwrites",
        "user": {
            "login": "anihamde",
            "id": 4054461,
            "node_id": "MDQ6VXNlcjQwNTQ0NjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4054461?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anihamde",
            "html_url": "https://github.com/anihamde",
            "followers_url": "https://api.github.com/users/anihamde/followers",
            "following_url": "https://api.github.com/users/anihamde/following{/other_user}",
            "gists_url": "https://api.github.com/users/anihamde/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anihamde/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anihamde/subscriptions",
            "organizations_url": "https://api.github.com/users/anihamde/orgs",
            "repos_url": "https://api.github.com/users/anihamde/repos",
            "events_url": "https://api.github.com/users/anihamde/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anihamde/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-14T19:15:22Z",
        "updated_at": "2023-09-10T16:17:56Z",
        "closed_at": "2023-09-10T16:17:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain 0.0.168, Python 3.11.3\n\n### Who can help?\n\n@anihamde\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\ndb = DeepLake(dataset_path=f\"hub://{username_activeloop}/{lake_name}\", embedding_function=embeddings, overwrite=False)\n\n### Expected behavior\n\nWould expect overwrite to not take place; however, it does. This is easily resolvable, and I'll share a PR to address this shortly.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4682/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4682/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4681",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4681/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4681/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4681/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4681",
        "id": 1709043509,
        "node_id": "I_kwDOIPDwls5l3e81",
        "number": 4681,
        "title": "Add Google PaLM API",
        "user": {
            "login": "yil532",
            "id": 38027529,
            "node_id": "MDQ6VXNlcjM4MDI3NTI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/38027529?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yil532",
            "html_url": "https://github.com/yil532",
            "followers_url": "https://api.github.com/users/yil532/followers",
            "following_url": "https://api.github.com/users/yil532/following{/other_user}",
            "gists_url": "https://api.github.com/users/yil532/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yil532/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yil532/subscriptions",
            "organizations_url": "https://api.github.com/users/yil532/orgs",
            "repos_url": "https://api.github.com/users/yil532/repos",
            "events_url": "https://api.github.com/users/yil532/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yil532/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 19,
        "created_at": "2023-05-14T19:08:05Z",
        "updated_at": "2023-09-24T23:49:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nHi team,\r\n\r\nI am a developer relations engineer working at Google on PaLM API. I want to participate and contribute to adding Google PaLM potentially to LangChain. How is our current dev stage of adding Google PaLM API?\r\n\r\n### Motivation\r\n\r\nBetter user experience with PaLM API :)\r\n\r\n### Your contribution\r\n\r\nStill need discussion, might be PRs, design discussions, or others.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4681/reactions",
            "total_count": 17,
            "+1": 17,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4681/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4680",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4680/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4680/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4680/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4680",
        "id": 1709038597,
        "node_id": "PR_kwDOIPDwls5QdXOB",
        "number": 4680,
        "title": "Query_constructor.base.py function _get_prompt() not including passed examples.",
        "user": {
            "login": "Dmaturana81",
            "id": 54143703,
            "node_id": "MDQ6VXNlcjU0MTQzNzAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/54143703?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Dmaturana81",
            "html_url": "https://github.com/Dmaturana81",
            "followers_url": "https://api.github.com/users/Dmaturana81/followers",
            "following_url": "https://api.github.com/users/Dmaturana81/following{/other_user}",
            "gists_url": "https://api.github.com/users/Dmaturana81/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Dmaturana81/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Dmaturana81/subscriptions",
            "organizations_url": "https://api.github.com/users/Dmaturana81/orgs",
            "repos_url": "https://api.github.com/users/Dmaturana81/repos",
            "events_url": "https://api.github.com/users/Dmaturana81/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Dmaturana81/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-14T18:50:29Z",
        "updated_at": "2023-05-16T23:31:11Z",
        "closed_at": "2023-05-16T23:31:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4680",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4680",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4680.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4680.patch",
            "merged_at": "2023-05-16T23:31:11Z"
        },
        "body": "The function _get_prompt() was returning the DEFAULT_EXAMPLES even if some custom examples were given. The return FewShotPromptTemplate was returnong DEFAUL_EXAMPLES and not examples\r\n\r\n# Fixing the function _get_prompt(). Taking the examples given to the return\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4680/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4680/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4679",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4679/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4679/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4679/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4679",
        "id": 1709035124,
        "node_id": "PR_kwDOIPDwls5QdWkO",
        "number": 4679,
        "title": "Add `n_gpu_layers` to llama.cpp",
        "user": {
            "login": "garrettsutula",
            "id": 11978161,
            "node_id": "MDQ6VXNlcjExOTc4MTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/11978161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garrettsutula",
            "html_url": "https://github.com/garrettsutula",
            "followers_url": "https://api.github.com/users/garrettsutula/followers",
            "following_url": "https://api.github.com/users/garrettsutula/following{/other_user}",
            "gists_url": "https://api.github.com/users/garrettsutula/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garrettsutula/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garrettsutula/subscriptions",
            "organizations_url": "https://api.github.com/users/garrettsutula/orgs",
            "repos_url": "https://api.github.com/users/garrettsutula/repos",
            "events_url": "https://api.github.com/users/garrettsutula/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garrettsutula/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-14T18:36:43Z",
        "updated_at": "2023-05-15T22:54:22Z",
        "closed_at": "2023-05-15T22:54:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4679",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4679",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4679.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4679.patch",
            "merged_at": null
        },
        "body": "# Add `n-gpu-layers` param to Llama.cpp model & embedding\r\n\r\nAdds a parameter `n_gpu_layers` to Llama.cpp model and embedding implementation to make it possible to load & run w/ GPU. Refer to this Llama.cpp PR for more info: https://github.com/ggerganov/llama.cpp/pull/1412\r\n\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@hwchase17 @agola11 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4679/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4679/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4678",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4678/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4678/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4678/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4678",
        "id": 1709029487,
        "node_id": "I_kwDOIPDwls5l3bhv",
        "number": 4678,
        "title": "Split by Tokens instead of characters: RecursiveCharacterTextSplitter",
        "user": {
            "login": "zs-dima",
            "id": 25195453,
            "node_id": "MDQ6VXNlcjI1MTk1NDUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/25195453?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zs-dima",
            "html_url": "https://github.com/zs-dima",
            "followers_url": "https://api.github.com/users/zs-dima/followers",
            "following_url": "https://api.github.com/users/zs-dima/following{/other_user}",
            "gists_url": "https://api.github.com/users/zs-dima/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zs-dima/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zs-dima/subscriptions",
            "organizations_url": "https://api.github.com/users/zs-dima/orgs",
            "repos_url": "https://api.github.com/users/zs-dima/repos",
            "events_url": "https://api.github.com/users/zs-dima/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zs-dima/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 26,
        "created_at": "2023-05-14T18:16:05Z",
        "updated_at": "2023-12-05T08:57:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nLLM usually limits text by Tokens. \r\nIt may be useful to split a large text into chunks according to the number of Tokens rather than the number of characters.\r\nFor example, if LLM allows us to use 8000 tokens, and we want to split the text into chunks of up to 4000-tokens, then we can call\r\n```python\r\ntext_splitter = RecursiveCharacterTextSplitter(chunk_tokens = 4000, ...\r\n```\r\n\r\n\r\n### Motivation\r\n\r\nIf we split a text by number of characters, it is not obvious how many tokens these chunks will be.\r\nAnd at the same time if we want to split a text into bigger possible chunks and keep these chunks under certain LLM tokens limit, we cannot operate by number of characters.\r\n\r\n### Your contribution\r\n\r\nAs an example of the `RecursiveCharacterTextSplitter(chunk_tokens` implementation it is very useful libraries that helps to split text into tokens:\r\nhttps://github.com/openai/tiktoken\r\n\r\n```python\r\nimport tiktoken\r\n\r\ndef split_large_text(large_text, max_tokens):\r\n    enc = tiktoken.get_encoding(\"cl100k_base\")\r\n    tokenized_text = enc.encode(large_text)\r\n\r\n    chunks = []\r\n    current_chunk = []\r\n    current_length = 0\r\n\r\n    for token in tokenized_text:\r\n        current_chunk.append(token)\r\n        current_length += 1\r\n\r\n        if current_length >= max_tokens:\r\n            chunks.append(enc.decode(current_chunk).rstrip(' .,;'))\r\n            current_chunk = []\r\n            current_length = 0\r\n\r\n    if current_chunk:\r\n        chunks.append(enc.decode(current_chunk).rstrip(' .,;'))\r\n\r\n    return chunks\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4678/reactions",
            "total_count": 13,
            "+1": 7,
            "-1": 0,
            "laugh": 0,
            "hooray": 3,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 3
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4678/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4677",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4677/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4677/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4677/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4677",
        "id": 1709028039,
        "node_id": "PR_kwDOIPDwls5QdVOG",
        "number": 4677,
        "title": "Add llamacpp `n_gpu_layers`",
        "user": {
            "login": "garrettsutula",
            "id": 11978161,
            "node_id": "MDQ6VXNlcjExOTc4MTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/11978161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garrettsutula",
            "html_url": "https://github.com/garrettsutula",
            "followers_url": "https://api.github.com/users/garrettsutula/followers",
            "following_url": "https://api.github.com/users/garrettsutula/following{/other_user}",
            "gists_url": "https://api.github.com/users/garrettsutula/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garrettsutula/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garrettsutula/subscriptions",
            "organizations_url": "https://api.github.com/users/garrettsutula/orgs",
            "repos_url": "https://api.github.com/users/garrettsutula/repos",
            "events_url": "https://api.github.com/users/garrettsutula/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garrettsutula/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-14T18:10:56Z",
        "updated_at": "2023-05-14T18:28:08Z",
        "closed_at": "2023-05-14T18:28:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4677",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4677",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4677.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4677.patch",
            "merged_at": null
        },
        "body": "# Add `n-gpu-layers` param to Llama.cpp model & embedding\r\n\r\nAdds a parameter `n_gpu_layers` to Llama.cpp model and embedding implementation to make it possible to load & run w/ GPU. Refer to this Llama.cpp PR for more info: https://github.com/ggerganov/llama.cpp/pull/1412\r\n\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@hwchase17 @agola11 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4677/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4677/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4676",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4676/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4676/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4676/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4676",
        "id": 1709027393,
        "node_id": "I_kwDOIPDwls5l3bBB",
        "number": 4676,
        "title": "Issue: Set up a Chroma retriever for client-server configuration of Chroma",
        "user": {
            "login": "zigax1",
            "id": 80093733,
            "node_id": "MDQ6VXNlcjgwMDkzNzMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/80093733?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zigax1",
            "html_url": "https://github.com/zigax1",
            "followers_url": "https://api.github.com/users/zigax1/followers",
            "following_url": "https://api.github.com/users/zigax1/following{/other_user}",
            "gists_url": "https://api.github.com/users/zigax1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zigax1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zigax1/subscriptions",
            "organizations_url": "https://api.github.com/users/zigax1/orgs",
            "repos_url": "https://api.github.com/users/zigax1/repos",
            "events_url": "https://api.github.com/users/zigax1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zigax1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-14T18:08:39Z",
        "updated_at": "2023-09-28T16:07:05Z",
        "closed_at": "2023-09-28T16:07:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nI am using Chroma's client-server configuration and I have trouble setting up a retriever for ConversationalRetrievalChain.from_llm() function.\r\n\r\nI can't find anything related to this. Can someone guide me on how can I do that or if someone has any solution?\r\n\r\nFor the locally stored database you cust called db.as_retriever() and that was it.\r\n\r\nBut now, I can't find a solutionf or passing a retriever to from_llm() function.\r\n\r\nMy code snippet is:\r\n\r\n```\r\n`def askQuestion(self, thread_id, question):\r\n        collection = self.chroma_client.get_collection(name=\"my_collection5\", embedding_function=self.embedding)\r\n        self.llm = ChatOpenAI(model_name=self.model_name, temperature=self.temperature, \r\n        openai_api_key=os.environ.get('OPENAI_API_KEY'))\r\n        self.memory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True,  \r\n        output_key='answer')\r\n        self.chain = ConversationalRetrievalChain.from_llm(self.llm, collection.as_retriever(),return_source_documents=True,verbose=VERBOSE, memory=self.memory)\r\n       \r\n        result = self.chain({\"question\": question})\r\n        res_dict = {\r\n            \"answer\": result[\"answer\"],\r\n        }\r\n\r\n        res_dict[\"source_documents\"] = []\r\n\r\n        # add source docs\r\n        for source in result[\"source_documents\"]:\r\n            res_dict[\"source_documents\"].append({\r\n                \"page_content\": source.page_content,\r\n                \"metadata\":  source.metadata\r\n            })\r\n\r\n        return res_dict`\r\n```\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4676/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4676/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4675",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4675/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4675/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4675/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4675",
        "id": 1709018375,
        "node_id": "PR_kwDOIPDwls5QdTYi",
        "number": 4675,
        "title": "bump version to 169",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-14T17:35:08Z",
        "updated_at": "2023-05-14T21:18:31Z",
        "closed_at": "2023-05-14T21:18:30Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4675",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4675",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4675.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4675.patch",
            "merged_at": "2023-05-14T21:18:30Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4675/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4675/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4674",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4674/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4674/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4674/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4674",
        "id": 1709016097,
        "node_id": "I_kwDOIPDwls5l3YQh",
        "number": 4674,
        "title": "langchain chroma vectorstore calls ChromaDB API incorrectly when ChromaDB is running in Docker",
        "user": {
            "login": "MattiPaivike",
            "id": 44549572,
            "node_id": "MDQ6VXNlcjQ0NTQ5NTcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/44549572?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MattiPaivike",
            "html_url": "https://github.com/MattiPaivike",
            "followers_url": "https://api.github.com/users/MattiPaivike/followers",
            "following_url": "https://api.github.com/users/MattiPaivike/following{/other_user}",
            "gists_url": "https://api.github.com/users/MattiPaivike/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MattiPaivike/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MattiPaivike/subscriptions",
            "organizations_url": "https://api.github.com/users/MattiPaivike/orgs",
            "repos_url": "https://api.github.com/users/MattiPaivike/repos",
            "events_url": "https://api.github.com/users/MattiPaivike/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MattiPaivike/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-14T17:26:09Z",
        "updated_at": "2023-10-31T16:07:20Z",
        "closed_at": "2023-10-31T16:07:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n```\r\nlangchain==0.0.168\r\nchromadb==0.3.22\r\n```\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nClone official ChromaDB repository and run their docker-compose environment.\r\n```\r\ngit clone git@github.com:chroma-core/chroma.git\r\ndocker-compose up\r\n```\r\n\r\nCreate a folder called `my_data` and create a `test.txt` file into it with some random text.\r\n```\r\nmkdir my_data\r\ncd my_data\r\necho \"testingtestingtesting\" > test.txt\r\n```\r\n\r\nScript to reproduce issue:\r\n\r\n```\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Chroma\r\nfrom chromadb.config import Settings\r\n\r\nwith open('my_data/test.txt', 'r', encoding=\"utf-8\") as file:\r\n    raw_text = file.read()\r\n\r\ntext_splitter = RecursiveCharacterTextSplitter(        \r\n    chunk_size = 1000,\r\n    chunk_overlap  = 0,\r\n    length_function = len,\r\n)\r\ntexts = text_splitter.split_text(raw_text)\r\n\r\nembeddings = OpenAIEmbeddings()\r\n\r\nclient_settings = Settings(\r\n        chroma_api_impl=\"rest\",\r\n        chroma_server_host=\"localhost\",\r\n        chroma_server_http_port=\"8000\"\r\n    )\r\n\r\ncollection_name = \"chroma_test\"\r\n\r\nvectorstore = Chroma.from_texts(embedding=embeddings, texts=texts, client_settings=client_settings, collection_name=collection_name)\r\n```\r\n\r\nSet necessary `OPENAI_API_KEY` environment variables and run the script.\r\n\r\nThis will result in an error:\r\n`Exception: {\"error\":\"InvalidUUID\",\"message\":\"Could not parse chroma_test as a UUID\"}`\r\n\r\nThe same issue will not happen if you run ChromaDB locally like this. Only when calling the actual API you then run in to the issue.\r\n```\r\nvectorstore = Chroma.from_texts(embedding=embeddings, texts=texts, persist_directory=\"db\")\r\n```\n\n### Expected behavior\n\nThe expected behaviour would be that Langchain would call the ChromaDB API correctly with the `UUID` instead of the plaintext name of the collection.\r\n\r\nSee chromaDB sourcecode and their API `chromadb\\server\\fastapi\\__init__.py`\r\n\r\nLine `105`\r\n```\r\nself.router.add_api_route(\r\n            \"/api/v1/collections/{collection_id}/add\",\r\n            self.add,\r\n            methods=[\"POST\"],\r\n            status_code=status.HTTP_201_CREATED,\r\n        )\r\n```\r\n\r\nLine `196`\r\n\r\n```\r\ndef add(self, collection_id: str, add: AddEmbedding) -> None:\r\n        try:\r\n            result = self._api._add(\r\n                collection_id=_uuid(collection_id),\r\n                embeddings=add.embeddings,\r\n                metadatas=add.metadatas,\r\n                documents=add.documents,\r\n                ids=add.ids,\r\n                increment_index=add.increment_index,\r\n            )\r\n        except InvalidDimensionException as e:\r\n            raise HTTPException(status_code=500, detail=str(e))\r\n        return result\r\n```\r\n\r\nLine `67`\r\n\r\n```\r\ndef _uuid(uuid_str: str) -> UUID:\r\n    try:\r\n        return UUID(uuid_str)\r\n    except ValueError:\r\n        raise InvalidUUIDError(f\"Could not parse {uuid_str} as a UUID\")\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4674/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4674/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4673",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4673/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4673/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4673/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4673",
        "id": 1709000599,
        "node_id": "I_kwDOIPDwls5l3UeX",
        "number": 4673,
        "title": "ValueError: Missing some input keys: {'input'}",
        "user": {
            "login": "ziadzee",
            "id": 65977822,
            "node_id": "MDQ6VXNlcjY1OTc3ODIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/65977822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ziadzee",
            "html_url": "https://github.com/ziadzee",
            "followers_url": "https://api.github.com/users/ziadzee/followers",
            "following_url": "https://api.github.com/users/ziadzee/following{/other_user}",
            "gists_url": "https://api.github.com/users/ziadzee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ziadzee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ziadzee/subscriptions",
            "organizations_url": "https://api.github.com/users/ziadzee/orgs",
            "repos_url": "https://api.github.com/users/ziadzee/repos",
            "events_url": "https://api.github.com/users/ziadzee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ziadzee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-14T16:30:59Z",
        "updated_at": "2023-08-08T20:08:15Z",
        "closed_at": "2023-05-14T18:28:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI'm trying to make use of the sequential chaining functionality by chaining together two prompts like so:\r\n\r\n```\r\n# importing frameworks and such\r\nimport os\r\nfrom apikey import apikey\r\n\r\nimport streamlit as st\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.prompts import PromptTemplate\r\nfrom langchain.chains import LLMChain, SimpleSequentialChain\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = apikey\r\n\r\n# Defning and building out our OOTB app framework via Streamlit\r\nst.title(\"Medical GPT\")\r\nprompt = st.text_input(\"Enter your prompt here\")\r\n\r\n# Defining our prompt template\r\nillness_template = PromptTemplate(\r\n        input_variables=[\"condition\"],\r\n        template=\"Summarise the common symptoms for {condition}\"\r\n)\r\n\r\ntreatment_template = PromptTemplate(\r\n        input_variables=[\"illness\"],\r\n        template=\"Summarise the treatment for this illness ILLNESS: {illness}\"\r\n)\r\n\r\n# Defining our LLM and chains\r\nllm = OpenAI(temperature=0.7)\r\n\r\nillness_chain = LLMChain(llm=llm,\r\n                       prompt=illness_template,\r\n                       verbose=True)\r\n\r\ntreatment_chain = LLMChain(llm=llm,\r\n                       prompt=treatment_template,\r\n                       verbose=True)\r\n\r\n\r\nsequential_chain = SimpleSequentialChain(chains=[illness_chain, treatment_chain])\r\n\r\n# Return prompt output to frontend when a prompt is given\r\nif prompt:\r\n        response = sequential_chain.run(topic=prompt)\r\n        st.write(response)\r\n```\r\n\r\nFor some reason, it keeps throwing the error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/streamlit/runtime/scriptrunner/script_runner.py\", line 565, in _run_script\r\n    exec(code, module.__dict__)\r\n  File \"/Users/user/Langchain_hacking/app.py\", line 43, in <module>\r\n    response = sequential_chain.run(topic=prompt)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/langchain/chains/base.py\", line 239, in run\r\n    return self(kwargs, callbacks=callbacks)[self.output_keys[0]]\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/langchain/chains/base.py\", line 123, in __call__\r\n    inputs = self.prep_inputs(inputs)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/langchain/chains/base.py\", line 216, in prep_inputs\r\n    self._validate_inputs(inputs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/langchain/chains/base.py\", line 83, in _validate_inputs\r\n    raise ValueError(f\"Missing some input keys: {missing_keys}\")\r\nValueError: Missing some input keys: {'input'}\r\n```\r\n\r\nI'm not entirely sure why it keeps throwing up this error, as far as the documentation goes I'm calling `SimpleSequentialChain` correctly unless I'm missing something? \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\nif prompt:\r\n        response = sequential_chain.run(topic=prompt)\r\n        st.write(response)\r\n```\n\n### Expected behavior\n\nLLM output",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4673/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4673/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4672",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4672/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4672/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4672/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4672",
        "id": 1708992622,
        "node_id": "PR_kwDOIPDwls5QdOj-",
        "number": 4672,
        "title": "[Based on pr/4381][Spark] Allow Flexible Agent Action Going Beyond SQL Calls.",
        "user": {
            "login": "skcoirz",
            "id": 62768671,
            "node_id": "MDQ6VXNlcjYyNzY4Njcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/62768671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skcoirz",
            "html_url": "https://github.com/skcoirz",
            "followers_url": "https://api.github.com/users/skcoirz/followers",
            "following_url": "https://api.github.com/users/skcoirz/following{/other_user}",
            "gists_url": "https://api.github.com/users/skcoirz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skcoirz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skcoirz/subscriptions",
            "organizations_url": "https://api.github.com/users/skcoirz/orgs",
            "repos_url": "https://api.github.com/users/skcoirz/repos",
            "events_url": "https://api.github.com/users/skcoirz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skcoirz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-14T16:03:04Z",
        "updated_at": "2023-11-01T22:56:18Z",
        "closed_at": "2023-11-01T22:56:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4672",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4672",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4672.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4672.patch",
            "merged_at": null
        },
        "body": "This PR is on top of pr/4381. Working on multiple new features for Spark Agent.\r\n\r\n# Feature 1: Spark Flexible Agent\r\n**Rationale:** The classical ZeroShotAgent always forces to use a tool which makes sense when the tool can finish the work better than AI, however, there are many cases, AI is better than tools, esp. when generation is needed.\r\n\r\nOne example, when user uses Spark, sometimes, we want the model to give us suggestions of how to write some queries to assist our work instead of doing the query for us directly. (Letting the AI doing the query is a valid case but it's not the only case) The power of LLM is generation. It's able to provide more creative and complex answer, which includes providing suggestions to human.\r\n\r\n**Solution:** Reusing the current MRKL+ZeroShot architecture, providing a new tool which allows the agent to provide its own answer when it has the confidence. (Notebook example provided as demonstration) This also requires custimization of setup prompts and parsing logics (which provides more tolerance).\r\n\r\n\u2026/LangChain/docs/modules/agents/agents/spark_flexible_sql_agent.ipynb\r\n<img width=\"953\" alt=\"Screenshot 2023-05-14 at 12 22 34 PM\" src=\"https://github.com/hwchase17/langchain/assets/62768671/b9623666-5f3d-4d35-93d8-f3622b5a220e\">\r\n\r\n\r\n# Feature 2: Add Memory Support to Spark SQL Agent (Have added in the dependent PR)\r\n**Rationale:** Many times, the agent needs more than 1 iteration of interaction to get the right query result. Currently each agent_executor call is a logically separate request. It doesn\u2019t have the memory of the previous context. Adding memory support will make the interaction between Human and AI more efficient.\r\n\r\n**Solution:** We can re-use the existing ZeroShotAgent framework for most parts with some updates on prompt setup, prompt creation, Human/AI interaction instruction.\r\n\r\n\u2026/LangChain/docs/modules/agents/toolkits/examples/spark_sql.ipynb\r\n<img width=\"947\" alt=\"Screenshot 2023-05-14 at 12 20 42 PM\" src=\"https://github.com/hwchase17/langchain/assets/62768671/b7a32f11-849d-43b5-ade0-285602dcdbb3\">\r\n\r\n# Feature 3: Enable Logical and Physical Plan Usage.\r\n**Rationale:** Logical and Physical Plans are the source-of-truth for anyone interested in the optimization result. Providing this ability as a tool will equip AI with the ability to provide more advanced answers to the executed query.\r\n\r\n**Solution:** PySpark doesn\u2019t provide an explicit API for Logical/Physical Plans fetching (explain() doesn\u2019t output string.), but we can alternatively call the internal functions and variables directly (following the source code of explain()). In this tooling, we use the `extended` mode. Prompts need to updated accordingly to help AI understand when and how to use this new tool. Demonstration example is added as notebook\r\n\r\n\u2026/LangChain/docs/modules/agents/agents/spark_flexible_sql_agent.ipynb\r\n<img width=\"938\" alt=\"Screenshot 2023-05-14 at 12 19 24 PM\" src=\"https://github.com/hwchase17/langchain/assets/62768671/f12d1e08-ff25-49f2-8ff7-f5971f021381\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4672/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4672/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4670",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4670/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4670/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4670/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4670",
        "id": 1708972374,
        "node_id": "I_kwDOIPDwls5l3NlW",
        "number": 4670,
        "title": "Generative Agents don't work with AzureChatOpenAI",
        "user": {
            "login": "AdrianP-",
            "id": 8615608,
            "node_id": "MDQ6VXNlcjg2MTU2MDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8615608?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AdrianP-",
            "html_url": "https://github.com/AdrianP-",
            "followers_url": "https://api.github.com/users/AdrianP-/followers",
            "following_url": "https://api.github.com/users/AdrianP-/following{/other_user}",
            "gists_url": "https://api.github.com/users/AdrianP-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AdrianP-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AdrianP-/subscriptions",
            "organizations_url": "https://api.github.com/users/AdrianP-/orgs",
            "repos_url": "https://api.github.com/users/AdrianP-/repos",
            "events_url": "https://api.github.com/users/AdrianP-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AdrianP-/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-14T14:54:48Z",
        "updated_at": "2023-09-10T16:18:00Z",
        "closed_at": "2023-09-10T16:17:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI tried to run this example: https://python.langchain.com/en/latest/use_cases/agent_simulations/characters.html\r\n\r\nBut when I set the LLM with AzureChatOpenAI doesn't work. The error is: \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/adrian-ubuntu/projects/generative-agents/langchain_generative_agent.py\", line 79, in <module>\r\n    print(tommie.get_summary())\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/langchain/experimental/generative_agents/generative_agent.py\", line 215, in get_summary\r\n    self.summary = self._compute_agent_summary()\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/langchain/experimental/generative_agents/generative_agent.py\", line 201, in _compute_agent_summary\r\n    self.chain(prompt)\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/langchain/chains/base.py\", line 239, in run\r\n    return self(kwargs, callbacks=callbacks)[self.output_keys[0]]\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/langchain/chains/base.py\", line 140, in __call__\r\n    raise e\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/langchain/chains/base.py\", line 134, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/langchain/chains/llm.py\", line 69, in _call\r\n    response = self.generate([inputs], run_manager=run_manager)\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/langchain/chains/llm.py\", line 79, in generate\r\n    return self.llm.generate_prompt(\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/langchain/chat_models/base.py\", line 142, in generate_prompt\r\n    return self.generate(prompt_messages, stop=stop, callbacks=callbacks)\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/langchain/chat_models/base.py\", line 90, in generate\r\n    raise e\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/langchain/chat_models/base.py\", line 82, in generate\r\n    results = [\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/langchain/chat_models/base.py\", line 83, in <listcomp>\r\n    self._generate(m, stop=stop, run_manager=run_manager)\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/langchain/chat_models/openai.py\", line 293, in _generate\r\n    response = self.completion_with_retry(messages=message_dicts, **params)\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/langchain/chat_models/openai.py\", line 254, in completion_with_retry\r\n    return _completion_with_retry(**kwargs)\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/tenacity/__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/tenacity/__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/tenacity/__init__.py\", line 314, in iter\r\n    return fut.result()\r\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\r\n    return self.__get_result()\r\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\r\n    raise self._exception\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/tenacity/__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/langchain/chat_models/openai.py\", line 252, in _completion_with_retry\r\n    return self.client.create(**kwargs)\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/openai/api_resources/chat_completion.py\", line 25, in create\r\n    return super().create(*args, **kwargs)\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 153, in create\r\n    response, _, api_key = requestor.request(\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/openai/api_requestor.py\", line 226, in request\r\n    resp, got_stream = self._interpret_response(result, stream)\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/openai/api_requestor.py\", line 620, in _interpret_response\r\n    self._interpret_response_line(\r\n  File \"/home/adrian-ubuntu/projects/.venv_generative-agents/lib/python3.10/site-packages/openai/api_requestor.py\", line 683, in _interpret_response_line\r\n    raise self.handle_error_response(\r\nopenai.error.InvalidRequestError: Resource not found\r\n\r\nProcess finished with exit code 1\r\n```\r\n\r\nBut with a simple example like: \r\n\r\n```\r\nmodel = AzureChatOpenAI(deployment_name=\"gpt-35-turbo\", max_tokens=1500)\r\nprint(model([HumanMessage(content=\"Translate this sentence from English to French. I love programming.\")]))\r\n```\r\n\r\nworks perfectly (and both runs are configured with same env variables)\r\n\r\nVersion of langchain: 0.0.168\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\nimport logging\r\n\r\nfrom langchain.chat_models import AzureChatOpenAI\r\nfrom langchain.llms import AzureOpenAI\r\n\r\nlogging.basicConfig(level=logging.ERROR)\r\n\r\nfrom datetime import datetime, timedelta\r\nfrom typing import List\r\nfrom termcolor import colored\r\n\r\nfrom langchain.docstore import InMemoryDocstore\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.vectorstores import FAISS\r\nfrom langchain.retrievers import TimeWeightedVectorStoreRetriever\r\n\r\n\r\nfrom langchain.experimental.generative_agents import GenerativeAgent, GenerativeAgentMemory\r\n\r\nimport math\r\nimport faiss\r\n\r\n\r\ndef relevance_score_fn(score: float) -> float:\r\n    \"\"\"Return a similarity score on a scale [0, 1].\"\"\"\r\n    # This will differ depending on a few things:\r\n    # - the distance / similarity metric used by the VectorStore\r\n    # - the scale of your embeddings (OpenAI's are unit norm. Many others are not!)\r\n    # This function converts the euclidean norm of normalized embeddings\r\n    # (0 is most similar, sqrt(2) most dissimilar)\r\n    # to a similarity function (0 to 1)\r\n    return 1.0 - score / math.sqrt(2)\r\n\r\n\r\ndef create_new_memory_retriever():\r\n    \"\"\"Create a new vector store retriever unique to the agent.\"\"\"\r\n    # Define your embedding model\r\n    embeddings_model = OpenAIEmbeddings(deployment=\"text-embedding-ada-002_deploy\",  chunk_size=1)\r\n    # Initialize the vectorstore as empty\r\n    embedding_size = 1536\r\n    index = faiss.IndexFlatL2(embedding_size)\r\n    vectorstore = FAISS(embeddings_model.embed_query, index, InMemoryDocstore({}), {}, relevance_score_fn=relevance_score_fn)\r\n    return TimeWeightedVectorStoreRetriever(vectorstore=vectorstore, other_score_keys=[\"importance\"], k=15)\r\n\r\n\r\nUSER_NAME = \"Person A\"  # The name you want to use when interviewing the agent.\r\n\r\nLLM = AzureChatOpenAI(deployment_name=\"gpt-35-turbo\", max_tokens=1500)\r\n\r\ntommies_memory = GenerativeAgentMemory(\r\n    llm=LLM,\r\n    memory_retriever=create_new_memory_retriever(),\r\n    verbose=True,\r\n    reflection_threshold=8  # we will give this a relatively low number to show how reflection works\r\n)\r\n\r\ntommie = GenerativeAgent(name=\"Tommie\",\r\n                         age=25,\r\n                         traits=\"anxious, likes design, talkative\",  # You can add more persistent traits here\r\n                         status=\"looking for a job\",\r\n                         # When connected to a virtual world, we can have the characters update their status\r\n                         memory_retriever=create_new_memory_retriever(),\r\n                         llm=LLM,\r\n                         memory=tommies_memory\r\n                         )\r\n\r\n# The current \"Summary\" of a character can't be made because the agent hasn't made\r\n# any observations yet.\r\nprint(tommie.get_summary())\r\n```\n\n### Expected behavior\n\nJust working",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4670/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4670/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4668",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4668/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4668/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4668/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4668",
        "id": 1708934167,
        "node_id": "I_kwDOIPDwls5l3EQX",
        "number": 4668,
        "title": "DOC: Typo in Custom Agent Documentation",
        "user": {
            "login": "guangchen811",
            "id": 103159823,
            "node_id": "U_kgDOBiYYDw",
            "avatar_url": "https://avatars.githubusercontent.com/u/103159823?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guangchen811",
            "html_url": "https://github.com/guangchen811",
            "followers_url": "https://api.github.com/users/guangchen811/followers",
            "following_url": "https://api.github.com/users/guangchen811/following{/other_user}",
            "gists_url": "https://api.github.com/users/guangchen811/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guangchen811/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guangchen811/subscriptions",
            "organizations_url": "https://api.github.com/users/guangchen811/orgs",
            "repos_url": "https://api.github.com/users/guangchen811/repos",
            "events_url": "https://api.github.com/users/guangchen811/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guangchen811/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-14T12:52:17Z",
        "updated_at": "2023-05-18T04:02:24Z",
        "closed_at": "2023-05-18T04:02:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nhttps://python.langchain.com/en/latest/modules/agents/agents/custom_agent.html\r\n\n\n### Idea or request for content:\n\nI was going through the documentation for creating a custom agent (https://python.langchain.com/en/latest/modules/agents/agents/custom_agent.html) and noticed a potential typo. In the section discussing the components of a custom agent, the text mentions that an agent consists of \"three parts\" but only two are listed: \"Tools\" and \"The agent class itself\".\r\n\r\nI believe the text should say \"two parts\" instead of \"three\". Could you please confirm if this is a typo, or if there's a missing third part that needs to be included in the list?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4668/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4668/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4667",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4667/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4667/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4667/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4667",
        "id": 1708906341,
        "node_id": "I_kwDOIPDwls5l29dl",
        "number": 4667,
        "title": "Is it possible to digest every piece of document befero inferece?",
        "user": {
            "login": "Jeru2023",
            "id": 123569003,
            "node_id": "U_kgDOB12Daw",
            "avatar_url": "https://avatars.githubusercontent.com/u/123569003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jeru2023",
            "html_url": "https://github.com/Jeru2023",
            "followers_url": "https://api.github.com/users/Jeru2023/followers",
            "following_url": "https://api.github.com/users/Jeru2023/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jeru2023/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jeru2023/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jeru2023/subscriptions",
            "organizations_url": "https://api.github.com/users/Jeru2023/orgs",
            "repos_url": "https://api.github.com/users/Jeru2023/repos",
            "events_url": "https://api.github.com/users/Jeru2023/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jeru2023/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-14T11:14:14Z",
        "updated_at": "2023-09-12T16:15:15Z",
        "closed_at": "2023-09-12T16:15:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nIn ingest process, a long document was splitted into multiple documents and embedding into vector DB.\r\nIn inference process, the top K trunks were returned as context feeding to LLM.\r\n\r\nIn most of the cases this machanism works well, but what if I want to make an overall summary of the document?\r\nrelying on the top K smilarity result won't be sufficient, or the query is relvevant to every trunks of document\uff1f\r\n\r\nHow can I make langchain digest every piece of document before inference?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4667/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4667/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4666",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4666/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4666/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4666/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4666",
        "id": 1708874996,
        "node_id": "I_kwDOIPDwls5l21z0",
        "number": 4666,
        "title": "Rewrite Langchain in Mojo",
        "user": {
            "login": "l4b4r4b4b4",
            "id": 13406997,
            "node_id": "MDQ6VXNlcjEzNDA2OTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/13406997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/l4b4r4b4b4",
            "html_url": "https://github.com/l4b4r4b4b4",
            "followers_url": "https://api.github.com/users/l4b4r4b4b4/followers",
            "following_url": "https://api.github.com/users/l4b4r4b4b4/following{/other_user}",
            "gists_url": "https://api.github.com/users/l4b4r4b4b4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/l4b4r4b4b4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/l4b4r4b4b4/subscriptions",
            "organizations_url": "https://api.github.com/users/l4b4r4b4b4/orgs",
            "repos_url": "https://api.github.com/users/l4b4r4b4b4/repos",
            "events_url": "https://api.github.com/users/l4b4r4b4b4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/l4b4r4b4b4/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-14T09:17:24Z",
        "updated_at": "2023-12-14T16:08:38Z",
        "closed_at": "2023-12-14T16:08:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nRewriting Langchain codebase and library with Mojo.\r\nhttps://www.modular.com/mojo\n\n### Motivation\n\nUp to 35000x faster than Python for ML / DL applications.\r\nUtilize the full power of the hardware, including multiple cores, vector units, and exotic accelerator units, with the world's most advanced compiler and heterogenous runtime. Achieve performance on par with C++ and CUDA without the complexity.\r\nMojo leverages MLIR, which enables Mojo developers to take advantage of vectors, threads, and AI hardware units.\r\nExperience true interoperability with the Python ecosystem. Seamlessly intermix arbitrary libraries like Numpy and Matplotlib and your custom code with Mojo.\n\n### Your contribution\n\nWill start tackling the topic with a team myself if:\r\n\r\n1. Operating my own DGX cluster or\r\n2. enough other people get on board to get the project started.\r\n\r\n ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4666/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4666/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4665",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4665/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4665/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4665/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4665",
        "id": 1708865392,
        "node_id": "PR_kwDOIPDwls5Qc1qj",
        "number": 4665,
        "title": "add modelscope embedding class",
        "user": {
            "login": "thomas-yanxin",
            "id": 58030051,
            "node_id": "MDQ6VXNlcjU4MDMwMDUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/58030051?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thomas-yanxin",
            "html_url": "https://github.com/thomas-yanxin",
            "followers_url": "https://api.github.com/users/thomas-yanxin/followers",
            "following_url": "https://api.github.com/users/thomas-yanxin/following{/other_user}",
            "gists_url": "https://api.github.com/users/thomas-yanxin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thomas-yanxin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thomas-yanxin/subscriptions",
            "organizations_url": "https://api.github.com/users/thomas-yanxin/orgs",
            "repos_url": "https://api.github.com/users/thomas-yanxin/repos",
            "events_url": "https://api.github.com/users/thomas-yanxin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thomas-yanxin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-14T08:42:37Z",
        "updated_at": "2023-05-23T23:45:29Z",
        "closed_at": "2023-05-23T23:45:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4665",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4665",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4665.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4665.patch",
            "merged_at": "2023-05-23T23:45:29Z"
        },
        "body": "# Add modelscope embedding class\r\n\r\nThis PR adds [modelscope](https://modelscope.cn/) embedding class. This is useful to help user to use the model by modelscope. At present, the user can access various  models in modelscope.\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n@hwchase17 @agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4665/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4665/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4664",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4664/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4664/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4664/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4664",
        "id": 1708859989,
        "node_id": "I_kwDOIPDwls5l2yJV",
        "number": 4664,
        "title": "error while calling SQLDatabaseChain on AWS Athena",
        "user": {
            "login": "navneettuteja",
            "id": 114241866,
            "node_id": "U_kgDOBs8xSg",
            "avatar_url": "https://avatars.githubusercontent.com/u/114241866?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/navneettuteja",
            "html_url": "https://github.com/navneettuteja",
            "followers_url": "https://api.github.com/users/navneettuteja/followers",
            "following_url": "https://api.github.com/users/navneettuteja/following{/other_user}",
            "gists_url": "https://api.github.com/users/navneettuteja/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/navneettuteja/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/navneettuteja/subscriptions",
            "organizations_url": "https://api.github.com/users/navneettuteja/orgs",
            "repos_url": "https://api.github.com/users/navneettuteja/repos",
            "events_url": "https://api.github.com/users/navneettuteja/events{/privacy}",
            "received_events_url": "https://api.github.com/users/navneettuteja/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-14T08:21:50Z",
        "updated_at": "2023-05-18T04:24:46Z",
        "closed_at": "2023-05-18T04:24:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain>=0.0.123\r\nsqlalchemy==1.4.48 \r\nPyAthena[SQLAlchemy]>=1.2.0,<2.0.0\r\nPython 3.10.11\n\n### Who can help?\n\n@hwchase17, @eyurtsev, @agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. create aws athena engine and connect to athena\r\nengine_athena=create_engine('awsathena+rest://<keys>/<keys>@athena.us-east-1.amazonaws.com:443/<db_name>?s3_staging_dir=<bucket name>/&work_group=primary')\r\ndb = SQLDatabase(engine_athena)\r\nConnection is established successfully.\r\n2. db_chain = SQLDatabaseChain.from_llm(llm, db, prompt=PROMPT, verbose=True, return_intermediate_steps=True)\r\n3. db_chain(query) where query is 'how many claims are there?'\n\n### Expected behavior\n\nExpected behavior - SQL should run against Athena\r\nError - TypeError: __init__() got an unexpected keyword argument 'bind'\r\nIt seems bind was deprecated from sqlalchemy version 2.0 onwards. However, PyAthena recommended SQLAlchemy version is <2.0.0.\r\n**How can this be resolved? here is detailed error message:**\r\n\r\n```\r\n\r\nSELECT count (policy_id_0) FROM claims ;\r\nSQLQuery:\r\n\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nInput In [25], in <cell line: 2>()\r\n      1 print(query)\r\n----> 2 result = db_chain(sql)\r\n      3 result\r\n\r\nFile ~\\Anaconda3\\lib\\site-packages\\langchain\\chains\\base.py:140, in Chain.__call__(self, inputs, return_only_outputs, callbacks)\r\n    138 except (KeyboardInterrupt, Exception) as e:\r\n    139     run_manager.on_chain_error(e)\r\n--> 140     raise e\r\n    141 run_manager.on_chain_end(outputs)\r\n    142 return self.prep_outputs(inputs, outputs, return_only_outputs)\r\n\r\nFile ~\\Anaconda3\\lib\\site-packages\\langchain\\chains\\base.py:134, in Chain.__call__(self, inputs, return_only_outputs, callbacks)\r\n    128 run_manager = callback_manager.on_chain_start(\r\n    129     {\"name\": self.__class__.__name__},\r\n    130     inputs,\r\n    131 )\r\n    132 try:\r\n    133     outputs = (\r\n--> 134         self._call(inputs, run_manager=run_manager)\r\n    135         if new_arg_supported\r\n    136         else self._call(inputs)\r\n    137     )\r\n    138 except (KeyboardInterrupt, Exception) as e:\r\n    139     run_manager.on_chain_error(e)\r\n\r\nFile ~\\Anaconda3\\lib\\site-packages\\langchain\\chains\\sql_database\\base.py:96, in SQLDatabaseChain._call(self, inputs, run_manager)\r\n     94 # If not present, then defaults to None which is all tables.\r\n     95 table_names_to_use = inputs.get(\"table_names_to_use\")\r\n---> 96 table_info = self.database.get_table_info(table_names=table_names_to_use)\r\n     97 llm_inputs = {\r\n     98     \"input\": input_text,\r\n     99     \"top_k\": self.top_k,\r\n   (...)\r\n    102     \"stop\": [\"\\nSQLResult:\"],\r\n    103 }\r\n    104 intermediate_steps = []\r\n\r\nFile ~\\Anaconda3\\lib\\site-packages\\langchain\\sql_database.py:167, in SQLDatabase.get_table_info(self, table_names)\r\n    164     continue\r\n    166 # add create table command\r\n--> 167 create_table = str(CreateTable(table).compile(self._engine))\r\n    168 table_info = f\"{create_table.rstrip()}\"\r\n    169 has_extra_info = (\r\n    170     self._indexes_in_table_info or self._sample_rows_in_table_info\r\n    171 )\r\n\r\nFile ~\\Anaconda3\\lib\\site-packages\\sqlalchemy\\sql\\elements.py:503, in ClauseElement.compile(self, bind, dialect, **kw)\r\n    498             url = util.preloaded.engine_url\r\n    499             dialect = url.URL.create(\r\n    500                 self.stringify_dialect\r\n    501             ).get_dialect()()\r\n--> 503 return self._compiler(dialect, **kw)\r\n\r\nFile ~\\Anaconda3\\lib\\site-packages\\sqlalchemy\\sql\\ddl.py:32, in _DDLCompiles._compiler(self, dialect, **kw)\r\n     28 def _compiler(self, dialect, **kw):\r\n     29     \"\"\"Return a compiler appropriate for this ClauseElement, given a\r\n     30     Dialect.\"\"\"\r\n---> 32     return dialect.ddl_compiler(dialect, self, **kw)\r\n\r\nFile ~\\Anaconda3\\lib\\site-packages\\pyathena\\sqlalchemy_athena.py:178, in AthenaDDLCompiler.__init__(self, dialect, statement, bind, schema_translate_map, compile_kwargs)\r\n    169 def __init__(\r\n    170     self,\r\n    171     dialect,\r\n   (...)\r\n    175     compile_kwargs=util.immutabledict(),\r\n    176 ):\r\n    177     self._preparer = AthenaDDLIdentifierPreparer(dialect)\r\n--> 178     super(AthenaDDLCompiler, self).__init__(\r\n    179         dialect=dialect,\r\n    180         statement=statement,\r\n    181         bind=bind,\r\n    182         schema_translate_map=schema_translate_map,\r\n    183         compile_kwargs=compile_kwargs,\r\n    184     )\r\n\r\nTypeError: __init__() got an unexpected keyword argument 'bind'\r\n\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4664/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4664/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4663",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4663/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4663/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4663/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4663",
        "id": 1708842638,
        "node_id": "PR_kwDOIPDwls5QcxY6",
        "number": 4663,
        "title": "Add filter support and TimeWegithedStoreRetriever in pinecone.py",
        "user": {
            "login": "Vasilije1990",
            "id": 8619304,
            "node_id": "MDQ6VXNlcjg2MTkzMDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8619304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vasilije1990",
            "html_url": "https://github.com/Vasilije1990",
            "followers_url": "https://api.github.com/users/Vasilije1990/followers",
            "following_url": "https://api.github.com/users/Vasilije1990/following{/other_user}",
            "gists_url": "https://api.github.com/users/Vasilije1990/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Vasilije1990/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Vasilije1990/subscriptions",
            "organizations_url": "https://api.github.com/users/Vasilije1990/orgs",
            "repos_url": "https://api.github.com/users/Vasilije1990/repos",
            "events_url": "https://api.github.com/users/Vasilije1990/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Vasilije1990/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-14T07:09:43Z",
        "updated_at": "2023-11-07T04:34:45Z",
        "closed_at": "2023-11-07T04:34:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4663",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4663",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4663.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4663.patch",
            "merged_at": null
        },
        "body": "# Adds support for Pinecone filters when using Pinecone.from_existing_index()\r\n\r\n\r\nThis functionality extends  Pinecone.from_existing_index() function by adding filters.\r\nThe use case I was solving for was -> I need memories of a particular user, but there is no way to filter for that user ID, so I need a more robust way to do it\r\n\r\nI also added TimeWeightedStoreRetriever as a first pass.\r\n\r\n\r\n\r\n\r\n\r\n\r\n## Who can review?\r\n\r\n@dev2049 can you please have a look?\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4663/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4663/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4662",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4662/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4662/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4662/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4662",
        "id": 1708841588,
        "node_id": "PR_kwDOIPDwls5QcxLb",
        "number": 4662,
        "title": "Update time_weighted_retriever.py",
        "user": {
            "login": "abhimalamkar",
            "id": 15821517,
            "node_id": "MDQ6VXNlcjE1ODIxNTE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/15821517?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abhimalamkar",
            "html_url": "https://github.com/abhimalamkar",
            "followers_url": "https://api.github.com/users/abhimalamkar/followers",
            "following_url": "https://api.github.com/users/abhimalamkar/following{/other_user}",
            "gists_url": "https://api.github.com/users/abhimalamkar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abhimalamkar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abhimalamkar/subscriptions",
            "organizations_url": "https://api.github.com/users/abhimalamkar/orgs",
            "repos_url": "https://api.github.com/users/abhimalamkar/repos",
            "events_url": "https://api.github.com/users/abhimalamkar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abhimalamkar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-14T07:04:59Z",
        "updated_at": "2023-05-19T16:18:17Z",
        "closed_at": "2023-05-18T16:28:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4662",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4662",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4662.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4662.patch",
            "merged_at": null
        },
        "body": "deleted duplicate function\r\n\r\n# Deleted duplicate function\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n## Who can review?\r\n@dev2049\r\n        \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4662/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4662/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4661",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4661/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4661/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4661/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4661",
        "id": 1708841518,
        "node_id": "I_kwDOIPDwls5l2tou",
        "number": 4661,
        "title": "Using LLama Embedings still rely on OpenAI key",
        "user": {
            "login": "iiAnthony",
            "id": 17520875,
            "node_id": "MDQ6VXNlcjE3NTIwODc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/17520875?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iiAnthony",
            "html_url": "https://github.com/iiAnthony",
            "followers_url": "https://api.github.com/users/iiAnthony/followers",
            "following_url": "https://api.github.com/users/iiAnthony/following{/other_user}",
            "gists_url": "https://api.github.com/users/iiAnthony/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iiAnthony/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iiAnthony/subscriptions",
            "organizations_url": "https://api.github.com/users/iiAnthony/orgs",
            "repos_url": "https://api.github.com/users/iiAnthony/repos",
            "events_url": "https://api.github.com/users/iiAnthony/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iiAnthony/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-14T07:04:36Z",
        "updated_at": "2023-09-19T00:39:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n\r\nRuns under jupyterlab in docker\r\nplatform : Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-glibc2.29\r\npython : 3.8.5\r\n\r\n\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [X] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nWhen trying to use a Llama model on local documents I have the following very basic piece of  code :\r\n\r\n```from langchain.llms import GPT4All\r\nfrom langchain.document_loaders import DirectoryLoader\r\n\r\nloader = DirectoryLoader('./', glob=\"**/*.yml\", show_progress=True)\r\nlocal_model_path = './models/ggml-gpt4all-l13b-snoozy.bin'\r\n\r\nfrom langchain.embeddings import LlamaCppEmbeddings\r\n\r\nllama = LlamaCppEmbeddings(model_path=local_model_path)\r\n\r\nfrom langchain.indexes import VectorstoreIndexCreator\r\nindex = VectorstoreIndexCreator(embeddings=llama).from_loaders([loader])\r\nindex.query(\"what are the CORE variables ?\")\r\n```\r\n\r\nNo specific requirement of any OpenAI tool, but I have the error below :\r\n```\r\nAVX = 1 | AVX2 = 1 | AVX512 = 0 | AVX512_VBMI = 0 | AVX512_VNNI = 0 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | VSX = 0 | \r\n---------------------------------------------------------------------------\r\nValidationError                           Traceback (most recent call last)\r\n<ipython-input-12-26dba7aded6b> in <module>\r\n      3 \r\n      4 from langchain.indexes import VectorstoreIndexCreator\r\n----> 5 index = VectorstoreIndexCreator(embeddings=llama).from_loaders([loader])\r\n      6 index.query(\"what is the LHYFE variables ?\")\r\n\r\n/usr/local/lib/python3.8/dist-packages/pydantic/main.cpython-38-x86_64-linux-gnu.so in pydantic.main.BaseModel.__init__()\r\n\r\n/usr/local/lib/python3.8/dist-packages/pydantic/main.cpython-38-x86_64-linux-gnu.so in pydantic.main.validate_model()\r\n\r\n/usr/local/lib/python3.8/dist-packages/pydantic/fields.cpython-38-x86_64-linux-gnu.so in pydantic.fields.ModelField.get_default()\r\n\r\n/usr/local/lib/python3.8/dist-packages/pydantic/main.cpython-38-x86_64-linux-gnu.so in pydantic.main.BaseModel.__init__()\r\n\r\nValidationError: 1 validation error for OpenAIEmbeddings\r\n__root__\r\n  Did not find openai_api_key, please add an environment variable `OPENAI_API_KEY` which contains it, or pass  'openai_api_key' as a named parameter. (type=value_error)\r\n\u200b```\r\n```\r\nIs there any specific configuration I missed out ?\r\nMany thanks for your kind help.\r\n\r\n### Expected behavior\r\n\r\nI would have expected it to use the model stated in the code without any need for an OpenAI account.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4661/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4661/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4659",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4659/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4659/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4659/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4659",
        "id": 1708809678,
        "node_id": "PR_kwDOIPDwls5QcrHZ",
        "number": 4659,
        "title": "Harrison/spark connect example",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-14T04:07:02Z",
        "updated_at": "2023-05-14T04:44:55Z",
        "closed_at": "2023-05-14T04:44:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4659",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4659",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4659.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4659.patch",
            "merged_at": "2023-05-14T04:44:54Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4659/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4659/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4658",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4658/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4658/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4658/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4658",
        "id": 1708808949,
        "node_id": "PR_kwDOIPDwls5Qcq-B",
        "number": 4658,
        "title": "Harrison/virtual time",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-14T04:02:53Z",
        "updated_at": "2023-05-14T17:29:19Z",
        "closed_at": "2023-05-14T17:29:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4658",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4658",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4658.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4658.patch",
            "merged_at": "2023-05-14T17:29:18Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4658/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4658/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4657",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4657/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4657/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4657/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4657",
        "id": 1708805847,
        "node_id": "PR_kwDOIPDwls5QcqYx",
        "number": 4657,
        "title": "Harrison/metaphor search",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-14T03:42:38Z",
        "updated_at": "2023-05-14T04:45:06Z",
        "closed_at": "2023-05-14T04:45:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4657",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4657",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4657.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4657.patch",
            "merged_at": "2023-05-14T04:45:05Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4657/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4657/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]