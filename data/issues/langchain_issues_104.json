[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3449",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3449/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3449/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3449/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3449",
        "id": 1681634934,
        "node_id": "I_kwDOIPDwls5kO7Z2",
        "number": 3449,
        "title": "Streaming not working unless I set verbose=True in AzureChatOpenAI()",
        "user": {
            "login": "adumont",
            "id": 333274,
            "node_id": "MDQ6VXNlcjMzMzI3NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/333274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adumont",
            "html_url": "https://github.com/adumont",
            "followers_url": "https://api.github.com/users/adumont/followers",
            "following_url": "https://api.github.com/users/adumont/following{/other_user}",
            "gists_url": "https://api.github.com/users/adumont/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adumont/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adumont/subscriptions",
            "organizations_url": "https://api.github.com/users/adumont/orgs",
            "repos_url": "https://api.github.com/users/adumont/repos",
            "events_url": "https://api.github.com/users/adumont/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adumont/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-24T16:20:34Z",
        "updated_at": "2023-08-22T17:50:42Z",
        "closed_at": "2023-08-22T17:50:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "I have been trying to stream the response using AzureChatOpenAI and it didn't call my MyStreamingCallbackHandler() until I finally set verbose=True and it started to work.\r\n\r\nIs it a bug? I failed to find any indication in the docs about streaming requiring verbose=True when calling AzureChatOpenAI .\r\n\r\n```\r\n    chat_model = AzureChatOpenAI(\r\n        openai_api_base=openai_instance[\"api_base\"],\r\n        openai_api_version=openai_instance[\"api_version\"],\r\n        deployment_name=chat_model_deployment,\r\n        openai_api_key=openai_instance[\"api_key\"],\r\n        openai_api_type = openai_instance[\"api_type\"],\r\n        streaming=True,\r\n        callback_manager=CallbackManager([MyStreamingCallbackHandler()]),\r\n        temperature=0,\r\n        verbose=True\r\n    )\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3449/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3449/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3448",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3448/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3448/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3448/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3448",
        "id": 1681601217,
        "node_id": "I_kwDOIPDwls5kOzLB",
        "number": 3448,
        "title": "Broken intermediate output / parsing is grossly unreliable",
        "user": {
            "login": "Kav-K",
            "id": 21161101,
            "node_id": "MDQ6VXNlcjIxMTYxMTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/21161101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kav-K",
            "html_url": "https://github.com/Kav-K",
            "followers_url": "https://api.github.com/users/Kav-K/followers",
            "following_url": "https://api.github.com/users/Kav-K/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kav-K/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kav-K/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kav-K/subscriptions",
            "organizations_url": "https://api.github.com/users/Kav-K/orgs",
            "repos_url": "https://api.github.com/users/Kav-K/repos",
            "events_url": "https://api.github.com/users/Kav-K/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kav-K/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2023-04-24T16:02:21Z",
        "updated_at": "2023-11-07T21:41:51Z",
        "closed_at": "2023-11-07T21:41:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "```\r\nTraceback (most recent call last):\r\n  File \"/home/gptbot/cogs/search_service_cog.py\", line 322, in on_message\r\n    response, stdout_output = await capture_stdout(\r\n  File \"/home/gptbot/cogs/search_service_cog.py\", line 79, in capture_stdout\r\n    result = await func(*args, **kwargs)\r\n  File \"/usr/lib/python3.9/concurrent/futures/thread.py\", line 58, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/usr/local/lib/python3.9/dist-packages/langchain/chains/base.py\", line 213, in run\r\n    return self(args[0])[self.output_keys[0]]\r\n  File \"/usr/local/lib/python3.9/dist-packages/langchain/chains/base.py\", line 116, in __call__\r\n    raise e\r\n  File \"/usr/local/lib/python3.9/dist-packages/langchain/chains/base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n  File \"/usr/local/lib/python3.9/dist-packages/langchain/agents/agent.py\", line 807, in _call\r\n    output = self.agent.return_stopped_response(\r\n  File \"/usr/local/lib/python3.9/dist-packages/langchain/agents/agent.py\", line 515, in return_stopped_response\r\n    full_output = self.llm_chain.predict(**full_inputs)\r\n  File \"/usr/local/lib/python3.9/dist-packages/langchain/chains/llm.py\", line 151, in predict\r\n    return self(kwargs)[self.output_key]\r\n  File \"/usr/local/lib/python3.9/dist-packages/langchain/chains/base.py\", line 116, in __call__\r\n    raise e\r\n  File \"/usr/local/lib/python3.9/dist-packages/langchain/chains/base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n  File \"/usr/local/lib/python3.9/dist-packages/langchain/chains/llm.py\", line 57, in _call\r\n    return self.apply([inputs])[0]\r\n  File \"/usr/local/lib/python3.9/dist-packages/langchain/chains/llm.py\", line 118, in apply\r\n    response = self.generate(input_list)\r\n  File \"/usr/local/lib/python3.9/dist-packages/langchain/chains/llm.py\", line 61, in generate\r\n    prompts, stop = self.prep_prompts(input_list)\r\n  File \"/usr/local/lib/python3.9/dist-packages/langchain/chains/llm.py\", line 79, in prep_prompts\r\n    prompt = self.prompt.format_prompt(**selected_inputs)\r\n  File \"/usr/local/lib/python3.9/dist-packages/langchain/prompts/chat.py\", line 127, in format_prompt\r\n    messages = self.format_messages(**kwargs)\r\n  File \"/usr/local/lib/python3.9/dist-packages/langchain/prompts/chat.py\", line 186, in format_messages\r\n    message = message_template.format_messages(**rel_params)\r\n  File \"/usr/local/lib/python3.9/dist-packages/langchain/prompts/chat.py\", line 43, in format_messages\r\n    raise ValueError(\r\nValueError: variable agent_scratchpad should be a list of base messages, got {\r\n    \"action\": \"Search-Tool\",\r\n    \"action_input\": \"Who is Harald Baldr?\"\r\n}\r\n\r\n```\r\nMost of the time the agent can't parse it's own tool usage.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3448/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3448/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3446",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3446/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3446/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3446/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3446",
        "id": 1681513674,
        "node_id": "I_kwDOIPDwls5kOdzK",
        "number": 3446,
        "title": "Encapsulate API keys",
        "user": {
            "login": "amir-bio",
            "id": 4315615,
            "node_id": "MDQ6VXNlcjQzMTU2MTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4315615?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amir-bio",
            "html_url": "https://github.com/amir-bio",
            "followers_url": "https://api.github.com/users/amir-bio/followers",
            "following_url": "https://api.github.com/users/amir-bio/following{/other_user}",
            "gists_url": "https://api.github.com/users/amir-bio/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amir-bio/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amir-bio/subscriptions",
            "organizations_url": "https://api.github.com/users/amir-bio/orgs",
            "repos_url": "https://api.github.com/users/amir-bio/repos",
            "events_url": "https://api.github.com/users/amir-bio/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amir-bio/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-24T15:12:21Z",
        "updated_at": "2023-09-24T16:08:02Z",
        "closed_at": "2023-09-24T16:08:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm building a flow where I'm using both gpt-3.5 and gpt-4 based chains and I need to use different API keys for each (due to API access + external factors)\r\n\r\nBoth `ChatOpenAI` and `OpenAI` set `openai.api_key = openai_api_key` which is a global variable on the package.\r\n\r\nThis means that if I instantiate multiple ChatOpenAI instances, the last one's API key will override the other ones and that one will be used when calling the OpenAI endpoints.\r\n\r\nBased on https://github.com/openai/openai-python/issues/233#issuecomment-1464732160 there's an undocumented feature where we can pass the api_key on each openai client call and that key will be used. \r\n\r\nAs a side note, I've also noticed `ChatOpenAI` and a few other classes take in an optional `openai_api_key` as part of initialisation which is correctly used over the env var but the docstring says that the `OPENAI_API_KEY` env var should be set, which doesn't seem to be case. Can we confirm if this env var is needed elsewhere or if it's possible to just pass in the values when instantiating the chat models.\r\n\r\nThanks!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3446/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3446/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3445",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3445/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3445/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3445/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3445",
        "id": 1681468911,
        "node_id": "I_kwDOIPDwls5kOS3v",
        "number": 3445,
        "title": "Possible Enhancement",
        "user": {
            "login": "Vadiml1024",
            "id": 917273,
            "node_id": "MDQ6VXNlcjkxNzI3Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/917273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vadiml1024",
            "html_url": "https://github.com/Vadiml1024",
            "followers_url": "https://api.github.com/users/Vadiml1024/followers",
            "following_url": "https://api.github.com/users/Vadiml1024/following{/other_user}",
            "gists_url": "https://api.github.com/users/Vadiml1024/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Vadiml1024/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Vadiml1024/subscriptions",
            "organizations_url": "https://api.github.com/users/Vadiml1024/orgs",
            "repos_url": "https://api.github.com/users/Vadiml1024/repos",
            "events_url": "https://api.github.com/users/Vadiml1024/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Vadiml1024/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-24T14:51:55Z",
        "updated_at": "2023-09-10T16:28:02Z",
        "closed_at": "2023-09-10T16:28:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I wonder if this work:  https://arxiv.org/abs/2304.11062\r\nCould be integrated with LangChain",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3445/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3445/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3444",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3444/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3444/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3444/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3444",
        "id": 1681415525,
        "node_id": "I_kwDOIPDwls5kOF1l",
        "number": 3444,
        "title": "Azure OpenAI - Exception has occurred: InvalidRequestError Resource not found",
        "user": {
            "login": "micuentadecasa",
            "id": 912298,
            "node_id": "MDQ6VXNlcjkxMjI5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/912298?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micuentadecasa",
            "html_url": "https://github.com/micuentadecasa",
            "followers_url": "https://api.github.com/users/micuentadecasa/followers",
            "following_url": "https://api.github.com/users/micuentadecasa/following{/other_user}",
            "gists_url": "https://api.github.com/users/micuentadecasa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micuentadecasa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micuentadecasa/subscriptions",
            "organizations_url": "https://api.github.com/users/micuentadecasa/orgs",
            "repos_url": "https://api.github.com/users/micuentadecasa/repos",
            "events_url": "https://api.github.com/users/micuentadecasa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micuentadecasa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-04-24T14:31:33Z",
        "updated_at": "2023-09-24T16:08:07Z",
        "closed_at": "2023-09-24T16:08:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, I'm trying to use the examples for Azure OpenAI with langchain, for example this notebook in https://python.langchain.com/en/harrison-docs-refactor-3-24/modules/models/llms/integrations/azure_openai_example.html , but I always find this error:\r\n\r\nException has occurred: InvalidRequestError Resource not found\r\n\r\nI have tried multiple combinations with the environment variables, but nothing works, I have also tested it in a python script with the same results.\r\n\r\nRegards.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3444/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3444/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3443",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3443/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3443/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3443/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3443",
        "id": 1681362534,
        "node_id": "I_kwDOIPDwls5kN45m",
        "number": 3443,
        "title": "Question about setting LANGCHAIN_HANDLER environment variable",
        "user": {
            "login": "xuanxuanQAQ",
            "id": 83892074,
            "node_id": "MDQ6VXNlcjgzODkyMDc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/83892074?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xuanxuanQAQ",
            "html_url": "https://github.com/xuanxuanQAQ",
            "followers_url": "https://api.github.com/users/xuanxuanQAQ/followers",
            "following_url": "https://api.github.com/users/xuanxuanQAQ/following{/other_user}",
            "gists_url": "https://api.github.com/users/xuanxuanQAQ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xuanxuanQAQ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xuanxuanQAQ/subscriptions",
            "organizations_url": "https://api.github.com/users/xuanxuanQAQ/orgs",
            "repos_url": "https://api.github.com/users/xuanxuanQAQ/repos",
            "events_url": "https://api.github.com/users/xuanxuanQAQ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xuanxuanQAQ/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-24T14:08:05Z",
        "updated_at": "2023-04-27T14:21:56Z",
        "closed_at": "2023-04-27T14:21:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello, I came across a code snippet in the tutorial page on \"Conversation Agent (for Chat Models)\" that has left me a bit confused. The tutorial also mentioned a warning error like this:\r\n`WARNING:root:Failed to default session, using empty session: HTTPConnectionPool(host='localhost', port=8000): Max retries exceeded with url: /sessions (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10a1767c0>: Failed to establish a new connection: [Errno 61] Connection refused'))`\r\nThen i found the line of code in question is:\r\n`os.environ[\"LANGCHAIN_HANDLER\"] = \"langchain\"`\r\nWhen I remove this line from the code, the program still seems to work without any errors. So why is this line of code exists.\r\nThank you!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3443/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3443/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3442",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3442/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3442/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3442/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3442",
        "id": 1681139312,
        "node_id": "PR_kwDOIPDwls5O_wjM",
        "number": 3442,
        "title": "bug_fixes: use md5 instead of uuid id generation",
        "user": {
            "login": "killpanda",
            "id": 217538,
            "node_id": "MDQ6VXNlcjIxNzUzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/217538?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/killpanda",
            "html_url": "https://github.com/killpanda",
            "followers_url": "https://api.github.com/users/killpanda/followers",
            "following_url": "https://api.github.com/users/killpanda/following{/other_user}",
            "gists_url": "https://api.github.com/users/killpanda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/killpanda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/killpanda/subscriptions",
            "organizations_url": "https://api.github.com/users/killpanda/orgs",
            "repos_url": "https://api.github.com/users/killpanda/repos",
            "events_url": "https://api.github.com/users/killpanda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/killpanda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-24T12:14:51Z",
        "updated_at": "2023-04-25T04:39:51Z",
        "closed_at": "2023-04-25T04:39:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3442",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3442",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3442.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3442.patch",
            "merged_at": "2023-04-25T04:39:51Z"
        },
        "body": "At present, the method of generating `point` in qdrant is to use random `uuid`. The problem with this approach is that even documents with the same content will be inserted repeatedly instead of updated. Using `md5` as the `ID` of `point` to insert text can achieve true `update or insert`.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3442/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3442/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3441",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3441/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3441/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3441/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3441",
        "id": 1681126941,
        "node_id": "I_kwDOIPDwls5kM_Yd",
        "number": 3441,
        "title": "LLMOps integration of Aim and Wandb breaks when trying to parse agent output into dashboard for experiment tracking...",
        "user": {
            "login": "tosi-n",
            "id": 29394759,
            "node_id": "MDQ6VXNlcjI5Mzk0NzU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/29394759?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tosi-n",
            "html_url": "https://github.com/tosi-n",
            "followers_url": "https://api.github.com/users/tosi-n/followers",
            "following_url": "https://api.github.com/users/tosi-n/following{/other_user}",
            "gists_url": "https://api.github.com/users/tosi-n/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tosi-n/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tosi-n/subscriptions",
            "organizations_url": "https://api.github.com/users/tosi-n/orgs",
            "repos_url": "https://api.github.com/users/tosi-n/repos",
            "events_url": "https://api.github.com/users/tosi-n/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tosi-n/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-24T12:07:58Z",
        "updated_at": "2023-09-10T16:28:08Z",
        "closed_at": "2023-09-10T16:28:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Aim::\r\naim.Text(outputs_res[\"output\"]), name=\"on_chain_end\", context=resp\r\nKeyError: 'output'\r\n\r\nWandb::\r\nresp.update({\"action\": \"on_chain_end\", \"outputs\": outputs[\"output\"]})\r\nKeyError: 'output'\r\n\r\n\r\nHas anyone dealt with this issue yet while building custom agents with LLMSingleActionAgent, thank you",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3441/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3441/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3440",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3440/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3440/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3440/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3440",
        "id": 1681033264,
        "node_id": "PR_kwDOIPDwls5O_ZDS",
        "number": 3440,
        "title": "do not await sync callback managers",
        "user": {
            "login": "indietyp",
            "id": 7252775,
            "node_id": "MDQ6VXNlcjcyNTI3NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7252775?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/indietyp",
            "html_url": "https://github.com/indietyp",
            "followers_url": "https://api.github.com/users/indietyp/followers",
            "following_url": "https://api.github.com/users/indietyp/following{/other_user}",
            "gists_url": "https://api.github.com/users/indietyp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/indietyp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/indietyp/subscriptions",
            "organizations_url": "https://api.github.com/users/indietyp/orgs",
            "repos_url": "https://api.github.com/users/indietyp/repos",
            "events_url": "https://api.github.com/users/indietyp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/indietyp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-24T11:21:13Z",
        "updated_at": "2023-04-24T16:52:04Z",
        "closed_at": "2023-04-24T16:52:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3440",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3440",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3440.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3440.patch",
            "merged_at": "2023-04-24T16:52:04Z"
        },
        "body": "This fixes a bug in the math LLM, where even the sync manager was awaited, creating a nasty `RuntimeError`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3440/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3440/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3438",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3438/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3438/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3438/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3438",
        "id": 1680927591,
        "node_id": "I_kwDOIPDwls5kMOtn",
        "number": 3438,
        "title": "[mrkl/output_parser.py] Behavior when there is no action input?",
        "user": {
            "login": "caffeinism",
            "id": 39237502,
            "node_id": "MDQ6VXNlcjM5MjM3NTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/39237502?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/caffeinism",
            "html_url": "https://github.com/caffeinism",
            "followers_url": "https://api.github.com/users/caffeinism/followers",
            "following_url": "https://api.github.com/users/caffeinism/following{/other_user}",
            "gists_url": "https://api.github.com/users/caffeinism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/caffeinism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/caffeinism/subscriptions",
            "organizations_url": "https://api.github.com/users/caffeinism/orgs",
            "repos_url": "https://api.github.com/users/caffeinism/repos",
            "events_url": "https://api.github.com/users/caffeinism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/caffeinism/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-24T10:19:03Z",
        "updated_at": "2023-09-10T16:28:13Z",
        "closed_at": "2023-09-10T16:28:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "I think that among the actions that the agent can take, there may be actions without input. (e.g. return the current state in real time)\r\n\r\nBut in practice, LM often does that, but current MRKL parsers don't allow it. I'm a newbie so I don't know, but is there a special reason?\r\n\r\nWill there be a problem if I change it in the following way?\r\n\r\nhttps://github.com/hwchase17/langchain/blob/0cf934ce7d8150dddf4a2514d6e7729a16d55b0f/langchain/agents/mrkl/output_parser.py#L21\r\n\r\n```\r\n        regex = r\"Action\\s*\\d*\\s*:(.*?)(?:$|(?:\\nAction\\s*\\d*\\s*Input\\s*\\d*\\s*:[\\s]*(.*)))\"\r\n```\r\nhttps://github.com/hwchase17/langchain/blob/0cf934ce7d8150dddf4a2514d6e7729a16d55b0f/langchain/agents/mrkl/output_parser.py#L27\r\n```\r\n        return AgentAction(action, action_input.strip(\" \").strip('\"') if action_input is not None else {}, text)\r\n```\r\n\r\nThanks for reading.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3438/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3438/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3437",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3437/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3437/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3437/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3437",
        "id": 1680922082,
        "node_id": "PR_kwDOIPDwls5O_AyQ",
        "number": 3437,
        "title": "feat: Consistent Search tools for Bing, DDG, Google",
        "user": {
            "login": "kayvane1",
            "id": 42403093,
            "node_id": "MDQ6VXNlcjQyNDAzMDkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/42403093?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kayvane1",
            "html_url": "https://github.com/kayvane1",
            "followers_url": "https://api.github.com/users/kayvane1/followers",
            "following_url": "https://api.github.com/users/kayvane1/following{/other_user}",
            "gists_url": "https://api.github.com/users/kayvane1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kayvane1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kayvane1/subscriptions",
            "organizations_url": "https://api.github.com/users/kayvane1/orgs",
            "repos_url": "https://api.github.com/users/kayvane1/repos",
            "events_url": "https://api.github.com/users/kayvane1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kayvane1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-24T10:15:43Z",
        "updated_at": "2023-04-26T22:05:04Z",
        "closed_at": "2023-04-26T22:05:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3437",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3437",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3437.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3437.patch",
            "merged_at": "2023-04-26T22:05:03Z"
        },
        "body": "Tools for Bing, DDG and Google weren't consistent even though the underlying implementations were. \r\nAll three services now have the same tools and implementations to easily switch and experiment when building chains.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3437/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3437/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3436",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3436/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3436/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3436/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3436",
        "id": 1680907446,
        "node_id": "I_kwDOIPDwls5kMJy2",
        "number": 3436,
        "title": "Cognitive interview agent",
        "user": {
            "login": "louis030195",
            "id": 25003283,
            "node_id": "MDQ6VXNlcjI1MDAzMjgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/25003283?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/louis030195",
            "html_url": "https://github.com/louis030195",
            "followers_url": "https://api.github.com/users/louis030195/followers",
            "following_url": "https://api.github.com/users/louis030195/following{/other_user}",
            "gists_url": "https://api.github.com/users/louis030195/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/louis030195/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/louis030195/subscriptions",
            "organizations_url": "https://api.github.com/users/louis030195/orgs",
            "repos_url": "https://api.github.com/users/louis030195/repos",
            "events_url": "https://api.github.com/users/louis030195/events{/privacy}",
            "received_events_url": "https://api.github.com/users/louis030195/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-24T10:07:20Z",
        "updated_at": "2023-09-10T16:28:18Z",
        "closed_at": "2023-09-10T16:28:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Just an early idea of an agent i wanted to share:\r\n\r\nThe cognitive interview is a police interviewing technique used to gather information from witnesses of specific events. It is based on the idea that witnesses may not remember everything they saw, but their memory can be improved by certain psychological techniques. \r\n\r\nThe cognitive interview usually takes place in a structured format, where the interviewer first establishes a rapport with the witness tobuild trust and make them feel comfortable. The interviewer then encourages the witness to provide a detailed account of events by using open-ended questions and allowing the witness to speak freely. The interviewer may also ask the witness to recall specific details, such as the color of a car or the facial features of a suspect. \r\n\r\nIn addition to open-ended questions, the cognitive interview uses techniques such as asking the witness to visualize the scene, recalling the events in reverse order, and encouraging the witness to provide context and emotional reactions. These techniques aim to help the witness remember more details and give a more accurate account of what happened.\r\n\r\nThe cognitive interview can be a valuable tool for police investigations as it can help to gather more information and potentially identify suspects. However, it is important for the interviewer to be trained in using this technique to ensure that it is conducted properly and ethically. Additionally, it is important to note that not all witnesses may be suitable for a cognitive interview, especially those who may have experienced trauma or have cognitive disabilities.\r\n\r\ntldr, steps:\r\n1. Establish rapport with the witness\r\n2. Encourage the witness to provide a detailed and open-ended account of events\r\n3. Ask the witness to recall specific details\r\n4. Use techniques such as visualization and recalling events in reverse order to aid memory\r\n5. Ensure the interviewer is trained to conduct the technique properly and ethically.\r\n\r\n\r\nPseudo code that would implement this strategy in large language model prompting:\r\n\r\n```\r\nllm_system = \"\"\"To implement the cognitive interview in police interviews of witnesses, follow these steps:\r\n1. Begin by establishing a rapport with the witness to build trust and comfort.\r\n2. Use open-ended questions and encourage the witness to provide a detailed account of events.\r\n3. Ask the witness to recall specific details, such as the color of a car or the suspect's facial features.\r\n4. Use techniques such as visualization and recalling events in reverse order to aid memory.\r\n5. Remember to conduct the interview properly and ethically, and consider whether the technique is appropriate for all witnesses, especially those who may have experienced trauma or have cognitive disabilities.\"\"\" \r\n\r\nprompt = \"How can the cognitive interview be used in police interviews of witnesses?\"\r\n\r\ngenerated_text = llm_system + prompt\r\n\r\nprint(generated_text)\r\n```\r\n\r\nRead more at:\r\nhttps://www.perplexity.ai/?s=e&uuid=086ab031-cb02-41e6-976d-347ecc62ffc0",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3436/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3436/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3435",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3435/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3435/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3435/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3435",
        "id": 1680898670,
        "node_id": "I_kwDOIPDwls5kMHpu",
        "number": 3435,
        "title": "How to combine tools and vectorstores",
        "user": {
            "login": "xukecheng",
            "id": 29099863,
            "node_id": "MDQ6VXNlcjI5MDk5ODYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/29099863?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xukecheng",
            "html_url": "https://github.com/xukecheng",
            "followers_url": "https://api.github.com/users/xukecheng/followers",
            "following_url": "https://api.github.com/users/xukecheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/xukecheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xukecheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xukecheng/subscriptions",
            "organizations_url": "https://api.github.com/users/xukecheng/orgs",
            "repos_url": "https://api.github.com/users/xukecheng/repos",
            "events_url": "https://api.github.com/users/xukecheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xukecheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-24T10:02:55Z",
        "updated_at": "2023-06-13T09:21:10Z",
        "closed_at": "2023-06-13T09:21:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am building an agent toolkit for APITable, a SaaS product, with the ultimate goal of enabling natural language API calls. I want to know if I can dynamically import a tool?\r\n\r\nMy idea is to create a `tool_prompt.txt` file with contents like this:\r\n\r\n```\r\nGet Spaces\r\nMode: get_spaces\r\nDescription: This tool is useful when you need to fetch all the spaces the user has access to, \r\nfind out how many spaces there are, or as an intermediary step that involv searching by spaces. \r\nthere is no input to this tool.\r\n\r\nGet Nodes\r\nMode: get_nodes\r\nDescription: This tool uses APITable's node API to help you search for datasheets, mirrors, dashboards, folders, and forms.\r\nThese are all types of nodes in APITable.\r\nThe input to this tool is a space id.\r\nYou should only respond in JSON format like this:\r\n{{\"space_id\": \"spcjXzqVrjaP3\"}}\r\nDo not make up a space_id if you're not sure about it, use the get_spaces tool to retrieve all available space_ids.\r\n\r\nGet Fields\r\nMode: get_fields\r\nDescription: This tool helps you search for fields in a datasheet using APITable's field API.\r\nTo use this tool, input a datasheet id.\r\nIf the user query includes terms like \"latest\", \"oldest\", or a specific field name, \r\nplease use this tool first to get the field name as field key\r\nYou should only respond in JSON format like this:\r\n{{\"datasheet_id\": \"dstlRNFl8L2mufwT5t\"}}\r\nDo not make up a datasheet_id if you're not sure about it, use the get_nodes tool to retrieve all available datasheet_ids.\r\n```\r\n\r\nThen, I want to create vectors and save them to a vector database like this:\r\n\r\n```python\r\nembeddings = OpenAIEmbeddings()\r\nwith open(\"tool_prompt.txt\") as f:\r\n    tool_prompts = f.read()\r\ntext_splitter = CharacterTextSplitter(\r\n    chunk_size=100,\r\n    chunk_overlap=0,\r\n)\r\ntexts = text_splitter.create_documents([tool_prompts])\r\nvectorstore = Chroma.from_documents(texts, embeddings, persist_directory=\"./db\")\r\nvectorstore.persist()\r\n```\r\n\r\nThen, during initialize_agent, there will only be a single Planner Tool that reads from the vectorstore to find similar tools based on the query. The agent will inform LLMs that a new tool has been added, and LLMs will use the new tool to perform tasks.\r\n\r\n```python\r\ndef planner(self, query: str) -> str:\r\n    db = Chroma(persist_directory=\"./db\", embedding_function=self.embeddings)\r\n    docs = db.similarity_search_with_score(query)\r\n    return (\r\n        f\"Add tools to your workflow to get the results: {docs[0][0].page_content}\"\r\n    )\r\n```\r\n\r\nThis approach reduces token consumption\r\n\r\nBefore:\r\n```shell\r\n> Finished chain.\r\nTotal Tokens: 752\r\nPrompt Tokens: 656\r\nCompletion Tokens: 96\r\nSuccessful Requests: 2\r\nTotal Cost (USD): $0.0015040000000000001\r\n```\r\n\r\nAfter:\r\n```\r\n> Finished chain.\r\nTotal Tokens: 3514\r\nPrompt Tokens: 3346\r\nCompletion Tokens: 168\r\nSuccessful Requests: 2\r\nTotal Cost (USD): $0.0070279999999999995\r\n```\r\n\r\nHowever, when LLMs try to use the new tool to perform tasks, it is intercepted because the tool has not been registered during initialize_agent. Thus, I am forced to add an empty tool for registration:\r\n\r\n```python\r\noperations: List[Dict] = [\r\n    {\r\n        \"name\": \"Get Spaces\",\r\n        \"description\": \"\",\r\n    },\r\n    {\r\n        \"name\": \"Get Nodes\",\r\n        \"description\": \"\",\r\n    },\r\n    {\r\n        \"name\": \"Get Fields\",\r\n        \"description\": \"\",\r\n    },\r\n    {\r\n        \"name\": \"Create Fields\",\r\n        \"description\": \"\",\r\n    },\r\n    {\r\n        \"name\": \"Get Records\",\r\n        \"description\": \"\",\r\n    },\r\n    {\r\n        \"name\": \"Planner\",\r\n        \"description\": APITABLE_CATCH_ALL_PROMPT,\r\n    },\r\n]\r\n```\r\nHowever, this approach is not effective since LLMs do not prioritize using the Planner Tool.\r\n\r\nTherefore, I want to know if there is a better way to combine tools and vector stores.\r\n\r\nRepo: https://github.com/xukecheng/apitable_agent_toolkit/tree/feat/combine_vectorstores",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3435/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3435/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3434",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3434/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3434/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3434/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3434",
        "id": 1680767346,
        "node_id": "PR_kwDOIPDwls5O-e-V",
        "number": 3434,
        "title": "Azure CosmosDB memory",
        "user": {
            "login": "eavanvalkenburg",
            "id": 13749212,
            "node_id": "MDQ6VXNlcjEzNzQ5MjEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13749212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eavanvalkenburg",
            "html_url": "https://github.com/eavanvalkenburg",
            "followers_url": "https://api.github.com/users/eavanvalkenburg/followers",
            "following_url": "https://api.github.com/users/eavanvalkenburg/following{/other_user}",
            "gists_url": "https://api.github.com/users/eavanvalkenburg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eavanvalkenburg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eavanvalkenburg/subscriptions",
            "organizations_url": "https://api.github.com/users/eavanvalkenburg/orgs",
            "repos_url": "https://api.github.com/users/eavanvalkenburg/repos",
            "events_url": "https://api.github.com/users/eavanvalkenburg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eavanvalkenburg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-24T08:58:49Z",
        "updated_at": "2023-05-22T03:17:21Z",
        "closed_at": "2023-04-25T05:15:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3434",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3434",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3434.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3434.patch",
            "merged_at": "2023-04-25T05:15:12Z"
        },
        "body": "Still needs docs, otherwise works.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3434/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3434/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3433",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3433/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3433/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3433/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3433",
        "id": 1680741720,
        "node_id": "I_kwDOIPDwls5kLhVY",
        "number": 3433,
        "title": "AzureOpenAI instance fails because OPENAI_API_TYPE and OPENAI_API_VERSION are not inherited from environment",
        "user": {
            "login": "Laurengcy",
            "id": 30592444,
            "node_id": "MDQ6VXNlcjMwNTkyNDQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/30592444?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Laurengcy",
            "html_url": "https://github.com/Laurengcy",
            "followers_url": "https://api.github.com/users/Laurengcy/followers",
            "following_url": "https://api.github.com/users/Laurengcy/following{/other_user}",
            "gists_url": "https://api.github.com/users/Laurengcy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Laurengcy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Laurengcy/subscriptions",
            "organizations_url": "https://api.github.com/users/Laurengcy/orgs",
            "repos_url": "https://api.github.com/users/Laurengcy/repos",
            "events_url": "https://api.github.com/users/Laurengcy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Laurengcy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-24T08:41:56Z",
        "updated_at": "2023-04-25T10:02:39Z",
        "closed_at": "2023-04-24T08:53:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "BaseOpenAI's validate_environment does not set OPENAI_API_TYPE and OPENAI_API_VERSION from environment. As a result, the AzureOpenAI instance failed when called to run. \r\n\r\n```\r\nfrom langchain.llms import AzureOpenAI\r\nfrom langchain.chains import RetrievalQA\r\n\r\nmodel = RetrievalQA.from_chain_type(\r\n    llm=AzureOpenAI(\r\n        deployment_name='DaVinci-003',\r\n        ), \r\n    chain_type=\"stuff\", \r\n    retriever=vectordb.as_retriever(), return_source_documents=True\r\n)\r\n\r\nmodel({\"query\": 'testing'})\r\n```\r\n\r\nError:\r\n```\r\nFile [~/miniconda3/envs/demo/lib/python3.9/site-packages/openai/api_requestor.py:680](/site-packages/openai/api_requestor.py:680), in APIRequestor._interpret_response_line(self, rbody, rcode, rheaders, stream)\r\n    678 stream_error = stream and \"error\" in resp.data\r\n    679 if stream_error or not 200 <= rcode < 300:\r\n--> 680     raise self.handle_error_response(\r\n    681         rbody, rcode, resp.data, rheaders, stream_error=stream_error\r\n    682     )\r\n    683 return resp\r\n\r\nInvalidRequestError: Resource not found\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3433/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3433/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3432",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3432/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3432/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3432/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3432",
        "id": 1680704272,
        "node_id": "I_kwDOIPDwls5kLYMQ",
        "number": 3432,
        "title": "ValueError: Could not parse LLM output: `    `",
        "user": {
            "login": "xerxes01",
            "id": 21081033,
            "node_id": "MDQ6VXNlcjIxMDgxMDMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/21081033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xerxes01",
            "html_url": "https://github.com/xerxes01",
            "followers_url": "https://api.github.com/users/xerxes01/followers",
            "following_url": "https://api.github.com/users/xerxes01/following{/other_user}",
            "gists_url": "https://api.github.com/users/xerxes01/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xerxes01/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xerxes01/subscriptions",
            "organizations_url": "https://api.github.com/users/xerxes01/orgs",
            "repos_url": "https://api.github.com/users/xerxes01/repos",
            "events_url": "https://api.github.com/users/xerxes01/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xerxes01/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-24T08:17:11Z",
        "updated_at": "2023-09-10T16:28:23Z",
        "closed_at": "2023-09-10T16:28:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am using the huggingface hosted vicuna-13b model ([link](https://huggingface.co/eachadea/vicuna-13b-1.1)) along with llamaindex and langchain to create a functioning chatbot on custom data ([link](https://github.com/jerryjliu/llama_index/blob/main/examples/chatbot/Chatbot_SEC.ipynb)). However, I'm always getting this error :\r\n\r\n```\r\nValueError: Could not parse LLM output: `        \r\n`\r\n```\r\n\r\nThis is my code snippet:\r\n\r\n\r\n\r\n```\r\nfrom langchain.llms.base import LLM\r\nfrom transformers import pipeline\r\nimport torch\r\nfrom langchain import PromptTemplate, HuggingFaceHub\r\nfrom langchain.llms import HuggingFacePipeline\r\n\r\nfrom transformers import AutoTokenizer, AutoModelForCausalLM\r\n\r\ntokenizer = AutoTokenizer.from_pretrained(\"eachadea/vicuna-13b-1.1\")\r\n\r\nmodel = AutoModelForCausalLM.from_pretrained(\"eachadea/vicuna-13b-1.1\")\r\n\r\n\r\n\r\npipeline = pipeline(\r\n                    \"text-generation\",\r\n                    model=model,\r\n                    tokenizer= tokenizer,\r\n                    device=1,\r\n                    model_kwargs={\"torch_dtype\":torch.bfloat16}, max_length=500)\r\n\r\n\r\ncustom_llm = HuggingFacePipeline(pipeline =pipeline)\r\n.\r\n.\r\n.\r\n.\r\n.\r\ntoolkit = LlamaToolkit(\r\n    index_configs=index_configs,\r\n    graph_configs=[graph_config]\r\n)\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\")\r\n# llm=OpenAI(temperature=0, openai_api_key=\"sk-\")\r\n# llm = vicuna_llm\r\nagent_chain = create_llama_chat_agent(\r\n    toolkit,\r\n    custom_llm,\r\n    memory=memory,\r\n    verbose=True\r\n)\r\nagent_chain.run(input=\"hey vicuna how are u ??\")\r\n```\r\n\r\nWhat might be the issue?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3432/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3432/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3431",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3431/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3431/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3431/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3431",
        "id": 1680687940,
        "node_id": "PR_kwDOIPDwls5O-Obw",
        "number": 3431,
        "title": "langchain-server: Do not expose postgresql port to host",
        "user": {
            "login": "sliedes",
            "id": 2307997,
            "node_id": "MDQ6VXNlcjIzMDc5OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2307997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sliedes",
            "html_url": "https://github.com/sliedes",
            "followers_url": "https://api.github.com/users/sliedes/followers",
            "following_url": "https://api.github.com/users/sliedes/following{/other_user}",
            "gists_url": "https://api.github.com/users/sliedes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sliedes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sliedes/subscriptions",
            "organizations_url": "https://api.github.com/users/sliedes/orgs",
            "repos_url": "https://api.github.com/users/sliedes/repos",
            "events_url": "https://api.github.com/users/sliedes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sliedes/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "agola11",
                "id": 9536492,
                "node_id": "MDQ6VXNlcjk1MzY0OTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/agola11",
                "html_url": "https://github.com/agola11",
                "followers_url": "https://api.github.com/users/agola11/followers",
                "following_url": "https://api.github.com/users/agola11/following{/other_user}",
                "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
                "organizations_url": "https://api.github.com/users/agola11/orgs",
                "repos_url": "https://api.github.com/users/agola11/repos",
                "events_url": "https://api.github.com/users/agola11/events{/privacy}",
                "received_events_url": "https://api.github.com/users/agola11/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-24T08:07:30Z",
        "updated_at": "2023-04-26T09:12:02Z",
        "closed_at": "2023-04-25T05:19:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3431",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3431",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3431.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3431.patch",
            "merged_at": "2023-04-25T05:19:24Z"
        },
        "body": "Apart from being unnecessary, postgresql is run on its default port, which means that the langchain-server will fail to start if there is already a postgresql server running on the host. This is obviously less than ideal.\r\n\r\n(Yeah, I don't understand why \"expose\" is the syntax that does not expose the ports to the host...)\r\n\r\nTested by running langchain-server and trying out debugging on a host that already has postgresql bound to the port 5432.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3431/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3431/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3429",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3429/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3429/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3429/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3429",
        "id": 1680648980,
        "node_id": "I_kwDOIPDwls5kLKsU",
        "number": 3429,
        "title": "Cannot specify max iterations when using create_json_agent ",
        "user": {
            "login": "paulbatum",
            "id": 10663,
            "node_id": "MDQ6VXNlcjEwNjYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/10663?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulbatum",
            "html_url": "https://github.com/paulbatum",
            "followers_url": "https://api.github.com/users/paulbatum/followers",
            "following_url": "https://api.github.com/users/paulbatum/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulbatum/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulbatum/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulbatum/subscriptions",
            "organizations_url": "https://api.github.com/users/paulbatum/orgs",
            "repos_url": "https://api.github.com/users/paulbatum/repos",
            "events_url": "https://api.github.com/users/paulbatum/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulbatum/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-24T07:44:17Z",
        "updated_at": "2023-09-22T04:22:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Specifying max_iterations does not take effect when using create_json_agent. The following code is from [this page](https://python.langchain.com/en/latest/modules/agents/toolkits/examples/json.html?highlight=JsonSpec#initialization), with max_iterations added:\r\n\r\n```\r\nimport os\r\nimport yaml\r\n\r\nfrom langchain.agents import (\r\n    create_json_agent,\r\n    AgentExecutor\r\n)\r\nfrom langchain.agents.agent_toolkits import JsonToolkit\r\nfrom langchain.chains import LLMChain\r\nfrom langchain.llms.openai import OpenAI\r\nfrom langchain.requests import TextRequestsWrapper\r\nfrom langchain.tools.json.tool import JsonSpec\r\n```\r\n\r\n```\r\nwith open(\"openai_openapi.yml\") as f:\r\n    data = yaml.load(f, Loader=yaml.FullLoader)\r\njson_spec = JsonSpec(dict_=data, max_value_length=4000)\r\njson_toolkit = JsonToolkit(spec=json_spec)\r\n\r\njson_agent_executor = create_json_agent(\r\n    llm=OpenAI(temperature=0),\r\n    toolkit=json_toolkit,\r\n    verbose=True,\r\n    max_iterations=3\r\n)\r\n```\r\n\r\nThe output consists of more than 3 iterations:\r\n\r\n```\r\n> Entering new AgentExecutor chain...\r\nAction: json_spec_list_keys\r\nAction Input: data\r\nObservation: ['openapi', 'info', 'servers', 'tags', 'paths', 'components', 'x-oaiMeta']\r\nThought: I should look at the paths key to see what endpoints exist\r\nAction: json_spec_list_keys\r\nAction Input: data[\"paths\"]\r\nObservation: ['/engines', '/engines/{engine_id}', '/completions', '/chat/completions', '/edits', '/images/generations', '/images/edits', '/images/variations', '/embeddings', '/audio/transcriptions', '/audio/translations', '/engines/{engine_id}/search', '/files', '/files/{file_id}', '/files/{file_id}/content', '/answers', '/classifications', '/fine-tunes', '/fine-tunes/{fine_tune_id}', '/fine-tunes/{fine_tune_id}/cancel', '/fine-tunes/{fine_tune_id}/events', '/models', '/models/{model}', '/moderations']\r\nThought: I should look at the /completions endpoint to see what parameters are required\r\nAction: json_spec_list_keys\r\nAction Input: data[\"paths\"][\"/completions\"]\r\nObservation: ['post']\r\nThought: I should look at the post key to see what parameters are required\r\nAction: json_spec_list_keys\r\nAction Input: data[\"paths\"][\"/completions\"][\"post\"]\r\nObservation: ['operationId', 'tags', 'summary', 'requestBody', 'responses', 'x-oaiMeta']\r\nThought: I should look at the requestBody key to see what parameters are required\r\nAction: json_spec_list_keys\r\nAction Input: data[\"paths\"][\"/completions\"][\"post\"][\"requestBody\"]\r\nObservation: ['required', 'content']\r\nThought: I should look at the required key to see what parameters are required\r\nAction: json_spec_get_value\r\nAction Input: data[\"paths\"][\"/completions\"][\"post\"][\"requestBody\"][\"required\"]\r\n```\r\n\r\nMaybe kwargs need to be passed in to `from_agent_and_tools`?\r\nhttps://github.com/hwchase17/langchain/blob/0cf934ce7d8150dddf4a2514d6e7729a16d55b0f/langchain/agents/agent_toolkits/json/base.py#L41-L43",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3429/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3429/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3428",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3428/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3428/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3428/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3428",
        "id": 1680632696,
        "node_id": "I_kwDOIPDwls5kLGt4",
        "number": 3428,
        "title": "`zero-shot-react-description` performance has decreased?",
        "user": {
            "login": "ArchieLuxton",
            "id": 78753319,
            "node_id": "MDQ6VXNlcjc4NzUzMzE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/78753319?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ArchieLuxton",
            "html_url": "https://github.com/ArchieLuxton",
            "followers_url": "https://api.github.com/users/ArchieLuxton/followers",
            "following_url": "https://api.github.com/users/ArchieLuxton/following{/other_user}",
            "gists_url": "https://api.github.com/users/ArchieLuxton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ArchieLuxton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ArchieLuxton/subscriptions",
            "organizations_url": "https://api.github.com/users/ArchieLuxton/orgs",
            "repos_url": "https://api.github.com/users/ArchieLuxton/repos",
            "events_url": "https://api.github.com/users/ArchieLuxton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ArchieLuxton/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-24T07:32:38Z",
        "updated_at": "2023-09-10T16:28:28Z",
        "closed_at": "2023-09-10T16:28:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I've noticed recently that the performance of the `zero-shot-react-description` agent has decreased significantly for various tasks and various tools. A very simple example attached, which a few weeks ago would pass perfectly maybe 80% of the time, but now hasn't managed a reasonable attempt in >10 tries. The main issue here seems to be the first stage, where it consistently searches for 'weather in London and Paris', where a few weeks ago it would search for one city first and then the next. \r\n\r\n![agent](https://user-images.githubusercontent.com/78753319/233928396-4e48b28d-a720-4d5e-803d-d193a8d4f8b5.PNG)\r\n\r\nDoes anyone have any insight as to what might have happened?\r\n\r\nThanks",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3428/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3428/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3427",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3427/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3427/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3427/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3427",
        "id": 1680619340,
        "node_id": "I_kwDOIPDwls5kLDdM",
        "number": 3427,
        "title": "AzureBlobStorageContainerLoader doesn't load the container",
        "user": {
            "login": "hiromasakei",
            "id": 73577610,
            "node_id": "MDQ6VXNlcjczNTc3NjEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/73577610?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hiromasakei",
            "html_url": "https://github.com/hiromasakei",
            "followers_url": "https://api.github.com/users/hiromasakei/followers",
            "following_url": "https://api.github.com/users/hiromasakei/following{/other_user}",
            "gists_url": "https://api.github.com/users/hiromasakei/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hiromasakei/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hiromasakei/subscriptions",
            "organizations_url": "https://api.github.com/users/hiromasakei/orgs",
            "repos_url": "https://api.github.com/users/hiromasakei/repos",
            "events_url": "https://api.github.com/users/hiromasakei/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hiromasakei/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-24T07:22:28Z",
        "updated_at": "2023-04-25T01:20:11Z",
        "closed_at": "2023-04-25T00:28:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi.\r\n\r\nI try to run the following code\r\n```\r\nconnection_string = \"DefaultEndpointsProtocol=https;AccountName=<myaccount>;AccountKey=<mykey>\"\r\ncontainer=\"<mycontainer>\"\r\nloader = AzureBlobStorageContainerLoader(\r\n    conn_str=connection_string,\r\n    container=container\r\n)\r\ndocuments = loader.load()\r\n```\r\nbut the code `documents = loader.load()` takes like several minutes, and still not response any value.\r\nThe container has several html files and it has 1.5MB volume, which I think is not so heavy data.\r\n\r\nI try above code several times, and I once got the following error.\r\n\r\n```\r\n      0 [main] python 868 C:\\<path to python exe>\\Python310\\python.exe: *** fatal error - Internal error: TP_NUM_C_BUFS too small: 50\r\n   1139 [main] python 868 cygwin_exception::open_stackdumpfile: Dumping stack trace to python.exe.stackdump\r\n```\r\n\r\nMy python environment is following\r\n\r\n- OS Windows 10\r\n- Python version is 3.10\r\n- use virtualenv\r\n- running my script in mingw console (it's git bash, actually)\r\n\r\nHas any Ideas to solve this situation?\r\n\r\n(And, THANK YOU for the great framework)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3427/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3427/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3426",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3426/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3426/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3426/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3426",
        "id": 1680603979,
        "node_id": "PR_kwDOIPDwls5O987_",
        "number": 3426,
        "title": "small constructor change and updated notebook",
        "user": {
            "login": "eavanvalkenburg",
            "id": 13749212,
            "node_id": "MDQ6VXNlcjEzNzQ5MjEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13749212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eavanvalkenburg",
            "html_url": "https://github.com/eavanvalkenburg",
            "followers_url": "https://api.github.com/users/eavanvalkenburg/followers",
            "following_url": "https://api.github.com/users/eavanvalkenburg/following{/other_user}",
            "gists_url": "https://api.github.com/users/eavanvalkenburg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eavanvalkenburg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eavanvalkenburg/subscriptions",
            "organizations_url": "https://api.github.com/users/eavanvalkenburg/orgs",
            "repos_url": "https://api.github.com/users/eavanvalkenburg/repos",
            "events_url": "https://api.github.com/users/eavanvalkenburg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eavanvalkenburg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-24T07:12:11Z",
        "updated_at": "2023-04-24T17:42:38Z",
        "closed_at": "2023-04-24T17:42:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3426",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3426",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3426.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3426.patch",
            "merged_at": "2023-04-24T17:42:38Z"
        },
        "body": "small change in the pydantic definitions, same api. \r\n\r\nupdated notebook with right constructure and added few shot example",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3426/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3426/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3425",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3425/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3425/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3425/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3425",
        "id": 1680596455,
        "node_id": "PR_kwDOIPDwls5O97TY",
        "number": 3425,
        "title": "fix(chain): RetrievalQA should send all inputs to combine_documents_chain",
        "user": {
            "login": "plucury",
            "id": 159480,
            "node_id": "MDQ6VXNlcjE1OTQ4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/159480?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/plucury",
            "html_url": "https://github.com/plucury",
            "followers_url": "https://api.github.com/users/plucury/followers",
            "following_url": "https://api.github.com/users/plucury/following{/other_user}",
            "gists_url": "https://api.github.com/users/plucury/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/plucury/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/plucury/subscriptions",
            "organizations_url": "https://api.github.com/users/plucury/orgs",
            "repos_url": "https://api.github.com/users/plucury/repos",
            "events_url": "https://api.github.com/users/plucury/events{/privacy}",
            "received_events_url": "https://api.github.com/users/plucury/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "dev2049",
                "id": 130488702,
                "node_id": "U_kgDOB8cZfg",
                "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dev2049",
                "html_url": "https://github.com/dev2049",
                "followers_url": "https://api.github.com/users/dev2049/followers",
                "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
                "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
                "organizations_url": "https://api.github.com/users/dev2049/orgs",
                "repos_url": "https://api.github.com/users/dev2049/repos",
                "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dev2049/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-04-24T07:07:13Z",
        "updated_at": "2023-11-08T23:11:57Z",
        "closed_at": "2023-11-08T23:11:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3425",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3425",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3425.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3425.patch",
            "merged_at": null
        },
        "body": "https://python.langchain.com/en/latest/modules/chains/index_examples/vector_db_qa.html#custom-prompts\r\n\r\nIt says you can custom prompts for `RetrievalQA`. But `RetrievalQA` not send all inputs to `combine_documents_chain`.  This will make errors like below:\r\n\r\n```\r\n    prompt_template = \"\"\"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\r\n\r\n    {context}\r\n\r\n    Question: {question}\r\n    Answer in {language}:\"\"\"\r\n    PROMPT = PromptTemplate(\r\n        template=prompt_template, input_variables=[\"context\", \"question\", \"language\"]\r\n    )\r\n\r\n    chain_type_kwargs = {\"prompt\": PROMPT}\r\n    qa = RetrievalQA.from_chain_type(\r\n        llm=OpenAI(),\r\n        chain_type=\"stuff\",\r\n        retriever=docsearch.as_retriever(),\r\n        chain_type_kwargs=chain_type_kwargs,\r\n    )\r\n    question = \"What did the president say about Ketanji Brown Jackson\"\r\n    language = \"Italian\"\r\n    qa.input_key = 'question'\r\n    print(qa.run(question=question, language=language))\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 38, in <module>\r\n    print(qa.run(question=question, language=language))\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"python3.11/site-packages/langchain/chains/base.py\", line 216, in run\r\n    return self(kwargs)[self.output_keys[0]]\r\n           ^^^^^^^^^^^^\r\n  File \"python3.11/site-packages/langchain/chains/base.py\", line 116, in __call__\r\n    raise e\r\n  File \"python3.11/site-packages/langchain/chains/base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n              ^^^^^^^^^^^^^^^^^^\r\n  File \"python3.11/site-packages/langchain/chains/retrieval_qa/base.py\", line 110, in _call\r\n    answer = self.combine_documents_chain.run(\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"python3.11/site-packages/langchain/chains/base.py\", line 216, in run\r\n    return self(kwargs)[self.output_keys[0]]\r\n           ^^^^^^^^^^^^\r\n  File \"python3.11/site-packages/langchain/chains/base.py\", line 116, in __call__\r\n    raise e\r\n  File \"python3.11/site-packages/langchain/chains/base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n              ^^^^^^^^^^^^^^^^^^\r\n  File \"python3.11/site-packages/langchain/chains/combine_documents/base.py\", line 56, in _call\r\n    output, extra_return_dict = self.combine_docs(docs, **other_keys)\r\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"python3.11/site-packages/langchain/chains/combine_documents/stuff.py\", line 89, in combine_docs\r\n    return self.llm_chain.predict(**inputs), {}\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"python3.11/site-packages/langchain/chains/llm.py\", line 151, in predict\r\n    return self(kwargs)[self.output_key]\r\n           ^^^^^^^^^^^^\r\n  File \"python3.11/site-packages/langchain/chains/base.py\", line 106, in __call__\r\n    inputs = self.prep_inputs(inputs)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"python3.11/site-packages/langchain/chains/base.py\", line 195, in prep_inputs\r\n    self._validate_inputs(inputs)\r\n  File \"python3.11/site-packages/langchain/chains/base.py\", line 75, in _validate_inputs\r\n    raise ValueError(f\"Missing some input keys: {missing_keys}\")\r\nValueError: Missing some input keys: {'language'}\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3425/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3425/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3424",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3424/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3424/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3424/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3424",
        "id": 1680558049,
        "node_id": "PR_kwDOIPDwls5O9zCE",
        "number": 3424,
        "title": "refine prompt prefix output",
        "user": {
            "login": "IANTHEREAL",
            "id": 10701973,
            "node_id": "MDQ6VXNlcjEwNzAxOTcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/10701973?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IANTHEREAL",
            "html_url": "https://github.com/IANTHEREAL",
            "followers_url": "https://api.github.com/users/IANTHEREAL/followers",
            "following_url": "https://api.github.com/users/IANTHEREAL/following{/other_user}",
            "gists_url": "https://api.github.com/users/IANTHEREAL/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IANTHEREAL/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IANTHEREAL/subscriptions",
            "organizations_url": "https://api.github.com/users/IANTHEREAL/orgs",
            "repos_url": "https://api.github.com/users/IANTHEREAL/repos",
            "events_url": "https://api.github.com/users/IANTHEREAL/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IANTHEREAL/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-24T06:38:42Z",
        "updated_at": "2023-06-27T11:09:21Z",
        "closed_at": "2023-04-25T05:07:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3424",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3424",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3424.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3424.patch",
            "merged_at": "2023-04-25T05:07:31Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3424/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3424/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3422",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3422/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3422/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3422/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3422",
        "id": 1680447070,
        "node_id": "PR_kwDOIPDwls5O9a-n",
        "number": 3422,
        "title": "Add filter support for Weaviate",
        "user": {
            "login": "rubell",
            "id": 2008740,
            "node_id": "MDQ6VXNlcjIwMDg3NDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2008740?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rubell",
            "html_url": "https://github.com/rubell",
            "followers_url": "https://api.github.com/users/rubell/followers",
            "following_url": "https://api.github.com/users/rubell/following{/other_user}",
            "gists_url": "https://api.github.com/users/rubell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rubell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rubell/subscriptions",
            "organizations_url": "https://api.github.com/users/rubell/orgs",
            "repos_url": "https://api.github.com/users/rubell/repos",
            "events_url": "https://api.github.com/users/rubell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rubell/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-24T04:55:59Z",
        "updated_at": "2023-04-25T13:44:31Z",
        "closed_at": "2023-04-25T05:03:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3422",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3422",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3422.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3422.patch",
            "merged_at": "2023-04-25T05:03:58Z"
        },
        "body": "Fixes #1546",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3422/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3422/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3421",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3421/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3421/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3421/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3421",
        "id": 1680441513,
        "node_id": "PR_kwDOIPDwls5O9Z19",
        "number": 3421,
        "title": "[WIP] Callbacks Refactor 5/n: plugin to tools",
        "user": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-24T04:46:05Z",
        "updated_at": "2023-04-26T01:18:08Z",
        "closed_at": "2023-04-26T01:18:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3421",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3421",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3421.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3421.patch",
            "merged_at": "2023-04-26T01:18:07Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3421/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3421/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3420",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3420/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3420/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3420/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3420",
        "id": 1680435393,
        "node_id": "PR_kwDOIPDwls5O9YoF",
        "number": 3420,
        "title": "Added simple docx loader - docx2txt",
        "user": {
            "login": "rishni-firstthing-ai",
            "id": 125353919,
            "node_id": "U_kgDOB3i_vw",
            "avatar_url": "https://avatars.githubusercontent.com/u/125353919?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rishni-firstthing-ai",
            "html_url": "https://github.com/rishni-firstthing-ai",
            "followers_url": "https://api.github.com/users/rishni-firstthing-ai/followers",
            "following_url": "https://api.github.com/users/rishni-firstthing-ai/following{/other_user}",
            "gists_url": "https://api.github.com/users/rishni-firstthing-ai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rishni-firstthing-ai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rishni-firstthing-ai/subscriptions",
            "organizations_url": "https://api.github.com/users/rishni-firstthing-ai/orgs",
            "repos_url": "https://api.github.com/users/rishni-firstthing-ai/repos",
            "events_url": "https://api.github.com/users/rishni-firstthing-ai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rishni-firstthing-ai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-24T04:35:51Z",
        "updated_at": "2023-05-22T10:05:58Z",
        "closed_at": "2023-04-29T04:34:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3420",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3420",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3420.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3420.patch",
            "merged_at": "2023-04-29T04:34:26Z"
        },
        "body": "Added a simple docx loader for those that don't have/use Unstructured",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3420/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3420/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3419",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3419/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3419/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3419/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3419",
        "id": 1680431858,
        "node_id": "PR_kwDOIPDwls5O9X7f",
        "number": 3419,
        "title": "adding add_documents and aadd_documents to class RedisVectorStoreRetriever",
        "user": {
            "login": "risingsunomi",
            "id": 1927935,
            "node_id": "MDQ6VXNlcjE5Mjc5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1927935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/risingsunomi",
            "html_url": "https://github.com/risingsunomi",
            "followers_url": "https://api.github.com/users/risingsunomi/followers",
            "following_url": "https://api.github.com/users/risingsunomi/following{/other_user}",
            "gists_url": "https://api.github.com/users/risingsunomi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/risingsunomi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/risingsunomi/subscriptions",
            "organizations_url": "https://api.github.com/users/risingsunomi/orgs",
            "repos_url": "https://api.github.com/users/risingsunomi/repos",
            "events_url": "https://api.github.com/users/risingsunomi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/risingsunomi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-24T04:29:32Z",
        "updated_at": "2023-04-25T20:53:20Z",
        "closed_at": "2023-04-25T20:53:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3419",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3419",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3419.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3419.patch",
            "merged_at": "2023-04-25T20:53:20Z"
        },
        "body": "Ran into this issue In vectorstores/redis.py when trying to use the AutoGPT agent with redis vector store. The error I received was \r\n\r\n`\r\nlangchain/experimental/autonomous_agents/autogpt/agent.py\", line 134, in run\r\n    self.memory.add_documents([Document(page_content=memory_to_add)])\r\nAttributeError: 'RedisVectorStoreRetriever' object has no attribute 'add_documents'\r\n`\r\n\r\nAdded the needed function to the class RedisVectorStoreRetriever which did not have the functionality like the base VectorStoreRetriever in vectorstores/base.py that, for example, vectorstores/faiss.py has",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3419/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3419/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3418",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3418/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3418/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3418/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3418",
        "id": 1680418655,
        "node_id": "PR_kwDOIPDwls5O9VGl",
        "number": 3418,
        "title": "Callbacks Refactor [4/n]: Plug in new callbacks mechanism to LLMs",
        "user": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-24T04:12:26Z",
        "updated_at": "2023-04-26T01:19:00Z",
        "closed_at": "2023-04-26T01:18:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3418",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3418",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3418.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3418.patch",
            "merged_at": "2023-04-26T01:18:59Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3418/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3418/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3417",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3417/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3417/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3417/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3417",
        "id": 1680404463,
        "node_id": "I_kwDOIPDwls5kKO_v",
        "number": 3417,
        "title": "In `ConversationalRetrievalChain` with streaming to `stdout` how can I access the text printed to `stdout` once it finishes streaming?",
        "user": {
            "login": "eRuaro",
            "id": 69240261,
            "node_id": "MDQ6VXNlcjY5MjQwMjYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/69240261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eRuaro",
            "html_url": "https://github.com/eRuaro",
            "followers_url": "https://api.github.com/users/eRuaro/followers",
            "following_url": "https://api.github.com/users/eRuaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/eRuaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eRuaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eRuaro/subscriptions",
            "organizations_url": "https://api.github.com/users/eRuaro/orgs",
            "repos_url": "https://api.github.com/users/eRuaro/repos",
            "events_url": "https://api.github.com/users/eRuaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eRuaro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-24T03:59:25Z",
        "updated_at": "2023-09-10T16:28:33Z",
        "closed_at": "2023-09-10T16:28:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "I like how it prints out the specific texts used in generating the answer (much better than just citing the sources IMO). How can I access it? Referring to here: https://python.langchain.com/en/latest/modules/chains/index_examples/chat_vector_db.html#conversationalretrievalchain-with-streaming-to-stdout\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3417/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3417/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3416",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3416/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3416/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3416/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3416",
        "id": 1680395736,
        "node_id": "PR_kwDOIPDwls5O9QIA",
        "number": 3416,
        "title": "propogate kwargs to cls in OpenSearchVectorSearch",
        "user": {
            "login": "yunfeilu92",
            "id": 102935330,
            "node_id": "U_kgDOBiKrIg",
            "avatar_url": "https://avatars.githubusercontent.com/u/102935330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yunfeilu92",
            "html_url": "https://github.com/yunfeilu92",
            "followers_url": "https://api.github.com/users/yunfeilu92/followers",
            "following_url": "https://api.github.com/users/yunfeilu92/following{/other_user}",
            "gists_url": "https://api.github.com/users/yunfeilu92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yunfeilu92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yunfeilu92/subscriptions",
            "organizations_url": "https://api.github.com/users/yunfeilu92/orgs",
            "repos_url": "https://api.github.com/users/yunfeilu92/repos",
            "events_url": "https://api.github.com/users/yunfeilu92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yunfeilu92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-24T03:45:28Z",
        "updated_at": "2023-04-24T17:43:42Z",
        "closed_at": "2023-04-24T17:43:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3416",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3416",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3416.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3416.patch",
            "merged_at": "2023-04-24T17:43:41Z"
        },
        "body": "kwargs shoud be passed into cls so that opensearch client can be properly initlized in __init__(). Otherwise logic like below will not work. as auth will not be passed into __init__\r\n\r\n```python\r\ndocsearch = OpenSearchVectorSearch.from_documents(docs, embeddings, opensearch_url=\"http://localhost:9200\")\r\n\r\nquery = \"What did the president say about Ketanji Brown Jackson\"\r\ndocs = docsearch.similarity_search(query)\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3416/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3416/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3415",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3415/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3415/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3415/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3415",
        "id": 1680374741,
        "node_id": "PR_kwDOIPDwls5O9L2-",
        "number": 3415,
        "title": "Callbacks Refactor [3/n]: Plug in new callbacks mechanism to chat models",
        "user": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-24T03:12:21Z",
        "updated_at": "2023-04-26T01:19:24Z",
        "closed_at": "2023-04-26T01:19:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3415",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3415",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3415.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3415.patch",
            "merged_at": "2023-04-26T01:19:23Z"
        },
        "body": "* realized that callbacks were in the wrong place (in generate_prompt vs generate) so fixed that too.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3415/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3415/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3414",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3414/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3414/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3414/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3414",
        "id": 1680368808,
        "node_id": "I_kwDOIPDwls5kKGSo",
        "number": 3414,
        "title": "Documentation error under Text Splitter",
        "user": {
            "login": "durgendra",
            "id": 31634379,
            "node_id": "MDQ6VXNlcjMxNjM0Mzc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/31634379?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/durgendra",
            "html_url": "https://github.com/durgendra",
            "followers_url": "https://api.github.com/users/durgendra/followers",
            "following_url": "https://api.github.com/users/durgendra/following{/other_user}",
            "gists_url": "https://api.github.com/users/durgendra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/durgendra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/durgendra/subscriptions",
            "organizations_url": "https://api.github.com/users/durgendra/orgs",
            "repos_url": "https://api.github.com/users/durgendra/repos",
            "events_url": "https://api.github.com/users/durgendra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/durgendra/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-24T03:06:47Z",
        "updated_at": "2023-09-28T16:07:35Z",
        "closed_at": "2023-09-28T16:07:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Current documentation text under Text Splitter throws error : \r\ntexts = text_splitter.create_documents([state_of_the_union])\r\n<img width=\"968\" alt=\"Screen Shot 2023-04-23 at 9 04 28 PM\" src=\"https://user-images.githubusercontent.com/31634379/233891248-f3b5e187-272e-4822-8cd6-00a1cf56ffae.png\">\r\n\r\nThe error is on both these pages\r\nhttps://python.langchain.com/en/latest/modules/indexes/text_splitters/getting_started.html\r\nhttps://python.langchain.com/en/latest/modules/indexes/text_splitters/examples/character_text_splitter.html\r\n\r\n\r\nI think the above line should be revised to \r\ntexts = text_splitter.split_documents([state_of_the_union])\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3414/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3414/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3413",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3413/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3413/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3413/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3413",
        "id": 1680360641,
        "node_id": "PR_kwDOIPDwls5O9Izq",
        "number": 3413,
        "title": "Catch all exceptions in autogpt",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-24T02:59:40Z",
        "updated_at": "2023-04-24T03:02:38Z",
        "closed_at": "2023-04-24T03:02:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3413",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3413",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3413.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3413.patch",
            "merged_at": "2023-04-24T03:02:37Z"
        },
        "body": "Ought to be more autonomous",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3413/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3413/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3412",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3412/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3412/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3412/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3412",
        "id": 1680360387,
        "node_id": "PR_kwDOIPDwls5O9IwJ",
        "number": 3412,
        "title": "Optimize code",
        "user": {
            "login": "assert6",
            "id": 28561563,
            "node_id": "MDQ6VXNlcjI4NTYxNTYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/28561563?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/assert6",
            "html_url": "https://github.com/assert6",
            "followers_url": "https://api.github.com/users/assert6/followers",
            "following_url": "https://api.github.com/users/assert6/following{/other_user}",
            "gists_url": "https://api.github.com/users/assert6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/assert6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/assert6/subscriptions",
            "organizations_url": "https://api.github.com/users/assert6/orgs",
            "repos_url": "https://api.github.com/users/assert6/repos",
            "events_url": "https://api.github.com/users/assert6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/assert6/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-24T02:59:28Z",
        "updated_at": "2023-04-24T04:05:00Z",
        "closed_at": "2023-04-24T04:05:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3412",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3412",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3412.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3412.patch",
            "merged_at": "2023-04-24T04:05:00Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3412/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3412/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3411",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3411/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3411/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3411/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3411",
        "id": 1680357000,
        "node_id": "PR_kwDOIPDwls5O9H_6",
        "number": 3411,
        "title": "Add LanceDB vectorstore",
        "user": {
            "login": "Pixeladed",
            "id": 7312176,
            "node_id": "MDQ6VXNlcjczMTIxNzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7312176?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Pixeladed",
            "html_url": "https://github.com/Pixeladed",
            "followers_url": "https://api.github.com/users/Pixeladed/followers",
            "following_url": "https://api.github.com/users/Pixeladed/following{/other_user}",
            "gists_url": "https://api.github.com/users/Pixeladed/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Pixeladed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Pixeladed/subscriptions",
            "organizations_url": "https://api.github.com/users/Pixeladed/orgs",
            "repos_url": "https://api.github.com/users/Pixeladed/repos",
            "events_url": "https://api.github.com/users/Pixeladed/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Pixeladed/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-24T02:56:29Z",
        "updated_at": "2023-04-27T05:22:20Z",
        "closed_at": "2023-04-27T05:22:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3411",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3411",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3411.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3411.patch",
            "merged_at": "2023-04-27T05:22:20Z"
        },
        "body": "[LanceDB](https://github.com/lancedb/lancedb) is a vector database based on [Lance](https://github.com/eto-ai/lance) columnar data format.\r\n\r\nThis PR adds basic integration with lancedb as a vectorstore",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3411/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3411/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3410",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3410/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3410/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3410/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3410",
        "id": 1680285050,
        "node_id": "PR_kwDOIPDwls5O84y7",
        "number": 3410,
        "title": "Khimaros/master",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-24T01:23:25Z",
        "updated_at": "2023-04-24T01:23:45Z",
        "closed_at": "2023-04-24T01:23:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3410",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3410",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3410.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3410.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3410/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3410/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3409",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3409/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3409/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3409/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3409",
        "id": 1680273338,
        "node_id": "PR_kwDOIPDwls5O82No",
        "number": 3409,
        "title": "Add Sentence Transformers Embeddings",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-24T01:10:31Z",
        "updated_at": "2023-04-24T01:25:21Z",
        "closed_at": "2023-04-24T01:25:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3409",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3409",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3409.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3409.patch",
            "merged_at": "2023-04-24T01:25:20Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3409/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3409/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3408",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3408/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3408/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3408/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3408",
        "id": 1680237300,
        "node_id": "PR_kwDOIPDwls5O8uWj",
        "number": 3408,
        "title": "Update marathon notebook",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-24T00:22:50Z",
        "updated_at": "2023-04-24T01:14:13Z",
        "closed_at": "2023-04-24T01:14:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3408",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3408",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3408.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3408.patch",
            "merged_at": "2023-04-24T01:14:12Z"
        },
        "body": "Fixes #3404\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3408/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3408/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3407",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3407/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3407/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3407/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3407",
        "id": 1680224976,
        "node_id": "PR_kwDOIPDwls5O8r6w",
        "number": 3407,
        "title": "Add verbose option for ConversationalRetrievalChain",
        "user": {
            "login": "makretch",
            "id": 17963788,
            "node_id": "MDQ6VXNlcjE3OTYzNzg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/17963788?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/makretch",
            "html_url": "https://github.com/makretch",
            "followers_url": "https://api.github.com/users/makretch/followers",
            "following_url": "https://api.github.com/users/makretch/following{/other_user}",
            "gists_url": "https://api.github.com/users/makretch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/makretch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/makretch/subscriptions",
            "organizations_url": "https://api.github.com/users/makretch/orgs",
            "repos_url": "https://api.github.com/users/makretch/repos",
            "events_url": "https://api.github.com/users/makretch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/makretch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-23T23:51:05Z",
        "updated_at": "2023-04-25T04:57:13Z",
        "closed_at": "2023-04-25T04:57:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3407",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3407",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3407.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3407.patch",
            "merged_at": "2023-04-25T04:57:13Z"
        },
        "body": "Suggesting a small change to allow for verbose mode in ConversationalRetrievalChain",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3407/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3407/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3406",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3406/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3406/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3406/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3406",
        "id": 1680213151,
        "node_id": "I_kwDOIPDwls5kJgSf",
        "number": 3406,
        "title": "memory_key as a variable",
        "user": {
            "login": "ravi160822",
            "id": 114392296,
            "node_id": "U_kgDOBtF86A",
            "avatar_url": "https://avatars.githubusercontent.com/u/114392296?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi160822",
            "html_url": "https://github.com/ravi160822",
            "followers_url": "https://api.github.com/users/ravi160822/followers",
            "following_url": "https://api.github.com/users/ravi160822/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi160822/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi160822/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi160822/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi160822/orgs",
            "repos_url": "https://api.github.com/users/ravi160822/repos",
            "events_url": "https://api.github.com/users/ravi160822/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi160822/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-23T23:05:24Z",
        "updated_at": "2023-09-17T17:22:23Z",
        "closed_at": "2023-09-17T17:22:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "In the agent tutorials the memory_key is set as a fixed string, \"chat_history\", how do I make it a variable, that is different for each session_id, that is memory_key=str(session_id)?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3406/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3406/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3405",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3405/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3405/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3405/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3405",
        "id": 1680179456,
        "node_id": "I_kwDOIPDwls5kJYEA",
        "number": 3405,
        "title": "marathon_times.ipynb: InvalidRequestError: This model's maximum context length is 4097 tokens. ",
        "user": {
            "login": "chunhualiao",
            "id": 1627206,
            "node_id": "MDQ6VXNlcjE2MjcyMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1627206?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chunhualiao",
            "html_url": "https://github.com/chunhualiao",
            "followers_url": "https://api.github.com/users/chunhualiao/followers",
            "following_url": "https://api.github.com/users/chunhualiao/following{/other_user}",
            "gists_url": "https://api.github.com/users/chunhualiao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chunhualiao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chunhualiao/subscriptions",
            "organizations_url": "https://api.github.com/users/chunhualiao/orgs",
            "repos_url": "https://api.github.com/users/chunhualiao/repos",
            "events_url": "https://api.github.com/users/chunhualiao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chunhualiao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-23T21:13:04Z",
        "updated_at": "2023-09-24T16:08:17Z",
        "closed_at": "2023-09-24T16:08:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "---------------------------------------------------------------------------\r\nInvalidRequestError                       Traceback (most recent call last)\r\n[<ipython-input-26-5eed72c1ccb8>](https://localhost:8080/#) in <cell line: 3>()\r\n          2 \r\n----> 3 agent.run([\"What were the winning boston marathon times for the past 5 years? Generate a table of the names, countries of origin, and times.\"])\r\n\r\n31 frames\r\n[/usr/local/lib/python3.9/dist-packages/langchain/experimental/autonomous_agents/autogpt/agent.py](https://localhost:8080/#) in run(self, goals)\r\n    109                 tool = tools[action.name]\r\n    110                 try:\r\n--> 111                     observation = tool.run(action.args)\r\n    112                 except ValidationError as e:\r\n    113                     observation = f\"Error in args: {str(e)}\"\r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/tools/base.py](https://localhost:8080/#) in run(self, tool_input, verbose, start_color, color, **kwargs)\r\n    105         except (Exception, KeyboardInterrupt) as e:\r\n    106             self.callback_manager.on_tool_error(e, verbose=verbose_)\r\n--> 107             raise e\r\n    108         self.callback_manager.on_tool_end(\r\n    109             observation, verbose=verbose_, color=color, name=self.name, **kwargs\r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/tools/base.py](https://localhost:8080/#) in run(self, tool_input, verbose, start_color, color, **kwargs)\r\n    102         try:\r\n    103             tool_args, tool_kwargs = _to_args_and_kwargs(tool_input)\r\n--> 104             observation = self._run(*tool_args, **tool_kwargs)\r\n    105         except (Exception, KeyboardInterrupt) as e:\r\n    106             self.callback_manager.on_tool_error(e, verbose=verbose_)\r\n\r\n[<ipython-input-12-79448a1343a1>](https://localhost:8080/#) in _run(self, url, question)\r\n     33             results.append(f\"Response from window {i} - {window_result}\")\r\n     34         results_docs = [Document(page_content=\"\\n\".join(results), metadata={\"source\": url})]\r\n---> 35         return self.qa_chain({\"input_documents\": results_docs, \"question\": question}, return_only_outputs=True)\r\n     36 \r\n     37     async def _arun(self, url: str, question: str) -> str:\r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/chains/base.py](https://localhost:8080/#) in __call__(self, inputs, return_only_outputs)\r\n    114         except (KeyboardInterrupt, Exception) as e:\r\n    115             self.callback_manager.on_chain_error(e, verbose=self.verbose)\r\n--> 116             raise e\r\n    117         self.callback_manager.on_chain_end(outputs, verbose=self.verbose)\r\n    118         return self.prep_outputs(inputs, outputs, return_only_outputs)\r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/chains/base.py](https://localhost:8080/#) in __call__(self, inputs, return_only_outputs)\r\n    111         )\r\n    112         try:\r\n--> 113             outputs = self._call(inputs)\r\n    114         except (KeyboardInterrupt, Exception) as e:\r\n    115             self.callback_manager.on_chain_error(e, verbose=self.verbose)\r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/chains/combine_documents/base.py](https://localhost:8080/#) in _call(self, inputs)\r\n     73         # Other keys are assumed to be needed for LLM prediction\r\n     74         other_keys = {k: v for k, v in inputs.items() if k != self.input_key}\r\n---> 75         output, extra_return_dict = self.combine_docs(docs, **other_keys)\r\n     76         extra_return_dict[self.output_key] = output\r\n     77         return extra_return_dict\r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/chains/combine_documents/stuff.py](https://localhost:8080/#) in combine_docs(self, docs, **kwargs)\r\n     81         inputs = self._get_inputs(docs, **kwargs)\r\n     82         # Call predict on the LLM.\r\n---> 83         return self.llm_chain.predict(**inputs), {}\r\n     84 \r\n     85     async def acombine_docs(\r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/chains/llm.py](https://localhost:8080/#) in predict(self, **kwargs)\r\n    149                 completion = llm.predict(adjective=\"funny\")\r\n    150         \"\"\"\r\n--> 151         return self(kwargs)[self.output_key]\r\n    152 \r\n    153     async def apredict(self, **kwargs: Any) -> str:\r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/chains/base.py](https://localhost:8080/#) in __call__(self, inputs, return_only_outputs)\r\n    114         except (KeyboardInterrupt, Exception) as e:\r\n    115             self.callback_manager.on_chain_error(e, verbose=self.verbose)\r\n--> 116             raise e\r\n    117         self.callback_manager.on_chain_end(outputs, verbose=self.verbose)\r\n    118         return self.prep_outputs(inputs, outputs, return_only_outputs)\r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/chains/base.py](https://localhost:8080/#) in __call__(self, inputs, return_only_outputs)\r\n    111         )\r\n    112         try:\r\n--> 113             outputs = self._call(inputs)\r\n    114         except (KeyboardInterrupt, Exception) as e:\r\n    115             self.callback_manager.on_chain_error(e, verbose=self.verbose)\r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/chains/llm.py](https://localhost:8080/#) in _call(self, inputs)\r\n     55 \r\n     56     def _call(self, inputs: Dict[str, Any]) -> Dict[str, str]:\r\n---> 57         return self.apply([inputs])[0]\r\n     58 \r\n     59     def generate(self, input_list: List[Dict[str, Any]]) -> LLMResult:\r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/chains/llm.py](https://localhost:8080/#) in apply(self, input_list)\r\n    116     def apply(self, input_list: List[Dict[str, Any]]) -> List[Dict[str, str]]:\r\n    117         \"\"\"Utilize the LLM generate method for speed gains.\"\"\"\r\n--> 118         response = self.generate(input_list)\r\n    119         return self.create_outputs(response)\r\n    120 \r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/chains/llm.py](https://localhost:8080/#) in generate(self, input_list)\r\n     60         \"\"\"Generate LLM result from inputs.\"\"\"\r\n     61         prompts, stop = self.prep_prompts(input_list)\r\n---> 62         return self.llm.generate_prompt(prompts, stop)\r\n     63 \r\n     64     async def agenerate(self, input_list: List[Dict[str, Any]]) -> LLMResult:\r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/chat_models/base.py](https://localhost:8080/#) in generate_prompt(self, prompts, stop)\r\n     80         except (KeyboardInterrupt, Exception) as e:\r\n     81             self.callback_manager.on_llm_error(e, verbose=self.verbose)\r\n---> 82             raise e\r\n     83         self.callback_manager.on_llm_end(output, verbose=self.verbose)\r\n     84         return output\r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/chat_models/base.py](https://localhost:8080/#) in generate_prompt(self, prompts, stop)\r\n     77         )\r\n     78         try:\r\n---> 79             output = self.generate(prompt_messages, stop=stop)\r\n     80         except (KeyboardInterrupt, Exception) as e:\r\n     81             self.callback_manager.on_llm_error(e, verbose=self.verbose)\r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/chat_models/base.py](https://localhost:8080/#) in generate(self, messages, stop)\r\n     52     ) -> LLMResult:\r\n     53         \"\"\"Top Level call\"\"\"\r\n---> 54         results = [self._generate(m, stop=stop) for m in messages]\r\n     55         llm_output = self._combine_llm_outputs([res.llm_output for res in results])\r\n     56         generations = [res.generations for res in results]\r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/chat_models/base.py](https://localhost:8080/#) in <listcomp>(.0)\r\n     52     ) -> LLMResult:\r\n     53         \"\"\"Top Level call\"\"\"\r\n---> 54         results = [self._generate(m, stop=stop) for m in messages]\r\n     55         llm_output = self._combine_llm_outputs([res.llm_output for res in results])\r\n     56         generations = [res.generations for res in results]\r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/chat_models/openai.py](https://localhost:8080/#) in _generate(self, messages, stop)\r\n    264             )\r\n    265             return ChatResult(generations=[ChatGeneration(message=message)])\r\n--> 266         response = self.completion_with_retry(messages=message_dicts, **params)\r\n    267         return self._create_chat_result(response)\r\n    268 \r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/chat_models/openai.py](https://localhost:8080/#) in completion_with_retry(self, **kwargs)\r\n    226             return self.client.create(**kwargs)\r\n    227 \r\n--> 228         return _completion_with_retry(**kwargs)\r\n    229 \r\n    230     def _combine_llm_outputs(self, llm_outputs: List[Optional[dict]]) -> dict:\r\n\r\n[/usr/local/lib/python3.9/dist-packages/tenacity/__init__.py](https://localhost:8080/#) in wrapped_f(*args, **kw)\r\n    287         @functools.wraps(f)\r\n    288         def wrapped_f(*args: t.Any, **kw: t.Any) -> t.Any:\r\n--> 289             return self(f, *args, **kw)\r\n    290 \r\n    291         def retry_with(*args: t.Any, **kwargs: t.Any) -> WrappedFn:\r\n\r\n[/usr/local/lib/python3.9/dist-packages/tenacity/__init__.py](https://localhost:8080/#) in __call__(self, fn, *args, **kwargs)\r\n    377         retry_state = RetryCallState(retry_object=self, fn=fn, args=args, kwargs=kwargs)\r\n    378         while True:\r\n--> 379             do = self.iter(retry_state=retry_state)\r\n    380             if isinstance(do, DoAttempt):\r\n    381                 try:\r\n\r\n[/usr/local/lib/python3.9/dist-packages/tenacity/__init__.py](https://localhost:8080/#) in iter(self, retry_state)\r\n    312         is_explicit_retry = fut.failed and isinstance(fut.exception(), TryAgain)\r\n    313         if not (is_explicit_retry or self.retry(retry_state)):\r\n--> 314             return fut.result()\r\n    315 \r\n    316         if self.after is not None:\r\n\r\n[/usr/lib/python3.9/concurrent/futures/_base.py](https://localhost:8080/#) in result(self, timeout)\r\n    437                     raise CancelledError()\r\n    438                 elif self._state == FINISHED:\r\n--> 439                     return self.__get_result()\r\n    440 \r\n    441                 self._condition.wait(timeout)\r\n\r\n[/usr/lib/python3.9/concurrent/futures/_base.py](https://localhost:8080/#) in __get_result(self)\r\n    389         if self._exception:\r\n    390             try:\r\n--> 391                 raise self._exception\r\n    392             finally:\r\n    393                 # Break a reference cycle with the exception in self._exception\r\n\r\n[/usr/local/lib/python3.9/dist-packages/tenacity/__init__.py](https://localhost:8080/#) in __call__(self, fn, *args, **kwargs)\r\n    380             if isinstance(do, DoAttempt):\r\n    381                 try:\r\n--> 382                     result = fn(*args, **kwargs)\r\n    383                 except BaseException:  # noqa: B902\r\n    384                     retry_state.set_exception(sys.exc_info())  # type: ignore[arg-type]\r\n\r\n[/usr/local/lib/python3.9/dist-packages/langchain/chat_models/openai.py](https://localhost:8080/#) in _completion_with_retry(**kwargs)\r\n    224         @retry_decorator\r\n    225         def _completion_with_retry(**kwargs: Any) -> Any:\r\n--> 226             return self.client.create(**kwargs)\r\n    227 \r\n    228         return _completion_with_retry(**kwargs)\r\n\r\n[/usr/local/lib/python3.9/dist-packages/openai/api_resources/chat_completion.py](https://localhost:8080/#) in create(cls, *args, **kwargs)\r\n     23         while True:\r\n     24             try:\r\n---> 25                 return super().create(*args, **kwargs)\r\n     26             except TryAgain as e:\r\n     27                 if timeout is not None and time.time() > start + timeout:\r\n\r\n[/usr/local/lib/python3.9/dist-packages/openai/api_resources/abstract/engine_api_resource.py](https://localhost:8080/#) in create(cls, api_key, api_base, api_type, request_id, api_version, organization, **params)\r\n    151         )\r\n    152 \r\n--> 153         response, _, api_key = requestor.request(\r\n    154             \"post\",\r\n    155             url,\r\n\r\n[/usr/local/lib/python3.9/dist-packages/openai/api_requestor.py](https://localhost:8080/#) in request(self, method, url, params, headers, files, stream, request_id, request_timeout)\r\n    224             request_timeout=request_timeout,\r\n    225         )\r\n--> 226         resp, got_stream = self._interpret_response(result, stream)\r\n    227         return resp, got_stream, self.api_key\r\n    228 \r\n\r\n[/usr/local/lib/python3.9/dist-packages/openai/api_requestor.py](https://localhost:8080/#) in _interpret_response(self, result, stream)\r\n    618         else:\r\n    619             return (\r\n--> 620                 self._interpret_response_line(\r\n    621                     result.content.decode(\"utf-8\"),\r\n    622                     result.status_code,\r\n\r\n[/usr/local/lib/python3.9/dist-packages/openai/api_requestor.py](https://localhost:8080/#) in _interpret_response_line(self, rbody, rcode, rheaders, stream)\r\n    681         stream_error = stream and \"error\" in resp.data\r\n    682         if stream_error or not 200 <= rcode < 300:\r\n--> 683             raise self.handle_error_response(\r\n    684                 rbody, rcode, resp.data, rheaders, stream_error=stream_error\r\n    685             )\r\n\r\nInvalidRequestError: This model's maximum context length is 4097 tokens. However, your messages resulted in 4665 tokens. Please reduce the length of the messages.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3405/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3405/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3404",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3404/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3404/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3404/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3404",
        "id": 1680177766,
        "node_id": "I_kwDOIPDwls5kJXpm",
        "number": 3404,
        "title": "marathon_times.ipynb: mismatched text and code",
        "user": {
            "login": "chunhualiao",
            "id": 1627206,
            "node_id": "MDQ6VXNlcjE2MjcyMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1627206?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chunhualiao",
            "html_url": "https://github.com/chunhualiao",
            "followers_url": "https://api.github.com/users/chunhualiao/followers",
            "following_url": "https://api.github.com/users/chunhualiao/following{/other_user}",
            "gists_url": "https://api.github.com/users/chunhualiao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chunhualiao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chunhualiao/subscriptions",
            "organizations_url": "https://api.github.com/users/chunhualiao/orgs",
            "repos_url": "https://api.github.com/users/chunhualiao/repos",
            "events_url": "https://api.github.com/users/chunhualiao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chunhualiao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "vowelparrot",
                "id": 130414180,
                "node_id": "U_kgDOB8X2ZA",
                "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/vowelparrot",
                "html_url": "https://github.com/vowelparrot",
                "followers_url": "https://api.github.com/users/vowelparrot/followers",
                "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
                "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
                "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
                "repos_url": "https://api.github.com/users/vowelparrot/repos",
                "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
                "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-23T21:06:49Z",
        "updated_at": "2023-04-24T01:14:13Z",
        "closed_at": "2023-04-24T01:14:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Text mentions inflation and tuition:\r\n\r\n Here is the prompt comparing inflation and college tuition.\r\n\r\nCode is about marathon times: \r\n\r\nagent.run([\"What were the winning boston marathon times for the past 5 years? Generate a table of the names, countries of origin, and times.\"])",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3404/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3404/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3403",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3403/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3403/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3403/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3403",
        "id": 1680154536,
        "node_id": "I_kwDOIPDwls5kJR-o",
        "number": 3403,
        "title": "Custom Model with args_schema not working",
        "user": {
            "login": "digitaldesaster",
            "id": 5052997,
            "node_id": "MDQ6VXNlcjUwNTI5OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5052997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/digitaldesaster",
            "html_url": "https://github.com/digitaldesaster",
            "followers_url": "https://api.github.com/users/digitaldesaster/followers",
            "following_url": "https://api.github.com/users/digitaldesaster/following{/other_user}",
            "gists_url": "https://api.github.com/users/digitaldesaster/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/digitaldesaster/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/digitaldesaster/subscriptions",
            "organizations_url": "https://api.github.com/users/digitaldesaster/orgs",
            "repos_url": "https://api.github.com/users/digitaldesaster/repos",
            "events_url": "https://api.github.com/users/digitaldesaster/events{/privacy}",
            "received_events_url": "https://api.github.com/users/digitaldesaster/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "vowelparrot",
                "id": 130414180,
                "node_id": "U_kgDOB8X2ZA",
                "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/vowelparrot",
                "html_url": "https://github.com/vowelparrot",
                "followers_url": "https://api.github.com/users/vowelparrot/followers",
                "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
                "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
                "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
                "repos_url": "https://api.github.com/users/vowelparrot/repos",
                "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
                "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-04-23T20:16:33Z",
        "updated_at": "2023-10-05T16:10:53Z",
        "closed_at": "2023-10-05T16:10:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "i tried out a simple custom model. as long as i am using only one \"query\" parameter everything is working fine. in this example i like to use two parameters (i searched the problem and i found this SendMessage usecase...) \r\n\r\nunfortunately it does not work.. and throws this error. \r\n\r\n`input_args.validate({key_: tool_input})\r\n  File \"pydantic/main.py\", line 711, in pydantic.main.BaseModel.validate\r\n  File \"pydantic/main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for SendMessageInput\r\nmessage\r\n  field required (type=value_error.missing)`\r\n\r\nthe code : \r\n\r\n`from langchain.agents import initialize_agent\r\nfrom langchain.agents import AgentType\r\nfrom langchain.llms import OpenAI\r\n\r\nfrom langchain.tools import BaseTool\r\nfrom typing import Type\r\n\r\nfrom pydantic import BaseModel, Field\r\n\r\nclass SendMessageInput(BaseModel):\r\n    email: str = Field(description=\"email\")\r\n    message: str = Field(description=\"the message to send\")\r\n\r\nclass SendMessageTool(BaseTool):\r\n    name = \"send_message_tool\"\r\n    description = \"useful for when you need to send a message to a human\"\r\n    args_schema: Type[BaseModel] = SendMessageInput\r\n\r\n    def _run(self, email:str,message:str) -> str:\r\n        print(message,email)\r\n        \"\"\"Use the tool.\"\"\"\r\n        return f\"message send\"\r\n\r\n    async def _arun(self, email: str, message: str) -> str:\r\n        \"\"\"Use the tool asynchronously.\"\"\"\r\n        return f\"Sent message '{message}' to {email}\"\r\n\r\nllm = OpenAI(temperature=0)\r\n\r\ntools=[SendMessageTool()]\r\n\r\nagent = initialize_agent(tools, llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)\r\n\r\nagent.run(\"send message hello to test@example.com\")\r\n`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3403/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3403/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3402",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3402/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3402/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3402/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3402",
        "id": 1680133937,
        "node_id": "I_kwDOIPDwls5kJM8x",
        "number": 3402,
        "title": "Not able to Pass in Headers in the Requests module",
        "user": {
            "login": "areeb1501",
            "id": 64038736,
            "node_id": "MDQ6VXNlcjY0MDM4NzM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64038736?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/areeb1501",
            "html_url": "https://github.com/areeb1501",
            "followers_url": "https://api.github.com/users/areeb1501/followers",
            "following_url": "https://api.github.com/users/areeb1501/following{/other_user}",
            "gists_url": "https://api.github.com/users/areeb1501/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/areeb1501/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/areeb1501/subscriptions",
            "organizations_url": "https://api.github.com/users/areeb1501/orgs",
            "repos_url": "https://api.github.com/users/areeb1501/repos",
            "events_url": "https://api.github.com/users/areeb1501/events{/privacy}",
            "received_events_url": "https://api.github.com/users/areeb1501/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-23T19:08:24Z",
        "updated_at": "2023-04-27T17:58:55Z",
        "closed_at": "2023-04-27T17:58:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\r\nI have been trying multiple approaches to use headers in the requests chain. Here's my code:\r\n\r\n\r\nI have been trying multiple approaches to use headers in the requests chain. Here's my code:\r\n\r\n\tfrom langchain.utilities import TextRequestsWrapper\r\n\timport json\r\n\r\n\trequests = TextRequestsWrapper()\r\n\r\n\theaders = {\r\n\t    \"name\": \"hetyo\"\r\n\t}\r\n\r\n\r\n\tstr_data = requests.get(\"https://httpbin.org/get\", params = {\"name\" : \"areeb\"}, headers=headers)\r\n\r\n\tjson_data = json.loads(str_data)\r\n\tjson_data\r\n\r\nHow can I pass in herders to the TextRequestsWrapper? Is there anything that I am doing wrong?\r\n\r\nI also found that the headers is used in the requests file as follows:\r\n\r\n\t    \"\"\"Lightweight wrapper around requests library, with async support.\"\"\"\r\n\r\n\tfrom contextlib import asynccontextmanager\r\n\r\n\tfrom typing import Any, AsyncGenerator, Dict, Optional\r\n\r\n\t  \r\n\r\n\timport aiohttp\r\n\r\n\timport requests\r\n\r\n\tfrom pydantic import BaseModel, Extra\r\n\r\n\t  \r\n\t  \r\n\r\n\tclass Requests(BaseModel):\r\n\r\n\t\"\"\"Wrapper around requests to handle auth and async.\r\n\r\n\t  \r\n\r\n\tThe main purpose of this wrapper is to handle authentication (by saving\r\n\r\n\theaders) and enable easy async methods on the same base object.\r\n\r\n\t\"\"\"\r\n\r\n\t  \r\n\r\n\theaders: Optional[Dict[str, str]] = None\r\n\r\n\taiosession: Optional[aiohttp.ClientSession] = None\r\n\r\n\t  \r\n\r\n\tclass Config:\r\n\r\n\t\"\"\"Configuration for this pydantic object.\"\"\"\r\n\r\n\t  \r\n\r\n\textra = Extra.forbid\r\n\r\n\tarbitrary_types_allowed = True\r\n\r\n\t  \r\n\r\n\tdef get(self, url: str, **kwargs: Any) -> requests.Response:\r\n\r\n\t\"\"\"GET the URL and return the text.\"\"\"\r\n\r\n\treturn requests.get(url, headers=self.headers, **kwargs)\r\n\r\n\t  \r\n\r\n\tdef post(self, url: str, data: Dict[str, Any], **kwargs: Any) -> requests.Response:\r\n\r\n\t\"\"\"POST to the URL and return the text.\"\"\"\r\n\r\n\treturn requests.post(url, json=data, headers=self.headers, **kwargs)\r\n\r\n\t  \r\n\r\n\tdef patch(self, url: str, data: Dict[str, Any], **kwargs: Any) -> requests.Response:\r\n\r\n\t\"\"\"PATCH the URL and return the text.\"\"\"\r\n\r\n\treturn requests.patch(url, json=data, headers=self.headers, **kwargs)\r\n\r\n\t  \r\n\r\n\tdef put(self, url: str, data: Dict[str, Any], **kwargs: Any) -> requests.Response:\r\n\r\n\t\"\"\"PUT the URL and return the text.\"\"\"\r\n\r\n\treturn requests.put(url, json=data, headers=self.headers, **kwargs)\r\n\r\n\t  \r\n\r\n\tdef delete(self, url: str, **kwargs: Any) -> requests.Response:\r\n\r\n\t\"\"\"DELETE the URL and return the text.\"\"\"\r\n\r\n\treturn requests.delete(url, headers=self.headers, **kwargs)\r\n\r\n\t  \r\n\r\n\t@asynccontextmanager\r\n\r\n\tasync  def _arequest(\r\n\r\n\tself, method: str, url: str, **kwargs: Any\r\n\r\n\t) -> AsyncGenerator[aiohttp.ClientResponse, None]:\r\n\r\n\t\"\"\"Make an async request.\"\"\"\r\n\r\n\tif  not  self.aiosession:\r\n\r\n\tasync  with aiohttp.ClientSession() as session:\r\n\r\n\tasync  with session.request(\r\n\r\n\tmethod, url, headers=self.headers, **kwargs\r\n\r\n\t) as response:\r\n\r\n\tyield response\r\n\r\n\telse:\r\n\r\n\tasync  with  self.aiosession.request(\r\n\r\n\tmethod, url, headers=self.headers, **kwargs\r\n\r\n\t) as response:\r\n\r\n\tyield response\r\n\r\n\t  \r\n\r\n\t@asynccontextmanager\r\n\r\n\tasync  def aget(\r\n\r\n\tself, url: str, **kwargs: Any\r\n\r\n\t) -> AsyncGenerator[aiohttp.ClientResponse, None]:\r\n\r\n\t\"\"\"GET the URL and return the text asynchronously.\"\"\"\r\n\r\n\tasync  with  self._arequest(\"GET\", url, **kwargs) as response:\r\n\r\n\tyield response\r\n\r\n\t  \r\n\r\n\t@asynccontextmanager\r\n\r\n\tasync  def apost(\r\n\r\n\tself, url: str, data: Dict[str, Any], **kwargs: Any\r\n\r\n\t) -> AsyncGenerator[aiohttp.ClientResponse, None]:\r\n\r\n\t\"\"\"POST to the URL and return the text asynchronously.\"\"\"\r\n\r\n\tasync  with  self._arequest(\"POST\", url, **kwargs) as response:\r\n\r\n\tyield response\r\n\r\n\t  \r\n\r\n\t@asynccontextmanager\r\n\r\n\tasync  def apatch(\r\n\r\n\tself, url: str, data: Dict[str, Any], **kwargs: Any\r\n\r\n\t) -> AsyncGenerator[aiohttp.ClientResponse, None]:\r\n\r\n\t\"\"\"PATCH the URL and return the text asynchronously.\"\"\"\r\n\r\n\tasync  with  self._arequest(\"PATCH\", url, **kwargs) as response:\r\n\r\n\tyield response\r\n\r\n\t  \r\n\r\n\t@asynccontextmanager\r\n\r\n\tasync  def aput(\r\n\r\n\tself, url: str, data: Dict[str, Any], **kwargs: Any\r\n\r\n\t) -> AsyncGenerator[aiohttp.ClientResponse, None]:\r\n\r\n\t\"\"\"PUT the URL and return the text asynchronously.\"\"\"\r\n\r\n\tasync  with  self._arequest(\"PUT\", url, **kwargs) as response:\r\n\r\n\tyield response\r\n\r\n\t  \r\n\r\n\t@asynccontextmanager\r\n\r\n\tasync  def adelete(\r\n\r\n\tself, url: str, **kwargs: Any\r\n\r\n\t) -> AsyncGenerator[aiohttp.ClientResponse, None]:\r\n\r\n\t\"\"\"DELETE the URL and return the text asynchronously.\"\"\"\r\n\r\n\tasync  with  self._arequest(\"DELETE\", url, **kwargs) as response:\r\n\r\n\tyield response\r\n\r\n\t  \r\n\t  \r\n\r\n\tclass TextRequestsWrapper(BaseModel):\r\n\r\n\t\"\"\"Lightweight wrapper around requests library.\r\n\r\n\t  \r\n\r\n\tThe main purpose of this wrapper is to always return a text output.\r\n\r\n\t\"\"\"\r\n\r\n\t  \r\n\r\n\theaders: Optional[Dict[str, str]] = None\r\n\r\n\taiosession: Optional[aiohttp.ClientSession] = None\r\n\r\n\t  \r\n\r\n\tclass Config:\r\n\r\n\t\"\"\"Configuration for this pydantic object.\"\"\"\r\n\r\n\t  \r\n\r\n\textra = Extra.forbid\r\n\r\n\tarbitrary_types_allowed = True\r\n\r\n\t  \r\n\r\n\t@property\r\n\r\n\tdef requests(self) -> Requests:\r\n\r\n\treturn Requests(headers=self.headers, aiosession=self.aiosession)\r\n\r\n\t  \r\n\r\n\tdef get(self, url: str, **kwargs: Any) -> str:\r\n\r\n\t\"\"\"GET the URL and return the text.\"\"\"\r\n\r\n\treturn  self.requests.get(url, **kwargs).text\r\n\r\n\t  \r\n\r\n\tdef post(self, url: str, data: Dict[str, Any], **kwargs: Any) -> str:\r\n\r\n\t\"\"\"POST to the URL and return the text.\"\"\"\r\n\r\n\treturn  self.requests.post(url, data, **kwargs).text\r\n\r\n\t  \r\n\r\n\tdef patch(self, url: str, data: Dict[str, Any], **kwargs: Any) -> str:\r\n\r\n\t\"\"\"PATCH the URL and return the text.\"\"\"\r\n\r\n\treturn  self.requests.patch(url, data, **kwargs).text\r\n\r\n\t  \r\n\r\n\tdef put(self, url: str, data: Dict[str, Any], **kwargs: Any) -> str:\r\n\r\n\t\"\"\"PUT the URL and return the text.\"\"\"\r\n\r\n\treturn  self.requests.put(url, data, **kwargs).text\r\n\r\n\t  \r\n\r\n\tdef delete(self, url: str, **kwargs: Any) -> str:\r\n\r\n\t\"\"\"DELETE the URL and return the text.\"\"\"\r\n\r\n\treturn  self.requests.delete(url, **kwargs).text\r\n\r\n\t  \r\n\r\n\tasync  def aget(self, url: str, **kwargs: Any) -> str:\r\n\r\n\t\"\"\"GET the URL and return the text asynchronously.\"\"\"\r\n\r\n\tasync  with  self.requests.aget(url, **kwargs) as response:\r\n\r\n\treturn  await response.text()\r\n\r\n\t  \r\n\r\n\tasync  def apost(self, url: str, data: Dict[str, Any], **kwargs: Any) -> str:\r\n\r\n\t\"\"\"POST to the URL and return the text asynchronously.\"\"\"\r\n\r\n\tasync  with  self.requests.apost(url, **kwargs) as response:\r\n\r\n\treturn  await response.text()\r\n\r\n\t  \r\n\r\n\tasync  def apatch(self, url: str, data: Dict[str, Any], **kwargs: Any) -> str:\r\n\r\n\t\"\"\"PATCH the URL and return the text asynchronously.\"\"\"\r\n\r\n\tasync  with  self.requests.apatch(url, **kwargs) as response:\r\n\r\n\treturn  await response.text()\r\n\r\n\t  \r\n\r\n\tasync  def aput(self, url: str, data: Dict[str, Any], **kwargs: Any) -> str:\r\n\r\n\t\"\"\"PUT the URL and return the text asynchronously.\"\"\"\r\n\r\n\tasync  with  self.requests.aput(url, **kwargs) as response:\r\n\r\n\treturn  await response.text()\r\n\r\n\t  \r\n\r\n\tasync  def adelete(self, url: str, **kwargs: Any) -> str:\r\n\r\n\t\"\"\"DELETE the URL and return the text asynchronously.\"\"\"\r\n\r\n\tasync  with  self.requests.adelete(url, **kwargs) as response:\r\n\r\n\treturn  await response.text()\r\n\r\n\t  \r\n\t  \r\n\r\n\t# For backwards compatibility\r\n\r\n\tRequestsWrapper = TextRequestsWrapper\r\n\r\n\r\nThis may be creating the conflicts. \r\n\r\nHere's the error that I am getting :\r\n\r\n\t[/usr/local/lib/python3.9/dist-packages/langchain/requests.py](https://localhost:8080/#) in get(self, url, **kwargs)  \r\n\t26  def  get(self,  url:  str,  **kwargs:  Any)  ->  requests.Response:  \r\n\t27  \"\"\"GET the URL and return the text.\"\"\"  ---> \r\n\t28  return  requests.get(url,  headers=self.headers,  **kwargs)  \r\n\t29   \r\n\t30  def  post(self,  url:  str,  data:  Dict[str,  Any],  **kwargs:  Any)  ->  requests.Response:  \r\n\r\n\tTypeError: requests.api.get() got multiple values for keyword argument 'headers'\r\n\r\nPlease assist.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3402/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3402/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3401",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3401/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3401/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3401/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3401",
        "id": 1680125592,
        "node_id": "PR_kwDOIPDwls5O8Yi1",
        "number": 3401,
        "title": "Add ElasticsearchEmbeddings class for generating embeddings using Elasticsearch models",
        "user": {
            "login": "jeffvestal",
            "id": 53237856,
            "node_id": "MDQ6VXNlcjUzMjM3ODU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/53237856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffvestal",
            "html_url": "https://github.com/jeffvestal",
            "followers_url": "https://api.github.com/users/jeffvestal/followers",
            "following_url": "https://api.github.com/users/jeffvestal/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffvestal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffvestal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffvestal/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffvestal/orgs",
            "repos_url": "https://api.github.com/users/jeffvestal/repos",
            "events_url": "https://api.github.com/users/jeffvestal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffvestal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-23T18:42:15Z",
        "updated_at": "2023-05-24T06:48:53Z",
        "closed_at": "2023-05-23T21:50:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3401",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3401",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3401.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3401.patch",
            "merged_at": "2023-05-23T21:50:33Z"
        },
        "body": "This PR introduces a new module, `elasticsearch_embeddings.py`, which provides a wrapper around Elasticsearch embedding models. The new ElasticsearchEmbeddings class allows users to generate embeddings for documents and query texts using a [model deployed in an Elasticsearch cluster](https://www.elastic.co/guide/en/machine-learning/current/ml-nlp-model-ref.html#ml-nlp-model-ref-text-embedding).\r\n\r\n### Main features:\r\n\r\n1. The ElasticsearchEmbeddings class initializes with an Elasticsearch connection object and a model_id, providing an interface to interact with the Elasticsearch ML client through [infer_trained_model](https://elasticsearch-py.readthedocs.io/en/v8.7.0/api.html?highlight=trained%20model%20infer#elasticsearch.client.MlClient.infer_trained_model) .\r\n2. The `embed_documents()` method generates embeddings for a list of documents, and the `embed_query()` method generates an embedding for a single query text.\r\n3. The class supports custom input text field names in case the deployed model expects a different field name than the default `text_field`.\r\n4. The implementation is compatible with any model deployed in Elasticsearch that generates embeddings as output.\r\n\r\n\r\n### Benefits:\r\n\r\n1. Simplifies the process of generating embeddings using Elasticsearch models.\r\n2. Provides a clean and intuitive interface to interact with the Elasticsearch ML client.\r\n3. Allows users to easily integrate Elasticsearch-generated embeddings.\r\n\r\n\r\nThis is my first PR for this project.\r\nI created an integration test file, however, I could use some guidance on how to set it up since it needs an Elasticsearch cluster running an embedding model.  \r\n\r\nLet me know if there are any structural changes needed or anything missing.\r\n\r\nRelated issue https://github.com/hwchase17/langchain/issues/3400\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3401/reactions",
            "total_count": 7,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 3,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3401/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3400",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3400/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3400/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3400/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3400",
        "id": 1680125057,
        "node_id": "I_kwDOIPDwls5kJKyB",
        "number": 3400,
        "title": "Add support for generating embeddings in Elasticsearch",
        "user": {
            "login": "jeffvestal",
            "id": 53237856,
            "node_id": "MDQ6VXNlcjUzMjM3ODU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/53237856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffvestal",
            "html_url": "https://github.com/jeffvestal",
            "followers_url": "https://api.github.com/users/jeffvestal/followers",
            "following_url": "https://api.github.com/users/jeffvestal/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffvestal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffvestal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffvestal/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffvestal/orgs",
            "repos_url": "https://api.github.com/users/jeffvestal/repos",
            "events_url": "https://api.github.com/users/jeffvestal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffvestal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-23T18:40:54Z",
        "updated_at": "2023-05-24T05:40:38Z",
        "closed_at": "2023-05-24T05:40:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Elastic supports generating embeddings using [embedding models running in the stack](https://www.elastic.co/guide/en/machine-learning/current/ml-nlp-model-ref.html#ml-nlp-model-ref-text-embedding).\r\n\r\nAdd a the ability to generate embeddings with Elasticsearch in langchain similar to other embedding modules. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3400/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3400/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3399",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3399/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3399/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3399/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3399",
        "id": 1680114161,
        "node_id": "I_kwDOIPDwls5kJIHx",
        "number": 3399,
        "title": "Connection with mongo db",
        "user": {
            "login": "nikhilkotiya",
            "id": 51186856,
            "node_id": "MDQ6VXNlcjUxMTg2ODU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/51186856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikhilkotiya",
            "html_url": "https://github.com/nikhilkotiya",
            "followers_url": "https://api.github.com/users/nikhilkotiya/followers",
            "following_url": "https://api.github.com/users/nikhilkotiya/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikhilkotiya/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikhilkotiya/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikhilkotiya/subscriptions",
            "organizations_url": "https://api.github.com/users/nikhilkotiya/orgs",
            "repos_url": "https://api.github.com/users/nikhilkotiya/repos",
            "events_url": "https://api.github.com/users/nikhilkotiya/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikhilkotiya/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-04-23T18:03:33Z",
        "updated_at": "2023-10-18T20:01:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Can you please help me with connecting my LangChain agent to a MongoDB database? I know that it's possible to directly connect to a SQL database using this resource [https://python.langchain.com/en/latest/modules/agents/toolkits/examples/sql_database.html](url) but I'm not sure if the same approach can be used with MongoDB. If it's not possible, could you suggest other ways to connect to MongoDB?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3399/reactions",
            "total_count": 20,
            "+1": 20,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3399/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3398",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3398/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3398/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3398/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3398",
        "id": 1680107688,
        "node_id": "I_kwDOIPDwls5kJGio",
        "number": 3398,
        "title": "object is not callable",
        "user": {
            "login": "uriafranko",
            "id": 44477558,
            "node_id": "MDQ6VXNlcjQ0NDc3NTU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/44477558?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/uriafranko",
            "html_url": "https://github.com/uriafranko",
            "followers_url": "https://api.github.com/users/uriafranko/followers",
            "following_url": "https://api.github.com/users/uriafranko/following{/other_user}",
            "gists_url": "https://api.github.com/users/uriafranko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/uriafranko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/uriafranko/subscriptions",
            "organizations_url": "https://api.github.com/users/uriafranko/orgs",
            "repos_url": "https://api.github.com/users/uriafranko/repos",
            "events_url": "https://api.github.com/users/uriafranko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/uriafranko/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-23T17:43:35Z",
        "updated_at": "2023-09-10T16:28:43Z",
        "closed_at": "2023-09-10T16:28:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hey\r\nI'm getting `TypeError: 'StuffDocumentsChain' object is not callable`\r\n\r\nthe code snippet can be found here:\r\n\r\n```\r\ndef main():\r\n    text_splitter = CharacterTextSplitter(chunk_size=2000, chunk_overlap=50)\r\n    texts = text_splitter.split_documents(documents)\r\n    embeddings = OpenAIEmbeddings(openai_api_key=api_key)\r\n\r\n    vector_db = Chroma.from_documents(\r\n        documents=texts, embeddings=embeddings)\r\n\r\n    relevant_words = get_search_words(query)\r\n    docs = vector_db.similarity_search(\r\n        relevant_words, top_k=min(3, len(texts))\r\n    )\r\n\r\n    chat_model = ChatOpenAI(\r\n        model_name=\"gpt-3.5-turbo\", temperature=0.2, openai_api_key=api_key\r\n    )\r\n    PROMPT = get_prompt_template()\r\n    chain = load_qa_with_sources_chain(\r\n        chat_model, chain_type=\"stuff\", metadata_keys=['source'],\r\n        return_intermediate_steps=True, prompt=PROMPT\r\n    )\r\n\r\n    res = chain({\"input_documents\": docs, \"question\": query},\r\n                return_only_outputs=True)\r\n    pprint(res)\r\n```\r\n\r\nAny ideas what I'm doing wrong?\r\n\r\nBTW - if I'll change it to map_rerank of even use \r\n```\r\nchain = load_qa_chain(chat_model, chain_type=\"stuff\")\r\nchain.run(input_documents=docs, question=query)\r\n```\r\n\r\nI'm getting the same object is not callable",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3398/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3398/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3397",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3397/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3397/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3397/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3397",
        "id": 1680075777,
        "node_id": "PR_kwDOIPDwls5O8PNM",
        "number": 3397,
        "title": "GuessedAtParserWarning from RTD document loader documentation example",
        "user": {
            "login": "mullinmax",
            "id": 14000345,
            "node_id": "MDQ6VXNlcjE0MDAwMzQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/14000345?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mullinmax",
            "html_url": "https://github.com/mullinmax",
            "followers_url": "https://api.github.com/users/mullinmax/followers",
            "following_url": "https://api.github.com/users/mullinmax/following{/other_user}",
            "gists_url": "https://api.github.com/users/mullinmax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mullinmax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mullinmax/subscriptions",
            "organizations_url": "https://api.github.com/users/mullinmax/orgs",
            "repos_url": "https://api.github.com/users/mullinmax/repos",
            "events_url": "https://api.github.com/users/mullinmax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mullinmax/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-23T16:00:14Z",
        "updated_at": "2023-04-25T04:54:39Z",
        "closed_at": "2023-04-25T04:54:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3397",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3397",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3397.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3397.patch",
            "merged_at": "2023-04-25T04:54:39Z"
        },
        "body": "Addresses #3396 by adding \r\n\r\n`features='html.parser'` in example\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3397/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3397/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3396",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3396/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3396/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3396/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3396",
        "id": 1680072310,
        "node_id": "I_kwDOIPDwls5kI952",
        "number": 3396,
        "title": "Read the Docs document loader documentation example raises warning",
        "user": {
            "login": "mullinmax",
            "id": 14000345,
            "node_id": "MDQ6VXNlcjE0MDAwMzQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/14000345?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mullinmax",
            "html_url": "https://github.com/mullinmax",
            "followers_url": "https://api.github.com/users/mullinmax/followers",
            "following_url": "https://api.github.com/users/mullinmax/following{/other_user}",
            "gists_url": "https://api.github.com/users/mullinmax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mullinmax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mullinmax/subscriptions",
            "organizations_url": "https://api.github.com/users/mullinmax/orgs",
            "repos_url": "https://api.github.com/users/mullinmax/repos",
            "events_url": "https://api.github.com/users/mullinmax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mullinmax/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-23T15:50:35Z",
        "updated_at": "2023-04-25T04:54:40Z",
        "closed_at": "2023-04-25T04:54:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "The example in the documentation raises a `GuessedAtParserWarning`\r\n\r\nTo replicate:\r\n\r\n```python\r\n#!wget -r -A.html -P rtdocs https://langchain.readthedocs.io/en/latest/\r\nfrom langchain.document_loaders import ReadTheDocsLoader\r\nloader = ReadTheDocsLoader(\"rtdocs\")\r\ndocs = loader.load()\r\n```\r\n\r\n```\r\n/config/miniconda3/envs/warn_test/lib/python3.8/site-packages/langchain/document_loaders/readthedocs.py:30: GuessedAtParserWarning: No parser was explicitly specified, so I'm using the best available HTML parser for this system (\"html.parser\"). This usually isn't a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.\r\n\r\nThe code that caused this warning is on line 30 of the file /config/miniconda3/envs/warn_test/lib/python3.8/site-packages/langchain/document_loaders/readthedocs.py. To get rid of this warning, pass the additional argument 'features=\"html.parser\"' to the BeautifulSoup constructor.\r\n\r\n  _ = BeautifulSoup(\r\n```\r\n\r\nAdding the argument `features` can resolve this issue\r\n\r\n```python\r\n#!wget -r -A.html -P rtdocs https://langchain.readthedocs.io/en/latest/\r\nfrom langchain.document_loaders import ReadTheDocsLoader\r\nloader = ReadTheDocsLoader(\"rtdocs\", features='html.parser')\r\ndocs = loader.load()\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3396/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3396/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3395",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3395/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3395/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3395/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3395",
        "id": 1680069859,
        "node_id": "PR_kwDOIPDwls5O8OFb",
        "number": 3395,
        "title": "Improve youtube loader",
        "user": {
            "login": "johannhartmann",
            "id": 200804,
            "node_id": "MDQ6VXNlcjIwMDgwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/200804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/johannhartmann",
            "html_url": "https://github.com/johannhartmann",
            "followers_url": "https://api.github.com/users/johannhartmann/followers",
            "following_url": "https://api.github.com/users/johannhartmann/following{/other_user}",
            "gists_url": "https://api.github.com/users/johannhartmann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/johannhartmann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/johannhartmann/subscriptions",
            "organizations_url": "https://api.github.com/users/johannhartmann/orgs",
            "repos_url": "https://api.github.com/users/johannhartmann/repos",
            "events_url": "https://api.github.com/users/johannhartmann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/johannhartmann/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-23T15:42:20Z",
        "updated_at": "2023-04-23T17:24:42Z",
        "closed_at": "2023-04-23T17:24:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3395",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3395",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3395.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3395.patch",
            "merged_at": "2023-04-23T17:24:42Z"
        },
        "body": "Small improvements for the YouTube loader: \r\na) use the YouTube API permission scope instead of Google Drive \r\nb) bugfix: allow transcript loading for single videos \r\nc) an additional parameter \"continue_on_failure\" for cases when videos in a playlist do not have transcription enabled.\r\nd) support automated translation for all languages, if available.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3395/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3395/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3394",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3394/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3394/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3394/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3394",
        "id": 1680069421,
        "node_id": "PR_kwDOIPDwls5O8OAw",
        "number": 3394,
        "title": "Harrison/hf document loader",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-23T15:40:55Z",
        "updated_at": "2023-04-23T17:17:44Z",
        "closed_at": "2023-04-23T17:17:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3394",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3394",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3394.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3394.patch",
            "merged_at": "2023-04-23T17:17:43Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3394/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3394/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3393",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3393/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3393/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3393/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3393",
        "id": 1680067694,
        "node_id": "PR_kwDOIPDwls5O8Nsx",
        "number": 3393,
        "title": "Added Blockchain Document Loader",
        "user": {
            "login": "saginawj",
            "id": 8893086,
            "node_id": "MDQ6VXNlcjg4OTMwODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8893086?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saginawj",
            "html_url": "https://github.com/saginawj",
            "followers_url": "https://api.github.com/users/saginawj/followers",
            "following_url": "https://api.github.com/users/saginawj/following{/other_user}",
            "gists_url": "https://api.github.com/users/saginawj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saginawj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saginawj/subscriptions",
            "organizations_url": "https://api.github.com/users/saginawj/orgs",
            "repos_url": "https://api.github.com/users/saginawj/repos",
            "events_url": "https://api.github.com/users/saginawj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saginawj/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-23T15:34:51Z",
        "updated_at": "2023-04-25T04:53:46Z",
        "closed_at": "2023-04-25T04:53:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3393",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3393",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3393.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3393.patch",
            "merged_at": "2023-04-25T04:53:46Z"
        },
        "body": "This PR contains a Document Loader and Integration Test for Blockchain which:\r\n\r\n- Uses the Alchemy API which provides read access to the major blockchain projects\r\n- Currently only Ethereum Mainnet is used\r\n- Currently the load function returns a collection of NFTs at the provided contractAddress.  \r\n\r\nFuture areas of extension:\r\n\r\n- Extend to additional blockchains (e.g. Polygon) and environments (e.g. testnets)\r\n- Extend to additional APIs beyond NFTs (e.g. Blockchain Transactions)\r\n\r\nAn ALCHEMY_API_KEY is required to access the Alchemy API.  This can be set as an environment variable. \r\n\r\nI'm currently using this loader locally to analyze NFT attributes in a Q&A pipeline.  I figured this could be useful for others.\r\n\r\nPlease provide any feedback!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3393/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3393/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3392",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3392/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3392/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3392/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3392",
        "id": 1680065577,
        "node_id": "PR_kwDOIPDwls5O8NUK",
        "number": 3392,
        "title": "support async version func run_as_str in zapier",
        "user": {
            "login": "cangcang-zcr",
            "id": 56295596,
            "node_id": "MDQ6VXNlcjU2Mjk1NTk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/56295596?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cangcang-zcr",
            "html_url": "https://github.com/cangcang-zcr",
            "followers_url": "https://api.github.com/users/cangcang-zcr/followers",
            "following_url": "https://api.github.com/users/cangcang-zcr/following{/other_user}",
            "gists_url": "https://api.github.com/users/cangcang-zcr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cangcang-zcr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cangcang-zcr/subscriptions",
            "organizations_url": "https://api.github.com/users/cangcang-zcr/orgs",
            "repos_url": "https://api.github.com/users/cangcang-zcr/repos",
            "events_url": "https://api.github.com/users/cangcang-zcr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cangcang-zcr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-23T15:27:45Z",
        "updated_at": "2023-08-08T21:02:44Z",
        "closed_at": "2023-08-08T21:02:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3392",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3392",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3392.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3392.patch",
            "merged_at": null
        },
        "body": "Can support asynchronous versions of run_as_str and related functions.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3392/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3392/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3391",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3391/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3391/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3391/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3391",
        "id": 1680051952,
        "node_id": "I_kwDOIPDwls5kI47w",
        "number": 3391,
        "title": "UnstructuredURLLoader Error",
        "user": {
            "login": "lichao252244354",
            "id": 27394097,
            "node_id": "MDQ6VXNlcjI3Mzk0MDk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/27394097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lichao252244354",
            "html_url": "https://github.com/lichao252244354",
            "followers_url": "https://api.github.com/users/lichao252244354/followers",
            "following_url": "https://api.github.com/users/lichao252244354/following{/other_user}",
            "gists_url": "https://api.github.com/users/lichao252244354/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lichao252244354/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lichao252244354/subscriptions",
            "organizations_url": "https://api.github.com/users/lichao252244354/orgs",
            "repos_url": "https://api.github.com/users/lichao252244354/repos",
            "events_url": "https://api.github.com/users/lichao252244354/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lichao252244354/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-23T14:45:09Z",
        "updated_at": "2023-09-10T16:28:50Z",
        "closed_at": "2023-09-10T16:28:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello, cloud you help me fix\r\nError fetching or processing https exeption: URL return an error: 403 when using UnstructuredURLLoader\uff0cI'm not sure if this error is a restricted access to the website or a problem with the use of the API\uff0c thank you very much",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3391/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3391/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3390",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3390/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3390/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3390/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3390",
        "id": 1680044740,
        "node_id": "I_kwDOIPDwls5kI3LE",
        "number": 3390,
        "title": "MRKLOutputParser strips quotes incorrectly and breaks LLM commands",
        "user": {
            "login": "shtratos",
            "id": 1232175,
            "node_id": "MDQ6VXNlcjEyMzIxNzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1232175?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shtratos",
            "html_url": "https://github.com/shtratos",
            "followers_url": "https://api.github.com/users/shtratos/followers",
            "following_url": "https://api.github.com/users/shtratos/following{/other_user}",
            "gists_url": "https://api.github.com/users/shtratos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shtratos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shtratos/subscriptions",
            "organizations_url": "https://api.github.com/users/shtratos/orgs",
            "repos_url": "https://api.github.com/users/shtratos/repos",
            "events_url": "https://api.github.com/users/shtratos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shtratos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-23T14:22:00Z",
        "updated_at": "2023-09-10T16:28:54Z",
        "closed_at": "2023-09-10T16:28:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "`MRKLOutputParser` strips quotes in \"Action Input\" without checking if they are present on both sides.\r\n\r\nSee https://github.com/hwchase17/langchain/blob/acfd11c8e424a456227abde8df8b52a705b63024/langchain/agents/mrkl/output_parser.py#L27\r\n\r\nTest case that reproduces the problem:\r\n```python\r\nfrom langchain.agents.mrkl.output_parser import MRKLOutputParser\r\nparser = MRKLOutputParser()\r\nllm_output = 'Action: Terminal\\nAction Input: git commit -m \"My change\"'\r\naction = parser.parse(llm_output)\r\nprint(action)\r\nassert action.tool_input == 'git commit -m \"My change\"'\r\n```\r\n\r\nThe fix should be simple: check first if the quotes are present on both sides before stripping them.\r\n\r\nHappy to submit a PR if you are happy with proposed fix.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3390/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3390/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3389",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3389/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3389/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3389/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3389",
        "id": 1680033914,
        "node_id": "I_kwDOIPDwls5kI0h6",
        "number": 3389,
        "title": "Youtube.py: urllib.error.URLError: <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1129)>",
        "user": {
            "login": "AaronWard",
            "id": 22074246,
            "node_id": "MDQ6VXNlcjIyMDc0MjQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/22074246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AaronWard",
            "html_url": "https://github.com/AaronWard",
            "followers_url": "https://api.github.com/users/AaronWard/followers",
            "following_url": "https://api.github.com/users/AaronWard/following{/other_user}",
            "gists_url": "https://api.github.com/users/AaronWard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AaronWard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AaronWard/subscriptions",
            "organizations_url": "https://api.github.com/users/AaronWard/orgs",
            "repos_url": "https://api.github.com/users/AaronWard/repos",
            "events_url": "https://api.github.com/users/AaronWard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AaronWard/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-23T13:47:11Z",
        "updated_at": "2023-09-24T16:08:22Z",
        "closed_at": "2023-09-24T16:08:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### The Problem\r\nThe `YoutubeLoader` is breaking when using the `from_youtube_url` function. The expected behaviour is to use this module to get transcripts from youtube videos and pass into them to an LLM. Willing to help if needed.\r\n\r\n### Specs\r\n```\r\n- Machine: Apple M1 Pro\r\n- Version: langchain  0.0.147\r\n- conda-build version : 3.21.8\r\n- python version : 3.9.12.final.0\r\n```\r\n\r\n### Code\r\n\r\n```python\r\nfrom dotenv import find_dotenv, load_dotenv\r\nfrom langchain.document_loaders import YoutubeLoader\r\n\r\nload_dotenv(find_dotenv())\r\n\r\nloader = YoutubeLoader.from_youtube_url(\"https://www.youtube.com/watch?v=QsYGlZkevEg\", add_video_info=True)\r\nresult = loader.load()\r\nprint (result)\r\n```\r\n\r\n### Output\r\n```bash\r\nTraceback (most recent call last):\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/site-packages/pytube/__main__.py\", line 341, in title\r\n    self._title = self.vid_info['videoDetails']['title']\r\nKeyError: 'videoDetails'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/urllib/request.py\", line 1346, in do_open\r\n    h.request(req.get_method(), req.selector, req.data, headers,\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/http/client.py\", line 1285, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/http/client.py\", line 1331, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/http/client.py\", line 1280, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/http/client.py\", line 1040, in _send_output\r\n    self.send(msg)\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/http/client.py\", line 980, in send\r\n    self.connect()\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/http/client.py\", line 1454, in connect\r\n    self.sock = self._context.wrap_socket(self.sock,\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/ssl.py\", line 500, in wrap_socket\r\n    return self.sslsocket_class._create(\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/ssl.py\", line 1040, in _create\r\n    self.do_handshake()\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/ssl.py\", line 1309, in do_handshake\r\n    self._sslobj.do_handshake()\r\nssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1129)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/<username>/Desktop/personal/github/ar-assistant/notebooks/research/langchain/scripts/5-indexes.py\", line 28, in <module>\r\n    result = loader.load()\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/site-packages/langchain/document_loaders/youtube.py\", line 133, in load\r\n    video_info = self._get_video_info()\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/site-packages/langchain/document_loaders/youtube.py\", line 174, in _get_video_info\r\n    \"title\": yt.title,\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/site-packages/pytube/__main__.py\", line 345, in title\r\n    self.check_availability()\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/site-packages/pytube/__main__.py\", line 210, in check_availability\r\n    status, messages = extract.playability_status(self.watch_html)\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/site-packages/pytube/__main__.py\", line 102, in watch_html\r\n    self._watch_html = request.get(url=self.watch_url)\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/site-packages/pytube/request.py\", line 53, in get\r\n    response = _execute_request(url, headers=extra_headers, timeout=timeout)\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/site-packages/pytube/request.py\", line 37, in _execute_request\r\n    return urlopen(request, timeout=timeout)  # nosec\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/urllib/request.py\", line 214, in urlopen\r\n    return opener.open(url, data, timeout)\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/urllib/request.py\", line 517, in open\r\n    response = self._open(req, data)\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/urllib/request.py\", line 534, in _open\r\n    result = self._call_chain(self.handle_open, protocol, protocol +\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/urllib/request.py\", line 494, in _call_chain\r\n    result = func(*args)\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/urllib/request.py\", line 1389, in https_open\r\n    return self.do_open(http.client.HTTPSConnection, req,\r\n  File \"/Users/<username>/opt/anaconda3/envs/dev/lib/python3.9/urllib/request.py\", line 1349, in do_open\r\n    raise URLError(err)\r\nurllib.error.URLError: <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1129)>\r\n```\r\n\r\n\r\n### FYI\r\n- There is a duplication of code excerpts in the [Youtube page](https://python.langchain.com/en/latest/modules/indexes/document_loaders/examples/youtube.html#) of the langchain docs\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3389/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3389/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3388",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3388/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3388/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3388/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3388",
        "id": 1680025245,
        "node_id": "I_kwDOIPDwls5kIyad",
        "number": 3388,
        "title": "IndexTree and local LLM",
        "user": {
            "login": "Dave86ch",
            "id": 87725170,
            "node_id": "MDQ6VXNlcjg3NzI1MTcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/87725170?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Dave86ch",
            "html_url": "https://github.com/Dave86ch",
            "followers_url": "https://api.github.com/users/Dave86ch/followers",
            "following_url": "https://api.github.com/users/Dave86ch/following{/other_user}",
            "gists_url": "https://api.github.com/users/Dave86ch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Dave86ch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Dave86ch/subscriptions",
            "organizations_url": "https://api.github.com/users/Dave86ch/orgs",
            "repos_url": "https://api.github.com/users/Dave86ch/repos",
            "events_url": "https://api.github.com/users/Dave86ch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Dave86ch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-23T13:18:07Z",
        "updated_at": "2023-09-15T22:12:51Z",
        "closed_at": "2023-08-22T08:25:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello everyone,\nIs it possible to use IndexTree with a local LLM as for istance gpt4all or llama.cpp?\nIs there a tutorial?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3388/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3388/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3387",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3387/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3387/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3387/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3387",
        "id": 1680009761,
        "node_id": "I_kwDOIPDwls5kIuoh",
        "number": 3387,
        "title": "FR: Add a contribution guide.",
        "user": {
            "login": "PhilipMay",
            "id": 229382,
            "node_id": "MDQ6VXNlcjIyOTM4Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/229382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PhilipMay",
            "html_url": "https://github.com/PhilipMay",
            "followers_url": "https://api.github.com/users/PhilipMay/followers",
            "following_url": "https://api.github.com/users/PhilipMay/following{/other_user}",
            "gists_url": "https://api.github.com/users/PhilipMay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PhilipMay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PhilipMay/subscriptions",
            "organizations_url": "https://api.github.com/users/PhilipMay/orgs",
            "repos_url": "https://api.github.com/users/PhilipMay/repos",
            "events_url": "https://api.github.com/users/PhilipMay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PhilipMay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-23T12:26:05Z",
        "updated_at": "2023-04-23T12:29:47Z",
        "closed_at": "2023-04-23T12:29:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "IMO a contribution guide should be added. The following questions should be answered:\r\n\r\n- how do I install langchain in `-e` mode with all dependencies to run lint and tests locally\r\n- how to start / run lint and tests locally\r\n- how should I mark \"feature request issues\"\r\n- how should I mark \"PR that are work in progress\"\r\n- a link to the discord\r\n- ...",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3387/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3387/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3386",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3386/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3386/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3386/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3386",
        "id": 1680000218,
        "node_id": "I_kwDOIPDwls5kIsTa",
        "number": 3386,
        "title": "How to action when output isn't finished",
        "user": {
            "login": "wenfengwang",
            "id": 9766821,
            "node_id": "MDQ6VXNlcjk3NjY4MjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9766821?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wenfengwang",
            "html_url": "https://github.com/wenfengwang",
            "followers_url": "https://api.github.com/users/wenfengwang/followers",
            "following_url": "https://api.github.com/users/wenfengwang/following{/other_user}",
            "gists_url": "https://api.github.com/users/wenfengwang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wenfengwang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wenfengwang/subscriptions",
            "organizations_url": "https://api.github.com/users/wenfengwang/orgs",
            "repos_url": "https://api.github.com/users/wenfengwang/repos",
            "events_url": "https://api.github.com/users/wenfengwang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wenfengwang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-04-23T11:58:28Z",
        "updated_at": "2023-10-09T08:11:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "sometimes, when we ask LLMs a question like writing a document  or a piece of code for a specified problem, the output may be too long, when we use a UI interface like ChatGPT, we can use the prompt like \r\n```bash\r\n...\r\nif you have given all content, please add the 'finished' at the end of the response. \r\nif not, I will say 'continue', then please continue to give me the reaming content.\r\n```\r\nto get all content by seeing if we should let LLMs continue to print content. **Does anyone know how to achieve this by LangChain?** \r\n\r\nI'm not sure if LangChain supports this, if not, and if someone is willing to give me some guides on how to do this in LangChain, I'll be happy to create a PR to solve it.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3386/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3386/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3385",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3385/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3385/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3385/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3385",
        "id": 1679979690,
        "node_id": "PR_kwDOIPDwls5O79Jf",
        "number": 3385,
        "title": "Fix problem with sql_chain and quotation marks: normalize_sql_cmd",
        "user": {
            "login": "PhilipMay",
            "id": 229382,
            "node_id": "MDQ6VXNlcjIyOTM4Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/229382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PhilipMay",
            "html_url": "https://github.com/PhilipMay",
            "followers_url": "https://api.github.com/users/PhilipMay/followers",
            "following_url": "https://api.github.com/users/PhilipMay/following{/other_user}",
            "gists_url": "https://api.github.com/users/PhilipMay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PhilipMay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PhilipMay/subscriptions",
            "organizations_url": "https://api.github.com/users/PhilipMay/orgs",
            "repos_url": "https://api.github.com/users/PhilipMay/repos",
            "events_url": "https://api.github.com/users/PhilipMay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PhilipMay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-04-23T10:58:30Z",
        "updated_at": "2023-11-07T04:43:56Z",
        "closed_at": "2023-11-07T04:43:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3385",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3385",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3385.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3385.patch",
            "merged_at": null
        },
        "body": "fixes #3305 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3385/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3385/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3384",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3384/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3384/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3384/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3384",
        "id": 1679909880,
        "node_id": "I_kwDOIPDwls5kIWP4",
        "number": 3384,
        "title": "ValueError in cosine_similarity when using FAISS index as vector store",
        "user": {
            "login": "infinite-Joy",
            "id": 9998813,
            "node_id": "MDQ6VXNlcjk5OTg4MTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9998813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/infinite-Joy",
            "html_url": "https://github.com/infinite-Joy",
            "followers_url": "https://api.github.com/users/infinite-Joy/followers",
            "following_url": "https://api.github.com/users/infinite-Joy/following{/other_user}",
            "gists_url": "https://api.github.com/users/infinite-Joy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/infinite-Joy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/infinite-Joy/subscriptions",
            "organizations_url": "https://api.github.com/users/infinite-Joy/orgs",
            "repos_url": "https://api.github.com/users/infinite-Joy/repos",
            "events_url": "https://api.github.com/users/infinite-Joy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/infinite-Joy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-04-23T07:51:56Z",
        "updated_at": "2023-04-25T03:43:34Z",
        "closed_at": "2023-04-25T02:54:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Getting the below error\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"...\\langchain\\vectorstores\\faiss.py\", line 285, in max_marginal_relevance_search\r\n    docs = self.max_marginal_relevance_search_by_vector(embedding, k, fetch_k)\r\n  File \"...\\langchain\\vectorstores\\faiss.py\", line 248, in max_marginal_relevance_search_by_vector\r\n    mmr_selected = maximal_marginal_relevance(\r\n  File \"...\\langchain\\langchain\\vectorstores\\utils.py\", line 19, in maximal_marginal_relevance\r\n    similarity_to_query = cosine_similarity([query_embedding], embedding_list)[0]\r\n  File \"...\\langchain\\langchain\\math_utils.py\", line 16, in cosine_similarity\r\n    raise ValueError(\"Number of columns in X and Y must be the same.\")\r\nValueError: Number of columns in X and Y must be the same.\r\n```\r\n\r\nCode to reproduce this error\r\n\r\n```\r\n>>> model_name = \"sentence-transformers/all-mpnet-base-v2\"\r\n>>> model_kwargs = {'device': 'cpu'}\r\n>>> from langchain.embeddings import HuggingFaceEmbeddings\r\n>>> embeddings = HuggingFaceEmbeddings(model_name=model_name, model_kwargs=model_kwargs)\r\n>>> from langchain.vectorstores import FAISS\r\n>>> FAISS_INDEX_PATH = 'faiss_index'\r\n>>> db = FAISS.load_local(FAISS_INDEX_PATH, embeddings)\r\n>>> query = 'query'\r\n>>> results = db.max_marginal_relevance_search(query)\r\n```\r\n\r\nWhile going through the error it seems that in this case `query_embedding` is 1 x model_dimension while embedding_list is no_docs x model dimension vectors. Hence we should probably change the code to `similarity_to_query = cosine_similarity(query_embedding, embedding_list)[0]` i.e. remove the list from the query_embedding.\r\n\r\nSince this is a common function not sure if this change would affect other embedding classes as well.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3384/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3384/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3383",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3383/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3383/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3383/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3383",
        "id": 1679879952,
        "node_id": "PR_kwDOIPDwls5O7qKI",
        "number": 3383,
        "title": "Add support for wikipedia's lang parameter",
        "user": {
            "login": "zczhuohuo",
            "id": 1468047,
            "node_id": "MDQ6VXNlcjE0NjgwNDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1468047?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zczhuohuo",
            "html_url": "https://github.com/zczhuohuo",
            "followers_url": "https://api.github.com/users/zczhuohuo/followers",
            "following_url": "https://api.github.com/users/zczhuohuo/following{/other_user}",
            "gists_url": "https://api.github.com/users/zczhuohuo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zczhuohuo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zczhuohuo/subscriptions",
            "organizations_url": "https://api.github.com/users/zczhuohuo/orgs",
            "repos_url": "https://api.github.com/users/zczhuohuo/repos",
            "events_url": "https://api.github.com/users/zczhuohuo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zczhuohuo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-23T06:21:17Z",
        "updated_at": "2023-04-23T22:02:18Z",
        "closed_at": "2023-04-23T22:02:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3383",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3383",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3383.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3383.patch",
            "merged_at": "2023-04-23T22:02:18Z"
        },
        "body": "Allow to hange the language of the wikipedia API being requested.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3383/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3383/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3382",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3382/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3382/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3382/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3382",
        "id": 1679875328,
        "node_id": "I_kwDOIPDwls5kIN0A",
        "number": 3382,
        "title": "escape curly brackets before f-string formatting in FewShotPromptTemplate",
        "user": {
            "login": "yuto3o",
            "id": 17233404,
            "node_id": "MDQ6VXNlcjE3MjMzNDA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/17233404?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuto3o",
            "html_url": "https://github.com/yuto3o",
            "followers_url": "https://api.github.com/users/yuto3o/followers",
            "following_url": "https://api.github.com/users/yuto3o/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuto3o/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuto3o/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuto3o/subscriptions",
            "organizations_url": "https://api.github.com/users/yuto3o/orgs",
            "repos_url": "https://api.github.com/users/yuto3o/repos",
            "events_url": "https://api.github.com/users/yuto3o/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuto3o/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-23T06:05:08Z",
        "updated_at": "2023-10-23T07:57:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "In the current version(0.0.147), we should escape curly brackets before f-string formatting (FewShotPromptTemplate) by ourselves.\r\n\r\nplease make it a default behavior!\r\n\r\nhttps://colab.research.google.com/drive/16_pCJIWK88AXpCh6xsSriJmLJKrNE8Fv?usp=share_link\r\n\r\nTest Case\r\n```python\r\nfrom langchain import FewShotPromptTemplate, PromptTemplate\r\n\r\nexample={'instruction':'do something', 'input': 'question',}\r\nexamples=[\r\n    {'input': 'question a', 'output':'answer a'},\r\n    {'input': 'question b', 'output':'answer b'},\r\n]\r\n\r\nexample_prompt = PromptTemplate(\r\n        input_variables=['input', 'output'],\r\n        template='input: {input}\\noutput:{output}',\r\n)\r\n\r\nfewshot_prompt = FewShotPromptTemplate(\r\n        examples=examples,\r\n        example_prompt=example_prompt,\r\n        input_variables=['instruction', 'input'],\r\n        prefix='{instruction}\\n',\r\n        suffix='\\ninput: {input}\\noutput:',\r\n        example_separator='\\n\\n',\r\n)\r\n\r\nfewshot_prompt.format(**example)\r\n```\r\n\r\nthat's ok !\r\n\r\n\r\n```python\r\nexample={'instruction':'do something', 'input': 'question',}\r\n\r\nexamples_with_curly_brackets=[\r\n    {'input': 'question a{}', 'output':'answer a'},\r\n    {'input': 'question b', 'output':'answer b'},\r\n]\r\nfewshot_prompt = FewShotPromptTemplate(\r\n        examples=examples_with_curly_brackets,\r\n        example_prompt=example_prompt,\r\n        input_variables=['instruction', 'input'],\r\n        prefix='{instruction}\\n',\r\n        suffix='\\ninput: {input}\\noutput:',\r\n        example_separator='\\n\\n',\r\n)\r\n\r\nfewshot_prompt.format(**example)\r\n```\r\n\r\nsome errors like\r\n```shell\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n[<ipython-input-9-95e0dc90fc4d>](https://localhost:8080/#) in <cell line: 16>()\r\n     14 )\r\n     15 \r\n---> 16 fewshot_prompt.format(**example)\r\n\r\n6 frames\r\n[/usr/lib/python3.9/string.py](https://localhost:8080/#) in get_value(self, key, args, kwargs)\r\n    223     def get_value(self, key, args, kwargs):\r\n    224         if isinstance(key, int):\r\n--> 225             return args[key]\r\n    226         else:\r\n    227             return kwargs[key]\r\n\r\nIndexError: tuple index out of range\r\n```\r\n\r\nif we do escape firstly!\r\n```\r\n# What should we do: escape brackets in examples\r\ndef escape_examples(examples):\r\n    return [{k: escape_f_string(v) for k, v in example.items()} for example in examples]\r\n\r\ndef escape_f_string(text):\r\n  return text.replace('{', '{{').replace('}', '}}')\r\n\r\n\r\nfewshot_prompt = FewShotPromptTemplate(\r\n        examples=escape_examples(examples_with_curly_brackets),\r\n        example_prompt=example_prompt,\r\n        input_variables=['instruction', 'input'],\r\n        prefix='{instruction}\\n',\r\n        suffix='\\ninput: {input}\\noutput:',\r\n        example_separator='\\n\\n',\r\n)\r\n\r\nfewshot_prompt.format(**example)\r\n```\r\n\r\neverything is ok now!\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3382/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3382/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3381",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3381/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3381/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3381/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3381",
        "id": 1679870122,
        "node_id": "PR_kwDOIPDwls5O7oLD",
        "number": 3381,
        "title": "Callbacks Refactor [2/n] update tracer to work with new callbacks mechanism",
        "user": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-23T05:48:58Z",
        "updated_at": "2023-04-26T01:20:18Z",
        "closed_at": "2023-04-26T01:20:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3381",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3381",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3381.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3381.patch",
            "merged_at": "2023-04-26T01:20:17Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3381/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3381/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3380",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3380/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3380/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3380/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3380",
        "id": 1679868209,
        "node_id": "PR_kwDOIPDwls5O7nyf",
        "number": 3380,
        "title": "Improve `llm_chain.ipynb` and `getting_started.ipynb` for chains docs",
        "user": {
            "login": "outday29",
            "id": 60956360,
            "node_id": "MDQ6VXNlcjYwOTU2MzYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/60956360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/outday29",
            "html_url": "https://github.com/outday29",
            "followers_url": "https://api.github.com/users/outday29/followers",
            "following_url": "https://api.github.com/users/outday29/following{/other_user}",
            "gists_url": "https://api.github.com/users/outday29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/outday29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/outday29/subscriptions",
            "organizations_url": "https://api.github.com/users/outday29/orgs",
            "repos_url": "https://api.github.com/users/outday29/repos",
            "events_url": "https://api.github.com/users/outday29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/outday29/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-23T05:41:18Z",
        "updated_at": "2023-04-25T04:49:56Z",
        "closed_at": "2023-04-25T04:49:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3380",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3380",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3380.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3380.patch",
            "merged_at": "2023-04-25T04:49:56Z"
        },
        "body": "My attempt at improving the `Chain`'s `Getting Started` docs and `LLMChain` docs. Might need some proof-reading as English is not my first language.\r\n\r\nIn LLM examples, I replaced the example use case when a simpler one (shorter LLM output) to reduce cognitive load.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3380/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3380/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3378",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3378/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3378/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3378/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3378",
        "id": 1679864253,
        "node_id": "PR_kwDOIPDwls5O7nBE",
        "number": 3378,
        "title": "add embeddings module which uses sentence_transformers",
        "user": {
            "login": "khimaros",
            "id": 231498,
            "node_id": "MDQ6VXNlcjIzMTQ5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/231498?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/khimaros",
            "html_url": "https://github.com/khimaros",
            "followers_url": "https://api.github.com/users/khimaros/followers",
            "following_url": "https://api.github.com/users/khimaros/following{/other_user}",
            "gists_url": "https://api.github.com/users/khimaros/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/khimaros/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/khimaros/subscriptions",
            "organizations_url": "https://api.github.com/users/khimaros/orgs",
            "repos_url": "https://api.github.com/users/khimaros/repos",
            "events_url": "https://api.github.com/users/khimaros/events{/privacy}",
            "received_events_url": "https://api.github.com/users/khimaros/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-23T05:24:14Z",
        "updated_at": "2023-04-24T06:13:53Z",
        "closed_at": "2023-04-24T01:09:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3378",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3378",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3378.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3378.patch",
            "merged_at": "2023-04-24T01:09:49Z"
        },
        "body": "sentence_transformers are used by chromadb by default under the hood if no `embedding_function` is specified.\r\n\r\nhowever, adding support for them in langchain allows for more configurability and cleaner code for consumers of the langchain API.\r\n\r\nthis fix was inspired by https://github.com/hwchase17/langchain/issues/2442 and  https://github.com/abetlen/llama-cpp-python/issues/105",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3378/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3378/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3377",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3377/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3377/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3377/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3377",
        "id": 1679850318,
        "node_id": "PR_kwDOIPDwls5O7kWK",
        "number": 3377,
        "title": "Update unstructured_file.ipynb",
        "user": {
            "login": "Haste171",
            "id": 34923485,
            "node_id": "MDQ6VXNlcjM0OTIzNDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/34923485?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Haste171",
            "html_url": "https://github.com/Haste171",
            "followers_url": "https://api.github.com/users/Haste171/followers",
            "following_url": "https://api.github.com/users/Haste171/following{/other_user}",
            "gists_url": "https://api.github.com/users/Haste171/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Haste171/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Haste171/subscriptions",
            "organizations_url": "https://api.github.com/users/Haste171/orgs",
            "repos_url": "https://api.github.com/users/Haste171/repos",
            "events_url": "https://api.github.com/users/Haste171/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Haste171/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-23T04:18:06Z",
        "updated_at": "2023-04-24T04:22:39Z",
        "closed_at": "2023-04-24T04:22:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3377",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3377",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3377.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3377.patch",
            "merged_at": "2023-04-24T04:22:39Z"
        },
        "body": "Fix typo in docs",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3377/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3377/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3376",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3376/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3376/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3376/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3376",
        "id": 1679849950,
        "node_id": "PR_kwDOIPDwls5O7kR7",
        "number": 3376,
        "title": "[simple] add duckduckgo to load_tools.py",
        "user": {
            "login": "skcoirz",
            "id": 62768671,
            "node_id": "MDQ6VXNlcjYyNzY4Njcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/62768671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skcoirz",
            "html_url": "https://github.com/skcoirz",
            "followers_url": "https://api.github.com/users/skcoirz/followers",
            "following_url": "https://api.github.com/users/skcoirz/following{/other_user}",
            "gists_url": "https://api.github.com/users/skcoirz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skcoirz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skcoirz/subscriptions",
            "organizations_url": "https://api.github.com/users/skcoirz/orgs",
            "repos_url": "https://api.github.com/users/skcoirz/repos",
            "events_url": "https://api.github.com/users/skcoirz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skcoirz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-23T04:16:24Z",
        "updated_at": "2023-04-25T17:08:30Z",
        "closed_at": "2023-04-25T17:08:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3376",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3376",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3376.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3376.patch",
            "merged_at": "2023-04-25T17:08:30Z"
        },
        "body": "- duckduckgo was introduced in https://github.com/hwchase17/langchain/pull/3206/, but it\u2019s not enabled in load_tools.py yet.\r\n- this PR simply enables it in load_tools.py with a straightforward agent call (as described in get_started doc) to verify the functionality.\r\n- duckduckgo integration test passed.\r\n\r\nTODO:\r\n- not seeing an agent specific integration. Since I\u2019m still ramping up here, will add it in a following PR.\r\n- it looks like DuckDuckGo is using a different naming convention with postfix \u201c-Tool\u201d vs \u201c-Run\u201d comparing with others. The work is straightforward and it is a great way to explore the codebase, so I decided to take the chance to deeply read the codebase and then make the straightforward change in the next PR. :)\r\n\r\nThis is my first PR. Please let me know if there is anything I can improve. Thank you so much!\r\n\r\nAgent Call with DuckDuckGo instead. <img width=\"1279\" alt=\"Screenshot 2023-04-22 at 8 44 18 PM\" src=\"https://user-images.githubusercontent.com/62768671/233819592-85932514-46e8-406c-8d52-672ec4161b42.png\">\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3376/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3376/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3375",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3375/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3375/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3375/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3375",
        "id": 1679848100,
        "node_id": "PR_kwDOIPDwls5O7j76",
        "number": 3375,
        "title": "Deep Lake mini upgrades",
        "user": {
            "login": "davidbuniat",
            "id": 7069390,
            "node_id": "MDQ6VXNlcjcwNjkzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7069390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidbuniat",
            "html_url": "https://github.com/davidbuniat",
            "followers_url": "https://api.github.com/users/davidbuniat/followers",
            "following_url": "https://api.github.com/users/davidbuniat/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidbuniat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidbuniat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidbuniat/subscriptions",
            "organizations_url": "https://api.github.com/users/davidbuniat/orgs",
            "repos_url": "https://api.github.com/users/davidbuniat/repos",
            "events_url": "https://api.github.com/users/davidbuniat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidbuniat/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-23T04:08:10Z",
        "updated_at": "2023-04-24T04:23:55Z",
        "closed_at": "2023-04-24T04:23:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3375",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3375",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3375.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3375.patch",
            "merged_at": "2023-04-24T04:23:55Z"
        },
        "body": "Improvements\r\n* set default num_workers for ingestion to 0\r\n* upgraded notebooks for avoiding dataset creation ambiguity\r\n* added `force_delete_dataset_by_path`\r\n* bumped deeplake to 3.3.0\r\n* creds arg passing to deeplake object that would allow custom S3\r\n\r\nNotes\r\n* please double check if poetry is not messed up (thanks!)\r\n\r\nAsks\r\n* Would be great to create a shared slack channel for quick questions\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3375/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3375/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3374",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3374/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3374/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3374/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3374",
        "id": 1679847166,
        "node_id": "PR_kwDOIPDwls5O7jwo",
        "number": 3374,
        "title": "Fix #3144",
        "user": {
            "login": "cnhhoang850",
            "id": 65607230,
            "node_id": "MDQ6VXNlcjY1NjA3MjMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/65607230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cnhhoang850",
            "html_url": "https://github.com/cnhhoang850",
            "followers_url": "https://api.github.com/users/cnhhoang850/followers",
            "following_url": "https://api.github.com/users/cnhhoang850/following{/other_user}",
            "gists_url": "https://api.github.com/users/cnhhoang850/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cnhhoang850/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cnhhoang850/subscriptions",
            "organizations_url": "https://api.github.com/users/cnhhoang850/orgs",
            "repos_url": "https://api.github.com/users/cnhhoang850/repos",
            "events_url": "https://api.github.com/users/cnhhoang850/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cnhhoang850/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-23T04:03:46Z",
        "updated_at": "2023-04-23T04:32:30Z",
        "closed_at": "2023-04-23T04:32:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3374",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3374",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3374.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3374.patch",
            "merged_at": null
        },
        "body": "#3144",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3374/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3374/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3373",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3373/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3373/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3373/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3373",
        "id": 1679837740,
        "node_id": "I_kwDOIPDwls5kIEos",
        "number": 3373,
        "title": "QA chain is not working properly",
        "user": {
            "login": "tron19920125",
            "id": 9211476,
            "node_id": "MDQ6VXNlcjkyMTE0NzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9211476?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tron19920125",
            "html_url": "https://github.com/tron19920125",
            "followers_url": "https://api.github.com/users/tron19920125/followers",
            "following_url": "https://api.github.com/users/tron19920125/following{/other_user}",
            "gists_url": "https://api.github.com/users/tron19920125/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tron19920125/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tron19920125/subscriptions",
            "organizations_url": "https://api.github.com/users/tron19920125/orgs",
            "repos_url": "https://api.github.com/users/tron19920125/repos",
            "events_url": "https://api.github.com/users/tron19920125/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tron19920125/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-04-23T03:26:34Z",
        "updated_at": "2023-11-29T16:11:19Z",
        "closed_at": "2023-11-29T16:11:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello everyone, \r\nI have implemented my project using the Question Answering over Docs example provided in the tutorial. I designed a long custom prompt using load_qa_chain with chain_type set to stuff mode. However, when I call the function \"chain.run\", the output is incomplete. \r\nDoes anyone know what might be causing this issue?\r\nIs it because the token exceed the max size ?\r\n`llm=ChatOpenAI(streaming=True,callback_manager=CallbackManager([StreamingStdOutCallbackHandler()]),verbose=True,temperature=0,openai_api_key=OPENAI_API_KEY)`\r\n`chain = load_qa_chain(llm,chain_type=\"stuff\")`\r\n`docs=docsearch.similarity_search(query,include_metadata=True,k=10)`\r\n`r= chain.run(input_documents=docs, question=fq)` \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3373/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3373/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3372",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3372/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3372/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3372/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3372",
        "id": 1679829828,
        "node_id": "PR_kwDOIPDwls5O7gao",
        "number": 3372,
        "title": "Add retry logic for ChromaDB",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-23T02:57:11Z",
        "updated_at": "2023-04-26T02:44:29Z",
        "closed_at": "2023-04-25T04:48:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3372",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3372",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3372.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3372.patch",
            "merged_at": "2023-04-25T04:48:29Z"
        },
        "body": "Rewrite of #3368\r\n\r\nMainly an issue for when people are just getting started, but still nice to not throw an error if the number of docs is < k.\r\n\r\nAdd a little decorator utility to block mutually exclusive keyword arguments\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3372/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3372/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3371",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3371/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3371/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3371/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3371",
        "id": 1679791301,
        "node_id": "PR_kwDOIPDwls5O7Yxz",
        "number": 3371,
        "title": "Callbacks Refactor [4/n]: add configure method",
        "user": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-23T00:17:36Z",
        "updated_at": "2023-04-23T04:40:16Z",
        "closed_at": "2023-04-23T04:40:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3371",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3371",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3371.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3371.patch",
            "merged_at": "2023-04-23T04:40:15Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3371/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3371/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3370",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3370/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3370/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3370/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3370",
        "id": 1679781525,
        "node_id": "PR_kwDOIPDwls5O7WvS",
        "number": 3370,
        "title": "Prediction Guard LLM wrapper, docs, examples",
        "user": {
            "login": "dwhitena",
            "id": 4524535,
            "node_id": "MDQ6VXNlcjQ1MjQ1MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4524535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dwhitena",
            "html_url": "https://github.com/dwhitena",
            "followers_url": "https://api.github.com/users/dwhitena/followers",
            "following_url": "https://api.github.com/users/dwhitena/following{/other_user}",
            "gists_url": "https://api.github.com/users/dwhitena/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dwhitena/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dwhitena/subscriptions",
            "organizations_url": "https://api.github.com/users/dwhitena/orgs",
            "repos_url": "https://api.github.com/users/dwhitena/repos",
            "events_url": "https://api.github.com/users/dwhitena/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dwhitena/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-22T23:42:49Z",
        "updated_at": "2023-04-25T04:47:11Z",
        "closed_at": "2023-04-25T04:47:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3370",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3370",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3370.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3370.patch",
            "merged_at": "2023-04-25T04:47:11Z"
        },
        "body": "Add LLM wrapper and examples for [Prediction Guard](https://beta.predictionguard.com/). The Prediction Guard docs can be found [here](https://docs.predictionguard.com/). If you aren't familiar with this project:\r\n\r\n> With Prediction Guard you:\r\n> - Create examples of the input and the output you expect\r\n> - Send those examples to Prediction Guard\r\n>\r\n> Prediction Guard then:\r\n> - Searches through a host of SOTA models to find the best match for your expected input/output behavior\r\n> - Configures an inference endpoint (aka a \"proxy\") for you to use the best model\r\n\r\nPrediction Guard also has default \"proxies\" for SOTA LLMs based on its [internal test sets](https://twitter.com/dwhitena/status/1643398483016052736).\r\n\r\nI've added the LLM wrapper, docs, example notebook, and an integration test. Thanks in advance!\r\n\r\n## Example\r\n\r\nBasic usage of the LLM wrapper:\r\n```python\r\nfrom langchain.llms import PredictionGuard\r\n\r\npgllm = PredictionGuard(name=\"default-text-gen\")\r\npgllm(\"Tell me a joke\")\r\n```\r\n\r\nBasic LLM Chaining with the Prediction Guard wrapper:\r\n```python\r\nfrom langchain import PromptTemplate, LLMChain\r\nfrom langchain.llms import PredictionGuard\r\n\r\ntemplate = \"\"\"Question: {question}\r\n\r\nAnswer: Let's think step by step.\"\"\"\r\nprompt = PromptTemplate(template=template, input_variables=[\"question\"])\r\nllm_chain = LLMChain(prompt=prompt, llm=PredictionGuard(name=\"default-text-gen\"), verbose=True)\r\n\r\nquestion = \"What NFL team won the Super Bowl in the year Justin Beiber was born?\"\r\n\r\nllm_chain.predict(question=question)\r\n```\r\n\r\n## Note\r\n\r\nI'm not sure how the project likes to manage API keys or access tokens for integration tests. I'm very happy to provide the LangChain team with a Prediction Guard access token for the integration test. Just let me know. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3370/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3370/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3369",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3369/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3369/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3369/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3369",
        "id": 1679778456,
        "node_id": "PR_kwDOIPDwls5O7WEz",
        "number": 3369,
        "title": "Weaviate client & Time weighted retriever fixes for generative agents",
        "user": {
            "login": "Ryangr0",
            "id": 3602480,
            "node_id": "MDQ6VXNlcjM2MDI0ODA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3602480?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ryangr0",
            "html_url": "https://github.com/Ryangr0",
            "followers_url": "https://api.github.com/users/Ryangr0/followers",
            "following_url": "https://api.github.com/users/Ryangr0/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ryangr0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ryangr0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ryangr0/subscriptions",
            "organizations_url": "https://api.github.com/users/Ryangr0/orgs",
            "repos_url": "https://api.github.com/users/Ryangr0/repos",
            "events_url": "https://api.github.com/users/Ryangr0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ryangr0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-22T23:34:31Z",
        "updated_at": "2023-04-26T22:48:54Z",
        "closed_at": "2023-04-26T22:48:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3369",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3369",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3369.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3369.patch",
            "merged_at": null
        },
        "body": "Fixes #3358",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3369/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3369/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3368",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3368/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3368/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3368/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3368",
        "id": 1679761571,
        "node_id": "PR_kwDOIPDwls5O7SiB",
        "number": 3368,
        "title": "Chroma: Catch and handle `NotEnoughElementsException`",
        "user": {
            "login": "preritdas",
            "id": 96673937,
            "node_id": "U_kgDOBcMgkQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/96673937?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/preritdas",
            "html_url": "https://github.com/preritdas",
            "followers_url": "https://api.github.com/users/preritdas/followers",
            "following_url": "https://api.github.com/users/preritdas/following{/other_user}",
            "gists_url": "https://api.github.com/users/preritdas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/preritdas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/preritdas/subscriptions",
            "organizations_url": "https://api.github.com/users/preritdas/orgs",
            "repos_url": "https://api.github.com/users/preritdas/repos",
            "events_url": "https://api.github.com/users/preritdas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/preritdas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-22T22:44:59Z",
        "updated_at": "2023-04-23T01:55:18Z",
        "closed_at": "2023-04-23T01:55:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3368",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3368",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3368.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3368.patch",
            "merged_at": "2023-04-23T01:55:18Z"
        },
        "body": "## Problem and Solution\r\n\r\nThis PR solves #1793, which is more of a convenience for users than anything else. When using Chroma as a vectorstore, if you try to run similarity search with a `k`  value that is larger than the number of documents stored in the vectorstore, Chroma will raise a `chromadb.errors.NotEnoughElementsException`. \r\n\r\nThe workaround is to add a new parameter in all similarity search methods under the `Chroma` class called `find_highest_possible_k`, an optional boolean parameter that defaults to True (changes default behavior). If this parameter is set to `False`, the methods will behave exactly as they did before this PR.\r\n\r\nIf the parameter is `True`, however, the method will try running similarity search with the given `k`, and if `chromadb.errors.NotEnoughElementsException` is raised, iteratively lower `k` (down to `k=1`) until the error is no longer raised. \r\n\r\nThe following is an example of how this is implemented in the `Chroma.similarity_search` method.\r\n\r\nhttps://github.com/preritdas/langchain/blob/e0846c2bcaafa4f54a193a6a7dfa8ed46480c326/langchain/vectorstores/chroma.py#L127-L159\r\n\r\nWe add the `find_highest_possible_k` parameter as `Optional` and defaulting to True. We explain it briefly in the docstring. We wrap the previous similarity search logic inside a private local function that takes `k`. If `find_highest_possible_k` is False, we return that private function, retaining previous behavior. If it is True, which it is by default, we iteratively lower `k` (until it is 1) until we can find `k` documents from the Chroma vectorstore.\r\n\r\n## Example\r\n\r\nYou create a `Chroma` object from 1 document. You then run `.similarity_search()`, `.similarity_search_by_vector()`, or `similarity_search_with_score()`. If you only pass a query, the default `k` is `4`. All methods would previously raise a `chromadb.errors.NotEnoughElementsException`. \r\n\r\nNow, however, all methods will return one document, the document inside the vectorstore (unless you're filtering, setting a maximum distance, etc.).\r\n\r\n## Note\r\n\r\nI didn't find any places in the documentation to mention this change, other than the example Jupyter notebook for the Chroma vectorstore. In that notebook, there was never a cell running similarity search with parameters. If it's important to include information on altering the `find_highest_possible_k` parameter, I'll happily document it wherever. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3368/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3368/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3367",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3367/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3367/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3367/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3367",
        "id": 1679757599,
        "node_id": "PR_kwDOIPDwls5O7Rwz",
        "number": 3367,
        "title": "[Fix #3365]: Changed regex to cover new line before action serious",
        "user": {
            "login": "My-",
            "id": 10456471,
            "node_id": "MDQ6VXNlcjEwNDU2NDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/10456471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/My-",
            "html_url": "https://github.com/My-",
            "followers_url": "https://api.github.com/users/My-/followers",
            "following_url": "https://api.github.com/users/My-/following{/other_user}",
            "gists_url": "https://api.github.com/users/My-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/My-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/My-/subscriptions",
            "organizations_url": "https://api.github.com/users/My-/orgs",
            "repos_url": "https://api.github.com/users/My-/repos",
            "events_url": "https://api.github.com/users/My-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/My-/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-22T22:29:08Z",
        "updated_at": "2023-05-01T14:16:51Z",
        "closed_at": "2023-04-25T05:05:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3367",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3367",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3367.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3367.patch",
            "merged_at": "2023-04-25T05:05:31Z"
        },
        "body": "Fix for: [Changed regex to cover new line before action serious.](https://github.com/hwchase17/langchain/issues/3365)\r\n---\r\n\r\nThis PR fixes the issue where `ValueError: Could not parse LLM output:` was thrown on seems to be valid input.\r\n\r\nChanged regex to cover new lines before action serious (after the keywords \"Action:\" and \"Action Input:\").\r\n\r\nregex101: https://regex101.com/r/CXl1kB/1",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3367/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3367/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3366",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3366/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3366/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3366/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3366",
        "id": 1679749300,
        "node_id": "PR_kwDOIPDwls5O7P-E",
        "number": 3366,
        "title": "Add example on deploying LangChain to `Cloud Run`",
        "user": {
            "login": "homanp",
            "id": 2464556,
            "node_id": "MDQ6VXNlcjI0NjQ1NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2464556?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/homanp",
            "html_url": "https://github.com/homanp",
            "followers_url": "https://api.github.com/users/homanp/followers",
            "following_url": "https://api.github.com/users/homanp/following{/other_user}",
            "gists_url": "https://api.github.com/users/homanp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/homanp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/homanp/subscriptions",
            "organizations_url": "https://api.github.com/users/homanp/orgs",
            "repos_url": "https://api.github.com/users/homanp/repos",
            "events_url": "https://api.github.com/users/homanp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/homanp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-22T22:11:40Z",
        "updated_at": "2023-04-23T03:09:00Z",
        "closed_at": "2023-04-23T03:09:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3366",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3366",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3366.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3366.patch",
            "merged_at": "2023-04-23T03:09:00Z"
        },
        "body": "## Summary\r\n\r\nAdds a link to a minimal example of running LangChain on Google Cloud Run. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3366/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3366/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3365",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3365/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3365/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3365/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3365",
        "id": 1679746063,
        "node_id": "I_kwDOIPDwls5kHuQP",
        "number": 3365,
        "title": "Terminal tool gives `ValueError: Could not parse LLM output:` when there is a new libe before action string.",
        "user": {
            "login": "My-",
            "id": 10456471,
            "node_id": "MDQ6VXNlcjEwNDU2NDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/10456471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/My-",
            "html_url": "https://github.com/My-",
            "followers_url": "https://api.github.com/users/My-/followers",
            "following_url": "https://api.github.com/users/My-/following{/other_user}",
            "gists_url": "https://api.github.com/users/My-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/My-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/My-/subscriptions",
            "organizations_url": "https://api.github.com/users/My-/orgs",
            "repos_url": "https://api.github.com/users/My-/repos",
            "events_url": "https://api.github.com/users/My-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/My-/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-22T22:04:26Z",
        "updated_at": "2023-04-25T05:05:33Z",
        "closed_at": "2023-04-25T05:05:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "While playing with the LLaMA models I noticed what parse exception was thrown even output looked good.\r\n\r\n### Screenshot\r\n![Screenshot_20230422_220902](https://user-images.githubusercontent.com/10456471/233808267-0f6f872a-f7b4-4154-b38c-ad2dcade7820.png)\r\n\r\nFor curious one the prompt I used was:\r\n```python\r\nagent({\"input\":\"\"\"\r\nThere is a file in `~/.bashrc.d/` directory containing openai api key.\r\nCan you find that key?\r\n\"\"\"})\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3365/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3365/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3364",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3364/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3364/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3364/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3364",
        "id": 1679728030,
        "node_id": "PR_kwDOIPDwls5O7LUj",
        "number": 3364,
        "title": "Add Databutton to list of Deployment options",
        "user": {
            "login": "tkarper",
            "id": 6649909,
            "node_id": "MDQ6VXNlcjY2NDk5MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6649909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tkarper",
            "html_url": "https://github.com/tkarper",
            "followers_url": "https://api.github.com/users/tkarper/followers",
            "following_url": "https://api.github.com/users/tkarper/following{/other_user}",
            "gists_url": "https://api.github.com/users/tkarper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tkarper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tkarper/subscriptions",
            "organizations_url": "https://api.github.com/users/tkarper/orgs",
            "repos_url": "https://api.github.com/users/tkarper/repos",
            "events_url": "https://api.github.com/users/tkarper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tkarper/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-22T21:33:45Z",
        "updated_at": "2023-04-25T04:45:39Z",
        "closed_at": "2023-04-25T04:45:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3364",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3364",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3364.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3364.patch",
            "merged_at": "2023-04-25T04:45:38Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3364/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3364/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3363",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3363/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3363/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3363/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3363",
        "id": 1679717982,
        "node_id": "PR_kwDOIPDwls5O7JQa",
        "number": 3363,
        "title": "add LoRA loading for the LlamaCpp LLM",
        "user": {
            "login": "horenbergerb",
            "id": 36315656,
            "node_id": "MDQ6VXNlcjM2MzE1NjU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/36315656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/horenbergerb",
            "html_url": "https://github.com/horenbergerb",
            "followers_url": "https://api.github.com/users/horenbergerb/followers",
            "following_url": "https://api.github.com/users/horenbergerb/following{/other_user}",
            "gists_url": "https://api.github.com/users/horenbergerb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/horenbergerb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/horenbergerb/subscriptions",
            "organizations_url": "https://api.github.com/users/horenbergerb/orgs",
            "repos_url": "https://api.github.com/users/horenbergerb/repos",
            "events_url": "https://api.github.com/users/horenbergerb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/horenbergerb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-22T21:03:25Z",
        "updated_at": "2023-04-25T01:48:28Z",
        "closed_at": "2023-04-25T01:31:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3363",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3363",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3363.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3363.patch",
            "merged_at": "2023-04-25T01:31:14Z"
        },
        "body": "First PR, let me know if this needs anything like unit tests, reformatting, etc. Seemed pretty straightforward to implement. Only hitch was that mmap needs to be disabled when loading LoRAs or else you segfault.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3363/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3363/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3362",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3362/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3362/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3362/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3362",
        "id": 1679710357,
        "node_id": "PR_kwDOIPDwls5O7HsL",
        "number": 3362,
        "title": "Updated incorrect link to Weaviate notebook",
        "user": {
            "login": "hadicurtay",
            "id": 12596126,
            "node_id": "MDQ6VXNlcjEyNTk2MTI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/12596126?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hadicurtay",
            "html_url": "https://github.com/hadicurtay",
            "followers_url": "https://api.github.com/users/hadicurtay/followers",
            "following_url": "https://api.github.com/users/hadicurtay/following{/other_user}",
            "gists_url": "https://api.github.com/users/hadicurtay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hadicurtay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hadicurtay/subscriptions",
            "organizations_url": "https://api.github.com/users/hadicurtay/orgs",
            "repos_url": "https://api.github.com/users/hadicurtay/repos",
            "events_url": "https://api.github.com/users/hadicurtay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hadicurtay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-22T20:41:54Z",
        "updated_at": "2023-04-23T03:47:41Z",
        "closed_at": "2023-04-23T03:47:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3362",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3362",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3362.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3362.patch",
            "merged_at": "2023-04-23T03:47:41Z"
        },
        "body": "The detailed walkthrough of the Weaviate wrapper was pointing to the getting-started notebook. Fixed it to point to the Weaviable notebook in the examples folder.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3362/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3362/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3361",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3361/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3361/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3361/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3361",
        "id": 1679702338,
        "node_id": "PR_kwDOIPDwls5O7F6B",
        "number": 3361,
        "title": "Adds vocode callback handler",
        "user": {
            "login": "ajar98",
            "id": 6234599,
            "node_id": "MDQ6VXNlcjYyMzQ1OTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6234599?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajar98",
            "html_url": "https://github.com/ajar98",
            "followers_url": "https://api.github.com/users/ajar98/followers",
            "following_url": "https://api.github.com/users/ajar98/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajar98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajar98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajar98/subscriptions",
            "organizations_url": "https://api.github.com/users/ajar98/orgs",
            "repos_url": "https://api.github.com/users/ajar98/repos",
            "events_url": "https://api.github.com/users/ajar98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajar98/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-22T20:28:23Z",
        "updated_at": "2023-11-08T23:06:40Z",
        "closed_at": "2023-11-08T23:06:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3361",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3361",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3361.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3361.patch",
            "merged_at": null
        },
        "body": "[Vocode](https://github.com/vocodedev/vocode-python) provides a unified interface to many different TTS providers - this PR allows Langchain interactions to speak via a CallbackHandler.\r\n\r\nAdds `VocodeCallbackHandler` with two helper methods: `speak` and `speak_in_thread`:\r\n\r\nParams:\r\n- `synthesizer: BaseSynthesizer`, which is the vocode abstraction of the TTS provider that will push audio to the output device - supports Azure, ElevenLabs, Play.ht, Rime, Google, gTTS\r\n- `output_device: Optional[BaseOutputDevice]`, a vocode abstraction that knows how to play audio - when not passed in, uses the default speaker on the user's computer\r\n\r\nUsers can subclass `VocodeCallbackHandler` and set up how they'd like to hear the progress of the LLM / chain / agent:\r\n\r\n```python\r\nfrom langchain.callbacks.vocode_callback import VocodeCallbackHandler\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.schema import HumanMessage\r\nfrom typing import Any, Dict, List, Optional, Union\r\nfrom uuid import UUID\r\nfrom vocode.turn_based.synthesizer.gtts_synthesizer import GTTSSynthesizer\r\n\r\nclass MySpeakingCallbackHandler(VocodeCallbackHandler):\r\n    def on_llm_start(self, *args, **kwargs: Any) -> Any:\r\n        self.speak_in_thread(\"Starting LLM\")\r\n\r\n# To enable streaming, we pass in `streaming=True` to the ChatModel constructor\r\n# Additionally, we pass in a list with our custom handler\r\nchat = ChatOpenAI(max_tokens=25, streaming=True, callbacks=[MySpeakingCallbackHandler(GTTSSynthesizer())])\r\n\r\nchat([HumanMessage(content=\"Tell me a joke\")])\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3361/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3361/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3360",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3360/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3360/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3360/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3360",
        "id": 1679697035,
        "node_id": "PR_kwDOIPDwls5O7Esr",
        "number": 3360,
        "title": "save standalone question and implement semantic cache",
        "user": {
            "login": "anshumantanwar",
            "id": 565819,
            "node_id": "MDQ6VXNlcjU2NTgxOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/565819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anshumantanwar",
            "html_url": "https://github.com/anshumantanwar",
            "followers_url": "https://api.github.com/users/anshumantanwar/followers",
            "following_url": "https://api.github.com/users/anshumantanwar/following{/other_user}",
            "gists_url": "https://api.github.com/users/anshumantanwar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anshumantanwar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anshumantanwar/subscriptions",
            "organizations_url": "https://api.github.com/users/anshumantanwar/orgs",
            "repos_url": "https://api.github.com/users/anshumantanwar/repos",
            "events_url": "https://api.github.com/users/anshumantanwar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anshumantanwar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-22T20:21:47Z",
        "updated_at": "2023-11-07T19:53:01Z",
        "closed_at": "2023-11-07T19:53:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3360",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3360",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3360.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3360.patch",
            "merged_at": null
        },
        "body": "now we can access individual \"standalone question\" from BaseConversationalRetrievalChain object.\r\n\r\nSemantic Cache : Now before calling openai, we will check standalone question in vector db (cache_namespace = \"cache-\" + namespace) if similar question has already been asked.\r\n\r\nuse_cache flag can be used by user. If set True, cache for semantic search would be used\r\n\r\nUser can select similarity threshold  value (cache_similarity_threshold) and its default value is 0.85",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3360/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3360/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3358",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3358/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3358/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3358/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3358",
        "id": 1679662654,
        "node_id": "I_kwDOIPDwls5kHZ4-",
        "number": 3358,
        "title": "Weaviate python library doesn't have needed methods for the abstractions",
        "user": {
            "login": "Ryangr0",
            "id": 3602480,
            "node_id": "MDQ6VXNlcjM2MDI0ODA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3602480?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ryangr0",
            "html_url": "https://github.com/Ryangr0",
            "followers_url": "https://api.github.com/users/Ryangr0/followers",
            "following_url": "https://api.github.com/users/Ryangr0/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ryangr0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ryangr0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ryangr0/subscriptions",
            "organizations_url": "https://api.github.com/users/Ryangr0/orgs",
            "repos_url": "https://api.github.com/users/Ryangr0/repos",
            "events_url": "https://api.github.com/users/Ryangr0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ryangr0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-22T19:06:52Z",
        "updated_at": "2023-09-10T16:28:59Z",
        "closed_at": "2023-09-10T16:28:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Using\r\n```\r\nlangchain~=0.0.146\r\nopenai~=0.27.4\r\nhaystack~=0.42\r\ntiktoken~=0.3.3\r\nweaviate-client~=3.15.6\r\naiohttp~=3.8.4\r\naiodns~=3.0.0\r\npython-dotenv~=1.0.0\r\nJinja2~=3.1.2\r\npandas~=2.0.0\r\n```\r\n\r\n```\r\ndef create_new_memory_retriever():\r\n    \"\"\"Create a new vector store retriever unique to the agent.\"\"\"\r\n\r\n    client = weaviate.Client(\r\n        url=WEAVIATE_HOST,\r\n        additional_headers={\"X-OpenAI-Api-Key\": os.getenv(\"OPENAI_API_KEY\")},\r\n        # auth_client_secret: Optional[AuthCredentials] = None,\r\n        # timeout_config: Union[Tuple[Real, Real], Real] = (10, 60),\r\n        # proxies: Union[dict, str, None] = None,\r\n        # trust_env: bool = False,\r\n        # additional_headers: Optional[dict] = None,\r\n        # startup_period: Optional[int] = 5,\r\n        # embedded_options=[],\r\n    )\r\n    embeddings_model = OpenAIEmbeddings()\r\n\r\n    vectorstore = Weaviate(client, \"Paragraph\", \"content\", embedding=embeddings_model.embed_query)\r\n    \r\n    return TimeWeightedVectorStoreRetriever(vectorstore=vectorstore, other_score_keys=[\"importance\"], k=15)  \r\n```\r\nTime weighted retriever\r\n```\r\n...\r\n    def get_salient_docs(self, query: str) -> Dict[int, Tuple[Document, float]]:\r\n        \"\"\"Return documents that are salient to the query.\"\"\"\r\n        docs_and_scores: List[Tuple[Document, float]]\r\n        docs_and_scores = self.vectorstore.similarity_search_with_relevance_scores( <----------======\r\n            query, **self.search_kwargs\r\n        )\r\n        results = {}\r\n        for fetched_doc, relevance in docs_and_scores:\r\n            buffer_idx = fetched_doc.metadata[\"buffer_idx\"]\r\n            doc = self.memory_stream[buffer_idx]\r\n            results[buffer_idx] = (doc, relevance)\r\n        return results\r\n...\r\n```\r\n\r\n`similarity_search_with_relevance_scores` is not in the weaviate python client.\r\n\r\nWhose responsibility is this? Langchains? Weaviates? I'm perfectly fine to solve it but I just need to know on whose door to knock.\r\n\r\nAll of langchains vectorstores have different methods under them and people are writing implementation for all of them. I don't know how maintainable this is gonna be.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3358/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3358/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3357",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3357/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3357/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3357/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3357",
        "id": 1679651732,
        "node_id": "I_kwDOIPDwls5kHXOU",
        "number": 3357,
        "title": "Wolfram Alpha wasn't able to answer it for valid inputs",
        "user": {
            "login": "gigagiova",
            "id": 34619893,
            "node_id": "MDQ6VXNlcjM0NjE5ODkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/34619893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gigagiova",
            "html_url": "https://github.com/gigagiova",
            "followers_url": "https://api.github.com/users/gigagiova/followers",
            "following_url": "https://api.github.com/users/gigagiova/following{/other_user}",
            "gists_url": "https://api.github.com/users/gigagiova/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gigagiova/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gigagiova/subscriptions",
            "organizations_url": "https://api.github.com/users/gigagiova/orgs",
            "repos_url": "https://api.github.com/users/gigagiova/repos",
            "events_url": "https://api.github.com/users/gigagiova/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gigagiova/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-04-22T18:40:03Z",
        "updated_at": "2023-12-09T16:01:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, I am building my agent, and I would like to make this query to wolfram alpha \"Action Input: \u221a68,084,217 + \u221a62,390,364\", but I always get \"Wolfram Alpha wasn't able to answer it\".\r\n\r\nWhy is that? When I use the Wolfram app, it can easily solve it.\r\nThanks in advance, \r\nGiovanni",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3357/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3357/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3356",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3356/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3356/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3356/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3356",
        "id": 1679642281,
        "node_id": "PR_kwDOIPDwls5O65j3",
        "number": 3356,
        "title": "Support GCS Objects with `/` in GCS Loaders",
        "user": {
            "login": "vieiralucas",
            "id": 7764293,
            "node_id": "MDQ6VXNlcjc3NjQyOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7764293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vieiralucas",
            "html_url": "https://github.com/vieiralucas",
            "followers_url": "https://api.github.com/users/vieiralucas/followers",
            "following_url": "https://api.github.com/users/vieiralucas/following{/other_user}",
            "gists_url": "https://api.github.com/users/vieiralucas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vieiralucas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vieiralucas/subscriptions",
            "organizations_url": "https://api.github.com/users/vieiralucas/orgs",
            "repos_url": "https://api.github.com/users/vieiralucas/repos",
            "events_url": "https://api.github.com/users/vieiralucas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vieiralucas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-22T18:10:19Z",
        "updated_at": "2023-04-25T13:34:13Z",
        "closed_at": "2023-04-25T05:05:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3356",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3356",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3356.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3356.patch",
            "merged_at": "2023-04-25T05:05:45Z"
        },
        "body": "So, this is basically fixing the same things as #1517 but for GCS.\r\n\r\n### Problem\r\nWhen loading GCS Objects with `/` in the object key (eg. folder/some-document.txt) using `GCSFileLoader`, the objects are downloaded into a temporary directory and saved as a file.\r\n\r\nThis errors out when the parent directory does not exist within the temporary directory.\r\n\r\n### What this pr does\r\nCreates parent directories based on object key.\r\n\r\nThis also works with deeply nested keys: folder/subfolder/some-document.txt",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3356/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3356/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3355",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3355/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3355/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3355/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3355",
        "id": 1679637046,
        "node_id": "PR_kwDOIPDwls5O64gE",
        "number": 3355,
        "title": "Update documents in chromaDB VectorStore",
        "user": {
            "login": "vyeevani",
            "id": 30946190,
            "node_id": "MDQ6VXNlcjMwOTQ2MTkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30946190?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vyeevani",
            "html_url": "https://github.com/vyeevani",
            "followers_url": "https://api.github.com/users/vyeevani/followers",
            "following_url": "https://api.github.com/users/vyeevani/following{/other_user}",
            "gists_url": "https://api.github.com/users/vyeevani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vyeevani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vyeevani/subscriptions",
            "organizations_url": "https://api.github.com/users/vyeevani/orgs",
            "repos_url": "https://api.github.com/users/vyeevani/repos",
            "events_url": "https://api.github.com/users/vyeevani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vyeevani/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-22T17:55:05Z",
        "updated_at": "2023-04-25T04:43:56Z",
        "closed_at": "2023-04-25T04:43:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3355",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3355",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3355.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3355.patch",
            "merged_at": "2023-04-25T04:43:56Z"
        },
        "body": "This is for use cases that have changing data. For example, casual language modeling for code autocomplete (GitHub CoPilot).\r\n\r\nSuppose you make a change in the code that would have impact to something else. You want the vectorstore that would pull this document to reflect that change. For example, you implement some interface on an object in another file. You then go to work on another file while using information of that interfaces implementation.\r\n\r\nHowever, when the chain goes to query the vector-store for similar documents to provide as context, it fails because it's unable to realize that the implementation in the other file is required for this files code.\r\n\r\nTo address this, the application would have to inform langchain when the user changes the codebase that the code has changed. This involves updating the vector-store to reflect this.\r\n\r\nThis implementation covers this for chromaDB.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3355/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3355/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3354",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3354/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3354/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3354/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3354",
        "id": 1679611775,
        "node_id": "I_kwDOIPDwls5kHNd_",
        "number": 3354,
        "title": "Add update method on vectorstores",
        "user": {
            "login": "vyeevani",
            "id": 30946190,
            "node_id": "MDQ6VXNlcjMwOTQ2MTkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30946190?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vyeevani",
            "html_url": "https://github.com/vyeevani",
            "followers_url": "https://api.github.com/users/vyeevani/followers",
            "following_url": "https://api.github.com/users/vyeevani/following{/other_user}",
            "gists_url": "https://api.github.com/users/vyeevani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vyeevani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vyeevani/subscriptions",
            "organizations_url": "https://api.github.com/users/vyeevani/orgs",
            "repos_url": "https://api.github.com/users/vyeevani/repos",
            "events_url": "https://api.github.com/users/vyeevani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vyeevani/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-22T16:39:25Z",
        "updated_at": "2023-09-27T16:07:41Z",
        "closed_at": "2023-09-27T16:07:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "I am building a chain to analyze codebases. This involves documents that's constantly changing as the user modifies the files. As far as I can see, there doesn't seem to be a way to update the embeddings that are saved in vector stores once they have been embedded and submitted to the backing vectorstore.\r\n\r\nThis appears to be possible at least for chromaDB based on: (https://docs.trychroma.com/api-reference) and (https://github.com/chroma-core/chroma/blob/79c891f8f597dad8bd3eb5a42645cb99ec553440/chromadb/api/models/Collection.py#L258). ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3354/reactions",
            "total_count": 6,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 5
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3354/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3353",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3353/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3353/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3353/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3353",
        "id": 1679604280,
        "node_id": "PR_kwDOIPDwls5O6x-9",
        "number": 3353,
        "title": "bump version to 147",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-22T16:19:38Z",
        "updated_at": "2023-04-22T16:35:04Z",
        "closed_at": "2023-04-22T16:35:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3353",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3353",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3353.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3353.patch",
            "merged_at": "2023-04-22T16:35:03Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3353/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3353/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3352",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3352/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3352/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3352/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3352",
        "id": 1679601062,
        "node_id": "PR_kwDOIPDwls5O6xV_",
        "number": 3352,
        "title": "Harrison/myscale",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-22T16:10:07Z",
        "updated_at": "2023-04-22T16:17:40Z",
        "closed_at": "2023-04-22T16:17:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3352",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3352",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3352.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3352.patch",
            "merged_at": "2023-04-22T16:17:39Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3352/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3352/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3351",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3351/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3351/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3351/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3351",
        "id": 1679593509,
        "node_id": "I_kwDOIPDwls5kHJAl",
        "number": 3351,
        "title": "Get ValueError: not enough values to unpack (expected 2, got 1)",
        "user": {
            "login": "judgementc",
            "id": 28616278,
            "node_id": "MDQ6VXNlcjI4NjE2Mjc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/28616278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/judgementc",
            "html_url": "https://github.com/judgementc",
            "followers_url": "https://api.github.com/users/judgementc/followers",
            "following_url": "https://api.github.com/users/judgementc/following{/other_user}",
            "gists_url": "https://api.github.com/users/judgementc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/judgementc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/judgementc/subscriptions",
            "organizations_url": "https://api.github.com/users/judgementc/orgs",
            "repos_url": "https://api.github.com/users/judgementc/repos",
            "events_url": "https://api.github.com/users/judgementc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/judgementc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-04-22T15:48:29Z",
        "updated_at": "2023-11-10T16:10:12Z",
        "closed_at": "2023-11-10T16:10:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Whit the function VectorstoreIndexCreator, I got the error at\r\n--> 115     return {\r\n    116         base64.b64decode(token): int(rank)\r\n    117         for token, rank in (line.split() for line in contents.splitlines() if line)\r\n    118     }\r\nThe whole error information was:\r\nValueError                                Traceback (most recent call last)\r\nCell In[25], line 2\r\n      1 from langchain.indexes import VectorstoreIndexCreator\r\n----> 2 index = VectorstoreIndexCreator().from_loaders([loader])\r\n\r\nFile J:\\conda202002\\envs\\chatglm\\lib\\site-packages\\langchain\\indexes\\vectorstore.py:71, in VectorstoreIndexCreator.from_loaders(self, loaders)\r\n     69     docs.extend(loader.load())\r\n     70 sub_docs = self.text_splitter.split_documents(docs)\r\n---> 71 vectorstore = self.vectorstore_cls.from_documents(\r\n     72     sub_docs, self.embedding, **self.vectorstore_kwargs\r\n     73 )\r\n     74 return VectorStoreIndexWrapper(vectorstore=vectorstore)\r\n\r\nFile J:\\conda202002\\envs\\chatglm\\lib\\site-packages\\langchain\\vectorstores\\chroma.py:347, in Chroma.from_documents(cls, documents, embedding, ids, collection_name, persist_directory, client_settings, client, **kwargs)\r\n    345 texts = [doc.page_content for doc in documents]\r\n    346 metadatas = [doc.metadata for doc in documents]\r\n--> 347 return cls.from_texts(\r\n    348     texts=texts,\r\n    349     embedding=embedding,\r\n    350     metadatas=metadatas,\r\n    351     ids=ids,\r\n    352     collection_name=collection_name,\r\n    353     persist_directory=persist_directory,\r\n    354     client_settings=client_settings,\r\n    355     client=client,\r\n    356 )\r\n\r\nFile J:\\conda202002\\envs\\chatglm\\lib\\site-packages\\langchain\\vectorstores\\chroma.py:315, in Chroma.from_texts(cls, texts, embedding, metadatas, ids, collection_name, persist_directory, client_settings, client, **kwargs)\r\n    291 \"\"\"Create a Chroma vectorstore from a raw documents.\r\n    292 \r\n    293 If a persist_directory is specified, the collection will be persisted there.\r\n   (...)\r\n    306     Chroma: Chroma vectorstore.\r\n    307 \"\"\"\r\n    308 chroma_collection = cls(\r\n    309     collection_name=collection_name,\r\n    310     embedding_function=embedding,\r\n   (...)\r\n    313     client=client,\r\n    314 )\r\n--> 315 chroma_collection.add_texts(texts=texts, metadatas=metadatas, ids=ids)\r\n    316 return chroma_collection\r\n\r\nFile J:\\conda202002\\envs\\chatglm\\lib\\site-packages\\langchain\\vectorstores\\chroma.py:121, in Chroma.add_texts(self, texts, metadatas, ids, **kwargs)\r\n    119 embeddings = None\r\n    120 if self._embedding_function is not None:\r\n--> 121     embeddings = self._embedding_function.embed_documents(list(texts))\r\n    122 self._collection.add(\r\n    123     metadatas=metadatas, embeddings=embeddings, documents=texts, ids=ids\r\n    124 )\r\n    125 return ids\r\n\r\nFile J:\\conda202002\\envs\\chatglm\\lib\\site-packages\\langchain\\embeddings\\openai.py:228, in OpenAIEmbeddings.embed_documents(self, texts, chunk_size)\r\n    226 # handle batches of large input text\r\n    227 if self.embedding_ctx_length > 0:\r\n--> 228     return self._get_len_safe_embeddings(texts, engine=self.deployment)\r\n    229 else:\r\n    230     results = []\r\n\r\nFile J:\\conda202002\\envs\\chatglm\\lib\\site-packages\\langchain\\embeddings\\openai.py:159, in OpenAIEmbeddings._get_len_safe_embeddings(self, texts, engine, chunk_size)\r\n    157 tokens = []\r\n    158 indices = []\r\n--> 159 encoding = tiktoken.model.encoding_for_model(self.model)\r\n    160 for i, text in enumerate(texts):\r\n    161     # replace newlines, which can negatively affect performance.\r\n    162     text = text.replace(\"\\n\", \" \")\r\n\r\nFile J:\\conda202002\\envs\\chatglm\\lib\\site-packages\\tiktoken\\model.py:75, in encoding_for_model(model_name)\r\n     69 if encoding_name is None:\r\n     70     raise KeyError(\r\n     71         f\"Could not automatically map {model_name} to a tokeniser. \"\r\n     72         \"Please use `tiktok.get_encoding` to explicitly get the tokeniser you expect.\"\r\n     73     ) from None\r\n---> 75 return get_encoding(encoding_name)\r\n\r\nFile J:\\conda202002\\envs\\chatglm\\lib\\site-packages\\tiktoken\\registry.py:63, in get_encoding(encoding_name)\r\n     60     raise ValueError(f\"Unknown encoding {encoding_name}\")\r\n     62 constructor = ENCODING_CONSTRUCTORS[encoding_name]\r\n---> 63 enc = Encoding(**constructor())\r\n     64 ENCODINGS[encoding_name] = enc\r\n     65 return enc\r\n\r\nFile J:\\conda202002\\envs\\chatglm\\lib\\site-packages\\tiktoken_ext\\openai_public.py:64, in cl100k_base()\r\n     63 def cl100k_base():\r\n---> 64     mergeable_ranks = load_tiktoken_bpe(\r\n     65         \"https://openaipublic.blob.core.windows.net/encodings/cl100k_base.tiktoken\"\r\n     66     )\r\n     67     special_tokens = {\r\n     68         ENDOFTEXT: 100257,\r\n     69         FIM_PREFIX: 100258,\r\n   (...)\r\n     72         ENDOFPROMPT: 100276,\r\n     73     }\r\n     74     return {\r\n     75         \"name\": \"cl100k_base\",\r\n     76         \"pat_str\": r\"\"\"(?i:'s|'t|'re|'ve|'m|'ll|'d)|[^\\r\\n\\p{L}\\p{N}]?\\p{L}+|\\p{N}{1,3}| ?[^\\s\\p{L}\\p{N}]+[\\r\\n]*|\\s*[\\r\\n]+|\\s+(?!\\S)|\\s+\"\"\",\r\n     77         \"mergeable_ranks\": mergeable_ranks,\r\n     78         \"special_tokens\": special_tokens,\r\n     79     }\r\n\r\nFile J:\\conda202002\\envs\\chatglm\\lib\\site-packages\\tiktoken\\load.py:115, in load_tiktoken_bpe(tiktoken_bpe_file)\r\n    112 def load_tiktoken_bpe(tiktoken_bpe_file: str) -> dict[bytes, int]:\r\n    113     # NB: do not add caching to this function\r\n    114     contents = read_file_cached(tiktoken_bpe_file)\r\n--> 115     return {\r\n    116         base64.b64decode(token): int(rank)\r\n    117         for token, rank in (line.split() for line in contents.splitlines() if line)\r\n    118     }\r\n\r\nFile J:\\conda202002\\envs\\chatglm\\lib\\site-packages\\tiktoken\\load.py:115, in <dictcomp>(.0)\r\n    112 def load_tiktoken_bpe(tiktoken_bpe_file: str) -> dict[bytes, int]:\r\n    113     # NB: do not add caching to this function\r\n    114     contents = read_file_cached(tiktoken_bpe_file)\r\n--> 115     return {\r\n    116         base64.b64decode(token): int(rank)\r\n    117         for token, rank in (line.split() for line in contents.splitlines() if line)\r\n    118     }\r\n\r\nValueError: not enough values to unpack (expected 2, got 1)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3351/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3351/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3350",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3350/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3350/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3350/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3350",
        "id": 1679593230,
        "node_id": "PR_kwDOIPDwls5O6vzp",
        "number": 3350,
        "title": "Harrison/matching engine vectorstore",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "dev2049",
                "id": 130488702,
                "node_id": "U_kgDOB8cZfg",
                "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dev2049",
                "html_url": "https://github.com/dev2049",
                "followers_url": "https://api.github.com/users/dev2049/followers",
                "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
                "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
                "organizations_url": "https://api.github.com/users/dev2049/orgs",
                "repos_url": "https://api.github.com/users/dev2049/repos",
                "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dev2049/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-22T15:47:39Z",
        "updated_at": "2023-05-31T09:28:04Z",
        "closed_at": "2023-05-31T09:28:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3350",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3350",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3350.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3350.patch",
            "merged_at": "2023-05-31T09:28:02Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3350/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3350/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3349",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3349/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3349/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3349/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3349",
        "id": 1679587591,
        "node_id": "PR_kwDOIPDwls5O6usj",
        "number": 3349,
        "title": "Adds progress bar using tqdm to directory_loader",
        "user": {
            "login": "jrhe",
            "id": 4038905,
            "node_id": "MDQ6VXNlcjQwMzg5MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4038905?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrhe",
            "html_url": "https://github.com/jrhe",
            "followers_url": "https://api.github.com/users/jrhe/followers",
            "following_url": "https://api.github.com/users/jrhe/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrhe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrhe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrhe/subscriptions",
            "organizations_url": "https://api.github.com/users/jrhe/orgs",
            "repos_url": "https://api.github.com/users/jrhe/repos",
            "events_url": "https://api.github.com/users/jrhe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrhe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-22T15:31:22Z",
        "updated_at": "2023-04-25T04:42:43Z",
        "closed_at": "2023-04-25T04:42:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3349",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3349",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3349.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3349.patch",
            "merged_at": "2023-04-25T04:42:43Z"
        },
        "body": "Approach copied from `WebBaseLoader`. Assumes the user doesn't have `tqdm` installed.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3349/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3349/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3348",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3348/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3348/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3348/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3348",
        "id": 1679585302,
        "node_id": "PR_kwDOIPDwls5O6uRO",
        "number": 3348,
        "title": "Harrison/error hf",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-22T15:24:15Z",
        "updated_at": "2023-04-22T16:06:37Z",
        "closed_at": "2023-04-22T16:06:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3348",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3348",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3348.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3348.patch",
            "merged_at": "2023-04-22T16:06:36Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3348/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3348/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3347",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3347/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3347/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3347/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3347",
        "id": 1679583587,
        "node_id": "PR_kwDOIPDwls5O6t8s",
        "number": 3347,
        "title": "Harrison/voice assistant",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-22T15:19:46Z",
        "updated_at": "2023-04-22T15:25:51Z",
        "closed_at": "2023-04-22T15:25:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3347",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3347",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3347.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3347.patch",
            "merged_at": "2023-04-22T15:25:50Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3347/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3347/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3345",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3345/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3345/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3345/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3345",
        "id": 1679565809,
        "node_id": "PR_kwDOIPDwls5O6qj2",
        "number": 3345,
        "title": "Fix pruning logic in ConversationSummaryBufferMemory for persistent m\u2026",
        "user": {
            "login": "joybro",
            "id": 619328,
            "node_id": "MDQ6VXNlcjYxOTMyOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/619328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joybro",
            "html_url": "https://github.com/joybro",
            "followers_url": "https://api.github.com/users/joybro/followers",
            "following_url": "https://api.github.com/users/joybro/following{/other_user}",
            "gists_url": "https://api.github.com/users/joybro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joybro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joybro/subscriptions",
            "organizations_url": "https://api.github.com/users/joybro/orgs",
            "repos_url": "https://api.github.com/users/joybro/repos",
            "events_url": "https://api.github.com/users/joybro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joybro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-04-22T14:29:57Z",
        "updated_at": "2023-11-07T04:44:52Z",
        "closed_at": "2023-11-07T04:44:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3345",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3345",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3345.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3345.patch",
            "merged_at": null
        },
        "body": "\u2026essage histories\r\n\r\nThis commit addresses the issue where the pruning logic in ConversationSummaryBufferMemory did not work as expected with persistent message histories like FileChatMessageHistory.\r\n\r\nChanges made:\r\n1. Added set_messages() to BaseChatMessageHistory to store updated history after pruning instead of relying on List.pop(), which does not work for persistent memory histories.\r\n\r\nNow, the ConversationSummaryBufferMemory pruning mechanism correctly handles persistent message histories and ensures that the message history stays within the max_token_limit.\r\n\r\nFixes #3072",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3345/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3345/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3344",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3344/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3344/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3344/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3344",
        "id": 1679440551,
        "node_id": "I_kwDOIPDwls5kGjqn",
        "number": 3344,
        "title": "Question about data formatting for vector databases.",
        "user": {
            "login": "VladoPortos",
            "id": 11806871,
            "node_id": "MDQ6VXNlcjExODA2ODcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/11806871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/VladoPortos",
            "html_url": "https://github.com/VladoPortos",
            "followers_url": "https://api.github.com/users/VladoPortos/followers",
            "following_url": "https://api.github.com/users/VladoPortos/following{/other_user}",
            "gists_url": "https://api.github.com/users/VladoPortos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/VladoPortos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/VladoPortos/subscriptions",
            "organizations_url": "https://api.github.com/users/VladoPortos/orgs",
            "repos_url": "https://api.github.com/users/VladoPortos/repos",
            "events_url": "https://api.github.com/users/VladoPortos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/VladoPortos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-22T09:27:10Z",
        "updated_at": "2023-09-10T16:29:03Z",
        "closed_at": "2023-09-10T16:29:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello all,\r\n\r\nI struggle to find some clear information about what's the best structure / formatting of texts for vector databases... \r\n\r\n- is it better to have many small files with text or one big file full of texts\r\n- Let's say I deal with accurate information in format of question: <question> and answer: <answer> is there something I can do to the text to help the vector DB find a relevant answer to the question ?\r\n- Is there a difference between Vector databases in terms of accuracy ? Like Chrome VS Pinecone for example....",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3344/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3344/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3343",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3343/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3343/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3343/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3343",
        "id": 1679404151,
        "node_id": "I_kwDOIPDwls5kGax3",
        "number": 3343,
        "title": "set the temperature value to 0, but the response results are different for each run",
        "user": {
            "login": "yaohongfenglove",
            "id": 71106576,
            "node_id": "MDQ6VXNlcjcxMTA2NTc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/71106576?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yaohongfenglove",
            "html_url": "https://github.com/yaohongfenglove",
            "followers_url": "https://api.github.com/users/yaohongfenglove/followers",
            "following_url": "https://api.github.com/users/yaohongfenglove/following{/other_user}",
            "gists_url": "https://api.github.com/users/yaohongfenglove/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yaohongfenglove/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yaohongfenglove/subscriptions",
            "organizations_url": "https://api.github.com/users/yaohongfenglove/orgs",
            "repos_url": "https://api.github.com/users/yaohongfenglove/repos",
            "events_url": "https://api.github.com/users/yaohongfenglove/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yaohongfenglove/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-04-22T07:59:47Z",
        "updated_at": "2023-11-16T16:05:07Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, I set the temperature value to 0, but the response results are different for each run. If I use the native openai SDK, the result of each response is the same.\r\n\r\n```\r\nimport os\r\n\r\nfrom langchain import OpenAI\r\n\r\n\r\ndef main():\r\n    os.environ[\"OPENAI_API_KEY\"] = config.get('open_ai_api_key')\r\n\r\n    llm = OpenAI(temperature=0)\r\n\r\n    answer = llm(\"\u7ed9\u5c0f\u9ed1\u72d7\u53d6\u4e2a\u540d\u5b57\").strip()\r\n\r\n    print(f\"{answer}\")\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\noutput:\r\n\r\n![image](https://user-images.githubusercontent.com/71106576/233771082-635c4900-1d40-4bd0-8ba8-10dfcf8d3044.png)\r\n\r\n![image](https://user-images.githubusercontent.com/71106576/233771117-7da8c017-1643-4090-8010-809c1f108718.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3343/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3343/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]