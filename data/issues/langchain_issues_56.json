[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8664",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8664/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8664/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8664/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8664",
        "id": 1834261445,
        "node_id": "I_kwDOIPDwls5tVJvF",
        "number": 8664,
        "title": "ClickHouse VectorStore score_threshold not working.",
        "user": {
            "login": "wellCh4n",
            "id": 13273026,
            "node_id": "MDQ6VXNlcjEzMjczMDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13273026?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wellCh4n",
            "html_url": "https://github.com/wellCh4n",
            "followers_url": "https://api.github.com/users/wellCh4n/followers",
            "following_url": "https://api.github.com/users/wellCh4n/following{/other_user}",
            "gists_url": "https://api.github.com/users/wellCh4n/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wellCh4n/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wellCh4n/subscriptions",
            "organizations_url": "https://api.github.com/users/wellCh4n/orgs",
            "repos_url": "https://api.github.com/users/wellCh4n/repos",
            "events_url": "https://api.github.com/users/wellCh4n/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wellCh4n/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-03T04:44:00Z",
        "updated_at": "2023-11-03T02:35:28Z",
        "closed_at": "2023-11-03T02:35:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n* python3.9\r\n* langchain 0.0242\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [x] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```python\r\nm3e: HuggingFaceEmbeddings = SentenceTransformerEmbeddings(model_name='moka-ai/m3e-base')\r\n\r\nvectorStore: VectorStore = Clickhouse(embedding=m3e, config=settings)\r\nretriever = vectorStore.as_retriever(search_type='similarity_score_threshold', search_kwargs={'score_threshold': 20.0})\r\ndocuments = retriever.get_relevant_documents('\u97f3\u4e50')\r\n```\r\n\r\nretriever invoke `_get_relevant_documents in vectorstores/base.py`, and `docs_and_similarities` has doc and score.\r\n\r\nI found `score_threshold` is not used in `similarity_search_with_relevance_scores`.\r\n\r\nSuch as pgvector, it is implement `similarity_search_with_score`, so retriever invoke \r\n chain is `similarity_search_with_relevance_scores(base.py)` -> `_similarity_search_with_relevance_scores(base.py)` -> `similarity_search_with_score(pgvector)`. So, score filter will be working in `similarity_search_with_relevance_scores(base.py)`.\r\n\r\nBut Clickhouse vectorstore return from `similarity_search_with_relevance_scores` and without score filter because clickhouse implement `similarity_search_with_relevance_scores` from `base.py`.\r\n\r\n---\r\n\r\nI have two suggestions for this issue.\r\n\r\n1. use `score_threshold` in `similarity_search_with_relevance_scores`\r\n```sql\r\n\r\nSELECT document, \r\n    metadata, dist\r\nFROM default.langchain\r\nWHERE dist > {score_threshold}\r\nORDER BY L2Distance(embedding, [....]) \r\n    AS dist ASC\r\nLIMIT 4 \r\n```\r\n2. rename function `similarity_search_with_relevance_scores` to `_similarity_search_with_relevance_scores`.\r\nmake invoke chain to `similarity_search_with_relevance_scores(base.py)` -> `_similarity_search_with_relevance_scores(clickhouse)`\r\n\r\ngot data that score less than score_threshold\r\n\r\n### Expected behavior\r\n\r\nscore filtering normally in clickhouse\r\n\r\nBTW, I can submit pr if necessary",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8664/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8664/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8663",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8663/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8663/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8663/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8663",
        "id": 1834236332,
        "node_id": "PR_kwDOIPDwls5XEPDA",
        "number": 8663,
        "title": "Minor formatting and additional figure for summarization use case",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-03T04:10:38Z",
        "updated_at": "2023-08-03T04:52:30Z",
        "closed_at": "2023-08-03T04:52:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8663",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8663",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8663.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8663.patch",
            "merged_at": "2023-08-03T04:52:29Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8663/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8663/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8662",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8662/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8662/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8662/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8662",
        "id": 1834227144,
        "node_id": "I_kwDOIPDwls5tVBXI",
        "number": 8662,
        "title": "Use FAISS  {\"distance_strategy\":\"MAX_INNER_PRODUCT\"}  Not work!",
        "user": {
            "login": "exceedzhang",
            "id": 4583537,
            "node_id": "MDQ6VXNlcjQ1ODM1Mzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4583537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/exceedzhang",
            "html_url": "https://github.com/exceedzhang",
            "followers_url": "https://api.github.com/users/exceedzhang/followers",
            "following_url": "https://api.github.com/users/exceedzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/exceedzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/exceedzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/exceedzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/exceedzhang/orgs",
            "repos_url": "https://api.github.com/users/exceedzhang/repos",
            "events_url": "https://api.github.com/users/exceedzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/exceedzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-03T03:57:32Z",
        "updated_at": "2023-08-03T06:53:06Z",
        "closed_at": "2023-08-03T06:53:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\npython 3.10\r\nlangchain 0.0.249\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n\r\n\r\nloader = DirectoryLoader(\"content/zh/knowledge/\", show_progress=True,loader_cls=TextLoader)\r\n\r\n    raw_documents = loader.load()\r\n    text_splitter = RecursiveCharacterTextSplitter(\r\n        chunk_size=500,\r\n        chunk_overlap=0,\r\n        separators=['\\n\\n','\\n','\u3002','\uff1f','\uff01','|']\r\n    )\r\n    # embeddings = OpenAIEmbeddings(model=\"text-embedding-ada-002\")\r\n    embeddings = HuggingFaceEmbeddings(model_name=\"moka-ai/m3e-base\")\r\n    count = int(len(raw_documents) / 100) +1\r\n    for index in range(count):\r\n        print('\u5f53\u524d\uff1a%s' % index)\r\n        documents = text_splitter.split_documents(raw_documents[index*100:min((index+1)*100,len(raw_documents))-1])\r\n        vectorstore = FAISS.from_documents(documents=documents, embedding=embeddings,kwargs={\"distance_strategy\":\"MAX_INNER_PRODUCT\"})\r\n    # Save vectorstore\r\n    with open(\"vectorstore.pkl\", \"wb\") as f:\r\n        pickle.dump(vectorstore, f)\n\n### Expected behavior\n\nUse FAISS  kwargs={\"distance_strategy\":\"MAX_INNER_PRODUCT\"}  Error! Not work!\r\n<img width=\"1512\" alt=\"image\" src=\"https://github.com/langchain-ai/langchain/assets/4583537/fee0f9b9-49bc-4713-adb9-de8c9be76606\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8662/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8662/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8661",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8661/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8661/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8661/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8661",
        "id": 1834225257,
        "node_id": "PR_kwDOIPDwls5XEMrO",
        "number": 8661,
        "title": "Amazon Textract as document loader",
        "user": {
            "login": "3coins",
            "id": 289369,
            "node_id": "MDQ6VXNlcjI4OTM2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/289369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/3coins",
            "html_url": "https://github.com/3coins",
            "followers_url": "https://api.github.com/users/3coins/followers",
            "following_url": "https://api.github.com/users/3coins/following{/other_user}",
            "gists_url": "https://api.github.com/users/3coins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/3coins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/3coins/subscriptions",
            "organizations_url": "https://api.github.com/users/3coins/orgs",
            "repos_url": "https://api.github.com/users/3coins/repos",
            "events_url": "https://api.github.com/users/3coins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/3coins/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-08-03T03:54:43Z",
        "updated_at": "2023-08-07T10:30:44Z",
        "closed_at": "2023-08-04T19:55:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8661",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8661",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8661.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8661.patch",
            "merged_at": "2023-08-04T19:55:07Z"
        },
        "body": "Description: Adding support for [Amazon Textract](https://aws.amazon.com/textract/) as a PDF document loader",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8661/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8661/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8660",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8660/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8660/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8660/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8660",
        "id": 1834199574,
        "node_id": "I_kwDOIPDwls5tU6oW",
        "number": 8660,
        "title": "LlamaCppEmbeddings Error  `type == GGML_TYPE_F16`",
        "user": {
            "login": "bensonbs",
            "id": 120996184,
            "node_id": "U_kgDOBzZBWA",
            "avatar_url": "https://avatars.githubusercontent.com/u/120996184?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bensonbs",
            "html_url": "https://github.com/bensonbs",
            "followers_url": "https://api.github.com/users/bensonbs/followers",
            "following_url": "https://api.github.com/users/bensonbs/following{/other_user}",
            "gists_url": "https://api.github.com/users/bensonbs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bensonbs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bensonbs/subscriptions",
            "organizations_url": "https://api.github.com/users/bensonbs/orgs",
            "repos_url": "https://api.github.com/users/bensonbs/repos",
            "events_url": "https://api.github.com/users/bensonbs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bensonbs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-03T03:15:23Z",
        "updated_at": "2023-11-09T16:13:07Z",
        "closed_at": "2023-11-09T16:13:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n```\r\nllama_print_timings:        load time =   127.16 ms\r\nllama_print_timings:      sample time =     0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)\r\nllama_print_timings: prompt eval time =  1753.93 ms /   237 tokens (    7.40 ms per token,   135.13 tokens per second)\r\nllama_print_timings:        eval time =     0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)\r\nllama_print_timings:       total time =  1779.79 ms\r\nGGML_ASSERT: /tmp/pip-install-7c_dsjad/llama-cpp-python_04ef08a182034167b5fee4a62dd2cdc2/vendor/llama.cpp/ggml-cuda.cu:3572: src0->type == GGML_TYPE_F16\r\n\u4e2d\u6b62 (\u6838\u5fc3\u5df2\u50be\u5370)\r\n```\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [x] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\n    vectorstore = Chroma.from_documents(documents=all_splits, embedding=LlamaCppEmbeddings(model_path=\"/home/mefae1/llm/chinese-alpaca-2-7b/ggml-model-q4_0.bin\",\r\n            n_gpu_layers=40,\r\n            n_batch=16,\r\n            n_ctx=2048\r\n        ))\r\n```\n\n### Expected behavior\n\nreturn vectorstore and not error",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8660/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8660/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8659",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8659/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8659/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8659/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8659",
        "id": 1834165151,
        "node_id": "PR_kwDOIPDwls5XEABu",
        "number": 8659,
        "title": "Fix Async Retry Event Handling",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-03T02:24:43Z",
        "updated_at": "2023-08-03T22:02:18Z",
        "closed_at": "2023-08-03T22:02:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8659",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8659",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8659.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8659.patch",
            "merged_at": "2023-08-03T22:02:17Z"
        },
        "body": "It fails currently because the event loop is already running.\r\n\r\nThe `retry` decorator alraedy infers an `AsyncRetrying` handler for coroutines (see [tenacity line](https://github.com/jd/tenacity/blob/aa6f8f0a2428de696b237d1a86bc131c1cdb707a/tenacity/__init__.py#L535)) However before_sleep always gets called synchronously (see [tenacity line](https://github.com/jd/tenacity/blob/aa6f8f0a2428de696b237d1a86bc131c1cdb707a/tenacity/__init__.py#L338)).\r\n\r\n\r\nInstead, check for a running loop and use that it exists. Of course, it's running an async method synchronously which is not _nice_. Given how important LLMs are, it may make sense to have a task list or something but I'd want to chat with @nfcampos on where that would live.\r\n\r\nThis PR also fixes the unit tests to check the handler is called and to make sure the async test is run (it looks like it's just been being skipped). It would have failed prior to the proposed fixes but passes now.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8659/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8659/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8658",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8658/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8658/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8658/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8658",
        "id": 1834147910,
        "node_id": "PR_kwDOIPDwls5XD8fF",
        "number": 8658,
        "title": "Update spec.py",
        "user": {
            "login": "xzy103",
            "id": 40889019,
            "node_id": "MDQ6VXNlcjQwODg5MDE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/40889019?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xzy103",
            "html_url": "https://github.com/xzy103",
            "followers_url": "https://api.github.com/users/xzy103/followers",
            "following_url": "https://api.github.com/users/xzy103/following{/other_user}",
            "gists_url": "https://api.github.com/users/xzy103/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xzy103/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xzy103/subscriptions",
            "organizations_url": "https://api.github.com/users/xzy103/orgs",
            "repos_url": "https://api.github.com/users/xzy103/repos",
            "events_url": "https://api.github.com/users/xzy103/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xzy103/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-03T01:59:08Z",
        "updated_at": "2023-08-08T14:33:21Z",
        "closed_at": "2023-08-08T14:33:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8658",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8658",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8658.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8658.patch",
            "merged_at": "2023-08-08T14:33:21Z"
        },
        "body": "  - Description: The API doc passed to LLM only included the content of responses but did not include the content of requestBody, causing the agent to be unable to construct the correct request parameters based on the requestBody information. Add two lines of code fixed the bug, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: @hinthornw ,\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8658/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8658/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8657",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8657/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8657/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8657/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8657",
        "id": 1834144412,
        "node_id": "PR_kwDOIPDwls5XD7wf",
        "number": 8657,
        "title": "Minor typo fix",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-03T01:53:54Z",
        "updated_at": "2023-08-03T06:20:26Z",
        "closed_at": "2023-08-03T06:20:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8657",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8657",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8657.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8657.patch",
            "merged_at": "2023-08-03T06:20:25Z"
        },
        "body": "Fix typo in doc-string.\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8657/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8657/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8656",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8656/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8656/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8656/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8656",
        "id": 1834120844,
        "node_id": "I_kwDOIPDwls5tUnaM",
        "number": 8656,
        "title": "DOC: <Running Agent as an Iterator>' prefix>",
        "user": {
            "login": "summer-silence",
            "id": 57739107,
            "node_id": "MDQ6VXNlcjU3NzM5MTA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/57739107?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/summer-silence",
            "html_url": "https://github.com/summer-silence",
            "followers_url": "https://api.github.com/users/summer-silence/followers",
            "following_url": "https://api.github.com/users/summer-silence/following{/other_user}",
            "gists_url": "https://api.github.com/users/summer-silence/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/summer-silence/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/summer-silence/subscriptions",
            "organizations_url": "https://api.github.com/users/summer-silence/orgs",
            "repos_url": "https://api.github.com/users/summer-silence/repos",
            "events_url": "https://api.github.com/users/summer-silence/events{/privacy}",
            "received_events_url": "https://api.github.com/users/summer-silence/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-03T01:19:51Z",
        "updated_at": "2023-11-09T16:11:04Z",
        "closed_at": "2023-11-09T16:11:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\r\n\r\n\r\n```\r\n# need to use GPT-4 here as GPT-3.5 does not understand, however hard you insist, that\r\n# it should use the calculator to perform the final calculation\r\nllm = ChatOpenAI(temperature=0, model=\"gpt-4\")\r\n```\r\nThis docs say that it need gpt -4\uff0care there other models that can be used\uff1fFor example, some open source large models LLM\u3002H\r\n\r\n### Idea or request for content:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8656/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8656/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8655",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8655/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8655/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8655/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8655",
        "id": 1834037196,
        "node_id": "PR_kwDOIPDwls5XDkGf",
        "number": 8655,
        "title": "Use call directly for chain",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-02T23:55:04Z",
        "updated_at": "2023-08-03T00:11:40Z",
        "closed_at": "2023-08-03T00:11:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8655",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8655",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8655.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8655.patch",
            "merged_at": "2023-08-03T00:11:39Z"
        },
        "body": "for run_on_dataset since the `run()` method requires a single output",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8655/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8655/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8654",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8654/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8654/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8654/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8654",
        "id": 1834019762,
        "node_id": "PR_kwDOIPDwls5XDgdO",
        "number": 8654,
        "title": "docs: fix some grammar",
        "user": {
            "login": "millerick",
            "id": 26394493,
            "node_id": "MDQ6VXNlcjI2Mzk0NDkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/26394493?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/millerick",
            "html_url": "https://github.com/millerick",
            "followers_url": "https://api.github.com/users/millerick/followers",
            "following_url": "https://api.github.com/users/millerick/following{/other_user}",
            "gists_url": "https://api.github.com/users/millerick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/millerick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/millerick/subscriptions",
            "organizations_url": "https://api.github.com/users/millerick/orgs",
            "repos_url": "https://api.github.com/users/millerick/repos",
            "events_url": "https://api.github.com/users/millerick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/millerick/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-02T23:25:07Z",
        "updated_at": "2023-08-02T23:48:02Z",
        "closed_at": "2023-08-02T23:48:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8654",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8654",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8654.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8654.patch",
            "merged_at": "2023-08-02T23:48:02Z"
        },
        "body": "### Description\r\nFixes a grammar issue I noticed when reading through the documentation.\r\n\r\n### Maintainers\r\n@baskaryan\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8654/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8654/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8653",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8653/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8653/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8653/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8653",
        "id": 1834009422,
        "node_id": "PR_kwDOIPDwls5XDeQo",
        "number": 8653,
        "title": "Use salt instead of datetime",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-02T23:08:16Z",
        "updated_at": "2023-08-03T00:22:38Z",
        "closed_at": "2023-08-03T00:15:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8653",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8653",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8653.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8653.patch",
            "merged_at": "2023-08-03T00:15:50Z"
        },
        "body": "If you want to kick off two runs at the same time it'll cause errors. Use a uuid instead",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8653/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8653/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8652",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8652/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8652/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8652/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8652",
        "id": 1834009095,
        "node_id": "PR_kwDOIPDwls5XDeMT",
        "number": 8652,
        "title": "fix enum error message",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-02T23:07:47Z",
        "updated_at": "2023-08-03T00:11:28Z",
        "closed_at": "2023-08-03T00:11:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8652",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8652",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8652.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8652.patch",
            "merged_at": "2023-08-03T00:11:27Z"
        },
        "body": "could be a string so don't directly call value",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8652/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8652/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8651",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8651/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8651/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8651/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8651",
        "id": 1833981979,
        "node_id": "PR_kwDOIPDwls5XDYZJ",
        "number": 8651,
        "title": "\ud83d\udcd6 docs: compact api reference",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-02T22:28:49Z",
        "updated_at": "2023-08-24T16:06:16Z",
        "closed_at": "2023-08-24T16:01:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8651",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8651",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8651.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8651.patch",
            "merged_at": "2023-08-24T16:01:52Z"
        },
        "body": "Updated design of the \"API Reference\" text\r\nHere is an example of the current format:\r\n![image](https://github.com/langchain-ai/langchain/assets/2256422/8727f2ba-1b69-497f-aa07-07f939b6da3b)\r\n\r\nIt changed to\r\n`langchain.retrievers.ElasticSearchBM25Retriever` format. The same format as it is in the API Reference Toc.\r\n\r\nIt also resembles code: \r\n`from langchain.retrievers import ElasticSearchBM25Retriever` (namespace THEN class_name)\r\n\r\nCurrent format is\r\n`ElasticSearchBM25Retriever from langchain.retrievers` (class_name THEN namespace) \r\n\r\nThis change is in line with other formats and improves readability.\r\n\r\n @baskaryan\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8651/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8651/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8650",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8650/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8650/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8650/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8650",
        "id": 1833969620,
        "node_id": "PR_kwDOIPDwls5XDVu7",
        "number": 8650,
        "title": "Update to use non-pydantic run schema",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-02T22:12:35Z",
        "updated_at": "2023-09-20T17:35:49Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8650",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8650",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8650.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8650.patch",
            "merged_at": null
        },
        "body": "Slowly trying to remove inhibitions on letting users upgrade to pydantic v2.\r\n\r\nDepends on https://github.com/langchain-ai/langsmith-sdk/pull/127 or something similar being landed and an actual 0.1.0 to be cut before this can land / pass CI",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8650/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8650/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8649",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8649/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8649/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8649/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8649",
        "id": 1833968332,
        "node_id": "I_kwDOIPDwls5tUCLM",
        "number": 8649,
        "title": "DOC: Agent Usecase Links are broken",
        "user": {
            "login": "prakashsaraf",
            "id": 3676979,
            "node_id": "MDQ6VXNlcjM2NzY5Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3676979?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prakashsaraf",
            "html_url": "https://github.com/prakashsaraf",
            "followers_url": "https://api.github.com/users/prakashsaraf/followers",
            "following_url": "https://api.github.com/users/prakashsaraf/following{/other_user}",
            "gists_url": "https://api.github.com/users/prakashsaraf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prakashsaraf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prakashsaraf/subscriptions",
            "organizations_url": "https://api.github.com/users/prakashsaraf/orgs",
            "repos_url": "https://api.github.com/users/prakashsaraf/repos",
            "events_url": "https://api.github.com/users/prakashsaraf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prakashsaraf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-02T22:11:00Z",
        "updated_at": "2023-11-08T16:06:39Z",
        "closed_at": "2023-11-08T16:06:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nThe documentation links seems to be broken, the Agents Use-cases links are no longer working and giving \"Page Not Found\".\r\nExample Links - https://python.langchain.com/docs/use_cases/autonomous_agents/baby_agi_with_agent.html\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8649/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8649/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8648",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8648/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8648/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8648/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8648",
        "id": 1833961567,
        "node_id": "I_kwDOIPDwls5tUAhf",
        "number": 8648,
        "title": "Integrate OPENAI_FUNCTIONS in Agent",
        "user": {
            "login": "Ajaypawar02",
            "id": 65480235,
            "node_id": "MDQ6VXNlcjY1NDgwMjM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/65480235?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ajaypawar02",
            "html_url": "https://github.com/Ajaypawar02",
            "followers_url": "https://api.github.com/users/Ajaypawar02/followers",
            "following_url": "https://api.github.com/users/Ajaypawar02/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ajaypawar02/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ajaypawar02/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ajaypawar02/subscriptions",
            "organizations_url": "https://api.github.com/users/Ajaypawar02/orgs",
            "repos_url": "https://api.github.com/users/Ajaypawar02/repos",
            "events_url": "https://api.github.com/users/Ajaypawar02/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ajaypawar02/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-02T22:02:54Z",
        "updated_at": "2023-11-08T16:06:44Z",
        "closed_at": "2023-11-08T16:06:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nFollowing is the link of langchain documents. In this I need to integrate OPENAI_FUNCTIONS\r\nhttps://python.langchain.com/docs/modules/agents/how_to/custom_llm_chat_agent\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8648/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8648/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8647",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8647/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8647/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8647/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8647",
        "id": 1833918207,
        "node_id": "PR_kwDOIPDwls5XDKkE",
        "number": 8647,
        "title": "Newspaper",
        "user": {
            "login": "ruze00",
            "id": 3300000,
            "node_id": "MDQ6VXNlcjMzMDAwMDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3300000?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ruze00",
            "html_url": "https://github.com/ruze00",
            "followers_url": "https://api.github.com/users/ruze00/followers",
            "following_url": "https://api.github.com/users/ruze00/following{/other_user}",
            "gists_url": "https://api.github.com/users/ruze00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ruze00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ruze00/subscriptions",
            "organizations_url": "https://api.github.com/users/ruze00/orgs",
            "repos_url": "https://api.github.com/users/ruze00/repos",
            "events_url": "https://api.github.com/users/ruze00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ruze00/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-02T21:19:50Z",
        "updated_at": "2023-08-03T01:03:28Z",
        "closed_at": "2023-08-03T00:56:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8647",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8647",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8647.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8647.patch",
            "merged_at": "2023-08-03T00:56:08Z"
        },
        "body": "  - Description: Added newspaper3k based news article loader.  Provide a list of urls. \r\n  - Issue: N/A\r\n  - Dependencies: newspaper3k,\r\n  - Tag maintainer: @rlancemartin , @eyurtsev \r\n  - Twitter handle: @ruze\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8647/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8647/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8646",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8646/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8646/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8646/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8646",
        "id": 1833895037,
        "node_id": "PR_kwDOIPDwls5XDFjI",
        "number": 8646,
        "title": "Add templates",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-02T20:57:37Z",
        "updated_at": "2023-08-04T20:11:00Z",
        "closed_at": "2023-08-04T20:10:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8646",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8646",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8646.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8646.patch",
            "merged_at": "2023-08-04T20:10:59Z"
        },
        "body": "Add documentation templates\n\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8646/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8646/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8645",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8645/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8645/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8645/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8645",
        "id": 1833891645,
        "node_id": "PR_kwDOIPDwls5XDE0B",
        "number": 8645,
        "title": "Amazon Textract as document loader added",
        "user": {
            "login": "schadem",
            "id": 45048633,
            "node_id": "MDQ6VXNlcjQ1MDQ4NjMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/45048633?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schadem",
            "html_url": "https://github.com/schadem",
            "followers_url": "https://api.github.com/users/schadem/followers",
            "following_url": "https://api.github.com/users/schadem/following{/other_user}",
            "gists_url": "https://api.github.com/users/schadem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schadem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schadem/subscriptions",
            "organizations_url": "https://api.github.com/users/schadem/orgs",
            "repos_url": "https://api.github.com/users/schadem/repos",
            "events_url": "https://api.github.com/users/schadem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schadem/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-02T20:54:18Z",
        "updated_at": "2023-08-08T14:34:41Z",
        "closed_at": "2023-08-08T14:34:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8645",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8645",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8645.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8645.patch",
            "merged_at": null
        },
        "body": "Description: Adding support for [Amazon Textract](https://aws.amazon.com/textract/) as a PDF document loader\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run make format, make lint and make test to check this locally. -> checked and worked fine",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8645/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8645/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8644",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8644/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8644/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8644/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8644",
        "id": 1833717208,
        "node_id": "I_kwDOIPDwls5tTE3Y",
        "number": 8644,
        "title": "Deterministic fake embedding model",
        "user": {
            "login": "yuhuishi-convect",
            "id": 74702693,
            "node_id": "MDQ6VXNlcjc0NzAyNjkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/74702693?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuhuishi-convect",
            "html_url": "https://github.com/yuhuishi-convect",
            "followers_url": "https://api.github.com/users/yuhuishi-convect/followers",
            "following_url": "https://api.github.com/users/yuhuishi-convect/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuhuishi-convect/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuhuishi-convect/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuhuishi-convect/subscriptions",
            "organizations_url": "https://api.github.com/users/yuhuishi-convect/orgs",
            "repos_url": "https://api.github.com/users/yuhuishi-convect/repos",
            "events_url": "https://api.github.com/users/yuhuishi-convect/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuhuishi-convect/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-02T18:36:33Z",
        "updated_at": "2023-08-04T17:51:01Z",
        "closed_at": "2023-08-04T17:51:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nAn implementation of a `FakeEmbeddingModel` that generates identical vectors given identical input texts.\n\n### Motivation\n\nCurrently langchain has a `FakeEmbedding` model that generates a vector of random numbers, that is irrelevant to the content that needs to be embedded. \r\n\r\nThis model is pretty useful in e.g., unit tests, because it doesn't need to load any actual models, or connect to the internet. \r\n\r\nHowever, there is one realistic feature it misses, which makes it \"fake\" compared to a realistic embedding model -- given input texts are the same, the generated embedding vectors should be the same as well.\r\n\r\nThis will make unit tests that involve using a `FakeEmbeddingModel` more realistic. .E.g., ou can test if the similarity search makes sense -- searching by the exact identical text from your vector store should give me an exact match, because the embeddings are identical, which gives a distance of 0.\n\n### Your contribution\n\nI can submit a PR for it.\r\n\r\nWe can use the hash of the text as a seed when generating random numbers.\r\nIn this case, if input texts are identical, we should get exactly the same embedding vectors.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8644/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8644/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8642",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8642/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8642/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8642/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8642",
        "id": 1833713535,
        "node_id": "PR_kwDOIPDwls5XCdto",
        "number": 8642,
        "title": "`MLflow` examples",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-02T18:33:24Z",
        "updated_at": "2023-08-02T21:23:57Z",
        "closed_at": "2023-08-02T20:30:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8642",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8642",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8642.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8642.patch",
            "merged_at": "2023-08-02T20:30:28Z"
        },
        "body": "Updated `MLflow` examples with links to the examples from MLflow\r\n\r\n @baskaryan\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8642/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8642/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8641",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8641/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8641/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8641/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8641",
        "id": 1833706406,
        "node_id": "PR_kwDOIPDwls5XCcI7",
        "number": 8641,
        "title": "Enterprise support form wording",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-02T18:28:49Z",
        "updated_at": "2023-08-02T22:18:21Z",
        "closed_at": "2023-08-02T22:18:20Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8641",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8641",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8641.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8641.patch",
            "merged_at": "2023-08-02T22:18:20Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8641/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8641/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8639",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8639/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8639/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8639/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8639",
        "id": 1833615701,
        "node_id": "PR_kwDOIPDwls5XCIPQ",
        "number": 8639,
        "title": "Harrison/conversational retrieval agent",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-02T17:26:00Z",
        "updated_at": "2023-08-03T02:55:43Z",
        "closed_at": "2023-08-03T01:05:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8639",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8639",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8639.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8639.patch",
            "merged_at": "2023-08-03T01:05:16Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8639/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8639/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8638",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8638/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8638/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8638/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8638",
        "id": 1833584670,
        "node_id": "I_kwDOIPDwls5tSkge",
        "number": 8638,
        "title": "GraphQL Execution Tool should support URL/headers as input at runtime",
        "user": {
            "login": "ramapalani",
            "id": 7064234,
            "node_id": "MDQ6VXNlcjcwNjQyMzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7064234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ramapalani",
            "html_url": "https://github.com/ramapalani",
            "followers_url": "https://api.github.com/users/ramapalani/followers",
            "following_url": "https://api.github.com/users/ramapalani/following{/other_user}",
            "gists_url": "https://api.github.com/users/ramapalani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ramapalani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ramapalani/subscriptions",
            "organizations_url": "https://api.github.com/users/ramapalani/orgs",
            "repos_url": "https://api.github.com/users/ramapalani/repos",
            "events_url": "https://api.github.com/users/ramapalani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ramapalani/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-02T17:02:44Z",
        "updated_at": "2023-11-08T16:06:50Z",
        "closed_at": "2023-11-08T16:06:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nCurrent GraphQL Tool is very static https://python.langchain.com/docs/modules/agents/tools/integrations/graphql, one has to set up graphql url, headers etc at the time of configuring the tool.\r\n\r\nThis tool should follow [Request*Tool](https://github.com/hwchase17/langchain/blob/2b3da522eb866cb79dfdc9116a7c466b866cb3d0/langchain/tools/requests/tool.py#L53), where individual request information is sent as input to this tool. This way, GraphQL tool will become a generic and could be used to query different endpoints, or with different headers\r\n\r\nThis issue was wrongly created in the l[angchainjs repo](https://github.com/hwchase17/langchainjs/issues/1713) instead of the python langchain repo (this one).\n\n### Motivation\n\nWe have a use case where the URL and headers would change between invocation of this tool.  And these could be very dynamic, every user might have a different \"Authorization\" header.  So we want to register the tool once to the agent, but override these values at the time of invocation.\n\n### Your contribution\n\nYes, my team is willing to contribute.\r\n\r\nHere is the pull request https://github.com/langchain-ai/langchain/pull/8616",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8638/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8638/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8637",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8637/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8637/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8637/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8637",
        "id": 1833568563,
        "node_id": "I_kwDOIPDwls5tSgkz",
        "number": 8637,
        "title": "Catch and Filter OpenAI \"As an AI model\" responses",
        "user": {
            "login": "sarmientoj24",
            "id": 8830319,
            "node_id": "MDQ6VXNlcjg4MzAzMTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8830319?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sarmientoj24",
            "html_url": "https://github.com/sarmientoj24",
            "followers_url": "https://api.github.com/users/sarmientoj24/followers",
            "following_url": "https://api.github.com/users/sarmientoj24/following{/other_user}",
            "gists_url": "https://api.github.com/users/sarmientoj24/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sarmientoj24/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sarmientoj24/subscriptions",
            "organizations_url": "https://api.github.com/users/sarmientoj24/orgs",
            "repos_url": "https://api.github.com/users/sarmientoj24/repos",
            "events_url": "https://api.github.com/users/sarmientoj24/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sarmientoj24/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-02T16:50:53Z",
        "updated_at": "2023-11-06T01:05:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWhen connecting to ChatGPT API, it is possible to get responses by the chatbot as \"As an AI model...\", which ruins the chatbot experience on your application.\r\n\r\nA way to filter this and generate a default response might be better.\n\n### Motivation\n\nFor applications using OpenAI API, this would enable filtering those requests.\n\n### Your contribution\n\nNot really",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8637/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8637/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8636",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8636/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8636/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8636/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8636",
        "id": 1833488068,
        "node_id": "PR_kwDOIPDwls5XBr0E",
        "number": 8636,
        "title": "Elasticsearch Store Improvements",
        "user": {
            "login": "joemcelroy",
            "id": 49480,
            "node_id": "MDQ6VXNlcjQ5NDgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/49480?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joemcelroy",
            "html_url": "https://github.com/joemcelroy",
            "followers_url": "https://api.github.com/users/joemcelroy/followers",
            "following_url": "https://api.github.com/users/joemcelroy/following{/other_user}",
            "gists_url": "https://api.github.com/users/joemcelroy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joemcelroy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joemcelroy/subscriptions",
            "organizations_url": "https://api.github.com/users/joemcelroy/orgs",
            "repos_url": "https://api.github.com/users/joemcelroy/repos",
            "events_url": "https://api.github.com/users/joemcelroy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joemcelroy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2023-08-02T16:13:04Z",
        "updated_at": "2023-08-15T08:47:49Z",
        "closed_at": "2023-08-15T06:42:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8636",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8636",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8636.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8636.patch",
            "merged_at": "2023-08-15T06:42:35Z"
        },
        "body": "Todo:\r\n- [x] Connection options (cloud, localhost url, es_connection) support\r\n- [x] Logging support\r\n- [x] Customisable field support\r\n- [x] Distance Similarity support \r\n- [x] Metadata support\r\n  - [x] Metadata Filter support \r\n- [x] Retrieval Strategies\r\n  - [x] Approx\r\n  - [x] Approx with Hybrid\r\n  - [x] Exact\r\n  - [x] Custom \r\n  - [x] ELSER (excluding hybrid as we are working on RRF support)\r\n- [x] integration tests \r\n- [x] Documentation\r\n\r\n\ud83d\udc4b this is a contribution to improve Elasticsearch integration with Langchain. Its based loosely on the changes that are in master but with some notable changes:\r\n\r\n## Package name & design improvements\r\nThe import name is now `ElasticsearchStore`, to aid discoverability of the VectorStore.\r\n\r\n```py\r\n## Before\r\nfrom langchain.vectorstores.elastic_vector_search import ElasticVectorSearch, ElasticKnnSearch\r\n\r\n## Now\r\nfrom langchain.vectorstores.elasticsearch import ElasticsearchStore\r\n```\r\n\r\n## Retrieval Strategy support\r\nBefore we had a number of classes, depending on the strategy you wanted. `ElasticKnnSearch` for approx, `ElasticVectorSearch` for exact / brute force. \r\n\r\nWith `ElasticsearchStore` we have retrieval strategies:\r\n\r\n### Approx Example\r\nDefault strategy for the vast majority of developers who use Elasticsearch will be inferring the embeddings from outside of Elasticsearch. Uses KNN functionality of _search.\r\n\r\n```py\r\n        texts = [\"foo\", \"bar\", \"baz\"]\r\n       docsearch = ElasticsearchStore.from_texts(\r\n            texts,\r\n            FakeEmbeddings(),\r\n            es_url=\"http://localhost:9200\",\r\n            index_name=\"sample-index\"\r\n        )\r\n        output = docsearch.similarity_search(\"foo\", k=1)\r\n```\r\n\r\n### Approx, with hybrid\r\nDevelopers who want to search, using both the embedding and the text bm25 match. Its simple to enable.\r\n\r\n```py\r\n texts = [\"foo\", \"bar\", \"baz\"]\r\n       docsearch = ElasticsearchStore.from_texts(\r\n            texts,\r\n            FakeEmbeddings(),\r\n            es_url=\"http://localhost:9200\",\r\n            index_name=\"sample-index\",\r\n            strategy=ElasticsearchStore.ApproxRetrievalStrategy(hybrid=True)\r\n        )\r\n        output = docsearch.similarity_search(\"foo\", k=1)\r\n```\r\n\r\n### Approx, with `query_model_id`\r\nDevelopers who want to infer within Elasticsearch, using the model loaded in the ml node.\r\n\r\nThis relies on the developer to setup the pipeline and index if they wish to embed the text in Elasticsearch. Example of this in the test.\r\n\r\n```py\r\n texts = [\"foo\", \"bar\", \"baz\"]\r\n       docsearch = ElasticsearchStore.from_texts(\r\n            texts,\r\n            FakeEmbeddings(),\r\n            es_url=\"http://localhost:9200\",\r\n            index_name=\"sample-index\",\r\n            strategy=ElasticsearchStore.ApproxRetrievalStrategy(\r\n                query_model_id=\"sentence-transformers__all-minilm-l6-v2\"\r\n            ),\r\n        )\r\n        output = docsearch.similarity_search(\"foo\", k=1)\r\n```\r\n\r\n### I want to provide my own custom Elasticsearch Query\r\nYou might want to have more control over the query, to perform multi-phase retrieval such as LTR, linearly boosting on document parameters like recently updated or geo-distance. You can do this with `custom_query_fn`\r\n\r\n```py\r\n        def my_custom_query(query_body: dict, query: str) -> dict:\r\n            return {\"query\": {\"match\": {\"text\": {\"query\": \"bar\"}}}}\r\n\r\n        texts = [\"foo\", \"bar\", \"baz\"]\r\n        docsearch = ElasticsearchStore.from_texts(\r\n            texts, FakeEmbeddings(), **elasticsearch_connection, index_name=index_name\r\n        )\r\n        docsearch.similarity_search(\"foo\", k=1, custom_query=my_custom_query)\r\n\r\n```\r\n\r\n### Exact Example\r\nDevelopers who have a small dataset in Elasticsearch, dont want the cost of indexing the dims vs tradeoff on cost at query time. Uses script_score.\r\n\r\n```py\r\n        texts = [\"foo\", \"bar\", \"baz\"]\r\n       docsearch = ElasticsearchStore.from_texts(\r\n            texts,\r\n            FakeEmbeddings(),\r\n            es_url=\"http://localhost:9200\",\r\n            index_name=\"sample-index\",\r\n            strategy=ElasticsearchStore.ExactRetrievalStrategy(),\r\n        )\r\n        output = docsearch.similarity_search(\"foo\", k=1)\r\n```\r\n\r\n### ELSER Example\r\nElastic provides its own sparse vector model called ELSER. With these changes, its really easy to use. The vector store creates a pipeline and index thats setup for ELSER. All the developer needs to do is configure, ingest and query via langchain tooling.\r\n\r\n```py\r\ntexts = [\"foo\", \"bar\", \"baz\"]\r\n       docsearch = ElasticsearchStore.from_texts(\r\n            texts,\r\n            FakeEmbeddings(),\r\n            es_url=\"http://localhost:9200\",\r\n            index_name=\"sample-index\",\r\n            strategy=ElasticsearchStore.SparseVectorStrategy(),\r\n        )\r\n        output = docsearch.similarity_search(\"foo\", k=1)\r\n\r\n```\r\n\r\n## Architecture\r\nIn future, we can introduce new strategies and allow us to not break bwc as we evolve the index / query strategy. \r\n\r\n## Credit\r\nOn release, could you credit @elastic and @phoey1 please? Thank you! \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8636/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8636/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8635",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8635/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8635/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8635/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8635",
        "id": 1833455388,
        "node_id": "I_kwDOIPDwls5tSE8c",
        "number": 8635,
        "title": "Support parallel upserts in Pinecone",
        "user": {
            "login": "omikader",
            "id": 16735699,
            "node_id": "MDQ6VXNlcjE2NzM1Njk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/16735699?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omikader",
            "html_url": "https://github.com/omikader",
            "followers_url": "https://api.github.com/users/omikader/followers",
            "following_url": "https://api.github.com/users/omikader/following{/other_user}",
            "gists_url": "https://api.github.com/users/omikader/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omikader/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omikader/subscriptions",
            "organizations_url": "https://api.github.com/users/omikader/orgs",
            "repos_url": "https://api.github.com/users/omikader/repos",
            "events_url": "https://api.github.com/users/omikader/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omikader/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-02T15:54:23Z",
        "updated_at": "2023-09-05T14:59:11Z",
        "closed_at": "2023-09-05T14:59:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nIt would be great if there was an explicit way to support parallel upserts in the `Pinecone` vectorstore wrapper. This could either be done by altering the existing `add_texts` method or adding a new \"async\" equivalent.\r\n\r\n### Motivation\r\n\r\nThe native Pinecone client supports [parallel upsert](https://docs.pinecone.io/docs/insert-data#sending-upserts-in-parallel) operations which can improve throughput. This is technically supported with the current `langchain` vectorstore wrapper using the following combination of arguments `index.add_texts(texts, async_req=True, batch_size=None)`.\r\n\r\nHowever, because `add_texts` [returns](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/vectorstores/pinecone.py#L102-L105) the list of `ids` instead of the response to `self._index.upsert`, we cannot call `get` to suspend the program until all of the responses are available (see code snippet from the Pinecone docs below).\r\n\r\n```\r\n# Upsert data with 100 vectors per upsert request asynchronously\r\n# - Create pinecone.Index with pool_threads=30 (limits to 30 simultaneous requests)\r\n# - Pass async_req=True to index.upsert()\r\nwith pinecone.Index('example-index', pool_threads=30) as index:\r\n    # Send requests in parallel\r\n    async_results = [\r\n        index.upsert(vectors=ids_vectors_chunk, async_req=True)\r\n        for ids_vectors_chunk in chunks(example_data_generator, batch_size=100)\r\n    ]\r\n    # Wait for and retrieve responses (this raises in case of error)\r\n    [async_result.get() for async_result in async_results]\r\n```\r\n\r\n### Your contribution\r\n\r\nI can try to put a PR up for this. Although I wonder if there was a deliberate decision to not return the raw response for [`upsert`](https://github.com/pinecone-io/pinecone-python-client/blob/main/pinecone/index.py#L73-L78) in order to have a cleaner abstraction.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8635/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8635/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8634",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8634/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8634/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8634/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8634",
        "id": 1833386446,
        "node_id": "PR_kwDOIPDwls5XBVkz",
        "number": 8634,
        "title": "Refactor Qdrant integration",
        "user": {
            "login": "kacperlukawski",
            "id": 2649301,
            "node_id": "MDQ6VXNlcjI2NDkzMDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2649301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kacperlukawski",
            "html_url": "https://github.com/kacperlukawski",
            "followers_url": "https://api.github.com/users/kacperlukawski/followers",
            "following_url": "https://api.github.com/users/kacperlukawski/following{/other_user}",
            "gists_url": "https://api.github.com/users/kacperlukawski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kacperlukawski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kacperlukawski/subscriptions",
            "organizations_url": "https://api.github.com/users/kacperlukawski/orgs",
            "repos_url": "https://api.github.com/users/kacperlukawski/repos",
            "events_url": "https://api.github.com/users/kacperlukawski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kacperlukawski/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-02T15:15:11Z",
        "updated_at": "2023-08-02T17:30:19Z",
        "closed_at": "2023-08-02T17:30:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8634",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8634",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8634.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8634.patch",
            "merged_at": "2023-08-02T17:30:18Z"
        },
        "body": "This small PR introduces new parameters into Qdrant (`on_disk`), fixes some tests and changes the error message to be more clear.\r\n\r\nTagging: @baskaryan, @rlancemartin, @eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8634/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8634/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8633",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8633/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8633/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8633/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8633",
        "id": 1833332522,
        "node_id": "PR_kwDOIPDwls5XBJ0t",
        "number": 8633,
        "title": "Eden AI (LLM + embeddings) integration",
        "user": {
            "login": "SamyMe",
            "id": 7459397,
            "node_id": "MDQ6VXNlcjc0NTkzOTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7459397?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SamyMe",
            "html_url": "https://github.com/SamyMe",
            "followers_url": "https://api.github.com/users/SamyMe/followers",
            "following_url": "https://api.github.com/users/SamyMe/following{/other_user}",
            "gists_url": "https://api.github.com/users/SamyMe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SamyMe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SamyMe/subscriptions",
            "organizations_url": "https://api.github.com/users/SamyMe/orgs",
            "repos_url": "https://api.github.com/users/SamyMe/repos",
            "events_url": "https://api.github.com/users/SamyMe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SamyMe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-02T14:44:56Z",
        "updated_at": "2023-08-04T07:07:08Z",
        "closed_at": "2023-08-03T17:25:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8633",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8633",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8633.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8633.patch",
            "merged_at": null
        },
        "body": "# Eden AI - Integration\r\n\r\nThis PR adds [EdenAI](https://edenai.co) as an LLM and Embeddings provider. \r\nEden AI is a Meta API regrouping all the best AI APIs in the market (Amazon, Open AI, Cohere, Google, Anthropic, DeepL, AssemblyAI  ...etc) into one. Users can access all the AI tasks you need with a single account giving them total freedom switch between providers and combine them.\r\n\r\nThis allows langchain users to :\r\n \ud83d\udcaa Increase Accuracy & Reduce Cost by choosing the right AI API for each AI task\r\n \u262e\ufe0f Gain peace of mind with centralized usage restrictions & cost monitoring \r\n \ud83c\udf10 Continually explore emerging AI capabilities in the market\r\n \r\nHere is an example of how it's called:\r\n\r\n```python\r\nfrom langchain.llms import EdenAI\r\n\r\nllm = EdenAI( edenai_api_key=\"...\",\r\n            provider=\"openai\", \r\n            params={\"temperature\" : 0.2,\"max_tokens\" : 250})\r\n```\r\n\r\nIt can also be used for text2image : \r\n\r\n```python\r\nimagemodel = EdenAI( feature=\"image\" ,   provider= \"stabilityai\",  \r\n                                       params={  \"resolution\" : \"512x512\"  })\r\n\r\n```\r\n\r\n A detailed notebook was added.\r\n \r\n No dependencies are added as we call a rest API.\r\n \r\n**Upcoming** : This PR starts by adding the LLM and Embeddings capabilities and will be followed by a utilities PR to give agents new capabilities like : explicit content detection (image, texts and videos), speech to text and text to speech, pdf parsing (invoice, ID, resume...etc ) and a lot of other tasks (+50) from top AI APIs providers.\r\n \r\n \r\nPing: @hwchase17, @baskaryan\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8633/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8633/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8632",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8632/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8632/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8632/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8632",
        "id": 1833324154,
        "node_id": "PR_kwDOIPDwls5XBIAD",
        "number": 8632,
        "title": "bump 250",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-02T14:40:13Z",
        "updated_at": "2023-08-02T14:47:38Z",
        "closed_at": "2023-08-02T14:47:37Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8632",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8632",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8632.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8632.patch",
            "merged_at": "2023-08-02T14:47:37Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8632/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8632/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8631",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8631/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8631/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8631/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8631",
        "id": 1833291208,
        "node_id": "I_kwDOIPDwls5tRc3I",
        "number": 8631,
        "title": "Pubmed needs to be called with \"pupo",
        "user": {
            "login": "ChaseRichardsonGit",
            "id": 122628378,
            "node_id": "U_kgDOB08pGg",
            "avatar_url": "https://avatars.githubusercontent.com/u/122628378?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChaseRichardsonGit",
            "html_url": "https://github.com/ChaseRichardsonGit",
            "followers_url": "https://api.github.com/users/ChaseRichardsonGit/followers",
            "following_url": "https://api.github.com/users/ChaseRichardsonGit/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChaseRichardsonGit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChaseRichardsonGit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChaseRichardsonGit/subscriptions",
            "organizations_url": "https://api.github.com/users/ChaseRichardsonGit/orgs",
            "repos_url": "https://api.github.com/users/ChaseRichardsonGit/repos",
            "events_url": "https://api.github.com/users/ChaseRichardsonGit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChaseRichardsonGit/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-02T14:22:29Z",
        "updated_at": "2023-11-08T16:06:55Z",
        "closed_at": "2023-11-08T16:06:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nOS:  Windows\r\nName: langchain\r\nVersion: 0.0.249\r\nPython 3.11.2\n\n### Who can help?\n\n@hw\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nWhen loading the pubmed Tool it has to be called with \"pupmed\".  Though this was possibly a typo since pupmed isn't mentioned in the documents.\n\n### Expected behavior\n\nExpect to call the pubmed tool with \"pubmed\" and not \"pupmed\" or documentation should be more clear.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8631/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8631/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8628",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8628/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8628/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8628/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8628",
        "id": 1833046669,
        "node_id": "PR_kwDOIPDwls5XALg2",
        "number": 8628,
        "title": "add missing RemoteLangChainRetriever _get_relevant_documents test",
        "user": {
            "login": "shibuiwilliam",
            "id": 23517545,
            "node_id": "MDQ6VXNlcjIzNTE3NTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/23517545?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shibuiwilliam",
            "html_url": "https://github.com/shibuiwilliam",
            "followers_url": "https://api.github.com/users/shibuiwilliam/followers",
            "following_url": "https://api.github.com/users/shibuiwilliam/following{/other_user}",
            "gists_url": "https://api.github.com/users/shibuiwilliam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shibuiwilliam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shibuiwilliam/subscriptions",
            "organizations_url": "https://api.github.com/users/shibuiwilliam/orgs",
            "repos_url": "https://api.github.com/users/shibuiwilliam/repos",
            "events_url": "https://api.github.com/users/shibuiwilliam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shibuiwilliam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-02T12:01:29Z",
        "updated_at": "2023-08-03T07:43:34Z",
        "closed_at": "2023-08-03T00:20:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8628",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8628",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8628.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8628.patch",
            "merged_at": "2023-08-03T00:20:41Z"
        },
        "body": "# What\r\n- Add missing RemoteLangChainRetriever _get_relevant_documents test\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: Add missing RemoteLangChainRetriever _get_relevant_documents test\r\n  - Issue: None\r\n  - Dependencies: None\r\n  - Tag maintainer: @rlancemartin, @eyurtsev\r\n  - Twitter handle: @MLOpsj\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8628/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8628/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8627",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8627/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8627/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8627/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8627",
        "id": 1833027175,
        "node_id": "PR_kwDOIPDwls5XAHTc",
        "number": 8627,
        "title": "Swap in Sympy instead of numexpr for more expressive LLMMath tool",
        "user": {
            "login": "zoeqevans",
            "id": 32969601,
            "node_id": "MDQ6VXNlcjMyOTY5NjAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/32969601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zoeqevans",
            "html_url": "https://github.com/zoeqevans",
            "followers_url": "https://api.github.com/users/zoeqevans/followers",
            "following_url": "https://api.github.com/users/zoeqevans/following{/other_user}",
            "gists_url": "https://api.github.com/users/zoeqevans/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zoeqevans/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zoeqevans/subscriptions",
            "organizations_url": "https://api.github.com/users/zoeqevans/orgs",
            "repos_url": "https://api.github.com/users/zoeqevans/repos",
            "events_url": "https://api.github.com/users/zoeqevans/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zoeqevans/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-02T11:48:21Z",
        "updated_at": "2023-11-20T20:47:04Z",
        "closed_at": "2023-11-10T22:41:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8627",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8627",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8627.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8627.patch",
            "merged_at": null
        },
        "body": "  - Description: Swapped in `sympy` instead of `numexpr` in the LLMMath Chain\r\n  - Issue: Relevant to #8363 \r\n  - Dependencies: None\r\n  - Tag maintainer: @hinthornw \r\n\r\nNote that we already use `sympy` in the symbolic math tool, so this actually removes a dependency!\r\n\r\n`numexpr` is actually quite fragile to input, whereas `sympify` is really quite hard to break. Take the iconic Langchain tool example mixing information retrieval and numerical calculation: _\"Who is Leo DiCaprio's girlfriend? What is her current age raised to the 0.43 power?\"_ (from this [tutorial page](https://python.langchain.com/docs/modules/agents/how_to/intermediate_steps)).\r\n\r\nIf you make the maths more exotic (\"What is the first prime number larger than her age?\", \"What is the factorial of her age?\", etc.) `numexpr` will raise an exception. `sympy` handles these with flying colours.\r\n\r\n\r\nI used the chain from that example, with the prompt:\r\n```\r\n\"In the sky, I am the number of sisters who dance, Bound by myth, in a celestial trance. On Earth, I am the continents that span, Holding diverse life, since time began.\r\nWhat number am I?\r\n\r\nNow multiply that number by the age of Zoe Saldana's partner, and raise it to the 2.43rd power.\r\nTake the fourth digit of the answer, then take the factorial of that, and call it X.\r\nWhat's the smallest prime number greater than X?\r\n\"\"\"\r\n```\r\nand with `sympy`, my chain passed with flying colours :)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8627/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8627/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8625",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8625/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8625/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8625/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8625",
        "id": 1833002315,
        "node_id": "I_kwDOIPDwls5tQWVL",
        "number": 8625,
        "title": "How to connect a Chatbot that has its own data but has also access to internet for search?",
        "user": {
            "login": "venturaEffect",
            "id": 29057173,
            "node_id": "MDQ6VXNlcjI5MDU3MTcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/29057173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/venturaEffect",
            "html_url": "https://github.com/venturaEffect",
            "followers_url": "https://api.github.com/users/venturaEffect/followers",
            "following_url": "https://api.github.com/users/venturaEffect/following{/other_user}",
            "gists_url": "https://api.github.com/users/venturaEffect/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/venturaEffect/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/venturaEffect/subscriptions",
            "organizations_url": "https://api.github.com/users/venturaEffect/orgs",
            "repos_url": "https://api.github.com/users/venturaEffect/repos",
            "events_url": "https://api.github.com/users/venturaEffect/events{/privacy}",
            "received_events_url": "https://api.github.com/users/venturaEffect/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-08-02T11:32:47Z",
        "updated_at": "2023-11-11T16:06:12Z",
        "closed_at": "2023-11-11T16:06:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nHi!\r\n\r\nHow to make a Chatbot that uses its own data access to the internet to get more info (like new updated)? I've tried and searched everywhere but can't make it work. \r\n\r\nHere the code: \r\n\r\n`\r\n                  from langchain.chains import ConversationalRetrievalChain\r\n                  from langchain.memory import ConversationBufferMemory\r\n                  from langchain.vectorstores import DocArrayInMemorySearch\r\n                  from langchain.embeddings.openai import OpenAIEmbeddings\r\n                  from langchain.document_loaders import (\r\n                      UnstructuredWordDocumentLoader,\r\n                      TextLoader,\r\n                      UnstructuredPowerPointLoader,\r\n                  )\r\n                  from langchain.tools import Tool\r\n                  from langchain.utilities import GoogleSearchAPIWrapper\r\n                  from langchain.chat_models import ChatOpenAI\r\n                  import os\r\n                  import openai\r\n                  import sys\r\n                  from dotenv import load_dotenv, find_dotenv\r\n        \r\n        sys.path.append('../..')\r\n        \r\n        _ = load_dotenv(find_dotenv())  # read local .env file\r\n        \r\n        google_api_key = os.environ.get(\"GOOGLE_API_KEY\")\r\n        google_cse_id = os.environ.get(\"GOOGLE_CSE_ID\")\r\n        \r\n        openai.api_key = os.environ['OPENAI_API_KEY']\r\n        \r\n        os.environ[\"LANGCHAIN_TRACING_V2\"] = \"true\"\r\n        os.environ[\"LANGCHAIN_ENDPOINT\"] = \"https://api.langchain.plus\"\r\n        os.environ[\"LANGCHAIN_API_KEY\"] = os.environ['LANGCHAIN_API_KEY']\r\n        \r\n        os.environ[\"GOOGLE_API_KEY\"] = google_api_key\r\n        os.environ[\"GOOGLE_CSE_ID\"] = google_cse_id\r\n        \r\n        folder_path_docx = \"DB\\\\DB VARIADO\\\\DOCS\"\r\n        folder_path_txt = \" DB\\\\BLOG-POSTS\"\r\n        folder_path_pptx_1 = \"DB\\\\PPT JUNIO\"\r\n        folder_path_pptx_2 = \"DB\\\\DB VARIADO\\\\PPTX\"\r\n        \r\n        loaded_content = []\r\n        \r\n        for file in os.listdir(folder_path_docx):\r\n            if file.endswith(\".docx\"):\r\n                file_path = os.path.join(folder_path_docx, file)\r\n                loader = UnstructuredWordDocumentLoader(file_path)\r\n                docx = loader.load()\r\n                loaded_content.extend(docx)\r\n        \r\n        for file in os.listdir(folder_path_txt):\r\n            if file.endswith(\".txt\"):\r\n                file_path = os.path.join(folder_path_txt, file)\r\n                loader = TextLoader(file_path, encoding='utf-8')\r\n                text = loader.load()\r\n                loaded_content.extend(text)\r\n        \r\n        for file in os.listdir(folder_path_pptx_1):\r\n            if file.endswith(\".pptx\"):\r\n                file_path = os.path.join(folder_path_pptx_1, file)\r\n                loader = UnstructuredPowerPointLoader(file_path)\r\n                slides_1 = loader.load()\r\n                loaded_content.extend(slides_1)\r\n        \r\n        for file in os.listdir(folder_path_pptx_2):\r\n            if file.endswith(\".pptx\"):\r\n                file_path = os.path.join(folder_path_pptx_2, file)\r\n                loader = UnstructuredPowerPointLoader(file_path)\r\n                slides_2 = loader.load()\r\n                loaded_content.extend(slides_2)\r\n        \r\n        embedding = OpenAIEmbeddings()\r\n        \r\n        embeddings_content = []\r\n        for one_loaded_content in loaded_content:\r\n            embedding_content = embedding.embed_query(one_loaded_content.page_content)\r\n            embeddings_content.append(embedding_content)\r\n        \r\n        db = DocArrayInMemorySearch.from_documents(loaded_content, embedding)\r\n        retriever = db.as_retriever(search_type=\"similarity\", search_kwargs={\"k\": 3})\r\n        \r\n        search = GoogleSearchAPIWrapper()\r\n        \r\n        \r\n        def custom_search(query):\r\n            max_results = 3\r\n        \r\n            internet_results = search.run(query)[:max_results]\r\n            return internet_results\r\n        \r\n        chain = ConversationalRetrievalChain.from_llm(\r\n            llm=ChatOpenAI(model_name=\"gpt-4\", temperature=0),\r\n            chain_type=\"map_reduce\",\r\n            retriever=retriever,\r\n            return_source_documents=True,\r\n            return_generated_question=True,\r\n        )\r\n        \r\n        history = []\r\n        \r\n        while True:\r\n            query = input(\"Hola, soy Chatbot. \u00bfQu\u00e9 te gustar\u00eda saber? \")\r\n        \r\n            internet_results = custom_search(query)\r\n        \r\n            combined_results = loaded_content + [internet_results]\r\n        \r\n            response = chain(\r\n                {\"question\": query, \"chat_history\": history, \"documents\": combined_results})\r\n        \r\n            print(response[\"answer\"])\r\n        \r\n            history.append((\"system\", query))\r\n            history.append((\"assistant\", response[\"answer\"])) \r\n`\r\n\r\nThis is the error message I get: \"The document does not provide information on... \". So it seems it doesn't access to the internet or something else (?)\r\n\r\nReally appreciate your suggestion or your help!\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8625/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8625/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8624",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8624/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8624/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8624/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8624",
        "id": 1832940618,
        "node_id": "PR_kwDOIPDwls5W_0ca",
        "number": 8624,
        "title": "Add upsert support for pgvector",
        "user": {
            "login": "lokeshdevnani",
            "id": 7446748,
            "node_id": "MDQ6VXNlcjc0NDY3NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7446748?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lokeshdevnani",
            "html_url": "https://github.com/lokeshdevnani",
            "followers_url": "https://api.github.com/users/lokeshdevnani/followers",
            "following_url": "https://api.github.com/users/lokeshdevnani/following{/other_user}",
            "gists_url": "https://api.github.com/users/lokeshdevnani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lokeshdevnani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lokeshdevnani/subscriptions",
            "organizations_url": "https://api.github.com/users/lokeshdevnani/orgs",
            "repos_url": "https://api.github.com/users/lokeshdevnani/repos",
            "events_url": "https://api.github.com/users/lokeshdevnani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lokeshdevnani/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-02T10:51:00Z",
        "updated_at": "2023-11-17T03:07:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8624",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8624",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8624.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8624.patch",
            "merged_at": null
        },
        "body": "## Description\r\nCurrently, there is no support for updates or upserts to PGVector through langchain.\r\nThis PR adds that support by leveraging `on_conflict_do_upsert`\r\n\r\nThis fixes https://github.com/langchain-ai/langchain/issues/6866\r\n\r\nMaintainers: @rlancemartin, @eyurtsev\r\n\r\nTwitter handle: [@lokeshdevnani](https://twitter.com/lokeshdevnani)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8624/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8624/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8623",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8623/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8623/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8623/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8623",
        "id": 1832908335,
        "node_id": "I_kwDOIPDwls5tP_Yv",
        "number": 8623,
        "title": "How to create a custom retriever",
        "user": {
            "login": "llmadd",
            "id": 38323944,
            "node_id": "MDQ6VXNlcjM4MzIzOTQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/38323944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/llmadd",
            "html_url": "https://github.com/llmadd",
            "followers_url": "https://api.github.com/users/llmadd/followers",
            "following_url": "https://api.github.com/users/llmadd/following{/other_user}",
            "gists_url": "https://api.github.com/users/llmadd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/llmadd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/llmadd/subscriptions",
            "organizations_url": "https://api.github.com/users/llmadd/orgs",
            "repos_url": "https://api.github.com/users/llmadd/repos",
            "events_url": "https://api.github.com/users/llmadd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/llmadd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-08-02T10:30:14Z",
        "updated_at": "2023-10-06T09:47:10Z",
        "closed_at": "2023-08-23T09:51:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWhen I use RetrievalQA, I need to add and reorder the content retrieved by retriever\r\n```\r\nqa = RetrievalQA.from_chain_type(llm=chat, \r\n                                 chain_type=\"stuff\",\r\n                                 retriever=docsearch.as_retriever(search_kwargs={\"k\": 2}), \r\n                                 chain_type_kwargs={\"prompt\": PROMPT,\"memory\":memory })\r\n```\r\nI want the retrieved content from retriever to be reordered by \"source\".\r\nThe following code is used by me to manipulate the retrieved content to achieve my needs.\r\n```\r\nretriever = docsearch.as_retriever(search_kwargs={\"k\": 6})\r\nsearch_result = retriever.get_relevant_documents(quey)\r\ndef sort_paragraphs(paragraphs):\r\n    sorted_paragraphs = sorted(paragraphs, key=lambda x: x.metadata[\"source\"])\r\n    return sorted_paragraphs\r\nparagraphs = sort_paragraphs(search_result)\r\nsorted_paragraphs = \"\"\r\nfor i in paragraphs:\r\n    sorted_paragraphs = sorted_paragraphs + i.page_content + \"\\n\"\r\n```\r\nHow can I define an retriever that I can use in my chain to organize the search content as I wish\r\n\n\n### Motivation\n\nSome custom retrieval logic is required to seek optimal performance.\n\n### Your contribution\n\nI would like to have tutorials related to custom retriever documentation\r\n@hwchase17\r\nhttps://twitter.com/hwchase17/status/1646272240202432512\r\nI think langchain needs to be a custom retriever\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8623/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8623/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8622",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8622/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8622/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8622/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8622",
        "id": 1832892316,
        "node_id": "PR_kwDOIPDwls5W_p5T",
        "number": 8622,
        "title": "Fix Issue #6650: Enable Azure Active Directory token-based auth access for AzureChatOpenAI",
        "user": {
            "login": "vmansolas",
            "id": 89460641,
            "node_id": "MDQ6VXNlcjg5NDYwNjQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/89460641?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vmansolas",
            "html_url": "https://github.com/vmansolas",
            "followers_url": "https://api.github.com/users/vmansolas/followers",
            "following_url": "https://api.github.com/users/vmansolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/vmansolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vmansolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vmansolas/subscriptions",
            "organizations_url": "https://api.github.com/users/vmansolas/orgs",
            "repos_url": "https://api.github.com/users/vmansolas/repos",
            "events_url": "https://api.github.com/users/vmansolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vmansolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-02T10:21:13Z",
        "updated_at": "2023-08-04T03:21:41Z",
        "closed_at": "2023-08-04T03:21:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8622",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8622",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8622.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8622.patch",
            "merged_at": "2023-08-04T03:21:41Z"
        },
        "body": "When using AzureChatOpenAI the openai_api_type defaults to \"azure\". The utils' get_from_dict_or_env() function triggered by the root validator does not look for user provided values from environment variables OPENAI_API_TYPE, so other values like \"azure_ad\" are replaced with \"azure\". This does not allow the use of token-based auth.\r\n\r\nBy removing the \"default\" value, this allows environment variables to be pulled at runtime for the openai_api_type and thus enables the other api_types which are expected to work.\r\n\r\nThis fixes #6650 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8622/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8622/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8621",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8621/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8621/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8621/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8621",
        "id": 1832846164,
        "node_id": "PR_kwDOIPDwls5W_f6A",
        "number": 8621,
        "title": "Feature/fix azureopenai model mappings",
        "user": {
            "login": "jjczopek",
            "id": 865473,
            "node_id": "MDQ6VXNlcjg2NTQ3Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/865473?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jjczopek",
            "html_url": "https://github.com/jjczopek",
            "followers_url": "https://api.github.com/users/jjczopek/followers",
            "following_url": "https://api.github.com/users/jjczopek/following{/other_user}",
            "gists_url": "https://api.github.com/users/jjczopek/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jjczopek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jjczopek/subscriptions",
            "organizations_url": "https://api.github.com/users/jjczopek/orgs",
            "repos_url": "https://api.github.com/users/jjczopek/repos",
            "events_url": "https://api.github.com/users/jjczopek/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jjczopek/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-02T09:53:53Z",
        "updated_at": "2023-08-09T18:39:00Z",
        "closed_at": "2023-08-09T17:56:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8621",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8621",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8621.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8621.patch",
            "merged_at": "2023-08-09T17:56:15Z"
        },
        "body": "This pull request aims to ensure that the `OpenAICallbackHandler` can properly calculate the total cost for Azure OpenAI chat models. The following changes have resolved this issue:\r\n\r\n- The `model_name` has been added to the ChatResult llm_output. Without this, the default values of `gpt-35-turbo` were applied. This was causing the total cost for Azure OpenAI's GPT-4 to be significantly inaccurate.\r\n- A new parameter `model_version` has been added to `AzureChatOpenAI`. Azure does not include the model version in the response. With the addition of `model_name`, this is not a significant issue for GPT-4 models, but it's an issue for GPT-3.5-Turbo. Version 0301 (default) of GPT-3.5-Turbo on Azure has a flat rate of 0.002 per 1k tokens for both prompt and completion. However, version 0613 introduced a split in pricing for prompt and completion tokens.\r\n- The `OpenAICallbackHandler` implementation has been updated with the proper model names, versions, and cost per 1k tokens.\r\n\r\nUnit tests have been added to ensure the functionality works as expected; the Azure ChatOpenAI notebook has been updated with examples.\r\n\r\nMaintainers: @hwchase17, @baskaryan\r\n\r\nTwitter handle: @jjczopek",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8621/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8621/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8620",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8620/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8620/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8620/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8620",
        "id": 1832660433,
        "node_id": "I_kwDOIPDwls5tPC3R",
        "number": 8620,
        "title": "MarkdownHeaderTextSplitter is not a TextSplitter",
        "user": {
            "login": "pprados",
            "id": 204694,
            "node_id": "MDQ6VXNlcjIwNDY5NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/204694?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pprados",
            "html_url": "https://github.com/pprados",
            "followers_url": "https://api.github.com/users/pprados/followers",
            "following_url": "https://api.github.com/users/pprados/following{/other_user}",
            "gists_url": "https://api.github.com/users/pprados/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pprados/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pprados/subscriptions",
            "organizations_url": "https://api.github.com/users/pprados/orgs",
            "repos_url": "https://api.github.com/users/pprados/repos",
            "events_url": "https://api.github.com/users/pprados/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pprados/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-02T08:06:38Z",
        "updated_at": "2023-11-10T07:39:18Z",
        "closed_at": "2023-11-10T07:39:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nThe class `MarkdownHeaderTextSplitter` is not a `TextSplitter`, and must implements all the corresponding methods.\r\n\r\n```\r\nclass MarkdownHeaderTextSplitter:\r\n  ...\r\n```\r\n@hwchase17 @eyurtsev\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nheaders_to_split_on = [\r\n                            (\"#\", \"Header 1\"),\r\n                            (\"##\", \"Header 2\"),\r\n                            (\"###\", \"Header 3\"),\r\n                        ]\r\nsplitter = MarkdownHeaderTextSplitter(\r\n    headers_to_split_on=headers_to_split_on\r\n)\r\nsplitter.split_documents(docs)\n\n### Expected behavior\n\nAccept the call",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8620/reactions",
            "total_count": 3,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8620/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8619",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8619/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8619/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8619/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8619",
        "id": 1832655316,
        "node_id": "I_kwDOIPDwls5tPBnU",
        "number": 8619,
        "title": "Langchain Support for Onnx Llama ",
        "user": {
            "login": "Anindyadeep",
            "id": 58508471,
            "node_id": "MDQ6VXNlcjU4NTA4NDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/58508471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Anindyadeep",
            "html_url": "https://github.com/Anindyadeep",
            "followers_url": "https://api.github.com/users/Anindyadeep/followers",
            "following_url": "https://api.github.com/users/Anindyadeep/following{/other_user}",
            "gists_url": "https://api.github.com/users/Anindyadeep/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Anindyadeep/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Anindyadeep/subscriptions",
            "organizations_url": "https://api.github.com/users/Anindyadeep/orgs",
            "repos_url": "https://api.github.com/users/Anindyadeep/repos",
            "events_url": "https://api.github.com/users/Anindyadeep/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Anindyadeep/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-02T08:03:06Z",
        "updated_at": "2023-11-25T17:35:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nRecently Microsoft have announced their [first iteration of running Llama using Onnx format](https://github.com/microsoft/Llama-2-Onnx/tree/main). Hence it will be awesome if LangChain comes up with an early support for Onnx runtime models.  \r\n\r\n### Motivation\r\n\r\nThere are two reasons for this.\r\n\r\n1. Onnx has always been the standard for running inference in CPU / GPU (Onnx GPU), so this idea of providing LLMs supported for Onnx runtime format will move forward fast\r\n2. Current implementations of running the same is an overhead, LangChain can provide the abstraction easily.\r\n\r\n### Your contribution\r\n\r\nI can try starting out to experiment with this of whether we can implement or not by using the existing LLM interface. However the bottleneck here becomes the .onnx format weights which are to be requested to Microsoft. I filled out the application, waiting for approval. Let me know if we can work on this issue.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8619/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8619/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8618",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8618/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8618/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8618/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8618",
        "id": 1832564675,
        "node_id": "I_kwDOIPDwls5tOrfD",
        "number": 8618,
        "title": "AgentType.OPENAI_FUNCTIONS did not work",
        "user": {
            "login": "zingzheng",
            "id": 12230884,
            "node_id": "MDQ6VXNlcjEyMjMwODg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/12230884?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zingzheng",
            "html_url": "https://github.com/zingzheng",
            "followers_url": "https://api.github.com/users/zingzheng/followers",
            "following_url": "https://api.github.com/users/zingzheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/zingzheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zingzheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zingzheng/subscriptions",
            "organizations_url": "https://api.github.com/users/zingzheng/orgs",
            "repos_url": "https://api.github.com/users/zingzheng/repos",
            "events_url": "https://api.github.com/users/zingzheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zingzheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-02T07:02:13Z",
        "updated_at": "2023-11-08T16:07:05Z",
        "closed_at": "2023-11-08T16:07:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain  0.0.249\r\nPython  3.11.2\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nI follow the egs of openai_functions_agent at\r\n\r\nhttps://python.langchain.com/docs/modules/agents/\r\nhttps://python.langchain.com/docs/modules/agents/agent_types/openai_functions_agent\r\nhttps://python.langchain.com/docs/modules/agents/how_to/custom-functions-with-openai-functions-agent\r\n\r\n```\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.schema import SystemMessage\r\nfrom langchain.agents import OpenAIFunctionsAgent\r\nfrom langchain.agents import tool\r\nfrom langchain.agents import AgentExecutor\r\n\r\nllm = ChatOpenAI(temperature=0)\r\n\r\n@tool\r\ndef get_word_length(word: str) -> int:\r\n    \"\"\"Returns the length of a word.\"\"\"\r\n    import pdb   # never go in here\r\n    pdb.set_trace()\r\n    return len(word)\r\n\r\ntools = [get_word_length]\r\n\r\nsystem_message = SystemMessage(content=\"You are very powerful assistant, but bad at calculating lengths of words\")\r\nprompt = OpenAIFunctionsAgent.create_prompt(system_message=system_message)\r\n\r\nagent = OpenAIFunctionsAgent(llm=llm, tools=tools, prompt=prompt)\r\nagent_executor = AgentExecutor(agent=agent, tools=tools, verbose=True)\r\n\r\nagent_executor.run(\"how many letters in the word educa?\")\r\n```\r\n\r\nBut the openai_functions_agent do not invoke the tool as expected\u3002 \r\n\r\n```\r\n> Entering new AgentExecutor chain...\r\n[{'role': 'system', 'content': 'You are very powerful assistant, but bad at calculating lengths of words'}, {'role': 'user', 'content': 'how many letters in the word educa?'}]\r\nThere are 5 letters in the word \"educa\".\r\n\r\n> Finished chain.\r\n```\r\n\r\nI tried using other tools but they were not used . It seems that OPENAI_FUNCTIONS has bugs\u3002\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nAgentType.OPENAI_FUNCTIONS works as docs show",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8618/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8618/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8617",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8617/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8617/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8617/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8617",
        "id": 1832533355,
        "node_id": "PR_kwDOIPDwls5W-cC2",
        "number": 8617,
        "title": "cast to string when measuring token length",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-02T06:38:13Z",
        "updated_at": "2023-08-02T07:13:00Z",
        "closed_at": "2023-08-02T07:12:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8617",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8617",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8617.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8617.patch",
            "merged_at": "2023-08-02T07:12:59Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8617/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8617/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8616",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8616/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8616/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8616/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8616",
        "id": 1832520775,
        "node_id": "PR_kwDOIPDwls5W-ZV_",
        "number": 8616,
        "title": "Enhance GraphQL Tool to accept Endpoint, Headers and Query Variables at the time of Query Execution",
        "user": {
            "login": "aditi-rajawat",
            "id": 9617694,
            "node_id": "MDQ6VXNlcjk2MTc2OTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9617694?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aditi-rajawat",
            "html_url": "https://github.com/aditi-rajawat",
            "followers_url": "https://api.github.com/users/aditi-rajawat/followers",
            "following_url": "https://api.github.com/users/aditi-rajawat/following{/other_user}",
            "gists_url": "https://api.github.com/users/aditi-rajawat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aditi-rajawat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aditi-rajawat/subscriptions",
            "organizations_url": "https://api.github.com/users/aditi-rajawat/orgs",
            "repos_url": "https://api.github.com/users/aditi-rajawat/repos",
            "events_url": "https://api.github.com/users/aditi-rajawat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aditi-rajawat/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-08-02T06:27:21Z",
        "updated_at": "2023-11-10T22:41:27Z",
        "closed_at": "2023-11-10T22:41:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8616",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8616",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8616.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8616.patch",
            "merged_at": null
        },
        "body": " - Description: The current GraphQL tool requires graphql endpoint and request headers at the time of the tool instantiation which makes the tool less flexible as it could be used only to run queries against a single endpoint and using the same headers. This pull-request contains changes to allow using a different graphql endpoint and request headers at the time of the query execution making the tool dynamic. Secondly, this pull-request further enhances the GraphQL tool by accepting query variables besides the GraphQL query. \r\n\r\n - Issue: https://github.com/hwchase17/langchainjs/issues/1713\r\n \r\n  - Dependencies: None\r\n  \r\n  - Tag maintainer: @hinthornw\r\n  \r\n  - Twitter handle: None\r\n \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8616/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8616/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8614",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8614/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8614/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8614/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8614",
        "id": 1832461961,
        "node_id": "PR_kwDOIPDwls5W-Myy",
        "number": 8614,
        "title": "fix: calling the openai functions agent with an empty tool list crashes",
        "user": {
            "login": "willbackslash",
            "id": 9044534,
            "node_id": "MDQ6VXNlcjkwNDQ1MzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9044534?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/willbackslash",
            "html_url": "https://github.com/willbackslash",
            "followers_url": "https://api.github.com/users/willbackslash/followers",
            "following_url": "https://api.github.com/users/willbackslash/following{/other_user}",
            "gists_url": "https://api.github.com/users/willbackslash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/willbackslash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/willbackslash/subscriptions",
            "organizations_url": "https://api.github.com/users/willbackslash/orgs",
            "repos_url": "https://api.github.com/users/willbackslash/repos",
            "events_url": "https://api.github.com/users/willbackslash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/willbackslash/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-02T05:32:04Z",
        "updated_at": "2023-11-13T06:17:35Z",
        "closed_at": "2023-11-13T06:17:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8614",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8614",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8614.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8614.patch",
            "merged_at": null
        },
        "body": "Fixes Issue https://github.com/langchain-ai/langchain/issues/8080\r\n\r\nNo new dependencies have been added.\r\n\r\n@baskaryan\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8614/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8614/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8613",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8613/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8613/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8613/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8613",
        "id": 1832449850,
        "node_id": "I_kwDOIPDwls5tOPc6",
        "number": 8613,
        "title": "Invalid model when use chain",
        "user": {
            "login": "cong-bamboo",
            "id": 132864157,
            "node_id": "U_kgDOB-tYnQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/132864157?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cong-bamboo",
            "html_url": "https://github.com/cong-bamboo",
            "followers_url": "https://api.github.com/users/cong-bamboo/followers",
            "following_url": "https://api.github.com/users/cong-bamboo/following{/other_user}",
            "gists_url": "https://api.github.com/users/cong-bamboo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cong-bamboo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cong-bamboo/subscriptions",
            "organizations_url": "https://api.github.com/users/cong-bamboo/orgs",
            "repos_url": "https://api.github.com/users/cong-bamboo/repos",
            "events_url": "https://api.github.com/users/cong-bamboo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cong-bamboo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-08-02T05:17:12Z",
        "updated_at": "2023-08-02T07:13:12Z",
        "closed_at": "2023-08-02T07:13:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain: 0.0.246\r\npython: 3.11\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI want to get a summary from chat history between ai-bot and user.\r\n- ChatOpenAI model gpt-3.5-turbo\r\n- LLMChain\r\nBut got an Error \"openai.error.InvalidRequestError: This is a chat model and not supported in the v1/completions endpoint. Did you mean to use v1/chat/completions?\"\r\n\r\n\r\nMy Code\r\n`\r\n    memory = get_memory_from_chat_prompt(messages)\r\n    prompt = PromptTemplate(\r\n        input_variables=SUMMARIZE_INPUT_VARIABLES,\r\n        template=SUMMARIZE_CHAT_TEMPLATE\r\n    )\r\n    llm = ChatOpenAI(temperature=.1, model_name='gpt-3.5-turbo', max_tokens=1000)\r\n    human_input=\"\"\"Please provide a summary. You can include the key points or main findings in a concise manner.\"\"\"\r\n    answer_chain = LLMChain(llm=llm, prompt=prompt, memory=memory)\r\n    result = answer_chain.predict(human_input=human_input)\r\n`\r\nError:\r\n`\r\nFile \"/Users/congle/working/bamboo/bot/app/package/aianswer.py\", line 78, in get_summarize_from_messages\r\n    result = answer_chain.predict(human_input=human_input)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/langchain/chains/llm.py\", line 252, in predict\r\n    return self(kwargs, callbacks=callbacks)[self.output_key]\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/langchain/chains/base.py\", line 260, in __call__\r\n    final_outputs: Dict[str, Any] = self.prep_outputs(\r\n                                    ^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/langchain/chains/base.py\", line 354, in prep_outputs\r\n    self.memory.save_context(inputs, outputs)\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/langchain/memory/summary_buffer.py\", line 60, in save_context\r\n    self.prune()\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/langchain/memory/summary_buffer.py\", line 71, in prune\r\n    self.moving_summary_buffer = self.predict_new_summary(\r\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/langchain/memory/summary.py\", line 37, in predict_new_summary\r\n    return chain.predict(summary=existing_summary, new_lines=new_lines)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/langchain/chains/llm.py\", line 252, in predict\r\n    return self(kwargs, callbacks=callbacks)[self.output_key]\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/langchain/chains/base.py\", line 258, in __call__\r\n    raise e\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/langchain/chains/base.py\", line 252, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/langchain/chains/llm.py\", line 92, in _call\r\n    response = self.generate([inputs], run_manager=run_manager)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/langchain/chains/llm.py\", line 102, in generate\r\n    return self.llm.generate_prompt(\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/langchain/llms/base.py\", line 451, in generate_prompt\r\n    return self.generate(prompt_strings, stop=stop, callbacks=callbacks, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/langchain/llms/base.py\", line 582, in generate\r\n    output = self._generate_helper(\r\n             ^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/langchain/llms/base.py\", line 488, in _generate_helper\r\n    raise e\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/langchain/llms/base.py\", line 475, in _generate_helper\r\n    self._generate(\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/langchain/llms/openai.py\", line 400, in _generate\r\n    response = completion_with_retry(\r\n               ^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/langchain/llms/openai.py\", line 116, in completion_with_retry\r\n    return _completion_with_retry(**kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/tenacity/__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n           ^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/tenacity/__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/tenacity/__init__.py\", line 314, in iter\r\n    return fut.result()\r\n           ^^^^^^^^^^^^\r\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.4_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/concurrent/futures/_base.py\", line 449, in result\r\n    return self.__get_result()\r\n           ^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.4_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/concurrent/futures/_base.py\", line 401, in __get_result\r\n    raise self._exception\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/tenacity/__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n             ^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/langchain/llms/openai.py\", line 114, in _completion_with_retry\r\n    return llm.client.create(**kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/openai/api_resources/completion.py\", line 25, in create\r\n    return super().create(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 153, in create\r\n    response, _, api_key = requestor.request(\r\n                           ^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/openai/api_requestor.py\", line 298, in request\r\n    resp, got_stream = self._interpret_response(result, stream)\r\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/openai/api_requestor.py\", line 700, in _interpret_response\r\n    self._interpret_response_line(\r\n  File \"/Users/congle/.local/share/virtualenvs/bot-f4x5-mrU/lib/python3.11/site-packages/openai/api_requestor.py\", line 763, in _interpret_response_line\r\n    raise self.handle_error_response(\r\nopenai.error.InvalidRequestError: This is a chat model and not supported in the v1/completions endpoint. Did you mean to use v1/chat/completions?\r\n\r\n`\n\n### Expected behavior\n\nI expect to get summary from chat history by model gpt-3.5. Thanks for your help!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8613/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8613/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8612",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8612/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8612/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8612/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8612",
        "id": 1832435503,
        "node_id": "PR_kwDOIPDwls5W-HJT",
        "number": 8612,
        "title": "Redis metadata filtering and specification, index customization",
        "user": {
            "login": "Spartee",
            "id": 13009163,
            "node_id": "MDQ6VXNlcjEzMDA5MTYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/13009163?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Spartee",
            "html_url": "https://github.com/Spartee",
            "followers_url": "https://api.github.com/users/Spartee/followers",
            "following_url": "https://api.github.com/users/Spartee/following{/other_user}",
            "gists_url": "https://api.github.com/users/Spartee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Spartee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Spartee/subscriptions",
            "organizations_url": "https://api.github.com/users/Spartee/orgs",
            "repos_url": "https://api.github.com/users/Spartee/repos",
            "events_url": "https://api.github.com/users/Spartee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Spartee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-02T04:58:55Z",
        "updated_at": "2023-11-13T17:39:13Z",
        "closed_at": "2023-08-26T00:22:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8612",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8612",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8612.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8612.patch",
            "merged_at": "2023-08-26T00:22:51Z"
        },
        "body": "### Description\r\n\r\nThe previous Redis implementation did not allow for the user to specify the index configuration (i.e. changing the underlying algorithm) or add additional metadata to use for querying (i.e. hybrid or \"filtered\" search).\r\n\r\nThis PR introduces the ability to specify custom index attributes and metadata attributes as well as use that metadata in filtered queries. Overall, more structure was introduced to the Redis implementation that should allow for easier maintainability moving forward.\r\n\r\n\r\n### Example data\r\n\r\nSuppose we have the following sample data\r\n\r\n```python\r\n\r\nmetadata = [\r\n    {\r\n        \"user\": \"john\",\r\n        \"age\": 18,\r\n        \"job\": \"engineer\",\r\n        \"credit_score\": \"high\",\r\n    },\r\n    {\r\n        \"user\": \"derrick\",\r\n        \"age\": 14,\r\n        \"job\": \"doctor\",\r\n        \"credit_score\": \"low\",\r\n    },\r\n    {\r\n        \"user\": \"nancy\",\r\n        \"age\": 94,\r\n        \"job\": \"doctor\",\r\n        \"credit_score\": \"high\",\r\n    },\r\n    {\r\n        \"user\": \"tyler\",\r\n        \"age\": 100,\r\n        \"job\": \"engineer\",\r\n        \"credit_score\": \"high\",\r\n    },\r\n    {\r\n        \"user\": \"tim\",\r\n        \"age\": 12,\r\n        \"job\": \"dermatologist\",\r\n        \"credit_score\": \"high\",\r\n    },\r\n    {\r\n        \"user\": \"taimur\",\r\n        \"age\": 15,\r\n        \"job\": \"CEO\",\r\n        \"credit_score\": \"low\",\r\n    },\r\n    {\r\n        \"user\": \"joe\",\r\n        \"age\": 35,\r\n        \"job\": \"dentist\",\r\n        \"credit_score\": \"medium\",\r\n    },\r\n]\r\n\r\ntexts = [\"foo\", \"foo\", \"foo\", \"foo\", \"bar\", \"bar\", \"bar\"]\r\n\r\n```\r\n\r\n# New Features\r\n\r\nThe following features are now available with the Redis integration into Langchain\r\n\r\n## Index schema generation\r\n\r\nThe schema for the index will now be automatically generated if not specified by the user. For example, the data above has the multiple metadata categories. The the following example\r\n\r\n```python\r\n\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.vectorstores.redis import Redis\r\n\r\nembeddings = OpenAIEmbeddings()\r\n\r\n\r\nrds, keys = Redis.from_texts_return_keys(\r\n    texts,\r\n    embeddings,\r\n    metadatas=metadata,\r\n    redis_url=\"redis://localhost:6379\",\r\n    index_name=\"users\"\r\n)\r\n```\r\n\r\nLoading the data in through this and the other ``from_documents`` and ``from_texts`` methods will now generate index schema in Redis like the following.\r\n\r\nview index schema with the ``redisvl`` tool. [link](redisvl.com)\r\n\r\n```bash\r\n$ rvl index info -i users\r\n```\r\n\r\n\r\nIndex Information:\r\n| Index Name   | Storage Type   | Prefixes      | Index Options   |   Indexing |\r\n|--------------|----------------|---------------|-----------------|------------|\r\n| users        | HASH           | ['doc:users'] | []              |          0 |\r\nIndex Fields:\r\n| Name           | Attribute      | Type    | Field Option   |   Option Value |\r\n|----------------|----------------|---------|----------------|----------------|\r\n| user           | user           | TEXT    | WEIGHT         |              1 |\r\n| job            | job            | TEXT    | WEIGHT         |              1 |\r\n| credit_score   | credit_score   | TEXT    | WEIGHT         |              1 |\r\n| content        | content        | TEXT    | WEIGHT         |              1 |\r\n| age            | age            | NUMERIC |                |                |\r\n| content_vector | content_vector | VECTOR  |                |                |\r\n\r\n\r\n### Custom Metadata specification\r\n\r\nThe metadata schema generation has the following rules\r\n1. All text fields are indexed as text fields.\r\n2. All numeric fields are index as numeric fields.\r\n\r\nIf you would like to have a text field as a tag field, users can specify overrides like the following for the example data\r\n\r\n```python\r\n\r\n# this can also be a path to a yaml file\r\nindex_schema = {\r\n    \"text\": [{\"name\": \"user\"}, {\"name\": \"job\"}],\r\n    \"tag\": [{\"name\": \"credit_score\"}],\r\n    \"numeric\": [{\"name\": \"age\"}],\r\n}\r\n\r\nrds, keys = Redis.from_texts_return_keys(\r\n    texts,\r\n    embeddings,\r\n    metadatas=metadata,\r\n    redis_url=\"redis://localhost:6379\",\r\n    index_name=\"users\"\r\n)\r\n```\r\nThis will change the index specification to \r\n\r\nIndex Information:\r\n| Index Name   | Storage Type   | Prefixes       | Index Options   |   Indexing |\r\n|--------------|----------------|----------------|-----------------|------------|\r\n| users2       | HASH           | ['doc:users2'] | []              |          0 |\r\nIndex Fields:\r\n| Name           | Attribute      | Type    | Field Option   | Option Value   |\r\n|----------------|----------------|---------|----------------|----------------|\r\n| user           | user           | TEXT    | WEIGHT         | 1              |\r\n| job            | job            | TEXT    | WEIGHT         | 1              |\r\n| content        | content        | TEXT    | WEIGHT         | 1              |\r\n| credit_score   | credit_score   | TAG     | SEPARATOR      | ,              |\r\n| age            | age            | NUMERIC |                |                |\r\n| content_vector | content_vector | VECTOR  |                |                |\r\n\r\n\r\nand throw a warning to the user (log output) that the generated schema does not match the specified schema.\r\n\r\n```text\r\nindex_schema does not match generated schema from metadata.\r\nindex_schema: {'text': [{'name': 'user'}, {'name': 'job'}], 'tag': [{'name': 'credit_score'}], 'numeric': [{'name': 'age'}]}\r\ngenerated_schema: {'text': [{'name': 'user'}, {'name': 'job'}, {'name': 'credit_score'}], 'numeric': [{'name': 'age'}]}\r\n```\r\n\r\nAs long as this is on purpose,  this is fine.\r\n\r\nThe schema can be defined as a yaml file or a dictionary\r\n\r\n```yaml\r\n\r\ntext:\r\n  - name: user\r\n  - name: job\r\ntag:\r\n  - name: credit_score\r\nnumeric:\r\n  - name: age\r\n\r\n```\r\n\r\nand you pass in a path like\r\n\r\n```python\r\nrds, keys = Redis.from_texts_return_keys(\r\n    texts,\r\n    embeddings,\r\n    metadatas=metadata,\r\n    redis_url=\"redis://localhost:6379\",\r\n    index_name=\"users3\",\r\n    index_schema=Path(\"sample1.yml\").resolve()\r\n)\r\n```\r\n\r\nWhich will create the same schema as defined in the dictionary example\r\n\r\n\r\nIndex Information:\r\n| Index Name   | Storage Type   | Prefixes       | Index Options   |   Indexing |\r\n|--------------|----------------|----------------|-----------------|------------|\r\n| users3       | HASH           | ['doc:users3'] | []              |          0 |\r\nIndex Fields:\r\n| Name           | Attribute      | Type    | Field Option   | Option Value   |\r\n|----------------|----------------|---------|----------------|----------------|\r\n| user           | user           | TEXT    | WEIGHT         | 1              |\r\n| job            | job            | TEXT    | WEIGHT         | 1              |\r\n| content        | content        | TEXT    | WEIGHT         | 1              |\r\n| credit_score   | credit_score   | TAG     | SEPARATOR      | ,              |\r\n| age            | age            | NUMERIC |                |                |\r\n| content_vector | content_vector | VECTOR  |                |                |\r\n\r\n\r\n\r\n### Custom Vector Indexing Schema\r\n\r\nUsers with large use cases may want to change how they formulate the vector index created by Langchain\r\n\r\nTo utilize all the features of Redis for vector database use cases like this, you can now do the following to pass in index attribute modifiers like changing the indexing algorithm to HNSW.\r\n\r\n```python\r\nvector_schema = {\r\n    \"algorithm\": \"HNSW\"\r\n}\r\n\r\nrds, keys = Redis.from_texts_return_keys(\r\n    texts,\r\n    embeddings,\r\n    metadatas=metadata,\r\n    redis_url=\"redis://localhost:6379\",\r\n    index_name=\"users3\",\r\n    vector_schema=vector_schema\r\n)\r\n\r\n```\r\n\r\nA more complex example may look like\r\n\r\n```python\r\nvector_schema = {\r\n    \"algorithm\": \"HNSW\",\r\n    \"ef_construction\": 200,\r\n    \"ef_runtime\": 20\r\n}\r\n\r\nrds, keys = Redis.from_texts_return_keys(\r\n    texts,\r\n    embeddings,\r\n    metadatas=metadata,\r\n    redis_url=\"redis://localhost:6379\",\r\n    index_name=\"users3\",\r\n    vector_schema=vector_schema\r\n)\r\n```\r\n\r\nAll names correspond to the arguments you would set if using Redis-py or RedisVL. (put in doc link later)\r\n\r\n\r\n### Better Querying\r\n\r\nBoth vector queries and Range (limit) queries are now available and metadata is returned by default. The outputs are shown.\r\n\r\n```python\r\n>>> query = \"foo\"\r\n>>> results = rds.similarity_search(query, k=1)\r\n>>> print(results)\r\n[Document(page_content='foo', metadata={'user': 'derrick', 'job': 'doctor', 'credit_score': 'low', 'age': '14', 'id': 'doc:users:657a47d7db8b447e88598b83da879b9d', 'score': '7.15255737305e-07'})]\r\n\r\n>>> results = rds.similarity_search_with_score(query, k=1, return_metadata=False)\r\n>>> print(results) # no metadata, but with scores\r\n[(Document(page_content='foo', metadata={}), 7.15255737305e-07)]\r\n\r\n>>> results = rds.similarity_search_limit_score(query, k=6, score_threshold=0.0001)\r\n>>> print(len(results)) # range query (only above threshold even if k is higher)\r\n4\r\n```\r\n\r\n### Custom metadata filtering\r\n\r\nA big advantage of Redis in this space is being able to do filtering on data stored alongside the vector itself. With the example above, the following is now possible in langchain. The equivalence operators are overridden to describe a new expression language that mimic that of [redisvl](redisvl.com). This allows for arbitrarily long sequences of filters that resemble SQL commands that can be used directly with vector queries and range queries.\r\n\r\nThere are two interfaces by which to do so and both are shown. \r\n\r\n```python\r\n\r\n>>> from langchain.vectorstores.redis import RedisFilter, RedisNum, RedisText\r\n\r\n>>> age_filter = RedisFilter.num(\"age\") > 18\r\n>>> age_filter = RedisNum(\"age\") > 18 # equivalent\r\n>>> results = rds.similarity_search(query, filter=age_filter)\r\n>>> print(len(results))\r\n3\r\n\r\n>>> job_filter = RedisFilter.text(\"job\") == \"engineer\" \r\n>>> job_filter = RedisText(\"job\") == \"engineer\" # equivalent\r\n>>> results = rds.similarity_search(query, filter=job_filter)\r\n>>> print(len(results))\r\n2\r\n\r\n# fuzzy match text search\r\n>>> job_filter = RedisFilter.text(\"job\") % \"eng*\"\r\n>>> results = rds.similarity_search(query, filter=job_filter)\r\n>>> print(len(results))\r\n2\r\n\r\n\r\n# combined filters (AND)\r\n>>> combined = age_filter & job_filter\r\n>>> results = rds.similarity_search(query, filter=combined)\r\n>>> print(len(results))\r\n1\r\n\r\n# combined filters (OR)\r\n>>> combined = age_filter | job_filter\r\n>>> results = rds.similarity_search(query, filter=combined)\r\n>>> print(len(results))\r\n4\r\n```\r\n\r\nAll the above filter results can be checked against the data above.\r\n\r\n\r\n\r\n### TODO\r\n\r\n- [x] more tests\r\n- [x] docstrings\r\n- [x] docs\r\n\r\n### Other\r\n\r\n  - Issue: #3967 \r\n  - Dependencies: No added dependencies\r\n  - Tag maintainer: @hwchase17 @baskaryan @rlancemartin \r\n  - Twitter handle: @sampartee\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8612/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8612/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8610",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8610/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8610/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8610/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8610",
        "id": 1832348591,
        "node_id": "PR_kwDOIPDwls5W90tk",
        "number": 8610,
        "title": "improve the performance of base.py",
        "user": {
            "login": "mzamini92",
            "id": 32536264,
            "node_id": "MDQ6VXNlcjMyNTM2MjY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/32536264?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzamini92",
            "html_url": "https://github.com/mzamini92",
            "followers_url": "https://api.github.com/users/mzamini92/followers",
            "following_url": "https://api.github.com/users/mzamini92/following{/other_user}",
            "gists_url": "https://api.github.com/users/mzamini92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mzamini92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mzamini92/subscriptions",
            "organizations_url": "https://api.github.com/users/mzamini92/orgs",
            "repos_url": "https://api.github.com/users/mzamini92/repos",
            "events_url": "https://api.github.com/users/mzamini92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mzamini92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-02T03:07:16Z",
        "updated_at": "2023-09-28T00:36:03Z",
        "closed_at": "2023-09-28T00:36:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8610",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8610",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8610.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8610.patch",
            "merged_at": "2023-09-28T00:36:03Z"
        },
        "body": "This removes the use of the intermediate df list and directly concatenates the dataframes if path is a list of strings. The pd.concat function combines the dataframes efficiently, making it faster and more memory-efficient compared to appending dataframes to a list.\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8610/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8610/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8609",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8609/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8609/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8609/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8609",
        "id": 1832268588,
        "node_id": "PR_kwDOIPDwls5W9jpA",
        "number": 8609,
        "title": "[Opensearch] : Fix the service validation in http_auth",
        "user": {
            "login": "naveentatikonda",
            "id": 89161683,
            "node_id": "MDQ6VXNlcjg5MTYxNjgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/89161683?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naveentatikonda",
            "html_url": "https://github.com/naveentatikonda",
            "followers_url": "https://api.github.com/users/naveentatikonda/followers",
            "following_url": "https://api.github.com/users/naveentatikonda/following{/other_user}",
            "gists_url": "https://api.github.com/users/naveentatikonda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/naveentatikonda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/naveentatikonda/subscriptions",
            "organizations_url": "https://api.github.com/users/naveentatikonda/orgs",
            "repos_url": "https://api.github.com/users/naveentatikonda/repos",
            "events_url": "https://api.github.com/users/naveentatikonda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/naveentatikonda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-02T01:35:58Z",
        "updated_at": "2023-08-02T08:16:38Z",
        "closed_at": "2023-08-02T08:16:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8609",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8609",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8609.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8609.patch",
            "merged_at": "2023-08-02T08:16:38Z"
        },
        "body": "### Description\r\nOpenSearch supports validation using both Master Credentials (Username and password) and IAM. For Master Credentials users will not pass the argument `service` in `http_auth` and the existing code will break. To fix this, I have updated the condition to check if service attribute is present in http_auth before accessing it. \r\n\r\n### Maintainers\r\n@baskaryan @navneet1v",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8609/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8609/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8607",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8607/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8607/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8607/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8607",
        "id": 1832213310,
        "node_id": "PR_kwDOIPDwls5W9X0X",
        "number": 8607,
        "title": "Enterprise support form in airtable",
        "user": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-02T00:28:35Z",
        "updated_at": "2023-08-02T16:50:01Z",
        "closed_at": "2023-08-02T16:50:00Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8607",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8607",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8607.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8607.patch",
            "merged_at": "2023-08-02T16:50:00Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8607/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8607/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8606",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8606/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8606/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8606/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8606",
        "id": 1832193854,
        "node_id": "PR_kwDOIPDwls5W9Ton",
        "number": 8606,
        "title": "Re-structure agent docs",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-02T00:01:41Z",
        "updated_at": "2023-08-16T22:02:57Z",
        "closed_at": "2023-08-16T22:02:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8606",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8606",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8606.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8606.patch",
            "merged_at": null
        },
        "body": "1/ Update overview page for agents\r\n2/ Move agent docs from use-cases to modules and consolidate there",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8606/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8606/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8605",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8605/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8605/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8605/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8605",
        "id": 1832186729,
        "node_id": "PR_kwDOIPDwls5W9SEI",
        "number": 8605,
        "title": "fix issue #8556 by restructure the metadata links",
        "user": {
            "login": "cheeseQI",
            "id": 45248933,
            "node_id": "MDQ6VXNlcjQ1MjQ4OTMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/45248933?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cheeseQI",
            "html_url": "https://github.com/cheeseQI",
            "followers_url": "https://api.github.com/users/cheeseQI/followers",
            "following_url": "https://api.github.com/users/cheeseQI/following{/other_user}",
            "gists_url": "https://api.github.com/users/cheeseQI/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cheeseQI/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cheeseQI/subscriptions",
            "organizations_url": "https://api.github.com/users/cheeseQI/orgs",
            "repos_url": "https://api.github.com/users/cheeseQI/repos",
            "events_url": "https://api.github.com/users/cheeseQI/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cheeseQI/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-01T23:52:09Z",
        "updated_at": "2023-08-12T20:45:46Z",
        "closed_at": "2023-08-12T20:45:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8605",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8605",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8605.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8605.patch",
            "merged_at": null
        },
        "body": "  - Description: restructure the metadata links from {str, list}, and flatten it to {str, str} which can be supported by Chroma vector store. The former format for links loaded from markdown file is not supported by Chroma. \r\n  - Issue: the issue #8556\r\n  - Tag maintainer: @rlancemartin",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8605/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8605/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8604",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8604/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8604/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8604/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8604",
        "id": 1832172196,
        "node_id": "PR_kwDOIPDwls5W9O4o",
        "number": 8604,
        "title": "normalized openai embeddings embed_query",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-01T23:33:27Z",
        "updated_at": "2023-11-03T19:16:01Z",
        "closed_at": "2023-08-02T00:12:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8604",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8604",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8604.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8604.patch",
            "merged_at": "2023-08-02T00:12:11Z"
        },
        "body": "we weren't normalizing when embedding queries",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8604/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8604/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8603",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8603/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8603/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8603/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8603",
        "id": 1832143943,
        "node_id": "PR_kwDOIPDwls5W9Iwm",
        "number": 8603,
        "title": " Issue #8584 Fix GPTCache with ChatOpenAI",
        "user": {
            "login": "kdcokenny",
            "id": 99611484,
            "node_id": "U_kgDOBe_zXA",
            "avatar_url": "https://avatars.githubusercontent.com/u/99611484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kdcokenny",
            "html_url": "https://github.com/kdcokenny",
            "followers_url": "https://api.github.com/users/kdcokenny/followers",
            "following_url": "https://api.github.com/users/kdcokenny/following{/other_user}",
            "gists_url": "https://api.github.com/users/kdcokenny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kdcokenny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kdcokenny/subscriptions",
            "organizations_url": "https://api.github.com/users/kdcokenny/orgs",
            "repos_url": "https://api.github.com/users/kdcokenny/repos",
            "events_url": "https://api.github.com/users/kdcokenny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kdcokenny/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-01T23:00:31Z",
        "updated_at": "2023-08-16T20:02:10Z",
        "closed_at": "2023-08-16T20:02:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8603",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8603",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8603.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8603.patch",
            "merged_at": null
        },
        "body": "Fixes Issue #8584 \r\n\r\nNo new dependencies have been added.\r\n\r\n@baskaryan \r\n\r\n\r\nAlso, I would like to ask, what's the process for getting the `expert` role on the Langchain discord and would I possibly qualify? Thanks.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8603/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8603/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8602",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8602/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8602/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8602/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8602",
        "id": 1832119156,
        "node_id": "PR_kwDOIPDwls5W9DVm",
        "number": 8602,
        "title": "feat: Add Amazon Textract as document loader",
        "user": {
            "login": "schadem",
            "id": 45048633,
            "node_id": "MDQ6VXNlcjQ1MDQ4NjMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/45048633?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schadem",
            "html_url": "https://github.com/schadem",
            "followers_url": "https://api.github.com/users/schadem/followers",
            "following_url": "https://api.github.com/users/schadem/following{/other_user}",
            "gists_url": "https://api.github.com/users/schadem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schadem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schadem/subscriptions",
            "organizations_url": "https://api.github.com/users/schadem/orgs",
            "repos_url": "https://api.github.com/users/schadem/repos",
            "events_url": "https://api.github.com/users/schadem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schadem/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-01T22:32:17Z",
        "updated_at": "2023-08-02T20:08:28Z",
        "closed_at": "2023-08-02T20:08:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8602",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8602",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8602.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8602.patch",
            "merged_at": null
        },
        "body": "Description: Adding support for [Amazon Textract](https://aws.amazon.com/textract/) as a PDF document loader\r\n\r\n\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally. -> checked and worked fine\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8602/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8602/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8601",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8601/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8601/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8601/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8601",
        "id": 1832098475,
        "node_id": "PR_kwDOIPDwls5W8-63",
        "number": 8601,
        "title": "Add firestore_client param to FirestoreChatMessageHistory if caller already has one; also lets them specify GCP project, etc.",
        "user": {
            "login": "wnmurphy",
            "id": 8880923,
            "node_id": "MDQ6VXNlcjg4ODA5MjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8880923?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wnmurphy",
            "html_url": "https://github.com/wnmurphy",
            "followers_url": "https://api.github.com/users/wnmurphy/followers",
            "following_url": "https://api.github.com/users/wnmurphy/following{/other_user}",
            "gists_url": "https://api.github.com/users/wnmurphy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wnmurphy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wnmurphy/subscriptions",
            "organizations_url": "https://api.github.com/users/wnmurphy/orgs",
            "repos_url": "https://api.github.com/users/wnmurphy/repos",
            "events_url": "https://api.github.com/users/wnmurphy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wnmurphy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-01T22:08:54Z",
        "updated_at": "2023-08-01T22:42:14Z",
        "closed_at": "2023-08-01T22:42:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8601",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8601",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8601.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8601.patch",
            "merged_at": "2023-08-01T22:42:13Z"
        },
        "body": "Existing implementation requires that you install `firebase-admin` package, and prevents you from using an existing Firestore client instance if available.\r\n\r\nThis adds optional `firestore_client` param to `FirestoreChatMessageHistory`, so users can just use their existing client/settings. If not passed, existing logic executes to initialize a `firestore_client`.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8601/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8601/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8600",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8600/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8600/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8600/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8600",
        "id": 1832098185,
        "node_id": "PR_kwDOIPDwls5W8-25",
        "number": 8600,
        "title": "[OpenSearch] : Fix AOSS Initialization",
        "user": {
            "login": "naveentatikonda",
            "id": 89161683,
            "node_id": "MDQ6VXNlcjg5MTYxNjgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/89161683?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naveentatikonda",
            "html_url": "https://github.com/naveentatikonda",
            "followers_url": "https://api.github.com/users/naveentatikonda/followers",
            "following_url": "https://api.github.com/users/naveentatikonda/following{/other_user}",
            "gists_url": "https://api.github.com/users/naveentatikonda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/naveentatikonda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/naveentatikonda/subscriptions",
            "organizations_url": "https://api.github.com/users/naveentatikonda/orgs",
            "repos_url": "https://api.github.com/users/naveentatikonda/repos",
            "events_url": "https://api.github.com/users/naveentatikonda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/naveentatikonda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-01T22:08:33Z",
        "updated_at": "2023-08-01T22:33:52Z",
        "closed_at": "2023-08-01T22:33:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8600",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8600",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8600.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8600.patch",
            "merged_at": "2023-08-01T22:33:51Z"
        },
        "body": "### Description\r\nThis PR fixes the AOSS Initialization in Opensearch.\r\n\r\n### Maintainers\r\n@rlancemartin, @eyurtsev, @navneet1v",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8600/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8600/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8599",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8599/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8599/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8599/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8599",
        "id": 1832094938,
        "node_id": "PR_kwDOIPDwls5W8-L2",
        "number": 8599,
        "title": "LlamaCpp, add n_gqa flag to support Llama2",
        "user": {
            "login": "zacps",
            "id": 9827696,
            "node_id": "MDQ6VXNlcjk4Mjc2OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zacps",
            "html_url": "https://github.com/zacps",
            "followers_url": "https://api.github.com/users/zacps/followers",
            "following_url": "https://api.github.com/users/zacps/following{/other_user}",
            "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zacps/subscriptions",
            "organizations_url": "https://api.github.com/users/zacps/orgs",
            "repos_url": "https://api.github.com/users/zacps/repos",
            "events_url": "https://api.github.com/users/zacps/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zacps/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-01T22:04:57Z",
        "updated_at": "2023-08-04T14:05:52Z",
        "closed_at": "2023-08-04T14:05:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8599",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8599",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8599.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8599.patch",
            "merged_at": null
        },
        "body": "To load and run llama 2 70b models `n_gqa` must be set to 8. For other models it can be unset (and defaults to 1). Tested with both llama 2 70b (set) and llama 2 13b (unset) and both work.\r\n\r\nMaintainer guess @hwchase17 \r\n\r\nFixes https://github.com/langchain-ai/langchain/issues/8486",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8599/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8599/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8598",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8598/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8598/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8598/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8598",
        "id": 1832068716,
        "node_id": "PR_kwDOIPDwls5W84iW",
        "number": 8598,
        "title": "Fixed source key name for docugami loader",
        "user": {
            "login": "tjaffri",
            "id": 749277,
            "node_id": "MDQ6VXNlcjc0OTI3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/749277?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjaffri",
            "html_url": "https://github.com/tjaffri",
            "followers_url": "https://api.github.com/users/tjaffri/followers",
            "following_url": "https://api.github.com/users/tjaffri/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjaffri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjaffri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjaffri/subscriptions",
            "organizations_url": "https://api.github.com/users/tjaffri/orgs",
            "repos_url": "https://api.github.com/users/tjaffri/repos",
            "events_url": "https://api.github.com/users/tjaffri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjaffri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-01T21:38:15Z",
        "updated_at": "2023-09-17T18:54:21Z",
        "closed_at": "2023-08-23T18:24:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8598",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8598",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8598.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8598.patch",
            "merged_at": "2023-08-23T18:24:55Z"
        },
        "body": "The Docugami loader was not returning the source metadata key. This was triggering this exception when used with retrievers, per https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/schema/prompt_template.py#L193C1-L195C41\r\n\r\nThe fix is simple and just updates the metadata key name for the document each chunk is sourced from, from \"name\" to \"source\" as expected.\r\n\r\nI tested by running the python notebook that has an end to end scenario in it.\r\n\r\nTagging DataLoader maintainers @rlancemartin @eyurtsev ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8598/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8598/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8597",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8597/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8597/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8597/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8597",
        "id": 1832042184,
        "node_id": "PR_kwDOIPDwls5W8y41",
        "number": 8597,
        "title": "Add memory to sql chain",
        "user": {
            "login": "keenborder786",
            "id": 45242107,
            "node_id": "MDQ6VXNlcjQ1MjQyMTA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/45242107?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/keenborder786",
            "html_url": "https://github.com/keenborder786",
            "followers_url": "https://api.github.com/users/keenborder786/followers",
            "following_url": "https://api.github.com/users/keenborder786/following{/other_user}",
            "gists_url": "https://api.github.com/users/keenborder786/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/keenborder786/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/keenborder786/subscriptions",
            "organizations_url": "https://api.github.com/users/keenborder786/orgs",
            "repos_url": "https://api.github.com/users/keenborder786/repos",
            "events_url": "https://api.github.com/users/keenborder786/events{/privacy}",
            "received_events_url": "https://api.github.com/users/keenborder786/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-08-01T21:12:29Z",
        "updated_at": "2023-10-03T19:04:40Z",
        "closed_at": "2023-10-03T19:04:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8597",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8597",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8597.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8597.patch",
            "merged_at": "2023-10-03T19:04:39Z"
        },
        "body": "continuation of PR #8550\r\n\r\n@hwchase17 please see and merge. And also close the PR #8550.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8597/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8597/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8596",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8596/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8596/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8596/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8596",
        "id": 1832006554,
        "node_id": "PR_kwDOIPDwls5W8rDv",
        "number": 8596,
        "title": "docs: update `unstructured` install instructions",
        "user": {
            "login": "MthwRobinson",
            "id": 1635179,
            "node_id": "MDQ6VXNlcjE2MzUxNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1635179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MthwRobinson",
            "html_url": "https://github.com/MthwRobinson",
            "followers_url": "https://api.github.com/users/MthwRobinson/followers",
            "following_url": "https://api.github.com/users/MthwRobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/MthwRobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MthwRobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MthwRobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/MthwRobinson/orgs",
            "repos_url": "https://api.github.com/users/MthwRobinson/repos",
            "events_url": "https://api.github.com/users/MthwRobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MthwRobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-01T20:47:01Z",
        "updated_at": "2023-08-01T21:17:50Z",
        "closed_at": "2023-08-01T21:17:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8596",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8596",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8596.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8596.patch",
            "merged_at": "2023-08-01T21:17:50Z"
        },
        "body": "### Summary\r\n\r\nUpdates the `unstructured` install instructions. For `unstructured>=0.9.0`, dependencies are broken out by document type and the base `unstructured` package includes fewer dependencies. `pip install \"unstructured[local-inference]\"` has been replace by `pip install \"unstructured[all-docs]\"`, though the `local-inference` extra is still supported for the time being.\r\n\r\n### Reviewers\r\n\r\n- @rlancemartin\r\n- @eyurtsev\r\n- @hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8596/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8596/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8595",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8595/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8595/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8595/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8595",
        "id": 1831958889,
        "node_id": "PR_kwDOIPDwls5W8g50",
        "number": 8595,
        "title": "mv",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-01T20:09:34Z",
        "updated_at": "2023-08-01T21:17:06Z",
        "closed_at": "2023-08-01T21:17:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8595",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8595",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8595.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8595.patch",
            "merged_at": "2023-08-01T21:17:05Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8595/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8595/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8594",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8594/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8594/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8594/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8594",
        "id": 1831889289,
        "node_id": "PR_kwDOIPDwls5W8R4I",
        "number": 8594,
        "title": "Support for `Segment` analytics as a utility tool",
        "user": {
            "login": "yashpokar",
            "id": 7402810,
            "node_id": "MDQ6VXNlcjc0MDI4MTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7402810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yashpokar",
            "html_url": "https://github.com/yashpokar",
            "followers_url": "https://api.github.com/users/yashpokar/followers",
            "following_url": "https://api.github.com/users/yashpokar/following{/other_user}",
            "gists_url": "https://api.github.com/users/yashpokar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yashpokar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yashpokar/subscriptions",
            "organizations_url": "https://api.github.com/users/yashpokar/orgs",
            "repos_url": "https://api.github.com/users/yashpokar/repos",
            "events_url": "https://api.github.com/users/yashpokar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yashpokar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-01T19:25:32Z",
        "updated_at": "2023-11-01T22:57:56Z",
        "closed_at": "2023-11-01T22:57:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8594",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8594",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8594.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8594.patch",
            "merged_at": null
        },
        "body": "Replace this comment with:\r\n  - Description: The changes will introduce a tool `Segment` for LLM based app's analytics.\r\n  - Dependencies: `segment-analytics-python`\r\n  - Tag maintainer: @hinthornw \r\n  - Twitter handle: @yashpokar\r\n\r\nThe PR is passing linting and testing before submitting. Ran `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n- [x]  a test for the integration, preferably unit tests that do not rely on network access,\r\n- [x] an example notebook showing its use.\r\n\r\n<!--\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8594/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8594/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8593",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8593/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8593/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8593/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8593",
        "id": 1831864866,
        "node_id": "I_kwDOIPDwls5tMAoi",
        "number": 8593,
        "title": "InvalidRequestError: Unrecognized request arguments supplied: function_call, functions",
        "user": {
            "login": "bhishanpdl",
            "id": 13811914,
            "node_id": "MDQ6VXNlcjEzODExOTE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13811914?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bhishanpdl",
            "html_url": "https://github.com/bhishanpdl",
            "followers_url": "https://api.github.com/users/bhishanpdl/followers",
            "following_url": "https://api.github.com/users/bhishanpdl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bhishanpdl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bhishanpdl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bhishanpdl/subscriptions",
            "organizations_url": "https://api.github.com/users/bhishanpdl/orgs",
            "repos_url": "https://api.github.com/users/bhishanpdl/repos",
            "events_url": "https://api.github.com/users/bhishanpdl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bhishanpdl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 18,
        "created_at": "2023-08-01T19:06:48Z",
        "updated_at": "2023-11-20T17:29:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nI am following the instruction from this doc: \r\nDOC: Structure answers with OpenAI functions\r\n\r\n-https://python.langchain.com/docs/use_cases/question_answering/integrations/openai_functions_retrieval_qa\r\n\r\nBut this gives some error.\r\n\r\n# Code\r\n```python\r\nfrom langchain.chains import RetrievalQA\r\nfrom langchain.document_loaders import TextLoader\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.vectorstores import Chroma\r\n\r\nfrom langchain.chat_models import AzureChatOpenAI\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.chains.combine_documents.stuff import StuffDocumentsChain\r\nfrom langchain.prompts import PromptTemplate\r\nfrom langchain.chains import create_qa_with_sources_chain\r\n\r\npath_txt = r\"C:\\Users\\a126291\\OneDrive - AmerisourceBergen(ABC)\\data\\langchain\\state_of_the_union.txt\"\r\n\r\ndef get_config_dict():\r\n    import os\r\n    import yaml\r\n\r\n    with open(os.path.expanduser('~/.config/config.yaml')) as fh:\r\n        config = yaml.safe_load(fh)\r\n\r\n    # openai\r\n    keys = [\"OPENAI_API_KEY\",\"OPENAI_API_TYPE\",\"OPENAI_API_BASE\",\"OPENAI_API_VERSION\"]\r\n    for key in keys:\r\n        os.environ[key] = config.get(key)\r\n\r\n    return config\r\n\r\nconfig = get_config_dict()\r\n\r\n#========= qa chain\r\nloader = TextLoader(path_txt, encoding=\"utf-8\")\r\ndocuments = loader.load()\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\ntexts = text_splitter.split_documents(documents)\r\n\r\nfor i, text in enumerate(texts):\r\n    text.metadata[\"source\"] = f\"{i}-pl\"\r\n    \r\n\r\nembeddings = OpenAIEmbeddings(model=\"text-embedding-ada-002\", chunk_size=1)\r\n\r\ndocsearch = Chroma.from_documents(texts, embeddings)\r\n\r\n# vectorstore = Chroma.from_documents(texts, embeddings)\r\n# retriever = vectorstore.as_retriever()\r\n\r\nllm = AzureChatOpenAI(**config['kw_azure_llm'],temperature=0.4)\r\n\r\n#------- query\r\nqa_chain = create_qa_with_sources_chain(llm)\r\n\r\ndoc_prompt = PromptTemplate(\r\n    template=\"Content: {page_content}\\nSource: {source}\",\r\n    input_variables=[\"page_content\", \"source\"],\r\n)\r\n\r\nfinal_qa_chain = StuffDocumentsChain(\r\n    llm_chain=qa_chain,\r\n    document_variable_name=\"context\",\r\n    document_prompt=doc_prompt,\r\n)\r\n\r\nretrieval_qa = RetrievalQA(\r\n    retriever=docsearch.as_retriever(), combine_documents_chain=final_qa_chain\r\n)\r\n\r\nquery = \"What did the president say about russia\"\r\nretrieval_qa.run(query)\r\n```\r\n\r\n# Error: InvalidRequestError: Unrecognized request arguments supplied: function_call, functions\r\n```bash\r\n---------------------------------------------------------------------------\r\nInvalidRequestError                       Traceback (most recent call last)\r\nCell In[36], line 69\r\n     64 retrieval_qa = RetrievalQA(\r\n     65     retriever=docsearch.as_retriever(), combine_documents_chain=final_qa_chain\r\n     66 )\r\n     68 query = \"What did the president say about russia\"\r\n---> 69 retrieval_qa.run(query)\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chains\\base.py:290, in Chain.run(self, callbacks, tags, *args, **kwargs)\r\n    288     if len(args) != 1:\r\n    289         raise ValueError(\"`run` supports only one positional argument.\")\r\n--> 290     return self(args[0], callbacks=callbacks, tags=tags)[_output_key]\r\n    292 if kwargs and not args:\r\n    293     return self(kwargs, callbacks=callbacks, tags=tags)[_output_key]\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chains\\base.py:166, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, include_run_info)\r\n    164 except (KeyboardInterrupt, Exception) as e:\r\n    165     run_manager.on_chain_error(e)\r\n--> 166     raise e\r\n    167 run_manager.on_chain_end(outputs)\r\n    168 final_outputs: Dict[str, Any] = self.prep_outputs(\r\n    169     inputs, outputs, return_only_outputs\r\n    170 )\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chains\\base.py:160, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, include_run_info)\r\n    154 run_manager = callback_manager.on_chain_start(\r\n    155     dumpd(self),\r\n    156     inputs,\r\n    157 )\r\n    158 try:\r\n    159     outputs = (\r\n--> 160         self._call(inputs, run_manager=run_manager)\r\n    161         if new_arg_supported\r\n    162         else self._call(inputs)\r\n    163     )\r\n    164 except (KeyboardInterrupt, Exception) as e:\r\n    165     run_manager.on_chain_error(e)\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chains\\retrieval_qa\\base.py:120, in BaseRetrievalQA._call(self, inputs, run_manager)\r\n    117 question = inputs[self.input_key]\r\n    119 docs = self._get_docs(question)\r\n--> 120 answer = self.combine_documents_chain.run(\r\n    121     input_documents=docs, question=question, callbacks=_run_manager.get_child()\r\n    122 )\r\n    124 if self.return_source_documents:\r\n    125     return {self.output_key: answer, \"source_documents\": docs}\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chains\\base.py:293, in Chain.run(self, callbacks, tags, *args, **kwargs)\r\n    290     return self(args[0], callbacks=callbacks, tags=tags)[_output_key]\r\n    292 if kwargs and not args:\r\n--> 293     return self(kwargs, callbacks=callbacks, tags=tags)[_output_key]\r\n    295 if not kwargs and not args:\r\n    296     raise ValueError(\r\n    297         \"`run` supported with either positional arguments or keyword arguments,\"\r\n    298         \" but none were provided.\"\r\n    299     )\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chains\\base.py:166, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, include_run_info)\r\n    164 except (KeyboardInterrupt, Exception) as e:\r\n    165     run_manager.on_chain_error(e)\r\n--> 166     raise e\r\n    167 run_manager.on_chain_end(outputs)\r\n    168 final_outputs: Dict[str, Any] = self.prep_outputs(\r\n    169     inputs, outputs, return_only_outputs\r\n    170 )\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chains\\base.py:160, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, include_run_info)\r\n    154 run_manager = callback_manager.on_chain_start(\r\n    155     dumpd(self),\r\n    156     inputs,\r\n    157 )\r\n    158 try:\r\n    159     outputs = (\r\n--> 160         self._call(inputs, run_manager=run_manager)\r\n    161         if new_arg_supported\r\n    162         else self._call(inputs)\r\n    163     )\r\n    164 except (KeyboardInterrupt, Exception) as e:\r\n    165     run_manager.on_chain_error(e)\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chains\\combine_documents\\base.py:84, in BaseCombineDocumentsChain._call(self, inputs, run_manager)\r\n     82 # Other keys are assumed to be needed for LLM prediction\r\n     83 other_keys = {k: v for k, v in inputs.items() if k != self.input_key}\r\n---> 84 output, extra_return_dict = self.combine_docs(\r\n     85     docs, callbacks=_run_manager.get_child(), **other_keys\r\n     86 )\r\n     87 extra_return_dict[self.output_key] = output\r\n     88 return extra_return_dict\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chains\\combine_documents\\stuff.py:87, in StuffDocumentsChain.combine_docs(self, docs, callbacks, **kwargs)\r\n     85 inputs = self._get_inputs(docs, **kwargs)\r\n     86 # Call predict on the LLM.\r\n---> 87 return self.llm_chain.predict(callbacks=callbacks, **inputs), {}\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chains\\llm.py:252, in LLMChain.predict(self, callbacks, **kwargs)\r\n    237 def predict(self, callbacks: Callbacks = None, **kwargs: Any) -> str:\r\n    238     \"\"\"Format prompt with kwargs and pass to LLM.\r\n    239 \r\n    240     Args:\r\n   (...)\r\n    250             completion = llm.predict(adjective=\"funny\")\r\n    251     \"\"\"\r\n--> 252     return self(kwargs, callbacks=callbacks)[self.output_key]\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chains\\base.py:166, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, include_run_info)\r\n    164 except (KeyboardInterrupt, Exception) as e:\r\n    165     run_manager.on_chain_error(e)\r\n--> 166     raise e\r\n    167 run_manager.on_chain_end(outputs)\r\n    168 final_outputs: Dict[str, Any] = self.prep_outputs(\r\n    169     inputs, outputs, return_only_outputs\r\n    170 )\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chains\\base.py:160, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, include_run_info)\r\n    154 run_manager = callback_manager.on_chain_start(\r\n    155     dumpd(self),\r\n    156     inputs,\r\n    157 )\r\n    158 try:\r\n    159     outputs = (\r\n--> 160         self._call(inputs, run_manager=run_manager)\r\n    161         if new_arg_supported\r\n    162         else self._call(inputs)\r\n    163     )\r\n    164 except (KeyboardInterrupt, Exception) as e:\r\n    165     run_manager.on_chain_error(e)\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chains\\llm.py:92, in LLMChain._call(self, inputs, run_manager)\r\n     87 def _call(\r\n     88     self,\r\n     89     inputs: Dict[str, Any],\r\n     90     run_manager: Optional[CallbackManagerForChainRun] = None,\r\n     91 ) -> Dict[str, str]:\r\n---> 92     response = self.generate([inputs], run_manager=run_manager)\r\n     93     return self.create_outputs(response)[0]\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chains\\llm.py:102, in LLMChain.generate(self, input_list, run_manager)\r\n    100 \"\"\"Generate LLM result from inputs.\"\"\"\r\n    101 prompts, stop = self.prep_prompts(input_list, run_manager=run_manager)\r\n--> 102 return self.llm.generate_prompt(\r\n    103     prompts,\r\n    104     stop,\r\n    105     callbacks=run_manager.get_child() if run_manager else None,\r\n    106     **self.llm_kwargs,\r\n    107 )\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chat_models\\base.py:167, in BaseChatModel.generate_prompt(self, prompts, stop, callbacks, **kwargs)\r\n    159 def generate_prompt(\r\n    160     self,\r\n    161     prompts: List[PromptValue],\r\n   (...)\r\n    164     **kwargs: Any,\r\n    165 ) -> LLMResult:\r\n    166     prompt_messages = [p.to_messages() for p in prompts]\r\n--> 167     return self.generate(prompt_messages, stop=stop, callbacks=callbacks, **kwargs)\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chat_models\\base.py:102, in BaseChatModel.generate(self, messages, stop, callbacks, tags, **kwargs)\r\n    100 except (KeyboardInterrupt, Exception) as e:\r\n    101     run_manager.on_llm_error(e)\r\n--> 102     raise e\r\n    103 llm_output = self._combine_llm_outputs([res.llm_output for res in results])\r\n    104 generations = [res.generations for res in results]\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chat_models\\base.py:94, in BaseChatModel.generate(self, messages, stop, callbacks, tags, **kwargs)\r\n     90 new_arg_supported = inspect.signature(self._generate).parameters.get(\r\n     91     \"run_manager\"\r\n     92 )\r\n     93 try:\r\n---> 94     results = [\r\n     95         self._generate(m, stop=stop, run_manager=run_manager, **kwargs)\r\n     96         if new_arg_supported\r\n     97         else self._generate(m, stop=stop)\r\n     98         for m in messages\r\n     99     ]\r\n    100 except (KeyboardInterrupt, Exception) as e:\r\n    101     run_manager.on_llm_error(e)\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chat_models\\base.py:95, in <listcomp>(.0)\r\n     90 new_arg_supported = inspect.signature(self._generate).parameters.get(\r\n     91     \"run_manager\"\r\n     92 )\r\n     93 try:\r\n     94     results = [\r\n---> 95         self._generate(m, stop=stop, run_manager=run_manager, **kwargs)\r\n     96         if new_arg_supported\r\n     97         else self._generate(m, stop=stop)\r\n     98         for m in messages\r\n     99     ]\r\n    100 except (KeyboardInterrupt, Exception) as e:\r\n    101     run_manager.on_llm_error(e)\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chat_models\\openai.py:359, in ChatOpenAI._generate(self, messages, stop, run_manager, **kwargs)\r\n    351     message = _convert_dict_to_message(\r\n    352         {\r\n    353             \"content\": inner_completion,\r\n   (...)\r\n    356         }\r\n    357     )\r\n    358     return ChatResult(generations=[ChatGeneration(message=message)])\r\n--> 359 response = self.completion_with_retry(messages=message_dicts, **params)\r\n    360 return self._create_chat_result(response)\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chat_models\\openai.py:307, in ChatOpenAI.completion_with_retry(self, **kwargs)\r\n    303 @retry_decorator\r\n    304 def _completion_with_retry(**kwargs: Any) -> Any:\r\n    305     return self.client.create(**kwargs)\r\n--> 307 return _completion_with_retry(**kwargs)\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\tenacity\\__init__.py:289, in BaseRetrying.wraps.<locals>.wrapped_f(*args, **kw)\r\n    287 @functools.wraps(f)\r\n    288 def wrapped_f(*args: t.Any, **kw: t.Any) -> t.Any:\r\n--> 289     return self(f, *args, **kw)\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\tenacity\\__init__.py:379, in Retrying.__call__(self, fn, *args, **kwargs)\r\n    377 retry_state = RetryCallState(retry_object=self, fn=fn, args=args, kwargs=kwargs)\r\n    378 while True:\r\n--> 379     do = self.iter(retry_state=retry_state)\r\n    380     if isinstance(do, DoAttempt):\r\n    381         try:\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\tenacity\\__init__.py:314, in BaseRetrying.iter(self, retry_state)\r\n    312 is_explicit_retry = fut.failed and isinstance(fut.exception(), TryAgain)\r\n    313 if not (is_explicit_retry or self.retry(retry_state)):\r\n--> 314     return fut.result()\r\n    316 if self.after is not None:\r\n    317     self.after(retry_state)\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py:449, in Future.result(self, timeout)\r\n    447     raise CancelledError()\r\n    448 elif self._state == FINISHED:\r\n--> 449     return self.__get_result()\r\n    451 self._condition.wait(timeout)\r\n    453 if self._state in [CANCELLED, CANCELLED_AND_NOTIFIED]:\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py:401, in Future.__get_result(self)\r\n    399 if self._exception:\r\n    400     try:\r\n--> 401         raise self._exception\r\n    402     finally:\r\n    403         # Break a reference cycle with the exception in self._exception\r\n    404         self = None\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\tenacity\\__init__.py:382, in Retrying.__call__(self, fn, *args, **kwargs)\r\n    380 if isinstance(do, DoAttempt):\r\n    381     try:\r\n--> 382         result = fn(*args, **kwargs)\r\n    383     except BaseException:  # noqa: B902\r\n    384         retry_state.set_exception(sys.exc_info())  # type: ignore[arg-type]\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\langchain\\chat_models\\openai.py:305, in ChatOpenAI.completion_with_retry.<locals>._completion_with_retry(**kwargs)\r\n    303 @retry_decorator\r\n    304 def _completion_with_retry(**kwargs: Any) -> Any:\r\n--> 305     return self.client.create(**kwargs)\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\openai\\api_resources\\chat_completion.py:25, in ChatCompletion.create(cls, *args, **kwargs)\r\n     23 while True:\r\n     24     try:\r\n---> 25         return super().create(*args, **kwargs)\r\n     26     except TryAgain as e:\r\n     27         if timeout is not None and time.time() > start + timeout:\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\openai\\api_resources\\abstract\\engine_api_resource.py:153, in EngineAPIResource.create(cls, api_key, api_base, api_type, request_id, api_version, organization, **params)\r\n    127 @classmethod\r\n    128 def create(\r\n    129     cls,\r\n   (...)\r\n    136     **params,\r\n    137 ):\r\n    138     (\r\n    139         deployment_id,\r\n    140         engine,\r\n   (...)\r\n    150         api_key, api_base, api_type, api_version, organization, **params\r\n    151     )\r\n--> 153     response, _, api_key = requestor.request(\r\n    154         \"post\",\r\n    155         url,\r\n    156         params=params,\r\n    157         headers=headers,\r\n    158         stream=stream,\r\n    159         request_id=request_id,\r\n    160         request_timeout=request_timeout,\r\n    161     )\r\n    163     if stream:\r\n    164         # must be an iterator\r\n    165         assert not isinstance(response, OpenAIResponse)\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\openai\\api_requestor.py:298, in APIRequestor.request(self, method, url, params, headers, files, stream, request_id, request_timeout)\r\n    277 def request(\r\n    278     self,\r\n    279     method,\r\n   (...)\r\n    286     request_timeout: Optional[Union[float, Tuple[float, float]]] = None,\r\n    287 ) -> Tuple[Union[OpenAIResponse, Iterator[OpenAIResponse]], bool, str]:\r\n    288     result = self.request_raw(\r\n    289         method.lower(),\r\n    290         url,\r\n   (...)\r\n    296         request_timeout=request_timeout,\r\n    297     )\r\n--> 298     resp, got_stream = self._interpret_response(result, stream)\r\n    299     return resp, got_stream, self.api_key\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\openai\\api_requestor.py:700, in APIRequestor._interpret_response(self, result, stream)\r\n    692     return (\r\n    693         self._interpret_response_line(\r\n    694             line, result.status_code, result.headers, stream=True\r\n    695         )\r\n    696         for line in parse_stream(result.iter_lines())\r\n    697     ), True\r\n    698 else:\r\n    699     return (\r\n--> 700         self._interpret_response_line(\r\n    701             result.content.decode(\"utf-8\"),\r\n    702             result.status_code,\r\n    703             result.headers,\r\n    704             stream=False,\r\n    705         ),\r\n    706         False,\r\n    707     )\r\n\r\nFile ~\\venv\\py311openai\\Lib\\site-packages\\openai\\api_requestor.py:763, in APIRequestor._interpret_response_line(self, rbody, rcode, rheaders, stream)\r\n    761 stream_error = stream and \"error\" in resp.data\r\n    762 if stream_error or not 200 <= rcode < 300:\r\n--> 763     raise self.handle_error_response(\r\n    764         rbody, rcode, resp.data, rheaders, stream_error=stream_error\r\n    765     )\r\n    766 return resp\r\n\r\nInvalidRequestError: Unrecognized request arguments supplied: function_call, functions\r\n```\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8593/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8593/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8591",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8591/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8591/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8591/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8591",
        "id": 1831836049,
        "node_id": "PR_kwDOIPDwls5W8GpJ",
        "number": 8591,
        "title": "updated to use new llm_util query",
        "user": {
            "login": "brettdbrewer",
            "id": 8039589,
            "node_id": "MDQ6VXNlcjgwMzk1ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8039589?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brettdbrewer",
            "html_url": "https://github.com/brettdbrewer",
            "followers_url": "https://api.github.com/users/brettdbrewer/followers",
            "following_url": "https://api.github.com/users/brettdbrewer/following{/other_user}",
            "gists_url": "https://api.github.com/users/brettdbrewer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brettdbrewer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brettdbrewer/subscriptions",
            "organizations_url": "https://api.github.com/users/brettdbrewer/orgs",
            "repos_url": "https://api.github.com/users/brettdbrewer/repos",
            "events_url": "https://api.github.com/users/brettdbrewer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brettdbrewer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-01T18:47:05Z",
        "updated_at": "2023-08-01T21:16:27Z",
        "closed_at": "2023-08-01T21:16:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8591",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8591",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8591.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8591.patch",
            "merged_at": "2023-08-01T21:16:15Z"
        },
        "body": "  - Description: added memgraph_graph.py which defines the MemgraphGraph class, subclassing off the existing Neo4jGraph class. This lets you query the Memgraph graph database using natural language. It leverages the Neo4j drivers and the bolt protocol. \r\n  - Dependencies: since it is a subclass off of Neo4jGraph, it is dependent on it and the GraphCypherQA Chain implementations. It is dependent on the Neo4j drivers being present. It is dependent on having a running Memgraph instance to connect to. \r\n  - Tag maintainer: @baskaryan\r\n  - Twitter handle: @villageideate\r\n  - example usage can be seen in this repo https://github.com/brettdbrewer/MemgraphGraph/ ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8591/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8591/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8590",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8590/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8590/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8590/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8590",
        "id": 1831784534,
        "node_id": "I_kwDOIPDwls5tLtBW",
        "number": 8590,
        "title": "Missing some input keys: {'input'} when using Combined memory and ConversationalRetrievalChain",
        "user": {
            "login": "rameshboggula",
            "id": 15350844,
            "node_id": "MDQ6VXNlcjE1MzUwODQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/15350844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rameshboggula",
            "html_url": "https://github.com/rameshboggula",
            "followers_url": "https://api.github.com/users/rameshboggula/followers",
            "following_url": "https://api.github.com/users/rameshboggula/following{/other_user}",
            "gists_url": "https://api.github.com/users/rameshboggula/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rameshboggula/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rameshboggula/subscriptions",
            "organizations_url": "https://api.github.com/users/rameshboggula/orgs",
            "repos_url": "https://api.github.com/users/rameshboggula/repos",
            "events_url": "https://api.github.com/users/rameshboggula/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rameshboggula/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-01T18:08:07Z",
        "updated_at": "2023-11-08T16:07:09Z",
        "closed_at": "2023-11-08T16:07:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nHello there, \r\n\r\nI am currently attempting to add combined memory to ConversationalRetrievalChain (CRC). However, I am unsure if combined memory is compatible with CRC. I have made a few modifications, but unfortunately, I have encountered errors preventing it from running properly. I was hoping that someone could assist me in resolving this issue. Thank you.\r\n\r\n```\r\n\r\nfrom langchain.prompts import PromptTemplate\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.memory import ConversationBufferWindowMemory, CombinedMemory, ConversationSummaryMemory\r\n\r\nchat_history = []\r\n\r\nconv_memory = ConversationBufferWindowMemory(\r\n    memory_key=\"chat_history_lines\",\r\n    input_key=\"input\",\r\n    output_key='answer',\r\n    k=1\r\n)\r\n\r\nsummary_memory = ConversationSummaryMemory(llm=turbo_llm, input_key=\"input\", output_key='answer')\r\n\r\n# Combined\r\nmemory = CombinedMemory(memories=[conv_memory, summary_memory])\r\n\r\n_DEFAULT_TEMPLATE = \"\"\"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\r\n{context}\r\nSummary of conversation:\r\n{history}\r\nCurrent conversation:\r\n{chat_history_lines}\r\nHuman: {input}\r\nAI:\"\"\"\r\n\r\nPROMPT_= PromptTemplate(\r\n    input_variables=[\"history\", \"input\", \"context\", \"chat_history_lines\"],\r\n    template=_DEFAULT_TEMPLATE\r\n)\r\n\r\nqa = ConversationalRetrievalChain.from_llm(\r\n                        llm=turbo_llm,\r\n                        chain_type=\"stuff\",\r\n                        memory=memory,\r\n                        retriever=retriever,\r\n                        return_source_documents=True,\r\n                        return_generated_question=True,\r\n                        combine_docs_chain_kwargs={'prompt': PROMPT_})\r\n\r\n\r\nchat_history = []\r\nquery = \"What did the president say about Ketanji Brown Jackson\"\r\nresult = qa({\"question\": query, \"chat_history\": chat_history})`\r\n```\r\nError:\r\n`ValueError: Missing some input keys: {'input'}`\r\n\r\n\r\nwhen I replace \"input\" with \"question\" in _DEFAULT_TEMPLATE and PROMPT_\r\nthen  the error is :\r\n`ValueError: One output key expected, got dict_keys(['answer', 'source_documents', 'generated_question'])\r\n`\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8590/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8590/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8589",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8589/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8589/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8589/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8589",
        "id": 1831751582,
        "node_id": "PR_kwDOIPDwls5W702f",
        "number": 8589,
        "title": "Implement a router for openai functions",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-01T17:43:33Z",
        "updated_at": "2023-08-09T20:17:06Z",
        "closed_at": "2023-08-09T20:17:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8589",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8589",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8589.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8589.patch",
            "merged_at": "2023-08-09T20:17:05Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8589/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8589/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8588",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8588/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8588/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8588/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8588",
        "id": 1831737148,
        "node_id": "PR_kwDOIPDwls5W7xxX",
        "number": 8588,
        "title": "Handling potential issue in file.py",
        "user": {
            "login": "aashishsaini75",
            "id": 12483054,
            "node_id": "MDQ6VXNlcjEyNDgzMDU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/12483054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aashishsaini75",
            "html_url": "https://github.com/aashishsaini75",
            "followers_url": "https://api.github.com/users/aashishsaini75/followers",
            "following_url": "https://api.github.com/users/aashishsaini75/following{/other_user}",
            "gists_url": "https://api.github.com/users/aashishsaini75/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aashishsaini75/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aashishsaini75/subscriptions",
            "organizations_url": "https://api.github.com/users/aashishsaini75/orgs",
            "repos_url": "https://api.github.com/users/aashishsaini75/repos",
            "events_url": "https://api.github.com/users/aashishsaini75/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aashishsaini75/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-01T17:32:51Z",
        "updated_at": "2023-08-10T04:31:24Z",
        "closed_at": "2023-08-10T03:57:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8588",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8588",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8588.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8588.patch",
            "merged_at": null
        },
        "body": "Potential Resource Leak: The FileCallbackHandler class opens a file in its constructor but does not handle the case where the file opening fails. If there's an exception while opening the file, the object is not closed, which may lead to resource leaks. It's recommended to handle the file opening more gracefully using a try-except block or a context manager (with statement) to ensure the file is closed correctly, even if an exception occurs during the opening process.\r\n\r\n@baskaryan , @hwchase17 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8588/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8588/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8587",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8587/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8587/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8587/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8587",
        "id": 1831716675,
        "node_id": "PR_kwDOIPDwls5W7tal",
        "number": 8587,
        "title": "Callback handler for Amazon SageMaker Experiments",
        "user": {
            "login": "tesfagabir",
            "id": 5522060,
            "node_id": "MDQ6VXNlcjU1MjIwNjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5522060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tesfagabir",
            "html_url": "https://github.com/tesfagabir",
            "followers_url": "https://api.github.com/users/tesfagabir/followers",
            "following_url": "https://api.github.com/users/tesfagabir/following{/other_user}",
            "gists_url": "https://api.github.com/users/tesfagabir/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tesfagabir/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tesfagabir/subscriptions",
            "organizations_url": "https://api.github.com/users/tesfagabir/orgs",
            "repos_url": "https://api.github.com/users/tesfagabir/repos",
            "events_url": "https://api.github.com/users/tesfagabir/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tesfagabir/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-01T17:17:25Z",
        "updated_at": "2023-08-01T21:56:48Z",
        "closed_at": "2023-08-01T20:47:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8587",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8587",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8587.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8587.patch",
            "merged_at": "2023-08-01T20:47:08Z"
        },
        "body": "## Description\r\n\r\nThis PR implements a callback handler for SageMaker Experiments which is similar to that of mlflow.\r\n* When creating the callback handler, it takes the experiment's run object as an argument. All the callback outputs are then logged to the run object.\r\n* The output of each callback action (e.g., `on_llm_start`) is saved to S3 bucket as json file.\r\n* Optionally, you can also log additional information such as the LLM hyper-parameters to the same run object.\r\n* Once the callback object is no more needed, you will need to call the `flush_tracker()` method. This makes sure that any intermediate files are deleted.\r\n* A separate notebook example is provided to show how the callback is used.\r\n\r\nThank you [Mohamad Al Jazaery](https://github.com/mohjaz), [Shinan Zhang](https://github.com/sz640) for your contribution and review!\r\n\r\n@3coins  @agola11 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8587/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 2,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8587/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8586",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8586/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8586/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8586/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8586",
        "id": 1831713610,
        "node_id": "PR_kwDOIPDwls5W7sxo",
        "number": 8586,
        "title": "Airbyte based loaders",
        "user": {
            "login": "flash1293",
            "id": 1508364,
            "node_id": "MDQ6VXNlcjE1MDgzNjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1508364?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flash1293",
            "html_url": "https://github.com/flash1293",
            "followers_url": "https://api.github.com/users/flash1293/followers",
            "following_url": "https://api.github.com/users/flash1293/following{/other_user}",
            "gists_url": "https://api.github.com/users/flash1293/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/flash1293/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/flash1293/subscriptions",
            "organizations_url": "https://api.github.com/users/flash1293/orgs",
            "repos_url": "https://api.github.com/users/flash1293/repos",
            "events_url": "https://api.github.com/users/flash1293/events{/privacy}",
            "received_events_url": "https://api.github.com/users/flash1293/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2023-08-01T17:15:12Z",
        "updated_at": "2023-08-09T20:22:32Z",
        "closed_at": "2023-08-08T21:49:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8586",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8586",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8586.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8586.patch",
            "merged_at": "2023-08-08T21:49:25Z"
        },
        "body": "This PR adds 8 new loaders:\r\n* `AirbyteCDKLoader` This reader can wrap and run all python-based Airbyte source connectors.\r\n* Separate loaders for the most commonly used APIs:\r\n  * `AirbyteGongLoader`\r\n  * `AirbyteHubspotLoader`\r\n  * `AirbyteSalesforceLoader`\r\n  * `AirbyteShopifyLoader`\r\n  * `AirbyteStripeLoader`\r\n  * `AirbyteTypeformLoader`\r\n  * `AirbyteZendeskSupportLoader`\r\n\r\n## Documentation and getting started\r\nI added the basic shape of the config to the notebooks. This increases the maintenance effort a bit, but I think it's worth it to make sure people can get started quickly with these important connectors. This is also why I linked the spec and the documentation page in the readme as these two contain all the information to configure a source correctly (e.g. it won't suggest using oauth if that's avoidable even if the connector supports it).\r\n\r\n## Document generation\r\nThe \"documents\" produced by these loaders won't have a text part (instead, all the record fields are put into the metadata). If a text is required by the use case, the caller needs to do custom transformation suitable for their use case.\r\n\r\n## Incremental sync\r\nAll loaders support incremental syncs if the underlying streams support it. By storing the `last_state` from the reader instance away and passing it in when loading, it will only load updated records.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8586/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8586/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8584",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8584/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8584/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8584/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8584",
        "id": 1831458479,
        "node_id": "I_kwDOIPDwls5tKdav",
        "number": 8584,
        "title": "GPTCache implementation isnt working with ChatOpenAI",
        "user": {
            "login": "kdcokenny",
            "id": 99611484,
            "node_id": "U_kgDOBe_zXA",
            "avatar_url": "https://avatars.githubusercontent.com/u/99611484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kdcokenny",
            "html_url": "https://github.com/kdcokenny",
            "followers_url": "https://api.github.com/users/kdcokenny/followers",
            "following_url": "https://api.github.com/users/kdcokenny/following{/other_user}",
            "gists_url": "https://api.github.com/users/kdcokenny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kdcokenny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kdcokenny/subscriptions",
            "organizations_url": "https://api.github.com/users/kdcokenny/orgs",
            "repos_url": "https://api.github.com/users/kdcokenny/repos",
            "events_url": "https://api.github.com/users/kdcokenny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kdcokenny/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-01T14:51:37Z",
        "updated_at": "2023-12-04T16:06:03Z",
        "closed_at": "2023-12-04T16:06:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain = \"^0.0.248\"\r\n\r\n\r\n\r\n### Who can help?\r\n\r\n@hwchase17 @agola11 \r\n\r\n### Information\r\n\r\n- [x] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [x] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```python\r\nimport os\r\nimport hashlib\r\nimport langchain\r\n\r\nfrom gptcache import Cache  # type: ignore\r\nfrom gptcache.manager.factory import manager_factory  # type: ignore\r\nfrom gptcache.processor.pre import get_prompt  # type: ignore\r\n\r\nfrom langchain.cache import GPTCache\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chat_models import ChatOpenAI\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = \"sk-...\"\r\n\r\n\r\nllm = ChatOpenAI(temperature=0) # type: ignore\r\n\r\n\r\ndef get_hashed_name(name):\r\n    return hashlib.sha256(name.encode()).hexdigest()\r\n\r\n\r\ndef init_gptcache(cache_obj: Cache, llm: str):\r\n    hashed_llm = get_hashed_name(llm)\r\n    cache_obj.init(\r\n        pre_embedding_func=get_prompt,\r\n        data_manager=manager_factory(manager=\"map\", data_dir=f\"map_cache_{hashed_llm}\"),\r\n    )\r\n\r\n\r\nlangchain.llm_cache = GPTCache(init_gptcache)\r\n\r\n# The first time, it is not yet in cache, so it should take longer\r\nresponse = llm(\"Tell me a joke\")\r\nprint(f\"Response 1: {response}\")\r\n\r\n# The first time, it is not yet in cache, so it should take longer\r\nresponse = llm(\"Tell me a joke\")\r\nprint(f\"Response 2: {response}\")\r\n```\r\n\r\n### Expected behavior\r\n\r\nResponse 1: \r\n\r\nWhy did the chicken cross the road?\r\n\r\nTo get to the other side.\r\nResponse 2: \r\n\r\nWhy did the chicken cross the road?\r\n\r\nTo get to the other side.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8584/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8584/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8583",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8583/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8583/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8583/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8583",
        "id": 1831441067,
        "node_id": "PR_kwDOIPDwls5W6xoc",
        "number": 8583,
        "title": "SQL block potential harmful commands",
        "user": {
            "login": "Uranium2",
            "id": 6902440,
            "node_id": "MDQ6VXNlcjY5MDI0NDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6902440?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Uranium2",
            "html_url": "https://github.com/Uranium2",
            "followers_url": "https://api.github.com/users/Uranium2/followers",
            "following_url": "https://api.github.com/users/Uranium2/following{/other_user}",
            "gists_url": "https://api.github.com/users/Uranium2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Uranium2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Uranium2/subscriptions",
            "organizations_url": "https://api.github.com/users/Uranium2/orgs",
            "repos_url": "https://api.github.com/users/Uranium2/repos",
            "events_url": "https://api.github.com/users/Uranium2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Uranium2/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-01T14:42:23Z",
        "updated_at": "2023-09-20T17:31:01Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8583",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8583",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8583.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8583.patch",
            "merged_at": null
        },
        "body": "  Description: \r\nThis PR aims to give a bit more control on the commands executed by the `SQLDatabase`. At the moment, if you ask \"Drop the table X in database Y\" with `SQLDatabaseChain`, it will generate code to drop the table that will be run by `SQLDatabase`. Today no checks are made on the commands in `SQLDatabase`, it's free real estate.\r\n\r\nIdeally, rights on user must be set to perform or not this kind of action on the database. In real life, lot of people use full rights. To prevent this I added a feature that could, if provided a list of restricted actions, stop the execution of the SQL query.\r\n\r\nIt will raise a `PermissionError` when restricted keywords are in the command for `SQLDatabase`\r\n\r\nKey Changes:\r\n- Add a new argument to `SQLDatabase` class named `restricted_keywords`\r\n- Add a new method to detect restricted keywords in the SQL command\r\n- Raise `PermissionError` if keywords are found in the sql command\r\n- Execute sql command like before if not keyworkds were found\r\n- Add a test to check if the raise is working while adding one restricted keyword\r\n\r\n `make format`, `make lint` and `make test` were tested locally\r\n\r\nI think this could help for [CVE-2023-36189](https://github.com/advisories/GHSA-7q94-qpjr-xpgm) Where the developer could block any keywords that could be generated by `SQLDatabaseChain`. It can block any string, so he could also block the usage of wildcards, name of tables, databases. I think it can be powerfull, it gives control to the developer and protect the user doing unwanted actions or protect his database.\r\n\r\n@baskaryan\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8583/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8583/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8582",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8582/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8582/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8582/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8582",
        "id": 1831414225,
        "node_id": "PR_kwDOIPDwls5W6rzq",
        "number": 8582,
        "title": "fix RecursiveUrlLoader",
        "user": {
            "login": "rysloan4",
            "id": 2359361,
            "node_id": "MDQ6VXNlcjIzNTkzNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2359361?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rysloan4",
            "html_url": "https://github.com/rysloan4",
            "followers_url": "https://api.github.com/users/rysloan4/followers",
            "following_url": "https://api.github.com/users/rysloan4/following{/other_user}",
            "gists_url": "https://api.github.com/users/rysloan4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rysloan4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rysloan4/subscriptions",
            "organizations_url": "https://api.github.com/users/rysloan4/orgs",
            "repos_url": "https://api.github.com/users/rysloan4/repos",
            "events_url": "https://api.github.com/users/rysloan4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rysloan4/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-01T14:28:44Z",
        "updated_at": "2023-08-03T23:51:57Z",
        "closed_at": "2023-08-03T23:51:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8582",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8582",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8582.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8582.patch",
            "merged_at": "2023-08-03T23:51:57Z"
        },
        "body": "Description: the recursive url loader does not fully crawl for all urls under base url\r\nMaintainer: @baskaryan",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8582/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8582/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8581",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8581/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8581/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8581/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8581",
        "id": 1831347798,
        "node_id": "I_kwDOIPDwls5tKCZW",
        "number": 8581,
        "title": "Cannot create \"n\" responses",
        "user": {
            "login": "oxololuwi",
            "id": 76955246,
            "node_id": "MDQ6VXNlcjc2OTU1MjQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/76955246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oxololuwi",
            "html_url": "https://github.com/oxololuwi",
            "followers_url": "https://api.github.com/users/oxololuwi/followers",
            "following_url": "https://api.github.com/users/oxololuwi/following{/other_user}",
            "gists_url": "https://api.github.com/users/oxololuwi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oxololuwi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oxololuwi/subscriptions",
            "organizations_url": "https://api.github.com/users/oxololuwi/orgs",
            "repos_url": "https://api.github.com/users/oxololuwi/repos",
            "events_url": "https://api.github.com/users/oxololuwi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oxololuwi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-01T13:55:11Z",
        "updated_at": "2023-08-02T16:36:44Z",
        "closed_at": "2023-08-02T16:36:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nVerified in dockerimage python:3.9\n\n### Who can help?\n\n@hwchase17\r\n@agola11\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nhow to reproduce?\r\n\r\n1. docker run -it python:3.9 bash \r\n2. pip install langchain\r\n3. pip install openai\r\n4. run script\r\n```\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.prompts.chat import SystemMessage\r\n    \r\nchat_model = ChatOpenAI(n=3)\r\nprompt = \"What is the capital of France?\"\r\nmessage = SystemMessage(content=prompt)\r\nresponses = chat_model.predict_messages([message], n=3) \r\nprint(responses)\r\n```\r\n\r\noutput:\r\ncontent='The capital of France is Paris.' additional_kwargs={} example=False\n\n### Expected behavior\n\nHello, \r\nWhen running the script I expect to get 3 responses, because I set the parameter `n=3` during initialization of ChatOpenAI and in the call of predict_messages. \r\n\r\nstill the response is a single answer!\r\n\r\nplease let me know how to correctly use the parameter n or fix the current behavior!\r\n\r\nbest regards,\r\nLW",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8581/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8581/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8580",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8580/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8580/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8580/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8580",
        "id": 1831301181,
        "node_id": "I_kwDOIPDwls5tJ3A9",
        "number": 8580,
        "title": "Need support for async memory, especially for ConversationSummaryMemory and ConversationSummaryBufferMemory",
        "user": {
            "login": "chrislrobert",
            "id": 8631326,
            "node_id": "MDQ6VXNlcjg2MzEzMjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8631326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrislrobert",
            "html_url": "https://github.com/chrislrobert",
            "followers_url": "https://api.github.com/users/chrislrobert/followers",
            "following_url": "https://api.github.com/users/chrislrobert/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrislrobert/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrislrobert/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrislrobert/subscriptions",
            "organizations_url": "https://api.github.com/users/chrislrobert/orgs",
            "repos_url": "https://api.github.com/users/chrislrobert/repos",
            "events_url": "https://api.github.com/users/chrislrobert/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrislrobert/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-08-01T13:32:50Z",
        "updated_at": "2023-11-07T22:50:05Z",
        "closed_at": "2023-11-07T22:49:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\n`ConversationSummaryMemory` and `ConversationSummaryBufferMemory` can be used as memory within async conversational chains, but they themselves are fully blocking. In particular, `Chain.acall()` is async, but it calls `Chain.prep_outputs()`, which calls `self.memory.save_context()`. In the case of `ConversationSummaryBufferMemory`, `save_context()` calls `prune()`, which calls `SummarizerMixin.predict_new_summary()`, which creates an `LLMChain` and then calls `LLMChain.predict()`. We really need to be able to specify an async handler when we create the memory object, pass that through to the `LLMChain`, and ultimately `await LLMChain.apredict()`.\n\n### Motivation\n\nThe blocking nature of the `LLMChain.predict()` calls means that otherwise-async chains end up blocking regularly. If you use an ASGI server like `uvicorn`, this means that lots of requests can end up waiting. You can wrap `uvicorn` in a WSGI server like `gunicorn` so that there are multiple processes available, but blocking one whole process every time the memory object needs to summarize can still block any websocket users connected to the blocked process. It's just not good.\n\n### Your contribution\n\nWe're going to have to solve this problem for ourselves, and we'd be happy to try to contribute a solution back to the community. However, we'd be first-time contributors and we're not sure whether there are others already making similar improvements.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8580/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8580/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8579",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8579/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8579/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8579/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8579",
        "id": 1831277961,
        "node_id": "I_kwDOIPDwls5tJxWJ",
        "number": 8579,
        "title": "Issue: Agent with memory and intermediate steps",
        "user": {
            "login": "lebg1",
            "id": 87832954,
            "node_id": "MDQ6VXNlcjg3ODMyOTU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/87832954?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lebg1",
            "html_url": "https://github.com/lebg1",
            "followers_url": "https://api.github.com/users/lebg1/followers",
            "following_url": "https://api.github.com/users/lebg1/following{/other_user}",
            "gists_url": "https://api.github.com/users/lebg1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lebg1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lebg1/subscriptions",
            "organizations_url": "https://api.github.com/users/lebg1/orgs",
            "repos_url": "https://api.github.com/users/lebg1/repos",
            "events_url": "https://api.github.com/users/lebg1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lebg1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-01T13:22:18Z",
        "updated_at": "2023-12-11T16:01:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi everyone,\r\n\r\nI'm having trouble working with the agent structure in Langchain.\r\nI would like to have an agent that has memory and can return intermediate steps.\r\nHowever It doesn't work, when I make an agent executor, the return_intermediate_steps=True makes it crash as the memory cannot read the output and when I use the agent directly, the return_intermediate_steps=True does nothing.\r\n\r\nDo you know if there is a way to have an agent with memory and that can return intermediate steps at the same time ?\r\n\r\nThanks for your help\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8579/reactions",
            "total_count": 3,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8579/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8578",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8578/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8578/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8578/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8578",
        "id": 1831190255,
        "node_id": "PR_kwDOIPDwls5W57oB",
        "number": 8578,
        "title": "langchain_touchmed",
        "user": {
            "login": "dubuqiangu",
            "id": 65102625,
            "node_id": "MDQ6VXNlcjY1MTAyNjI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/65102625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dubuqiangu",
            "html_url": "https://github.com/dubuqiangu",
            "followers_url": "https://api.github.com/users/dubuqiangu/followers",
            "following_url": "https://api.github.com/users/dubuqiangu/following{/other_user}",
            "gists_url": "https://api.github.com/users/dubuqiangu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dubuqiangu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dubuqiangu/subscriptions",
            "organizations_url": "https://api.github.com/users/dubuqiangu/orgs",
            "repos_url": "https://api.github.com/users/dubuqiangu/repos",
            "events_url": "https://api.github.com/users/dubuqiangu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dubuqiangu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-01T12:36:52Z",
        "updated_at": "2023-08-01T13:59:58Z",
        "closed_at": "2023-08-01T13:52:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8578",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8578",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8578.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8578.patch",
            "merged_at": null
        },
        "body": "langchain_touchmed\uff0c\u589e\u52a0 prompt\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8578/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8578/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8577",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8577/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8577/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8577/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8577",
        "id": 1831132425,
        "node_id": "I_kwDOIPDwls5tJN0J",
        "number": 8577,
        "title": "multiple bases have instance lay-out conflict on HumanMessageChunk  class on langchain 0.0.249",
        "user": {
            "login": "viduz",
            "id": 5743925,
            "node_id": "MDQ6VXNlcjU3NDM5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5743925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/viduz",
            "html_url": "https://github.com/viduz",
            "followers_url": "https://api.github.com/users/viduz/followers",
            "following_url": "https://api.github.com/users/viduz/following{/other_user}",
            "gists_url": "https://api.github.com/users/viduz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/viduz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/viduz/subscriptions",
            "organizations_url": "https://api.github.com/users/viduz/orgs",
            "repos_url": "https://api.github.com/users/viduz/repos",
            "events_url": "https://api.github.com/users/viduz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/viduz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 19,
        "created_at": "2023-08-01T12:08:08Z",
        "updated_at": "2023-12-01T07:13:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n### langchain Version **0.0.249**\r\n### Python Version **3.8**\r\n### Other notes \r\nUsing this on notebook in Azure Synapse Studio\r\n\r\n### Error \r\n```\r\nWhen import happening getting bellow error message \r\nTypeError                                 Traceback (most recent call last)\r\n/tmp/ipykernel_17180/722847199.py in <module>\r\n----> 1 from langchain.vectorstores import Pinecone\r\n      2 from langchain.embeddings.openai import OpenAIEmbeddings\r\n      3 \r\n      4 import datetime\r\n      5 from datetime import date, timedelta\r\n\r\n~/cluster-env/clonedenv/lib/python3.8/site-packages/langchain/__init__.py in <module>\r\n      4 from typing import Optional\r\n      5 \r\n----> 6 from langchain.agents import MRKLChain, ReActChain, SelfAskWithSearchChain\r\n      7 from langchain.cache import BaseCache\r\n      8 from langchain.chains import (\r\n\r\n~/cluster-env/clonedenv/lib/python3.8/site-packages/langchain/agents/__init__.py in <module>\r\n      1 \"\"\"Interface for agents.\"\"\"\r\n----> 2 from langchain.agents.agent import (\r\n      3     Agent,\r\n      4     AgentExecutor,\r\n      5     AgentOutputParser,\r\n\r\n~/cluster-env/clonedenv/lib/python3.8/site-packages/langchain/agents/agent.py in <module>\r\n     13 from pydantic import BaseModel, root_validator\r\n     14 \r\n---> 15 from langchain.agents.agent_iterator import AgentExecutorIterator\r\n     16 from langchain.agents.agent_types import AgentType\r\n     17 from langchain.agents.tools import InvalidTool\r\n\r\n~/cluster-env/clonedenv/lib/python3.8/site-packages/langchain/agents/agent_iterator.py in <module>\r\n     19 )\r\n     20 \r\n---> 21 from langchain.callbacks.manager import (\r\n     22     AsyncCallbackManager,\r\n     23     AsyncCallbackManagerForChainRun,\r\n\r\n~/cluster-env/clonedenv/lib/python3.8/site-packages/langchain/callbacks/__init__.py in <module>\r\n      1 \"\"\"Callback handlers that allow listening to events in LangChain.\"\"\"\r\n      2 \r\n----> 3 from langchain.callbacks.aim_callback import AimCallbackHandler\r\n      4 from langchain.callbacks.argilla_callback import ArgillaCallbackHandler\r\n      5 from langchain.callbacks.arize_callback import ArizeCallbackHandler\r\n\r\n~/cluster-env/clonedenv/lib/python3.8/site-packages/langchain/callbacks/aim_callback.py in <module>\r\n      3 \r\n      4 from langchain.callbacks.base import BaseCallbackHandler\r\n----> 5 from langchain.schema import AgentAction, AgentFinish, LLMResult\r\n      6 \r\n      7 \r\n\r\n~/cluster-env/clonedenv/lib/python3.8/site-packages/langchain/schema/__init__.py in <module>\r\n      1 from langchain.schema.agent import AgentAction, AgentFinish\r\n      2 from langchain.schema.document import BaseDocumentTransformer, Document\r\n----> 3 from langchain.schema.memory import BaseChatMessageHistory, BaseMemory\r\n      4 from langchain.schema.messages import (\r\n      5     AIMessage,\r\n\r\n~/cluster-env/clonedenv/lib/python3.8/site-packages/langchain/schema/memory.py in <module>\r\n      5 \r\n      6 from langchain.load.serializable import Serializable\r\n----> 7 from langchain.schema.messages import AIMessage, BaseMessage, HumanMessage\r\n      8 \r\n      9 \r\n\r\n~/cluster-env/clonedenv/lib/python3.8/site-packages/langchain/schema/messages.py in <module>\r\n    136 \r\n    137 \r\n--> 138 class HumanMessageChunk(HumanMessage, BaseMessageChunk):\r\n    139     pass\r\n    140 \r\n\r\n~/cluster-env/clonedenv/lib/python3.8/site-packages/pydantic/main.cpython-38-x86_64-linux-gnu.so in pydantic.main.ModelMetaclass.__new__()\r\n\r\n~/cluster-env/clonedenv/lib/python3.8/abc.py in __new__(mcls, name, bases, namespace, **kwargs)\r\n     83         \"\"\"\r\n     84         def __new__(mcls, name, bases, namespace, **kwargs):\r\n---> 85             cls = super().__new__(mcls, name, bases, namespace, **kwargs)\r\n     86             _abc_init(cls)\r\n     87             return cls\r\n\r\nTypeError: multiple bases have instance lay-out conflict\r\n```\r\n\r\n### Other installed packages in the system \r\n\r\nPackage                       Version\r\n----------------------------- -------------------\r\nabsl-py                       0.13.0\r\nadal                          1.2.7\r\nadlfs                         0.7.7\r\naiohttp                       3.8.5\r\naiosignal                     1.3.1\r\nannotated-types               0.5.0\r\nappdirs                       1.4.4\r\napplicationinsights           0.11.10\r\nargon2-cffi                   21.3.0\r\nargon2-cffi-bindings          21.2.0\r\nastor                         0.8.1\r\nastunparse                    1.6.3\r\nasync-timeout                 4.0.2\r\nattrs                         21.2.0\r\nazure-common                  1.1.27\r\nazure-core                    1.16.0\r\nazure-datalake-store          0.0.51\r\nazure-graphrbac               0.61.1\r\nazure-identity                1.4.1\r\nazure-mgmt-authorization      0.61.0\r\nazure-mgmt-containerregistry  8.0.0\r\nazure-mgmt-core               1.3.0\r\nazure-mgmt-keyvault           2.2.0\r\nazure-mgmt-resource           13.0.0\r\nazure-mgmt-storage            11.2.0\r\nazure-storage-blob            12.8.1\r\nazure-synapse-ml-predict      1.0.0\r\nazureml-core                  1.34.0\r\nazureml-dataprep              2.22.2\r\nazureml-dataprep-native       38.0.0\r\nazureml-dataprep-rslex        1.20.2\r\nazureml-dataset-runtime       1.34.0\r\nazureml-mlflow                1.34.0\r\nazureml-opendatasets          1.34.0\r\nazureml-synapse               0.0.1\r\nazureml-telemetry             1.34.0\r\nbackcall                      0.2.0\r\nbackports.functools-lru-cache 1.6.4\r\nbackports.tempfile            1.0\r\nbackports.weakref             1.0.post1\r\nbeautifulsoup4                4.9.3\r\nbleach                        5.0.1\r\nblinker                       1.4\r\nbokeh                         2.3.2\r\nBrotli                        1.0.9\r\nbrotlipy                      0.7.0\r\ncachetools                    4.2.2\r\ncertifi                       2021.5.30\r\ncffi                          1.14.5\r\nchardet                       4.0.0\r\ncharset-normalizer            3.2.0\r\nclick                         8.0.1\r\ncloudpickle                   1.6.0\r\nconda-package-handling        1.7.3\r\nconfigparser                  5.0.2\r\ncontextlib2                   0.6.0.post1\r\ncryptography                  3.4.7\r\ncycler                        0.10.0\r\nCython                        0.29.23\r\ncytoolz                       0.11.0\r\ndash                          1.20.0\r\ndash-core-components          1.16.0\r\ndash-cytoscape                0.2.0\r\ndash-html-components          1.1.3\r\ndash-renderer                 1.9.1\r\ndash-table                    4.11.3\r\ndask                          2021.6.2\r\ndatabricks-cli                0.12.1\r\ndataclasses-json              0.5.14\r\ndebugpy                       1.3.0\r\ndecorator                     4.4.2\r\ndefusedxml                    0.7.1\r\ndill                          0.3.4\r\ndistlib                       0.3.6\r\ndistro                        1.7.0\r\ndnspython                     2.4.1\r\ndocker                        4.4.4\r\ndotnetcore2                   2.1.23\r\nentrypoints                   0.3\r\net-xmlfile                    1.1.0\r\nfastjsonschema                2.16.1\r\nfilelock                      3.8.0\r\nfire                          0.4.0\r\nFlask                         2.0.1\r\nFlask-Compress                0.0.0\r\nflatbuffers                   1.12\r\nfrozenlist                    1.4.0\r\nfsspec                        2021.10.0\r\nfsspec-wrapper                0.1.6\r\nfusepy                        3.0.1\r\nfuture                        0.18.2\r\ngast                          0.3.3\r\ngensim                        3.8.3\r\ngeographiclib                 1.52\r\ngeopy                         2.1.0\r\ngevent                        21.1.2\r\ngitdb                         4.0.7\r\nGitPython                     3.1.18\r\ngoogle-auth                   1.32.1\r\ngoogle-auth-oauthlib          0.4.1\r\ngoogle-pasta                  0.2.0\r\ngreenlet                      1.1.0\r\ngrpcio                        1.37.1\r\nh5py                          2.10.0\r\nhtml5lib                      1.1\r\nhummingbird-ml                0.4.0\r\nidna                          2.10\r\nimagecodecs                   2021.3.31\r\nimageio                       2.9.0\r\nimportlib-metadata            4.6.1\r\nimportlib-resources           5.9.0\r\nipykernel                     6.0.1\r\nipython                       7.23.1\r\nipython-genutils              0.2.0\r\nipywidgets                    7.6.3\r\nisodate                       0.6.0\r\nitsdangerous                  2.0.1\r\njdcal                         1.4.1\r\njedi                          0.18.0\r\njeepney                       0.6.0\r\nJinja2                        3.0.1\r\njmespath                      0.10.0\r\njoblib                        1.0.1\r\njsonpickle                    2.0.0\r\njsonschema                    4.15.0\r\njupyter-client                6.1.12\r\njupyter-core                  4.7.1\r\njupyterlab-pygments           0.2.2\r\njupyterlab-widgets            3.0.3\r\nKeras-Applications            1.0.8\r\nKeras-Preprocessing           1.1.2\r\nkeras2onnx                    1.6.5\r\nkiwisolver                    1.3.1\r\nkoalas                        1.8.0\r\nKqlmagicCustom                0.1.114.post8\r\nlangchain                     0.0.249\r\nlangsmith                     0.0.16\r\nliac-arff                     2.5.0\r\nlibrary-metadata-cooker       0.0.7\r\nlightgbm                      3.2.1\r\nlime                          0.2.0.1\r\nllvmlite                      0.36.0\r\nlocket                        0.2.1\r\nloguru                        0.7.0\r\nlxml                          4.6.5\r\nMarkdown                      3.3.4\r\nMarkupSafe                    2.0.1\r\nmarshmallow                   3.20.1\r\nmatplotlib                    3.4.2\r\nmatplotlib-inline             0.1.2\r\nmistune                       2.0.4\r\nmleap                         0.17.0\r\nmlflow-skinny                 1.18.0\r\nmsal                          1.12.0\r\nmsal-extensions               0.2.2\r\nmsrest                        0.6.21\r\nmsrestazure                   0.6.4\r\nmultidict                     5.1.0\r\nmypy                          0.780\r\nmypy-extensions               0.4.3\r\nnbclient                      0.6.7\r\nnbconvert                     7.0.0\r\nnbformat                      5.4.0\r\nndg-httpsclient               0.5.1\r\nnest-asyncio                  1.5.5\r\nnetworkx                      2.5.1\r\nnltk                          3.6.2\r\nnotebook                      6.4.12\r\nnotebookutils                 3.1.2-20230518.1\r\nnumba                         0.53.1\r\nnumexpr                       2.8.4\r\nnumpy                         1.24.4\r\noauthlib                      3.1.1\r\nolefile                       0.46\r\nonnx                          1.9.0\r\nonnxconverter-common          1.7.0\r\nonnxmltools                   1.7.0\r\nonnxruntime                   1.7.2\r\nopenai                        0.27.8\r\nopenapi-schema-pydantic       1.2.4\r\nopenpyxl                      3.0.7\r\nopt-einsum                    3.3.0\r\npackaging                     21.0\r\npandas                        1.2.3\r\npandasql                      0.7.3\r\npandocfilters                 1.5.0\r\nparso                         0.8.2\r\npartd                         1.2.0\r\npathspec                      0.8.1\r\npatsy                         0.5.1\r\npexpect                       4.8.0\r\npickleshare                   0.7.5\r\nPillow                        8.2.0\r\npinecone-client               2.2.2\r\npip                           23.2.1\r\npkgutil_resolve_name          1.3.10\r\nplatformdirs                  2.5.2\r\nplotly                        4.14.3\r\npmdarima                      1.8.2\r\npooch                         1.4.0\r\nportalocker                   1.7.1\r\nprettytable                   2.4.0\r\nprometheus-client             0.14.1\r\nprompt-toolkit                3.0.19\r\nprotobuf                      3.15.8\r\npsutil                        5.8.0\r\nptyprocess                    0.7.0\r\npy4j                          0.10.9\r\npyarrow                       3.0.0\r\npyasn1                        0.4.8\r\npyasn1-modules                0.2.8\r\npycairo                       1.20.1\r\npycosat                       0.6.3\r\npycparser                     2.20\r\npydantic                      1.8.2\r\npydantic_core                 2.4.0\r\nPygments                      2.9.0\r\nPyGObject                     3.40.1\r\nPyJWT                         2.1.0\r\npyodbc                        4.0.30\r\npyOpenSSL                     20.0.1\r\npyparsing                     2.4.7\r\npyperclip                     1.8.2\r\nPyQt5                         5.12.3\r\nPyQt5_sip                     4.19.18\r\nPyQtChart                     5.12\r\nPyQtWebEngine                 5.12.1\r\npyrsistent                    0.18.1\r\nPySocks                       1.7.1\r\npyspark                       3.1.2\r\npython-dateutil               2.8.1\r\npytz                          2021.1\r\npyu2f                         0.1.5\r\nPyWavelets                    1.1.1\r\nPyYAML                        5.4.1\r\npyzmq                         22.1.0\r\nregex                         2023.6.3\r\nrequests                      2.31.0\r\nrequests-oauthlib             1.3.0\r\nretrying                      1.3.3\r\nrsa                           4.7.2\r\nruamel.yaml                   0.17.4\r\nruamel.yaml.clib              0.2.6\r\nruamel-yaml-conda             0.15.100\r\nSALib                         1.3.11\r\nscikit-image                  0.18.1\r\nscikit-learn                  0.23.2\r\nscipy                         1.5.3\r\nseaborn                       0.11.1\r\nSecretStorage                 3.3.1\r\nSend2Trash                    1.8.0\r\nsetuptools                    49.6.0.post20210108\r\nshap                          0.39.0\r\nsix                           1.16.0\r\nskl2onnx                      1.8.0\r\nsklearn-pandas                2.2.0\r\nslicer                        0.0.7\r\nsmart-open                    5.1.0\r\nsmmap                         3.0.5\r\nsoupsieve                     2.2.1\r\nSQLAlchemy                    1.4.20\r\nsqlanalyticsconnectorpy       1.0.1\r\nstatsmodels                   0.12.2\r\nsynapseml-cognitive           0.10.2.dev1\r\nsynapseml-core                0.10.2.dev1\r\nsynapseml-deep-learning       0.10.2.dev1\r\nsynapseml-internal            0.0.0.dev1\r\nsynapseml-lightgbm            0.10.2.dev1\r\nsynapseml-opencv              0.10.2.dev1\r\nsynapseml-vw                  0.10.2.dev1\r\ntabulate                      0.8.9\r\ntenacity                      8.2.2\r\ntensorboard                   2.4.1\r\ntensorboard-plugin-wit        1.8.0\r\ntensorflow                    2.4.1\r\ntensorflow-estimator          2.4.0\r\ntermcolor                     1.1.0\r\nterminado                     0.15.0\r\ntextblob                      0.15.3\r\nthreadpoolctl                 2.1.0\r\ntifffile                      2021.4.8\r\ntiktoken                      0.4.0\r\ntinycss2                      1.1.1\r\ntoolz                         0.11.1\r\ntorch                         1.8.1\r\ntorchvision                   0.9.1\r\ntornado                       6.1\r\ntqdm                          4.65.0\r\ntraitlets                     5.0.5\r\ntyped-ast                     1.4.3\r\ntyping_extensions             4.5.0\r\ntyping-inspect                0.8.0\r\nurllib3                       1.26.4\r\nvirtualenv                    20.14.0\r\nwcwidth                       0.2.5\r\nwebencodings                  0.5.1\r\nwebsocket-client              1.1.0\r\nWerkzeug                      2.0.1\r\nwheel                         0.36.2\r\nwidgetsnbextension            3.5.2\r\nwrapt                         1.12.1\r\nxgboost                       1.4.0\r\nXlsxWriter                    3.0.3\r\nyarl                          1.6.3\r\nzipp                          3.5.0\r\nzope.event                    4.5.0\r\nzope.interface                5.4.0\r\n\r\n``\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [X] Async\n\n### Reproduction\n\nGo to Azure Synapse Studio \r\nOpen a Notebook\r\nSelect Pyspark(Python) as Language\r\nPlease note your node should run python 3.8\r\n\r\nThen put bellow \r\n\r\n### Installed bellow to the session. \r\n```\r\n!pip install --upgrade pip\r\n!pip install tqdm\r\n!pip install pinecone-client\r\n!pip install typing-extensions==4.5.0\r\n!pip install langchain\r\n!pip install openai\r\n!pip install tiktoken\r\n```\r\n\r\n### Here are my imports \r\n```\r\nfrom langchain.vectorstores import Pinecone\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\n\r\nimport datetime\r\nfrom datetime import date, timedelta\r\nimport time\r\nimport csv\r\n\r\nimport openai\r\nimport requests\r\nimport pandas as pd\r\nfrom pyspark.sql import SparkSession\r\nfrom pyspark.sql.functions import col, lit, current_timestamp\r\nfrom pyspark.sql import functions as F\r\nfrom pyspark.sql import Row\r\nfrom pyspark.sql.utils import AnalysisException\r\nfrom pyspark.sql.types import StructType, StructField, StringType, TimestampType, LongType\r\nfrom pyspark.sql.window import Window\r\nfrom pyspark.sql import types as T\r\nimport concurrent.futures\r\nimport pinecone\r\nimport tiktoken\r\n```\r\n\r\nRun the notebook.\n\n### Expected behavior\n\nImport should be happend without any issues.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8577/reactions",
            "total_count": 9,
            "+1": 7,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8577/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8574",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8574/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8574/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8574/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8574",
        "id": 1830903613,
        "node_id": "PR_kwDOIPDwls5W4-Ab",
        "number": 8574,
        "title": "fix apparent spelling inconsistencies",
        "user": {
            "login": "shibuiwilliam",
            "id": 23517545,
            "node_id": "MDQ6VXNlcjIzNTE3NTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/23517545?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shibuiwilliam",
            "html_url": "https://github.com/shibuiwilliam",
            "followers_url": "https://api.github.com/users/shibuiwilliam/followers",
            "following_url": "https://api.github.com/users/shibuiwilliam/following{/other_user}",
            "gists_url": "https://api.github.com/users/shibuiwilliam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shibuiwilliam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shibuiwilliam/subscriptions",
            "organizations_url": "https://api.github.com/users/shibuiwilliam/orgs",
            "repos_url": "https://api.github.com/users/shibuiwilliam/repos",
            "events_url": "https://api.github.com/users/shibuiwilliam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shibuiwilliam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-01T09:59:08Z",
        "updated_at": "2023-08-04T06:17:11Z",
        "closed_at": "2023-08-01T16:09:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8574",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8574",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8574.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8574.patch",
            "merged_at": "2023-08-01T16:09:10Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: fix apparent spelling inconsistencies in raising ImportError\r\n  - Issue: None\r\n  - Dependencies: None\r\n  - Tag maintainer: @baskaryan\r\n  - Twitter handle: @MLOpsj\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8574/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8574/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8573",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8573/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8573/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8573/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8573",
        "id": 1830773921,
        "node_id": "PR_kwDOIPDwls5W4imO",
        "number": 8573,
        "title": "Add Support for Loading Documents from Huawei OBS",
        "user": {
            "login": "mpb159753",
            "id": 9007876,
            "node_id": "MDQ6VXNlcjkwMDc4NzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9007876?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mpb159753",
            "html_url": "https://github.com/mpb159753",
            "followers_url": "https://api.github.com/users/mpb159753/followers",
            "following_url": "https://api.github.com/users/mpb159753/following{/other_user}",
            "gists_url": "https://api.github.com/users/mpb159753/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mpb159753/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mpb159753/subscriptions",
            "organizations_url": "https://api.github.com/users/mpb159753/orgs",
            "repos_url": "https://api.github.com/users/mpb159753/repos",
            "events_url": "https://api.github.com/users/mpb159753/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mpb159753/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-01T08:50:15Z",
        "updated_at": "2023-08-01T16:30:39Z",
        "closed_at": "2023-08-01T16:30:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8573",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8573",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8573.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8573.patch",
            "merged_at": "2023-08-01T16:30:30Z"
        },
        "body": "Description:\r\nThis PR adds support for loading documents from Huawei OBS (Object Storage Service) in Langchain. OBS is a cloud-based object storage service provided by Huawei Cloud. With this enhancement, Langchain users can now easily access and load documents stored in Huawei OBS directly into the system.\r\n\r\nKey Changes:\r\n- Added a new document loader module specifically for Huawei OBS integration.\r\n- Implemented the necessary logic to authenticate and connect to Huawei OBS using access credentials.\r\n- Enabled the loading of individual documents from a specified bucket and object key in Huawei OBS.\r\n- Provided the option to specify custom authentication information or obtain security tokens from Huawei Cloud ECS for easy access.\r\n\r\nHow to Test:\r\n1. Ensure the required package \"esdk-obs-python\" is installed.\r\n2. Configure the endpoint, access key, secret key, and bucket details for Huawei OBS in the Langchain settings.\r\n3. Load documents from Huawei OBS using the updated document loader module.\r\n4. Verify that documents are successfully retrieved and loaded into Langchain for further processing.\r\n\r\nPlease review this PR and let us know if any further improvements are needed. Your feedback is highly appreciated!\r\n\r\n@rlancemartin, @eyurtsev\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8573/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8573/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8572",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8572/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8572/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8572/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8572",
        "id": 1830771603,
        "node_id": "I_kwDOIPDwls5tH1uT",
        "number": 8572,
        "title": "Issue: Structure of this repo is confusing",
        "user": {
            "login": "r7l",
            "id": 30982145,
            "node_id": "MDQ6VXNlcjMwOTgyMTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/30982145?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/r7l",
            "html_url": "https://github.com/r7l",
            "followers_url": "https://api.github.com/users/r7l/followers",
            "following_url": "https://api.github.com/users/r7l/following{/other_user}",
            "gists_url": "https://api.github.com/users/r7l/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/r7l/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/r7l/subscriptions",
            "organizations_url": "https://api.github.com/users/r7l/orgs",
            "repos_url": "https://api.github.com/users/r7l/repos",
            "events_url": "https://api.github.com/users/r7l/events{/privacy}",
            "received_events_url": "https://api.github.com/users/r7l/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-01T08:48:57Z",
        "updated_at": "2023-11-07T16:05:58Z",
        "closed_at": "2023-11-07T16:05:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nThis repo was split up between the core package and some experimental package. While this is a good idea, it's kinda odd to have both packages in the same repo. Even further you're releasing versions for both of these packages within the same repo. So 5 days ago there was a 0.0.5 release while later on you had 0.0.249.\r\n\r\nI've actually never seen such a structure before and it's messing up scripted automation to follow releases.\n\n### Suggestion:\n\nCreate a new repo for `LangChain Experimental` and have those releases there.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8572/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8572/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8571",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8571/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8571/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8571/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8571",
        "id": 1830709083,
        "node_id": "PR_kwDOIPDwls5W4UvU",
        "number": 8571,
        "title": "bump 249",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-01T08:12:07Z",
        "updated_at": "2023-08-01T08:20:17Z",
        "closed_at": "2023-08-01T08:20:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8571",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8571",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8571.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8571.patch",
            "merged_at": "2023-08-01T08:20:16Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8571/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8571/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8570",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8570/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8570/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8570/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8570",
        "id": 1830676483,
        "node_id": "PR_kwDOIPDwls5W4Nsb",
        "number": 8570,
        "title": "Update README.md",
        "user": {
            "login": "levalencia",
            "id": 6962857,
            "node_id": "MDQ6VXNlcjY5NjI4NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6962857?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/levalencia",
            "html_url": "https://github.com/levalencia",
            "followers_url": "https://api.github.com/users/levalencia/followers",
            "following_url": "https://api.github.com/users/levalencia/following{/other_user}",
            "gists_url": "https://api.github.com/users/levalencia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/levalencia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/levalencia/subscriptions",
            "organizations_url": "https://api.github.com/users/levalencia/orgs",
            "repos_url": "https://api.github.com/users/levalencia/repos",
            "events_url": "https://api.github.com/users/levalencia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/levalencia/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-01T07:53:57Z",
        "updated_at": "2023-11-27T20:17:09Z",
        "closed_at": "2023-11-13T06:07:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8570",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8570",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8570.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8570.patch",
            "merged_at": "2023-11-13T06:07:49Z"
        },
        "body": "\r\n  - Description: updated readme.\r\n  - Tag maintainer: @baskaryan\r\n  - Twitter handle: @Levalencia\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8570/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8570/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8569",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8569/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8569/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8569/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8569",
        "id": 1830662153,
        "node_id": "I_kwDOIPDwls5tHbAJ",
        "number": 8569,
        "title": "Enhance retrieval callback hooks to capture retrieved document IDs and embeddings",
        "user": {
            "login": "axiomofjoy",
            "id": 15664869,
            "node_id": "MDQ6VXNlcjE1NjY0ODY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15664869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axiomofjoy",
            "html_url": "https://github.com/axiomofjoy",
            "followers_url": "https://api.github.com/users/axiomofjoy/followers",
            "following_url": "https://api.github.com/users/axiomofjoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/axiomofjoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axiomofjoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axiomofjoy/subscriptions",
            "organizations_url": "https://api.github.com/users/axiomofjoy/orgs",
            "repos_url": "https://api.github.com/users/axiomofjoy/repos",
            "events_url": "https://api.github.com/users/axiomofjoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axiomofjoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-01T07:44:33Z",
        "updated_at": "2023-11-01T18:45:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nEnhance the retrieval callback hooks to include:\r\n- document IDs from the underlying vector store\r\n- document embeddings used during retrieval\n\n### Motivation\n\nI want to build a callback handler that enables LangChain users to visualize their data in [Phoenix](https://github.com/Arize-ai/phoenix), an open-source tool that provides debugging workflows for retrieval-augmented generation. At the moment, I am only able to get retrieved document text from the callback system, not the IDs or embeddings of the retrieved documents.\n\n### Your contribution\n\nI am willing to implement, test, and document this feature with guidance from the LangChain team. I am also happy to provide feedback on an implementation by the LangChain team by building an example callback handler using the enhancement retrieval hook functionality.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8569/reactions",
            "total_count": 3,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8569/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8568",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8568/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8568/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8568/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8568",
        "id": 1830645039,
        "node_id": "PR_kwDOIPDwls5W4G_0",
        "number": 8568,
        "title": "improve insert performance for hologres",
        "user": {
            "login": "zcgeng",
            "id": 13724617,
            "node_id": "MDQ6VXNlcjEzNzI0NjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/13724617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zcgeng",
            "html_url": "https://github.com/zcgeng",
            "followers_url": "https://api.github.com/users/zcgeng/followers",
            "following_url": "https://api.github.com/users/zcgeng/following{/other_user}",
            "gists_url": "https://api.github.com/users/zcgeng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zcgeng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zcgeng/subscriptions",
            "organizations_url": "https://api.github.com/users/zcgeng/orgs",
            "repos_url": "https://api.github.com/users/zcgeng/repos",
            "events_url": "https://api.github.com/users/zcgeng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zcgeng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "hwchase17",
                "id": 11986836,
                "node_id": "MDQ6VXNlcjExOTg2ODM2",
                "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hwchase17",
                "html_url": "https://github.com/hwchase17",
                "followers_url": "https://api.github.com/users/hwchase17/followers",
                "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
                "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
                "organizations_url": "https://api.github.com/users/hwchase17/orgs",
                "repos_url": "https://api.github.com/users/hwchase17/repos",
                "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hwchase17/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-01T07:33:17Z",
        "updated_at": "2023-11-09T05:35:26Z",
        "closed_at": "2023-11-09T05:35:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8568",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8568",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8568.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8568.patch",
            "merged_at": null
        },
        "body": "Hi,\r\nI made some code changes on the Hologres vector store to improve the data insertion performance.\r\nThe code has passed the format/lint/spell check. And I have run the unit test for Hologres connecting to my own database.\r\nThere is already an integration test `test_hologres.py` that covers the content of this change.\r\nPlease check this PR, thanks!\r\n\r\n@baskaryan \r\n@rlancemartin, @eyurtsev\r\n\r\nBest,\r\nChanggeng,\r\nDeveloper @ Alibaba Cloud",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8568/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8568/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8567",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8567/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8567/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8567/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8567",
        "id": 1830623474,
        "node_id": "I_kwDOIPDwls5tHRjy",
        "number": 8567,
        "title": "Enhance retrieval callback hooks to include information on cosine similarity scores or other retrieval metrics",
        "user": {
            "login": "axiomofjoy",
            "id": 15664869,
            "node_id": "MDQ6VXNlcjE1NjY0ODY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15664869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axiomofjoy",
            "html_url": "https://github.com/axiomofjoy",
            "followers_url": "https://api.github.com/users/axiomofjoy/followers",
            "following_url": "https://api.github.com/users/axiomofjoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/axiomofjoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axiomofjoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axiomofjoy/subscriptions",
            "organizations_url": "https://api.github.com/users/axiomofjoy/orgs",
            "repos_url": "https://api.github.com/users/axiomofjoy/repos",
            "events_url": "https://api.github.com/users/axiomofjoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axiomofjoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-01T07:18:29Z",
        "updated_at": "2023-12-01T20:41:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nMake cosine similarity (or other retrieval metric, e.g., Euclidean distance) between query and retrieved documents available at the `retriever` callback hook.\r\n\r\nCurrently, these scores are computed during retrieval and are discarded before they become available to the retrieval callback hook:\r\n\r\nhttps://github.com/langchain-ai/langchain/blob/125ae6d9dec440e04a60f63f0f4fc8411f482df8/libs/langchain/langchain/vectorstores/base.py#L500\r\n\r\nhttps://github.com/langchain-ai/langchain/blob/125ae6d9dec440e04a60f63f0f4fc8411f482df8/libs/langchain/langchain/schema/retriever.py#L174\r\n\r\n### Motivation\r\n\r\nI want to build a callback handler that enables LangChain users to visualize their data in [Phoenix](https://github.com/Arize-ai/phoenix), an open-source tool that provides debugging workflows for retrieval-augmented generation. At the moment, it is not possible to get the similarity scores between queries and retrieved documents out of LangChain's callback system, for example, when using the `RetrievalQA` chain. Here is an [example notebook](https://github.com/Arize-ai/phoenix/blob/main/tutorials/langchain_pinecone_search_and_retrieval_tutorial.ipynb) where I sub-class `Pinecone` to get out the similarity scores:\r\n\r\n```\r\nclass PineconeWrapper(Pinecone):\r\n    query_text_to_document_score_tuples: Dict[str, List[Tuple[Document, float]]] = {}\r\n\r\n    def similarity_search_with_score(\r\n        self,\r\n        query: str,\r\n        k: int = 4,\r\n        filter: Optional[dict] = None,\r\n        namespace: Optional[str] = None,\r\n    ) -> List[Tuple[Document, float]]:\r\n        document_score_tuples = super().similarity_search_with_score(\r\n            query=query,\r\n            k=k,\r\n            filter=filter,\r\n            namespace=namespace,\r\n        )\r\n        self.query_text_to_document_score_tuples[query] = document_score_tuples\r\n        return document_score_tuples\r\n\r\n    @property\r\n    def retrieval_dataframe(self) -> pd.DataFrame:\r\n        query_texts = []\r\n        document_texts = []\r\n        retrieval_ranks = []\r\n        scores = []\r\n        for query_text, document_score_tuples in self.query_text_to_document_score_tuples.items():\r\n            for retrieval_rank, (document, score) in enumerate(document_score_tuples):\r\n                query_texts.append(query_text)\r\n                document_texts.append(document.page_content)\r\n                retrieval_ranks.append(retrieval_rank)\r\n                scores.append(score)\r\n        return pd.DataFrame.from_dict(\r\n            {\r\n                \"query_text\": query_texts,\r\n                \"document_text\": document_texts,\r\n                \"retrieval_rank\": retrieval_ranks,\r\n                \"score\": scores,\r\n            }\r\n        )\r\n```\r\n\r\nI would like the LangChain callback system to support this use-case.\r\n\r\n### Your contribution\r\n\r\nI am willing to implement, test, and document this feature with guidance from the LangChain team. I am also happy to provide feedback on an implementation by the LangChain team by building an example callback handler using the enhancement retrieval hook functionality.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8567/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8567/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8566",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8566/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8566/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8566/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8566",
        "id": 1830597493,
        "node_id": "PR_kwDOIPDwls5W381v",
        "number": 8566,
        "title": "fix bug in AzureML Endpoint",
        "user": {
            "login": "yangmingzhe",
            "id": 7844726,
            "node_id": "MDQ6VXNlcjc4NDQ3MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7844726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yangmingzhe",
            "html_url": "https://github.com/yangmingzhe",
            "followers_url": "https://api.github.com/users/yangmingzhe/followers",
            "following_url": "https://api.github.com/users/yangmingzhe/following{/other_user}",
            "gists_url": "https://api.github.com/users/yangmingzhe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yangmingzhe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yangmingzhe/subscriptions",
            "organizations_url": "https://api.github.com/users/yangmingzhe/orgs",
            "repos_url": "https://api.github.com/users/yangmingzhe/repos",
            "events_url": "https://api.github.com/users/yangmingzhe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yangmingzhe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-08-01T07:00:01Z",
        "updated_at": "2023-12-08T06:08:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8566",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8566",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8566.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8566.patch",
            "merged_at": null
        },
        "body": "Description:\r\nfix bug in azureml_endpoint.py\r\n\r\nIssue:\r\nwhen using the AzureMLOnlineEndpoint class without passing the content_formatter parameter, an AttributeError will occur. similarly, with classAzureMLChatOnlineEndpoint.\r\n\r\nDetails:\r\n1. update ContentFormatterBase to inherit from BaseModel for Pydantic validation support.\r\n2. add validators to AzureMLOnlineEndpoint and AzureMLChatOnlineEndpoint with informative error messages for enhanced usability.\r\n\r\nDependencies:\r\nno dependencies required",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8566/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8566/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8565",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8565/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8565/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8565/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8565",
        "id": 1830592050,
        "node_id": "I_kwDOIPDwls5tHJ4y",
        "number": 8565,
        "title": "Issue: How to use chain_type args in LLMchain?",
        "user": {
            "login": "yengogo",
            "id": 61774146,
            "node_id": "MDQ6VXNlcjYxNzc0MTQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/61774146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yengogo",
            "html_url": "https://github.com/yengogo",
            "followers_url": "https://api.github.com/users/yengogo/followers",
            "following_url": "https://api.github.com/users/yengogo/following{/other_user}",
            "gists_url": "https://api.github.com/users/yengogo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yengogo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yengogo/subscriptions",
            "organizations_url": "https://api.github.com/users/yengogo/orgs",
            "repos_url": "https://api.github.com/users/yengogo/repos",
            "events_url": "https://api.github.com/users/yengogo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yengogo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-01T06:55:55Z",
        "updated_at": "2023-11-08T16:07:15Z",
        "closed_at": "2023-11-08T16:07:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am currently working on the task of **article rewriting**, and both the QA chain and Summarize chain are not quite suitable for my task. \r\nSince I need to rewrite **multiple \"lengthy\"** articles, I would like to know how to use the chain_type in LLMchain. Alternatively, are there any other methods to achieve segment-level rewriting? Thank you.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8565/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8565/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8564",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8564/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8564/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8564/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8564",
        "id": 1830536926,
        "node_id": "I_kwDOIPDwls5tG8be",
        "number": 8564,
        "title": "Add callback support for embeddings",
        "user": {
            "login": "axiomofjoy",
            "id": 15664869,
            "node_id": "MDQ6VXNlcjE1NjY0ODY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15664869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axiomofjoy",
            "html_url": "https://github.com/axiomofjoy",
            "followers_url": "https://api.github.com/users/axiomofjoy/followers",
            "following_url": "https://api.github.com/users/axiomofjoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/axiomofjoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axiomofjoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axiomofjoy/subscriptions",
            "organizations_url": "https://api.github.com/users/axiomofjoy/orgs",
            "repos_url": "https://api.github.com/users/axiomofjoy/repos",
            "events_url": "https://api.github.com/users/axiomofjoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axiomofjoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-01T06:13:53Z",
        "updated_at": "2023-11-07T16:06:08Z",
        "closed_at": "2023-11-07T16:06:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nAdd embedding support to the callback system. Here is one approach I have in mind.\r\n\r\n- [ ] Add `on_embedding_start` method on `CallbackManagerMixin` in `libs/langchain/langchain/callbacks/base.py`.\r\n- [ ] Implement `EmbeddingManagerMixin` with `on_embedding_end` and `on_embedding_error` methods in `libs/langchain/langchain/callbacks/base.py`.\r\n- [ ] Add embedding callback hook to `Embeddings` abstract base class in `libs/langchain/langchain/embeddings/base.py`.\r\n- [ ] Tweak concrete embeddings implementations in `libs/langchain/langchain/embeddings` as necessary.\r\n\r\nOne minimally invasive approach would be:\r\n- Implement concrete `embed_documents`, `embed_query`, `aembed_documents`, and `aembed_query` methods on the abstract `Embeddings` base class that contain the embeddings callback hook. Add abstract methods `_embed_documents` and `_embed_query` methods and unimplemented `_aembed_documents` and `_aembed_query` methods to the base class.\r\n- Rename existing concrete implementations of `embed_documents`, `embed_query`, `aembed_documents`, and `aembed_query` to `_embed_documents`, `_embed_query`, `_aembed_documents`, and `_aembed_query`.\r\n\r\n### Motivation\r\n\r\nEmbeddings are useful for LLM application monitoring and debugging. I want to build a callback handler that enables LangChain users to visualize their data in [Phoenix](https://github.com/Arize-ai/phoenix), an open-source tool that provides debugging workflows for retrieval-augmented generation. At the moment, it is not possible to get the query embeddings out of LangChain's callback system, for example, when using the `RetrievalQA` chain. Here is an [example notebook](https://github.com/Arize-ai/phoenix/blob/main/tutorials/langchain_pinecone_search_and_retrieval_tutorial.ipynb) where I sub-class `OpenAIEmbeddings` to get out the embedding data:\r\n\r\n```\r\nclass OpenAIEmbeddingsWrapper(OpenAIEmbeddings):\r\n    \"\"\"\r\n    A wrapper around OpenAIEmbeddings that stores the query and document\r\n    embeddings.\r\n    \"\"\"\r\n\r\n    query_text_to_embedding: Dict[str, List[float]] = {}\r\n    document_text_to_embedding: Dict[str, List[float]] = {}\r\n\r\n    def embed_query(self, text: str) -> List[float]:\r\n        embedding = super().embed_query(text)\r\n        self.query_text_to_embedding[text] = embedding\r\n        return embedding\r\n\r\n    def embed_documents(self, texts: List[str], chunk_size: Optional[int] = 0) -> List[List[float]]:\r\n        embeddings = super().embed_documents(texts, chunk_size)\r\n        for text, embedding in zip(texts, embeddings):\r\n            self.document_text_to_embedding[text] = embedding\r\n        return embeddings\r\n\r\n    @property\r\n    def query_embedding_dataframe(self) -> pd.DataFrame:\r\n        return self._convert_text_to_embedding_map_to_dataframe(self.query_text_to_embedding)\r\n\r\n    @property\r\n    def document_embedding_dataframe(self) -> pd.DataFrame:\r\n        return self._convert_text_to_embedding_map_to_dataframe(self.document_text_to_embedding)\r\n\r\n    @staticmethod\r\n    def _convert_text_to_embedding_map_to_dataframe(\r\n        text_to_embedding: Dict[str, List[float]]\r\n    ) -> pd.DataFrame:\r\n        texts, embeddings = map(list, zip(*text_to_embedding.items()))\r\n        embedding_arrays = [np.array(embedding) for embedding in embeddings]\r\n        return pd.DataFrame.from_dict(\r\n            {\r\n                \"text\": texts,\r\n                \"text_vector\": embedding_arrays,\r\n            }\r\n        )\r\n```\r\n\r\n I would like the LangChain callback system to support this use-case.\r\n\r\nThis feature has been [requested for TypeScript](https://github.com/hwchase17/langchainjs/issues/586) and has an [open PR](https://github.com/hwchase17/langchainjs/pull/1859). An additional motivation is to maintain parity with the TypeScript library.\r\n\r\n### Your contribution\r\n\r\nI am willing to implement, test, and document this feature with guidance from the LangChain team. I am also happy to provide feedback on an implementation by the LangChain team by building an example callback handler using the embeddings hook.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8564/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8564/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8563",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8563/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8563/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8563/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8563",
        "id": 1830501646,
        "node_id": "I_kwDOIPDwls5tGz0O",
        "number": 8563,
        "title": "Petals API Support",
        "user": {
            "login": "Sharpz7",
            "id": 46480158,
            "node_id": "MDQ6VXNlcjQ2NDgwMTU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/46480158?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sharpz7",
            "html_url": "https://github.com/Sharpz7",
            "followers_url": "https://api.github.com/users/Sharpz7/followers",
            "following_url": "https://api.github.com/users/Sharpz7/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sharpz7/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sharpz7/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sharpz7/subscriptions",
            "organizations_url": "https://api.github.com/users/Sharpz7/orgs",
            "repos_url": "https://api.github.com/users/Sharpz7/repos",
            "events_url": "https://api.github.com/users/Sharpz7/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sharpz7/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-01T05:38:35Z",
        "updated_at": "2023-11-28T11:01:45Z",
        "closed_at": "2023-11-07T16:06:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nCurrently, langchain supports petals, but I think we should also support using a petals API endpoint. https://github.com/petals-infra/chat.petals.dev\n\n### Motivation\n\nThe idea here is that users don't need to run the base application on their system, and can just use the API directly.\r\n\r\nI think this is useful as a developer for speed, and just testing things quickly. I also think it would be the easiest and most reliabile way for any langchain user to get access to a high quality LLM on low-spec hardware.\n\n### Your contribution\n\nI am happy to add this myself if I can be guided on what parts of the code need changed.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8563/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8563/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8562",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8562/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8562/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8562/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8562",
        "id": 1830413556,
        "node_id": "PR_kwDOIPDwls5W3VnE",
        "number": 8562,
        "title": "implement async exec for base.py",
        "user": {
            "login": "mzamini92",
            "id": 32536264,
            "node_id": "MDQ6VXNlcjMyNTM2MjY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/32536264?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzamini92",
            "html_url": "https://github.com/mzamini92",
            "followers_url": "https://api.github.com/users/mzamini92/followers",
            "following_url": "https://api.github.com/users/mzamini92/following{/other_user}",
            "gists_url": "https://api.github.com/users/mzamini92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mzamini92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mzamini92/subscriptions",
            "organizations_url": "https://api.github.com/users/mzamini92/orgs",
            "repos_url": "https://api.github.com/users/mzamini92/repos",
            "events_url": "https://api.github.com/users/mzamini92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mzamini92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-01T03:53:40Z",
        "updated_at": "2023-09-21T04:00:41Z",
        "closed_at": "2023-09-21T04:00:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8562",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8562",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8562.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8562.patch",
            "merged_at": null
        },
        "body": "Can we such a method for async? The return type is specified as `asyncio.Task[Dict[str, str]]` to represent the dictionary return type wrapped in an `asyncio.Task`. `Since _acall()` is an asynchronous method, any coroutine calls within it should be awaited. So, we use await when calling `run_manager.on_text()` to properly await the completion of the asynchronous operation.\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure you're PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8562/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8562/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8560",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8560/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8560/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8560/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8560",
        "id": 1830366362,
        "node_id": "PR_kwDOIPDwls5W3Lqx",
        "number": 8560,
        "title": "Add enum rendering to api reference",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-01T02:50:39Z",
        "updated_at": "2023-08-04T20:08:03Z",
        "closed_at": "2023-08-04T20:08:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8560",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8560",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8560.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8560.patch",
            "merged_at": null
        },
        "body": "This is a hack to improve rendering of enums -- it's determining the type of\nthe class based on membership checks of its attributes. It does not feel like\nthe correct solution, but the correct solution seems very involved in this\ncase. \n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8560/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8560/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8559",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8559/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8559/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8559/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8559",
        "id": 1830294376,
        "node_id": "PR_kwDOIPDwls5W280Z",
        "number": 8559,
        "title": "Harrison/loader bug",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-01T01:17:09Z",
        "updated_at": "2023-08-01T20:31:51Z",
        "closed_at": "2023-08-01T20:31:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8559",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8559",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8559.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8559.patch",
            "merged_at": "2023-08-01T20:31:50Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8559/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8559/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8558",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8558/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8558/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8558/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8558",
        "id": 1830288016,
        "node_id": "I_kwDOIPDwls5tF_qQ",
        "number": 8558,
        "title": "Add metadata parameter(s) to SQLDatabase class",
        "user": {
            "login": "hagope",
            "id": 65898,
            "node_id": "MDQ6VXNlcjY1ODk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/65898?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hagope",
            "html_url": "https://github.com/hagope",
            "followers_url": "https://api.github.com/users/hagope/followers",
            "following_url": "https://api.github.com/users/hagope/following{/other_user}",
            "gists_url": "https://api.github.com/users/hagope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hagope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hagope/subscriptions",
            "organizations_url": "https://api.github.com/users/hagope/orgs",
            "repos_url": "https://api.github.com/users/hagope/repos",
            "events_url": "https://api.github.com/users/hagope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hagope/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-01T01:08:42Z",
        "updated_at": "2023-11-07T16:06:18Z",
        "closed_at": "2023-11-07T16:06:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nMost databases include comment metadata on both tables and columns in a table. It would be nice to be able to pass this additional context to the LLM to get a better response. \r\n\r\nThe implementation could include adding two parameters to the [SQLDatabase](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/utilities/sql_database.py) object. For example:\r\n\r\n- `table_metadata_sql` (perhaps `table_comment_sql`) runs a query and expects a table with two columns `table_name` and `comment`\r\n- `column_metadata_sql` (perhaps `column_comment_sql` runs a query and expects a table with three columns `table_name`, `col_name`, and `comment`\r\n\r\nPerhaps these two params could be combined into a single `metadata_sql` which returns for column table with `table_name`, `table_comment`, `column_name`, and `column_comment` \r\n\r\n### Motivation\r\n\r\nThe main motivation behind this is to provide the LLM additional context beyond the CREATE TABLE and sample rows. Although this will be a more costly request (more tokens), I believe in many instances will lead to better SQL being generated. I also want to encourage better documentation of database objects in the data warehouse or data lake. \r\n\r\n### Your contribution\r\n\r\nHappy to submit a PR for this. Please weigh in on any design decisions: \r\n\r\n- how many parameters to use 1 or 2?\r\n- where to include the comments in the prompt, part of the CREATE TABLE as SQL comments?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8558/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8558/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8557",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8557/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8557/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8557/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8557",
        "id": 1830280248,
        "node_id": "PR_kwDOIPDwls5W251R",
        "number": 8557,
        "title": "Fix combining runnable sequences",
        "user": {
            "login": "jacoblee93",
            "id": 6952323,
            "node_id": "MDQ6VXNlcjY5NTIzMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6952323?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacoblee93",
            "html_url": "https://github.com/jacoblee93",
            "followers_url": "https://api.github.com/users/jacoblee93/followers",
            "following_url": "https://api.github.com/users/jacoblee93/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacoblee93/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacoblee93/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacoblee93/subscriptions",
            "organizations_url": "https://api.github.com/users/jacoblee93/orgs",
            "repos_url": "https://api.github.com/users/jacoblee93/repos",
            "events_url": "https://api.github.com/users/jacoblee93/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacoblee93/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-01T00:57:54Z",
        "updated_at": "2023-08-01T01:17:47Z",
        "closed_at": "2023-08-01T01:17:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8557",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8557",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8557.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8557.patch",
            "merged_at": "2023-08-01T01:17:47Z"
        },
        "body": "Combining runnable sequences was dropping a step in the middle.\r\n\r\n@nfcampos @baskaryan \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8557/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8557/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8556",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8556/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8556/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8556/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/8556",
        "id": 1830261522,
        "node_id": "I_kwDOIPDwls5tF5MS",
        "number": 8556,
        "title": "ValueError: Expected metadata value to be a str, int, or float, got [{'text': 'Git', 'url': '#git'}] which is a <class 'list'> when storing into Chroma vector stores using using element mode of UnstructuredMarkdownLoader",
        "user": {
            "login": "cheeseQI",
            "id": 45248933,
            "node_id": "MDQ6VXNlcjQ1MjQ4OTMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/45248933?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cheeseQI",
            "html_url": "https://github.com/cheeseQI",
            "followers_url": "https://api.github.com/users/cheeseQI/followers",
            "following_url": "https://api.github.com/users/cheeseQI/following{/other_user}",
            "gists_url": "https://api.github.com/users/cheeseQI/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cheeseQI/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cheeseQI/subscriptions",
            "organizations_url": "https://api.github.com/users/cheeseQI/orgs",
            "repos_url": "https://api.github.com/users/cheeseQI/repos",
            "events_url": "https://api.github.com/users/cheeseQI/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cheeseQI/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2023-08-01T00:31:42Z",
        "updated_at": "2023-11-13T03:39:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain: 0.0.248\r\nPython: 3.9.17\r\nOS version: Linux 6.1.27-43.48.amzn2023.x86_64\r\n\r\n### Who can help?\r\n\r\nI will submit a PR for a solution to this problem\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [x] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nCode:\r\n```python\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.document_loaders import UnstructuredMarkdownLoader\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\n\r\ndef testElement():\r\n    loader = UnstructuredMarkdownLoader(\r\n        \"filepath\", mode=\"elements\")\r\n    documents = loader.load()\r\n    text_splitter = CharacterTextSplitter(chunk_size=500, chunk_overlap=0)\r\n    split_docs = text_splitter.split_documents(documents)\r\n\r\n    embeddings = OpenAIEmbeddings()\r\n    docsearch = Chroma.from_documents(split_docs, embeddings)\r\n```\r\nAlso need to have a link format in the markdown file to be load, for example:\r\n```\r\n- [Google Developer Documentation Style Guide](https://developers.google.com/style)\r\n```\r\nError Message:\r\n```\r\n    138         # isinstance(True, int) evaluates to True, so we need to check for bools separately\r\n    139         if not isinstance(value, (str, int, float)) or isinstance(value, bool):\r\n--> 140             raise ValueError(\r\n    141                 f\"Expected metadata value to be a str, int, or float, got {value} which is a {type(value)}\"\r\n    142             )\r\nValueError: Expected metadata value to be a str, int, or float, got [{'text': 'Git', 'url': '#git'}] which is a <class 'list'>\r\n```\r\n\r\n### Expected behavior\r\n\r\nI expect to see the split documents loaded into Chroma, however, this raise error for not passing type check for metadata.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8556/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8556/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8555",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8555/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8555/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8555/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8555",
        "id": 1830250278,
        "node_id": "PR_kwDOIPDwls5W2zis",
        "number": 8555,
        "title": "Update openai_functions.py to handle KeyError: 'function_call' error",
        "user": {
            "login": "bhavishpahwa",
            "id": 108733252,
            "node_id": "U_kgDOBnsjRA",
            "avatar_url": "https://avatars.githubusercontent.com/u/108733252?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bhavishpahwa",
            "html_url": "https://github.com/bhavishpahwa",
            "followers_url": "https://api.github.com/users/bhavishpahwa/followers",
            "following_url": "https://api.github.com/users/bhavishpahwa/following{/other_user}",
            "gists_url": "https://api.github.com/users/bhavishpahwa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bhavishpahwa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bhavishpahwa/subscriptions",
            "organizations_url": "https://api.github.com/users/bhavishpahwa/orgs",
            "repos_url": "https://api.github.com/users/bhavishpahwa/repos",
            "events_url": "https://api.github.com/users/bhavishpahwa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bhavishpahwa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-01T00:16:50Z",
        "updated_at": "2023-08-07T18:30:07Z",
        "closed_at": "2023-08-07T18:30:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8555",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8555",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8555.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8555.patch",
            "merged_at": null
        },
        "body": "Description: Sometime when trying to custom use Output parsers for function call we get KeyError: 'function_call' when function_call key is not present in the response for a particular request. This exception handles that case.\r\n\r\n<img width=\"1275\" alt=\"Screenshot 2023-08-01 at 5 42 52 AM\" src=\"https://github.com/langchain-ai/langchain/assets/108733252/a1031a80-9541-4fed-81e8-a3e60e288538\">\r\n\r\nIssue: N/A\r\nTag maintainer: @rlancemartin \r\nDependencies: None\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8555/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8555/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8554",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8554/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8554/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8554/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8554",
        "id": 1830243885,
        "node_id": "PR_kwDOIPDwls5W2yKq",
        "number": 8554,
        "title": "Chatbots use case",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-01T00:10:53Z",
        "updated_at": "2023-08-04T14:02:15Z",
        "closed_at": "2023-08-04T14:02:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8554",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8554",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8554.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8554.patch",
            "merged_at": "2023-08-04T14:02:14Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8554/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8554/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8553",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8553/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8553/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8553/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8553",
        "id": 1830235126,
        "node_id": "PR_kwDOIPDwls5W2wRZ",
        "number": 8553,
        "title": "Rm RunTypeEnum",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-01T00:01:53Z",
        "updated_at": "2023-08-01T06:32:08Z",
        "closed_at": "2023-08-01T06:32:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8553",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8553",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8553.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8553.patch",
            "merged_at": "2023-08-01T06:32:07Z"
        },
        "body": "We already support raw strings in the SDK but would like to deprecate client-side validation of run types. This removes its usage",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8553/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8553/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8552",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8552/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8552/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8552/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/8552",
        "id": 1830228892,
        "node_id": "PR_kwDOIPDwls5W2u93",
        "number": 8552,
        "title": "add example for memory",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-31T23:53:14Z",
        "updated_at": "2023-08-01T08:10:20Z",
        "closed_at": "2023-08-01T08:10:19Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/8552",
            "html_url": "https://github.com/langchain-ai/langchain/pull/8552",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/8552.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/8552.patch",
            "merged_at": "2023-08-01T08:10:19Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/8552/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/8552/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]