[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7674",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7674/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7674/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7674/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7674",
        "id": 1803641369,
        "node_id": "PR_kwDOIPDwls5VdDLA",
        "number": 7674,
        "title": "some notebook updates",
        "user": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T19:29:04Z",
        "updated_at": "2023-07-13T20:59:06Z",
        "closed_at": "2023-07-13T20:59:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7674",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7674",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7674.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7674.patch",
            "merged_at": "2023-07-13T20:59:05Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7674/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7674/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7673",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7673/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7673/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7673/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7673",
        "id": 1803531593,
        "node_id": "PR_kwDOIPDwls5VcrDA",
        "number": 7673,
        "title": "move chain to schema",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T18:12:17Z",
        "updated_at": "2023-08-10T23:29:44Z",
        "closed_at": "2023-08-10T23:29:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7673",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7673",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7673.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7673.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7673/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7673/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7672",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7672/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7672/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7672/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7672",
        "id": 1803490907,
        "node_id": "PR_kwDOIPDwls5VciBa",
        "number": 7672,
        "title": "Improve walkthrough links for sphinx",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T17:44:50Z",
        "updated_at": "2023-07-13T23:08:33Z",
        "closed_at": "2023-07-13T23:08:32Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7672",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7672",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7672.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7672.patch",
            "merged_at": "2023-07-13T23:08:32Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7672/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7672/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7671",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7671/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7671/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7671/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7671",
        "id": 1803479936,
        "node_id": "I_kwDOIPDwls5rfuuA",
        "number": 7671,
        "title": "Issue: Can't use NotebookLoader to load ipynb files generically",
        "user": {
            "login": "eilone",
            "id": 138380654,
            "node_id": "U_kgDOCD-Fbg",
            "avatar_url": "https://avatars.githubusercontent.com/u/138380654?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eilone",
            "html_url": "https://github.com/eilone",
            "followers_url": "https://api.github.com/users/eilone/followers",
            "following_url": "https://api.github.com/users/eilone/following{/other_user}",
            "gists_url": "https://api.github.com/users/eilone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eilone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eilone/subscriptions",
            "organizations_url": "https://api.github.com/users/eilone/orgs",
            "repos_url": "https://api.github.com/users/eilone/repos",
            "events_url": "https://api.github.com/users/eilone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eilone/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-13T17:36:30Z",
        "updated_at": "2023-10-19T16:05:13Z",
        "closed_at": "2023-10-19T16:05:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi!\r\nI have some problem with the `NotebookLoader` loader:\r\nI'm trying to access my repo and detect all of the `.ipynb` files, and then load them to the LLM Chain I'm implementing using LangChain. The repo can be viewed [here](https://github.com/eilone/RepoReader/tree/eilon-br) \r\n\r\n\r\n```\r\n    for ext in extensions:\r\n        glob_pattern = f'**/*.{ext}'\r\n        try:\r\n            loader = None\r\n            if ext == 'ipynb':\r\n                loader = **NotebookLoader**(str(repo_path), include_outputs=True, max_output_length=20,\r\n                                        remove_newline=True,  loader_kwargs={\"content_type\": \"text/plain\"})\r\n```\r\n\r\nYet I don't know how to pass the `glob_pattern` to this loader, resulting in going to the base dir and not being able to look for the notebook files...\r\n\r\n```\r\n[Errno 21] Is a directory: 'my_dir'\r\n```\r\n\r\nCan you please help me figure it out? Considering I don't want to pass each `ipynb` file-path individually?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7671/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7671/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7670",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7670/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7670/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7670/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7670",
        "id": 1803441127,
        "node_id": "PR_kwDOIPDwls5VcW_j",
        "number": 7670,
        "title": "Update anthropic.py",
        "user": {
            "login": "adarshxs",
            "id": 114558126,
            "node_id": "U_kgDOBtQErg",
            "avatar_url": "https://avatars.githubusercontent.com/u/114558126?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adarshxs",
            "html_url": "https://github.com/adarshxs",
            "followers_url": "https://api.github.com/users/adarshxs/followers",
            "following_url": "https://api.github.com/users/adarshxs/following{/other_user}",
            "gists_url": "https://api.github.com/users/adarshxs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adarshxs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adarshxs/subscriptions",
            "organizations_url": "https://api.github.com/users/adarshxs/orgs",
            "repos_url": "https://api.github.com/users/adarshxs/repos",
            "events_url": "https://api.github.com/users/adarshxs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adarshxs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T17:13:04Z",
        "updated_at": "2023-07-13T18:47:45Z",
        "closed_at": "2023-07-13T18:47:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7670",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7670",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7670.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7670.patch",
            "merged_at": null
        },
        "body": "Refactor and Improve `ChatAnthropic` Class:\r\n\r\nIntroduced a new method `_generate_response` to handle the common code between `_generate` and `_agenerate` methods.\r\nEnsured consistent use of type annotations throughout the class for improved readability and error checking\r\n\r\nTwitter: @adarshxs\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7670/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7670/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7669",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7669/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7669/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7669/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7669",
        "id": 1803420003,
        "node_id": "PR_kwDOIPDwls5VcSW6",
        "number": 7669,
        "title": "Nuclia understanding api",
        "user": {
            "login": "ebrehault",
            "id": 460966,
            "node_id": "MDQ6VXNlcjQ2MDk2Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/460966?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ebrehault",
            "html_url": "https://github.com/ebrehault",
            "followers_url": "https://api.github.com/users/ebrehault/followers",
            "following_url": "https://api.github.com/users/ebrehault/following{/other_user}",
            "gists_url": "https://api.github.com/users/ebrehault/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ebrehault/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ebrehault/subscriptions",
            "organizations_url": "https://api.github.com/users/ebrehault/orgs",
            "repos_url": "https://api.github.com/users/ebrehault/repos",
            "events_url": "https://api.github.com/users/ebrehault/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ebrehault/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-07-13T16:58:21Z",
        "updated_at": "2023-08-05T18:02:49Z",
        "closed_at": "2023-08-05T18:02:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7669",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7669",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7669.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7669.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nThis pull request allows to use the [Nuclia](https://docs.nuclia.dev/docs/about/nuclia) file processing capabilities in LangChain.\r\n\r\nIt provides:\r\n\r\n- a tool allowing to push files to the Nuclia processing queue, and to pull results fron this queue.\r\n- a document loader wrapping the tool, to ease the usage and to comply with the LangChain practices.\r\n\r\n(both comes with an example notebook + unit tests)\r\n\r\nThat's mostly about extracting text and metadata from any kind of file (document or media). It does *not* provide the other services offered by the Nuclia API.\r\n\r\nI will do other PRs to cover:\r\n- entity recognition\r\n- vector storage and searching in the NucliaDB vector database\r\n(unless you prefer a single PR providing all the different services altogether, let me know)\r\n\r\n# Dependencies\r\n\r\nIt requires an up-to-date version of `protobuf` (which is already a dependency of LangChain) and the `nucliadb-protos` package, in order to parse Protobuf messages retrieved from the Nuclia API.\r\n\r\n@rlancemartin, @eyurtsev,  @hinthornw, please review it when you have a moment :)\r\nAnd thank you for your work on LangChain, that's great!\r\n\r\nNote: our Twitter handler is `@NucliaAI`\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7669/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7669/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7668",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7668/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7668/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7668/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7668",
        "id": 1803353385,
        "node_id": "PR_kwDOIPDwls5VcD5V",
        "number": 7668,
        "title": "Normalize Trajectory Eval Score",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T16:19:19Z",
        "updated_at": "2023-07-13T16:58:29Z",
        "closed_at": "2023-07-13T16:58:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7668",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7668",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7668.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7668.patch",
            "merged_at": "2023-07-13T16:58:28Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7668/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7668/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7667",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7667/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7667/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7667/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7667",
        "id": 1803330944,
        "node_id": "PR_kwDOIPDwls5Vb_AI",
        "number": 7667,
        "title": "spelling nit",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T16:03:44Z",
        "updated_at": "2023-07-13T16:12:58Z",
        "closed_at": "2023-07-13T16:12:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7667",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7667",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7667.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7667.patch",
            "merged_at": "2023-07-13T16:12:57Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7667/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7667/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7666",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7666/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7666/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7666/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7666",
        "id": 1803303718,
        "node_id": "I_kwDOIPDwls5rfDsm",
        "number": 7666,
        "title": "ArxivRetriever should return a metadata Sources field",
        "user": {
            "login": "dcieslak19973",
            "id": 3847063,
            "node_id": "MDQ6VXNlcjM4NDcwNjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3847063?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dcieslak19973",
            "html_url": "https://github.com/dcieslak19973",
            "followers_url": "https://api.github.com/users/dcieslak19973/followers",
            "following_url": "https://api.github.com/users/dcieslak19973/following{/other_user}",
            "gists_url": "https://api.github.com/users/dcieslak19973/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dcieslak19973/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dcieslak19973/subscriptions",
            "organizations_url": "https://api.github.com/users/dcieslak19973/orgs",
            "repos_url": "https://api.github.com/users/dcieslak19973/repos",
            "events_url": "https://api.github.com/users/dcieslak19973/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dcieslak19973/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-13T15:46:48Z",
        "updated_at": "2023-10-21T16:06:55Z",
        "closed_at": "2023-10-21T16:06:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain=0.0.230\r\n\n\n### Who can help?\n\n@eyurtsev \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nLooks like in `ArxivAPIWrapper` perhaps could change:\r\n```\r\n            if self.load_all_available_meta:\r\n                extra_metadata = {\r\n                    \"entry_id\": result.entry_id,\r\n                    \"published_first_time\": str(result.published.date()),\r\n                    \"comment\": result.comment,\r\n                    \"journal_ref\": result.journal_ref,\r\n                    \"doi\": result.doi,\r\n                    \"primary_category\": result.primary_category,\r\n                    \"categories\": result.categories,\r\n                    \"links\": [link.href for link in result.links],\r\n                }\r\n            else:\r\n                extra_metadata = {}\r\n            metadata = {\r\n                \"Published\": str(result.updated.date()),\r\n                \"Title\": result.title,\r\n                \"Authors\": \", \".join(a.name for a in result.authors),\r\n                \"Summary\": result.summary,\r\n                **extra_metadata,\r\n            }\r\n```\r\nTo include a \"Sources\" tag, perhaps with the direct link(s) to the paper\n\n### Expected behavior\n\nMetadata containing a \"Sources\" tag",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7666/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7666/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7665",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7665/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7665/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7665/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7665",
        "id": 1803252587,
        "node_id": "I_kwDOIPDwls5re3Nr",
        "number": 7665,
        "title": "DOC: Text Splitter Python Doc down webpage",
        "user": {
            "login": "JanLeyva",
            "id": 78868781,
            "node_id": "MDQ6VXNlcjc4ODY4Nzgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/78868781?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JanLeyva",
            "html_url": "https://github.com/JanLeyva",
            "followers_url": "https://api.github.com/users/JanLeyva/followers",
            "following_url": "https://api.github.com/users/JanLeyva/following{/other_user}",
            "gists_url": "https://api.github.com/users/JanLeyva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JanLeyva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JanLeyva/subscriptions",
            "organizations_url": "https://api.github.com/users/JanLeyva/orgs",
            "repos_url": "https://api.github.com/users/JanLeyva/repos",
            "events_url": "https://api.github.com/users/JanLeyva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JanLeyva/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-13T15:17:41Z",
        "updated_at": "2023-10-15T22:30:26Z",
        "closed_at": "2023-10-15T22:30:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nHello, I was looking into the LangChain `text_splitter` documentation and found that Python documentation for this section is down https://python.langchain.com/docs/modules/data_connection/text_splitters.html.  Thank you for checking it!\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7665/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7665/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7664",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7664/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7664/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7664/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7664",
        "id": 1803249908,
        "node_id": "PR_kwDOIPDwls5VbtST",
        "number": 7664,
        "title": "Added **kwargs for embedding funcs",
        "user": {
            "login": "FrancescoSaverioZuppichini",
            "id": 15908060,
            "node_id": "MDQ6VXNlcjE1OTA4MDYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/15908060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FrancescoSaverioZuppichini",
            "html_url": "https://github.com/FrancescoSaverioZuppichini",
            "followers_url": "https://api.github.com/users/FrancescoSaverioZuppichini/followers",
            "following_url": "https://api.github.com/users/FrancescoSaverioZuppichini/following{/other_user}",
            "gists_url": "https://api.github.com/users/FrancescoSaverioZuppichini/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FrancescoSaverioZuppichini/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FrancescoSaverioZuppichini/subscriptions",
            "organizations_url": "https://api.github.com/users/FrancescoSaverioZuppichini/orgs",
            "repos_url": "https://api.github.com/users/FrancescoSaverioZuppichini/repos",
            "events_url": "https://api.github.com/users/FrancescoSaverioZuppichini/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FrancescoSaverioZuppichini/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-13T15:16:24Z",
        "updated_at": "2023-10-02T17:12:44Z",
        "closed_at": "2023-10-02T17:12:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7664",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7664",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7664.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7664.patch",
            "merged_at": null
        },
        "body": "Hi There,\r\n\r\nThis is a simple PR, adding **kwargs to `.embed_query` similar to the other OpenAI functions. This is handy because I can add to the request whatever I want, in my case I am running OpenAI behind a custom proxy and I need a couple of more things to the requests\r\n\r\n@baskaryan\r\n\r\nThanks\r\n\r\nCheers, \r\n\r\nFra",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7664/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7664/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7663",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7663/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7663/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7663/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7663",
        "id": 1803218927,
        "node_id": "I_kwDOIPDwls5reu_v",
        "number": 7663,
        "title": "Uncap pydantic dependency (allow pydantic 2.x)",
        "user": {
            "login": "rec",
            "id": 253362,
            "node_id": "MDQ6VXNlcjI1MzM2Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/253362?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rec",
            "html_url": "https://github.com/rec",
            "followers_url": "https://api.github.com/users/rec/followers",
            "following_url": "https://api.github.com/users/rec/following{/other_user}",
            "gists_url": "https://api.github.com/users/rec/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rec/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rec/subscriptions",
            "organizations_url": "https://api.github.com/users/rec/orgs",
            "repos_url": "https://api.github.com/users/rec/repos",
            "events_url": "https://api.github.com/users/rec/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rec/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-07-13T14:59:49Z",
        "updated_at": "2023-10-25T08:22:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nHello, and thanks for this fantastic library!!\r\n\r\nIn pyproject.toml, the Pydantic library [is pinned to version 1.x](https://github.com/hwchase17/langchain/blob/master/pyproject.toml#L15) \r\n\r\nI'd like to unpin that dependency by changing `^1` to `>=1`.\r\n\r\n### Motivation\r\n\r\nPydantic 2.0.2 is apparently production-ready, and it has a feature we badly need but our dependency on langchain prevents us from using it.\r\n\r\nDeep background on dependency pinning here: https://iscinumpy.dev/post/bound-version-constraints/\r\n\r\n\r\n### Your contribution\r\n\r\nTwo tiny commits like [this](https://github.com/rec/langchain/commits/master) and [this one in langsmith](https://github.com/rec/langchainplus-sdk/commits/main) are all that is needed.\r\n\r\nI can test the langchain commit and submit it for review; I can send the langsmith one for review, but not sure how to test it.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7663/reactions",
            "total_count": 13,
            "+1": 13,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7663/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7661",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7661/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7661/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7661/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7661",
        "id": 1803109618,
        "node_id": "I_kwDOIPDwls5reUTy",
        "number": 7661,
        "title": "DOC: ContextualCompressionRetriever - is it possible to retain sources",
        "user": {
            "login": "dcieslak19973",
            "id": 3847063,
            "node_id": "MDQ6VXNlcjM4NDcwNjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3847063?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dcieslak19973",
            "html_url": "https://github.com/dcieslak19973",
            "followers_url": "https://api.github.com/users/dcieslak19973/followers",
            "following_url": "https://api.github.com/users/dcieslak19973/following{/other_user}",
            "gists_url": "https://api.github.com/users/dcieslak19973/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dcieslak19973/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dcieslak19973/subscriptions",
            "organizations_url": "https://api.github.com/users/dcieslak19973/orgs",
            "repos_url": "https://api.github.com/users/dcieslak19973/repos",
            "events_url": "https://api.github.com/users/dcieslak19973/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dcieslak19973/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-13T14:06:40Z",
        "updated_at": "2023-09-05T12:24:39Z",
        "closed_at": "2023-07-13T15:42:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nI'd like to pass in documents to a chain created from `load_qa_with_sources_chain` that are the results of `compression_retriever.get_relevant_documents(user_query)`.  It's not clear from the documentation whether this is possible, and, if so, how to accomplish it.\n\n### Idea or request for content:\n\nAn example demonstrating this if it is currently possible.\r\n\r\nIf it is not currently possible, a feature request to make it so",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7661/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7661/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7659",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7659/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7659/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7659/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7659",
        "id": 1803083378,
        "node_id": "PR_kwDOIPDwls5VbJDo",
        "number": 7659,
        "title": "bump 232",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T13:53:05Z",
        "updated_at": "2023-07-13T14:32:40Z",
        "closed_at": "2023-07-13T14:32:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7659",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7659",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7659.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7659.patch",
            "merged_at": "2023-07-13T14:32:39Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7659/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7659/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7658",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7658/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7658/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7658/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7658",
        "id": 1803060313,
        "node_id": "I_kwDOIPDwls5reIRZ",
        "number": 7658,
        "title": "RetrievalQA.from_chain_type not working fine for chain_type=\"refine\" when using ChatVertexAI",
        "user": {
            "login": "hadjebi",
            "id": 123940039,
            "node_id": "U_kgDOB2Msxw",
            "avatar_url": "https://avatars.githubusercontent.com/u/123940039?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hadjebi",
            "html_url": "https://github.com/hadjebi",
            "followers_url": "https://api.github.com/users/hadjebi/followers",
            "following_url": "https://api.github.com/users/hadjebi/following{/other_user}",
            "gists_url": "https://api.github.com/users/hadjebi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hadjebi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hadjebi/subscriptions",
            "organizations_url": "https://api.github.com/users/hadjebi/orgs",
            "repos_url": "https://api.github.com/users/hadjebi/repos",
            "events_url": "https://api.github.com/users/hadjebi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hadjebi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T13:41:26Z",
        "updated_at": "2023-10-19T16:05:23Z",
        "closed_at": "2023-10-19T16:05:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nVersion: 0.0.201\r\n\r\n\r\n```\r\nllm = ChatVertexAI(temperature=0)\r\n\r\nqa_chain_mr = RetrievalQA.from_chain_type(\r\n    llm, retriever=vectordb.as_retriever(), chain_type=\"refine\"\r\n)\r\nresult = qa_chain_mr({\"query\": question})\r\nresult[\"result\"]\r\n```\r\n\r\nError:\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\nCell In[42], line 6\r\n      1 llm = ChatVertexAI(temperature=0)\r\n      3 qa_chain_mr = RetrievalQA.from_chain_type(\r\n      4     llm, retriever=vectordb.as_retriever(), chain_type=\"refine\"\r\n      5 )\r\n----> 6 result = qa_chain_mr({\"query\": question})\r\n      7 result[\"result\"]\r\n\r\nFile [~/.conda/envs/genai/lib/python3.10/site-packages/langchain/chains/base.py:149](https://vscode-remote+ssh-002dremote-002blevi-002dpers-002dpp-002dnb-002dshajebi.vscode-resource.vscode-cdn.net/home/jupyter/code/misc/LLMs/courses/LangChain-Chat-with-Your-Data/~/.conda/envs/genai/lib/python3.10/site-packages/langchain/chains/base.py:149), in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, include_run_info)\r\n    147 except (KeyboardInterrupt, Exception) as e:\r\n    148     run_manager.on_chain_error(e)\r\n--> 149     raise e\r\n    150 run_manager.on_chain_end(outputs)\r\n    151 final_outputs: Dict[str, Any] = self.prep_outputs(\r\n    152     inputs, outputs, return_only_outputs\r\n    153 )\r\n\r\nFile [~/.conda/envs/genai/lib/python3.10/site-packages/langchain/chains/base.py:143](https://vscode-remote+ssh-002dremote-002blevi-002dpers-002dpp-002dnb-002dshajebi.vscode-resource.vscode-cdn.net/home/jupyter/code/misc/LLMs/courses/LangChain-Chat-with-Your-Data/~/.conda/envs/genai/lib/python3.10/site-packages/langchain/chains/base.py:143), in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, include_run_info)\r\n    137 run_manager = callback_manager.on_chain_start(\r\n    138     dumpd(self),\r\n    139     inputs,\r\n    140 )\r\n    141 try:\r\n...\r\n--> 126     chat._history.append((pair.question.content, pair.answer.content))\r\n    127 response = chat.send_message(question.content, **self._default_params)\r\n    128 text = self._enforce_stop_words(response.text, stop)\r\n\r\nAttributeError: 'ChatSession' object has no attribute '_history'\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\nllm = ChatVertexAI(temperature=0)\r\n\r\nqa_chain_mr = RetrievalQA.from_chain_type(\r\n    llm, retriever=vectordb.as_retriever(), chain_type=\"refine\"\r\n)\r\nresult = qa_chain_mr({\"query\": question})\r\nresult[\"result\"]\r\n```\n\n### Expected behavior\n\nTo work fine. It works for ChatOpanAI().",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7658/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7658/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7657",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7657/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7657/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7657/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7657",
        "id": 1803037316,
        "node_id": "I_kwDOIPDwls5reCqE",
        "number": 7657,
        "title": "Issue: Tool many tools, and the embedding can not filter all tools i need, is there any good ideas?",
        "user": {
            "login": "messi-wpy",
            "id": 33799727,
            "node_id": "MDQ6VXNlcjMzNzk5NzI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/33799727?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/messi-wpy",
            "html_url": "https://github.com/messi-wpy",
            "followers_url": "https://api.github.com/users/messi-wpy/followers",
            "following_url": "https://api.github.com/users/messi-wpy/following{/other_user}",
            "gists_url": "https://api.github.com/users/messi-wpy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/messi-wpy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/messi-wpy/subscriptions",
            "organizations_url": "https://api.github.com/users/messi-wpy/orgs",
            "repos_url": "https://api.github.com/users/messi-wpy/repos",
            "events_url": "https://api.github.com/users/messi-wpy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/messi-wpy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T13:30:49Z",
        "updated_at": "2023-10-19T16:05:28Z",
        "closed_at": "2023-10-19T16:05:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI have a case,that there are many tools to be used,  so i can't put them all in prompt,  is there any good ideas, retrievers, to filtrate the tools?\r\n\r\nand i have try the embedding, vector_store ,but it can not  filtrate all tools i need, and it can't filtrate the tools which are Indirectly dependent to the user query\r\n\r\nis there any better retrievers?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7657/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7657/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7655",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7655/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7655/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7655/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7655",
        "id": 1802991660,
        "node_id": "I_kwDOIPDwls5rd3gs",
        "number": 7655,
        "title": "Could not parse LLM output: `AI: Alright, if you have any other questions in the future, feel free to ask. Enjoy your day!`",
        "user": {
            "login": "Ajaypawar02",
            "id": 65480235,
            "node_id": "MDQ6VXNlcjY1NDgwMjM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/65480235?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ajaypawar02",
            "html_url": "https://github.com/Ajaypawar02",
            "followers_url": "https://api.github.com/users/Ajaypawar02/followers",
            "following_url": "https://api.github.com/users/Ajaypawar02/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ajaypawar02/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ajaypawar02/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ajaypawar02/subscriptions",
            "organizations_url": "https://api.github.com/users/Ajaypawar02/orgs",
            "repos_url": "https://api.github.com/users/Ajaypawar02/repos",
            "events_url": "https://api.github.com/users/Ajaypawar02/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ajaypawar02/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-13T13:07:52Z",
        "updated_at": "2023-11-29T16:08:55Z",
        "closed_at": "2023-11-29T16:08:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nFile \"/home/ajay/anaconda3/envs/andy/lib/python3.9/site-packages/streamlit/runtime/scriptrunner/script_runner.py\", line 552, in _run_script\r\n    exec(code, module.__dict__)\r\nFile \"/home/ajay/MeetsMeta/scripts/streamlit.py\", line 72, in <module>\r\n    msg = {\"role\": \"assistant\", \"content\": agent_chain.run(prompt)}\r\nFile \"/home/ajay/anaconda3/envs/andy/lib/python3.9/site-packages/langchain/chains/base.py\", line 315, in run\r\n    return self(args[0], callbacks=callbacks, tags=tags, metadata=metadata)[\r\nFile \"/home/ajay/anaconda3/envs/andy/lib/python3.9/site-packages/langchain/chains/base.py\", line 181, in __call__\r\n    raise e\r\nFile \"/home/ajay/anaconda3/envs/andy/lib/python3.9/site-packages/langchain/chains/base.py\", line 175, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\nFile \"/home/ajay/anaconda3/envs/andy/lib/python3.9/site-packages/langchain/agents/agent.py\", line 987, in _call\r\n    next_step_output = self._take_next_step(\r\nFile \"/home/ajay/anaconda3/envs/andy/lib/python3.9/site-packages/langchain/agents/agent.py\", line 803, in _take_next_step\r\n    raise e\r\nFile \"/home/ajay/anaconda3/envs/andy/lib/python3.9/site-packages/langchain/agents/agent.py\", line 792, in _take_next_step\r\n    output = self.agent.plan(\r\nFile \"/home/ajay/anaconda3/envs/andy/lib/python3.9/site-packages/langchain/agents/agent.py\", line 444, in plan\r\n    return self.output_parser.parse(full_output)\r\nFile \"/home/ajay/anaconda3/envs/andy/lib/python3.9/site-packages/langchain/agents/mrkl/output_parser.py\", line 42, in parse\r\n    raise OutputParserException(\r\n\r\nI am getting Error when i am using multiple tools . Can you please let me know how to figure out this error \n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7655/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7655/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7654",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7654/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7654/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7654/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7654",
        "id": 1802976205,
        "node_id": "I_kwDOIPDwls5rdzvN",
        "number": 7654,
        "title": "Set OpenAIEmbeddings parameters, not explicitly specified",
        "user": {
            "login": "lvisdd",
            "id": 513466,
            "node_id": "MDQ6VXNlcjUxMzQ2Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/513466?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lvisdd",
            "html_url": "https://github.com/lvisdd",
            "followers_url": "https://api.github.com/users/lvisdd/followers",
            "following_url": "https://api.github.com/users/lvisdd/following{/other_user}",
            "gists_url": "https://api.github.com/users/lvisdd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lvisdd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lvisdd/subscriptions",
            "organizations_url": "https://api.github.com/users/lvisdd/orgs",
            "repos_url": "https://api.github.com/users/lvisdd/repos",
            "events_url": "https://api.github.com/users/lvisdd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lvisdd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-13T12:59:32Z",
        "updated_at": "2023-07-20T12:32:49Z",
        "closed_at": "2023-07-20T12:32:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n- Azure/OpenAI API has a user (Optional) parameter.\r\n  - Create chat completion\r\n    - https://platform.openai.com/docs/api-reference/chat/create#chat/create-user\r\n    - https://learn.microsoft.com/en-us/azure/cognitive-services/openai/reference#completions\r\n  - Create embeddings\r\n    - https://platform.openai.com/docs/api-reference/embeddings/create#embeddings/create-user\r\n    - https://learn.microsoft.com/en-us/azure/cognitive-services/openai/reference#embeddings\r\n\r\n- LangChain ChatOpenAI has no user parameter, but does have a model_kwargs parameter.\r\n  - https://github.com/hwchase17/langchain/blob/master/langchain/chat_models/openai.py#L170\r\n\r\n- LangChain OpenAIEmbeddings has no user and model_kwargs parameter.\r\n  - https://github.com/hwchase17/langchain/blob/master/langchain/embeddings/openai.py#L121\n\n### Suggestion:\n\nDoesn't LangChain OpenAIEmbeddings require a model_kwargs parameter?\r\nOpenAI recommends Sending end-user IDs in Safety best practices.\r\n- https://platform.openai.com/docs/guides/safety-best-practices/end-user-ids",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7654/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7654/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7653",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7653/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7653/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7653/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7653",
        "id": 1802939519,
        "node_id": "PR_kwDOIPDwls5VapZJ",
        "number": 7653,
        "title": "Fix SQLAlchemy LLM cache clear",
        "user": {
            "login": "molntamas",
            "id": 4353892,
            "node_id": "MDQ6VXNlcjQzNTM4OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4353892?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/molntamas",
            "html_url": "https://github.com/molntamas",
            "followers_url": "https://api.github.com/users/molntamas/followers",
            "following_url": "https://api.github.com/users/molntamas/following{/other_user}",
            "gists_url": "https://api.github.com/users/molntamas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/molntamas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/molntamas/subscriptions",
            "organizations_url": "https://api.github.com/users/molntamas/orgs",
            "repos_url": "https://api.github.com/users/molntamas/repos",
            "events_url": "https://api.github.com/users/molntamas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/molntamas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-13T12:40:16Z",
        "updated_at": "2023-07-13T13:39:05Z",
        "closed_at": "2023-07-13T13:39:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7653",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7653",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7653.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7653.patch",
            "merged_at": "2023-07-13T13:39:05Z"
        },
        "body": "Fixes #7652 \r\n\r\nDescription: \r\nThis is a fix for clearing the cache for SQL Alchemy based LLM caches. \r\n\r\nThe langchain.llm_cache.clear() did not take effect for SQLite cache. \r\nReason: it didn't commit the deletion database change.\r\n\r\nSee SQLAlchemy documentation for proper usage:\r\nhttps://docs.sqlalchemy.org/en/20/orm/session_basics.html#opening-and-closing-a-session\r\nhttps://docs.sqlalchemy.org/en/20/orm/session_basics.html#deleting\r\n\r\n@hwchase17 @baskaryan \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7653/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7653/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7652",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7652/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7652/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7652/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7652",
        "id": 1802933301,
        "node_id": "I_kwDOIPDwls5rdpQ1",
        "number": 7652,
        "title": "SQLite LLM cache clear does not take effect",
        "user": {
            "login": "molntamas",
            "id": 4353892,
            "node_id": "MDQ6VXNlcjQzNTM4OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4353892?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/molntamas",
            "html_url": "https://github.com/molntamas",
            "followers_url": "https://api.github.com/users/molntamas/followers",
            "following_url": "https://api.github.com/users/molntamas/following{/other_user}",
            "gists_url": "https://api.github.com/users/molntamas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/molntamas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/molntamas/subscriptions",
            "organizations_url": "https://api.github.com/users/molntamas/orgs",
            "repos_url": "https://api.github.com/users/molntamas/repos",
            "events_url": "https://api.github.com/users/molntamas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/molntamas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-13T12:36:48Z",
        "updated_at": "2023-07-13T13:39:06Z",
        "closed_at": "2023-07-13T13:39:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version: 0.0.231\r\nPython version: 3.10.11\r\n\r\nBug:\r\n\r\nThere is an issue when clearing LLM cache for SQL Alchemy based caches.\r\nlangchain.llm_cache.clear() does not clear the cache for SQLite LLM cache. \r\n\r\nReason: it doesn't commit the deletion database change. The deletion doesn't take effect.\n\n### Who can help?\n\n@hwchase17 @ag\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n- Configure SQLite LLM Cache\r\n- Call an LLM via langchain\r\n- The SQLite database get's populated with an entry\r\n- call langchain.llm_cache.clear()\r\n\r\n- Actual Behaviour: Notice that the entry is still in SQLite\r\n\n\n### Expected behavior\n\n- Expected Behaviour: The cache database table should be empty",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7652/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7652/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7651",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7651/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7651/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7651/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7651",
        "id": 1802828667,
        "node_id": "PR_kwDOIPDwls5VaQ50",
        "number": 7651,
        "title": "Simplify GraphQL Tool Initialization documentation by Removing 'llm' Argument",
        "user": {
            "login": "frangin2003",
            "id": 6178886,
            "node_id": "MDQ6VXNlcjYxNzg4ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6178886?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frangin2003",
            "html_url": "https://github.com/frangin2003",
            "followers_url": "https://api.github.com/users/frangin2003/followers",
            "following_url": "https://api.github.com/users/frangin2003/following{/other_user}",
            "gists_url": "https://api.github.com/users/frangin2003/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frangin2003/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frangin2003/subscriptions",
            "organizations_url": "https://api.github.com/users/frangin2003/orgs",
            "repos_url": "https://api.github.com/users/frangin2003/repos",
            "events_url": "https://api.github.com/users/frangin2003/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frangin2003/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-13T11:36:00Z",
        "updated_at": "2023-07-13T18:52:07Z",
        "closed_at": "2023-07-13T18:52:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7651",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7651",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7651.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7651.patch",
            "merged_at": "2023-07-13T18:52:07Z"
        },
        "body": "This PR is aimed at enhancing the clarity of the documentation in the langchain project.\r\n\r\n**Description**:\r\nIn the graphql.ipynb file, I have removed the unnecessary 'llm' argument from the initialization process of the GraphQL tool (of type _EXTRA_OPTIONAL_TOOLS). The 'llm' argument is not required for this process. Its presence could potentially confuse users. This modification simplifies the understanding of tool initialization and minimizes potential confusion.\r\n\r\n**Issue**: Not applicable, as this is a documentation improvement.\r\n\r\n**Dependencies**: None.\r\n\r\n**I kindly request a review from the following maintainer**: @hinthornw, who is responsible for Agents / Tools / Toolkits.\r\n\r\nNo new integration is being added in this PR, hence no need for a test or an example notebook.\r\n\r\nPlease see the changes for more detail and let me know if any further modification is necessary.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7651/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7651/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7650",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7650/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7650/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7650/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7650",
        "id": 1802820438,
        "node_id": "I_kwDOIPDwls5rdNtW",
        "number": 7650,
        "title": "HuggingFaceTextGenInference: required fields not permitted, e.g. 'truncate'",
        "user": {
            "login": "RobertoDonPedro",
            "id": 19687084,
            "node_id": "MDQ6VXNlcjE5Njg3MDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/19687084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RobertoDonPedro",
            "html_url": "https://github.com/RobertoDonPedro",
            "followers_url": "https://api.github.com/users/RobertoDonPedro/followers",
            "following_url": "https://api.github.com/users/RobertoDonPedro/following{/other_user}",
            "gists_url": "https://api.github.com/users/RobertoDonPedro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RobertoDonPedro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RobertoDonPedro/subscriptions",
            "organizations_url": "https://api.github.com/users/RobertoDonPedro/orgs",
            "repos_url": "https://api.github.com/users/RobertoDonPedro/repos",
            "events_url": "https://api.github.com/users/RobertoDonPedro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RobertoDonPedro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T11:30:42Z",
        "updated_at": "2023-07-14T20:23:58Z",
        "closed_at": "2023-07-14T20:23:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.229\r\ntext-generation==0.6.0\r\n\r\nPython 3.10.12\n\n### Who can help?\n\n@hwchase17\r\n@agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThe class [HuggingFaceTextGenInference](https://github.com/hwchase17/langchain/blob/master/langchain/llms/huggingface_text_gen_inference.py) does not support all parameters of the HuggingFace text generation inference API.\r\n\r\nEspecially we need the attribute `truncate`.\r\n\r\nE.g. \r\n```\r\n            llm = HuggingFaceTextGenInference(\r\n                inference_server_url=\"http://localhost:8080/\",\r\n                temperature=0.9,\r\n                top_p=0.95,\r\n                repetition_penalty=1.2,\r\n                top_k=50,\r\n                truncate=1000,\r\n                max_new_tokens=1024                         \r\n            )\r\n```\r\nresults in the error message \r\n```\r\n  File \"pydantic/main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for HuggingFaceTextGenInference\r\ntruncate\r\n  extra fields not permitted (type=value_error.extra)\r\n```\n\n### Expected behavior\n\nNo error",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7650/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7650/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7649",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7649/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7649/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7649/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7649",
        "id": 1802800157,
        "node_id": "PR_kwDOIPDwls5VaKrh",
        "number": 7649,
        "title": "Feature: Add support for meilisearch vectorstore",
        "user": {
            "login": "alallema",
            "id": 16155041,
            "node_id": "MDQ6VXNlcjE2MTU1MDQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/16155041?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alallema",
            "html_url": "https://github.com/alallema",
            "followers_url": "https://api.github.com/users/alallema/followers",
            "following_url": "https://api.github.com/users/alallema/following{/other_user}",
            "gists_url": "https://api.github.com/users/alallema/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alallema/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alallema/subscriptions",
            "organizations_url": "https://api.github.com/users/alallema/orgs",
            "repos_url": "https://api.github.com/users/alallema/repos",
            "events_url": "https://api.github.com/users/alallema/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alallema/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-13T11:17:52Z",
        "updated_at": "2023-07-29T00:06:54Z",
        "closed_at": "2023-07-29T00:06:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7649",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7649",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7649.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7649.patch",
            "merged_at": "2023-07-29T00:06:54Z"
        },
        "body": "**Description:**\r\n\r\nAdd support for Meilisearch vector store.\r\nResolve #7603 \r\n\r\n- No external dependencies added\r\n- A notebook has been added\r\n\r\n@rlancemartin\r\n\r\nhttps://twitter.com/meilisearch\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7649/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7649/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7647",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7647/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7647/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7647/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7647",
        "id": 1802637421,
        "node_id": "PR_kwDOIPDwls5VZmxP",
        "number": 7647,
        "title": "Add Xorbits agent",
        "user": {
            "login": "yifeis7",
            "id": 79988483,
            "node_id": "MDQ6VXNlcjc5OTg4NDgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/79988483?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yifeis7",
            "html_url": "https://github.com/yifeis7",
            "followers_url": "https://api.github.com/users/yifeis7/followers",
            "following_url": "https://api.github.com/users/yifeis7/following{/other_user}",
            "gists_url": "https://api.github.com/users/yifeis7/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yifeis7/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yifeis7/subscriptions",
            "organizations_url": "https://api.github.com/users/yifeis7/orgs",
            "repos_url": "https://api.github.com/users/yifeis7/repos",
            "events_url": "https://api.github.com/users/yifeis7/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yifeis7/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-13T09:43:18Z",
        "updated_at": "2023-07-17T14:09:52Z",
        "closed_at": "2023-07-17T14:09:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7647",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7647",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7647.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7647.patch",
            "merged_at": "2023-07-17T14:09:51Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n- [Xorbits](https://doc.xorbits.io/en/latest/) is an open-source computing framework that makes it easy to scale data science and machine learning workloads in parallel. Xorbits can leverage multi cores or GPUs to accelerate computation on a single machine, or scale out up to thousands of machines to support processing terabytes of data.\r\n\r\n- This PR added support for the Xorbits agent, which allows langchain to interact with Xorbits Pandas dataframe and Xorbits Numpy array.\r\n- Dependencies: This change requires the Xorbits library to be installed in order to be used.\r\n`pip install xorbits`\r\n- Request for review: @hinthornw\r\n- Twitter handle: https://twitter.com/Xorbitsio",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7647/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7647/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7646",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7646/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7646/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7646/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7646",
        "id": 1802581971,
        "node_id": "PR_kwDOIPDwls5VZaZg",
        "number": 7646,
        "title": "Fix for Serializable class to include name, used in StdOutCallbackHan\u2026",
        "user": {
            "login": "christyxgeorge",
            "id": 88822063,
            "node_id": "MDQ6VXNlcjg4ODIyMDYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/88822063?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christyxgeorge",
            "html_url": "https://github.com/christyxgeorge",
            "followers_url": "https://api.github.com/users/christyxgeorge/followers",
            "following_url": "https://api.github.com/users/christyxgeorge/following{/other_user}",
            "gists_url": "https://api.github.com/users/christyxgeorge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christyxgeorge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christyxgeorge/subscriptions",
            "organizations_url": "https://api.github.com/users/christyxgeorge/orgs",
            "repos_url": "https://api.github.com/users/christyxgeorge/repos",
            "events_url": "https://api.github.com/users/christyxgeorge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christyxgeorge/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nfcampos",
                "id": 56902,
                "node_id": "MDQ6VXNlcjU2OTAy",
                "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nfcampos",
                "html_url": "https://github.com/nfcampos",
                "followers_url": "https://api.github.com/users/nfcampos/followers",
                "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
                "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
                "organizations_url": "https://api.github.com/users/nfcampos/orgs",
                "repos_url": "https://api.github.com/users/nfcampos/repos",
                "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nfcampos/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-13T09:18:40Z",
        "updated_at": "2023-07-13T19:19:34Z",
        "closed_at": "2023-07-13T19:19:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7646",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7646",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7646.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7646.patch",
            "merged_at": null
        },
        "body": "Fix for Serializable class to include name, used in StdOutCallbackHandler, WandBTracer\r\n\r\n  - Description: Fixes the Serializable class to include 'name' attribute (class_name) in the dict created, \r\n     This is used in Callbacks, specifically the StdOutCallbackHandler and the WandBTracer.\r\n  - Issue: As described in [7524](https://github.com/hwchase17/langchain/issues/7524)\r\n  - Dependencies: None\r\n  - Tag maintainer: SInce this is related to the callback module, tagging @agola11\r\n\r\nComments: \r\n  - I feel that having 'name' as a separate attribute does help.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7646/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7646/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7645",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7645/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7645/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7645/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7645",
        "id": 1802556724,
        "node_id": "PR_kwDOIPDwls5VZUs0",
        "number": 7645,
        "title": "Add Minimax llm model to langchain",
        "user": {
            "login": "hetaoBackend",
            "id": 45447813,
            "node_id": "MDQ6VXNlcjQ1NDQ3ODEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/45447813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hetaoBackend",
            "html_url": "https://github.com/hetaoBackend",
            "followers_url": "https://api.github.com/users/hetaoBackend/followers",
            "following_url": "https://api.github.com/users/hetaoBackend/following{/other_user}",
            "gists_url": "https://api.github.com/users/hetaoBackend/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hetaoBackend/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hetaoBackend/subscriptions",
            "organizations_url": "https://api.github.com/users/hetaoBackend/orgs",
            "repos_url": "https://api.github.com/users/hetaoBackend/repos",
            "events_url": "https://api.github.com/users/hetaoBackend/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hetaoBackend/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-13T09:08:40Z",
        "updated_at": "2023-07-28T14:13:20Z",
        "closed_at": "2023-07-28T05:53:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7645",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7645",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7645.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7645.patch",
            "merged_at": "2023-07-28T05:53:23Z"
        },
        "body": "- Description: Minimax is a great AI startup from China, recently they released their latest model and chat API, and the API is widely-spread in China. As a result, I'd like to add the Minimax llm model to Langchain.\r\n- Tag maintainer: @hwchase17, @baskaryan",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7645/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7645/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7644",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7644/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7644/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7644/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7644",
        "id": 1802530745,
        "node_id": "I_kwDOIPDwls5rcG-5",
        "number": 7644,
        "title": "Can't use ConversationalRetrievalChain with router chaining",
        "user": {
            "login": "SajalRandhar",
            "id": 133632556,
            "node_id": "U_kgDOB_cSLA",
            "avatar_url": "https://avatars.githubusercontent.com/u/133632556?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SajalRandhar",
            "html_url": "https://github.com/SajalRandhar",
            "followers_url": "https://api.github.com/users/SajalRandhar/followers",
            "following_url": "https://api.github.com/users/SajalRandhar/following{/other_user}",
            "gists_url": "https://api.github.com/users/SajalRandhar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SajalRandhar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SajalRandhar/subscriptions",
            "organizations_url": "https://api.github.com/users/SajalRandhar/orgs",
            "repos_url": "https://api.github.com/users/SajalRandhar/repos",
            "events_url": "https://api.github.com/users/SajalRandhar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SajalRandhar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-13T08:54:29Z",
        "updated_at": "2023-10-21T16:07:00Z",
        "closed_at": "2023-10-21T16:07:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am using router chaining to route my input. For the destination chains, I have four LLMChains and one ConversationalRetrievalChain. \r\nAnd to combine this I am using MultiPromptChain. But it isn't working. \r\nBelow are the functions to generate router chains and destination chains.\r\n\r\nAny suggestions?\r\n\r\n```\r\ndef generate_destination_chains():\r\n    \"\"\"\r\n    Creates a list of LLM chains with different prompt templates.\r\n    \"\"\"\r\n    prompt_factory = PromptFactory()\r\n    destination_chains = {}\r\n    for p_info in prompt_factory.prompt_infos:\r\n        name = p_info['name']\r\n        prompt_template = p_info['prompt_template']\r\n        if name == 'insurance sales expert':\r\n            # Declaration of chain one\r\n\r\n            chain = ConversationalRetrievalChain.from_llm(llm=llm,\r\n                                        retriever=vectorstore.as_retriever(search_kwargs={\"k\": 6}),\r\n                                        # memory=memory,\r\n                                        chain_type=\"stuff\",\r\n                                        return_source_documents=True,\r\n                                        verbose=False, \r\n                                        # return_generated_question=True,\r\n                                        # get_chat_history=lambda h :h,\r\n                                        # max_tokens_limit=4000\r\n                                        # combine_docs_chain_kwargs={\"prompt\": prompt_template}\r\n                                        )\r\n        else:\r\n            chain = LLMChain(llm=llm, \r\n                             prompt=PromptTemplate(template=prompt_template,#, memory=memory, \r\n                                                   input_variables=['input']))\r\n        \r\n        destination_chains[name] = chain\r\n    default_chain = ConversationChain(llm=llm, output_key=\"text\")\r\n    return prompt_factory.prompt_infos, destination_chains, default_chain\r\n\r\n\r\ndef generate_router_chain(prompt_infos, destination_chains, default_chain):\r\n    \"\"\"\r\n    Generates the router chains from the prompt infos.\r\n    :param prompt_infos The prompt informations generated above.\r\n    :param destination_chains The LLM chains with different prompt templates\r\n    :param default_chain A default chain\r\n    \"\"\"\r\n    destinations = [f\"{p['name']}: {p['description']}\" for p in prompt_infos]\r\n    destinations_str = '\\n'.join(destinations)\r\n    router_template = MULTI_PROMPT_ROUTER_TEMPLATE.format(destinations=destinations_str)\r\n    router_prompt = PromptTemplate(\r\n        template=router_template,\r\n        input_variables=['input'],\r\n        output_parser=RouterOutputParser()\r\n    )\r\n    router_chain = LLMRouterChain.from_llm(llm, router_prompt)\r\n    return MultiPromptChain(\r\n        router_chain=router_chain,\r\n        destination_chains=destination_chains,\r\n        default_chain=default_chain,\r\n        verbose=True,\r\n        # callbacks=[file_ballback_handler]\r\n    )\r\n```\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7644/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 1,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7644/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7643",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7643/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7643/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7643/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7643",
        "id": 1802407920,
        "node_id": "PR_kwDOIPDwls5VY0Qi",
        "number": 7643,
        "title": "fix chroma updated upsert interface",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T07:45:05Z",
        "updated_at": "2023-07-13T13:27:16Z",
        "closed_at": "2023-07-13T13:27:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7643",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7643",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7643.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7643.patch",
            "merged_at": "2023-07-13T13:27:15Z"
        },
        "body": "new chroma release seems to not support empty dicts for metadata.\r\n\r\nrelated to #7633",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7643/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7643/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7642",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7642/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7642/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7642/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7642",
        "id": 1802406179,
        "node_id": "I_kwDOIPDwls5rbokj",
        "number": 7642,
        "title": "how to use contextual compression in a ConversationalRetrievalChain",
        "user": {
            "login": "MIMI180306",
            "id": 45851793,
            "node_id": "MDQ6VXNlcjQ1ODUxNzkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/45851793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MIMI180306",
            "html_url": "https://github.com/MIMI180306",
            "followers_url": "https://api.github.com/users/MIMI180306/followers",
            "following_url": "https://api.github.com/users/MIMI180306/following{/other_user}",
            "gists_url": "https://api.github.com/users/MIMI180306/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MIMI180306/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MIMI180306/subscriptions",
            "organizations_url": "https://api.github.com/users/MIMI180306/orgs",
            "repos_url": "https://api.github.com/users/MIMI180306/repos",
            "events_url": "https://api.github.com/users/MIMI180306/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MIMI180306/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T07:44:03Z",
        "updated_at": "2023-07-13T07:50:51Z",
        "closed_at": "2023-07-13T07:50:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nhow to use contextual compression in a ConversationalRetrievalChain\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7642/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7642/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7641",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7641/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7641/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7641/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7641",
        "id": 1802378837,
        "node_id": "I_kwDOIPDwls5rbh5V",
        "number": 7641,
        "title": "RCE vulnerability in CPAL (causal program-aided language) chain",
        "user": {
            "login": "boazwasserman",
            "id": 49598618,
            "node_id": "MDQ6VXNlcjQ5NTk4NjE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/49598618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boazwasserman",
            "html_url": "https://github.com/boazwasserman",
            "followers_url": "https://api.github.com/users/boazwasserman/followers",
            "following_url": "https://api.github.com/users/boazwasserman/following{/other_user}",
            "gists_url": "https://api.github.com/users/boazwasserman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/boazwasserman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/boazwasserman/subscriptions",
            "organizations_url": "https://api.github.com/users/boazwasserman/orgs",
            "repos_url": "https://api.github.com/users/boazwasserman/repos",
            "events_url": "https://api.github.com/users/boazwasserman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/boazwasserman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T07:26:31Z",
        "updated_at": "2023-08-29T18:44:50Z",
        "closed_at": "2023-08-29T18:44:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain 0.0.231, Windows 10, Python 3.10.11\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nRun the following code:\r\n\r\nfrom langchain.experimental.cpal.base import CPALChain\r\nfrom langchain import OpenAI\r\n\r\nllm = OpenAI(temperature=0, max_tokens=512)\r\ncpal_chain = CPALChain.from_univariate_prompt(llm=llm, verbose=True)\r\n\r\nquestion = (\r\n    \"Jan has three times the number of pets as Marcia. \"\r\n    \"Marcia has print(exec(\\\\\\\\\\\\\\\"import os; os.system('dir')\\\\\\\\\\\\\\\")) more pets than Cindy. \"\r\n    \"If Cindy has 4 pets, how many total pets do the three have?\"\r\n)\r\n\r\ncpal_chain.run(question)\n\n### Expected behavior\n\nExpected to have some kind of validation to mitigate the possibility of unbound Python execution, command execution, etc.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7641/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7641/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7640",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7640/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7640/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7640/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7640",
        "id": 1802349041,
        "node_id": "I_kwDOIPDwls5rbanx",
        "number": 7640,
        "title": "can LLMChainFilter support default retriever",
        "user": {
            "login": "MIMI180306",
            "id": 45851793,
            "node_id": "MDQ6VXNlcjQ1ODUxNzkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/45851793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MIMI180306",
            "html_url": "https://github.com/MIMI180306",
            "followers_url": "https://api.github.com/users/MIMI180306/followers",
            "following_url": "https://api.github.com/users/MIMI180306/following{/other_user}",
            "gists_url": "https://api.github.com/users/MIMI180306/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MIMI180306/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MIMI180306/subscriptions",
            "organizations_url": "https://api.github.com/users/MIMI180306/orgs",
            "repos_url": "https://api.github.com/users/MIMI180306/repos",
            "events_url": "https://api.github.com/users/MIMI180306/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MIMI180306/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T07:06:22Z",
        "updated_at": "2023-10-19T16:05:40Z",
        "closed_at": "2023-10-19T16:05:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am using LLMChainFilter and ContextualCompressionRetriever to compress my context, like this \r\n`llm=AzureChatOpenAI(deployment_name=\"gpt-35-turbo\", model_name='gpt-35-turbo', temperature=0\r\n, max_tokens=500)\r\ncompressor = LLMChainFilter.from_llm(llm)\r\ncompression_retriever =ContextualCompressionRetriever(base_compressor=compressor,base_retriever=chroma.as_retriever(search_kwargs=search_kwargs))`\r\nand I saw if LLMChainFilter return empty docs, the ContextualCompressionRetriever return empty too, can ContextualCompressionRetriever return base_retriever if LLMChainFilter return empty docs?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7640/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7640/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7639",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7639/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7639/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7639/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7639",
        "id": 1802306875,
        "node_id": "PR_kwDOIPDwls5VYeXi",
        "number": 7639,
        "title": "fix chroma init bug",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-13T06:40:34Z",
        "updated_at": "2023-07-14T11:01:58Z",
        "closed_at": "2023-07-13T07:00:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7639",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7639",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7639.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7639.patch",
            "merged_at": "2023-07-13T07:00:34Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7639/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7639/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7638",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7638/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7638/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7638/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7638",
        "id": 1802251081,
        "node_id": "I_kwDOIPDwls5rbCtJ",
        "number": 7638,
        "title": "Chroma db w/client: AttributeError: 'Chroma' object has no attribute '_client_settings'",
        "user": {
            "login": "tnunamak",
            "id": 1095217,
            "node_id": "MDQ6VXNlcjEwOTUyMTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1095217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tnunamak",
            "html_url": "https://github.com/tnunamak",
            "followers_url": "https://api.github.com/users/tnunamak/followers",
            "following_url": "https://api.github.com/users/tnunamak/following{/other_user}",
            "gists_url": "https://api.github.com/users/tnunamak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tnunamak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tnunamak/subscriptions",
            "organizations_url": "https://api.github.com/users/tnunamak/orgs",
            "repos_url": "https://api.github.com/users/tnunamak/repos",
            "events_url": "https://api.github.com/users/tnunamak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tnunamak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-13T06:06:50Z",
        "updated_at": "2023-07-13T13:28:58Z",
        "closed_at": "2023-07-13T13:28:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain 0.0.231 on mac, python 3.11\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nFollow the basic example* in the Chroma docs, that goes something like:\r\n```\r\nclient = chromadb.Client(Settings(...))\r\ndb = Chroma(client=client, collection_name=\"my_collection\")\r\n```\r\nHowever, this throws an error:\r\n```\r\n  File \"/Users/dondo/Library/Caches/pypoetry/virtualenvs/app-IE1VmXUs-py3.11/lib/python3.11/site-packages/langchain/vectorstores/chroma.py\", line 105, in __init__\r\n    self._client_settings.persist_directory or persist_directory\r\n    ^^^^^^^^^^^^^^^^^^^^^\r\nAttributeError: 'Chroma' object has no attribute '_client_settings'\r\n```\r\nLooking at the line in question\\*\\*, this seems like a bug: when you pass in `client`,  `self._client_settings` is not set, but is referenced.\r\n\r\n\\* example: <https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/chroma.html#basic-example-using-the-docker-container>\r\n\r\n\\*\\* code: <https://github.com/hwchase17/langchain/blob/5171c3bccaf8642135a20e558eb8468ccbfcc682/langchain/vectorstores/chroma.py#L105>\n\n### Expected behavior\n\nAccording to the docs, creating a Chroma instance from a chromadb client should be supported.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7638/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7638/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7637",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7637/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7637/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7637/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7637",
        "id": 1802221738,
        "node_id": "PR_kwDOIPDwls5VYLn5",
        "number": 7637,
        "title": "add tagger nb",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T05:43:18Z",
        "updated_at": "2023-07-13T05:48:24Z",
        "closed_at": "2023-07-13T05:48:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7637",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7637",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7637.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7637.patch",
            "merged_at": "2023-07-13T05:48:23Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7637/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7637/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7636",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7636/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7636/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7636/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7636",
        "id": 1802186691,
        "node_id": "PR_kwDOIPDwls5VYD9D",
        "number": 7636,
        "title": "Added support for examples for VertexAI chat models.",
        "user": {
            "login": "lkuligin",
            "id": 11026406,
            "node_id": "MDQ6VXNlcjExMDI2NDA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11026406?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lkuligin",
            "html_url": "https://github.com/lkuligin",
            "followers_url": "https://api.github.com/users/lkuligin/followers",
            "following_url": "https://api.github.com/users/lkuligin/following{/other_user}",
            "gists_url": "https://api.github.com/users/lkuligin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lkuligin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lkuligin/subscriptions",
            "organizations_url": "https://api.github.com/users/lkuligin/orgs",
            "repos_url": "https://api.github.com/users/lkuligin/repos",
            "events_url": "https://api.github.com/users/lkuligin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lkuligin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-13T05:13:54Z",
        "updated_at": "2023-07-14T06:03:05Z",
        "closed_at": "2023-07-14T06:03:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7636",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7636",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7636.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7636.patch",
            "merged_at": "2023-07-14T06:03:05Z"
        },
        "body": "#5278 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7636/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7636/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7635",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7635/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7635/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7635/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7635",
        "id": 1802174494,
        "node_id": "PR_kwDOIPDwls5VYBTV",
        "number": 7635,
        "title": "Fix issue 7445",
        "user": {
            "login": "datha",
            "id": 457276,
            "node_id": "MDQ6VXNlcjQ1NzI3Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/457276?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/datha",
            "html_url": "https://github.com/datha",
            "followers_url": "https://api.github.com/users/datha/followers",
            "following_url": "https://api.github.com/users/datha/following{/other_user}",
            "gists_url": "https://api.github.com/users/datha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/datha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/datha/subscriptions",
            "organizations_url": "https://api.github.com/users/datha/orgs",
            "repos_url": "https://api.github.com/users/datha/repos",
            "events_url": "https://api.github.com/users/datha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/datha/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hinthornw",
                "id": 13333726,
                "node_id": "MDQ6VXNlcjEzMzMzNzI2",
                "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hinthornw",
                "html_url": "https://github.com/hinthornw",
                "followers_url": "https://api.github.com/users/hinthornw/followers",
                "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
                "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
                "organizations_url": "https://api.github.com/users/hinthornw/orgs",
                "repos_url": "https://api.github.com/users/hinthornw/repos",
                "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hinthornw/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-13T05:01:07Z",
        "updated_at": "2023-08-10T23:38:14Z",
        "closed_at": "2023-08-10T23:29:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7635",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7635",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7635.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7635.patch",
            "merged_at": "2023-08-10T23:29:31Z"
        },
        "body": "Description: updated BabyAGI examples and experimental to append the iteration to the result id to fix error storing data to vectorstore.\r\nIssue: 7445\r\nDependencies: no\r\nTag maintainer: @eyurtsev\r\nThis fix worked for me locally. Happy to take some feedback and iterate on a better solution. I was considering appending a uuid instead but didn't want to over complicate the example.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7635/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7635/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7634",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7634/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7634/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7634/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7634",
        "id": 1802101252,
        "node_id": "I_kwDOIPDwls5raeIE",
        "number": 7634,
        "title": "chromadb.errors.InvalidDimensionException: Dimensionality of (512) does not match index dimensionality (768)",
        "user": {
            "login": "baiziyuandyufei",
            "id": 20787650,
            "node_id": "MDQ6VXNlcjIwNzg3NjUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/20787650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baiziyuandyufei",
            "html_url": "https://github.com/baiziyuandyufei",
            "followers_url": "https://api.github.com/users/baiziyuandyufei/followers",
            "following_url": "https://api.github.com/users/baiziyuandyufei/following{/other_user}",
            "gists_url": "https://api.github.com/users/baiziyuandyufei/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baiziyuandyufei/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baiziyuandyufei/subscriptions",
            "organizations_url": "https://api.github.com/users/baiziyuandyufei/orgs",
            "repos_url": "https://api.github.com/users/baiziyuandyufei/repos",
            "events_url": "https://api.github.com/users/baiziyuandyufei/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baiziyuandyufei/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-13T03:47:13Z",
        "updated_at": "2023-11-25T18:47:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain               0.0.230\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\nclass SemanticSearch():\r\n    \"\"\"Class containing modules for the semantic search.\r\n    \"\"\"\r\n\r\n    model_name: str\r\n    model: HuggingFaceEmbeddings\r\n\r\n    def __init__(self,\r\n                 model_name: str = \"sentence-transformers/distiluse-base-multilingual-cased-v2\",\r\n                 **kwargs\r\n        ) -> None:\r\n        self.model_name = model_name\r\n        self.model = HuggingFaceEmbeddings(model_name=self.model_name, **kwargs)\r\n\r\n    def vectorize_doc(self, doc: Path, vectordb_dir: Path) -> None:\r\n        \"\"\"Transform a doc containing all the information into a VectorDB.\r\n\r\n        Args:\r\n            doc (Path): File path containing the information. doc is a .txt file with /n/n/n separator.\r\n            vectordb_path (Path, optional): _description_. Defaults to config.VECTORDB_PATH.\r\n        \"\"\"\r\n        if os.path.exists(doc):\r\n            with open(doc, \"r\") as f:\r\n                text = f.read()\r\n            texts = text.split(\"\\n\\n\\n\")\r\n            LOGGER.info(f'Number of chunks: {len(texts)}')\r\n            Chroma.from_texts(texts=texts, \r\n                              embedding=self.model, \r\n                              persist_directory=str(vectordb_dir) # Need to be a string\r\n            )\r\n            LOGGER.info(f\"VectorDB correctly created at {vectordb_dir}\")\r\n        else:\r\n            raise FileNotFoundError(f\"{doc} does not exist.\")\r\n\r\n    def search(self, query: str, vectordb_dir:str = config.get('config', 'VECTORDB_PATH'), k: int = 1) -> List[Tuple[Document, float]]:\r\n        \"\"\"From a query, find the elements corresponding based on personal information stored in vectordb.\r\n        Euclidian distance is used to find the closest vectors.\r\n\r\n        Args:\r\n        query (str): Question asked by the user.\r\n        vectordb_dir (str, optional): Path to the vectordb. Defaults to config.VECTORDB_DIR.\r\n\r\n        Returns:\r\n        List[Tuple[Document, float]]: Elements corresponding to the query based on semantic search, associated\r\n        with their respective score.\r\n        \"\"\"\r\n        timestamp = time.time()\r\n        vectordb = Chroma(persist_directory=vectordb_dir, embedding_function=self.model)\r\n        results = vectordb.similarity_search_with_score(query=query, k=k)\r\n        LOGGER.info(f\"It took {time.time() - timestamp} to search elements with semantic search.\")\r\n        return results\r\n```\n\n### Expected behavior\n\nno error",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7634/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7634/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7633",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7633/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7633/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7633/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7633",
        "id": 1802097263,
        "node_id": "I_kwDOIPDwls5radJv",
        "number": 7633,
        "title": "Chroma db throws `ValueError: Expected metadata to be a non-empty dict, got {}` as ConversationChain memory",
        "user": {
            "login": "tnunamak",
            "id": 1095217,
            "node_id": "MDQ6VXNlcjEwOTUyMTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1095217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tnunamak",
            "html_url": "https://github.com/tnunamak",
            "followers_url": "https://api.github.com/users/tnunamak/followers",
            "following_url": "https://api.github.com/users/tnunamak/following{/other_user}",
            "gists_url": "https://api.github.com/users/tnunamak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tnunamak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tnunamak/subscriptions",
            "organizations_url": "https://api.github.com/users/tnunamak/orgs",
            "repos_url": "https://api.github.com/users/tnunamak/repos",
            "events_url": "https://api.github.com/users/tnunamak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tnunamak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-07-13T03:42:31Z",
        "updated_at": "2023-10-30T16:05:53Z",
        "closed_at": "2023-10-30T16:05:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain 0.0.231 on mac, python 3.11\r\n\r\n### Who can help?\r\n\r\n@jeffchub\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\ntl;dr: chroma no longer supports `{}` metadata which breaks `.addtexts()`: https://github.com/chroma-core/chroma/issues/791#issuecomment-1630909852\r\n\r\nI have written this code to try using a Chroma db for memory in a ConversationChain (based on this example: <https://python.langchain.com/docs/modules/memory/how_to/vectorstore_retriever_memory>):\r\n\r\n```python\r\n    db = Chroma(persist_directory=local_dir_path, embedding_function=OpenAIEmbeddings())\r\n    retriever = db.as_retriever(search_kwargs=dict(k=1))\r\n    memory = VectorStoreRetrieverMemory(retriever=retriever)\r\n    llm_chain = ConversationChain(\r\n        llm=OpenAIModel(**open_ai_params),\r\n        prompt=prompt,\r\n        memory=memory,\r\n        verbose=True,\r\n    )\r\n    chain = SimpleSequentialChain(chains=[moderation_chain, llm_chain]\r\n    chain.run(input=\"hello\")\r\n```\r\nHowever, I get an error `ValueError: Expected metadata to be a non-empty dict, got {}`\r\n\r\nI see  `langchain/vectorstores/base.py` in the stack trace, and add logging: \r\n```python\r\n    def add_documents(self, documents: List[Document], **kwargs: Any) -> List[str]:\r\n        \"\"\"Run more documents through the embeddings and add to the vectorstore.\r\n\r\n        Args:\r\n            documents (List[Document]: Documents to add to the vectorstore.\r\n\r\n        Returns:\r\n            List[str]: List of IDs of the added texts.\r\n        \"\"\"\r\n        # TODO: Handle the case where the user doesn't provide ids on the Collection\r\n        texts = [doc.page_content for doc in documents]\r\n        metadatas = [doc.metadata for doc in documents]\r\n        print(f\"texts: {texts}\")\r\n        print(f\"metadata: {metadatas}\")\r\n        print(f\"kwargs: {kwargs}\")\r\n        return self.add_texts(texts, metadatas, **kwargs)\r\n```\r\nwhich logs out\r\n```\r\ntexts: ['input: test\\nresponse: Hello! How can I assist you today?']\r\nmetadata: [{}]\r\nkwargs: {}\r\n```\r\nIf I edit the source code to pass `None`, then `self.add_texts` works as expected.\r\n```\r\nmetadatas = [doc.metadata for doc in documents]\r\nif all(not metadata for metadata in metadatas):  # Check if all items in the list are empty\r\n    metadatas = None\r\n```\r\n\r\n### Expected behavior\r\n\r\nNo error should be thrown and `self.add_texts` should work correctly when calling `chain.run(input=\"hello\")`.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7633/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7633/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7632",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7632/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7632/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7632/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7632",
        "id": 1802096176,
        "node_id": "I_kwDOIPDwls5rac4w",
        "number": 7632,
        "title": "Dimension from embeddings",
        "user": {
            "login": "mail2mhossain",
            "id": 6905164,
            "node_id": "MDQ6VXNlcjY5MDUxNjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6905164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mail2mhossain",
            "html_url": "https://github.com/mail2mhossain",
            "followers_url": "https://api.github.com/users/mail2mhossain/followers",
            "following_url": "https://api.github.com/users/mail2mhossain/following{/other_user}",
            "gists_url": "https://api.github.com/users/mail2mhossain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mail2mhossain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mail2mhossain/subscriptions",
            "organizations_url": "https://api.github.com/users/mail2mhossain/orgs",
            "repos_url": "https://api.github.com/users/mail2mhossain/repos",
            "events_url": "https://api.github.com/users/mail2mhossain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mail2mhossain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T03:40:59Z",
        "updated_at": "2023-10-19T16:05:43Z",
        "closed_at": "2023-10-19T16:05:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nimport os\r\nfrom langchain.embeddings import HuggingFaceEmbeddings \r\n\r\nEMBEDDING_MODEL = os.getenv(\"EMBEDDING_MODEL\")\r\nmodel_kwargs = {\"device\": \"cpu\"}\r\nencode_kwargs = {\"normalize_embeddings\": False}\r\n\r\nembeddings = HuggingFaceEmbeddings(\r\n    model_name=EMBEDDING_MODEL, model_kwargs=model_kwargs, encode_kwargs=encode_kwargs\r\n)\r\n\r\nNow I want to get the dimension from embeddings like SentenceTransformer.\r\n\r\nfrom sentence_transformers import SentenceTransformer\r\ndevice = \"cpu\"\r\nmodel = SentenceTransformer(EMBEDDING_MODEL, device=device)\r\n\r\ndimension = model.get_sentence_embedding_dimension()\r\n\r\n\n\n### Motivation\n\nWrapper method of SentenceTransformer (get_sentence_embedding_dimension())\n\n### Your contribution\n\nno yet",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7632/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7632/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7630",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7630/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7630/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7630/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7630",
        "id": 1802010391,
        "node_id": "PR_kwDOIPDwls5VXdaR",
        "number": 7630,
        "title": "Requires reference - new evaluators",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-13T02:01:33Z",
        "updated_at": "2023-07-13T07:21:59Z",
        "closed_at": "2023-07-13T07:21:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7630",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7630",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7630.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7630.patch",
            "merged_at": "2023-07-13T07:21:58Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7630/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7630/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7629",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7629/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7629/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7629/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7629",
        "id": 1801983207,
        "node_id": "PR_kwDOIPDwls5VXXnA",
        "number": 7629,
        "title": "Fixed validation error when credentials_profile_name, or region_name is not passed",
        "user": {
            "login": "3coins",
            "id": 289369,
            "node_id": "MDQ6VXNlcjI4OTM2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/289369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/3coins",
            "html_url": "https://github.com/3coins",
            "followers_url": "https://api.github.com/users/3coins/followers",
            "following_url": "https://api.github.com/users/3coins/following{/other_user}",
            "gists_url": "https://api.github.com/users/3coins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/3coins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/3coins/subscriptions",
            "organizations_url": "https://api.github.com/users/3coins/orgs",
            "repos_url": "https://api.github.com/users/3coins/repos",
            "events_url": "https://api.github.com/users/3coins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/3coins/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-13T01:23:50Z",
        "updated_at": "2023-08-04T14:33:26Z",
        "closed_at": "2023-07-13T03:47:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7629",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7629",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7629.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7629.patch",
            "merged_at": "2023-07-13T03:47:35Z"
        },
        "body": "## Summary\r\nThis PR corrects the checks for credentials_profile_name, and region_name attributes. This was causing validation exceptions when either of these values were missing during creation of the retriever class. \r\n\r\nFixes #7571 \r\n\r\n#### Requested reviewers:\r\n@baskaryan \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7629/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7629/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7627",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7627/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7627/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7627/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7627",
        "id": 1801890312,
        "node_id": "PR_kwDOIPDwls5VXDVz",
        "number": 7627,
        "title": "Fixed a typo in pinecone_hybrid_search.ipynb",
        "user": {
            "login": "gaurang98671",
            "id": 56935661,
            "node_id": "MDQ6VXNlcjU2OTM1NjYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/56935661?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaurang98671",
            "html_url": "https://github.com/gaurang98671",
            "followers_url": "https://api.github.com/users/gaurang98671/followers",
            "following_url": "https://api.github.com/users/gaurang98671/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaurang98671/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaurang98671/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaurang98671/subscriptions",
            "organizations_url": "https://api.github.com/users/gaurang98671/orgs",
            "repos_url": "https://api.github.com/users/gaurang98671/repos",
            "events_url": "https://api.github.com/users/gaurang98671/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaurang98671/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-12T23:16:33Z",
        "updated_at": "2023-07-13T03:46:41Z",
        "closed_at": "2023-07-13T03:46:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7627",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7627",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7627.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7627.patch",
            "merged_at": "2023-07-13T03:46:41Z"
        },
        "body": "Fixed a small typo in documentation\r\n\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: @baskaryan,\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7627/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7627/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7626",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7626/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7626/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7626/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7626",
        "id": 1801874112,
        "node_id": "PR_kwDOIPDwls5VW_tv",
        "number": 7626,
        "title": "add `load()` deserializer function that bypasses need for json serialization",
        "user": {
            "login": "alecf",
            "id": 135340,
            "node_id": "MDQ6VXNlcjEzNTM0MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/135340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alecf",
            "html_url": "https://github.com/alecf",
            "followers_url": "https://api.github.com/users/alecf/followers",
            "following_url": "https://api.github.com/users/alecf/following{/other_user}",
            "gists_url": "https://api.github.com/users/alecf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alecf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alecf/subscriptions",
            "organizations_url": "https://api.github.com/users/alecf/orgs",
            "repos_url": "https://api.github.com/users/alecf/repos",
            "events_url": "https://api.github.com/users/alecf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alecf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nfcampos",
                "id": 56902,
                "node_id": "MDQ6VXNlcjU2OTAy",
                "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nfcampos",
                "html_url": "https://github.com/nfcampos",
                "followers_url": "https://api.github.com/users/nfcampos/followers",
                "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
                "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
                "organizations_url": "https://api.github.com/users/nfcampos/orgs",
                "repos_url": "https://api.github.com/users/nfcampos/repos",
                "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nfcampos/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-07-12T22:57:43Z",
        "updated_at": "2023-08-07T18:10:42Z",
        "closed_at": "2023-08-04T08:49:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7626",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7626",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7626.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7626.patch",
            "merged_at": "2023-08-04T08:49:41Z"
        },
        "body": "There is already a `loads()` function which takes a JSON string and loads it using the Reviver\r\n\r\nBut in the callbacks system, there is a `serialized` object that is passed in and that object is already a deserialized JSON-compatible object. This allows you to call `load(serialized)` and bypass intermediate JSON encoding.\r\n\r\nI found one other place in the code that benefited from this short-circuiting (string_run_evaluator.py) so I fixed that too.\r\n\r\nTagging @baskaryan for general/utility stuff.\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7626/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7626/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7625",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7625/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7625/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7625/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7625",
        "id": 1801867603,
        "node_id": "I_kwDOIPDwls5rZlFT",
        "number": 7625,
        "title": "How to enable the memory mechanism when using create_pandas_dataframe_agent?",
        "user": {
            "login": "ykemiche",
            "id": 58120778,
            "node_id": "MDQ6VXNlcjU4MTIwNzc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/58120778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ykemiche",
            "html_url": "https://github.com/ykemiche",
            "followers_url": "https://api.github.com/users/ykemiche/followers",
            "following_url": "https://api.github.com/users/ykemiche/following{/other_user}",
            "gists_url": "https://api.github.com/users/ykemiche/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ykemiche/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ykemiche/subscriptions",
            "organizations_url": "https://api.github.com/users/ykemiche/orgs",
            "repos_url": "https://api.github.com/users/ykemiche/repos",
            "events_url": "https://api.github.com/users/ykemiche/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ykemiche/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-12T22:49:20Z",
        "updated_at": "2023-10-19T16:05:48Z",
        "closed_at": "2023-10-19T16:05:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain version : 0.0.216\r\nPython version : 3.11.4\r\nSystem: Windows\r\n\r\n### Who can help?\r\n\r\n@hwchase17 @eyu\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [X] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nI want to create a chatbot to retrieve information from my own csv file in response to a query using google PaLM model,\r\nI want to improve the model's capabilities to perform specific data retrieval requests from the CSV. Here are a few examples of queries I would like the chatbot to handle:\r\n\r\na-Calculate the average of data from a specific column in the CSV file.\r\nb-Return the top 10 scores based on a column of grades as a dataframe(the output of llm should be a json format).\r\nc-Track the evolution of a product over time by analyzing a date column.\r\n\r\nI have 2 questions : \r\n\r\n1-\r\nwhat should I change in the following code to maintain contextual memory during the conversation(by changing question)?\r\n\r\n```\r\nfrom langchain.agents import create_pandas_dataframe_agent\r\nfrom langchain.llms import VertexAI\r\n\r\n\r\nChatModel = VertexAI(\r\n      model_name=\"text-bison@001\",\r\n      max_output_tokens=1024,\r\n      temperature=0.1,\r\n      top_p=0.8,\r\n      top_k=40,\r\n      verbose=True,\r\n  )\r\n        \r\npd_agent = create_pandas_dataframe_agent(ChatModel, \r\n                                                  df, \r\n                                                  verbose=True,\r\n                                                  max_iterations=6,)\r\n\r\n#prompt=...\r\n#question=...\r\nresponse = pd_agent.run(prompt + question)\r\n```\r\n\r\n2-\r\n\r\nI'm looking for efficient ways to handle different types of tasks in my chatbot. Some questions require DataFrame responses, others need text responses, and some require both. Can I create specialized agents to handle specific tasks separately instead of specifying everything in one prompt? \r\n\r\n\r\n### Expected behavior\r\n\r\n1-A chatbot that maintains contextual memory during the conversation using create_pandas_dataframe_agent\r\n2-A suggestion of jobs separation to optimize the output of the chain",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7625/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7625/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7624",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7624/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7624/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7624/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7624",
        "id": 1801867323,
        "node_id": "PR_kwDOIPDwls5VW-OG",
        "number": 7624,
        "title": "Migrate langchain/client and langchain/runner_utils",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T22:49:00Z",
        "updated_at": "2023-07-13T06:48:18Z",
        "closed_at": "2023-07-13T06:48:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7624",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7624",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7624.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7624.patch",
            "merged_at": "2023-07-13T06:48:16Z"
        },
        "body": "Move both to `langchain/smith` and update the reference docs for the modules.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7624/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7624/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7623",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7623/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7623/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7623/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7623",
        "id": 1801862154,
        "node_id": "I_kwDOIPDwls5rZjwK",
        "number": 7623,
        "title": "Pandas / CSV agent only show partial results from dataframe head",
        "user": {
            "login": "lynngao",
            "id": 15932035,
            "node_id": "MDQ6VXNlcjE1OTMyMDM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/15932035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lynngao",
            "html_url": "https://github.com/lynngao",
            "followers_url": "https://api.github.com/users/lynngao/followers",
            "following_url": "https://api.github.com/users/lynngao/following{/other_user}",
            "gists_url": "https://api.github.com/users/lynngao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lynngao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lynngao/subscriptions",
            "organizations_url": "https://api.github.com/users/lynngao/orgs",
            "repos_url": "https://api.github.com/users/lynngao/repos",
            "events_url": "https://api.github.com/users/lynngao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lynngao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-12T22:44:43Z",
        "updated_at": "2023-10-12T21:14:42Z",
        "closed_at": "2023-10-12T21:14:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHi my data has 10 rows and I tried with both pandas and csv agent, in the observations I can see the agents are able to process all rows, but in the final answer both agents only output the first 5 rows from df.head(). I tried to set 'number_of_head_rows' to 10 but it doesn't work. Is there any way to make the agents to show results from all rows rather the the head?\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.chat_models import AzureChatOpenAI\r\nfrom langchain.agents import create_pandas_dataframe_agent\r\nfrom langchain.agents.agent_types import AgentType\r\n\r\npd_agent = create_pandas_dataframe_agent(AzureChatOpenAI(deployment_name=\"gpt-4\", model_kwargs={\r\n    \"api_key\": openai.api_key,\r\n    \"api_base\": openai.api_base,\r\n    \"api_type\": openai.api_type,\r\n    \"api_version\": openai.api_version\r\n}, temperature=0.0), \r\n    df, \r\n    agent=AgentType.CHAT_ZERO_SHOT_REACT_DESCRIPTION,\r\n    verbose=True,\r\n    handle_parsing_errors=True)\n\n### Expected behavior\n\nshould output the results from whole table",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7623/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7623/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7622",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7622/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7622/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7622/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7622",
        "id": 1801861024,
        "node_id": "PR_kwDOIPDwls5VW8zd",
        "number": 7622,
        "title": "fix openai structured chain with pydantic",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T22:43:27Z",
        "updated_at": "2023-07-13T03:46:15Z",
        "closed_at": "2023-07-13T03:46:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7622",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7622",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7622.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7622.patch",
            "merged_at": "2023-07-13T03:46:14Z"
        },
        "body": "should return pydantic class",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7622/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7622/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7621",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7621/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7621/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7621/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7621",
        "id": 1801836655,
        "node_id": "PR_kwDOIPDwls5VW3au",
        "number": 7621,
        "title": "WhyLabsCallbackHandler  updates",
        "user": {
            "login": "jamie256",
            "id": 88007022,
            "node_id": "MDQ6VXNlcjg4MDA3MDIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/88007022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamie256",
            "html_url": "https://github.com/jamie256",
            "followers_url": "https://api.github.com/users/jamie256/followers",
            "following_url": "https://api.github.com/users/jamie256/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamie256/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamie256/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamie256/subscriptions",
            "organizations_url": "https://api.github.com/users/jamie256/orgs",
            "repos_url": "https://api.github.com/users/jamie256/repos",
            "events_url": "https://api.github.com/users/jamie256/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamie256/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-12T22:18:35Z",
        "updated_at": "2023-07-13T03:46:57Z",
        "closed_at": "2023-07-13T03:46:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7621",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7621",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7621.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7621.patch",
            "merged_at": "2023-07-13T03:46:56Z"
        },
        "body": "Updates to the WhyLabsCallbackHandler and example notebook\r\n- Update dependency to langkit 0.0.6 which defines new helper methods for callback integrations\r\n- Update WhyLabsCallbackHandler to use the new `get_callback_instance` so that the callback is mostly defined in langkit\r\n- Remove much of the implementation of the WhyLabsCallbackHandler here in favor of the callback instance\r\n\r\nThis does not change the behavior of the whylabs callback handler implementation but is a reorganization that moves some of the implementation externally to our optional dependency package, and should make future updates easier.\r\n\r\n@agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7621/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7621/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7620",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7620/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7620/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7620/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7620",
        "id": 1801818569,
        "node_id": "PR_kwDOIPDwls5VWzeG",
        "number": 7620,
        "title": "updated langchain/chains/openai_functions/base.py and langchain/chains/base.py ",
        "user": {
            "login": "sumanthdonthula",
            "id": 46747610,
            "node_id": "MDQ6VXNlcjQ2NzQ3NjEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/46747610?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sumanthdonthula",
            "html_url": "https://github.com/sumanthdonthula",
            "followers_url": "https://api.github.com/users/sumanthdonthula/followers",
            "following_url": "https://api.github.com/users/sumanthdonthula/following{/other_user}",
            "gists_url": "https://api.github.com/users/sumanthdonthula/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sumanthdonthula/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sumanthdonthula/subscriptions",
            "organizations_url": "https://api.github.com/users/sumanthdonthula/orgs",
            "repos_url": "https://api.github.com/users/sumanthdonthula/repos",
            "events_url": "https://api.github.com/users/sumanthdonthula/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sumanthdonthula/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T21:59:29Z",
        "updated_at": "2023-07-25T20:32:52Z",
        "closed_at": "2023-07-25T20:32:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7620",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7620",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7620.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7620.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n\r\nRelated to issue #7578, create_structured_output_chain will return Dict as o/p where as in documentation it says it will return string, updated examples in langchain/chains/openai_functions/base.py.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7620/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7620/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7619",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7619/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7619/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7619/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7619",
        "id": 1801791302,
        "node_id": "I_kwDOIPDwls5rZSdG",
        "number": 7619,
        "title": "Is it possible to use open source embedding methods rather than OpenAIEmbeddings?",
        "user": {
            "login": "ykemiche",
            "id": 58120778,
            "node_id": "MDQ6VXNlcjU4MTIwNzc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/58120778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ykemiche",
            "html_url": "https://github.com/ykemiche",
            "followers_url": "https://api.github.com/users/ykemiche/followers",
            "following_url": "https://api.github.com/users/ykemiche/following{/other_user}",
            "gists_url": "https://api.github.com/users/ykemiche/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ykemiche/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ykemiche/subscriptions",
            "organizations_url": "https://api.github.com/users/ykemiche/orgs",
            "repos_url": "https://api.github.com/users/ykemiche/repos",
            "events_url": "https://api.github.com/users/ykemiche/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ykemiche/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T21:32:46Z",
        "updated_at": "2023-07-13T06:18:34Z",
        "closed_at": "2023-07-13T06:18:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain version :  0.0.216\r\nPython version : 3.11.4\r\nSystem: Windows\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n\r\nI want to create a chatbot to retrieve information from my own pdf  in response to a query  using google PaLM model, I followed these steps : \r\n-load the pdf\r\n-split it using RecursiveCharacterTextSplitter\r\n-store its embeddings in a Chroma vectorestore\r\nand then create a chain ...\r\n\r\n\r\n```\r\nfrom langchain.document_loaders import PyPDFLoader\r\nfrom langchain.document_loaders import PyPDFLoader\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\n\r\nimport langchain\r\n\r\nloader=PyPDFLoader(\"path/to/pdf.pdf\")\r\nchroma_dir=\"./chroma\r\npages=loader.load()\r\nsplitter=RecursiveCharacterTextSplitter(\r\n    chunk_size=1000,\r\n    chunk_overlap=150,\r\n    separators=['\\n\\n','\\n',\" \",\"\"]\r\n)\r\n\r\nsplits=splitter.split_documents(pages)\r\n\r\n#I want to change this with another embedding method which doesn't require API authentification\r\nembeddings=OpenAIEmbeddings()\r\n\r\nvector_db=Chroma.from_documents(\r\ndocuments=splits,\r\nembedding=embeddings,\r\npersist_directory=chroma_dir\r\n)\r\n\r\n```\r\n\r\nBut the only embedding method that is available in the LangChain documentation is OpenAIEmbeddings,how can we do without it?\r\n\r\n\r\n### Expected behavior\r\n\r\nall the splits embeddings stored in Chroma vectorestore without using OpenAIEmbeddings()",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7619/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7619/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7618",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7618/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7618/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7618/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7618",
        "id": 1801774854,
        "node_id": "I_kwDOIPDwls5rZOcG",
        "number": 7618,
        "title": "Issue with Langchain LLM Chains ",
        "user": {
            "login": "dknamikaze",
            "id": 88419852,
            "node_id": "MDQ6VXNlcjg4NDE5ODUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/88419852?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dknamikaze",
            "html_url": "https://github.com/dknamikaze",
            "followers_url": "https://api.github.com/users/dknamikaze/followers",
            "following_url": "https://api.github.com/users/dknamikaze/following{/other_user}",
            "gists_url": "https://api.github.com/users/dknamikaze/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dknamikaze/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dknamikaze/subscriptions",
            "organizations_url": "https://api.github.com/users/dknamikaze/orgs",
            "repos_url": "https://api.github.com/users/dknamikaze/repos",
            "events_url": "https://api.github.com/users/dknamikaze/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dknamikaze/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-12T21:18:33Z",
        "updated_at": "2023-10-21T16:07:05Z",
        "closed_at": "2023-10-21T16:07:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nI am using Windows 11 as OS, RAM = 44GB. Also, I am using  LLaMa vicuna-7b-1.1.ggmlv3.q4_0.bin as Local LLM.\r\nI am using Python 3.11.3 in venv virtual environment in VS code IDE and Langchain version 0.0.221.\r\n\r\n<img width=\"948\" alt=\"Screenshot 2023-07-13_Pydantic Error\" src=\"https://github.com/hwchase17/langchain/assets/88419852/6f172fcd-5a06-472f-b3bb-aec069f626f0\">\r\n\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n@agola11 \r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nUse the following code - \r\n\r\nfrom llama_cpp import Llama\r\nfrom langchain import PromptTemplate\r\nfrom langchain.chains import LLMChain\r\nfrom langchain.chat_models import ChatOpenAI\r\nimport os\r\nfrom dotenv import load_dotenv\r\nimport json\r\nimport time\r\n\r\nload_dotenv()\r\n\r\n\r\nmodel_path = os.environ.get('MODEL_PATH')\r\nprint(model_path)\r\n# Load the model\r\nprint(\"....Loading LLAMA\")\r\nllm = Llama(model_path=model_path, n_ctx=2048, n_threads=8)\r\n# llm = ChatOpenAI(\r\n#         temperature=0, model_name=\"gpt-3.5-turbo\"\r\n#     )  \r\n\r\ntext=\"A lion lives in a jungle\"\r\n\r\ntemplate = \"\"\"/\r\nGiven the text data {text}, I want you to:\r\n extract all possible semantic triples in the format of (subject, predicate,object)\"\"\"\r\n\r\ntriple_template = PromptTemplate(input_variables=[\"text\"], template=template)\r\n#print(triple_template)\r\n#triple_template.format(text=t)\r\nchain = LLMChain(llm=llm, prompt=triple_template)\r\n#Run the model\r\nprint(\"RUnning Model.....\")\r\nprint(chain.run(text=text))\r\n\r\nI have commented out llm generated by ChatOpenAI, this code executes and gives desired results if we use OpenAI LLM. However, I am using LLaMa vicuna-7b-1.1.ggmlv3.q4_0.bin, the chain gives the following error - \r\nFile \"pydantic\\main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for LLMChain\r\nllm\r\n  value is not a valid dict (type=type_error.dict)\r\n\r\nI have tested the LLaMa LLM, it works outside LLM chain without any problem.\r\n\r\n### Expected behavior\r\n\r\nIn response to the given text, it should have returned a semantic triple of form ( Subject, Predicate Object) ie. ( Lion, Lives in , Jungle) or something similar.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7618/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7618/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7617",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7617/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7617/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7617/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7617",
        "id": 1801760817,
        "node_id": "PR_kwDOIPDwls5VWmrv",
        "number": 7617,
        "title": "Fix issue #7616",
        "user": {
            "login": "paschembri",
            "id": 8329444,
            "node_id": "MDQ6VXNlcjgzMjk0NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8329444?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paschembri",
            "html_url": "https://github.com/paschembri",
            "followers_url": "https://api.github.com/users/paschembri/followers",
            "following_url": "https://api.github.com/users/paschembri/following{/other_user}",
            "gists_url": "https://api.github.com/users/paschembri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paschembri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paschembri/subscriptions",
            "organizations_url": "https://api.github.com/users/paschembri/orgs",
            "repos_url": "https://api.github.com/users/paschembri/repos",
            "events_url": "https://api.github.com/users/paschembri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paschembri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T21:05:46Z",
        "updated_at": "2023-08-06T22:12:04Z",
        "closed_at": "2023-08-06T22:12:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7617",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7617",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7617.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7617.patch",
            "merged_at": "2023-08-06T22:12:04Z"
        },
        "body": "Fix Issue #7616 with a simpler approach to extract function names (use `__name__` attribute)\r\n\r\n@hwchase17\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7617/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7617/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7616",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7616/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7616/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7616/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7616",
        "id": 1801757859,
        "node_id": "I_kwDOIPDwls5rZKSj",
        "number": 7616,
        "title": "_get_python_function_name does not work with classes",
        "user": {
            "login": "paschembri",
            "id": 8329444,
            "node_id": "MDQ6VXNlcjgzMjk0NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8329444?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paschembri",
            "html_url": "https://github.com/paschembri",
            "followers_url": "https://api.github.com/users/paschembri/followers",
            "following_url": "https://api.github.com/users/paschembri/following{/other_user}",
            "gists_url": "https://api.github.com/users/paschembri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paschembri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paschembri/subscriptions",
            "organizations_url": "https://api.github.com/users/paschembri/orgs",
            "repos_url": "https://api.github.com/users/paschembri/repos",
            "events_url": "https://api.github.com/users/paschembri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paschembri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-12T21:03:09Z",
        "updated_at": "2023-10-19T16:05:58Z",
        "closed_at": "2023-10-19T16:05:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain : v0.0.231\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n# Issue\r\n`convert_to_openai_function` does not work as intended:\r\n- Classes are not supported\r\n- Any function without its source is not supported\r\n\r\n# Reproduce\r\n\r\n```python\r\nfrom dataclasses import dataclass\r\nfrom langchain.chains.openai_functions.base import (\r\n    convert_to_openai_function,\r\n)\r\n\r\n@dataclass\r\nclass System:\r\n    name: str\r\n    ram: int\r\n\r\nconvert_to_openai_function(System)\r\n```\r\n\r\n### Expected behavior\r\n\r\nWhen calling `langchain.chains.openai_functions.base.convert_to_openai_function`, the subsequent call to `_get_python_function_name` fails because it tries to read source code (and cannot find it).\r\n\r\nSomething much simpler would be to access the `__name__` attribute of the callable.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7616/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7616/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7615",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7615/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7615/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7615/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7615",
        "id": 1801745748,
        "node_id": "PR_kwDOIPDwls5VWjZC",
        "number": 7615,
        "title": "Permit Equivalence Checking",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T20:52:47Z",
        "updated_at": "2023-07-24T22:01:41Z",
        "closed_at": "2023-07-24T22:01:41Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7615",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7615",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7615.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7615.patch",
            "merged_at": null
        },
        "body": "Currently you can't compare most chains.\r\n\r\nWould fix #7484\r\n```\r\nfrom langchain.chains import TransformChain\r\ndef foo(val):\r\n    return val\r\nchain = TransformChain(transform=foo, input_variables=['foo'], output_variables=['foo'])\r\nchain == chain\r\n\r\n---------------------------------------------------------------------------\r\nNotImplementedError                       Traceback (most recent call last)\r\nCell In[13], line 1\r\n----> 1 chain == chain\r\n\r\nFile /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/main.py:909, in pydantic.main.BaseModel.__eq__()\r\n\r\nFile ~/code/lc/lckg/langchain/chains/base.py:556, in Chain.dict(self, **kwargs)\r\n    554     raise ValueError(\"Saving of memory is not yet supported.\")\r\n    555 _dict = super().dict(**kwargs)\r\n--> 556 _dict[\"_type\"] = self._chain_type\r\n    557 return _dict\r\n\r\nFile ~/code/lc/lckg/langchain/chains/base.py:94, in Chain._chain_type(self)\r\n     92 @property\r\n     93 def _chain_type(self) -> str:\r\n---> 94     raise NotImplementedError(\"Saving not supported for this chain type.\")\r\n\r\nNotImplementedError: Saving not supported for this chain type.\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7615/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7615/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7614",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7614/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7614/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7614/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7614",
        "id": 1801729983,
        "node_id": "PR_kwDOIPDwls5VWf2z",
        "number": 7614,
        "title": "mv tutorials",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T20:43:29Z",
        "updated_at": "2023-07-12T21:33:38Z",
        "closed_at": "2023-07-12T21:33:37Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7614",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7614",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7614.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7614.patch",
            "merged_at": "2023-07-12T21:33:37Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7614/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7614/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7613",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7613/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7613/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7613/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7613",
        "id": 1801689378,
        "node_id": "I_kwDOIPDwls5rY5ki",
        "number": 7613,
        "title": "ImportError: cannot import name 'AgentType' from 'langchain.agents'",
        "user": {
            "login": "shamastb",
            "id": 42250340,
            "node_id": "MDQ6VXNlcjQyMjUwMzQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/42250340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shamastb",
            "html_url": "https://github.com/shamastb",
            "followers_url": "https://api.github.com/users/shamastb/followers",
            "following_url": "https://api.github.com/users/shamastb/following{/other_user}",
            "gists_url": "https://api.github.com/users/shamastb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shamastb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shamastb/subscriptions",
            "organizations_url": "https://api.github.com/users/shamastb/orgs",
            "repos_url": "https://api.github.com/users/shamastb/repos",
            "events_url": "https://api.github.com/users/shamastb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shamastb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-12T20:17:05Z",
        "updated_at": "2023-10-11T16:47:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nIt's unclear how to check your langchain version, I can instead detail the steps I have taken. \r\n\r\nI am running python 3.10.6 and python 3.11.4\r\n\r\nI have uninstalled and reinstalled both versions individually, in path, and attempted to install and run langchain with just one of either of those two versions installed. \r\n\r\nI have installed in both instances 'pip install langchain' uninstalled and reinstalled as 'langchain[all]', ran 'pip install --upgrade langchain[all]'.\r\n\r\nI am running this in a streamlit environment with the latest version installed by pip.\r\n\r\nthe line I am having issue with is:\r\n\r\nfrom langchain.agents import AgentType, initialize_agent, load_tools\r\n\r\nWhich is out of the langchain published documentation. \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [x] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain import OpenAI\r\nfrom langchain.agents import AgentType, initialize_agent, load_tools\r\nfrom langchain import StreamlitCallbackHandler\r\nimport streamlit as st\r\nfrom dotenv import load_dotenv\n\n### Expected behavior\n\nI expect it to import AgentType from langchain.agents as specified in the public documentation. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7613/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7613/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7612",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7612/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7612/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7612/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7612",
        "id": 1801672306,
        "node_id": "PR_kwDOIPDwls5VWTKn",
        "number": 7612,
        "title": "Rm Warning that Tracing is Experimental",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T20:06:56Z",
        "updated_at": "2023-07-12T21:04:30Z",
        "closed_at": "2023-07-12T21:04:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7612",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7612",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7612.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7612.patch",
            "merged_at": "2023-07-12T21:04:29Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7612/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7612/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7611",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7611/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7611/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7611/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7611",
        "id": 1801671476,
        "node_id": "PR_kwDOIPDwls5VWS_M",
        "number": 7611,
        "title": "Stop warning when parent run ID not present",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T20:06:17Z",
        "updated_at": "2023-07-12T21:04:34Z",
        "closed_at": "2023-07-12T21:04:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7611",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7611",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7611.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7611.patch",
            "merged_at": "2023-07-12T21:04:33Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7611/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7611/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7610",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7610/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7610/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7610/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7610",
        "id": 1801664816,
        "node_id": "I_kwDOIPDwls5rYzkw",
        "number": 7610,
        "title": "Issue: Big issue with inefficient search from Google/Wikipedia and LLM hallucinations with ReAct agent",
        "user": {
            "login": "jeromemassot",
            "id": 20254310,
            "node_id": "MDQ6VXNlcjIwMjU0MzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/20254310?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeromemassot",
            "html_url": "https://github.com/jeromemassot",
            "followers_url": "https://api.github.com/users/jeromemassot/followers",
            "following_url": "https://api.github.com/users/jeromemassot/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeromemassot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeromemassot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeromemassot/subscriptions",
            "organizations_url": "https://api.github.com/users/jeromemassot/orgs",
            "repos_url": "https://api.github.com/users/jeromemassot/repos",
            "events_url": "https://api.github.com/users/jeromemassot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeromemassot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T20:00:50Z",
        "updated_at": "2023-10-18T16:05:33Z",
        "closed_at": "2023-10-18T16:05:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi, LangChain community,\r\n\r\njust to share that even with the examples mentioned in the official documentation, it is almost impossible to get consistent results when using agents with Wikipedia/Google search tools. Or the search is non conclusive or the LLM is totally hallucinating at the very early step of the pipeline. LLMs from OpenAI for Completion or Conversation.\r\n\r\nDid someone else notice this new behavior?\r\n\r\nBest regards\r\n\r\nJerome\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7610/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7610/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7609",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7609/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7609/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7609/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7609",
        "id": 1801636599,
        "node_id": "I_kwDOIPDwls5rYsr3",
        "number": 7609,
        "title": "BaseEmbaasLoader validation fails",
        "user": {
            "login": "maciejso",
            "id": 586619,
            "node_id": "MDQ6VXNlcjU4NjYxOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/586619?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maciejso",
            "html_url": "https://github.com/maciejso",
            "followers_url": "https://api.github.com/users/maciejso/followers",
            "following_url": "https://api.github.com/users/maciejso/following{/other_user}",
            "gists_url": "https://api.github.com/users/maciejso/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maciejso/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maciejso/subscriptions",
            "organizations_url": "https://api.github.com/users/maciejso/orgs",
            "repos_url": "https://api.github.com/users/maciejso/repos",
            "events_url": "https://api.github.com/users/maciejso/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maciejso/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-12T19:38:41Z",
        "updated_at": "2023-07-13T07:50:31Z",
        "closed_at": "2023-07-13T07:50:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nRepro:\r\nRunning this code sample.\r\nhttps://github.com/techleadhd/chatgpt-retrieval\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/maciej/workdir/intenzia/langchaintest/chatgpt-retrieval/chatgpt.py\", line 5, in <module>\r\n    from langchain.chains import ConversationalRetrievalChain, RetrievalQA\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/langchain/__init__.py\", line 6, in <module>\r\n    from langchain.agents import MRKLChain, ReActChain, SelfAskWithSearchChain\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/langchain/agents/__init__.py\", line 2, in <module>\r\n    from langchain.agents.agent import (\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/langchain/agents/agent.py\", line 16, in <module>\r\n    from langchain.agents.tools import InvalidTool\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/langchain/agents/tools.py\", line 8, in <module>\r\n    from langchain.tools.base import BaseTool, Tool, tool\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/langchain/tools/__init__.py\", line 3, in <module>\r\n    from langchain.tools.arxiv.tool import ArxivQueryRun\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/langchain/tools/arxiv/tool.py\", line 12, in <module>\r\n    from langchain.utilities.arxiv import ArxivAPIWrapper\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/langchain/utilities/__init__.py\", line 3, in <module>\r\n    from langchain.utilities.apify import ApifyWrapper\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/langchain/utilities/apify.py\", line 5, in <module>\r\n    from langchain.document_loaders import ApifyDatasetLoader\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/langchain/document_loaders/__init__.py\", line 44, in <module>\r\n    from langchain.document_loaders.embaas import EmbaasBlobLoader, EmbaasLoader\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/langchain/document_loaders/embaas.py\", line 54, in <module>\r\n    class BaseEmbaasLoader(BaseModel):\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pydantic/main.py\", line 204, in __new__\r\n    fields[ann_name] = ModelField.infer(\r\n                       ^^^^^^^^^^^^^^^^^\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pydantic/fields.py\", line 488, in infer\r\n    return cls(\r\n           ^^^^\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pydantic/fields.py\", line 419, in __init__\r\n    self.prepare()\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pydantic/fields.py\", line 539, in prepare\r\n    self.populate_validators()\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pydantic/fields.py\", line 801, in populate_validators\r\n    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),\r\n                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pydantic/validators.py\", line 696, in find_validators\r\n    yield make_typeddict_validator(type_, config)\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pydantic/validators.py\", line 585, in make_typeddict_validator\r\n    TypedDictModel = create_model_from_typeddict(\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pydantic/annotated_types.py\", line 35, in create_model_from_typeddict\r\n    return create_model(typeddict_cls.__name__, **kwargs, **field_definitions)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pydantic/main.py\", line 972, in create_model\r\n    return type(__model_name, __base__, namespace)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pydantic/main.py\", line 204, in __new__\r\n    fields[ann_name] = ModelField.infer(\r\n                       ^^^^^^^^^^^^^^^^^\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pydantic/fields.py\", line 488, in infer\r\n    return cls(\r\n           ^^^^\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pydantic/fields.py\", line 419, in __init__\r\n    self.prepare()\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pydantic/fields.py\", line 534, in prepare\r\n    self._type_analysis()\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pydantic/fields.py\", line 638, in _type_analysis\r\n    elif issubclass(origin, Tuple):  # type: ignore\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/maciej/.pyenv/versions/3.11.0/lib/python3.11/typing.py\", line 1550, in __subclasscheck__\r\n    return issubclass(cls, self.__origin__)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nTypeError: issubclass() arg 1 must be a class\r\n```\r\n\r\n```\r\nlangchain==0.0.230\r\nlangchainplus-sdk==0.0.20\r\nPython 3.11.0\r\nUbuntu 22.04\r\n```\r\n\r\n\r\n```\r\nmaciej@ola:~/workdir/intenzia/langchaintest/chatgpt-retrieval$ pip freeze\r\naiohttp==3.8.4\r\naiosignal==1.3.1\r\nanyio==3.7.1\r\nasync-timeout==4.0.2\r\nattrs==23.1.0\r\nbackoff==2.2.1\r\ncertifi==2023.5.7\r\ncffi==1.15.1\r\nchardet==5.1.0\r\ncharset-normalizer==3.2.0\r\nchromadb==0.3.27\r\nclick==8.1.4\r\nclickhouse-connect==0.6.6\r\ncoloredlogs==15.0.1\r\ncryptography==41.0.2\r\ndataclasses-json==0.5.9\r\nduckdb==0.8.1\r\net-xmlfile==1.1.0\r\nfastapi==0.85.1\r\nfiletype==1.2.0\r\nflatbuffers==23.5.26\r\nfrozenlist==1.3.3\r\ngreenlet==2.0.2\r\nh11==0.14.0\r\nhnswlib==0.7.0\r\nhttptools==0.6.0\r\nhumanfriendly==10.0\r\nidna==3.4\r\nimportlib-metadata==6.8.0\r\njoblib==1.3.1\r\nlangchain==0.0.230\r\nlangchainplus-sdk==0.0.20\r\nlxml==4.9.3\r\nlz4==4.3.2\r\nMarkdown==3.4.3\r\nmarshmallow==3.19.0\r\nmarshmallow-enum==1.5.1\r\nmonotonic==1.6\r\nmpmath==1.3.0\r\nmsg-parser==1.2.0\r\nmultidict==6.0.4\r\nmypy-extensions==1.0.0\r\nnltk==3.8.1\r\nnumexpr==2.8.4\r\nnumpy==1.25.1\r\nolefile==0.46\r\nonnxruntime==1.15.1\r\nopenai==0.27.8\r\nopenapi-schema-pydantic==1.2.4\r\nopenpyxl==3.1.2\r\noverrides==7.3.1\r\npackaging==23.1\r\npandas==2.0.3\r\npdf2image==1.16.3\r\npdfminer.six==20221105\r\nPillow==10.0.0\r\nposthog==3.0.1\r\nprotobuf==4.23.4\r\npulsar-client==3.2.0\r\npycparser==2.21\r\npydantic==1.9.0\r\npypandoc==1.11\r\npython-dateutil==2.8.2\r\npython-docx==0.8.11\r\npython-dotenv==1.0.0\r\npython-magic==0.4.27\r\npython-pptx==0.6.21\r\npytz==2023.3\r\nPyYAML==6.0\r\nregex==2023.6.3\r\nrequests==2.31.0\r\nsix==1.16.0\r\nsniffio==1.3.0\r\nSQLAlchemy==2.0.18\r\nstarlette==0.20.4\r\nsympy==1.12\r\ntabulate==0.9.0\r\ntenacity==8.2.2\r\ntiktoken==0.4.0\r\ntokenizers==0.13.3\r\ntqdm==4.65.0\r\ntyping-inspect==0.9.0\r\ntyping_extensions==4.7.1\r\ntzdata==2023.3\r\nunstructured==0.8.1\r\nurllib3==2.0.3\r\nuvicorn==0.22.0\r\nuvloop==0.17.0\r\nwatchfiles==0.19.0\r\nwebsockets==11.0.3\r\nxlrd==2.0.1\r\nXlsxWriter==3.1.2\r\nyarl==1.9.2\r\nzipp==3.16.0\r\nzstandard==0.21.0\r\n```\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nRun this code sample\r\nhttps://github.com/techleadhd/chatgpt-retrieval\n\n### Expected behavior\n\nPydantic validation fails: TypeError: issubclass() arg 1 must be a class",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7609/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7609/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7608",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7608/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7608/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7608/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7608",
        "id": 1801582732,
        "node_id": "PR_kwDOIPDwls5VV_qE",
        "number": 7608,
        "title": "make client explicit in runner",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T18:59:01Z",
        "updated_at": "2023-07-13T07:32:05Z",
        "closed_at": "2023-07-13T07:32:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7608",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7608",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7608.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7608.patch",
            "merged_at": "2023-07-13T07:32:03Z"
        },
        "body": "More explicit / a req from harrison",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7608/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7608/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7607",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7607/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7607/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7607/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7607",
        "id": 1801561607,
        "node_id": "PR_kwDOIPDwls5VV7A-",
        "number": 7607,
        "title": "Fix Lint: Bittensor llm",
        "user": {
            "login": "kdcokenny",
            "id": 99611484,
            "node_id": "U_kgDOBe_zXA",
            "avatar_url": "https://avatars.githubusercontent.com/u/99611484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kdcokenny",
            "html_url": "https://github.com/kdcokenny",
            "followers_url": "https://api.github.com/users/kdcokenny/followers",
            "following_url": "https://api.github.com/users/kdcokenny/following{/other_user}",
            "gists_url": "https://api.github.com/users/kdcokenny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kdcokenny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kdcokenny/subscriptions",
            "organizations_url": "https://api.github.com/users/kdcokenny/orgs",
            "repos_url": "https://api.github.com/users/kdcokenny/repos",
            "events_url": "https://api.github.com/users/kdcokenny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kdcokenny/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-12T18:43:05Z",
        "updated_at": "2023-07-15T22:37:27Z",
        "closed_at": "2023-07-15T22:37:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7607",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7607",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7607.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7607.patch",
            "merged_at": null
        },
        "body": "I fixed the lint so it passes checks for pull #7602 \r\n\r\nI didn't remove the bearer key in the headers on line 58 in case it's there on purpose for whatever reason that could be. However, @Kunj-2206 if that's not left in on purpose, either reply here to remove it or git checkout this pull req and make a new one.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7607/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7607/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7606",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7606/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7606/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7606/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7606",
        "id": 1801539064,
        "node_id": "I_kwDOIPDwls5rYU34",
        "number": 7606,
        "title": "If we continuously send \"Hello\" messages to the \"conversational retrieval chain,\" the model produces weired/wrong answers.",
        "user": {
            "login": "chowdary1209",
            "id": 52491904,
            "node_id": "MDQ6VXNlcjUyNDkxOTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/52491904?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chowdary1209",
            "html_url": "https://github.com/chowdary1209",
            "followers_url": "https://api.github.com/users/chowdary1209/followers",
            "following_url": "https://api.github.com/users/chowdary1209/following{/other_user}",
            "gists_url": "https://api.github.com/users/chowdary1209/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chowdary1209/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chowdary1209/subscriptions",
            "organizations_url": "https://api.github.com/users/chowdary1209/orgs",
            "repos_url": "https://api.github.com/users/chowdary1209/repos",
            "events_url": "https://api.github.com/users/chowdary1209/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chowdary1209/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-12T18:25:59Z",
        "updated_at": "2023-12-08T19:29:25Z",
        "closed_at": "2023-10-18T16:05:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.170\r\nopenai==0.27.4\r\npython\r\nwindows\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [X] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [X] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI am using the \"**ConversationalRetrievalChain**\", Whenever I send a message to a model, it produces wrong results with history, whereas if I send the same message without history, it produces correct results. The issue here is that the model is forming the wrong standalone question, and the same wrong standalone question is passing to the OpenAI Model.\r\n\r\nSteps to reproduce:\r\n1. Use the Conversational Retrieval Chan\r\n2. Pass the history on to the chain.\r\n3. Send the \"Hello\" message continuously.\r\nHere you can observe wrong/weired answers.\r\n\r\nThe above scenario is Just an example. But whenever we ask some question, immediately if we send the message \"Hello\", the \"conversational retrieval chain\" forms the wrong standalone question, hence the openAI model producing wrong answers.\r\n\r\nThis is the code I am using: -\r\n\r\n_template = \"\"\"\r\n\tUse the following pieces of context to answer the question at the end.\r\n\t{context}\r\n\tIf you still cant find the answer, just say that you don't know, don't try to make up an answer.\r\n\tYou can also look into chat history.\r\n\t{chat_history}\r\n\tQuestion: {question}\r\n\tAnswer:                \r\n\t\"\"\"\r\n\t\r\n\t\r\nCONDENSE_QUESTION_PROMPT = PromptTemplate(\r\n\ttemplate=_template,\r\n\tinput_variables = [\"context\",\"question\", \"chat_history\"],\r\n)\r\n\r\n\r\nchain = ConversationalRetrievalChain.from_llm(\r\n\tllm= azure_chat_api_llm_objct,\r\n\tretriever=vectors.as_retriever(),\r\n\tverbose=True,\r\n\tchain_type=\"stuff\",\r\n\tmemory = memory,\r\n\tget_chat_history=lambda h:h,    \r\n\t# condense_question_prompt=CONDENSE_QUESTION_PROMPT,\r\n\tcombine_docs_chain_kwargs={\"prompt\": CONDENSE_QUESTION_PROMPT},\r\n\treturn_generated_question=True,\r\n\t)   \r\n\t\r\nchain.run(\"Hello\")\r\n\r\nNote:- I have tried multiple way like removing \"CONDENCE_QUESTION\", without prompt, with different types of prompts, etc..but still its producing wrong standalone question.\r\nEx:-\r\n_template = \"\"\"\r\n  Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question.\r\n  \r\n  Chat History:\r\n  {chat_history}\r\n  Follow Up Input: {question}\r\n  Standalone question:\r\n\"\"\"\r\n\r\nThanks in advance, and please correct me if I made any mistakes in the code.\r\n\r\n<img width=\"458\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/52491904/eb0e3aba-6151-42f8-924b-bda2cb4ccfaf\">\r\n\r\n\n\n### Expected behavior\n\nIt should form a proper standalone question when we pass history before passing to model.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7606/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7606/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7605",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7605/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7605/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7605/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7605",
        "id": 1801502750,
        "node_id": "I_kwDOIPDwls5rYMAe",
        "number": 7605,
        "title": "Type Error Langchain auto converting string to date.timestamp in Pinecone similarity search when Document pagecontent value is a string that \"could\" be a date ex: 21070926",
        "user": {
            "login": "masonchambersiii",
            "id": 135065754,
            "node_id": "U_kgDOCAzwmg",
            "avatar_url": "https://avatars.githubusercontent.com/u/135065754?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/masonchambersiii",
            "html_url": "https://github.com/masonchambersiii",
            "followers_url": "https://api.github.com/users/masonchambersiii/followers",
            "following_url": "https://api.github.com/users/masonchambersiii/following{/other_user}",
            "gists_url": "https://api.github.com/users/masonchambersiii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/masonchambersiii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/masonchambersiii/subscriptions",
            "organizations_url": "https://api.github.com/users/masonchambersiii/orgs",
            "repos_url": "https://api.github.com/users/masonchambersiii/repos",
            "events_url": "https://api.github.com/users/masonchambersiii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/masonchambersiii/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-12T18:01:54Z",
        "updated_at": "2023-10-18T16:05:43Z",
        "closed_at": "2023-10-18T16:05:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.206 ; python_version >= \"3.11\" and python_version < \"4.0\"\r\nlangchainplus-sdk==0.0.16 ; python_version >= \"3.11\" and python_version < \"4.0\"\r\n\n\n### Who can help?\n\n@hwaking @agola11 Hey Guys! The pinecone wrapper is doing a weird auto-type conversion and its thinking my string ID values are dates in this part of the code:                \r\n\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nHave a string value set as your Pinecone Document.pagecontent that could be misinterpreted as a date ex: 21070809\r\n\r\nProblem function:     \r\n\r\ndef similarity_search_with_score(\r\n        self,\r\n        query: str,\r\n        k: int = 4,\r\n        filter: Optional[dict] = None,\r\n        namespace: Optional[str] = None,\r\n    ) -> List[Tuple[Document, float]]:\r\n        \"\"\"Return pinecone documents most similar to query, along with scores.\r\n\r\n        Args:\r\n            query: Text to look up documents similar to.\r\n            k: Number of Documents to return. Defaults to 4.\r\n            filter: Dictionary of argument(s) to filter on metadata\r\n            namespace: Namespace to search in. Default will search in '' namespace.\r\n\r\n        Returns:\r\n            List of Documents most similar to the query and score for each\r\n        \"\"\"\r\n        if namespace is None:\r\n            namespace = self._namespace\r\n        query_obj = self._embedding_function(query)\r\n        docs = []\r\n        results = self._index.query(\r\n            [query_obj],\r\n            top_k=k,\r\n            include_metadata=True,\r\n            namespace=namespace,\r\n            filter=filter,\r\n        )\r\n        for res in results[\"matches\"]:\r\n            metadata = res[\"metadata\"]\r\n            if self._text_key in metadata:\r\n                text = metadata.pop(self._text_key)\r\n                score = res[\"score\"]\r\n                # if (type(text) != str):    <-------------------------- I added this code to convert it back to string\r\n                #     text = text.strftime(\"%Y%m%d\") <------------- If you can just recast to string the problem will resolve\r\n                docs.append((Document(page_content=text, metadata=metadata), score))\r\n            else:\r\n                logger.warning(\r\n                    f\"Found document with no `{self._text_key}` key. Skipping.\"\r\n                )\r\n        return docs\r\n\r\n\r\n\r\nStack: [langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/uvicorn/protocols/http/h11_impl.py\", line 428, in run_asgi\r\n[langchain] [2023-07-12 17:43:08]     result = await app(  # type: ignore[func-returns-value]\r\n[langchain] [2023-07-12 17:43:08]              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py\", line 78, in __call__\r\n[langchain] [2023-07-12 17:43:08]     return await self.app(scope, receive, send)\r\n[langchain] [2023-07-12 17:43:08]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/fastapi/applications.py\", line 282, in __call__\r\n[langchain] [2023-07-12 17:43:08]     await super().__call__(scope, receive, send)\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/sentry_sdk/integrations/starlette.py\", line 348, in _sentry_patched_asgi_app\r\n[langchain] [2023-07-12 17:43:08]     return await middleware(scope, receive, send)\r\n[langchain] [2023-07-12 17:43:08]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/sentry_sdk/integrations/asgi.py\", line 141, in _run_asgi3\r\n[langchain] [2023-07-12 17:43:08]     return await self._run_app(scope, lambda: self.app(scope, receive, send))\r\n[langchain] [2023-07-12 17:43:08]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/sentry_sdk/integrations/asgi.py\", line 190, in _run_app\r\n[langchain] [2023-07-12 17:43:08]     raise exc from None\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/sentry_sdk/integrations/asgi.py\", line 185, in _run_app\r\n[langchain] [2023-07-12 17:43:08]     return await callback()\r\n[langchain] [2023-07-12 17:43:08]            ^^^^^^^^^^^^^^^^\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/starlette/applications.py\", line 122, in __call__\r\n[langchain] [2023-07-12 17:43:08]     await self.middleware_stack(scope, receive, send)\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/sentry_sdk/integrations/starlette.py\", line 143, in _create_span_call\r\n[langchain] [2023-07-12 17:43:08]     return await old_call(app, scope, new_receive, new_send, **kwargs)\r\n[langchain] [2023-07-12 17:43:08]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/starlette/middleware/errors.py\", line 184, in __call__\r\n[langchain] [2023-07-12 17:43:08]     raise exc\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/starlette/middleware/errors.py\", line 162, in __call__\r\n[langchain] [2023-07-12 17:43:08]     await self.app(scope, receive, _send)\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/sentry_sdk/integrations/starlette.py\", line 242, in _sentry_exceptionmiddleware_call\r\n[langchain] [2023-07-12 17:43:08]     await old_call(self, scope, receive, send)\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/sentry_sdk/integrations/starlette.py\", line 143, in _create_span_call\r\n[langchain] [2023-07-12 17:43:08]     return await old_call(app, scope, new_receive, new_send, **kwargs)\r\n[langchain] [2023-07-12 17:43:08]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/starlette/middleware/exceptions.py\", line 79, in __call__\r\n[langchain] [2023-07-12 17:43:08]     raise exc\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/starlette/middleware/exceptions.py\", line 68, in __call__\r\n[langchain] [2023-07-12 17:43:08]     await self.app(scope, receive, sender)\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/sentry_sdk/integrations/starlette.py\", line 143, in _create_span_call\r\n[langchain] [2023-07-12 17:43:08]     return await old_call(app, scope, new_receive, new_send, **kwargs)\r\n[langchain] [2023-07-12 17:43:08]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py\", line 20, in __call__\r\n[langchain] [2023-07-12 17:43:08]     raise e\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/fastapi/middleware/asyncexitstack.py\", line 17, in __call__\r\n[langchain] [2023-07-12 17:43:08]     await self.app(scope, receive, send)\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/starlette/routing.py\", line 718, in __call__\r\n[langchain] [2023-07-12 17:43:08]     await route.handle(scope, receive, send)\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/starlette/routing.py\", line 276, in handle\r\n[langchain] [2023-07-12 17:43:08]     await self.app(scope, receive, send)\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/starlette/routing.py\", line 66, in app\r\n[langchain] [2023-07-12 17:43:08]     response = await func(request)\r\n[langchain] [2023-07-12 17:43:08]                ^^^^^^^^^^^^^^^^^^^\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/sentry_sdk/integrations/fastapi.py\", line 131, in _sentry_app\r\n[langchain] [2023-07-12 17:43:08]     return await old_app(*args, **kwargs)\r\n[langchain] [2023-07-12 17:43:08]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/fastapi/routing.py\", line 241, in app\r\n[langchain] [2023-07-12 17:43:08]     raw_response = await run_endpoint_function(\r\n[langchain] [2023-07-12 17:43:08]                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/fastapi/routing.py\", line 167, in run_endpoint_function\r\n[langchain] [2023-07-12 17:43:08]     return await dependant.call(**values)\r\n[langchain] [2023-07-12 17:43:08]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/search.py\", line 528, in ask_question_0_gateway\r\n[langchain] [2023-07-12 17:43:08]     return await ask_question_0(question, user)\r\n[langchain] [2023-07-12 17:43:08]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/search.py\", line 282, in ask_question_0\r\n[langchain] [2023-07-12 17:43:08]     response = await pinecone_search(question, metadata_filter)\r\n[langchain] [2023-07-12 17:43:08]                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/search.py\", line 274, in pinecone_search\r\n[langchain] [2023-07-12 17:43:08]     return pine.similarity_search_with_score(query=question, k=k, filter=filter)\r\n[langchain] [2023-07-12 17:43:08]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/langchain/vectorstores/pinecone.py\", line 132, in similarity_search_with_score\r\n[langchain] [2023-07-12 17:43:08]     docs.append((Document(page_content=text, metadata=metadata), score))\r\n[langchain] [2023-07-12 17:43:08]                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n[langchain] [2023-07-12 17:43:08]   File \"/workspace/.heroku/python/lib/python3.11/site-packages/langchain/load/serializable.py\", line 64, in __init__\r\n[langchain] [2023-07-12 17:43:08]     super().__init__(**kwargs)\r\n[langchain] [2023-07-12 17:43:08]   File \"pydantic/main.py\", line 341, in pydantic.main.BaseModel.__init__\r\n[langchain] [2023-07-12 17:43:08]     raise validation_error\r\n[langchain] [2023-07-12 17:43:08] pydantic.error_wrappers.ValidationError: 1 validation error for Document\r\n[langchain] [2023-07-12 17:43:08] page_content\r\n[langchain] [2023-07-12 17:43:08]   str type expected (type=type_error.str)\n\n### Expected behavior\n\nI would expect my data from Pinecone to comeback to my API exactly how I put it there. Remove the auto-conversion or implement a strict string type casting to ensure no auto-typing. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7605/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7605/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7604",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7604/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7604/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7604/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7604",
        "id": 1801451550,
        "node_id": "PR_kwDOIPDwls5VVinH",
        "number": 7604,
        "title": "Share client",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T17:38:16Z",
        "updated_at": "2023-07-12T21:04:57Z",
        "closed_at": "2023-07-12T21:04:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7604",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7604",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7604.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7604.patch",
            "merged_at": "2023-07-12T21:04:56Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7604/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7604/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7603",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7603/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7603/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7603/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7603",
        "id": 1801241754,
        "node_id": "I_kwDOIPDwls5rXMSa",
        "number": 7603,
        "title": "Add support for Meilisearch vector databases",
        "user": {
            "login": "alallema",
            "id": 16155041,
            "node_id": "MDQ6VXNlcjE2MTU1MDQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/16155041?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alallema",
            "html_url": "https://github.com/alallema",
            "followers_url": "https://api.github.com/users/alallema/followers",
            "following_url": "https://api.github.com/users/alallema/following{/other_user}",
            "gists_url": "https://api.github.com/users/alallema/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alallema/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alallema/subscriptions",
            "organizations_url": "https://api.github.com/users/alallema/orgs",
            "repos_url": "https://api.github.com/users/alallema/repos",
            "events_url": "https://api.github.com/users/alallema/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alallema/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-12T15:32:23Z",
        "updated_at": "2023-07-29T00:06:55Z",
        "closed_at": "2023-07-29T00:06:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nAdd support for Meilisearch vector search.\r\n[Meilisearch](https://www.meilisearch.com) is an open-source search engine. See [documentation](https://www.meilisearch.com/docs)\n\n### Motivation\n\nMeilisearch is releasing the vector search/store feature, which should be available from July 31st.\n\n### Your contribution\n\nI'm working on it and will submit a PR for this issue soon.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7603/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7603/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7602",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7602/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7602/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7602/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7602",
        "id": 1801220884,
        "node_id": "PR_kwDOIPDwls5VUv2B",
        "number": 7602,
        "title": "add bittensor llm to langchain llms",
        "user": {
            "login": "Kunj-2206",
            "id": 59330099,
            "node_id": "MDQ6VXNlcjU5MzMwMDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/59330099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kunj-2206",
            "html_url": "https://github.com/Kunj-2206",
            "followers_url": "https://api.github.com/users/Kunj-2206/followers",
            "following_url": "https://api.github.com/users/Kunj-2206/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kunj-2206/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kunj-2206/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kunj-2206/subscriptions",
            "organizations_url": "https://api.github.com/users/Kunj-2206/orgs",
            "repos_url": "https://api.github.com/users/Kunj-2206/repos",
            "events_url": "https://api.github.com/users/Kunj-2206/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kunj-2206/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T15:21:48Z",
        "updated_at": "2023-07-13T12:28:50Z",
        "closed_at": "2023-07-13T12:28:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7602",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7602",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7602.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7602.patch",
            "merged_at": null
        },
        "body": "  - Description:  Adding BittensorLLM via Validator Endpoint to langchain llms\r\n  - Tag maintainer: @Kunj-2206 \r\n\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7602/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7602/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7601",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7601/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7601/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7601/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7601",
        "id": 1801128732,
        "node_id": "PR_kwDOIPDwls5VUbjU",
        "number": 7601,
        "title": "Create langchain/llms/bittensor.py",
        "user": {
            "login": "Kunj-2206",
            "id": 59330099,
            "node_id": "MDQ6VXNlcjU5MzMwMDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/59330099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kunj-2206",
            "html_url": "https://github.com/Kunj-2206",
            "followers_url": "https://api.github.com/users/Kunj-2206/followers",
            "following_url": "https://api.github.com/users/Kunj-2206/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kunj-2206/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kunj-2206/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kunj-2206/subscriptions",
            "organizations_url": "https://api.github.com/users/Kunj-2206/orgs",
            "repos_url": "https://api.github.com/users/Kunj-2206/repos",
            "events_url": "https://api.github.com/users/Kunj-2206/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kunj-2206/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T14:40:54Z",
        "updated_at": "2023-07-12T14:42:13Z",
        "closed_at": "2023-07-12T14:42:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7601",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7601",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7601.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7601.patch",
            "merged_at": null
        },
        "body": "Added BittensorLLM model inside langchain.llms\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7601/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7601/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7599",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7599/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7599/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7599/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7599",
        "id": 1801022338,
        "node_id": "I_kwDOIPDwls5rWWuC",
        "number": 7599,
        "title": "ConversationalRetrievalChain with streaming=True => responds by repeating words and phrases",
        "user": {
            "login": "mrctito",
            "id": 809686,
            "node_id": "MDQ6VXNlcjgwOTY4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/809686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrctito",
            "html_url": "https://github.com/mrctito",
            "followers_url": "https://api.github.com/users/mrctito/followers",
            "following_url": "https://api.github.com/users/mrctito/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrctito/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrctito/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrctito/subscriptions",
            "organizations_url": "https://api.github.com/users/mrctito/orgs",
            "repos_url": "https://api.github.com/users/mrctito/repos",
            "events_url": "https://api.github.com/users/mrctito/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrctito/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-07-12T13:46:03Z",
        "updated_at": "2023-11-23T02:34:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nPython: 3.10.11\r\nLangChain: 0.0.229\r\nSO: Windows, Linux Ubuntu and Mac\r\n\r\nHi people,\r\n\r\nI'm using **ConversationalRetrievalChain** without any modifications, and in 90% of the cases, it responds by repeating words and entire phrases, like in the examples below:\r\n\r\nQuestions about Duna book:\r\n\r\n**How did Muad'Dib die?**\r\n\r\nMuad'Dib died of old age. **No, Muad'Dib did not die of old age**. The passage mentions that the death of Muad'Dib will be followed by the moral suicide of all men, suggesting that his death was not natural. However, the exact cause of his death is not specified in the text. No, Muad'Dib did not die of old age. The passage mentions that the death of Muad'Dib will be followed by the moral suicide of all men, suggesting that his death was not natural. **However, the exact cause of his death is not specified in the text**.\r\n\r\n**Was Paul Atreides powerful?**\r\n\r\n**Was Paul Atreides powerful? Yes, Paul Atreides was powerful**. He possessed oracle-like abilities and special powers that placed him beyond the usual limits of time and space. Additionally, he was a charismatic leader and skilled strategist, capable of commanding armies and achieving victories. His strength and power were recognized by the emperor and other characters in the book. Yes, Paul Atreides was powerful. **He possessed oracle-like abilities and special powers that placed him beyond the usual limits of time and space. Additionally, he was a charismatic leader and skilled strategist, capable of commanding armies and achieving victories. His strength and power were recognized by the emperor and other characters in the book.**\r\n\r\n**PLEASE, Does anyone know about this issue?**\r\n\r\nI have repeated several tutorials that I found on the internet, and this always happens. But strangely, I don't see anyone complaining about it in the forums, so I must be doing something wrong.\r\n\r\n**This is the code I am using:**\r\n\r\nllm = ChatOpenAI(model_name=app_params.Model,\r\n                            temperature=0, \r\n                            openai_api_key=app_keys.OPENAI_API_KEY,\r\n                            **streaming=True,** \r\n                            verbose=True,\r\n                            callbacks=[WebSocketCallbackHandler(websocket)]         \r\n                            ) \r\n\r\nmemory = ConversationBufferWindowMemory(memory_key='chat_history', output_key='answer', chat_memory=chat_history, return_messages=True, k=3, verbose=True)\r\n\r\nqna = ConversationalRetrievalChain.from_llm(\r\n                                            llm=llm, \r\n                                            chain_type=\"stuff\", \r\n                                            retriever=retriever, \r\n                                            verbose=True,\r\n                                            memory=memory,\r\n                                            )\r\n#async\r\nresult = **await qna.acall**({\"question\": query})\r\n\r\n**I would be very glad for any help!\r\nBest regards,\r\nMarcos.**\r\n\r\nHi, @hwchase17, I appreciate your help.\r\n\r\n### Who can help?\r\n\r\nHi, @hwchase17, I appreciate your help.\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n**This is the code I am using:**\r\n\r\nllm = ChatOpenAI(model_name=app_params.Model,\r\n                            temperature=0, \r\n                            openai_api_key=app_keys.OPENAI_API_KEY,\r\n                            **streaming=True,** \r\n                            verbose=True,\r\n                            callbacks=[WebSocketCallbackHandler(websocket)]         \r\n                            ) \r\n\r\nmemory = ConversationBufferWindowMemory(memory_key='chat_history', output_key='answer', chat_memory=chat_history, return_messages=True, k=3, verbose=True)\r\n\r\nqna = ConversationalRetrievalChain.from_llm(\r\n                                            llm=llm, \r\n                                            chain_type=\"stuff\", \r\n                                            retriever=retriever, \r\n                                            verbose=True,\r\n                                            memory=memory,\r\n                                            )\r\n**#async**\r\nresult = **await qna.acall**({\"question\": query})\r\n\r\n### Expected behavior\r\n\r\nI hope the answer provided by ConversationalRetrievalChain makes sense and does not contain repetitions of the question or entire phrases.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7599/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7599/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7598",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7598/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7598/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7598/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7598",
        "id": 1800994485,
        "node_id": "I_kwDOIPDwls5rWP61",
        "number": 7598,
        "title": "Output parser set number of list result",
        "user": {
            "login": "paulthemagno",
            "id": 38130299,
            "node_id": "MDQ6VXNlcjM4MTMwMjk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/38130299?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulthemagno",
            "html_url": "https://github.com/paulthemagno",
            "followers_url": "https://api.github.com/users/paulthemagno/followers",
            "following_url": "https://api.github.com/users/paulthemagno/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulthemagno/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulthemagno/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulthemagno/subscriptions",
            "organizations_url": "https://api.github.com/users/paulthemagno/orgs",
            "repos_url": "https://api.github.com/users/paulthemagno/repos",
            "events_url": "https://api.github.com/users/paulthemagno/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulthemagno/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-12T13:31:51Z",
        "updated_at": "2023-10-19T16:06:03Z",
        "closed_at": "2023-10-19T16:06:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI'd like to understand if there is a way to have from OpenAI response a **list of values** (string or objects: it's the same) of a **fixed length**. I read the documentation here: https://python.langchain.com/docs/modules/model_io/output_parsers/comma_separated but I didn't find anything related to a length (maybe it's not possible?). Indeed I understood that probably these parsers only add a well-formatted piece of prompt, but you don't have the safety to have the expected results.\r\n\r\nIn my use case, I have a list of texts and I want to have a title on each of them. My prompt is something like that:\r\n```\r\n####\r\nText 1:\r\n- Bla bla bla\r\n...\r\nText 8:\r\n- Bla bla bla\r\n###\r\n\r\nUse these texts to generate a title for each text. The number of the titles must be 8.\r\n```\r\n\r\nAt the end of the prompt I \"force\" the number to the number of the expected results with the same number of the text, but sometimes the model gives me more titles (above all when the number of texts is 1).\r\n\r\nSo I thought to use these parsers. But I don't find any constraints on the length of the results, the only thing is a validator to check if the length is correct.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7598/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7598/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7597",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7597/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7597/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7597/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7597",
        "id": 1800955601,
        "node_id": "I_kwDOIPDwls5rWGbR",
        "number": 7597,
        "title": "Question!! Multiple agent use? agent within agent? ",
        "user": {
            "login": "sk9288go",
            "id": 81153340,
            "node_id": "MDQ6VXNlcjgxMTUzMzQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/81153340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sk9288go",
            "html_url": "https://github.com/sk9288go",
            "followers_url": "https://api.github.com/users/sk9288go/followers",
            "following_url": "https://api.github.com/users/sk9288go/following{/other_user}",
            "gists_url": "https://api.github.com/users/sk9288go/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sk9288go/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sk9288go/subscriptions",
            "organizations_url": "https://api.github.com/users/sk9288go/orgs",
            "repos_url": "https://api.github.com/users/sk9288go/repos",
            "events_url": "https://api.github.com/users/sk9288go/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sk9288go/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-12T13:10:59Z",
        "updated_at": "2023-12-13T03:46:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nHello Langchain community! \r\n\r\nI'm currently in the process of developing a company's chatbot, and I've chosen to use both a CSV file and Pinecone DB for the project.\r\n\r\nHere's a basic outline of the structure I've adopted so far:\r\n![\ucea1\ucc98](https://github.com/hwchase17/langchain/assets/81153340/de1d5abf-d6d4-4f30-aad8-f1711fcf8716)\r\n\r\nI've managed to set the two tools, and its example usage has been providing accurate answers\r\n![\ucea1\ucc981](https://github.com/hwchase17/langchain/assets/81153340/75b8ee0d-01cd-4276-b926-5f288ad50053)\r\nthe first tool gets me the answers based on pandas\u2019s result from the example usage, the answers are based on csv and it\u2019s correct in all cases \r\n![\ucea1\ucc982](https://github.com/hwchase17/langchain/assets/81153340/0b55e176-8eb4-4db7-be81-227dabcf90eb)\r\n\r\nAlso set the second tool and its example usage is answered correctly. \r\n![\ucea1\ucc983](https://github.com/hwchase17/langchain/assets/81153340/d816eb6a-926c-4e45-b033-18f3680fccd4)\r\n\r\nuntil here things are very promising and i expected everything to work as it is. \r\nso i have set the LLM and combined the two tools and used agent\r\n![\ucea1\ucc984](https://github.com/hwchase17/langchain/assets/81153340/64d11ca9-f7a4-4839-ab94-95a5f1970f42)\r\n\r\nHowever, when I combined both tools using an agent, the answers started to deviate from the expected output. I'm not entirely sure whether the method I'm using to utilize the agent is optimal.\r\n![\ucea1\ucc985](https://github.com/hwchase17/langchain/assets/81153340/3dc8b7ef-990a-446b-8838-021b1037a501)\r\n\r\nTo address this issue, I've experimented with the MultiretrievalQA chain using vector embedding. But the results are not consistently reliable, and moreover, I'd rather not generate new embeddings every time I modify the CSV.\r\n\r\nIs there anyone in the community who can shed light on these issues I'm encountering? Any feedback on my current approach, suggestions on how to optimize it, or alternative strategies would be greatly appreciated!\r\n\r\nThank you.\r\n\r\n\r\n\r\n\n\n### Motivation\n\nI'm making a company's gpt and i hope to link my csv with the chatbot so that whenever i change the csv the chatbot is automatically linked with it \n\n### Your contribution\n\num solving the problem would help others? ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7597/reactions",
            "total_count": 9,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 4,
            "rocket": 0,
            "eyes": 5
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7597/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7596",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7596/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7596/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7596/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7596",
        "id": 1800849248,
        "node_id": "PR_kwDOIPDwls5VTefX",
        "number": 7596,
        "title": "fix logging debug error with textloader when autodetect_encoding=True",
        "user": {
            "login": "Buckler89",
            "id": 8536008,
            "node_id": "MDQ6VXNlcjg1MzYwMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8536008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Buckler89",
            "html_url": "https://github.com/Buckler89",
            "followers_url": "https://api.github.com/users/Buckler89/followers",
            "following_url": "https://api.github.com/users/Buckler89/following{/other_user}",
            "gists_url": "https://api.github.com/users/Buckler89/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Buckler89/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Buckler89/subscriptions",
            "organizations_url": "https://api.github.com/users/Buckler89/orgs",
            "repos_url": "https://api.github.com/users/Buckler89/repos",
            "events_url": "https://api.github.com/users/Buckler89/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Buckler89/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T12:12:13Z",
        "updated_at": "2023-08-01T01:17:02Z",
        "closed_at": "2023-08-01T01:17:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7596",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7596",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7596.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7596.patch",
            "merged_at": "2023-08-01T01:17:02Z"
        },
        "body": "\r\nReplace this comment with:\r\n  - Description: fix logging debug error with textloader when autodetect_encoding=True\r\n  - Issue: -\r\n  - Dependencies: \r\n  - Tag maintainer: @rlancemartin, @eyurtsev\r\n  - Twitter handle: @Buckler89\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7596/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7596/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7595",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7595/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7595/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7595/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7595",
        "id": 1800830770,
        "node_id": "PR_kwDOIPDwls5VTaZx",
        "number": 7595,
        "title": "Removed kwargs from add_texts",
        "user": {
            "login": "adolkhan",
            "id": 54854336,
            "node_id": "MDQ6VXNlcjU0ODU0MzM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/54854336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adolkhan",
            "html_url": "https://github.com/adolkhan",
            "followers_url": "https://api.github.com/users/adolkhan/followers",
            "following_url": "https://api.github.com/users/adolkhan/following{/other_user}",
            "gists_url": "https://api.github.com/users/adolkhan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adolkhan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adolkhan/subscriptions",
            "organizations_url": "https://api.github.com/users/adolkhan/orgs",
            "repos_url": "https://api.github.com/users/adolkhan/repos",
            "events_url": "https://api.github.com/users/adolkhan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adolkhan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-12T12:02:43Z",
        "updated_at": "2023-07-19T16:23:54Z",
        "closed_at": "2023-07-19T16:23:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7595",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7595",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7595.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7595.patch",
            "merged_at": "2023-07-19T16:23:49Z"
        },
        "body": "Removing **kwargs argument from add_texts method in DeepLake vectorstore as it confuses users and doesn't fail when user is typing incorrect parameters.\r\n\r\nAlso added small test to ensure the change is applies correctly.\r\n\r\nGuys could pls take a look: @rlancemartin, @eyurtsev, this is a small PR. \r\n\r\nThx so much!\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7595/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7595/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7594",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7594/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7594/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7594/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7594",
        "id": 1800783109,
        "node_id": "I_kwDOIPDwls5rVcUF",
        "number": 7594,
        "title": "Error while trying to run SQL Database Agent example",
        "user": {
            "login": "krishnashed",
            "id": 60742358,
            "node_id": "MDQ6VXNlcjYwNzQyMzU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/60742358?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/krishnashed",
            "html_url": "https://github.com/krishnashed",
            "followers_url": "https://api.github.com/users/krishnashed/followers",
            "following_url": "https://api.github.com/users/krishnashed/following{/other_user}",
            "gists_url": "https://api.github.com/users/krishnashed/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/krishnashed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/krishnashed/subscriptions",
            "organizations_url": "https://api.github.com/users/krishnashed/orgs",
            "repos_url": "https://api.github.com/users/krishnashed/repos",
            "events_url": "https://api.github.com/users/krishnashed/events{/privacy}",
            "received_events_url": "https://api.github.com/users/krishnashed/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-12T11:33:16Z",
        "updated_at": "2023-10-11T11:11:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version: 0.0.230\r\npython version: Python 3.9.12\n\n### Who can help?\n\n@hwchase17\r\n@agola11\r\n\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nIm trying run the to code mentioned at: https://python.langchain.com/docs/modules/agents/toolkits/sql_database\r\n\r\nBut I'm getting the error as: \r\nModuleNotFoundError: No module named 'MySQLdb'\r\n\r\nThen trying 'pip install MySQL-python' gives the following error:\r\nModuleNotFoundError: No module named 'ConfigParser'\r\n\r\nThen trying 'pip install configparser' even doesn't solve the issue.\r\n\r\nPlease help me figure out this issue. Thanks!\n\n### Expected behavior\n\nThe code should have just executed the prompt, And installation of the required libraries should be easier.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7594/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7594/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7593",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7593/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7593/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7593/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7593",
        "id": 1800714762,
        "node_id": "PR_kwDOIPDwls5VTAjM",
        "number": 7593,
        "title": "fix(typo): Clarify the point of `llm_chain`",
        "user": {
            "login": "sroze",
            "id": 804625,
            "node_id": "MDQ6VXNlcjgwNDYyNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/804625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sroze",
            "html_url": "https://github.com/sroze",
            "followers_url": "https://api.github.com/users/sroze/followers",
            "following_url": "https://api.github.com/users/sroze/following{/other_user}",
            "gists_url": "https://api.github.com/users/sroze/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sroze/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sroze/subscriptions",
            "organizations_url": "https://api.github.com/users/sroze/orgs",
            "repos_url": "https://api.github.com/users/sroze/repos",
            "events_url": "https://api.github.com/users/sroze/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sroze/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-12T10:54:20Z",
        "updated_at": "2023-07-12T14:31:00Z",
        "closed_at": "2023-07-12T14:31:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7593",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7593",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7593.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7593.patch",
            "merged_at": "2023-07-12T14:31:00Z"
        },
        "body": "Fixes a typo introduced in https://github.com/hwchase17/langchain/pull/7080 by @hwchase17.\r\n\r\nIn the example (visible on [the online documentation](https://api.python.langchain.com/en/latest/chains/langchain.chains.conversational_retrieval.base.ConversationalRetrievalChain.html#langchain-chains-conversational-retrieval-base-conversationalretrievalchain)), the `llm_chain` variable is unused as opposed to being used for the question generator. This change makes it clearer.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7593/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7593/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7592",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7592/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7592/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7592/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7592",
        "id": 1800687265,
        "node_id": "PR_kwDOIPDwls5VS6b0",
        "number": 7592,
        "title": "Update bedrock.py - support of other endpoint url (esp. for users of \u2026",
        "user": {
            "login": "Ducasse-Arthur",
            "id": 139344153,
            "node_id": "U_kgDOCE45GQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/139344153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ducasse-Arthur",
            "html_url": "https://github.com/Ducasse-Arthur",
            "followers_url": "https://api.github.com/users/Ducasse-Arthur/followers",
            "following_url": "https://api.github.com/users/Ducasse-Arthur/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ducasse-Arthur/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ducasse-Arthur/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ducasse-Arthur/subscriptions",
            "organizations_url": "https://api.github.com/users/Ducasse-Arthur/orgs",
            "repos_url": "https://api.github.com/users/Ducasse-Arthur/repos",
            "events_url": "https://api.github.com/users/Ducasse-Arthur/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ducasse-Arthur/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-12T10:37:09Z",
        "updated_at": "2023-07-19T12:39:10Z",
        "closed_at": "2023-07-12T14:43:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7592",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7592",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7592.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7592.patch",
            "merged_at": "2023-07-12T14:43:24Z"
        },
        "body": "Added an _endpoint_url_ attribute to Bedrock(LLM) class - I have access to Bedrock only via us-west-2 endpoint and needed to change the endpoint url, this could be useful to other users \r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7592/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7592/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7591",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7591/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7591/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7591/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7591",
        "id": 1800593678,
        "node_id": "PR_kwDOIPDwls5VSloH",
        "number": 7591,
        "title": "Add local support for audio models (PR #7329)",
        "user": {
            "login": "Comendeiro",
            "id": 7376569,
            "node_id": "MDQ6VXNlcjczNzY1Njk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7376569?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Comendeiro",
            "html_url": "https://github.com/Comendeiro",
            "followers_url": "https://api.github.com/users/Comendeiro/followers",
            "following_url": "https://api.github.com/users/Comendeiro/following{/other_user}",
            "gists_url": "https://api.github.com/users/Comendeiro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Comendeiro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Comendeiro/subscriptions",
            "organizations_url": "https://api.github.com/users/Comendeiro/orgs",
            "repos_url": "https://api.github.com/users/Comendeiro/repos",
            "events_url": "https://api.github.com/users/Comendeiro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Comendeiro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-12T09:44:45Z",
        "updated_at": "2023-08-02T08:24:54Z",
        "closed_at": "2023-08-02T08:24:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7591",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7591",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7591.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7591.patch",
            "merged_at": "2023-08-02T08:24:53Z"
        },
        "body": "\r\n\r\n  - Description: run the poetry dependencies\r\n  - Issue: #7329 \r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: @rlancemartin \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7591/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7591/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7590",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7590/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7590/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7590/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7590",
        "id": 1800582601,
        "node_id": "I_kwDOIPDwls5rUrXJ",
        "number": 7590,
        "title": "Improve the usage of relevance score threshold and allow the return of the scores",
        "user": {
            "login": "ROMEEZHOU",
            "id": 72342196,
            "node_id": "MDQ6VXNlcjcyMzQyMTk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/72342196?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ROMEEZHOU",
            "html_url": "https://github.com/ROMEEZHOU",
            "followers_url": "https://api.github.com/users/ROMEEZHOU/followers",
            "following_url": "https://api.github.com/users/ROMEEZHOU/following{/other_user}",
            "gists_url": "https://api.github.com/users/ROMEEZHOU/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ROMEEZHOU/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ROMEEZHOU/subscriptions",
            "organizations_url": "https://api.github.com/users/ROMEEZHOU/orgs",
            "repos_url": "https://api.github.com/users/ROMEEZHOU/repos",
            "events_url": "https://api.github.com/users/ROMEEZHOU/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ROMEEZHOU/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-12T09:38:17Z",
        "updated_at": "2023-10-18T16:05:52Z",
        "closed_at": "2023-10-18T16:05:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nIn `VectorStore`/`VectorStoreRetriever` class, `_similarity_search_with_relevance_scores`function,\r\n1) Allow different choices of threshold kind: allow users to choose whether >= threshold or <= threshold\r\n2) Allow users to choose to return the relevance score along with the docs\r\n\r\n### Motivation\r\n\r\nI am working with returning relevant docs that satisfy a certain threshold, and I encountered some problems. \r\nOne problem is that for different embedding algorithms and similarity calculations, it is not always the case that higher relevance scores are better. Actually, when I use `HuggingFaceEmbedding` with `Chroma` database, the smaller the relevance score, the better. So I believe it would be necessary to allow users choose between different options here.\r\nThe second problem is that I want to see the relevance score, however, in https://github.com/hwchase17/langchain/blob/master/langchain/vectorstores/base.py, line 474 to 492, it is fixed that only the docs are finally returned. \r\n```\r\ndef _get_relevant_documents(\r\n        self, query: str, *, run_manager: CallbackManagerForRetrieverRun\r\n    ) -> List[Document]:\r\n        if self.search_type == \"similarity\":\r\n            docs = self.vectorstore.similarity_search(query, **self.search_kwargs)\r\n        elif self.search_type == \"similarity_score_threshold\":\r\n            docs_and_similarities = (\r\n                self.vectorstore.similarity_search_with_relevance_scores(\r\n                    query, **self.search_kwargs\r\n                )\r\n            )\r\n            docs = [doc for doc, _ in docs_and_similarities]\r\n        elif self.search_type == \"mmr\":\r\n            docs = self.vectorstore.max_marginal_relevance_search(\r\n                query, **self.search_kwargs\r\n            )\r\n        else:\r\n            raise ValueError(f\"search_type of {self.search_type} not allowed.\")\r\n        return docs\r\n```\r\nI wish there is an option that the relevance scores could also be returned.\r\n\r\n### Your contribution\r\n\r\nI would love to open a PR if applicable ;) @hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7590/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7590/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7589",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7589/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7589/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7589/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7589",
        "id": 1800575762,
        "node_id": "I_kwDOIPDwls5rUpsS",
        "number": 7589,
        "title": "namespace parameter is gone in pinecone from_existing_index method",
        "user": {
            "login": "kkbpower",
            "id": 22651072,
            "node_id": "MDQ6VXNlcjIyNjUxMDcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/22651072?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kkbpower",
            "html_url": "https://github.com/kkbpower",
            "followers_url": "https://api.github.com/users/kkbpower/followers",
            "following_url": "https://api.github.com/users/kkbpower/following{/other_user}",
            "gists_url": "https://api.github.com/users/kkbpower/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kkbpower/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kkbpower/subscriptions",
            "organizations_url": "https://api.github.com/users/kkbpower/orgs",
            "repos_url": "https://api.github.com/users/kkbpower/repos",
            "events_url": "https://api.github.com/users/kkbpower/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kkbpower/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-12T09:34:19Z",
        "updated_at": "2023-07-12T14:45:09Z",
        "closed_at": "2023-07-12T14:45:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI am using langchain v0.0.228. But namespace parameter is gone in existing_index() of v0.0.230.\r\nWhy the namespace is gone?\r\n\r\n@hwchase17 @eyurtsev @agola11 \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nNo need.\n\n### Expected behavior\n\nshould be used from_existing_index method with namespace parameter ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7589/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7589/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7588",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7588/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7588/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7588/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7588",
        "id": 1800566204,
        "node_id": "I_kwDOIPDwls5rUnW8",
        "number": 7588,
        "title": "Question\uff1aConversationalRetrievalChain with retriever",
        "user": {
            "login": "zhangjunqiang",
            "id": 5388898,
            "node_id": "MDQ6VXNlcjUzODg4OTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5388898?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhangjunqiang",
            "html_url": "https://github.com/zhangjunqiang",
            "followers_url": "https://api.github.com/users/zhangjunqiang/followers",
            "following_url": "https://api.github.com/users/zhangjunqiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhangjunqiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhangjunqiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhangjunqiang/subscriptions",
            "organizations_url": "https://api.github.com/users/zhangjunqiang/orgs",
            "repos_url": "https://api.github.com/users/zhangjunqiang/repos",
            "events_url": "https://api.github.com/users/zhangjunqiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhangjunqiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T09:28:48Z",
        "updated_at": "2023-07-13T03:37:20Z",
        "closed_at": "2023-07-13T03:37:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nif use ElasticVectorSearch as as_retriever and set the params:\r\n```python\r\nelastic_vector_search.as_retriever(search_type=\"similarity_score_threshold\",\r\n                                                                                                      search_kwargs={\"score_threshold\": 1.8})\r\n```\r\nIf no relevant docs were retrieved using the relevance score threshold 1.8.\r\nthen return an error!\r\n![image](https://github.com/hwchase17/langchain/assets/5388898/70bd9610-0f9f-4da4-8da4-2428d807a130)\r\n\n\n### Suggestion:\n\nit should not throw err, when there is no relevant docs.\r\nit should response like \"i don't know \" or an openai default response.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7588/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7588/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7587",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7587/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7587/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7587/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7587",
        "id": 1800546257,
        "node_id": "PR_kwDOIPDwls5VSbS_",
        "number": 7587,
        "title": "docs : Use more meaningful examples",
        "user": {
            "login": "Subsegment",
            "id": 74497693,
            "node_id": "MDQ6VXNlcjc0NDk3Njkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/74497693?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Subsegment",
            "html_url": "https://github.com/Subsegment",
            "followers_url": "https://api.github.com/users/Subsegment/followers",
            "following_url": "https://api.github.com/users/Subsegment/following{/other_user}",
            "gists_url": "https://api.github.com/users/Subsegment/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Subsegment/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Subsegment/subscriptions",
            "organizations_url": "https://api.github.com/users/Subsegment/orgs",
            "repos_url": "https://api.github.com/users/Subsegment/repos",
            "events_url": "https://api.github.com/users/Subsegment/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Subsegment/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-12T09:19:24Z",
        "updated_at": "2023-07-12T14:31:56Z",
        "closed_at": "2023-07-12T14:31:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7587",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7587",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7587.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7587.patch",
            "merged_at": "2023-07-12T14:31:56Z"
        },
        "body": "This change makes the ecosystem integrations cnosdb documentation more realistic and easy to understand.\r\n\r\n- change examples of question and table\r\n- modify typo and format\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7587/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7587/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7585",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7585/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7585/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7585/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7585",
        "id": 1800444981,
        "node_id": "I_kwDOIPDwls5rUJw1",
        "number": 7585,
        "title": "Error when creating a custom ConversationalChatAgent",
        "user": {
            "login": "eesoymilk",
            "id": 74914924,
            "node_id": "MDQ6VXNlcjc0OTE0OTI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/74914924?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eesoymilk",
            "html_url": "https://github.com/eesoymilk",
            "followers_url": "https://api.github.com/users/eesoymilk/followers",
            "following_url": "https://api.github.com/users/eesoymilk/following{/other_user}",
            "gists_url": "https://api.github.com/users/eesoymilk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eesoymilk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eesoymilk/subscriptions",
            "organizations_url": "https://api.github.com/users/eesoymilk/orgs",
            "repos_url": "https://api.github.com/users/eesoymilk/repos",
            "events_url": "https://api.github.com/users/eesoymilk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eesoymilk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-12T08:21:47Z",
        "updated_at": "2023-10-27T16:06:54Z",
        "closed_at": "2023-10-27T16:06:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nMacOS\r\nPython 3.10.6\r\nlangchain 0.0.230\r\nlangchainplus-sdk 0.0.20\n\n### Who can help?\n\n@hwchase17  @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nFor now, there are only the default `ConversationalChatAgent` and `ConversationalAgent`, and we cannot create custom prompt templates in them. At least, I don't see how to do that in both the docs and source code.\r\n\r\nI think there should be a straight-forward way to do so, just like how you can have a [custom LLM agent](https://python.langchain.com/docs/modules/agents/how_to/custom_llm_chat_agent):\r\n```py\r\nagent = LLMSingleActionAgent(\r\n    llm_chain=llm_chain, \r\n    output_parser=output_parser,\r\n    stop=[\"\\nObservation:\"], \r\n    allowed_tools=tool_names\r\n)\r\n```\r\nHowever, when the same code is applied to `ConversationalChatAgent`, that is:\r\n```py\r\nagent = LLMSingleActionAgent(\r\n    llm_chain=llm_chain, \r\n    output_parser=output_parser,\r\n    stop=[\"\\nObservation:\"], \r\n    allowed_tools=tool_names\r\n)\r\n```\r\nI get the following error:\r\n```shell\r\npydantic.error_wrappers.ValidationError: 1 validation error for ConversationalChatAgent\r\n__root__\r\n  Got unexpected prompt type <class '__main__.CustomPromptTemplate'> (type=value_error)\r\n```\r\n\r\nI'm not sure if this belongs to **Bug Report** so if I'm doing anything wrong, please tell me about it. Thanks!\n\n### Expected behavior\n\nThe agent should be created without errors.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7585/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7585/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7584",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7584/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7584/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7584/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7584",
        "id": 1800406805,
        "node_id": "PR_kwDOIPDwls5VR89H",
        "number": 7584,
        "title": "bump 231",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T07:58:17Z",
        "updated_at": "2023-07-12T14:43:13Z",
        "closed_at": "2023-07-12T14:43:12Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7584",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7584",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7584.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7584.patch",
            "merged_at": "2023-07-12T14:43:12Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7584/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7584/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7583",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7583/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7583/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7583/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7583",
        "id": 1800307300,
        "node_id": "PR_kwDOIPDwls5VRnat",
        "number": 7583,
        "title": "Fix PGVector",
        "user": {
            "login": "raymond-yuan",
            "id": 17325195,
            "node_id": "MDQ6VXNlcjE3MzI1MTk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/17325195?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raymond-yuan",
            "html_url": "https://github.com/raymond-yuan",
            "followers_url": "https://api.github.com/users/raymond-yuan/followers",
            "following_url": "https://api.github.com/users/raymond-yuan/following{/other_user}",
            "gists_url": "https://api.github.com/users/raymond-yuan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raymond-yuan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raymond-yuan/subscriptions",
            "organizations_url": "https://api.github.com/users/raymond-yuan/orgs",
            "repos_url": "https://api.github.com/users/raymond-yuan/repos",
            "events_url": "https://api.github.com/users/raymond-yuan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raymond-yuan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-12T06:52:09Z",
        "updated_at": "2023-07-12T06:55:14Z",
        "closed_at": "2023-07-12T06:55:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7583",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7583",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7583.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7583.patch",
            "merged_at": null
        },
        "body": "  - Description: Fixes parameter fills for PGVector\r\n  - Issue:\r\n     https://github.com/hwchase17/langchain/issues/7577\r\n  - Dependencies: any dependencies required for this change,",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7583/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7583/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7582",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7582/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7582/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7582/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7582",
        "id": 1800299810,
        "node_id": "PR_kwDOIPDwls5VRlyh",
        "number": 7582,
        "title": "unit test sqlalachemy",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T06:46:54Z",
        "updated_at": "2023-07-12T07:03:17Z",
        "closed_at": "2023-07-12T07:03:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7582",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7582",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7582.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7582.patch",
            "merged_at": "2023-07-12T07:03:16Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7582/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7582/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7581",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7581/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7581/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7581/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7581",
        "id": 1800186972,
        "node_id": "I_kwDOIPDwls5rTKxc",
        "number": 7581,
        "title": "DOC: Langchain works well with single database, but in a session if I have to work with multiple database, it does not seem working",
        "user": {
            "login": "skprasadu",
            "id": 1975088,
            "node_id": "MDQ6VXNlcjE5NzUwODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1975088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skprasadu",
            "html_url": "https://github.com/skprasadu",
            "followers_url": "https://api.github.com/users/skprasadu/followers",
            "following_url": "https://api.github.com/users/skprasadu/following{/other_user}",
            "gists_url": "https://api.github.com/users/skprasadu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skprasadu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skprasadu/subscriptions",
            "organizations_url": "https://api.github.com/users/skprasadu/orgs",
            "repos_url": "https://api.github.com/users/skprasadu/repos",
            "events_url": "https://api.github.com/users/skprasadu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skprasadu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-12T05:02:43Z",
        "updated_at": "2023-10-25T08:37:35Z",
        "closed_at": "2023-07-12T05:06:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nBelow code does not seem to work, \r\n\r\n```\r\n    db = SQLDatabase.from_uri(\"mssql+pymssql://<some server>/<some db>\",\r\n                          include_tables=['Some table'], view_support=True)\r\n                          \r\n    db1 = SQLDatabase.from_uri(\"mssql+pymssql://<some other server>/<some other db>\",\r\n                          include_tables=['Some other table'], view_support=True)\r\n\r\n    toolkit = SQLDatabaseToolkit(db=db, llm=llm, reduce_k_below_max_tokens=True)\r\n\r\n    sql_agent_executor = create_sql_agent(\r\n        llm=llm,\r\n        toolkit=toolkit,\r\n        verbose=True\r\n    )\r\n    \r\n    toolkit1 = SQLDatabaseToolkit(db=db1, llm=llm, reduce_k_below_max_tokens=True)\r\n\r\n    sql_agent_executor1 = create_sql_agent(\r\n        llm=llm,\r\n        toolkit=toolkit,\r\n        verbose=True\r\n    )\r\n\r\n    tools = [\r\n        Tool(\r\n            name = \"Object or Product to Classification Association\",\r\n            func=sql_agent_executor.run,\r\n            description=\"\"\"\r\n            Useful for when you need to Query on database to find the object or product to classification association.\r\n            \r\n            <user>: Get me top 3 records with Object number and description for approved classification KKK\r\n            <assistant>: I need to check Object or Product to Classification Association details.\r\n            <assistant>: Action: SQL Object or Product to Classification Association\r\n            <assistant>: Action Input: Check The Object or Product to Classification Association Table\r\n\r\n            \"\"\"\r\n        ),\r\n        Tool(\r\n            name = \"Authorization or Authority or License Database\",\r\n            func=sql_agent_executor1.run,\r\n            description=\"\"\"\r\n            Useful for when you need to Query on some thing else .\r\n            \r\n            <user>: Get me top 2 Authority Records with LicenseNumber\r\n            <assistant>: I need to check Authorization or Authority or License Database details.\r\n            <assistant>: Action: SQL Authorization or Authority or License Database\r\n            <assistant>: Action Input: Check The Authorization or Authority or License Database Table\r\n\r\n            \"\"\"\r\n        )\r\n    ]\r\n\r\n```\r\n\r\nIs there an example where we can configure multiple databases as different tools and query them. It seems possible, but in my case, what ever question I ask, it always goes to the first Tool. Not sure what is the problem.\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7581/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7581/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7580",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7580/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7580/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7580/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7580",
        "id": 1800185780,
        "node_id": "PR_kwDOIPDwls5VRM5A",
        "number": 7580,
        "title": "Harrison/pg vector move",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T05:01:28Z",
        "updated_at": "2023-07-12T06:22:35Z",
        "closed_at": "2023-07-12T06:22:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7580",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7580",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7580.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7580.patch",
            "merged_at": "2023-07-12T06:22:34Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7580/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7580/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7579",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7579/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7579/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7579/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7579",
        "id": 1800138889,
        "node_id": "I_kwDOIPDwls5rS_CJ",
        "number": 7579,
        "title": "sqlalchemy fails to initialize with KeyError \"EmbeddingStore\"",
        "user": {
            "login": "liangz1",
            "id": 7851093,
            "node_id": "MDQ6VXNlcjc4NTEwOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7851093?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liangz1",
            "html_url": "https://github.com/liangz1",
            "followers_url": "https://api.github.com/users/liangz1/followers",
            "following_url": "https://api.github.com/users/liangz1/following{/other_user}",
            "gists_url": "https://api.github.com/users/liangz1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liangz1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liangz1/subscriptions",
            "organizations_url": "https://api.github.com/users/liangz1/orgs",
            "repos_url": "https://api.github.com/users/liangz1/repos",
            "events_url": "https://api.github.com/users/liangz1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liangz1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T04:18:26Z",
        "updated_at": "2023-07-12T07:35:27Z",
        "closed_at": "2023-07-12T07:35:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Why do I care about this issue?\r\nMLflow also uses sqlalchemy to handle sqlite-based storage, and calls `sqlalchemy.orm.configure_mappers()` during initialization. With langchain>=0.0.228, MLflow fails to start. All MLflow users who choose sqlite-based storage cannot use it with langchain. \r\n\r\n### System Info\r\n\r\nlangchain>=0.0.228\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nExecuting the following command fails with langchain >= 0.0.228, and no error occurs for langchain <= 0.0.227:\r\n```python\r\nimport langchain\r\nimport sqlalchemy\r\nsqlalchemy.orm.configure_mappers()\r\n```\r\nError:\r\n```\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\nFile ~/miniconda3/envs/mlflow-dev-env/lib/python3.8/site-packages/sqlalchemy/orm/clsregistry.py:515, in _class_resolver._resolve_name(self)\r\n    514 if rval is None:\r\n--> 515     rval = d[token]\r\n    516 else:\r\n\r\nFile ~/miniconda3/envs/mlflow-dev-env/lib/python3.8/site-packages/sqlalchemy/util/_collections.py:346, in PopulateDict.__missing__(self, key)\r\n    345 def __missing__(self, key: Any) -> Any:\r\n--> 346     self[key] = val = self.creator(key)\r\n    347     return val\r\n\r\nFile ~/miniconda3/envs/mlflow-dev-env/lib/python3.8/site-packages/sqlalchemy/orm/clsregistry.py:483, in _class_resolver._access_cls(self, key)\r\n    481             return value\r\n--> 483 return self.fallback[key]\r\n\r\nKeyError: 'EmbeddingStore'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nInvalidRequestError                       Traceback (most recent call last)\r\nCell In[3], line 1\r\n----> 1 sqlalchemy.orm.configure_mappers()\r\n\r\nFile ~/miniconda3/envs/mlflow-dev-env/lib/python3.8/site-packages/sqlalchemy/orm/mapper.py:4167, in configure_mappers()\r\n   4099 def configure_mappers():\r\n   4100     \"\"\"Initialize the inter-mapper relationships of all mappers that\r\n   4101     have been constructed thus far across all :class:`_orm.registry`\r\n   4102     collections.\r\n   (...)\r\n   4164\r\n   4165     \"\"\"\r\n-> 4167     _configure_registries(_all_registries(), cascade=True)\r\n\r\nFile ~/miniconda3/envs/mlflow-dev-env/lib/python3.8/site-packages/sqlalchemy/orm/mapper.py:4198, in _configure_registries(registries, cascade)\r\n   4192     Mapper.dispatch._for_class(Mapper).before_configured()  # type: ignore # noqa: E501\r\n   4193     # initialize properties on all mappers\r\n   4194     # note that _mapper_registry is unordered, which\r\n   4195     # may randomly conceal/reveal issues related to\r\n   4196     # the order of mapper compilation\r\n-> 4198     _do_configure_registries(registries, cascade)\r\n   4199 finally:\r\n   4200     _already_compiling = False\r\n\r\nFile ~/miniconda3/envs/mlflow-dev-env/lib/python3.8/site-packages/sqlalchemy/orm/mapper.py:4239, in _do_configure_registries(registries, cascade)\r\n   4237 if not mapper.configured:\r\n   4238     try:\r\n-> 4239         mapper._post_configure_properties()\r\n   4240         mapper._expire_memoizations()\r\n   4241         mapper.dispatch.mapper_configured(mapper, mapper.class_)\r\n\r\nFile ~/miniconda3/envs/mlflow-dev-env/lib/python3.8/site-packages/sqlalchemy/orm/mapper.py:2403, in Mapper._post_configure_properties(self)\r\n   2400 self._log(\"initialize prop %s\", key)\r\n   2402 if prop.parent is self and not prop._configure_started:\r\n-> 2403     prop.init()\r\n   2405 if prop._configure_finished:\r\n   2406     prop.post_instrument_class(self)\r\n\r\nFile ~/miniconda3/envs/mlflow-dev-env/lib/python3.8/site-packages/sqlalchemy/orm/interfaces.py:578, in MapperProperty.init(self)\r\n    571 \"\"\"Called after all mappers are created to assemble\r\n    572 relationships between mappers and perform other post-mapper-creation\r\n    573 initialization steps.\r\n    574\r\n    575\r\n    576 \"\"\"\r\n    577 self._configure_started = True\r\n--> 578 self.do_init()\r\n    579 self._configure_finished = True\r\n\r\nFile ~/miniconda3/envs/mlflow-dev-env/lib/python3.8/site-packages/sqlalchemy/orm/relationships.py:1632, in RelationshipProperty.do_init(self)\r\n   1630 self._check_conflicts()\r\n   1631 self._process_dependent_arguments()\r\n-> 1632 self._setup_entity()\r\n   1633 self._setup_registry_dependencies()\r\n   1634 self._setup_join_conditions()\r\n\r\nFile ~/miniconda3/envs/mlflow-dev-env/lib/python3.8/site-packages/sqlalchemy/orm/relationships.py:1849, in RelationshipProperty._setup_entity(self, _RelationshipProperty__argument)\r\n   1842 resolved_argument: _ExternalEntityType[Any]\r\n   1844 if isinstance(argument, str):\r\n   1845     # we might want to cleanup clsregistry API to make this\r\n   1846     # more straightforward\r\n   1847     resolved_argument = cast(\r\n   1848         \"_ExternalEntityType[Any]\",\r\n-> 1849         self._clsregistry_resolve_name(argument)(),\r\n   1850     )\r\n   1851 elif callable(argument) and not isinstance(\r\n   1852     argument, (type, mapperlib.Mapper)\r\n   1853 ):\r\n   1854     resolved_argument = argument()\r\n\r\nFile ~/miniconda3/envs/mlflow-dev-env/lib/python3.8/site-packages/sqlalchemy/orm/clsregistry.py:519, in _class_resolver._resolve_name(self)\r\n    517             rval = getattr(rval, token)\r\n    518 except KeyError as err:\r\n--> 519     self._raise_for_name(name, err)\r\n    520 except NameError as n:\r\n    521     self._raise_for_name(n.args[0], n)\r\n\r\nFile ~/miniconda3/envs/mlflow-dev-env/lib/python3.8/site-packages/sqlalchemy/orm/clsregistry.py:500, in _class_resolver._raise_for_name(self, name, err)\r\n    490     raise exc.InvalidRequestError(\r\n    491         f\"When initializing mapper {self.prop.parent}, \"\r\n    492         f'expression \"relationship({self.arg!r})\" seems to be '\r\n   (...)\r\n    497         f\"['{clsarg}']] = relationship()\\\"\"\r\n    498     ) from err\r\n    499 else:\r\n--> 500     raise exc.InvalidRequestError(\r\n    501         \"When initializing mapper %s, expression %r failed to \"\r\n    502         \"locate a name (%r). If this is a class name, consider \"\r\n    503         \"adding this relationship() to the %r class after \"\r\n    504         \"both dependent classes have been defined.\"\r\n    505         % (self.prop.parent, self.arg, name, self.cls)\r\n    506     ) from err\r\n\r\nInvalidRequestError: When initializing mapper Mapper[CollectionStore(langchain_pg_collection)], expression 'EmbeddingStore' failed to locate a name ('EmbeddingStore'). If this is a class name, consider adding this relationship() to the <class 'langchain.vectorstores.pgvector.CollectionStore'> class after both dependent classes have been defined.\r\n```\r\nIt's likely to be introduced by this PR https://github.com/hwchase17/langchain/pull/7370.\r\n\r\n### Expected behavior\r\n\r\nNo error should occur.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7579/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7579/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7578",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7578/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7578/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7578/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7578",
        "id": 1800131260,
        "node_id": "I_kwDOIPDwls5rS9K8",
        "number": 7578,
        "title": "chain.run doesn't necessarily return a `str`",
        "user": {
            "login": "Connoropolous",
            "id": 1409121,
            "node_id": "MDQ6VXNlcjE0MDkxMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1409121?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Connoropolous",
            "html_url": "https://github.com/Connoropolous",
            "followers_url": "https://api.github.com/users/Connoropolous/followers",
            "following_url": "https://api.github.com/users/Connoropolous/following{/other_user}",
            "gists_url": "https://api.github.com/users/Connoropolous/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Connoropolous/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Connoropolous/subscriptions",
            "organizations_url": "https://api.github.com/users/Connoropolous/orgs",
            "repos_url": "https://api.github.com/users/Connoropolous/repos",
            "events_url": "https://api.github.com/users/Connoropolous/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Connoropolous/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 16,
        "created_at": "2023-07-12T04:11:51Z",
        "updated_at": "2023-10-13T02:31:07Z",
        "closed_at": "2023-10-13T02:30:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/hwchase17/langchain/blob/2667ddc6867421842fe027f1946644f452de8eb3/langchain/chains/base.py#L386-L393\r\n\r\nwhen I have this:\r\n```\r\nchain = create_structured_output_chain(Categorization, llm, prompt, verbose=True)\r\nresponse = chain.run(trx_description)\r\n```\r\nmy `response` object is a dict not a str, but I got misled by the type assistance making me think it was a str. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7578/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7578/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7577",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7577/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7577/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7577/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7577",
        "id": 1800069048,
        "node_id": "I_kwDOIPDwls5rSt-4",
        "number": 7577,
        "title": "PGVector.from_documents breaking from 0.0.229 to 0.0.230",
        "user": {
            "login": "dcieslak19973",
            "id": 3847063,
            "node_id": "MDQ6VXNlcjM4NDcwNjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3847063?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dcieslak19973",
            "html_url": "https://github.com/dcieslak19973",
            "followers_url": "https://api.github.com/users/dcieslak19973/followers",
            "following_url": "https://api.github.com/users/dcieslak19973/following{/other_user}",
            "gists_url": "https://api.github.com/users/dcieslak19973/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dcieslak19973/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dcieslak19973/subscriptions",
            "organizations_url": "https://api.github.com/users/dcieslak19973/orgs",
            "repos_url": "https://api.github.com/users/dcieslak19973/repos",
            "events_url": "https://api.github.com/users/dcieslak19973/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dcieslak19973/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-12T02:50:01Z",
        "updated_at": "2023-07-13T03:26:29Z",
        "closed_at": "2023-07-13T03:26:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain==0.0.230\r\n\r\n### Who can help?\r\n\r\n@raymond-yuan \r\n\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nFill in appropriate values for parameters\r\n```\r\ndb = PGVector.from_documents(\r\n    embedding=embeddings,\r\n    documents=docs,\r\n    collection_name=COLLECTION_NAME,\r\n    connection_string=CONNECTION_STRING,\r\n    pre_delete_collection=True,\r\n)\r\n```\r\n\r\nProduces:\r\n```\r\nTraceback (most recent call last):\r\n  File \"create_pgvector_index_hr.py\", line 70, in <module>\r\n    db = PGVector.from_documents(\r\n  File \"/home/coder/venv-openai-slackbot/lib/python3.8/site-packages/langchain/vectorstores/pgvector.py\", line 578, in from_documents\r\n    return cls.from_texts(\r\n  File \"/home/coder/venv-openai-slackbot/lib/python3.8/site-packages/langchain/vectorstores/pgvector.py\", line 453, in from_texts\r\n    return cls.__from(\r\n  File \"/home/coder/venv-openai-slackbot/lib/python3.8/site-packages/langchain/vectorstores/pgvector.py\", line 213, in __from\r\n    store = cls(\r\nTypeError: ABCMeta object got multiple values for keyword argument 'connection_string'\r\n```\r\n\r\nand appears related to this change: https://github.com/hwchase17/langchain/blame/master/langchain/vectorstores/pgvector.py#L213-L220\r\n\r\n### Expected behavior\r\n\r\nAbove code works with langchain==0.0.229\r\n\r\nCode should not throw an exception as it did prior to 0.0.230",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7577/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7577/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7576",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7576/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7576/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7576/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7576",
        "id": 1800037371,
        "node_id": "PR_kwDOIPDwls5VQstf",
        "number": 7576,
        "title": "added id retrieval from redis search setup within the metadata",
        "user": {
            "login": "TRY-ER",
            "id": 75255871,
            "node_id": "MDQ6VXNlcjc1MjU1ODcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/75255871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TRY-ER",
            "html_url": "https://github.com/TRY-ER",
            "followers_url": "https://api.github.com/users/TRY-ER/followers",
            "following_url": "https://api.github.com/users/TRY-ER/following{/other_user}",
            "gists_url": "https://api.github.com/users/TRY-ER/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TRY-ER/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TRY-ER/subscriptions",
            "organizations_url": "https://api.github.com/users/TRY-ER/orgs",
            "repos_url": "https://api.github.com/users/TRY-ER/repos",
            "events_url": "https://api.github.com/users/TRY-ER/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TRY-ER/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-12T02:12:07Z",
        "updated_at": "2023-07-18T17:50:57Z",
        "closed_at": "2023-07-18T17:50:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7576",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7576",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7576.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7576.patch",
            "merged_at": null
        },
        "body": "Replace this comment with:\r\n  - Description: The modification is done to retrieve the document ids from the relevant document vector search in redis \r\n  - Issue: It helps to point out the exact document for down stream operations later\r\n  - Tag maintainer: @rlancemartin, @eyurtsev\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7576/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7576/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7575",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7575/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7575/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7575/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7575",
        "id": 1800025152,
        "node_id": "PR_kwDOIPDwls5VQqJ1",
        "number": 7575,
        "title": "Reduce the number of LLM parsing error with conversational chats",
        "user": {
            "login": "lesser-panda",
            "id": 40119257,
            "node_id": "MDQ6VXNlcjQwMTE5MjU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/40119257?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lesser-panda",
            "html_url": "https://github.com/lesser-panda",
            "followers_url": "https://api.github.com/users/lesser-panda/followers",
            "following_url": "https://api.github.com/users/lesser-panda/following{/other_user}",
            "gists_url": "https://api.github.com/users/lesser-panda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lesser-panda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lesser-panda/subscriptions",
            "organizations_url": "https://api.github.com/users/lesser-panda/orgs",
            "repos_url": "https://api.github.com/users/lesser-panda/repos",
            "events_url": "https://api.github.com/users/lesser-panda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lesser-panda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-12T01:54:52Z",
        "updated_at": "2023-09-19T02:16:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7575",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7575",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7575.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7575.patch",
            "merged_at": null
        },
        "body": "A lot of times, when the LLM responses a Final Answer with markdown in the answer text (e.g. asking the LLM to write some code), the parser raises an OutputParserException(\"Could not parse LLM output: ...\"), when the answer from the LLM is totally acceptable.\r\n\r\nThis change should reduce the number of such occurances.\r\n\r\n\r\n  - Description: Reduce the number of LLM parsing error with conversational chats, \r\n  - Issue: the issue #1358 ,\r\n  - Dependencies: None,\r\n  - Tag maintainer: @hinthornw @baskaryan,\r\n \r\nFor example, this response from gpt-turbo-3.5 for \"How to convert a list of dict to a JSON in Python\" seems totally acceptable as the final answer, but will raise the OutputParserException, even with `handle_parsing_errors=True`. This PR fixes it.\r\n![Screenshot 2023-07-12 101547](https://github.com/hwchase17/langchain/assets/40119257/f87555b2-7782-4274-a714-72c11082df98)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7575/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7575/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7573",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7573/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7573/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7573/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7573",
        "id": 1799954933,
        "node_id": "PR_kwDOIPDwls5VQbQi",
        "number": 7573,
        "title": "Fixed bug7445  where a duplicate restuld_id is added to the vectorstore.",
        "user": {
            "login": "datha",
            "id": 457276,
            "node_id": "MDQ6VXNlcjQ1NzI3Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/457276?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/datha",
            "html_url": "https://github.com/datha",
            "followers_url": "https://api.github.com/users/datha/followers",
            "following_url": "https://api.github.com/users/datha/following{/other_user}",
            "gists_url": "https://api.github.com/users/datha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/datha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/datha/subscriptions",
            "organizations_url": "https://api.github.com/users/datha/orgs",
            "repos_url": "https://api.github.com/users/datha/repos",
            "events_url": "https://api.github.com/users/datha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/datha/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T00:24:07Z",
        "updated_at": "2023-08-01T01:00:02Z",
        "closed_at": "2023-08-01T01:00:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7573",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7573",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7573.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7573.patch",
            "merged_at": "2023-08-01T01:00:02Z"
        },
        "body": "\r\n  - Description: updated BabyAGI examples to append the iteration to the result id to fix error storing data to vectorstore. \r\n  - Issue: 7445\r\n  - Dependencies: no\r\n  - Tag maintainer: @eyurtsev\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nThis fix worked for me locally. Happy to take some feedback and iterate on a better solution. I was considering appending a uuid instead but didnt want to over complicate the example.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7573/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7573/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7572",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7572/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7572/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7572/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7572",
        "id": 1799951224,
        "node_id": "PR_kwDOIPDwls5VQab1",
        "number": 7572,
        "title": "Return run info from run evaluator",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T00:20:07Z",
        "updated_at": "2023-07-13T05:06:36Z",
        "closed_at": "2023-07-13T05:06:35Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7572",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7572",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7572.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7572.patch",
            "merged_at": "2023-07-13T05:06:35Z"
        },
        "body": "Optionally return run info. This is added to the feedback to link feedback and source run.\r\n\r\nDepends on the new loading and config workflow slightly",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7572/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7572/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7571",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7571/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7571/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7571/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7571",
        "id": 1799948758,
        "node_id": "I_kwDOIPDwls5rSQnW",
        "number": 7571,
        "title": "AmazonKendraRetriever \"Could not load credentials\" error in latest release",
        "user": {
            "login": "sean-beath",
            "id": 102204618,
            "node_id": "U_kgDOBheEyg",
            "avatar_url": "https://avatars.githubusercontent.com/u/102204618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sean-beath",
            "html_url": "https://github.com/sean-beath",
            "followers_url": "https://api.github.com/users/sean-beath/followers",
            "following_url": "https://api.github.com/users/sean-beath/following{/other_user}",
            "gists_url": "https://api.github.com/users/sean-beath/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sean-beath/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sean-beath/subscriptions",
            "organizations_url": "https://api.github.com/users/sean-beath/orgs",
            "repos_url": "https://api.github.com/users/sean-beath/repos",
            "events_url": "https://api.github.com/users/sean-beath/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sean-beath/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-12T00:16:40Z",
        "updated_at": "2023-07-13T03:47:37Z",
        "closed_at": "2023-07-13T03:47:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version: 0.0.229\r\nPlatform: AWS Lambda execution\r\nPython version: 3.9\r\n\r\nI get the following error when creating the AmazonKendraRetriever using LangChain version 0.0.229. \r\nCode to create retriever:\r\n    `retriever = AmazonKendraRetriever(index_id=kendra_index)`\r\n\r\nError:\r\n```[ERROR] ValidationError: 1 validation error for AmazonKendraRetriever\r\n__root__\r\n  Could not load credentials to authenticate with AWS client. Please check that credentials in the specified profile name are valid. (type=value_error)\r\nTraceback (most recent call last):\r\n  File \"/var/task/lambda_function.py\", line 171, in lambda_handler\r\n    retriever = AmazonKendraRetriever(index_id=kendra_index)\r\n  File \"/opt/python/langchain/load/serializable.py\", line 74, in __init__\r\n    super().__init__(**kwargs)\r\n  File \"pydantic/main.py\", line 341, in pydantic.main.BaseModel.__init__```\r\n\r\n\r\nWhen using LangChain version 0.0.219 this error does not occur.\r\n\r\nIssue also raised on aws-samples git repo with potential solution: https://github.com/aws-samples/amazon-kendra-langchain-extensions/issues/24 \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Install latest version of Langchain\r\n2. Follow instructions here: https://python.langchain.com/docs/modules/data_connection/retrievers/integrations/amazon_kendra_retriever\n\n### Expected behavior\n\nError not thrown when creating AmazonKendraRetriever",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7571/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7571/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7570",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7570/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7570/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7570/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7570",
        "id": 1799939695,
        "node_id": "PR_kwDOIPDwls5VQX6e",
        "number": 7570,
        "title": "add supported properties for notiondb document loader's metadata",
        "user": {
            "login": "KimHyeonwoo",
            "id": 15873399,
            "node_id": "MDQ6VXNlcjE1ODczMzk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15873399?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KimHyeonwoo",
            "html_url": "https://github.com/KimHyeonwoo",
            "followers_url": "https://api.github.com/users/KimHyeonwoo/followers",
            "following_url": "https://api.github.com/users/KimHyeonwoo/following{/other_user}",
            "gists_url": "https://api.github.com/users/KimHyeonwoo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KimHyeonwoo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KimHyeonwoo/subscriptions",
            "organizations_url": "https://api.github.com/users/KimHyeonwoo/orgs",
            "repos_url": "https://api.github.com/users/KimHyeonwoo/repos",
            "events_url": "https://api.github.com/users/KimHyeonwoo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KimHyeonwoo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-12T00:05:05Z",
        "updated_at": "2023-07-12T07:34:55Z",
        "closed_at": "2023-07-12T07:34:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7570",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7570",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7570.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7570.patch",
            "merged_at": "2023-07-12T07:34:55Z"
        },
        "body": "fix #7569\r\n\r\nadd following properties for Notion DB document loader's metadata\r\n- `unique_id`\r\n- `status`\r\n- `people`\r\n\r\n@rlancemartin, @eyurtsev (Since this is a change related to `DataLoaders`)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7570/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7570/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7569",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7569/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7569/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7569/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7569",
        "id": 1799937363,
        "node_id": "I_kwDOIPDwls5rSN1T",
        "number": 7569,
        "title": "Issue: Document loader for Notion DB doesn't supports some properties",
        "user": {
            "login": "KimHyeonwoo",
            "id": 15873399,
            "node_id": "MDQ6VXNlcjE1ODczMzk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15873399?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KimHyeonwoo",
            "html_url": "https://github.com/KimHyeonwoo",
            "followers_url": "https://api.github.com/users/KimHyeonwoo/followers",
            "following_url": "https://api.github.com/users/KimHyeonwoo/following{/other_user}",
            "gists_url": "https://api.github.com/users/KimHyeonwoo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KimHyeonwoo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KimHyeonwoo/subscriptions",
            "organizations_url": "https://api.github.com/users/KimHyeonwoo/orgs",
            "repos_url": "https://api.github.com/users/KimHyeonwoo/repos",
            "events_url": "https://api.github.com/users/KimHyeonwoo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KimHyeonwoo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-12T00:02:03Z",
        "updated_at": "2023-07-12T07:34:56Z",
        "closed_at": "2023-07-12T07:34:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nCurrent version of document loader for Notion DB doesn't supports following properties for metadata\r\n\r\n- `unique_id`\r\n  - https://www.notion.so/help/unique-id\r\n- `status`\r\n  - https://www.notion.so/help/guides/status-property-gives-clarity-on-tasks\r\n- `people`\r\n  - useful property when you assign some task to assignees\n\n### Suggestion:\n\nI would like to make a PR to fix this issue if it's okay.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7569/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7569/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7568",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7568/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7568/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7568/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7568",
        "id": 1799921555,
        "node_id": "PR_kwDOIPDwls5VQT8-",
        "number": 7568,
        "title": "Make recursive loader yield while crawling",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-11T23:41:16Z",
        "updated_at": "2023-07-14T04:55:21Z",
        "closed_at": "2023-07-14T04:55:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7568",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7568",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7568.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7568.patch",
            "merged_at": "2023-07-14T04:55:21Z"
        },
        "body": "Support actual lazy_load since it can take a while to crawl larger directories.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7568/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7568/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7567",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7567/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7567/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7567/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7567",
        "id": 1799918725,
        "node_id": "PR_kwDOIPDwls5VQTV7",
        "number": 7567,
        "title": "Accept Chain",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-11T23:37:47Z",
        "updated_at": "2023-07-13T07:22:35Z",
        "closed_at": "2023-07-13T07:22:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7567",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7567",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7567.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7567.patch",
            "merged_at": "2023-07-13T07:22:34Z"
        },
        "body": "By default, the run_on_evaluate method requires chains to be passed in via a constructor. If you're not looking at function types, it's common to try to pass your chain in directly. This PR proposes to\r\n- Accept a raw chain if it lacks memory. It may still be leaky if a child chain has memory (or for other sources of randomness), but that could also be the case if the constructor were incorrectly set up\r\n- Throw a helpful error if not, explaining how to fix and why this is a requirement.\r\n\r\nI don't update the public API types since we still want people to be in the habit of passing in the constructor, but this feels like a kinder UX\r\n\r\nDelta from the general eval config refactor but not directly related",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7567/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7567/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7566",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7566/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7566/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7566/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7566",
        "id": 1799819592,
        "node_id": "PR_kwDOIPDwls5VP9PC",
        "number": 7566,
        "title": "Revert pinecone v4 support",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-11T22:03:40Z",
        "updated_at": "2023-07-12T00:59:00Z",
        "closed_at": "2023-07-12T00:58:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7566",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7566",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7566.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7566.patch",
            "merged_at": "2023-07-12T00:58:59Z"
        },
        "body": "Revert 9d13dcd",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7566/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7566/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]